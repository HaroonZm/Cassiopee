================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def solve():
    input = sys.stdin.readline
    while True:
        N = int(input())
        if N == 0:
            break
        HP = list(map(int, input().split()))
        M = int(input())
        spells = []
        for _ in range(M):
            parts = input().split()
            name = parts[0]
            MP = int(parts[1])
            target = parts[2]
            dmg = int(parts[3])
            spells.append((MP, target, dmg))

        # We want minimal magic power used
        # Two types of spells:
        # - Single target: damage applies to one monster
        # - All target: damage applies to all monsters simultaneously

        # Approach:
        # Use binary search on total magic power cost to find minimal cost to kill all monsters
        # For a given magic power limit, check if it's possible to kill all monsters

        # But since spell consumption is small (max MP<=99), and monsters HP upto 1e5, DP on states is impossible.

        # Alternative approach:
        # For each monster, compute the minimal MP needed to kill it with single-target spells only
        # For all-target spells, their effect is global, we can apply them multiple times and sum cost

        # Let's define:
        # - best_single_mp[i]: minimal MP to kill monster i using only single-target spells
        # - We'll try all combinations of number of times to cast each 'All' spell (can be from 0 to max times)
        # For each combination of "All" spells usage, monsters HP get reduced accordingly
        # Remaining HP to kill (all monsters that survive) must be killed by single target spells.

        # Since number of 'All' spells M ≤ 100, but their usage count can be large, we cannot try all

        # Another idea:
        # Use formula and optimization:
        # Since 'All' spells impact all monsters, we can try to combine them in any way:
        # The damage of "All" spells sum up linearly, cost sums up linearly.
        # So, we want to find the minimal total MP for sum of "All" spells usages to reduce all monsters HP as much as possible.

        # Let's try with the linear programming approach simplified:
        # We only need to find min sum of (all_spells_usage_j * MP_j) such that for each monster:
        # HP[i] - sum(all_spells_usage_j * damage_j) ≤ 0 or ≤ residual to be killed by single-target spells with cost best_single_mp[i]
        # So, after applying all-spells usages, residual HP[i]_left = max(0, HP[i] - sum_all_spells_damage)
        # Then sum over i best_single_mp[i] to kill remains
        # The total cost = sum_all_spells_usages_MP + sum residual single-target cost

        # Thus, try all combinations of "all" spells usages? impossible

        # Because all spells are integer cost and damage, and all spells usage counts must be integers,
        # and damages and costs arbitrary.

        # We'll use a knapsack-like approach for all-spells:
        # Since MP_j ≤99, max damage can be high (up to 999999).
        # But number of monsters ≤100 and their HP ≤100000.

        # Let's consider only the "All" spells, we'll try all possible sums of damage and corresponding minimal MP cost.

        # For each possible total damage D (applied to all monsters), minimal cost is computed.

        # Then for given D, the residual HP[i] are HP[i]-D (min 0), sum single cost accordingly.
        # We take minimal MP cost over all possible D.

        # To limit the search space, we note the maximum HP maxHP = max(HP)
        maxHP = max(HP)
        all_spells = [s for s in spells if s[1] == "All" and s[2] > 0]
        single_spells = [s for s in spells if s[1] == "Single" and s[2] > 0]

        # Precompute best_single_mp[i]: minimal MP to kill monster i with single spells
        INF = 10**15
        best_single_mp = [INF]*N
        for mp, _, dmg in single_spells:
            for i, hp in enumerate(HP):
                # Number of hits needed is ceil(hp/dmg)
                hits = (hp + dmg -1)//dmg
                cost = hits * mp
                if cost < best_single_mp[i]:
                    best_single_mp[i] = cost

        # If no single spells, best_single_mp might remain INF, but problem states at least one spell >0 damage.
        # So single spells may all be "All" spells only, need to check.

        # If no single spells, best_single_mp[i] = INF, then all monsters must be killed by All spells only.

        if not all_spells:
            # Only single spells: sum best_single_mp[i]
            # but if some best_single_mp[i] is INF, print INF?
            # Problem guaranteed at least one spell with damage >0, so pass
            print(sum(best_single_mp))
            continue

        # DP for all_spells:
        # We want minimal cost to get total damage D (applied to all monsters)
        # D can go max to maxHP (no need above maxHP)
        dp = [INF]*(maxHP+1)
        dp[0] = 0
        for mp, _, dmg in all_spells:
            for d in range(dmg, maxHP+1):
                if dp[d - dmg] + mp < dp[d]:
                    dp[d] = dp[d - dmg] + mp
            # Because multiple usage allowed, unbounded knapsack
            # Do unbounded knapsack:
            # Repeat enough times:
            # We'll implement optimized unbounded knapsack
            # Actually above is 0/1 knapsack, need unbounded:
            # So unbounded knapsack: for d in [dmg..maxHP]: dp[d] = min(dp[d], dp[d - dmg] + mp)
            for d in range(dmg, maxHP+1):
                if dp[d - dmg] + mp < dp[d]:
                    dp[d] = dp[d - dmg] + mp

        # However, above code runs dp update twice (waste), fix to one:
        # Let's redo dp:
        dp = [INF]*(maxHP+1)
        dp[0] = 0
        for mp, _, dmg in all_spells:
            for d in range(dmg, maxHP+1):
                if dp[d - dmg] + mp < dp[d]:
                    dp[d] = dp[d - dmg] + mp
            # But this is 0/1 knapsack, we need unbounded knapsack correctly:
            # For unbounded knapsack:
            # For each spell
            # for d in range(dmg,maxHP+1):
            #      dp[d] = min(dp[d], dp[d-dmg] + mp)
            # We must do for d in dmg..maxHP for each spell:
        # Re-implement unbounded knapsack properly:
        dp = [INF]*(maxHP+1)
        dp[0] = 0
        for mp, _, dmg in all_spells:
            for d in range(dmg, maxHP+1):
                if dp[d-dmg] + mp < dp[d]:
                    dp[d] = dp[d-dmg] + mp
            # We need multiple passes because of dp dependencies:
            # For unbounded knapsack, process from dmg to maxHP, single pass is enough:
            # But spells can be used unlimited times

        # Because we modified dp on the fly, need to do repeated until no changes? 
        # Normally unbounded knapsack single pass suffices if we process d from dmg to maxHP:
        # Let's do as usual:
        for mp, _, dmg in all_spells:
            for d in range(dmg, maxHP+1):
                if dp[d-dmg] + mp < dp[d]:
                    dp[d] = dp[d-dmg] + mp

        # Now dp[d] = minimal all-target spells MP cost to do damage d to all monsters

        # For each possible damage d, compute total cost = dp[d] + sum over monsters max(0, best_single_mp after reducing HP by d)

        # For best_single_mp[i], we precompute per monster and damage d, the minimal cost to kill residual HP: HP[i]-d
        # Because single spells usage count can vary, and best_single_mp[i] was precomputed for HP[i], 
        # but for residual HP[i]-d (could be 0 or less), need to recompute cost.

        # But single spells cost is linear in hits:
        # For each single spell, cost to reduce h HP is ceil(h/dmg) * mp

        # For all monsters, for each d in 0..maxHP:

        # For each monster i, residual = max(0, HP[i] - d)

        # For each monster i, cost to kill residual with single spells is min over all single spells of ceil(residual/dmg)*mp

        # We'll precompute for all monsters, for each residual HP from 0..maxHP, minimal cost

        # First precompute single spell damages and MPs arrays

        single_dmg_mp = [(mp, dmg) for mp, _, dmg in single_spells]
        # For any monster, best cost for HP h is min of ceil(h/dmg)*mp over single spells

        # Precompute for residual HP 0..maxHP for all monsters individually is expensive (N max 100 * maxHP 1e5 = 1e7)

        # Instead, since all monsters have HP ≤ maxHP ≤ 1e5, and number of monsters max 100, in total 1e7 operations may be possible but tight.

        # Alternatively optimize:
        # For each single spell, their cost function is linear and piecewise:

        # ceil(h/dmg)*mp = ((h + dmg -1)//dmg)*mp

        # For residual h, minimal over all spells

        # We'll precompute minimal single_spell cost per HP 0..maxHP once

        min_single_cost_for_HP = [INF]*(maxHP+1)
        for h in range(maxHP+1):
            c = INF
            for mp, dmg in single_dmg_mp:
                hits = (h + dmg -1)//dmg if h > 0 else 0
                cost = hits * mp
                if cost < c:
                    c = cost
            min_single_cost_for_HP[h] = c

        # For each possible d (damage from all spells), total cost = dp[d] + sum over i min_single_cost_for_HP[max(0, HP[i]-d)]

        ans = INF
        for d in range(maxHP+1):
            if dp[d] == INF:
                continue
            total = dp[d]
            for hp in HP:
                residual = hp - d
                if residual < 0:
                    residual = 0
                total += min_single_cost_for_HP[residual]
                if total >= ans:  # early stop
                    break
            if total < ans:
                ans = total
        print(ans)

if __name__ == "__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5945609211921692
    2. '.' → logprob: -0.9695609211921692
    3. 'import' → logprob: -3.8445608615875244
    4. 'newline' → logprob: -4.2195611000061035
    5. '\' → logprob: -4.7195611000061035
    6. '<|end|>' → logprob: -4.8445611000061035
    7. '```' → logprob: -5.3445611000061035
    8. '
' → logprob: -5.7195611000061035
    9. '<|end|>' → logprob: -6.4695611000061035
    10. '' → logprob: -6.4695611000061035

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0001601539261173457
    2. 'os' → logprob: -8.750160217285156
    3. ' math' → logprob: -14.250160217285156
    4. '"os' → logprob: -15.125160217285156
    5. ' re' → logprob: -15.250160217285156
    6. ' json' → logprob: -15.875160217285156
    7. ' ' → logprob: -16.250160217285156
    8. '	os' → logprob: -16.500160217285156
    9. ' o' → logprob: -16.625160217285156
    10. '_os' → logprob: -16.750160217285156

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2752407193183899
    2. '\n' → logprob: -2.775240659713745
    3. 'import' → logprob: -3.025240659713745
    4. '<|end|>' → logprob: -3.275240659713745
    5. '\' → logprob: -3.400240659713745
    6. '
' → logprob: -3.650240659713745
    7. '```' → logprob: -4.400240898132324
    8. '

' → logprob: -5.275240898132324
    9. '<|end|>' → logprob: -5.275240898132324
    10. ',' → logprob: -5.900240898132324

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.054233431816101
    2. '\' → logprob: -1.429233431816101
    3. 'import' → logprob: -2.1792335510253906
    4. '\n' → logprob: -2.1792335510253906
    5. '```' → logprob: -2.4292335510253906
    6. 'def' → logprob: -3.4292335510253906
    7. '
' → logprob: -4.179233551025391
    8. ',' → logprob: -4.679233551025391
    9. '`' → logprob: -4.929233551025391
    10. '*' → logprob: -4.929233551025391

Token 7: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023089634254574776
    2. ' calculate' → logprob: -4.273089408874512
    3. ' factorial' → logprob: -5.773089408874512
    4. ' space' → logprob: -6.148089408874512
    5. '_' → logprob: -7.023089408874512
    6. ' math' → logprob: -7.648089408874512
    7. ' compute' → logprob: -7.898089408874512
    8. ' e' → logprob: -8.023089408874512
    9. ' calc' → logprob: -9.023089408874512
    10. ' my' → logprob: -9.023089408874512

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0034926850348711014
    2. '():' → logprob: -6.753492832183838
    3. '```' → logprob: -7.378492832183838
    4. ':' → logprob: -7.503492832183838
    5. '_' → logprob: -7.753492832183838
    6. '(:' → logprob: -9.12849235534668
    7. ' (' → logprob: -9.25349235534668
    8. '):' → logprob: -9.25349235534668
    9. '(
' → logprob: -9.62849235534668
    10. '<|end|>' → logprob: -9.87849235534668

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10567604750394821
    2. '\' → logprob: -3.4806759357452393
    3. '    ' → logprob: -3.9806759357452393
    4. ' ' → logprob: -3.9806759357452393
    5. '    
' → logprob: -4.105676174163818
    6. '\n' → logprob: -4.855676174163818
    7. ' 
' → logprob: -5.855676174163818
    8. '(' → logprob: -7.105676174163818
    9. '<|end|>' → logprob: -7.105676174163818
    10. '
' → logprob: -7.855676174163818

Token 10: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9061316251754761
    2. '    ' → logprob: -1.656131625175476
    3. ' ' → logprob: -1.906131625175476
    4. '   ' → logprob: -2.1561317443847656
    5. 'n' → logprob: -2.5311317443847656
    6. 'x' → logprob: -3.9061317443847656
    7. ' x' → logprob: -4.406131744384766
    8. ' input' → logprob: -5.781131744384766
    9. ' a' → logprob: -6.031131744384766
    10. 'a' → logprob: -6.281131744384766

Token 11: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.30461859703063965
    2. '()' → logprob: -1.6796185970306396
    3. '_data' → logprob: -2.9296185970306396
    4. '_line' → logprob: -5.179618835449219
    5. '.' → logprob: -5.304618835449219
    6. '().' → logprob: -5.679618835449219
    7. '_' → logprob: -5.804618835449219
    8. 'data' → logprob: -6.929618835449219
    9. 's' → logprob: -7.304618835449219
    10. '('' → logprob: -7.429618835449219

Token 12: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.015062903985381126
    2. 'sys' → logprob: -4.2650628089904785
    3. ' input' → logprob: -7.2650628089904785
    4. 'input' → logprob: -8.640063285827637
    5. '(sys' → logprob: -11.265063285827637
    6. '	sys' → logprob: -11.890063285827637
    7. '=sys' → logprob: -13.015063285827637
    8. ' ' → logprob: -14.640063285827637
    9. '()' → logprob: -16.51506233215332
    10. ' lambda' → logprob: -17.26506233215332

Token 13: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.35154545307159424
    2. '.readline' → logprob: -1.2265454530715942
    3. '.stdin' → logprob: -5.851545333862305
    4. '.read' → logprob: -9.726545333862305
    5. ' .' → logprob: -10.101545333862305
    6. '.stdout' → logprob: -10.601545333862305
    7. '.\' → logprob: -10.851545333862305
    8. '```' → logprob: -11.351545333862305
    9. '.readlines' → logprob: -11.601545333862305
    10. '.setdefault' → logprob: -12.101545333862305

Token 14: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00892653875052929
    2. '.read' → logprob: -4.7589263916015625
    3. '.' → logprob: -8.133926391601562
    4. '.readlines' → logprob: -11.633926391601562
    5. '.stdin' → logprob: -11.758926391601562
    6. '.buffer' → logprob: -14.008926391601562
    7. '.Read' → logprob: -15.008926391601562
    8. ' .' → logprob: -15.508926391601562
    9. 'read' → logprob: -15.883926391601562
    10. '.input' → logprob: -16.383926391601562

Token 15: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0035713263787329197
    2. '()
' → logprob: -6.128571510314941
    3. '().' → logprob: -6.753571510314941
    4. '(' → logprob: -9.003571510314941
    5. '()\' → logprob: -9.878571510314941
    6. '()

' → logprob: -11.253571510314941
    7. '(
' → logprob: -11.503571510314941
    8. ' ()' → logprob: -11.628571510314941
    9. '())' → logprob: -13.003571510314941
    10. '
' → logprob: -13.253571510314941

Token 16: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1474360227584839
    2. '   ' → logprob: -2.0224361419677734
    3. '()
' → logprob: -5.647436141967773
    4. '(' → logprob: -7.397436141967773
    5. '().' → logprob: -8.897436141967773
    6. '    
' → logprob: -9.022436141967773
    7. ' ()' → logprob: -9.397436141967773
    8. '()

' → logprob: -9.397436141967773
    9. ' ' → logprob: -10.772436141967773
    10. '())' → logprob: -10.897436141967773

Token 17: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.43676257133483887
    2. '   ' → logprob: -1.8117625713348389
    3. '()' → logprob: -2.186762571334839
    4. ' n' → logprob: -2.811762571334839
    5. 'data' → logprob: -5.061762809753418
    6. 'line' → logprob: -5.436762809753418
    7. ' line' → logprob: -6.186762809753418
    8. 's' → logprob: -6.936762809753418
    9. 'x' → logprob: -7.061762809753418
    10. 't' → logprob: -7.311762809753418

Token 18: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.002943709259852767
    2. 'True' → logprob: -6.127943515777588
    3. '(True' → logprob: -7.377943515777588
    4. ' ' → logprob: -9.002943992614746
    5. ' not' → logprob: -12.252943992614746
    6. ' (' → logprob: -13.002943992614746
    7. '()' → logprob: -14.127943992614746
    8. '  ' → logprob: -14.627943992614746
    9. ' true' → logprob: -14.752943992614746
    10. '(' → logprob: -14.877943992614746

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16529445350170135
    2. '():' → logprob: -1.9152944087982178
    3. '       ' → logprob: -6.165294647216797
    4. ' :' → logprob: -6.915294647216797
    5. '(' → logprob: -7.915294647216797
    6. '):' → logprob: -7.915294647216797
    7. ',' → logprob: -8.290294647216797
    8. '():
' → logprob: -8.415294647216797
    9. '   ' → logprob: -8.665294647216797
    10. ':**' → logprob: -8.915294647216797

Token 20: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014487717300653458
    2. '    ' → logprob: -4.5144877433776855
    3. ' ' → logprob: -6.5144877433776855
    4. '   ' → logprob: -7.1394877433776855
    5. '      ' → logprob: -8.264487266540527
    6. '        ' → logprob: -8.264487266540527
    7. '        
' → logprob: -8.514487266540527
    8. '  ' → logprob: -9.139487266540527
    9. '     ' → logprob: -9.764487266540527
    10. ' readline' → logprob: -10.264487266540527

Token 21: ' N' (ID: 478)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.036820486187934875
    2. 'line' → logprob: -3.536820411682129
    3. ' data' → logprob: -5.786820411682129
    4. 'data' → logprob: -6.286820411682129
    5. '   ' → logprob: -7.411820411682129
    6. '    ' → logprob: -7.911820411682129
    7. '       ' → logprob: -8.036820411682129
    8. ' n' → logprob: -8.161820411682129
    9. 'n' → logprob: -8.536820411682129
    10. 's' → logprob: -9.661820411682129

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02891700156033039
    2. '=' → logprob: -3.778917074203491
    3. ' ==' → logprob: -5.278916835784912
    4. ' ' → logprob: -8.15391731262207
    5. ' >' → logprob: -9.02891731262207
    6. ' :=' → logprob: -9.77891731262207
    7. '>' → logprob: -10.65391731262207
    8. '==' → logprob: -10.77891731262207
    9. '=int' → logprob: -10.90391731262207
    10. ' <' → logprob: -12.15391731262207

Token 23: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.06992131471633911
    2. ' int' → logprob: -2.9449212551116943
    3. 'input' → logprob: -4.319921493530273
    4. 'int' → logprob: -6.444921493530273
    5. ' ' → logprob: -10.319921493530273
    6. ' sys' → logprob: -13.694921493530273
    7. '=input' → logprob: -14.069921493530273
    8. '(input' → logprob: -14.819921493530273
    9. '=int' → logprob: -15.069921493530273
    10. '	input' → logprob: -15.694921493530273

Token 24: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.31368306279182434
    2. '(' → logprob: -1.313683032989502
    3. '(sys' → logprob: -7.813683032989502
    4. 'input' → logprob: -12.18868350982666
    5. '(
' → logprob: -12.68868350982666
    6. ' (' → logprob: -12.81368350982666
    7. '('' → logprob: -13.31368350982666
    8. '()' → logprob: -14.06368350982666
    9. '(System' → logprob: -14.18868350982666
    10. '(

' → logprob: -14.68868350982666

Token 25: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01610826887190342
    2. '()' → logprob: -4.26610803604126
    3. '().' → logprob: -6.26610803604126
    4. ' ())' → logprob: -11.016108512878418
    5. '()))' → logprob: -11.266108512878418
    6. '())
' → logprob: -12.516108512878418
    7. '(' → logprob: -12.641108512878418
    8. '();)' → logprob: -13.016108512878418
    9. '()]' → logprob: -13.766108512878418
    10. '()
' → logprob: -13.891108512878418

Token 26: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1489427089691162
    2. '<|end|>' → logprob: -2.398942708969116
    3. '        ' → logprob: -4.023942947387695
    4. ' ' → logprob: -4.523942947387695
    5. '    ' → logprob: -4.648942947387695
    6. '   ' → logprob: -5.273942947387695
    7. '      ' → logprob: -7.148942947387695
    8. '<|end|>' → logprob: -7.273942947387695
    9. ')' → logprob: -7.523942947387695
    10. '  ' → logprob: -7.773942947387695

Token 27: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.055133890360593796
    2. ' not' → logprob: -2.930133819580078
    3. 'N' → logprob: -8.555133819580078
    4. ' ' → logprob: -9.805133819580078
    5. 'not' → logprob: -12.555133819580078
    6. ' ' → logprob: -15.180133819580078
    7. '	N' → logprob: -17.305133819580078
    8. '  ' → logprob: -17.680133819580078
    9. '!' → logprob: -18.930133819580078
    10. '<|end|>' → logprob: -18.930133819580078

Token 29: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.012615379877388477
    2. '==' → logprob: -4.387615203857422
    3. ' <=' → logprob: -9.887615203857422
    4. ' <' → logprob: -10.137615203857422
    5. '<' → logprob: -12.512615203857422
    6. '<=' → logprob: -12.637615203857422
    7. '=' → logprob: -13.012615203857422
    8. ' ' → logprob: -13.387615203857422
    9. ' ===' → logprob: -13.887615203857422
    10. ')' → logprob: -13.887615203857422

Token 30: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16022585332393646
    2. '0' → logprob: -1.9102258682250977
    3. ' ' → logprob: -13.410225868225098
    4. '  ' → logprob: -16.41022491455078
    5. '   ' → logprob: -17.41022491455078
    6. '​' → logprob: -17.91022491455078
    7. '=' → logprob: -18.03522491455078
    8. '_' → logprob: -18.03522491455078
    9. '۰' → logprob: -18.16022491455078
    10. ' -' → logprob: -18.47272491455078

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004890497075393796
    2. ' ' → logprob: -7.625489234924316
    3. '-' → logprob: -14.125489234924316
    4. ' -' → logprob: -16.37548828125
    5. '```' → logprob: -17.37548828125
    6. '=' → logprob: -17.50048828125
    7. '   ' → logprob: -17.50048828125
    8. '  ' → logprob: -18.18798828125
    9. ')' → logprob: -18.56298828125
    10. '_' → logprob: -18.93798828125

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008529895567335188
    2. ':
' → logprob: -7.375853061676025
    3. ':return' → logprob: -9.000852584838867
    4. '       ' → logprob: -9.625852584838867
    5. '   ' → logprob: -11.250852584838867
    6. ' :' → logprob: -11.500852584838867
    7. '<|end|>' → logprob: -12.750852584838867
    8. '           ' → logprob: -12.875852584838867
    9. ' break' → logprob: -13.375852584838867
    10. '):' → logprob: -13.750852584838867

Token 33: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0619218572974205
    2. '           ' → logprob: -3.0619218349456787
    3. ':' → logprob: -4.561922073364258
    4. '   ' → logprob: -6.436922073364258
    5. '<|end|>' → logprob: -7.686922073364258
    6. '\n' → logprob: -8.811922073364258
    7. ' break' → logprob: -8.936922073364258
    8. '<|end|>' → logprob: -9.186922073364258
    9. ':
' → logprob: -9.811922073364258
    10. ':return' → logprob: -10.186922073364258

Token 34: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.46482425928115845
    2. '       ' → logprob: -1.0898241996765137
    3. 'break' (adapté à ' break') → logprob: -3.8398241996765137
    4. '           ' → logprob: -4.339824199676514
    5. '	break' → logprob: -7.964824199676514
    6. ' return' → logprob: -8.589824676513672
    7. '   ' → logprob: -8.839824676513672
    8. 'return' → logprob: -9.214824676513672
    9. '_break' → logprob: -10.089824676513672
    10. '```' → logprob: -10.214824676513672

Token 35: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' HP' (ID: 21979)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4363454580307007
    2. '<|end|>' → logprob: -2.0613455772399902
    3. ' ' → logprob: -2.1863455772399902
    4. '        ' → logprob: -2.5613455772399902
    5. '    ' → logprob: -4.43634557723999
    6. '<|end|>' → logprob: -4.68634557723999
    7. '   ' → logprob: -5.43634557723999
    8. ' 
' → logprob: -5.93634557723999
    9. '        
' → logprob: -6.18634557723999
    10. ')' → logprob: -6.68634557723999

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3400682210922241
    2. ',' → logprob: -2.0900683403015137
    3. '=' → logprob: -2.3400683403015137
    4. 's' → logprob: -2.7150683403015137
    5. '_list' → logprob: -7.465068340301514
    6. ' ,' → logprob: -8.340067863464355
    7. '_' → logprob: -8.465067863464355
    8. ')' → logprob: -8.965067863464355
    9. ' -=' → logprob: -8.965067863464355
    10. '_values' → logprob: -9.340067863464355

Token 39: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.3758007287979126
    2. '[]' → logprob: -1.5008007287979126
    3. ' list' → logprob: -2.250800609588623
    4. '[list' → logprob: -2.250800609588623
    5. 'list' → logprob: -2.375800609588623
    6. '[' → logprob: -2.500800609588623
    7. ' []' → logprob: -2.500800609588623
    8. '[int' → logprob: -3.000800609588623
    9. '[input' → logprob: -5.750800609588623
    10. '[N' → logprob: -6.000800609588623

Token 40: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013344056205824018
    2. '(map' → logprob: -7.251334190368652
    3. '(input' → logprob: -8.126334190368652
    4. '(range' → logprob: -8.501334190368652
    5. '()' → logprob: -9.501334190368652
    6. '(int' → logprob: -10.626334190368652
    7. '(
' → logprob: -12.126334190368652
    8. '(math' → logprob: -12.626334190368652
    9. '(

' → logprob: -12.876334190368652
    10. '(data' → logprob: -12.876334190368652

Token 41: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00872318260371685
    2. '(' → logprob: -4.758723258972168
    3. '(str' → logprob: -9.758723258972168
    4. '(lambda' → logprob: -10.633723258972168
    5. 'int' → logprob: -11.508723258972168
    6. '(
' → logprob: -11.883723258972168
    7. '```' → logprob: -12.758723258972168
    8. ')' → logprob: -13.758723258972168
    9. '<int' → logprob: -13.758723258972168
    10. '(float' → logprob: -13.883723258972168

Token 42: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.4171762466430664
    2. '(input' → logprob: -1.4171762466430664
    3. ',' → logprob: -2.4171762466430664
    4. '(' → logprob: -4.792176246643066
    5. ' ,' → logprob: -7.042176246643066
    6. 'input' → logprob: -9.292176246643066
    7. ',int' → logprob: -9.417176246643066
    8. '(),' → logprob: -9.917176246643066
    9. ' (' → logprob: -10.667176246643066
    10. ',(' → logprob: -11.167176246643066

Token 43: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.22543546557426453
    2. ' input' → logprob: -1.600435495376587
    3. 'lambda' → logprob: -11.725435256958008
    4. ',input' → logprob: -12.600435256958008
    5. '=input' → logprob: -12.975435256958008
    6. '(input' → logprob: -13.100435256958008
    7. '	input' → logprob: -13.225435256958008
    8. ' lambda' → logprob: -13.725435256958008
    9. ')' → logprob: -13.850435256958008
    10. 'sys' → logprob: -14.350435256958008

Token 44: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.1888679839321412e-05
    2. '()' → logprob: -10.750021934509277
    3. '())' → logprob: -16.12502098083496
    4. ' ().' → logprob: -16.37502098083496
    5. '()))' → logprob: -16.37502098083496
    6. '(' → logprob: -17.62502098083496
    7. '()));' → logprob: -17.62502098083496
    8. ')' → logprob: -18.37502098083496
    9. '())))' → logprob: -19.00002098083496
    10. '()
' → logprob: -19.00002098083496

Token 45: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.014589578844606876
    2. 'strip' → logprob: -4.264589786529541
    3. 'rstrip' → logprob: -7.764589786529541
    4. ' split' → logprob: -13.764589309692383
    5. '(split' → logprob: -14.889589309692383
    6. ' strip' → logprob: -16.889589309692383
    7. 'spl' → logprob: -17.139589309692383
    8. 'read' → logprob: -18.889589309692383
    9. 'rs' → logprob: -19.139589309692383
    10. '.split' → logprob: -19.639589309692383

Token 46: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2768552303314209
    2. '))' → logprob: -1.526855230331421
    3. '()' → logprob: -4.52685546875
    4. '())' → logprob: -4.65185546875
    5. ')' → logprob: -5.77685546875
    6. ')))' → logprob: -7.40185546875
    7. '(' → logprob: -8.15185546875
    8. '())))' → logprob: -8.52685546875
    9. '()))
' → logprob: -10.52685546875
    10. ' ))' → logprob: -11.52685546875

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33184993267059326
    2. '        ' → logprob: -2.331850051879883
    3. '<|end|>' → logprob: -2.581850051879883
    4. ' ' → logprob: -2.706850051879883
    5. '        
' → logprob: -3.581850051879883
    6. ')' → logprob: -5.081850051879883
    7. '    ' → logprob: -6.081850051879883
    8. ' 
' → logprob: -6.831850051879883
    9. '   ' → logprob: -7.081850051879883
    10. '  ' → logprob: -7.081850051879883

Token 48: ' M' (ID: 391)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.4540987014770508
    2. 'dp' → logprob: -2.204098701477051
    3. 'max' → logprob: -2.579098701477051
    4. '       ' → logprob: -2.579098701477051
    5. ' dp' → logprob: -2.954098701477051
    6. 'DP' → logprob: -3.204098701477051
    7. 'result' → logprob: -3.329098701477051
    8. 'd' → logprob: -3.454098701477051
    9. ' result' → logprob: -3.704098701477051
    10. ' DP' → logprob: -3.704098701477051

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008710776455700397
    2. '=' → logprob: -4.758710861206055
    3. 'ax' → logprob: -9.633710861206055
    4. ' ' → logprob: -11.883710861206055
    5. '=int' → logprob: -12.133710861206055
    6. 'a' → logprob: -12.758710861206055
    7. ',' → logprob: -13.008710861206055
    8. '   ' → logprob: -13.758710861206055
    9. ')' → logprob: -13.883710861206055
    10. '  ' → logprob: -14.258710861206055

Token 50: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.33015748858451843
    2. 'int' → logprob: -1.4551575183868408
    3. ' len' → logprob: -3.455157518386841
    4. 'len' → logprob: -4.955157279968262
    5. ' max' → logprob: -5.330157279968262
    6. ' N' → logprob: -6.830157279968262
    7. ' ' → logprob: -7.080157279968262
    8. ' math' → logprob: -7.205157279968262
    9. 'max' → logprob: -7.830157279968262
    10. ' sum' → logprob: -7.955157279968262

Token 51: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.000558512459974736
    2. '(' → logprob: -7.500558376312256
    3. ' (' → logprob: -12.250558853149414
    4. 'input' → logprob: -14.250558853149414
    5. ' input' → logprob: -16.250558853149414
    6. '=input' → logprob: -16.875558853149414
    7. '(sys' → logprob: -18.000558853149414
    8. ',input' → logprob: -18.250558853149414
    9. '	input' → logprob: -18.500558853149414
    10. '(inputs' → logprob: -18.875558853149414

Token 52: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004109392408281565
    2. '()' → logprob: -5.5041093826293945
    3. ')' → logprob: -11.004109382629395
    4. ' ())' → logprob: -11.754109382629395
    5. '()
' → logprob: -13.379109382629395
    6. '())
' → logprob: -13.504109382629395
    7. '();)' → logprob: -13.504109382629395
    8. '()))' → logprob: -14.254109382629395
    9. '(' → logprob: -14.754109382629395
    10. '().' → logprob: -15.004109382629395

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.366739958524704
    2. '        ' → logprob: -1.2417399883270264
    3. '<|end|>' → logprob: -5.491739749908447
    4. '    ' → logprob: -5.866739749908447
    5. '        
' → logprob: -5.866739749908447
    6. ' ' → logprob: -6.116739749908447
    7. 'damage' → logprob: -7.491739749908447
    8. '      ' → logprob: -7.741739749908447
    9. ')' → logprob: -8.116740226745605
    10. ' for' → logprob: -8.241740226745605

Token 54: ' spells' (ID: 69967)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.689481258392334
    2. '        ' → logprob: -1.064481258392334
    3. ' DP' → logprob: -4.064481258392334
    4. ' ' → logprob: -4.189481258392334
    5. 'result' → logprob: -4.751981258392334
    6. 'dp' → logprob: -5.001981258392334
    7. 'DP' → logprob: -5.064481258392334
    8. '    ' → logprob: -5.126981258392334
    9. '        
' → logprob: -5.189481258392334
    10. ' for' → logprob: -5.189481258392334

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019402962643653154
    2. '=' → logprob: -6.2519402503967285
    3. '_' → logprob: -11.751940727233887
    4. ' ' → logprob: -13.126940727233887
    5. ' =[' → logprob: -15.001940727233887
    6. ' =
' → logprob: -15.251940727233887
    7. ')' → logprob: -15.376940727233887
    8. '   ' → logprob: -16.00193977355957
    9. '[' → logprob: -16.00193977355957
    10. '.' → logprob: -16.25193977355957

Token 56: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.07285989075899124
    2. ' [' → logprob: -3.3228600025177
    3. '[]' → logprob: -3.4478600025177
    4. '[' → logprob: -6.322859764099121
    5. '[list' → logprob: -7.572859764099121
    6. ' list' → logprob: -10.322859764099121
    7. ' ' → logprob: -10.322859764099121
    8. 'list' → logprob: -11.447859764099121
    9. ' [[]' → logprob: -12.197859764099121
    10. '[List' → logprob: -12.947859764099121

Token 57: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.17832213640213013
    2. ' for' → logprob: -1.9283220767974854
    3. '	for' → logprob: -4.0533223152160645
    4. '\t' → logprob: -7.8033223152160645
    5. '	' → logprob: -9.803321838378906
    6. '   ' → logprob: -9.928321838378906
    7. '       ' → logprob: -10.553321838378906
    8. '    ' → logprob: -11.803321838378906
    9. ' ' → logprob: -11.803321838378906
    10. '[' → logprob: -12.303321838378906

Token 59: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0010958074126392603
    2. '_' → logprob: -7.251095771789551
    3. ' i' → logprob: -7.876095771789551
    4. ' ' → logprob: -12.50109577178955
    5. '_i' → logprob: -13.37609577178955
    6. ' ' → logprob: -14.37609577178955
    7. 'i' → logprob: -15.87609577178955
    8. ' ‌' → logprob: -16.501096725463867
    9. ' ▁' → logprob: -16.876096725463867
    10. ' ​' → logprob: -18.001096725463867

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14279843866825104
    2. 'in' → logprob: -2.01779842376709
    3. ' ' → logprob: -10.26779842376709
    4. 'i' → logprob: -10.64279842376709
    5. '	in' → logprob: -11.01779842376709
    6. 's' → logprob: -11.51779842376709
    7. 'range' → logprob: -11.64279842376709
    8. 'n' → logprob: -12.51779842376709
    9. 'import' → logprob: -13.26779842376709
    10. 'm' → logprob: -13.33029842376709

Token 61: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008101018611341715
    2. ' range' → logprob: -7.125810146331787
    3. '	range' → logprob: -12.875809669494629
    4. '(range' → logprob: -13.500809669494629
    5. 'rang' → logprob: -14.625809669494629
    6. 'ange' → logprob: -14.750809669494629
    7. 'ran' → logprob: -16.000810623168945
    8. '_range' → logprob: -16.375810623168945
    9. ')' → logprob: -16.875810623168945
    10. '.range' → logprob: -17.000810623168945

Token 62: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.35340896248817444
    2. '(' → logprob: -1.853408932685852
    3. ' M' → logprob: -2.6034090518951416
    4. ' (' → logprob: -2.7284090518951416
    5. ' ' → logprob: -7.1034088134765625
    6. '(range' → logprob: -7.9784088134765625
    7. ' range' → logprob: -9.103408813476562
    8. 'M' → logprob: -9.353408813476562
    9. '(m' → logprob: -9.853408813476562
    10. ' ()' → logprob: -10.103408813476562

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019829985685646534
    2. ' ):' → logprob: -6.751983165740967
    3. '):
' → logprob: -7.251983165740967
    4. ')' → logprob: -9.376982688903809
    5. ':' → logprob: -11.501982688903809
    6. '   ' → logprob: -13.251982688903809
    7. '):
' → logprob: -13.376982688903809
    8. ' )' → logprob: -13.376982688903809
    9. ' ):
' → logprob: -13.501982688903809
    10. ',' → logprob: -14.626982688903809

Token 64: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5714391469955444
    2. '   ' → logprob: -1.9464391469955444
    3. '<|end|>' → logprob: -2.071439266204834
    4. '           ' → logprob: -2.946439266204834
    5. '	sp' → logprob: -4.071439266204834
    6. ' sp' → logprob: -4.071439266204834
    7. 'sp' → logprob: -4.446439266204834
    8. ' ' → logprob: -4.571439266204834
    9. '(sp' → logprob: -4.696439266204834
    10. '<|end|>' → logprob: -4.821439266204834

Token 65: ' parts' (ID: 7881)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.5267996788024902
    2. 'a' → logprob: -1.9017996788024902
    3. 'x' → logprob: -2.1517996788024902
    4. ' a' → logprob: -2.4017996788024902
    5. ' spells' → logprob: -2.4017996788024902
    6. ' s' → logprob: -2.7767996788024902
    7. 'd' → logprob: -2.9017996788024902
    8. 's' → logprob: -3.0267996788024902
    9. ' d' → logprob: -3.1517996788024902
    10. ' spell' → logprob: -3.6517996788024902

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009756559506058693
    2. '=' → logprob: -4.634756565093994
    3. '=input' → logprob: -15.759756088256836
    4. '[' → logprob: -16.759756088256836
    5. ' ' → logprob: -16.884756088256836
    6. '   ' → logprob: -17.134756088256836
    7. '=line' → logprob: -17.134756088256836
    8. ')' → logprob: -17.384756088256836
    9. '.' → logprob: -17.509756088256836
    10. ',' → logprob: -17.509756088256836

Token 67: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5801226496696472
    2. 'input' → logprob: -0.8301226496696472
    3. 'list' → logprob: -5.955122470855713
    4. ' list' → logprob: -6.455122470855713
    5. 'sys' → logprob: -12.830122947692871
    6. ' sys' → logprob: -12.955122947692871
    7. '=input' → logprob: -13.330122947692871
    8. ' ' → logprob: -14.330122947692871
    9. '	input' → logprob: -15.205122947692871
    10. '(input' → logprob: -15.580122947692871

Token 68: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003360582049936056
    2. '()' → logprob: -8.000335693359375
    3. ' ().' → logprob: -14.625335693359375
    4. '(' → logprob: -16.375335693359375
    5. '()).' → logprob: -17.125335693359375
    6. '()
' → logprob: -18.625335693359375
    7. '()

' → logprob: -18.875335693359375
    8. '()`' → logprob: -19.000335693359375
    9. '())' → logprob: -19.000335693359375
    10. '().'' → logprob: -19.125335693359375

Token 69: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.06203826516866684
    2. 'strip' → logprob: -2.8120381832122803
    3. 'rstrip' → logprob: -9.56203842163086
    4. ' split' → logprob: -15.43703842163086
    5. 'spl' → logprob: -16.93703842163086
    6. ' strip' → logprob: -18.93703842163086
    7. '(split' → logprob: -19.43703842163086
    8. 'rs' → logprob: -19.93703842163086
    9. 'plit' → logprob: -20.06203842163086
    10. 's' → logprob: -20.43703842163086

Token 70: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0017884672852233052
    2. '(' → logprob: -6.37678861618042
    3. '())' → logprob: -10.126788139343262
    4. '()
' → logprob: -10.876788139343262
    5. '('' → logprob: -11.251788139343262
    6. '()]' → logprob: -12.626788139343262
    7. '(
' → logprob: -12.751788139343262
    8. ' ()' → logprob: -13.626788139343262
    9. ')' → logprob: -13.626788139343262
    10. '()`' → logprob: -14.376788139343262

Token 71: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7394704818725586
    2. '<|end|>' → logprob: -1.3644704818725586
    3. '           ' → logprob: -1.4894704818725586
    4. '        ' → logprob: -4.239470481872559
    5. ' ' → logprob: -4.864470481872559
    6. '    ' → logprob: -5.239470481872559
    7. '<|end|>' → logprob: -5.489470481872559
    8. '   ' → logprob: -6.114470481872559
    9. '      ' → logprob: -6.364470481872559
    10. '  ' → logprob: -6.739470481872559

Token 72: ' name' (ID: 1308)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.102977991104126
    2. ' spells' → logprob: -1.602977991104126
    3. 'sp' → logprob: -1.977977991104126
    4. '           ' → logprob: -2.477977991104126
    5. ' if' → logprob: -2.602977991104126
    6. '        ' → logprob: -3.352977991104126
    7. 's' → logprob: -3.352977991104126
    8. ' s' → logprob: -3.477977991104126
    9. ' spell' → logprob: -4.227977752685547
    10. ' sp' → logprob: -4.727977752685547

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3936230540275574
    2. ',' → logprob: -1.2686231136322021
    3. '=' → logprob: -3.143623113632202
    4. ' ,' → logprob: -7.643622875213623
    5. ' ' → logprob: -8.518623352050781
    6. '<|end|>' → logprob: -8.643623352050781
    7. ')' → logprob: -9.393623352050781
    8. '<|end|>' → logprob: -11.393623352050781
    9. '.' → logprob: -11.518623352050781
    10. '   ' → logprob: -11.643623352050781

Token 74: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.12693576514720917
    2. 'parts' → logprob: -2.1269357204437256
    3. '(parts' → logprob: -11.876935958862305
    4. 'str' → logprob: -15.251935958862305
    5. ' ' → logprob: -15.376935958862305
    6. 'sp' → logprob: -16.376935958862305
    7. ' partes' → logprob: -16.376935958862305
    8. '.parts' → logprob: -17.251935958862305
    9. ' ' → logprob: -17.376935958862305
    10. '_parts' → logprob: -18.001935958862305

Token 75: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0921942703134846e-05
    2. '0' → logprob: -11.50001049041748
    3. ' [' → logprob: -15.37501049041748
    4. '[
' → logprob: -15.50001049041748
    5. '[-' → logprob: -15.62501049041748
    6. '\[' → logprob: -16.750011444091797
    7. '(' → logprob: -16.875011444091797
    8. '1' → logprob: -17.000011444091797
    9. '```' → logprob: -17.125011444091797
    10. ' ' → logprob: -17.250011444091797

Token 76: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.697387966094539e-05
    2. '[' → logprob: -10.125086784362793
    3. ' ' → logprob: -10.750086784362793
    4. '1' → logprob: -10.750086784362793
    5. '-' → logprob: -12.750086784362793
    6. '2' → logprob: -15.125086784362793
    7. '(' → logprob: -15.875086784362793
    8. ')' → logprob: -16.00008773803711
    9. ']' → logprob: -16.37508773803711
    10. ':' → logprob: -16.87508773803711

Token 77: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' MP' (ID: 14857)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.3208029866218567
    2. 'damage' → logprob: -1.945802927017212
    3. 'effect' → logprob: -3.695802927017212
    4. 'cost' → logprob: -3.695802927017212
    5. 'd' → logprob: -3.945802927017212
    6. ' power' → logprob: -4.070803165435791
    7. 'params' → logprob: -5.320803165435791
    8. ' damage' → logprob: -5.570803165435791
    9. 'a' → logprob: -5.820803165435791
    10. 'pow' → logprob: -5.820803165435791

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07904886454343796
    2. '=' → logprob: -2.9540488719940186
    3. '_cost' → logprob: -3.9540488719940186
    4. 'cost' → logprob: -5.7040486335754395
    5. ' cost' → logprob: -7.8290486335754395
    6. '_required' → logprob: -8.704049110412598
    7. ',' → logprob: -8.704049110412598
    8. '=int' → logprob: -8.954049110412598
    9. '_needed' → logprob: -9.079049110412598
    10. '<|end|>' → logprob: -9.454049110412598

Token 81: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5759453773498535
    2. ' int' → logprob: -0.8259453773498535
    3. ' ' → logprob: -12.950944900512695
    4. '[int' → logprob: -13.450944900512695
    5. '=int' → logprob: -14.450944900512695
    6. '(int' → logprob: -14.575944900512695
    7. '<int' → logprob: -14.825944900512695
    8. '	int' → logprob: -15.450944900512695
    9. ']int' → logprob: -15.700944900512695
    10. '<|end|>' → logprob: -16.075944900512695

Token 82: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -5.8961017202818766e-05
    2. '(' → logprob: -9.750059127807617
    3. 'parts' → logprob: -14.625059127807617
    4. ' parts' → logprob: -15.875059127807617
    5. ' (' → logprob: -16.750059127807617
    6. '(points' → logprob: -20.250059127807617
    7. '(part' → logprob: -20.500059127807617
    8. '(
' → logprob: -21.375059127807617
    9. ')' → logprob: -21.625059127807617
    10. '(par' → logprob: -21.875059127807617

Token 83: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.543733904138207e-05
    2. '(parts' → logprob: -10.12509536743164
    3. '(' → logprob: -11.00009536743164
    4. '()[' → logprob: -11.12509536743164
    5. '_parts' → logprob: -12.00009536743164
    6. ')' → logprob: -12.00009536743164
    7. 'parts' → logprob: -12.25009536743164
    8. ' parts' → logprob: -12.87509536743164
    9. 'Parts' → logprob: -13.62509536743164
    10. '.[' → logprob: -14.25009536743164

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -12.375008583068848
    3. '[' → logprob: -12.750008583068848
    4. '2' → logprob: -14.250008583068848
    5. ']' → logprob: -15.625008583068848
    6. 'parts' → logprob: -16.37500762939453
    7. '0' → logprob: -17.00000762939453
    8. '-' → logprob: -17.37500762939453
    9. '])' → logprob: -17.50000762939453
    10. ')' → logprob: -17.50000762939453

Token 85: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13003520667552948
    2. '])' → logprob: -2.130035161972046
    3. ')
' → logprob: -6.505035400390625
    4. ' )' → logprob: -7.005035400390625
    5. ']' → logprob: -8.255035400390625
    6. '])
' → logprob: -9.755035400390625
    7. ')])' → logprob: -9.755035400390625
    8. '),' → logprob: -9.880035400390625
    9. ' ])' → logprob: -9.880035400390625
    10. ')]' → logprob: -10.130035400390625

Token 86: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: ' target' (ID: 3783)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'damage' → logprob: -1.1030429601669312
    2. 'power' → logprob: -1.2280429601669312
    3. ' power' → logprob: -2.1030430793762207
    4. ' damage' → logprob: -2.3530430793762207
    5. 'effect' → logprob: -2.9780430793762207
    6. ' effect' → logprob: -3.6030430793762207
    7. 'D' → logprob: -4.353043079376221
    8. 'd' → logprob: -5.103043079376221
    9. 'pow' → logprob: -5.103043079376221
    10. 'AT' → logprob: -5.853043079376221

Token 88: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10626567155122757
    2. ' =' → logprob: -2.8562657833099365
    3. '=' → logprob: -3.9812657833099365
    4. '_type' → logprob: -4.356265544891357
    5. '_count' → logprob: -4.481265544891357
    6. '_num' → logprob: -9.231266021728516
    7. 'type' → logprob: -9.356266021728516
    8. '_s' → logprob: -9.731266021728516
    9. 'Type' → logprob: -9.856266021728516
    10. '_idx' → logprob: -10.231266021728516

Token 89: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.23225834965705872
    2. 'parts' → logprob: -2.1072583198547363
    3. 'int' → logprob: -2.9822583198547363
    4. ' int' → logprob: -3.3572583198547363
    5. '(parts' → logprob: -9.482258796691895
    6. ' ' → logprob: -10.857258796691895
    7. 'list' → logprob: -11.482258796691895
    8. ' list' → logprob: -11.607258796691895
    9. '[int' → logprob: -11.794758796691895
    10. ' partes' → logprob: -12.169758796691895

Token 90: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.6100132496794686e-05
    2. '[-' → logprob: -10.375056266784668
    3. '2' → logprob: -11.625056266784668
    4. '1' → logprob: -11.750056266784668
    5. '```' → logprob: -13.000056266784668
    6. '3' → logprob: -13.750056266784668
    7. '()[' → logprob: -13.875056266784668
    8. '(' → logprob: -14.000056266784668
    9. 's' → logprob: -14.000056266784668
    10. '0' → logprob: -14.500056266784668

Token 91: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.43335527181625366
    2. '0' → logprob: -1.4333553314208984
    3. '1' → logprob: -2.4333553314208984
    4. '-' → logprob: -4.683355331420898
    5. ']' → logprob: -4.933355331420898
    6. '])' → logprob: -5.058355331420898
    7. '[' → logprob: -6.808355331420898
    8. ')' → logprob: -8.683355331420898
    9. 's' → logprob: -8.683355331420898
    10. '3' → logprob: -8.808355331420898

Token 92: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34514501690864563
    2. ']' → logprob: -1.3451449871063232
    3. '])' → logprob: -4.095145225524902
    4. '<|end|>' → logprob: -4.845145225524902
    5. ' )' → logprob: -6.220145225524902
    6. ')]' → logprob: -6.220145225524902
    7. '<|end|>' → logprob: -6.720145225524902
    8. '[' → logprob: -7.845145225524902
    9. ' ]' → logprob: -7.970145225524902
    10. ',' → logprob: -8.345145225524902

Token 93: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: ' dmg' (ID: 168827)
  Prédit: ' effect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' effect' → logprob: -0.7059981226921082
    2. 'damage' → logprob: -2.455998182296753
    3. '        ' → logprob: -2.580998182296753
    4. ' damage' → logprob: -2.705998182296753
    5. 'effect' → logprob: -2.955998182296753
    6. ' params' → logprob: -3.455998182296753
    7. '       ' → logprob: -3.580998182296753
    8. ' power' → logprob: -3.705998182296753
    9. ' ' → logprob: -3.955998182296753
    10. 'amount' → logprob: -4.205997943878174

Token 95: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933221220970154
    2. ' =' → logprob: -0.6933221220970154
    3. 's' → logprob: -9.19332218170166
    4. '=int' → logprob: -11.06832218170166
    5. ' ' → logprob: -11.19332218170166
    6. '   ' → logprob: -11.44332218170166
    7. ',' → logprob: -11.44332218170166
    8. '  ' → logprob: -12.44332218170166
    9. 'damage' → logprob: -12.94332218170166
    10. 'amage' → logprob: -13.19332218170166

Token 96: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0181703120470047
    2. ' int' → logprob: -4.018170356750488
    3. '[int' → logprob: -11.893170356750488
    4. '=int' → logprob: -12.268170356750488
    5. '(int' → logprob: -13.018170356750488
    6. '<int' → logprob: -13.268170356750488
    7. ']int' → logprob: -13.768170356750488
    8. '0' → logprob: -14.018170356750488
    9. ' ' → logprob: -14.268170356750488
    10. '	int' → logprob: -14.393170356750488

Token 97: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.00038086410495452583
    2. '(' → logprob: -7.875380992889404
    3. ' (' → logprob: -14.875380516052246
    4. 'parts' → logprob: -16.000381469726562
    5. ' parts' → logprob: -16.625381469726562
    6. ')' → logprob: -16.750381469726562
    7. '(
' → logprob: -16.750381469726562
    8. '(part' → logprob: -17.125381469726562
    9. '(points' → logprob: -17.375381469726562
    10. '(sp' → logprob: -17.875381469726562

Token 98: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00836126133799553
    2. '(' → logprob: -5.133361339569092
    3. ']' → logprob: -7.133361339569092
    4. '])' → logprob: -7.508361339569092
    5. ')' → logprob: -7.758361339569092
    6. '3' → logprob: -8.508360862731934
    7. '][' → logprob: -9.008360862731934
    8. '_parts' → logprob: -9.633360862731934
    9. '()[' → logprob: -10.258360862731934
    10. '(parts' → logprob: -10.508360862731934

Token 99: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.008129963040119e-06
    2. '1' → logprob: -13.500003814697266
    3. '])' → logprob: -14.000003814697266
    4. '4' → logprob: -14.875003814697266
    5. ' ' → logprob: -15.125003814697266
    6. '   ' → logprob: -15.375003814697266
    7. '2' → logprob: -15.500003814697266
    8. '[' → logprob: -15.625003814697266
    9. ']' → logprob: -16.000003814697266
    10. '0' → logprob: -16.250003814697266

Token 100: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2018471509218216
    2. '])' → logprob: -1.7018471956253052
    3. ')
' → logprob: -8.451847076416016
    4. ']' → logprob: -9.451847076416016
    5. ')])' → logprob: -10.576847076416016
    6. ' )' → logprob: -10.951847076416016
    7. '）' → logprob: -10.951847076416016
    8. '))' → logprob: -11.076847076416016
    9. '])
' → logprob: -11.326847076416016
    10. '           ' → logprob: -11.576847076416016

Token 101: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3488007187843323
    2. '<|end|>' → logprob: -1.5988006591796875
    3. '           ' → logprob: -2.7238006591796875
    4. '<|end|>' → logprob: -4.5988006591796875
    5. ')' → logprob: -4.9738006591796875
    6. '#' → logprob: -6.2238006591796875
    7. '        
' → logprob: -6.3488006591796875
    8. 'newline' → logprob: -7.0988006591796875
    9. '   ' → logprob: -7.2238006591796875
    10. '        ' → logprob: -7.4738006591796875

Token 102: ' spells' (ID: 69967)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030471814796328545
    2. '       ' → logprob: -3.9054718017578125
    3. 'sp' → logprob: -4.9054718017578125
    4. ' spells' → logprob: -6.5304718017578125
    5. '   ' → logprob: -8.530471801757812
    6. ' sp' → logprob: -8.780471801757812
    7. '	sp' → logprob: -9.030471801757812
    8. '
' → logprob: -9.405471801757812
    9. 's' → logprob: -9.655471801757812
    10. 'spell' → logprob: -9.905471801757812

Token 103: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008632649667561054
    2. '.' → logprob: -4.758632659912109
    3. '.extend' → logprob: -11.50863265991211
    4. '.app' → logprob: -13.38363265991211
    5. '.ap' → logprob: -13.50863265991211
    6. '.setdefault' → logprob: -13.50863265991211
    7. '.Append' → logprob: -14.00863265991211
    8. ' .' → logprob: -14.25863265991211
    9. '.add' → logprob: -14.25863265991211
    10. ').' → logprob: -14.88363265991211

Token 104: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0041173421777784824
    2. '(' → logprob: -5.504117488861084
    3. '(parts' → logprob: -10.254117012023926
    4. '(('' → logprob: -12.879117012023926
    5. '(("' → logprob: -14.379117012023926
    6. '(((' → logprob: -15.754117012023926
    7. '(([' → logprob: -15.879117012023926
    8. '([' → logprob: -16.254117965698242
    9. ' ((' → logprob: -16.879117965698242
    10. '(tuple' → logprob: -17.379117965698242

Token 105: 'MP' (ID: 9125)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.00020127551397308707
    2. ' name' → logprob: -8.625201225280762
    3. 'MP' → logprob: -11.000201225280762
    4. '   ' → logprob: -12.750201225280762
    5. ')' → logprob: -14.625201225280762
    6. ' MP' → logprob: -14.750201225280762
    7. '    ' → logprob: -15.250201225280762
    8. 'mp' → logprob: -15.375201225280762
    9. '	name' → logprob: -15.625201225280762
    10. '(name' → logprob: -16.125202178955078

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4974866644479334e-05
    2. ' ,' → logprob: -11.500015258789062
    3. ',
' → logprob: -13.125015258789062
    4. ')' → logprob: -13.625015258789062
    5. ',name' → logprob: -14.250015258789062
    6. '<|end|>' → logprob: -14.625015258789062
    7. ',)' → logprob: -15.750015258789062
    8. ',d' → logprob: -16.000015258789062
    9. ',target' → logprob: -16.500015258789062
    10. '),' → logprob: -17.125015258789062

Token 107: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.6149688959121704
    2. 'name' → logprob: -0.8649688959121704
    3. ' target' → logprob: -3.989968776702881
    4. ' name' → logprob: -4.114968776702881
    5. 'd' → logprob: -5.739968776702881
    6. ' dmg' → logprob: -9.489969253540039
    7. 'damage' → logprob: -10.114969253540039
    8. ' ' → logprob: -10.614969253540039
    9. '    ' → logprob: -10.864969253540039
    10. ' d' → logprob: -11.239969253540039

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.404745439183898e-05
    2. ',d' → logprob: -10.62503433227539
    3. ',
' → logprob: -12.50003433227539
    4. ' ,' → logprob: -12.75003433227539
    5. ')' → logprob: -13.50003433227539
    6. '))' → logprob: -14.12503433227539
    7. '<|end|>' → logprob: -15.25003433227539
    8. 'd' → logprob: -16.25003433227539
    9. ',m' → logprob: -16.75003433227539
    10. ',n' → logprob: -17.12503433227539

Token 109: ' dmg' (ID: 168827)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01817873865365982
    2. ' dmg' → logprob: -4.018178939819336
    3. 'damage' → logprob: -11.143178939819336
    4. 'dm' → logprob: -12.393178939819336
    5. ' damage' → logprob: -12.643178939819336
    6. ')d' → logprob: -13.268178939819336
    7. 'dam' → logprob: -14.455678939819336
    8. ' ' → logprob: -14.455678939819336
    9. ' d' → logprob: -14.518178939819336
    10. '   ' → logprob: -14.893178939819336

Token 110: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10047656297683716
    2. ')' → logprob: -2.3504765033721924
    3. '))
' → logprob: -8.850476264953613
    4. ',' → logprob: -9.100476264953613
    5. ')))' → logprob: -12.100476264953613
    6. ')
' → logprob: -12.475476264953613
    7. '),' → logprob: -12.600476264953613
    8. '));' → logprob: -14.850476264953613
    9. ' ))' → logprob: -15.100476264953613
    10. '       ' → logprob: -15.100476264953613

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.059577204287052155
    2. '        ' → logprob: -4.309576988220215
    3. '
' → logprob: -4.559576988220215
    4. '        
' → logprob: -4.684576988220215
    5. '<|end|>' → logprob: -4.934576988220215
    6. 'total' → logprob: -5.434576988220215
    7. '    ' → logprob: -5.434576988220215
    8. ' total' → logprob: -6.184576988220215
    9. '   ' → logprob: -6.434576988220215
    10. 'dp' → logprob: -6.934576988220215

Token 112: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.480724036693573
    2. 'DP' → logprob: -2.1057240962982178
    3. 'for' → logprob: -2.9807240962982178
    4. 'HP' → logprob: -3.1057240962982178
    5. 'best' → logprob: -4.355723857879639
    6. 'results' → logprob: -4.355723857879639
    7. 'result' → logprob: -4.355723857879639
    8. 'damage' → logprob: -4.480723857879639
    9. 'res' → logprob: -4.605723857879639
    10. 'total' → logprob: -4.730723857879639

Token 113: ' We' (ID: 1416)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3505260944366455
    2. 'dp' → logprob: -1.7255260944366455
    3. 'for' → logprob: -1.9755260944366455
    4. 'damage' → logprob: -2.7255260944366455
    5. 'total' → logprob: -2.8505260944366455
    6. 'def' → logprob: -2.8505260944366455
    7. 'max' → logprob: -3.3505260944366455
    8. ' #' → logprob: -3.7255260944366455
    9. ' for' → logprob: -3.7255260944366455
    10. 'DP' → logprob: -3.9755260944366455

Token 114: ' want' (ID: 1682)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.5923208594322205
    2. '       ' → logprob: -1.5923209190368652
    3. '   ' → logprob: -2.0923209190368652
    4. ' want' → logprob: -3.5923209190368652
    5. 'need' → logprob: -3.7173209190368652
    6. ' can' → logprob: -4.967320919036865
    7. 'def' → logprob: -5.092320919036865
    8. ' continue' → logprob: -5.217320919036865
    9. ' max' → logprob: -5.467320919036865
    10. ' #' → logprob: -5.467320919036865

Token 115: ' minimal' (ID: 19957)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.12816748023033142
    2. 'to' → logprob: -2.1281673908233643
    3. '       ' → logprob: -7.003167629241943
    4. 'def' → logprob: -9.253167152404785
    5. '<|end|>' → logprob: -9.503167152404785
    6. '   ' → logprob: -10.378167152404785
    7. '    ' → logprob: -10.753167152404785
    8. '        ' → logprob: -11.253167152404785
    9. ' ' → logprob: -11.378167152404785
    10. ' a' → logprob: -11.378167152404785

Token 116: ' magic' (ID: 19745)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.697968602180481
    2. ' MP' → logprob: -1.447968602180481
    3. 'MP' → logprob: -2.5729684829711914
    4. 'total' → logprob: -2.8229684829711914
    5. ' cost' → logprob: -3.5729684829711914
    6. 'cost' → logprob: -3.8229684829711914
    7. ' mp' → logprob: -3.9479684829711914
    8. ' mana' → logprob: -4.197968482971191
    9. '_total' → logprob: -4.822968482971191
    10. 'mp' → logprob: -4.822968482971191

Token 117: ' power' (ID: 3470)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.5160905122756958
    2. ' points' → logprob: -1.0160905122756958
    3. '_points' → logprob: -3.2660903930664062
    4. '<|end|>' → logprob: -7.391090393066406
    5. 'cost' → logprob: -7.641090393066406
    6. 'point' → logprob: -7.891090393066406
    7. ' cost' → logprob: -8.141090393066406
    8. 'power' → logprob: -8.391090393066406
    9. ' point' → logprob: -8.641090393066406
    10. '   ' → logprob: -8.766090393066406

Token 118: ' used' (ID: 2061)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6735731959342957
    2. '<|end|>' → logprob: -1.0485732555389404
    3. ' for' → logprob: -3.6735732555389404
    4. ' to' → logprob: -3.7985732555389404
    5. ',' → logprob: -3.7985732555389404
    6. ' used' → logprob: -4.673573017120361
    7. ' 
' → logprob: -5.048573017120361
    8. ' usage' → logprob: -5.048573017120361
    9. ' ,' → logprob: -5.048573017120361
    10. '<|end|>' → logprob: -5.298573017120361

Token 119: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 120: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.235304057598114
    2. '<|end|>' → logprob: -2.235304117202759
    3. '
' → logprob: -3.485304117202759
    4. '       ' → logprob: -3.735304117202759
    5. ' 
' → logprob: -4.23530387878418
    6. ',' → logprob: -4.48530387878418
    7. '        ' → logprob: -4.48530387878418
    8. '        
' → logprob: -5.36030387878418
    9. '    ' → logprob: -6.61030387878418
    10. ' ,' → logprob: -7.11030387878418

Token 121: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.165036141872406
    2. ' dp' → logprob: -1.9150362014770508
    3. ' DP' → logprob: -6.665036201477051
    4. 'DP' → logprob: -6.665036201477051
    5. '       ' → logprob: -7.165036201477051
    6. ' max' → logprob: -8.79003620147705
    7. 'max' → logprob: -8.91503620147705
    8. ' used' → logprob: -9.04003620147705
    9. '_dp' → logprob: -9.16503620147705
    10. 'damage' → logprob: -9.54003620147705

Token 122: ' Two' (ID: 13311)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2292342185974121
    2. ' dp' → logprob: -1.604234218597412
    3. ' DP' → logprob: -6.729234218597412
    4. 'DP' → logprob: -6.854234218597412
    5. '       ' → logprob: -7.604234218597412
    6. 'from' → logprob: -8.97923469543457
    7. ' from' → logprob: -9.22923469543457
    8. '_dp' → logprob: -9.47923469543457
    9. 'import' → logprob: -9.72923469543457
    10. 'dist' → logprob: -9.85423469543457

Token 123: ' types' (ID: 6009)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.20083405077457428
    2. ' dp' → logprob: -3.200834035873413
    3. 'DP' → logprob: -3.450834035873413
    4. 'for' → logprob: -4.075834274291992
    5. 'dim' → logprob: -4.075834274291992
    6. '_dp' → logprob: -4.450834274291992
    7. 'd' → logprob: -4.700834274291992
    8. '-dimensional' → logprob: -5.075834274291992
    9. 'levels' → logprob: -5.200834274291992
    10. ' for' → logprob: -5.825834274291992

Token 124: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: ' spells' (ID: 69967)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'damage' → logprob: -0.5413095355033875
    2. 'targets' → logprob: -2.0413095951080322
    3. ' damage' → logprob: -2.1663095951080322
    4. 'sp' → logprob: -2.7913095951080322
    5. 'dp' → logprob: -3.6663095951080322
    6. 'target' → logprob: -4.041309356689453
    7. ' spells' → logprob: -4.166309356689453
    8. ' targets' → logprob: -4.791309356689453
    9. 'en' → logprob: -5.541309356689453
    10. 'dam' → logprob: -5.853809356689453

Token 126: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.2224166989326477
    2. ' #' → logprob: -1.972416639328003
    3. '       ' → logprob: -3.597416639328003
    4. ' pass' → logprob: -5.097416877746582
    5. ' ' → logprob: -5.222416877746582
    6. ' for' → logprob: -5.347416877746582
    7. ' continue' → logprob: -5.847416877746582
    8. ' 
' → logprob: -5.847416877746582
    9. '        ' → logprob: -6.347416877746582
    10. '<|end|>' → logprob: -6.722416877746582

Token 129: ' -' (ID: 533)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -1.9247403144836426
    2. ' single' → logprob: -2.1747403144836426
    3. ' #' → logprob: -2.4247403144836426
    4. '#' → logprob: -2.4247403144836426
    5. ' offensive' → logprob: -2.7997403144836426
    6. ' for' → logprob: -2.9247403144836426
    7. ' damage' → logprob: -3.0497403144836426
    8. '       ' → logprob: -3.1747403144836426
    9. ' pass' → logprob: -3.7997403144836426
    10. '        ' → logprob: -3.7997403144836426

Token 130: ' Single' (ID: 16035)
  Prédit: 'Attack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Attack' → logprob: -1.6205832958221436
    2. 'Damage' → logprob: -1.8705832958221436
    3. 'damage' → logprob: -1.9955832958221436
    4. 'attack' → logprob: -2.3705832958221436
    5. 'Single' → logprob: -3.1205832958221436
    6. 'single' → logprob: -3.3705832958221436
    7. 'Off' → logprob: -3.8705832958221436
    8. 'off' → logprob: -3.9955832958221436
    9. ' Area' → logprob: -3.9955832958221436
    10. ' Attack' → logprob: -3.9955832958221436

Token 131: ' target' (ID: 3783)
  Prédit: '-target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-target' → logprob: -0.43305039405822754
    2. 'target' → logprob: -1.6830503940582275
    3. '-' → logprob: -3.1830503940582275
    4. ')' → logprob: -3.6830503940582275
    5. '<|end|>' → logprob: -3.8080503940582275
    6. ' target' → logprob: -3.8080503940582275
    7. '_target' → logprob: -4.058050155639648
    8. ' ' → logprob: -4.933050155639648
    9. ' -' → logprob: -5.683050155639648
    10. 's' → logprob: -5.808050155639648

Token 132: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: ' damage' (ID: 10364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: ' applies' (ID: 28134)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 135: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.40951451659202576
    2. 'to' → logprob: -1.4095145463943481
    3. ' only' → logprob: -2.7845144271850586
    4. 'only' → logprob: -4.159514427185059
    5. '<|end|>' → logprob: -4.284514427185059
    6. ' on' → logprob: -8.784514427185059
    7. '<|end|>' → logprob: -9.284514427185059
    8. ',' → logprob: -9.784514427185059
    9. ' directly' → logprob: -10.159514427185059
    10. 'per' → logprob: -10.159514427185059

Token 136: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.5806661248207092
    2. ' one' → logprob: -0.8306661248207092
    3. ' only' → logprob: -7.2056660652160645
    4. 'a' → logprob: -7.5806660652160645
    5. ' the' → logprob: -7.5806660652160645
    6. 'only' → logprob: -7.5806660652160645
    7. ' a' → logprob: -7.7056660652160645
    8. '1' → logprob: -7.8306660652160645
    9. 'the' → logprob: -7.8306660652160645
    10. 'exact' → logprob: -8.080666542053223

Token 137: ' monster' (ID: 36286)
  Prédit: ' enemy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enemy' → logprob: -0.31206214427948
    2. ' monster' → logprob: -2.0620622634887695
    3. 'enemy' → logprob: -2.5620622634887695
    4. '<|end|>' → logprob: -3.9370622634887695
    5. ' target' → logprob: -4.0620622634887695
    6. 'target' → logprob: -5.1870622634887695
    7. 'monster' → logprob: -5.5620622634887695
    8. ')' → logprob: -5.5620622634887695
    9. ' unit' → logprob: -5.6870622634887695
    10. ' creature' → logprob: -6.4370622634887695

Token 138: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34436437487602234
    2. '       ' → logprob: -1.8443644046783447
    3. '<|end|>' → logprob: -2.2193644046783447
    4. '        
' → logprob: -4.344364166259766
    5. '#' → logprob: -5.594364166259766
    6. '<|end|>' → logprob: -6.344364166259766
    7. '  
' → logprob: -6.469364166259766
    8. ' 
' → logprob: -6.469364166259766
    9. '\n' → logprob: -7.594364166259766
    10. ',' → logprob: -7.594364166259766

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9095749855041504
    2. '<|end|>' → logprob: -1.1595749855041504
    3. '
' → logprob: -1.4095749855041504
    4. '\n' → logprob: -4.28457498550415
    5. '        
' → logprob: -4.90957498550415
    6. ',' → logprob: -5.40957498550415
    7. '<|end|>' → logprob: -5.40957498550415
    8. '#' → logprob: -6.03457498550415
    9. ')' → logprob: -6.40957498550415
    10. '\' → logprob: -7.03457498550415

Token 140: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4426581561565399
    2. '       ' → logprob: -1.5676581859588623
    3. '<|end|>' → logprob: -2.1926581859588623
    4. '\n' → logprob: -4.067657947540283
    5. '#' (adapté à ' #') → logprob: -5.317657947540283
    6. '        
' → logprob: -5.817657947540283
    7. '<|end|>' → logprob: -5.817657947540283
    8. ' 
' → logprob: -6.317657947540283
    9. ',' → logprob: -6.442657947540283
    10. '\' → logprob: -6.692657947540283

Token 141: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2423267513513565
    2. '#' → logprob: -1.6173267364501953
    3. '
' → logprob: -4.617326736450195
    4. ' ' → logprob: -6.117326736450195
    5. '<|end|>' → logprob: -6.117326736450195
    6. '   ' → logprob: -6.867326736450195
    7. ' 
' → logprob: -7.367326736450195
    8. '        
' → logprob: -8.742326736450195
    9. '<|end|>' → logprob: -8.992326736450195
    10. '  
' → logprob: -9.492326736450195

Token 142: ' All' (ID: 2545)
  Prédit: 'Multi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Multi' → logprob: -0.5365008115768433
    2. 'Area' → logprob: -1.2865008115768433
    3. 'All' → logprob: -2.911500930786133
    4. 'Multiple' → logprob: -3.286500930786133
    5. 'A' → logprob: -4.286500930786133
    6. ' Multi' → logprob: -4.536500930786133
    7. 'Ao' → logprob: -5.286500930786133
    8. ' Area' → logprob: -5.411500930786133
    9. 'AO' → logprob: -5.536500930786133
    10. ' A' → logprob: -6.036500930786133

Token 143: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.21046513319015503
    2. '-target' → logprob: -2.5854651927948
    3. '_targets' → logprob: -3.7104651927948
    4. '-' → logprob: -3.8354651927948
    5. '_target' → logprob: -3.9604651927948
    6. 'targets' → logprob: -4.085464954376221
    7. ' target' → logprob: -4.335464954376221
    8. '<|end|>' → logprob: -4.460464954376221
    9. ' ' → logprob: -6.460464954376221
    10. '_' → logprob: -6.710464954376221

Token 144: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00660298764705658
    2. 's' → logprob: -5.756602764129639
    3. 'arget' → logprob: -6.881602764129639
    4. '-target' → logprob: -6.881602764129639
    5. '):' → logprob: -7.506602764129639
    6. 'target' → logprob: -7.881602764129639
    7. 'ed' → logprob: -9.256603240966797
    8. '_target' → logprob: -9.881603240966797
    9. 'e' → logprob: -10.006603240966797
    10. 'd' → logprob: -10.256603240966797

Token 145: ' damage' (ID: 10364)
  Prédit: ' damage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' damage' → logprob: -0.5255056023597717
    2. 'damage' → logprob: -0.9005056023597717
    3. ' all' → logprob: -7.775505542755127
    4. ' applies' → logprob: -7.900505542755127
    5. 'd' → logprob: -7.900505542755127
    6. ' apply' → logprob: -8.400506019592285
    7. 'all' → logprob: -8.775506019592285
    8. '#' → logprob: -8.900506019592285
    9. '	damage' → logprob: -9.025506019592285
    10. 'apply' → logprob: -9.150506019592285

Token 146: ' applies' (ID: 28134)
  Prédit: ' applies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' applies' → logprob: -0.09517458081245422
    2. 'ap' → logprob: -2.595174551010132
    3. '<|end|>' → logprob: -4.595174789428711
    4. ':' → logprob: -5.595174789428711
    5. '<|end|>' → logprob: -6.595174789428711
    6. '_ap' → logprob: -7.845174789428711
    7. '	ap' → logprob: -9.220174789428711
    8. 'apply' → logprob: -9.345174789428711
    9. 's' → logprob: -10.220174789428711
    10. '.apply' → logprob: -10.470174789428711

Token 147: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5761273503303528
    2. 'to' → logprob: -0.8261273503303528
    3. '       ' → logprob: -9.451127052307129
    4. ' simultaneously' → logprob: -10.701127052307129
    5. '           ' → logprob: -11.076127052307129
    6. '   ' → logprob: -11.326127052307129
    7. ' all' → logprob: -11.826127052307129
    8. ' on' → logprob: -11.951127052307129
    9. 'all' → logprob: -12.076127052307129
    10. 's' → logprob: -12.076127052307129

Token 148: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.5760931372642517
    2. ' all' → logprob: -0.8260931372642517
    3. ' every' → logprob: -9.826092720031738
    4. 'every' → logprob: -9.951092720031738
    5. ' each' → logprob: -10.576092720031738
    6. 'each' → logprob: -10.826092720031738
    7. '	all' → logprob: -13.451092720031738
    8. 'everyone' → logprob: -13.701092720031738
    9. ' the' → logprob: -14.326092720031738
    10. ' multiple' → logprob: -14.576092720031738

Token 149: ' monsters' (ID: 59311)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21321053802967072
    2. 'targets' → logprob: -2.5882105827331543
    3. '<|end|>' → logprob: -2.5882105827331543
    4. ' targets' → logprob: -3.8382105827331543
    5. ' monsters' → logprob: -5.088210582733154
    6. 'target' → logprob: -6.088210582733154
    7. 'mon' → logprob: -6.213210582733154
    8. 'tokens' → logprob: -6.713210582733154
    9. '
' → logprob: -6.963210582733154
    10. '<|end|>' → logprob: -7.088210582733154

Token 150: ' simultaneously' (ID: 38328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 153: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.015419689938426018
    2. '#' (adapté à ' #') → logprob: -5.0154194831848145
    3. 'DP' → logprob: -5.2654194831848145
    4. 'from' → logprob: -6.8904194831848145
    5. ' dp' → logprob: -7.0154194831848145
    6. '       ' → logprob: -8.265419960021973
    7. 'max' → logprob: -8.390419960021973
    8. 'import' → logprob: -8.640419960021973
    9. '        
' → logprob: -8.890419960021973
    10. ' #' → logprob: -9.140419960021973

Token 154: ' Approach' (ID: 86383)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.010363291017711163
    2. 'DP' → logprob: -5.1353631019592285
    3. '#' → logprob: -6.5103631019592285
    4. 'from' → logprob: -6.6353631019592285
    5. ' dp' → logprob: -7.0103631019592285
    6. 'import' → logprob: -8.260363578796387
    7. 'max' → logprob: -9.260363578796387
    8. 'INF' → logprob: -9.385363578796387
    9. ' from' → logprob: -9.635363578796387
    10. ' DP' → logprob: -9.760363578796387

Token 155: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10603109747171402
    2. ' =' → logprob: -2.7310311794281006
    3. ' :' → logprob: -3.9810311794281006
    4. '   ' → logprob: -4.8560309410095215
    5. 'import' → logprob: -5.6060309410095215
    6. '=' → logprob: -6.3560309410095215
    7. '       ' → logprob: -7.1060309410095215
    8. ' for' → logprob: -7.6060309410095215
    9. ':
' → logprob: -8.10603141784668
    10. ' #' → logprob: -8.35603141784668

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2869606018066406
    2. ' dp' → logprob: -1.7869606018066406
    3. 'dp' → logprob: -3.4119606018066406
    4. '#' → logprob: -4.536960601806641
    5. ' from' → logprob: -4.536960601806641
    6. ' #' → logprob: -4.661960601806641
    7. 'from' → logprob: -4.786960601806641
    8. 'import' → logprob: -5.286960601806641
    9. '        
' → logprob: -7.036960601806641
    10. '        ' → logprob: -7.036960601806641

Token 157: ' #' (ID: 1069)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -1.3631643056869507
    2. 'dp' → logprob: -1.3631643056869507
    3. '#' (adapté à ' #') → logprob: -1.4881643056869507
    4. ' dp' → logprob: -2.3631644248962402
    5. ' #' → logprob: -2.7381644248962402
    6. ' from' → logprob: -3.6131644248962402
    7. 'from' → logprob: -3.8631644248962402
    8. 'pass' → logprob: -4.11316442489624
    9. '       ' → logprob: -4.23816442489624
    10. 'import' → logprob: -4.48816442489624

Token 158: ' Use' (ID: 7649)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3820895254611969
    2. '#' → logprob: -2.632089614868164
    3. ' dp' → logprob: -2.632089614868164
    4. 'from' → logprob: -2.632089614868164
    5. ' pass' → logprob: -3.507089614868164
    6. ' from' → logprob: -3.757089614868164
    7. 'import' → logprob: -4.007089614868164
    8. 'pass' → logprob: -4.007089614868164
    9. ' import' → logprob: -5.507089614868164
    10. ' #' → logprob: -5.507089614868164

Token 159: ' binary' (ID: 15600)
  Prédit: ' dynamic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dynamic' → logprob: -0.10350628942251205
    2. ' DP' → logprob: -3.353506326675415
    3. 'dynamic' → logprob: -3.353506326675415
    4. 'DP' → logprob: -4.728506088256836
    5. 'dp' → logprob: -4.853506088256836
    6. ' dp' → logprob: -5.228506088256836
    7. ' a' → logprob: -5.353506088256836
    8. ' bit' → logprob: -7.603506088256836
    9. 'a' → logprob: -7.978506088256836
    10. 'bit' → logprob: -8.603506088256836

Token 160: ' search' (ID: 3684)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.933691143989563
    2. '_search' → logprob: -1.058691143989563
    3. ' search' → logprob: -1.683691143989563
    4. 'search' → logprob: -3.3086910247802734
    5. ' _' → logprob: -3.9336910247802734
    6. ' ' → logprob: -4.058691024780273
    7. ' space' → logprob: -8.308691024780273
    8. '_space' → logprob: -8.558691024780273
    9. 'space' → logprob: -8.933691024780273
    10. ')' → logprob: -9.808691024780273

Token 161: ' on' (ID: 402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25227853655815125
    2. ' on' → logprob: -2.6272785663604736
    3. ' ' → logprob: -2.8772785663604736
    4. ' for' → logprob: -3.8772785663604736
    5. '<|end|>' → logprob: -3.8772785663604736
    6. ' (' → logprob: -4.1272783279418945
    7. '   ' → logprob: -4.3772783279418945
    8. 'for' → logprob: -5.0022783279418945
    9. '(space' → logprob: -5.7522783279418945
    10. ',' → logprob: -5.8772783279418945

Token 162: ' total' (ID: 3609)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.48537907004356384
    2. ' the' → logprob: -0.9853790998458862
    3. 'possible' → logprob: -5.735379219055176
    4. 'total' → logprob: -5.985379219055176
    5. ' total' → logprob: -6.610379219055176
    6. 'magic' → logprob: -6.610379219055176
    7. ' minimal' → logprob: -7.110379219055176
    8. 'minimal' → logprob: -7.360379219055176
    9. 'minimum' → logprob: -7.860379219055176
    10. ' magic' → logprob: -8.235379219055176

Token 163: ' magic' (ID: 19745)
  Prédit: '_magic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_magic' → logprob: -0.2607061564922333
    2. 'magic' → logprob: -1.7607061862945557
    3. '_' → logprob: -3.5107061862945557
    4. ' magic' → logprob: -3.7607061862945557
    5. 'cost' → logprob: -7.135705947875977
    6. '_cost' → logprob: -7.510705947875977
    7. 'MP' → logprob: -7.635705947875977
    8. '_mp' → logprob: -7.635705947875977
    9. '_m' → logprob: -7.885705947875977
    10. 'damage' → logprob: -8.385705947875977

Token 164: ' power' (ID: 3470)
  Prédit: ' power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' power' → logprob: -0.9158732295036316
    2. 'power' → logprob: -1.4158732891082764
    3. '_power' → logprob: -1.5408732891082764
    4. '_points' → logprob: -2.6658732891082764
    5. ' points' → logprob: -2.7908732891082764
    6. 'points' → logprob: -4.665873050689697
    7. 'pow' → logprob: -6.790873050689697
    8. '_pow' → logprob: -7.040873050689697
    9. '_point' → logprob: -8.540873527526855
    10. '_' → logprob: -9.040873527526855

Token 165: ' cost' (ID: 3097)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.613034725189209
    2. ':' → logprob: -1.238034725189209
    3. '   ' → logprob: -3.113034725189209
    4. '
' → logprob: -3.488034725189209
    5. ' for' → logprob: -3.863034725189209
    6. '<|end|>' → logprob: -4.238034725189209
    7. ',' → logprob: -4.738034725189209
    8. '.' → logprob: -4.988034725189209
    9. '    ' → logprob: -5.363034725189209
    10. ' :' → logprob: -5.488034725189209

Token 166: ' to' (ID: 316)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5016482472419739
    2. ':' → logprob: -1.626648187637329
    3. ' ' → logprob: -3.001648187637329
    4. ' 
' → logprob: -3.376648187637329
    5. ':
' → logprob: -3.626648187637329
    6. '   ' → logprob: -3.751648187637329
    7. '       ' → logprob: -4.251648426055908
    8. ' for' → logprob: -4.626648426055908
    9. ' :
' → logprob: -5.001648426055908
    10. ' :' → logprob: -5.376648426055908

Token 167: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.41731446981430054
    2. 'find' → logprob: -1.9173145294189453
    3. ' check' → logprob: -3.2923145294189453
    4. 'check' → logprob: -3.4173145294189453
    5. 'ach' → logprob: -3.6673145294189453
    6. ' determine' → logprob: -3.7923145294189453
    7. 'det' → logprob: -3.7923145294189453
    8. 'see' → logprob: -4.167314529418945
    9. ' see' → logprob: -4.417314529418945
    10. ' defeat' → logprob: -5.417314529418945

Token 168: ' minimal' (ID: 19957)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.29344266653060913
    2. 'the' → logprob: -2.043442726135254
    3. ' minimal' → logprob: -2.418442726135254
    4. 'minimal' → logprob: -4.168442726135254
    5. 'minimum' → logprob: -5.293442726135254
    6. ' out' → logprob: -5.293442726135254
    7. ' minimum' → logprob: -6.293442726135254
    8. ' an' → logprob: -6.543442726135254
    9. ' feasible' → logprob: -6.668442726135254
    10. 'out' → logprob: -6.793442726135254

Token 169: ' cost' (ID: 3097)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: ' kill' (ID: 15874)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20961637794971466
    2. ' defeat' → logprob: -2.0846164226531982
    3. 'kill' → logprob: -3.3346164226531982
    4. 'reduce' → logprob: -4.084616184234619
    5. 'deal' → logprob: -4.959616184234619
    6. ' kill' → logprob: -5.959616184234619
    7. ' reduce' → logprob: -7.459616184234619
    8. ' def' → logprob: -7.459616184234619
    9. ' deal' → logprob: -8.459616661071777
    10. 'solve' → logprob: -8.459616661071777

Token 172: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.658249020576477
    2. '<|end|>' → logprob: -1.908249020576477
    3. 'all' → logprob: -2.2832489013671875
    4. ' ' → logprob: -2.9082489013671875
    5. ' monsters' → logprob: -3.1582489013671875
    6. '   ' → logprob: -3.2832489013671875
    7. ' the' → logprob: -3.4082489013671875
    8. '<|end|>' → logprob: -4.1582489013671875
    9. '       ' → logprob: -5.0332489013671875
    10. '(' → logprob: -5.2832489013671875

Token 173: ' monsters' (ID: 59311)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.021039865911006927
    2. '<|end|>' → logprob: -4.521039962768555
    3. 'low' → logprob: -6.521039962768555
    4. ':' → logprob: -6.521039962768555
    5. 'def' → logprob: -7.021039962768555
    6. ' 
' → logprob: -7.146039962768555
    7. '(low' → logprob: -7.271039962768555
    8. ',' → logprob: -7.521039962768555
    9. ' ' → logprob: -7.771039962768555
    10. '' → logprob: -7.896039962768555

Token 175: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2848561704158783
    2. '<|end|>' → logprob: -1.7848562002182007
    3. '       ' → logprob: -3.159856081008911
    4. ' ' → logprob: -4.28485631942749
    5. '   ' → logprob: -4.78485631942749
    6. ' 
' → logprob: -5.90985631942749
    7. '<|end|>' → logprob: -6.15985631942749
    8. ':' → logprob: -6.65985631942749
    9. '.' → logprob: -6.78485631942749
    10. '' → logprob: -6.90985631942749

Token 176: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1450168788433075
    2. 'low' → logprob: -2.39501690864563
    3. ' low' → logprob: -4.145016670227051
    4. 'left' → logprob: -4.770016670227051
    5. 'def' → logprob: -4.895016670227051
    6. ' left' → logprob: -6.145016670227051
    7. ' 
' → logprob: -6.395016670227051
    8. ' lo' → logprob: -6.895016670227051
    9. '   ' → logprob: -7.020016670227051
    10. 'lower' → logprob: -7.020016670227051

Token 177: ' For' (ID: 2214)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.5700595378875732
    2. 'left' → logprob: -0.9450595378875732
    3. 'def' → logprob: -3.5700595378875732
    4. 'lo' → logprob: -5.320059776306152
    5. '
' → logprob: -5.445059776306152
    6. '       ' → logprob: -6.195059776306152
    7. ' left' → logprob: -6.320059776306152
    8. 'lower' → logprob: -6.820059776306152
    9. ' low' → logprob: -6.945059776306152
    10. 'import' → logprob: -7.445059776306152

Token 178: ' a' (ID: 261)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.22707267105579376
    2. 'cost' → logprob: -2.6020727157592773
    3. 'low' → logprob: -3.1020727157592773
    4. 'left' → logprob: -3.9770727157592773
    5. ' mid' → logprob: -4.102072715759277
    6. 'each' → logprob: -4.352072715759277
    7. '_cost' → logprob: -5.727072715759277
    8. '_mid' → logprob: -5.852072715759277
    9. '_each' → logprob: -5.852072715759277
    10. 'lo' → logprob: -5.977072715759277

Token 179: ' given' (ID: 4335)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.11597860604524612
    2. 'mid' → logprob: -4.115978717803955
    3. 'pp' → logprob: -4.365978717803955
    4. 'b' → logprob: -4.490978717803955
    5. 'bs' → logprob: -4.615978717803955
    6. 'dp' → logprob: -4.740978717803955
    7. 'def' → logprob: -5.115978717803955
    8. 't' → logprob: -5.240978717803955
    9. 'low' → logprob: -5.615978717803955
    10. 'p' → logprob: -5.615978717803955

Token 180: ' magic' (ID: 19745)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.481300950050354
    2. 'mid' → logprob: -1.231300950050354
    3. ' cost' → logprob: -3.7313008308410645
    4. 'power' → logprob: -3.8563008308410645
    5. 'max' → logprob: -3.9813008308410645
    6. 'total' → logprob: -4.8563008308410645
    7. ' mid' → logprob: -5.1063008308410645
    8. 'limit' → logprob: -5.8563008308410645
    9. 'magic' → logprob: -5.8563008308410645
    10. ' total' → logprob: -6.4813008308410645

Token 181: ' power' (ID: 3470)
  Prédit: '_power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.33629417419433594
    2. 'power' → logprob: -2.086294174194336
    3. ' power' → logprob: -2.336294174194336
    4. '_cost' → logprob: -2.961294174194336
    5. 'cost' → logprob: -5.461294174194336
    6. ' =' → logprob: -5.711294174194336
    7. ' cost' → logprob: -6.336294174194336
    8. ')' → logprob: -7.336294174194336
    9. '_limit' → logprob: -7.586294174194336
    10. '_' → logprob: -7.711294174194336

Token 182: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.4682987332344055
    2. ' limit' → logprob: -1.8432986736297607
    3. 'cost' → logprob: -2.2182986736297607
    4. 'budget' → logprob: -2.8432986736297607
    5. ',' → logprob: -3.8432986736297607
    6. ' cost' → logprob: -3.9682986736297607
    7. ' budget' → logprob: -5.09329891204834
    8. 'amount' → logprob: -7.34329891204834
    9. ' amount' → logprob: -8.46829891204834
    10. 'value' → logprob: -8.59329891204834

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000654654751997441
    2. ' ,' → logprob: -8.000654220581055
    3. ':' → logprob: -8.375654220581055
    4. ')' → logprob: -10.500654220581055
    5. ',
' → logprob: -10.875654220581055
    6. '<|end|>' → logprob: -11.625654220581055
    7. '),' → logprob: -12.500654220581055
    8. '):' → logprob: -12.625654220581055
    9. ',n' → logprob: -12.875654220581055
    10. ',input' → logprob: -13.125654220581055

Token 184: ' check' (ID: 2371)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8115400075912476
    2. 'possible' → logprob: -2.186540126800537
    3. 'dp' → logprob: -2.436540126800537
    4. ' can' → logprob: -2.686540126800537
    5. ' possible' → logprob: -2.936540126800537
    6. ' low' → logprob: -3.311540126800537
    7. '#' → logprob: -3.561540126800537
    8. ' left' → logprob: -3.811540126800537
    9. ' dp' → logprob: -3.811540126800537
    10. ' def' → logprob: -3.936540126800537

Token 185: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5458824038505554
    2. ' if' → logprob: -0.9208824038505554
    3. 'def' → logprob: -3.9208824634552
    4. '   ' → logprob: -6.545882225036621
    5. 'whether' → logprob: -7.295882225036621
    6. ' whether' → logprob: -8.170882225036621
    7. '	if' → logprob: -9.170882225036621
    8. '    ' → logprob: -9.420882225036621
    9. ' def' → logprob: -10.670882225036621
    10. ' ' → logprob: -11.045882225036621

Token 186: ' it's' (ID: 4275)
  Prédit: ' it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.8879357576370239
    2. 'it' → logprob: -1.512935757637024
    3. ' all' → logprob: -1.887935757637024
    4. 'all' → logprob: -2.8879356384277344
    5. 'possible' → logprob: -3.0129356384277344
    6. ' it's' → logprob: -3.1379356384277344
    7. ' we' → logprob: -3.7629356384277344
    8. ' possible' → logprob: -4.137935638427734
    9. 'we' → logprob: -4.387935638427734
    10. 'it's' → logprob: -4.512935638427734

Token 187: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.05018892511725426
    2. ' possible' → logprob: -3.0501890182495117
    3. ' feasible' → logprob: -6.800189018249512
    4. 'fe' → logprob: -7.925189018249512
    5. '_possible' → logprob: -9.050189018249512
    6. '   ' → logprob: -13.300189018249512
    7. ' enough' → logprob: -13.800189018249512
    8. ' posible' → logprob: -13.800189018249512
    9. 's' → logprob: -13.925189018249512
    10. 'Possible' → logprob: -14.425189018249512

Token 188: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.18051959574222565
    2. 'to' → logprob: -2.0555195808410645
    3. '<|end|>' → logprob: -4.1805195808410645
    4. ' ' → logprob: -4.6805195808410645
    5. '    ' → logprob: -4.6805195808410645
    6. '   ' → logprob: -6.6805195808410645
    7. ':' → logprob: -7.8055195808410645
    8. ',' → logprob: -7.8055195808410645
    9. '<|end|>' → logprob: -8.180520057678223
    10. 'def' → logprob: -8.555520057678223

Token 189: ' kill' (ID: 15874)
  Prédit: 'kill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kill' → logprob: -0.2132607102394104
    2. ' kill' → logprob: -2.0882606506347656
    3. 'def' → logprob: -2.9632606506347656
    4. ' defeat' → logprob: -4.463260650634766
    5. '```' → logprob: -6.588260650634766
    6. 'deal' → logprob: -6.713260650634766
    7. 'damage' → logprob: -7.088260650634766
    8. 'reduce' → logprob: -7.588260650634766
    9. '
' → logprob: -8.213260650634766
    10. 'finish' → logprob: -9.338260650634766

Token 190: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.18314622342586517
    2. ' all' → logprob: -1.8081462383270264
    3. 'them' → logprob: -6.183145999908447
    4. ' them' → logprob: -6.683145999908447
    5. 'the' → logprob: -10.558146476745605
    6. ' monsters' → logprob: -10.683146476745605
    7. 'mon' → logprob: -11.433146476745605
    8. ' the' → logprob: -12.433146476745605
    9. '```' → logprob: -12.558146476745605
    10. '	all' → logprob: -12.933146476745605

Token 191: ' monsters' (ID: 59311)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.2817714512348175
    2. ' monsters' → logprob: -1.4067714214324951
    3. '(mon' → logprob: -9.156771659851074
    4. 'monster' → logprob: -9.281771659851074
    5. ' the' → logprob: -9.406771659851074
    6. '_mon' → logprob: -9.406771659851074
    7. 'mons' → logprob: -9.906771659851074
    8. '   ' → logprob: -10.406771659851074
    9. 'all' → logprob: -10.406771659851074
    10. ' all' → logprob: -10.781771659851074

Token 192: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.367736279964447
    2. '<|end|>' → logprob: -1.3677363395690918
    3. '
' → logprob: -3.492736339569092
    4. '<|end|>' → logprob: -4.867736339569092
    5. '        
' → logprob: -5.492736339569092
    6. ',' → logprob: -5.617736339569092
    7. ')' → logprob: -6.367736339569092
    8. '.' → logprob: -6.492736339569092
    9. ' with' → logprob: -6.617736339569092
    10. '   ' → logprob: -7.117736339569092

Token 193: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2594316005706787
    2. 'def' → logprob: -2.5094316005706787
    3. '       ' → logprob: -3.0094316005706787
    4. '        
' → logprob: -4.009431838989258
    5. 'max' → logprob: -4.009431838989258
    6. 'low' → logprob: -4.509431838989258
    7. '   ' → logprob: -4.884431838989258
    8. ' 
' → logprob: -5.009431838989258
    9. '    
' → logprob: -5.009431838989258
    10. '    ' → logprob: -5.384431838989258

Token 194: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.7818017601966858
    2. 'low' → logprob: -1.156801700592041
    3. 'def' → logprob: -1.531801700592041
    4. 'lo' → logprob: -5.281801700592041
    5. '       ' → logprob: -6.031801700592041
    6. '#' (adapté à ' #') → logprob: -6.281801700592041
    7. '
' → logprob: -7.406801700592041
    8. 'l' → logprob: -7.406801700592041
    9. 'lower' → logprob: -7.906801700592041
    10. 'dp' → logprob: -8.1568021774292

Token 195: ' But' (ID: 3072)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9772536158561707
    2. 'low' → logprob: -1.1022536754608154
    3. 'left' → logprob: -1.3522536754608154
    4. 'lo' → logprob: -3.8522536754608154
    5. '#' → logprob: -5.102253437042236
    6. 'l' → logprob: -5.727253437042236
    7. 'pass' → logprob: -7.727253437042236
    8. 'lower' → logprob: -7.977253437042236
    9. ' left' → logprob: -8.102253913879395
    10. 'import' → logprob: -8.227253913879395

Token 196: ' since' (ID: 3630)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.434175729751587
    2. '#' → logprob: -2.059175729751587
    3. 'def' → logprob: -2.059175729751587
    4. ' #' → logprob: -2.434175729751587
    5. ' for' → logprob: -2.434175729751587
    6. ' the' → logprob: -2.809175729751587
    7. '   ' → logprob: -2.809175729751587
    8. '    ' → logprob: -3.559175729751587
    9. '        ' → logprob: -3.684175729751587
    10. 'import' → logprob: -3.809175729751587

Token 197: ' spell' (ID: 29176)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7963516116142273
    2. ' the' → logprob: -1.671351671218872
    3. 'M' → logprob: -2.171351671218872
    4. ' M' → logprob: -2.796351671218872
    5. 'all' → logprob: -3.421351671218872
    6. 'N' → logprob: -3.546351671218872
    7. 'HP' → logprob: -3.546351671218872
    8. 'single' → logprob: -4.046351432800293
    9. ' N' → logprob: -4.421351432800293
    10. ' all' → logprob: -5.046351432800293

Token 198: ' consumption' (ID: 23818)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.018167614936828613
    2. 'es' → logprob: -5.018167495727539
    3. ' usage' → logprob: -5.643167495727539
    4. ' s' → logprob: -6.143167495727539
    5. 'casting' → logprob: -7.143167495727539
    6. '<|end|>' → logprob: -7.393167495727539
    7. ' costs' → logprob: -7.643167495727539
    8. ' cost' → logprob: -7.893167495727539
    9. 'cost' → logprob: -8.018167495727539
    10. 'power' → logprob: -8.393167495727539

Token 199: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 200: ' small' (ID: 3291)
  Prédit: ' small'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' small' → logprob: -0.8527458310127258
    2. 'small' → logprob: -1.852745771408081
    3. ' limited' → logprob: -1.852745771408081
    4. 'limited' → logprob: -3.102745771408081
    5. ' not' → logprob: -3.852745771408081
    6. ' always' → logprob: -4.22774600982666
    7. ' variable' → logprob: -4.35274600982666
    8. 'un' → logprob: -4.35274600982666
    9. ' high' → logprob: -4.47774600982666
    10. 'not' → logprob: -4.47774600982666

Token 201: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11650604009628296
    2. '<|end|>' → logprob: -2.6165060997009277
    3. '<|end|>' → logprob: -3.9915060997009277
    4. ' ,' → logprob: -4.491506099700928
    5. ' and' → logprob: -5.616506099700928
    6. ',
' → logprob: -6.616506099700928
    7. ' ' → logprob: -7.366506099700928
    8. '   ' → logprob: -7.741506099700928
    9. 'and' → logprob: -8.36650562286377
    10. '.' → logprob: -8.49150562286377

Token 202: 'max' (ID: 3228)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.7786698937416077
    2. ')' → logprob: -0.9036698937416077
    3. ' M' → logprob: -2.903669834136963
    4. 'and' → logprob: -3.903669834136963
    5. '),' → logprob: -4.278669834136963
    6. ' and' → logprob: -4.528669834136963
    7. '<=' → logprob: -4.528669834136963
    8. '100' → logprob: -4.778669834136963
    9. '20' → logprob: -5.528669834136963
    10. '10' → logprob: -5.778669834136963

Token 203: ' MP' (ID: 14857)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.193107008934021
    2. '20' → logprob: -1.193107008934021
    3. '100' → logprob: -2.1931071281433105
    4. '10' → logprob: -2.1931071281433105
    5. ')' → logprob: -3.6931071281433105
    6. '50' → logprob: -3.9431071281433105
    7. '(' → logprob: -4.0681071281433105
    8. '=' → logprob: -4.0681071281433105
    9. '   ' → logprob: -4.3181071281433105
    10. '25' → logprob: -4.8181071281433105

Token 204: '<=' (ID: 16672)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6090967059135437
    2. ')' → logprob: -1.1090967655181885
    3. ' ),' → logprob: -2.4840967655181885
    4. ' )' → logprob: -3.7340967655181885
    5. ',' → logprob: -5.109096527099609
    6. '=' → logprob: -5.734096527099609
    7. 's' → logprob: -6.109096527099609
    8. ' =' → logprob: -6.359096527099609
    9. ' ' → logprob: -6.484096527099609
    10. ' and' → logprob: -7.609096527099609

Token 205: '99' (ID: 2058)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.23283909261226654
    2. '10' → logprob: -2.2328391075134277
    3. '20' → logprob: -3.1078391075134277
    4. '50' → logprob: -3.6078391075134277
    5. '30' → logprob: -4.982839107513428
    6. '200' → logprob: -4.982839107513428
    7. '500' → logprob: -5.607839107513428
    8. '300' → logprob: -5.732839107513428
    9. '15' → logprob: -6.232839107513428
    10. '40' → logprob: -6.732839107513428

Token 206: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.07281190156936646
    2. ')' → logprob: -2.6978118419647217
    3. ',' → logprob: -6.697812080383301
    4. ' ),' → logprob: -6.947812080383301
    5. '),
' → logprob: -7.947812080383301
    6. ' )' → logprob: -9.3228120803833
    7. ' and' → logprob: -9.5728120803833
    8. ')
' → logprob: -10.4478120803833
    9. '):
' → logprob: -10.5728120803833
    10. '):' → logprob: -10.6978120803833

Token 207: ' and' (ID: 326)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16314104199409485
    2. '<|end|>' → logprob: -2.6631410121917725
    3. ' #' → logprob: -4.288141250610352
    4. 'max' → logprob: -4.413141250610352
    5. 'def' → logprob: -4.663141250610352
    6. ' and' → logprob: -4.788141250610352
    7. ' we' → logprob: -5.163141250610352
    8. ' max' → logprob: -5.663141250610352
    9. 'and' → logprob: -5.788141250610352
    10. '       ' → logprob: -6.038141250610352

Token 208: ' monsters' (ID: 59311)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.18261466920375824
    2. ' N' → logprob: -2.30761456489563
    3. 'max' → logprob: -3.68261456489563
    4. 'HP' → logprob: -3.93261456489563
    5. 'len' → logprob: -5.182614803314209
    6. ' max' → logprob: -5.182614803314209
    7. ' HP' → logprob: -5.432614803314209
    8. ' len' → logprob: -6.557614803314209
    9. 'M' → logprob: -6.682614803314209
    10. '#' → logprob: -7.182614803314209

Token 209: ' HP' (ID: 21979)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8813892006874084
    2. '<|end|>' → logprob: -1.7563891410827637
    3. '<=' → logprob: -2.6313891410827637
    4. ' <=' → logprob: -2.8813891410827637
    5. '_count' → logprob: -3.1313891410827637
    6. '<|end|>' → logprob: -3.2563891410827637
    7. ',' → logprob: -3.5063891410827637
    8. 'count' → logprob: -3.6313891410827637
    9. ' are' → logprob: -3.6313891410827637
    10. '=' → logprob: -4.381389141082764

Token 210: ' upto' (ID: 125533)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -1.2871214151382446
    2. ' <=' → logprob: -1.5371214151382446
    3. ')' → logprob: -1.6621214151382446
    4. 's' → logprob: -2.162121295928955
    5. ',' → logprob: -2.787121295928955
    6. '<|end|>' → logprob: -3.787121295928955
    7. '),' → logprob: -3.912121295928955
    8. '<|end|>' → logprob: -4.162121295928955
    9. ')<=' → logprob: -4.287121295928955
    10. '=' → logprob: -4.537121295928955

Token 211: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.32076898217201233
    2. '99' → logprob: -1.44576895236969
    3. '999' → logprob: -3.6957690715789795
    4. '200' → logprob: -5.6957688331604
    5. '20' → logprob: -6.1957688331604
    6. '300' → logprob: -6.4457688331604
    7. '50' → logprob: -6.5707688331604
    8. ' ' → logprob: -6.6957688331604
    9. '500' → logprob: -6.9457688331604
    10. '10' → logprob: -7.0707688331604

Token 212: '1' (ID: 16)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.4456660747528076
    2. '99' → logprob: -1.8206660747528076
    3. '999' → logprob: -1.9456660747528076
    4. '200' → logprob: -4.195666313171387
    5. '300' → logprob: -4.195666313171387
    6. '500' → logprob: -4.945666313171387
    7. '50' → logprob: -5.195666313171387
    8. '10' → logprob: -5.695666313171387
    9. '150' → logprob: -6.320666313171387
    10. '20' → logprob: -6.570666313171387

Token 213: 'e' (ID: 68)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '00' → logprob: -0.43969228863716125
    2. '8' → logprob: -2.314692258834839
    3. '000' → logprob: -2.564692258834839
    4. '0' → logprob: -2.814692258834839
    5. '5' → logprob: -3.189692258834839
    6. '9' → logprob: -3.939692258834839
    7. '2' → logprob: -4.189692497253418
    8. '6' → logprob: -4.439692497253418
    9. '4' → logprob: -5.064692497253418
    10. '7' → logprob: -5.189692497253418

Token 214: '5' (ID: 20)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.0348434448242188
    2. '9' → logprob: -1.0348434448242188
    3. '5' → logprob: -1.4098434448242188
    4. '6' → logprob: -3.6598434448242188
    5. '7' → logprob: -4.284843444824219
    6. '4' → logprob: -6.034843444824219
    7. '2' → logprob: -6.534843444824219
    8. '3' → logprob: -7.159843444824219
    9. '18' → logprob: -7.284843444824219
    10. '10' → logprob: -8.784843444824219

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10732083022594452
    2. ',
' → logprob: -2.857320785522461
    3. ')' → logprob: -3.732320785522461
    4. '),' → logprob: -4.982320785522461
    5. '
' → logprob: -5.482320785522461
    6. '<|end|>' → logprob: -5.482320785522461
    7. '):' → logprob: -6.107320785522461
    8. ':' → logprob: -6.357320785522461
    9. '       ' → logprob: -7.982320785522461
    10. '<|end|>' → logprob: -8.607320785522461

Token 216: ' DP' (ID: 51992)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6197555661201477
    2. ' pass' → logprob: -2.119755506515503
    3. '       ' → logprob: -2.494755506515503
    4. '<|end|>' → logprob: -2.494755506515503
    5. ' #' → logprob: -3.494755506515503
    6. ' continue' → logprob: -3.619755506515503
    7. 'continue' → logprob: -3.744755506515503
    8. '
' → logprob: -3.744755506515503
    9. 'pass' → logprob: -3.869755506515503
    10. ' 
' → logprob: -4.244755744934082

Token 217: ' on' (ID: 402)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.034524787217378616
    2. '<|end|>' → logprob: -4.034524917602539
    3. '=' → logprob: -5.034524917602539
    4. '<|end|>' → logprob: -6.034524917602539
    5. ',' → logprob: -6.284524917602539
    6. ')' → logprob: -6.409524917602539
    7. ' ' → logprob: -7.409524917602539
    8. '[' → logprob: -7.534524917602539
    9. '[]' → logprob: -7.784524917602539
    10. '=[]' → logprob: -8.409524917602539

Token 218: ' states' (ID: 9407)
  Prédit: ' monsters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' monsters' → logprob: -0.9537802934646606
    2. 'HP' → logprob: -2.578780174255371
    3. 'mon' → logprob: -2.703780174255371
    4. 'states' → logprob: -2.828780174255371
    5. 'monster' → logprob: -2.953780174255371
    6. ' states' → logprob: -2.953780174255371
    7. ' HP' → logprob: -3.203780174255371
    8. ' monster' → logprob: -3.578780174255371
    9. 'the' → logprob: -3.578780174255371
    10. ' magic' → logprob: -3.828780174255371

Token 219: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5467124581336975
    2. '
' → logprob: -1.5467123985290527
    3. '       ' → logprob: -2.9217123985290527
    4. ':
' → logprob: -2.9217123985290527
    5. ' =' → logprob: -3.9217123985290527
    6. ',' → logprob: -4.171712398529053
    7. ' :' → logprob: -5.046712398529053
    8. '   ' → logprob: -5.171712398529053
    9. '.' → logprob: -5.671712398529053
    10. 'def' → logprob: -5.671712398529053

Token 220: ' impossible' (ID: 19786)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7984316349029541
    2. 'not' → logprob: -0.7984316349029541
    3. 'possible' → logprob: -3.173431634902954
    4. 'd' → logprob: -4.423431396484375
    5. ' possible' → logprob: -4.673431396484375
    6. '...' → logprob: -5.423431396484375
    7. 'im' → logprob: -5.423431396484375
    8. ' impossible' → logprob: -5.423431396484375
    9. ' feasible' → logprob: -5.798431396484375
    10. ' infe' → logprob: -5.923431396484375

Token 221: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 222: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 223: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0579067468643188
    2. ' 
' → logprob: -1.1829067468643188
    3. '
' → logprob: -2.0579066276550293
    4. '        
' → logprob: -2.4329066276550293
    5. '#' (adapté à ' #') → logprob: -3.3079066276550293
    6. '        ' → logprob: -3.4329066276550293
    7. ' ' → logprob: -4.807906627655029
    8. ' #' → logprob: -4.932906627655029
    9. '    
' → logprob: -5.182906627655029
    10. 'def' → logprob: -5.182906627655029

Token 224: ' Alternative' (ID: 52728)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.3792741298675537
    2. 'left' → logprob: -2.1292741298675537
    3. 'max' → logprob: -3.0042741298675537
    4. ' low' → logprob: -3.3792741298675537
    5. 'def' → logprob: -3.6292741298675537
    6. 'lo' → logprob: -4.004274368286133
    7. 'dp' → logprob: -4.129274368286133
    8. '#' → logprob: -4.129274368286133
    9. ' lo' → logprob: -4.629274368286133
    10. ' left' → logprob: -5.004274368286133

Token 225: ' approach' (ID: 7139)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08919037878513336
    2. 'appro' → logprob: -3.5891904830932617
    3. ':
' → logprob: -4.089190483093262
    4. ' approach' → logprob: -4.464190483093262
    5. '#' → logprob: -4.589190483093262
    6. ' =' → logprob: -5.464190483093262
    7. '=' → logprob: -5.964190483093262
    8. 'import' → logprob: -6.089190483093262
    9. '       ' → logprob: -6.214190483093262
    10. ',' → logprob: -6.214190483093262

Token 226: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05589454248547554
    2. ':
' → logprob: -3.055894613265991
    3. '#' → logprob: -6.055894374847412
    4. '<|end|>' → logprob: -6.555894374847412
    5. '       ' → logprob: -7.055894374847412
    6. '
' → logprob: -7.180894374847412
    7. ':

' → logprob: -7.930894374847412
    8. 'import' → logprob: -8.05589485168457
    9. '        
' → logprob: -8.55589485168457
    10. ' is' → logprob: -8.55589485168457

Token 227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02443895861506462
    2. ' #' → logprob: -5.024438858032227
    3. '        
' → logprob: -5.399438858032227
    4. '#' → logprob: -5.399438858032227
    5. ' from' → logprob: -6.774438858032227
    6. ' continue' → logprob: -6.774438858032227
    7. '        ' → logprob: -6.899438858032227
    8. ' pass' → logprob: -7.149438858032227
    9. ' for' → logprob: -7.524438858032227
    10. ' max' → logprob: -7.649438858032227

Token 228: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.093184232711792
    2. ' #' → logprob: -1.593184232711792
    3. 'Use' → logprob: -2.343184232711792
    4. '       ' → logprob: -2.843184232711792
    5. ' Use' → logprob: -2.843184232711792
    6. ' from' → logprob: -3.218184232711792
    7. 'from' → logprob: -3.593184232711792
    8. 'import' → logprob: -3.718184232711792
    9. ' for' → logprob: -3.968184232711792
    10. ' use' → logprob: -4.093184471130371

Token 229: ' For' (ID: 2214)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6545541882514954
    2. 'from' → logprob: -1.7795541286468506
    3. 'Use' → logprob: -3.1545541286468506
    4. ' #' → logprob: -3.2795541286468506
    5. ' from' → logprob: -3.5295541286468506
    6. 'import' → logprob: -3.7795541286468506
    7. 'single' → logprob: -3.9045541286468506
    8. 'max' → logprob: -4.15455436706543
    9. 'dp' → logprob: -4.15455436706543
    10. ' single' → logprob: -4.27955436706543

Token 230: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.8099142909049988
    2. 'each' → logprob: -0.8099142909049988
    3. ' all' → logprob: -3.5599143505096436
    4. 'all' → logprob: -3.6849143505096436
    5. ' spell' → logprob: -4.1849141120910645
    6. ' single' → logprob: -5.0599141120910645
    7. 'single' → logprob: -5.4349141120910645
    8. 'i' → logprob: -5.5599141120910645
    9. '_each' → logprob: -5.6849141120910645
    10. ' i' → logprob: -5.9349141120910645

Token 231: ' monster' (ID: 36286)
  Prédit: ' monster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' monster' → logprob: -1.1816155910491943
    2. 'monster' → logprob: -1.4316155910491943
    3. 'spell' → logprob: -1.5566155910491943
    4. ' spell' → logprob: -1.5566155910491943
    5. ' single' → logprob: -4.931615829467773
    6. 'single' → logprob: -5.056615829467773
    7. 'mon' → logprob: -5.306615829467773
    8. ' all' → logprob: -5.806615829467773
    9. 'all' → logprob: -6.056615829467773
    10. 'target' → logprob: -6.806615829467773

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024658335372805595
    2. ':' → logprob: -4.399658203125
    3. ' ,' → logprob: -4.524658203125
    4. ',
' → logprob: -8.399658203125
    5. ' in' → logprob: -9.274658203125
    6. ' i' → logprob: -9.399658203125
    7. ' =' → logprob: -9.524658203125
    8. ':
' → logprob: -9.649658203125
    9. ',i' → logprob: -9.774658203125
    10. ' :' → logprob: -10.024658203125

Token 233: ' compute' (ID: 23864)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.8552141785621643
    2. 'compute' → logprob: -1.8552141189575195
    3. 'for' → logprob: -2.6052141189575195
    4. ' compute' → logprob: -2.8552141189575195
    5. 'we' → logprob: -2.9802141189575195
    6. ' we' → logprob: -3.2302141189575195
    7. ' find' → logprob: -3.3552141189575195
    8. 'find' → logprob: -3.3552141189575195
    9. 'det' → logprob: -3.6052141189575195
    10. ' calculate' → logprob: -3.7302141189575195

Token 234: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7439164519309998
    2. 'the' → logprob: -1.4939165115356445
    3. ' minimal' → logprob: -1.6189165115356445
    4. 'minimum' → logprob: -3.3689165115356445
    5. 'minimal' → logprob: -3.7439165115356445
    6. ' minimum' → logprob: -3.9939165115356445
    7. ' min' → logprob: -4.1189165115356445
    8. 'min' → logprob: -5.4939165115356445
    9. ' how' → logprob: -6.3689165115356445
    10. 'how' → logprob: -7.6189165115356445

Token 235: ' minimal' (ID: 19957)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.33401060104370117
    2. 'minimal' → logprob: -2.084010601043701
    3. ' minimal' → logprob: -2.334010601043701
    4. ' minimum' → logprob: -3.584010601043701
    5. 'maximum' → logprob: -4.084010601043701
    6. 'max' → logprob: -5.334010601043701
    7. 'number' → logprob: -5.709010601043701
    8. 'damage' → logprob: -5.959010601043701
    9. 'required' → logprob: -6.459010601043701
    10. 'min' → logprob: -6.959010601043701

Token 236: ' MP' (ID: 14857)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -1.2490277290344238
    2. ' amount' → logprob: -1.3740277290344238
    3. ' damage' → logprob: -1.9990277290344238
    4. 'damage' → logprob: -2.499027729034424
    5. ' magic' → logprob: -3.124027729034424
    6. ' cost' → logprob: -3.749027729034424
    7. 'amount' → logprob: -3.749027729034424
    8. ' single' → logprob: -3.874027729034424
    9. ' required' → logprob: -3.874027729034424
    10. 'cost' → logprob: -4.124027729034424

Token 237: ' needed' (ID: 6118)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 238: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6571439504623413
    2. '<|end|>' → logprob: -0.9071439504623413
    3. '<|end|>' → logprob: -3.907144069671631
    4. 'to' → logprob: -3.907144069671631
    5. '   ' → logprob: -4.532144069671631
    6. ')' → logprob: -4.782144069671631
    7. ' for' → logprob: -4.782144069671631
    8. 'for' → logprob: -6.282144069671631
    9. ',' → logprob: -6.407144069671631
    10. ' ' → logprob: -6.907144069671631

Token 239: ' kill' (ID: 15874)
  Prédit: 'kill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kill' → logprob: -0.5747268795967102
    2. 'reduce' → logprob: -1.6997268199920654
    3. 'def' → logprob: -1.8247268199920654
    4. 'deal' → logprob: -2.8247268199920654
    5. ' kill' → logprob: -4.1997270584106445
    6. 'bring' → logprob: -5.0747270584106445
    7. ' defeat' → logprob: -5.1997270584106445
    8. ' reduce' → logprob: -5.5747270584106445
    9. ' deal' → logprob: -6.9497270584106445
    10. 'destroy' → logprob: -7.5747270584106445

Token 240: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -0.02360636368393898
    2. 'it' → logprob: -3.898606300354004
    3. ' that' → logprob: -6.273606300354004
    4. ' them' → logprob: -7.898606300354004
    5. ' each' → logprob: -8.273606300354004
    6. ' one' → logprob: -8.648606300354004
    7. 'that' → logprob: -8.773606300354004
    8. 'each' → logprob: -9.898606300354004
    9. ' him' → logprob: -10.273606300354004
    10. 'them' → logprob: -10.273606300354004

Token 241: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 242: ' single' (ID: 4590)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.6181662678718567
    2. ' single' → logprob: -1.618166208267212
    3. 'only' → logprob: -2.243166208267212
    4. 'just' → logprob: -3.243166208267212
    5. ' just' → logprob: -3.368166208267212
    6. ' only' → logprob: -4.243166446685791
    7. 'using' → logprob: -4.743166446685791
    8. 'sp' → logprob: -5.118166446685791
    9. 'all' → logprob: -5.243166446685791
    10. ' using' → logprob: -5.368166446685791

Token 243: '-target' (ID: 40350)
  Prédit: '-target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-target' → logprob: -0.4462221562862396
    2. '-' → logprob: -1.071222186088562
    3. '_target' → logprob: -4.571222305297852
    4. ' -' → logprob: -5.821222305297852
    5. ' target' → logprob: -6.196222305297852
    6. 'target' → logprob: -6.696222305297852
    7. '_' → logprob: -8.196222305297852
    8. ' spell' → logprob: -9.196222305297852
    9. '_spell' → logprob: -9.321222305297852
    10. ')' → logprob: -9.571222305297852

Token 244: ' spells' (ID: 69967)
  Prédit: ' spells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spells' → logprob: -0.243836909532547
    2. 's' → logprob: -1.9938368797302246
    3. 'sp' → logprob: -3.2438368797302246
    4. ' or' → logprob: -4.493836879730225
    5. 'spell' → logprob: -4.868836879730225
    6. '_spell' → logprob: -4.993836879730225
    7. '_sp' → logprob: -5.368836879730225
    8. ' spell' → logprob: -5.993836879730225
    9. '(s' → logprob: -6.118836879730225
    10. '<|end|>' → logprob: -6.743836879730225

Token 245: ' only' (ID: 1606)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2272769808769226
    2. '.' → logprob: -2.4772770404815674
    3. '<|end|>' → logprob: -2.9772770404815674
    4. '       ' → logprob: -3.4772770404815674
    5. ',' → logprob: -4.352276802062988
    6. '        
' → logprob: -4.977276802062988
    7. ':' → logprob: -5.352276802062988
    8. '.
' → logprob: -6.227276802062988
    9. '<|end|>' → logprob: -6.352276802062988
    10. '  
' → logprob: -6.727276802062988

Token 247: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43831464648246765
    2. '       ' → logprob: -1.68831467628479
    3. '<|end|>' → logprob: -2.68831467628479
    4. ',' → logprob: -3.56331467628479
    5. '.' → logprob: -3.56331467628479
    6. '        
' → logprob: -4.063314437866211
    7. '  
' → logprob: -4.938314437866211
    8. ':' → logprob: -5.188314437866211
    9. '\n' → logprob: -6.188314437866211
    10. '.
' → logprob: -6.438314437866211

Token 248: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6809804439544678
    2. '<|end|>' → logprob: -1.3059804439544678
    3. '       ' → logprob: -2.6809804439544678
    4. ',' → logprob: -2.9309804439544678
    5. '.' → logprob: -3.5559804439544678
    6. ':' → logprob: -3.8059804439544678
    7. '<|end|>' → logprob: -4.930980682373047
    8. '        
' → logprob: -5.180980682373047
    9. ' 
' → logprob: -5.555980682373047
    10. '  
' → logprob: -5.555980682373047

Token 249: ' For' (ID: 2214)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.7232243418693542
    2. 'each' → logprob: -1.098224401473999
    3. ' all' → logprob: -2.223224401473999
    4. ' each' → logprob: -2.723224401473999
    5. ' i' → logprob: -6.59822416305542
    6. 'i' → logprob: -6.97322416305542
    7. 'multi' → logprob: -7.22322416305542
    8. ' spell' → logprob: -7.34822416305542
    9. '_each' → logprob: -7.59822416305542
    10. 'the' → logprob: -7.84822416305542

Token 251: '-target' (ID: 40350)
  Prédit: '-target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-target' → logprob: -0.012941260822117329
    2. '-' → logprob: -4.762941360473633
    3. 'target' → logprob: -5.637941360473633
    4. ' -' → logprob: -8.012941360473633
    5. ' target' → logprob: -8.387941360473633
    6. '_target' → logprob: -9.512941360473633
    7. '-sp' → logprob: -10.137941360473633
    8. ' spells' → logprob: -10.637941360473633
    9. 'targets' → logprob: -10.887941360473633
    10. 'sp' → logprob: -11.137941360473633

Token 252: ' spells' (ID: 69967)
  Prédit: ' spells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spells' → logprob: -0.28590625524520874
    2. 'sp' → logprob: -2.1609063148498535
    3. '_sp' → logprob: -2.4109063148498535
    4. '_' → logprob: -4.5359063148498535
    5. ':' → logprob: -4.7859063148498535
    6. '_s' → logprob: -5.2859063148498535
    7. 's' → logprob: -5.6609063148498535
    8. '_spell' → logprob: -6.1609063148498535
    9. ' ' → logprob: -6.2859063148498535
    10. '_target' → logprob: -6.2859063148498535

Token 253: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5933924913406372
    2. '<|end|>' → logprob: -1.3433924913406372
    3. ',' → logprob: -2.8433923721313477
    4. '       ' → logprob: -3.3433923721313477
    5. '
' → logprob: -3.9683923721313477
    6. '<|end|>' → logprob: -4.218392372131348
    7. ':
' → logprob: -4.968392372131348
    8. ' =' → logprob: -4.968392372131348
    9. '.' → logprob: -5.093392372131348
    10. ')' → logprob: -5.218392372131348

Token 254: ' their' (ID: 1043)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.715239942073822
    2. '#' → logprob: -1.2152400016784668
    3. ' for' → logprob: -2.590240001678467
    4. 'apply' → logprob: -3.215240001678467
    5. 'continue' → logprob: -3.840240001678467
    6. '       ' → logprob: -4.090240001678467
    7. ' apply' → logprob: -4.090240001678467
    8. 'pass' → logprob: -4.215240001678467
    9. ' continue' → logprob: -5.340240001678467
    10. 'use' → logprob: -5.340240001678467

Token 255: ' effect' (ID: 3159)
  Prédit: ' cumulative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cumulative' → logprob: -0.594697117805481
    2. ' usage' → logprob: -2.2196969985961914
    3. 'damage' → logprob: -2.2196969985961914
    4. ' damage' → logprob: -2.4696969985961914
    5. ' total' → logprob: -4.094696998596191
    6. ' combined' → logprob: -4.094696998596191
    7. 'c' → logprob: -4.219696998596191
    8. ' effect' → logprob: -4.344696998596191
    9. 'acc' → logprob: -4.469696998596191
    10. ' MP' → logprob: -4.594696998596191

Token 256: ' is' (ID: 382)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.9839065670967102
    2. 'can' → logprob: -1.2339065074920654
    3. 's' → logprob: -1.9839065074920654
    4. 'is' → logprob: -2.4839065074920654
    5. ' is' → logprob: -2.6089065074920654
    6. ' applies' → logprob: -4.1089067459106445
    7. '#' → logprob: -4.7339067459106445
    8. 'ap' → logprob: -6.1089067459106445
    9. 'combined' → logprob: -6.3589067459106445
    10. '<|end|>' → logprob: -6.3589067459106445

Token 257: ' global' (ID: 5466)
  Prédit: ' cumulative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cumulative' → logprob: -0.23475614190101624
    2. 'c' → logprob: -2.4847562313079834
    3. ' additive' → logprob: -2.7347562313079834
    4. ' accum' → logprob: -4.359755992889404
    5. ' global' → logprob: -4.484755992889404
    6. 'global' → logprob: -4.609755992889404
    7. ' to' → logprob: -5.109755992889404
    8. 'acc' → logprob: -5.359755992889404
    9. 'to' → logprob: -5.609755992889404
    10. ' c' → logprob: -5.734755992889404

Token 258: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2129262536764145
    2. '<|end|>' → logprob: -2.337926149368286
    3. '       ' → logprob: -2.837926149368286
    4. '        
' → logprob: -4.462926387786865
    5. '

' → logprob: -4.587926387786865
    6. '<|end|>' → logprob: -5.962926387786865
    7. ' 
' → logprob: -6.337926387786865
    8. '.' → logprob: -6.337926387786865
    9. ',' → logprob: -6.462926387786865
    10. '\n' → logprob: -6.837926387786865

Token 259: ' we' (ID: 581)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.27281713485717773
    2. 'so' → logprob: -1.5228171348571777
    3. '#' → logprob: -4.397817134857178
    4. ' apply' → logprob: -6.272817134857178
    5. 'apply' → logprob: -6.397817134857178
    6. 'and' → logprob: -6.897817134857178
    7. ' and' → logprob: -7.272817134857178
    8. ' but' → logprob: -7.522817134857178
    9. 'but' → logprob: -8.147817611694336
    10. '       ' → logprob: -8.147817611694336

Token 260: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.05774349346756935
    2. 'can' → logprob: -3.557743549346924
    3. ' continue' → logprob: -5.057743549346924
    4. ' need' → logprob: -5.057743549346924
    5. ' may' → logprob: -5.432743549346924
    6. ' should' → logprob: -6.307743549346924
    7. ' have' → logprob: -6.557743549346924
    8. ' try' → logprob: -6.682743549346924
    9. ' will' → logprob: -7.182743549346924
    10. 'continue' → logprob: -7.432743549346924

Token 261: ' apply' (ID: 6096)
  Prédit: 'apply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apply' → logprob: -1.0002338886260986
    2. 'try' → logprob: -1.3752338886260986
    3. 'consider' → logprob: -1.5002338886260986
    4. ' try' → logprob: -2.7502338886260986
    5. 'use' → logprob: -3.8752338886260986
    6. ' consider' → logprob: -4.3752336502075195
    7. 'combine' → logprob: -4.5002336502075195
    8. ' apply' → logprob: -4.5002336502075195
    9. ' use' → logprob: -4.6252336502075195
    10. 'think' → logprob: -5.0002336502075195

Token 262: ' them' (ID: 1373)
  Prédit: ' them'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' them' → logprob: -0.3963344097137451
    2. 'them' → logprob: -1.6463344097137451
    3. ' binary' → logprob: -2.271334409713745
    4. 'binary' → logprob: -4.146334648132324
    5. ' multiple' → logprob: -6.021334648132324
    6. ' all' → logprob: -6.146334648132324
    7. ' some' → logprob: -6.146334648132324
    8. 'all' → logprob: -6.146334648132324
    9. 'some' → logprob: -6.896334648132324
    10. 'multiple' → logprob: -7.021334648132324

Token 263: ' multiple' (ID: 7598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.17990165948867798
    2. 'times' → logprob: -1.8049015998840332
    3. '       ' → logprob: -9.804902076721191
    4. '           ' → logprob: -10.429902076721191
    5. '_times' → logprob: -10.554902076721191
    6. '(times' → logprob: -11.554902076721191
    7. '```' → logprob: -11.929902076721191
    8. 's' → logprob: -12.554902076721191
    9. '-times' → logprob: -12.679902076721191
    10. '   ' → logprob: -12.804902076721191

Token 265: ' and' (ID: 326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 266: ' sum' (ID: 4215)
  Prédit: 'combine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'combine' → logprob: -1.0759546756744385
    2. ' see' → logprob: -2.3259546756744385
    3. ' check' → logprob: -2.4509546756744385
    4. 'see' → logprob: -2.5759546756744385
    5. 'check' → logprob: -2.7009546756744385
    6. ' accumulate' → logprob: -2.8259546756744385
    7. 'reduce' → logprob: -3.0759546756744385
    8. 'subtract' → logprob: -3.3259546756744385
    9. 'simulate' → logprob: -3.4509546756744385
    10. 'try' → logprob: -3.5759546756744385

Token 267: ' cost' (ID: 3097)
  Prédit: ' up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.6864295601844788
    2. '       ' → logprob: -1.436429500579834
    3. 'up' → logprob: -3.186429500579834
    4. '           ' → logprob: -3.561429500579834
    5. '()' → logprob: -3.811429500579834
    6. ')' → logprob: -3.811429500579834
    7. '(' → logprob: -3.936429500579834
    8. '   ' → logprob: -4.311429500579834
    9. '+' → logprob: -4.311429500579834
    10. '#' → logprob: -4.436429500579834

Token 268: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 269: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7699487209320068
    2. '<|end|>' → logprob: -0.7699487209320068
    3. '
' → logprob: -3.769948720932007
    4. '        
' → logprob: -4.144948959350586
    5. ',' → logprob: -4.519948959350586
    6. '<|end|>' → logprob: -4.894948959350586
    7. '.' → logprob: -5.019948959350586
    8. '#' → logprob: -5.894948959350586
    9. ' ' → logprob: -6.269948959350586
    10. '        ' → logprob: -6.894948959350586

Token 270: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7690489292144775
    2. '
' → logprob: -1.2690489292144775
    3. '<|end|>' → logprob: -2.0190489292144775
    4. '        
' → logprob: -2.5190489292144775
    5. ' 
' → logprob: -3.8940489292144775
    6. '        ' → logprob: -5.519048690795898
    7. ' ' → logprob: -5.519048690795898
    8. '    
' → logprob: -6.019048690795898
    9. '  
' → logprob: -6.144048690795898
    10. '   ' → logprob: -6.769048690795898

Token 271: ' Let's' (ID: 41021)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.414385437965393
    2. ' #' → logprob: -2.1643853187561035
    3. 'best' → logprob: -2.2893853187561035
    4. 'dp' → logprob: -2.5393853187561035
    5. 'single' → logprob: -2.5393853187561035
    6. ' 
' → logprob: -2.7893853187561035
    7. ' single' → logprob: -3.0393853187561035
    8. 'max' → logprob: -3.1643853187561035
    9. 'from' → logprob: -3.5393853187561035
    10. ' best' → logprob: -3.7893853187561035

Token 272: ' define' (ID: 13174)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6931084990501404
    2. '#' → logprob: -1.9431085586547852
    3. 'consider' → logprob: -2.693108558654785
    4. ' continue' → logprob: -2.818108558654785
    5. 'single' → logprob: -3.318108558654785
    6. 'from' → logprob: -3.318108558654785
    7. '   ' → logprob: -3.443108558654785
    8. 'import' → logprob: -3.943108558654785
    9. 'apply' → logprob: -3.943108558654785
    10. 'dp' → logprob: -4.193108558654785

Token 273: ':
' (ID: 734)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2976151406764984
    2. 'def' → logprob: -1.9226151704788208
    3. ' dp' → logprob: -3.1726150512695312
    4. 'max' → logprob: -3.9226150512695312
    5. ' max' → logprob: -4.047615051269531
    6. ' a' → logprob: -5.547615051269531
    7. 'single' → logprob: -5.672615051269531
    8. ' single' → logprob: -6.297615051269531
    9. '#' → logprob: -6.297615051269531
    10. 'damage' → logprob: -6.297615051269531

Token 274: '       ' (ID: 309)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.189491629600525
    2. ' dp' → logprob: -1.814491629600525
    3. ' single' → logprob: -2.1894917488098145
    4. 'dp' → logprob: -2.3144917488098145
    5. '   ' → logprob: -2.6894917488098145
    6. 'def' → logprob: -2.8144917488098145
    7. 'max' → logprob: -3.5644917488098145
    8. ' best' → logprob: -3.6894917488098145
    9. 'single' → logprob: -3.8144917488098145
    10. ' #' → logprob: -3.9394917488098145

Token 275: ' #' (ID: 1069)
  Prédit: ' single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' single' → logprob: -1.130426049232483
    2. 'def' → logprob: -2.0054259300231934
    3. 'single' → logprob: -2.0054259300231934
    4. ' max' → logprob: -2.8804259300231934
    5. '   ' → logprob: -2.8804259300231934
    6. 'dp' → logprob: -3.0054259300231934
    7. '#' (adapté à ' #') → logprob: -3.3804259300231934
    8. 'max' → logprob: -3.7554259300231934
    9. 'from' → logprob: -3.8804259300231934
    10. ' best' → logprob: -4.005425930023193

Token 276: ' -' (ID: 533)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.9355809092521667
    2. 'dp' → logprob: -2.0605809688568115
    3. ' single' → logprob: -2.3105809688568115
    4. '#' → logprob: -2.4355809688568115
    5. 'best' → logprob: -2.8105809688568115
    6. ' min' → logprob: -3.0605809688568115
    7. 'min' → logprob: -3.0605809688568115
    8. 'def' → logprob: -3.5605809688568115
    9. 'max' → logprob: -3.8105809688568115
    10. ' best' → logprob: -4.310580730438232

Token 277: ' best' (ID: 1636)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' → logprob: -1.1127878427505493
    2. 'dp' → logprob: -1.8627878427505493
    3. ' min' → logprob: -1.9877878427505493
    4. ' single' → logprob: -1.9877878427505493
    5. 'min' → logprob: -2.4877877235412598
    6. '#' → logprob: -3.2377877235412598
    7. 'best' → logprob: -3.9877877235412598
    8. 'max' → logprob: -3.9877877235412598
    9. ' best' → logprob: -4.23778772354126
    10. 'def' → logprob: -4.48778772354126

Token 278: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.014240606687963009
    2. '_mp' → logprob: -4.639240741729736
    3. '_per' → logprob: -7.264240741729736
    4. '_damage' → logprob: -7.264240741729736
    5. '_hp' → logprob: -7.514240741729736
    6. '_spell' → logprob: -7.764240741729736
    7. '_s' → logprob: -7.764240741729736
    8. ' =' → logprob: -8.264240264892578
    9. '_cost' → logprob: -8.264240264892578
    10. '_MP' → logprob: -8.514240264892578

Token 279: '_mp' (ID: 96508)
  Prédit: '_single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.6190769672393799
    2. '_mp' → logprob: -1.3690769672393799
    3. '_' → logprob: -2.36907696723938
    4. '_target' → logprob: -2.61907696723938
    5. '_spell' → logprob: -3.86907696723938
    6. ' =' → logprob: -4.869076728820801
    7. '_damage' → logprob: -5.619076728820801
    8. '_MP' → logprob: -6.119076728820801
    9. '_cost' → logprob: -6.244076728820801
    10. '_hp' → logprob: -6.494076728820801

Token 280: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05964571610093117
    2. '=' → logprob: -2.934645652770996
    3. '_per' → logprob: -5.559645652770996
    4. '_single' → logprob: -7.809645652770996
    5. '_for' → logprob: -8.309645652770996
    6. '=[]' → logprob: -9.684645652770996
    7. 's' → logprob: -10.059645652770996
    8. ' ' → logprob: -10.059645652770996
    9. '   ' → logprob: -10.059645652770996
    10. '_cost' → logprob: -11.684645652770996

Token 281: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017533571226522326
    2. ' ]' → logprob: -6.501753330230713
    3. ']=' → logprob: -8.626753807067871
    4. '   ' → logprob: -11.376753807067871
    5. ']_' → logprob: -11.501753807067871
    6. '_]' → logprob: -11.626753807067871
    7. '[i' → logprob: -12.251753807067871
    8. '][' → logprob: -12.251753807067871
    9. 's' → logprob: -12.501753807067871
    10. ')' → logprob: -12.876753807067871

Token 282: ' minimal' (ID: 19957)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.3291447162628174
    2. 'math' → logprob: -1.4541447162628174
    3. 'inf' → logprob: -4.704144477844238
    4. '[' → logprob: -4.954144477844238
    5. 'float' → logprob: -5.079144477844238
    6. ' [' → logprob: -5.204144477844238
    7. ' float' → logprob: -5.204144477844238
    8. ' minimal' → logprob: -5.329144477844238
    9. ' inf' → logprob: -6.579144477844238
    10. ' the' → logprob: -6.704144477844238

Token 283: ' MP' (ID: 14857)
  Prédit: '_single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -1.0997718572616577
    2. '_mp' → logprob: -1.0997718572616577
    3. ' single' → logprob: -1.9747718572616577
    4. '_' → logprob: -2.5997719764709473
    5. ' _' → logprob: -2.9747719764709473
    6. ' MP' → logprob: -3.2247719764709473
    7. '_magic' → logprob: -5.099771976470947
    8. ' mp' → logprob: -5.224771976470947
    9. ' =' → logprob: -5.474771976470947
    10. ' ' → logprob: -5.724771976470947

Token 284: ' to' (ID: 316)
  Prédit: '_required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_required' → logprob: -0.5447221994400024
    2. '_needed' → logprob: -1.1697221994400024
    3. ' =' → logprob: -3.794722080230713
    4. '_for' → logprob: -3.919722080230713
    5. '[i' → logprob: -4.294722080230713
    6. '_' → logprob: -4.544722080230713
    7. '_to' → logprob: -4.794722080230713
    8. '_used' → logprob: -5.044722080230713
    9. ' for' → logprob: -5.044722080230713
    10. ' _' → logprob: -5.294722080230713

Token 285: ' kill' (ID: 15874)
  Prédit: 'kill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kill' → logprob: -0.07456110417842865
    2. ' kill' → logprob: -2.94956111907959
    3. 'reduce' → logprob: -4.69956111907959
    4. 'def' → logprob: -5.32456111907959
    5. 'deal' → logprob: -5.57456111907959
    6. ' reduce' → logprob: -7.57456111907959
    7. ' defeat' → logprob: -7.94956111907959
    8. 'k' → logprob: -8.82456111907959
    9. ' deal' → logprob: -9.07456111907959
    10. 'destroy' → logprob: -9.32456111907959

Token 286: ' monster' (ID: 36286)
  Prédit: ' monster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' monster' → logprob: -0.2074308842420578
    2. ' the' → logprob: -2.457430839538574
    3. ' a' → logprob: -2.832430839538574
    4. 'monster' → logprob: -4.332430839538574
    5. ' ith' → logprob: -4.582430839538574
    6. ' one' → logprob: -4.957430839538574
    7. ' i' → logprob: -5.207430839538574
    8. '[i' → logprob: -5.957430839538574
    9. 'the' → logprob: -6.582430839538574
    10. '_' → logprob: -7.082430839538574

Token 287: ' i' (ID: 575)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3761073052883148
    2. ' _' → logprob: -1.8761073350906372
    3. ' [' → logprob: -2.8761072158813477
    4. '_single' → logprob: -3.2511072158813477
    5. '[' → logprob: -4.126107215881348
    6. ' for' → logprob: -4.751107215881348
    7. '   ' → logprob: -5.001107215881348
    8. ' =' → logprob: -5.501107215881348
    9. ' i' → logprob: -5.626107215881348
    10. '_for' → logprob: -5.751107215881348

Token 288: ' using' (ID: 2360)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04449041560292244
    2. '=' → logprob: -3.294490337371826
    3. '[i' → logprob: -7.169490337371826
    4. ',' → logprob: -7.169490337371826
    5. '   ' → logprob: -7.169490337371826
    6. ')' → logprob: -7.294490337371826
    7. '
' → logprob: -7.669490337371826
    8. ' for' → logprob: -7.919490337371826
    9. '=[]' → logprob: -8.044490814208984
    10. '[' → logprob: -8.169490814208984

Token 289: ' only' (ID: 1606)
  Prédit: ' single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' single' → logprob: -0.9153705835342407
    2. ' only' → logprob: -1.4153705835342407
    3. 'single' → logprob: -1.5403705835342407
    4. 'only' → logprob: -2.040370464324951
    5. ' a' → logprob: -4.915370464324951
    6. ' just' → logprob: -6.040370464324951
    7. 'a' → logprob: -6.290370464324951
    8. 'just' → logprob: -8.04037094116211
    9. ' ' → logprob: -8.16537094116211
    10. ' any' → logprob: -8.79037094116211

Token 290: ' single' (ID: 4590)
  Prédit: ' single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' single' → logprob: -0.253496915102005
    2. 'single' → logprob: -1.5034968852996826
    3. ' a' → logprob: -6.628497123718262
    4. 'a' → logprob: -9.753497123718262
    5. ' the' → logprob: -9.878497123718262
    6. ' ' → logprob: -10.253497123718262
    7. ' one' → logprob: -10.378497123718262
    8. 'sp' → logprob: -11.378497123718262
    9. 'one' → logprob: -11.503497123718262
    10. ' any' → logprob: -11.878497123718262

Token 291: '-target' (ID: 40350)
  Prédit: '_target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.4083356559276581
    2. '_' → logprob: -1.4083356857299805
    3. '-' → logprob: -2.5333356857299805
    4. '_single' → logprob: -5.5333356857299805
    5. '-target' → logprob: -5.6583356857299805
    6. '_-' → logprob: -6.9083356857299805
    7. '_targets' → logprob: -7.0333356857299805
    8. '-_' → logprob: -7.0333356857299805
    9. ' -' → logprob: -8.03333568572998
    10. '_t' → logprob: -8.15833568572998

Token 292: ' spells' (ID: 69967)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.04452906548976898
    2. ' spells' → logprob: -3.1695289611816406
    3. 'sp' → logprob: -7.294528961181641
    4. '_spell' → logprob: -7.919528961181641
    5. '_' → logprob: -8.29452896118164
    6. ' _' → logprob: -9.54452896118164
    7. '_mp' → logprob: -10.16952896118164
    8. '_single' → logprob: -10.41952896118164
    9. '```' → logprob: -10.91952896118164
    10. 's' → logprob: -11.16952896118164

Token 293: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04187823832035065
    2. '=' → logprob: -4.1668782234191895
    3. '
' → logprob: -4.7918782234191895
    4. '       ' → logprob: -5.1668782234191895
    5. ',' → logprob: -5.7918782234191895
    6. '<|end|>' → logprob: -6.5418782234191895
    7. '   ' → logprob: -6.9168782234191895
    8. '=[]' → logprob: -7.1668782234191895
    9. 's' → logprob: -7.2918782234191895
    10. '[i' → logprob: -7.4168782234191895

Token 294: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09714269638061523
    2. '=' → logprob: -2.5971426963806152
    3. '       ' → logprob: -4.722142696380615
    4. '
' → logprob: -5.347142696380615
    5. '   ' → logprob: -6.222142696380615
    6. '[i' → logprob: -7.597142696380615
    7. '=
' → logprob: -7.972142696380615
    8. ' =
' → logprob: -7.972142696380615
    9. '        
' → logprob: -8.347143173217773
    10. ',' → logprob: -8.347143173217773

Token 295: ' #' (ID: 1069)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02439032681286335
    2. '=' → logprob: -4.77439022064209
    3. '
' → logprob: -4.77439022064209
    4. '       ' → logprob: -5.64939022064209
    5. '   ' → logprob: -6.64939022064209
    6. '[i' → logprob: -7.89939022064209
    7. ',' → logprob: -8.02439022064209
    8. ' =
' → logprob: -8.27439022064209
    9. '\n' → logprob: -8.27439022064209
    10. '[' → logprob: -8.77439022064209

Token 296: ' -' (ID: 533)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09294994920492172
    2. '=' → logprob: -2.592949867248535
    3. '[' → logprob: -5.592949867248535
    4. '=
' → logprob: -5.842949867248535
    5. ' =
' → logprob: -6.592949867248535
    6. '
' → logprob: -6.967949867248535
    7. '[i' → logprob: -7.217949867248535
    8. '#' → logprob: -7.467949867248535
    9. ' best' → logprob: -7.592949867248535
    10. '       ' → logprob: -7.717949867248535

Token 297: ' We'll' (ID: 46830)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.008634896948933601
    2. ' best' → logprob: -5.3836350440979
    3. 'all' → logprob: -6.5086350440979
    4. 'import' → logprob: -7.1336350440979
    5. 'from' → logprob: -7.8836350440979
    6. '#' → logprob: -7.8836350440979
    7. 'for' → logprob: -8.133634567260742
    8. 'def' → logprob: -8.633634567260742
    9. 'single' → logprob: -8.758634567260742
    10. 'max' → logprob: -9.383634567260742

Token 298: ' try' (ID: 2075)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.3083155155181885
    2. 'initialize' → logprob: -2.1833155155181885
    3. ' compute' → logprob: -3.0583155155181885
    4. 'continue' → logprob: -3.5583155155181885
    5. 'calculate' → logprob: -3.6833155155181885
    6. 'pre' → logprob: -3.8083155155181885
    7. ' pre' → logprob: -4.683315277099609
    8. ' initialize' → logprob: -5.058315277099609
    9. '   ' → logprob: -5.933315277099609
    10. ' continue' → logprob: -6.308315277099609

Token 299: ' all' (ID: 722)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.9836328029632568
    2. ' applying' → logprob: -0.9836328029632568
    3. 'all' → logprob: -1.9836328029632568
    4. ' to' → logprob: -2.858632802963257
    5. ' all' → logprob: -3.108632802963257
    6. 'to' → logprob: -5.108633041381836
    7. ' adding' → logprob: -6.858633041381836
    8. 'using' → logprob: -6.983633041381836
    9. ' app' → logprob: -7.233633041381836
    10. ' using' → logprob: -7.358633041381836

Token 300: ' combinations' (ID: 43835)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.2312723994255066
    2. ' possible' → logprob: -2.4812724590301514
    3. 'single' → logprob: -2.9812724590301514
    4. 'all' → logprob: -3.9812724590301514
    5. ' single' → logprob: -4.356272220611572
    6. 'sp' → logprob: -5.106272220611572
    7. '_possible' → logprob: -5.106272220611572
    8. 'poss' → logprob: -5.481272220611572
    9. ' spells' → logprob: -5.606272220611572
    10. ' combinations' → logprob: -5.981272220611572

Token 301: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.0061945915222168
    2. ',' → logprob: -2.131194591522217
    3. '       ' → logprob: -2.256194591522217
    4. '   ' → logprob: -2.381194591522217
    5. '<|end|>' → logprob: -2.756194591522217
    6. ' for' → logprob: -3.131194591522217
    7. 'import' → logprob: -3.631194591522217
    8. '    ' → logprob: -4.131194591522217
    9. ' to' → logprob: -4.131194591522217
    10. '
' → logprob: -4.131194591522217

Token 302: ' number' (ID: 2086)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.42425447702407837
    2. ' all' → logprob: -1.4242544174194336
    3. ' applying' → logprob: -3.2992544174194336
    4. ' using' → logprob: -3.6742544174194336
    5. 'using' → logprob: -4.049254417419434
    6. 'app' → logprob: -4.674254417419434
    7. ' single' → logprob: -5.799254417419434
    8. 'single' → logprob: -5.924254417419434
    9. ' spells' → logprob: -6.049254417419434
    10. ' global' → logprob: -6.299254417419434

Token 303: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.6298844814300537
    2. ' of' → logprob: -1.1298844814300537
    3. '_of' → logprob: -2.8798844814300537
    4. ')' → logprob: -3.5048844814300537
    5. '   ' → logprob: -4.254884719848633
    6. '       ' → logprob: -4.379884719848633
    7. '           ' → logprob: -5.879884719848633
    8. ' ' → logprob: -6.254884719848633
    9. 'sp' → logprob: -6.504884719848633
    10. '  ' → logprob: -6.504884719848633

Token 304: ' times' (ID: 4238)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.32535451650619507
    2. ' all' → logprob: -1.8253545761108398
    3. ' times' → logprob: -3.20035457611084
    4. 'casts' → logprob: -3.57535457611084
    5. 'times' → logprob: -4.57535457611084
    6. ' casts' → logprob: -4.57535457611084
    7. ' uses' → logprob: -4.70035457611084
    8. 'applications' → logprob: -5.45035457611084
    9. 'uses' → logprob: -5.82535457611084
    10. '_all' → logprob: -5.82535457611084

Token 305: ' to' (ID: 316)
  Prédit: 'apply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apply' → logprob: -1.2979580163955688
    2. '_apply' → logprob: -2.0479578971862793
    3. ' ' → logprob: -2.2979578971862793
    4. ' all' → logprob: -2.4229578971862793
    5. 'all' → logprob: -2.5479578971862793
    6. ' apply' → logprob: -3.0479578971862793
    7. ' to' → logprob: -3.0479578971862793
    8. '_used' → logprob: -3.5479578971862793
    9. '_all' → logprob: -3.7979578971862793
    10. ' of' → logprob: -4.047957897186279

Token 306: ' cast' (ID: 9831)
  Prédit: 'apply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apply' → logprob: -0.6541424989700317
    2. 'use' → logprob: -0.7791424989700317
    3. ' use' → logprob: -4.154142379760742
    4. 'cast' → logprob: -5.779142379760742
    5. ' apply' → logprob: -6.279142379760742
    6. ' cast' → logprob: -8.154142379760742
    7. 'all' → logprob: -8.654142379760742
    8. '   ' → logprob: -9.404142379760742
    9. '	use' → logprob: -11.279142379760742
    10. ' ' → logprob: -11.279142379760742

Token 307: ' each' (ID: 2454)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.4071941673755646
    2. 'all' → logprob: -1.1571941375732422
    3. '(all' → logprob: -4.907194137573242
    4. '_all' → logprob: -5.782194137573242
    5. 'single' → logprob: -6.657194137573242
    6. ' single' → logprob: -6.657194137573242
    7. ' ' → logprob: -6.782194137573242
    8. ' each' → logprob: -7.157194137573242
    9. 'each' → logprob: -7.282194137573242
    10. '(s' → logprob: -7.782194137573242

Token 308: ' '' (ID: 461)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.09658435732126236
    2. 'all' → logprob: -2.4715843200683594
    3. '_all' → logprob: -5.596584320068359
    4. ' spells' → logprob: -6.471584320068359
    5. ' spell' → logprob: -7.221584320068359
    6. ' single' → logprob: -7.971584320068359
    7. '(all' → logprob: -8.47158432006836
    8. 'spell' → logprob: -9.09658432006836
    9. '-all' → logprob: -9.22158432006836
    10. 'single' → logprob: -9.34658432006836

Token 309: 'All' (ID: 2594)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.5240293741226196
    2. ' all' → logprob: -0.8990293741226196
    3. ' spell' → logprob: -8.024029731750488
    4. 'spell' → logprob: -8.024029731750488
    5. 'sp' → logprob: -10.149029731750488
    6. ''all' → logprob: -10.399029731750488
    7. ' '' → logprob: -10.524029731750488
    8. 'single' → logprob: -10.899029731750488
    9. ''' → logprob: -11.024029731750488
    10. 'All' → logprob: -11.024029731750488

Token 310: ''' (ID: 6)
  Prédit: '-target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-target' → logprob: -0.014196648262441158
    2. '-' → logprob: -5.014196872711182
    3. '_target' → logprob: -5.639196872711182
    4. 'target' → logprob: -5.764196872711182
    5. ' target' → logprob: -8.014196395874023
    6. ' -' → logprob: -8.639196395874023
    7. '_targets' → logprob: -9.139196395874023
    8. '   ' → logprob: -10.139196395874023
    9. '```' → logprob: -10.639196395874023
    10. ')' → logprob: -11.764196395874023

Token 311: ' spell' (ID: 29176)
  Prédit: '-target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-target' → logprob: -0.06065332517027855
    2. '_target' → logprob: -3.1856532096862793
    3. '-' → logprob: -4.310653209686279
    4. '_targets' → logprob: -7.185653209686279
    5. '   ' → logprob: -7.435653209686279
    6. '       ' → logprob: -7.935653209686279
    7. '_all' → logprob: -8.060653686523438
    8. 'target' → logprob: -8.310653686523438
    9. ' -' → logprob: -8.435653686523438
    10. '
' → logprob: -8.685653686523438

Token 312: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 313: 'can' (ID: 6929)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031514860689640045
    2. ' )' → logprob: -3.531514883041382
    3. '),' → logprob: -8.531515121459961
    4. ' possible' → logprob: -8.531515121459961
    5. '<|end|>' → logprob: -8.781515121459961
    6. ',' → logprob: -8.781515121459961
    7. ').' → logprob: -8.906515121459961
    8. ' up' → logprob: -9.531515121459961
    9. 's' → logprob: -9.531515121459961
    10. 'possible' → logprob: -9.656515121459961

Token 314: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.8600661158561707
    2. ' ' → logprob: -1.8600661754608154
    3. ')' → logprob: -1.9850661754608154
    4. ' apply' → logprob: -1.9850661754608154
    5. ' )' → logprob: -2.6100661754608154
    6. ' up' → logprob: -3.9850661754608154
    7. '  ' → logprob: -3.9850661754608154
    8. '   ' → logprob: -4.110065937042236
    9. ' use' → logprob: -6.110065937042236
    10. 'apply' → logprob: -6.110065937042236

Token 315: ' from' (ID: 591)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022914648056030273
    2. ' ' → logprob: -4.272914886474609
    3. ' up' → logprob: -6.272914886474609
    4. ' repeated' → logprob: -7.397914886474609
    5. 'cast' → logprob: -7.522914886474609
    6. ')' → logprob: -7.522914886474609
    7. 'multiple' → logprob: -7.522914886474609
    8. 'up' → logprob: -7.772914886474609
    9. '[' → logprob: -7.897914886474609
    10. '   ' → logprob: -8.02291488647461

Token 316: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013263145228847861
    2. ' ' → logprob: -6.626326084136963
    3. ' zero' → logprob: -16.126325607299805
    4. 'zero' → logprob: -16.501325607299805
    5. '   ' → logprob: -16.626325607299805
    6. '```' → logprob: -17.376325607299805
    7. 'range' → logprob: -18.001325607299805
    8. ')' → logprob: -18.751325607299805
    9. '[' → logprob: -18.876325607299805
    10. '000' → logprob: -19.001325607299805

Token 317: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. 'range' → logprob: -18.250019073486328
    4. 'zero' → logprob: -18.500019073486328
    5. '   ' → logprob: -19.750019073486328
    6. '[' → logprob: -19.875019073486328
    7. '000' → logprob: -19.875019073486328
    8. '```' → logprob: -20.000019073486328
    9. '1' → logprob: -21.000019073486328
    10. '00' → logprob: -21.375019073486328

Token 318: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.01552359014749527
    2. ' up' → logprob: -4.765523433685303
    3. 'to' → logprob: -5.390523433685303
    4. ' ' → logprob: -6.140523433685303
    5. ',' → logprob: -9.765523910522461
    6. '   ' → logprob: -10.140523910522461
    7. ')' → logprob: -10.265523910522461
    8. '  ' → logprob: -11.265523910522461
    9. '	to' → logprob: -11.765523910522461
    10. ' upto' → logprob: -12.515523910522461

Token 319: ' max' (ID: 2999)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.9185367226600647
    2. 'HP' → logprob: -1.91853666305542
    3. ' ' → logprob: -2.04353666305542
    4. ' HP' → logprob: -2.41853666305542
    5. '20' → logprob: -2.79353666305542
    6. '10' → logprob: -3.29353666305542
    7. ' max' → logprob: -3.29353666305542
    8. 'max' → logprob: -3.66853666305542
    9. 'N' → logprob: -3.79353666305542
    10. ' N' → logprob: -4.41853666305542

Token 320: ' times' (ID: 4238)
  Prédit: '_cast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cast' → logprob: -0.3648962080478668
    2. '_count' → logprob: -1.8648961782455444
    3. '_counts' → logprob: -3.614896297454834
    4. '_possible' → logprob: -3.614896297454834
    5. '_damage' → logprob: -3.614896297454834
    6. '_times' → logprob: -3.864896297454834
    7. '_' → logprob: -4.864896297454834
    8. ')' → logprob: -4.989896297454834
    9. ' ' → logprob: -5.614896297454834
    10. ' casts' → logprob: -5.864896297454834

Token 321: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05674460530281067
    2. ' )' → logprob: -2.9317445755004883
    3. '),' → logprob: -7.056744575500488
    4. ' ),' → logprob: -8.806744575500488
    5. '_possible' → logprob: -9.056744575500488
    6. ' to' → logprob: -9.056744575500488
    7. ')
' → logprob: -9.181744575500488
    8. ').' → logprob: -9.431744575500488
    9. ' possible' → logprob: -9.681744575500488
    10. '_cast' → logprob: -9.806744575500488

Token 322: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047806937247514725
    2. ',' → logprob: -4.297806739807129
    3. '        
' → logprob: -5.547806739807129
    4. '
' → logprob: -5.672806739807129
    5. '   ' → logprob: -5.797806739807129
    6. ':' → logprob: -6.172806739807129
    7. ')' → logprob: -6.172806739807129
    8. '#' → logprob: -6.297806739807129
    9. '        ' → logprob: -6.297806739807129
    10. '.' → logprob: -6.422806739807129

Token 323: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12817712128162384
    2. '<|end|>' → logprob: -2.8781771659851074
    3. ')' → logprob: -4.003177165985107
    4. '        ' → logprob: -4.753177165985107
    5. '   ' → logprob: -5.128177165985107
    6. ' ' → logprob: -5.128177165985107
    7. ',' → logprob: -5.253177165985107
    8. ':' → logprob: -5.378177165985107
    9. '        
' → logprob: -6.128177165985107
    10. '    ' → logprob: -6.378177165985107

Token 324: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3110440671443939
    2. '<|end|>' → logprob: -1.5610440969467163
    3. '
' → logprob: -5.061044216156006
    4. '#' → logprob: -5.061044216156006
    5. '        
' → logprob: -5.186044216156006
    6. '<|end|>' → logprob: -5.186044216156006
    7. ' max' → logprob: -5.436044216156006
    8. ' ' → logprob: -5.436044216156006
    9. 'max' → logprob: -5.561044216156006
    10. ',' → logprob: -5.811044216156006

Token 325: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.7133308053016663
    2. ' each' → logprob: -1.8383307456970215
    3. 'all' → logprob: -2.3383307456970215
    4. ' all' → logprob: -2.4633307456970215
    5. 'i' → logprob: -3.2133307456970215
    6. ' i' → logprob: -3.3383307456970215
    7. 'the' → logprob: -4.5883307456970215
    8. ' the' → logprob: -4.7133307456970215
    9. ' now' → logprob: -4.8383307456970215
    10. 't' → logprob: -4.9633307456970215

Token 326: ' combination' (ID: 14083)
  Prédit: ' combination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combination' → logprob: -0.8594138622283936
    2. 'all' → logprob: -1.6094138622283936
    3. 'comb' → logprob: -1.8594138622283936
    4. 'possible' → logprob: -2.7344138622283936
    5. ' number' → logprob: -3.4844138622283936
    6. ' all' → logprob: -3.9844138622283936
    7. 'number' → logprob: -4.109414100646973
    8. 'count' → logprob: -4.234414100646973
    9. 'combo' → logprob: -4.234414100646973
    10. ' possible' → logprob: -4.359414100646973

Token 327: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7502400875091553
    2. ' of' → logprob: -1.2502400875091553
    3. '<|end|>' → logprob: -2.6252400875091553
    4. ':' → logprob: -2.8752400875091553
    5. '<|end|>' → logprob: -3.3752400875091553
    6. ' ,' → logprob: -3.5002400875091553
    7. 'of' → logprob: -3.7502400875091553
    8. '   ' → logprob: -5.500240325927734
    9. ' in' → logprob: -5.500240325927734
    10. ' ' → logprob: -5.875240325927734

Token 328: ' "' (ID: 392)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.1547100841999054
    2. 'casts' → logprob: -2.404710054397583
    3. ' all' → logprob: -3.279710054397583
    4. 'counts' → logprob: -5.029710292816162
    5. 'cast' → logprob: -6.029710292816162
    6. ''all' → logprob: -6.404710292816162
    7. ' counts' → logprob: -7.029710292816162
    8. 'times' → logprob: -7.279710292816162
    9. ' casts' → logprob: -7.404710292816162
    10. 'casting' → logprob: -8.029709815979004

Token 329: 'All' (ID: 2594)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.18804225325584412
    2. ' all' → logprob: -2.313042163848877
    3. 'casts' → logprob: -3.313042163848877
    4. 'counts' → logprob: -4.063042163848877
    5. ' counts' → logprob: -4.688042163848877
    6. ' number' → logprob: -6.438042163848877
    7. 'cast' → logprob: -6.438042163848877
    8. 'count' → logprob: -7.063042163848877
    9. ' numbers' → logprob: -7.313042163848877
    10. 'number' → logprob: -7.563042163848877

Token 330: '"' (ID: 1)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.6125481128692627
    2. '"' → logprob: -0.9875481128692627
    3. ' spells' → logprob: -2.9875481128692627
    4. '_sp' → logprob: -4.237547874450684
    5. '_target' → logprob: -4.862547874450684
    6. '-target' → logprob: -5.987547874450684
    7. 'sp' → logprob: -6.487547874450684
    8. '_spell' → logprob: -6.487547874450684
    9. '_cast' → logprob: -6.612547874450684
    10. ' spell' → logprob: -7.612547874450684

Token 331: ' spells' (ID: 69967)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.589424192905426
    2. ' spells' → logprob: -1.0894241333007812
    3. 'sp' → logprob: -2.9644241333007812
    4. '_s' → logprob: -4.214424133300781
    5. '_' → logprob: -4.339424133300781
    6. '_spell' → logprob: -4.339424133300781
    7. '_target' → logprob: -5.089424133300781
    8. '_cast' → logprob: -5.589424133300781
    9. ' spell' → logprob: -6.589424133300781
    10. ' sp' → logprob: -7.089424133300781

Token 332: ' usage' (ID: 16622)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32100051641464233
    2. '<|end|>' → logprob: -2.071000576019287
    3. ' ,' → logprob: -2.821000576019287
    4. '<|end|>' → logprob: -3.446000576019287
    5. 's' → logprob: -3.571000576019287
    6. ' s' → logprob: -5.571000576019287
    7. '_cast' → logprob: -5.571000576019287
    8. ')' → logprob: -6.071000576019287
    9. '_counts' → logprob: -6.196000576019287
    10. 'casts' → logprob: -6.571000576019287

Token 333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5471309423446655
    2. ':' → logprob: -0.9221309423446655
    3. '):' → logprob: -4.422131061553955
    4. '():' → logprob: -5.672131061553955
    5. ' ,' → logprob: -6.297131061553955
    6. ':
' → logprob: -6.422131061553955
    7. 's' → logprob: -6.797131061553955
    8. ' in' → logprob: -7.547131061553955
    9. '<|end|>' → logprob: -7.922131061553955
    10. ',
' → logprob: -8.047130584716797

Token 334: ' monsters' (ID: 59311)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -1.286708950996399
    2. '       ' → logprob: -2.2867088317871094
    3. 'we' → logprob: -2.4117088317871094
    4. ' total' → logprob: -2.5367088317871094
    5. '#' → logprob: -2.9117088317871094
    6. ' reduce' → logprob: -3.0367088317871094
    7. ' for' → logprob: -3.1617088317871094
    8. ' apply' → logprob: -3.2867088317871094
    9. ' damage' → logprob: -3.2867088317871094
    10. ' #' → logprob: -3.5367088317871094

Token 335: ' HP' (ID: 21979)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2852798104286194
    2. '_hp' → logprob: -2.5352797508239746
    3. 'HP' → logprob: -2.9102797508239746
    4. '_HP' → logprob: -3.1602797508239746
    5. ' HP' → logprob: -4.410279750823975
    6. '_damage' → logprob: -4.785279750823975
    7. ''s' → logprob: -4.785279750823975
    8. 'damage' → logprob: -5.160279750823975
    9. ''_' → logprob: -5.285279750823975
    10. '_remaining' → logprob: -5.535279750823975

Token 336: ' get' (ID: 717)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5172265768051147
    2. '=' → logprob: -1.1422265768051147
    3. ' after' → logprob: -4.267226696014404
    4. '_after' → logprob: -4.267226696014404
    5. 'after' → logprob: -4.267226696014404
    6. '_remaining' → logprob: -5.017226696014404
    7. ' -=' → logprob: -5.142226696014404
    8. 'remain' → logprob: -5.267226696014404
    9. ' are' → logprob: -6.017226696014404
    10. 'left' → logprob: -6.517226696014404

Token 337: ' reduced' (ID: 17255)
  Prédit: ' reduced'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduced' → logprob: -0.003748060204088688
    2. 're' → logprob: -5.628747940063477
    3. ' decreased' → logprob: -8.878747940063477
    4. '_re' → logprob: -13.128747940063477
    5. 'reduce' → logprob: -14.003747940063477
    6. ' updated' → logprob: -14.253747940063477
    7. ' lowered' → logprob: -14.503747940063477
    8. ' reduce' → logprob: -14.628747940063477
    9. 'redu' → logprob: -14.878747940063477
    10. 'd' → logprob: -14.878747940063477

Token 338: ' accordingly' (ID: 44041)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.9437954425811768
    2. ',' → logprob: -1.4437954425811768
    3. ')' → logprob: -1.8187954425811768
    4. '<|end|>' → logprob: -2.4437954425811768
    5. '       ' → logprob: -3.8187954425811768
    6. ' accordingly' → logprob: -4.068795204162598
    7. ' and' → logprob: -4.193795204162598
    8. '.' → logprob: -4.443795204162598
    9. '   ' → logprob: -4.568795204162598
    10. 'by' → logprob: -5.068795204162598

Token 339: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15509216487407684
    2. ',' → logprob: -2.280092239379883
    3. '<|end|>' → logprob: -4.405092239379883
    4. '#' → logprob: -4.780092239379883
    5. ' and' → logprob: -5.405092239379883
    6. '.' → logprob: -5.530092239379883
    7. '        
' → logprob: -5.905092239379883
    8. 'import' → logprob: -6.780092239379883
    9. ',
' → logprob: -6.905092239379883
    10. ' (' → logprob: -7.030092239379883

Token 340: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038713183254003525
    2. ',' → logprob: -3.913713216781616
    3. '<|end|>' → logprob: -4.538712978363037
    4. '        
' → logprob: -6.163712978363037
    5. '.' → logprob: -6.788712978363037
    6. ' and' → logprob: -7.163712978363037
    7. '           ' → logprob: -7.538712978363037
    8. '        ' → logprob: -7.663712978363037
    9. '#' → logprob: -7.663712978363037
    10. '<|end|>' → logprob: -8.413713455200195

Token 341: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07079219818115234
    2. ',' → logprob: -3.5707921981811523
    3. '        
' → logprob: -4.820792198181152
    4. '#' (adapté à ' #') → logprob: -4.945792198181152
    5. ' and' → logprob: -5.195792198181152
    6. '
' → logprob: -5.320792198181152
    7. '<|end|>' → logprob: -5.570792198181152
    8. '           ' → logprob: -5.945792198181152
    9. '        ' → logprob: -6.570792198181152
    10. ',
' → logprob: -7.195792198181152

Token 342: ' Remaining' (ID: 181347)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18490637838840485
    2. '
' → logprob: -2.809906482696533
    3. 'max' → logprob: -3.559906482696533
    4. '        
' → logprob: -4.059906482696533
    5. 'from' → logprob: -4.309906482696533
    6. '#' → logprob: -4.309906482696533
    7. ' max' → logprob: -4.934906482696533
    8. 'import' → logprob: -5.309906482696533
    9. ' 
' → logprob: -5.559906482696533
    10. ' from' → logprob: -5.934906482696533

Token 343: ' HP' (ID: 21979)
  Prédit: '_HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_HP' → logprob: -0.8909046649932861
    2. '_hp' → logprob: -1.0159046649932861
    3. '_' → logprob: -2.515904664993286
    4. ' =' → logprob: -2.890904664993286
    5. 'HP' → logprob: -3.015904664993286
    6. '_H' → logprob: -3.390904664993286
    7. ' HP' → logprob: -5.640904426574707
    8. ' ' → logprob: -7.390904426574707
    9. 's' → logprob: -7.515904426574707
    10. '=' → logprob: -7.515904426574707

Token 344: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5591748356819153
    2. '=' → logprob: -0.9341748356819153
    3. 's' → logprob: -3.4341747760772705
    4. ')' → logprob: -7.68417501449585
    5. '=[]' → logprob: -7.80917501449585
    6. ' are' → logprob: -8.184174537658691
    7. '=[' → logprob: -8.309174537658691
    8. '>' → logprob: -8.559174537658691
    9. ' -=' → logprob: -9.059174537658691
    10. ',' → logprob: -9.184174537658691

Token 345: ' kill' (ID: 15874)
  Prédit: 'kill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kill' → logprob: -0.014455175027251244
    2. ' kill' → logprob: -5.264455318450928
    3. 'deal' → logprob: -5.764455318450928
    4. 'be' → logprob: -5.889455318450928
    5. 'def' → logprob: -6.264455318450928
    6. 'damage' → logprob: -7.764455318450928
    7. ' be' → logprob: -8.26445484161377
    8. 'reduce' → logprob: -8.76445484161377
    9. 'k' → logprob: -9.13945484161377
    10. 'destroy' → logprob: -9.26445484161377

Token 346: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7231372594833374
    2. '[i' → logprob: -1.5981372594833374
    3. ')' → logprob: -2.723137378692627
    4. ' for' → logprob: -3.223137378692627
    5. ',' → logprob: -3.473137378692627
    6. ']' → logprob: -4.098137378692627
    7. 's' → logprob: -4.348137378692627
    8. '       ' → logprob: -4.473137378692627
    9. '```' → logprob: -4.598137378692627
    10. ' =' → logprob: -4.723137378692627

Token 347: 'all' (ID: 586)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24239766597747803
    2. ' =' → logprob: -2.4923977851867676
    3. '[i' → logprob: -2.9923977851867676
    4. ' )' → logprob: -3.3673977851867676
    5. '=' → logprob: -4.492397785186768
    6. ' for' → logprob: -5.117397785186768
    7. ',' → logprob: -5.867397785186768
    8. ')=' → logprob: -5.992397785186768
    9. ' is' → logprob: -6.117397785186768
    10. ' after' → logprob: -6.242397785186768

Token 348: ' monsters' (ID: 59311)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.0115519762039185
    2. ')' → logprob: -1.2615519762039185
    3. '       ' → logprob: -2.886551856994629
    4. ' monsters' → logprob: -2.886551856994629
    5. '-target' → logprob: -2.886551856994629
    6. '-' → logprob: -3.136551856994629
    7. ' )' → logprob: -3.886551856994629
    8. ' by' → logprob: -4.261551856994629
    9. ' single' → logprob: -4.511551856994629
    10. '[i' → logprob: -4.761551856994629

Token 349: ' that' (ID: 484)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7208954095840454
    2. ' =' → logprob: -1.5958954095840454
    3. '=' → logprob: -1.9708954095840454
    4. '>' → logprob: -2.970895290374756
    5. ' after' → logprob: -4.095895290374756
    6. '       ' → logprob: -4.220895290374756
    7. '-' → logprob: -4.345895290374756
    8. ',' → logprob: -5.095895290374756
    9. ' -' → logprob: -5.095895290374756
    10. ')>' → logprob: -5.095895290374756

Token 350: ' survive' (ID: 30153)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1261293739080429
    2. ' >' → logprob: -2.751129388809204
    3. ')' → logprob: -3.751129388809204
    4. ' are' → logprob: -4.501129150390625
    5. 'are' → logprob: -4.876129150390625
    6. 'remain' → logprob: -5.501129150390625
    7. ' still' → logprob: -6.501129150390625
    8. '   ' → logprob: -6.751129150390625
    9. ')>' → logprob: -6.751129150390625
    10. 'still' → logprob: -7.251129150390625

Token 351: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06325045228004456
    2. ')>' → logprob: -3.3132505416870117
    3. '>' → logprob: -4.063250541687012
    4. ' )' → logprob: -6.063250541687012
    5. ' >' → logprob: -6.188250541687012
    6. ' after' → logprob: -6.563250541687012
    7. 'after' → logprob: -7.313250541687012
    8. '>)' → logprob: -8.563250541687012
    9. ')=' → logprob: -8.563250541687012
    10. ' with' → logprob: -8.938250541687012

Token 352: ' must' (ID: 2804)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9858719110488892
    2. ')' → logprob: -1.1108719110488892
    3. '=' → logprob: -2.4858717918395996
    4. '       ' → logprob: -2.9858717918395996
    5. ',' → logprob: -3.2358717918395996
    6. ' after' → logprob: -3.6108717918395996
    7. '<|end|>' → logprob: -4.1108717918396
    8. '   ' → logprob: -4.3608717918396
    9. ' -=' → logprob: -4.6108717918396
    10. 'def' → logprob: -4.7358717918396

Token 353: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.38697549700737
    2. 'be' → logprob: -1.1369755268096924
    3. '	be' → logprob: -9.636975288391113
    4. 'then' → logprob: -11.636975288391113
    5. ' then' → logprob: -11.886975288391113
    6. '_be' → logprob: -12.386975288391113
    7. ')' → logprob: -12.511975288391113
    8. ' ' → logprob: -12.886975288391113
    9. 'use' → logprob: -12.886975288391113
    10. '>' → logprob: -13.511975288391113

Token 354: ' killed' (ID: 17372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4446934461593628
    2. 'covered' → logprob: -1.0696934461593628
    3. ' killed' → logprob: -5.444693565368652
    4. ' covered' → logprob: -5.944693565368652
    5. 'handled' → logprob: -5.944693565368652
    6. '```' → logprob: -6.569693565368652
    7. 'min' → logprob: -6.819693565368652
    8. 'filled' → logprob: -7.069693565368652
    9. 'finished' → logprob: -7.569693565368652
    10. 'done' → logprob: -7.694693565368652

Token 355: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.552261471748352
    2. ' with' → logprob: -1.552261471748352
    3. ' by' → logprob: -1.677261471748352
    4. 'with' → logprob: -1.927261471748352
    5. '   ' → logprob: -2.5522613525390625
    6. 'by' → logprob: -2.9272613525390625
    7. ' using' → logprob: -2.9272613525390625
    8. 'using' → logprob: -3.1772613525390625
    9. '```' → logprob: -5.4272613525390625
    10. '    ' → logprob: -5.9272613525390625

Token 356: ' single' (ID: 4590)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.5959157943725586
    2. ' single' → logprob: -0.8459157943725586
    3. ' best' → logprob: -4.470915794372559
    4. 'best' → logprob: -4.845915794372559
    5. 'using' → logprob: -9.345915794372559
    6. ' their' → logprob: -9.595915794372559
    7. ' the' → logprob: -9.720915794372559
    8. ' using' → logprob: -10.220915794372559
    9. 'sing' → logprob: -10.220915794372559
    10. 'the' → logprob: -10.470915794372559

Token 357: ' target' (ID: 3783)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3624512255191803
    2. '-target' → logprob: -1.237451195716858
    3. '_target' → logprob: -4.612451076507568
    4. '_' → logprob: -6.612451076507568
    5. '-_' → logprob: -6.737451076507568
    6. '_-' → logprob: -7.862451076507568
    7. '\-' → logprob: -8.112451553344727
    8. ' -' → logprob: -8.112451553344727
    9. '[-' → logprob: -8.862451553344727
    10. '\' → logprob: -10.237451553344727

Token 358: ' spells' (ID: 69967)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2184309959411621
    2. '   ' → logprob: -2.718430995941162
    3. '
' → logprob: -3.093430995941162
    4. '        
' → logprob: -4.593430995941162
    5. '\n' → logprob: -4.718430995941162
    6. ' =' → logprob: -4.843430995941162
    7. ':' → logprob: -5.093430995941162
    8. '[' → logprob: -5.218430995941162
    9. '<|end|>' → logprob: -5.218430995941162
    10. ')' → logprob: -5.218430995941162

Token 359: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16177353262901306
    2. '
' → logprob: -2.411773443222046
    3. '        
' → logprob: -3.536773443222046
    4. '\n' → logprob: -4.911773681640625
    5. '   ' → logprob: -5.161773681640625
    6. ' 
' → logprob: -5.786773681640625
    7. '\' → logprob: -6.161773681640625
    8. ',' → logprob: -6.536773681640625
    9. '    
' → logprob: -6.536773681640625
    10. '  
' → logprob: -6.911773681640625

Token 360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0672718808054924
    2. '        
' → logprob: -3.3172719478607178
    3. '\n' → logprob: -4.817271709442139
    4. ' 
' → logprob: -5.317271709442139
    5. '
' → logprob: -5.442271709442139
    6. '  
' → logprob: -5.817271709442139
    7. '   ' → logprob: -6.192271709442139
    8. '    
' → logprob: -6.692271709442139
    9. '<|end|>' → logprob: -7.442271709442139
    10. '\' → logprob: -7.692271709442139

Token 361: ' #' (ID: 1069)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.39430707693099976
    2. '\n' → logprob: -1.5193071365356445
    3. '       ' → logprob: -2.8943071365356445
    4. '\' → logprob: -3.8943071365356445
    5. '        
' → logprob: -4.1443071365356445
    6. '
' → logprob: -5.6443071365356445
    7. '  
' → logprob: -6.1443071365356445
    8. '    
' → logprob: -6.2693071365356445
    9. '\x' → logprob: -6.5193071365356445
    10. ' \' → logprob: -6.6443071365356445

Token 362: ' Since' (ID: 12265)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5882754325866699
    2. 'best' → logprob: -1.08827543258667
    3. ' max' → logprob: -3.46327543258667
    4. '#' → logprob: -3.46327543258667
    5. ' best' → logprob: -4.08827543258667
    6. 'from' → logprob: -4.21327543258667
    7. '       ' → logprob: -5.33827543258667
    8. '   ' → logprob: -6.46327543258667
    9. 'single' → logprob: -6.46327543258667
    10. 'import' → logprob: -6.46327543258667

Token 363: ' number' (ID: 2086)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.770496129989624
    2. 'the' → logprob: -1.145496129989624
    3. ' M' → logprob: -3.395496129989624
    4. 'max' → logprob: -3.770496129989624
    5. ' there' → logprob: -3.770496129989624
    6. ' HP' → logprob: -3.895496129989624
    7. 'all' → logprob: -4.395496368408203
    8. ' max' → logprob: -4.395496368408203
    9. 'there' → logprob: -4.395496368408203
    10. 'HP' → logprob: -4.520496368408203

Token 364: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.033300310373306274
    2. ')' → logprob: -4.783300399780273
    3. '[' → logprob: -5.533300399780273
    4. '=' → logprob: -5.533300399780273
    5. '#' → logprob: -6.033300399780273
    6. ' ' → logprob: -6.033300399780273
    7. ' _' → logprob: -6.533300399780273
    8. 'space' → logprob: -6.908300399780273
    9. '_
' → logprob: -6.908300399780273
    10. 'of' → logprob: -6.908300399780273

Token 365: ' '' (ID: 461)
  Prédit: ' monsters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' monsters' → logprob: -0.662372350692749
    2. 'mon' → logprob: -1.787372350692749
    3. ' all' → logprob: -2.162372350692749
    4. 'sp' → logprob: -2.662372350692749
    5. 'all' → logprob: -2.662372350692749
    6. ' spells' → logprob: -4.162372589111328
    7. ' sp' → logprob: -4.662372589111328
    8. ' lines' → logprob: -5.287372589111328
    9. '_all' → logprob: -5.662372589111328
    10. ' single' → logprob: -5.662372589111328

Token 366: 'All' (ID: 2594)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.8785821795463562
    2. ' all' → logprob: -0.8785821795463562
    3. ' spells' → logprob: -2.753582239151001
    4. 'sp' → logprob: -3.503582239151001
    5. '_all' → logprob: -5.003582000732422
    6. 'All' → logprob: -5.378582000732422
    7. ' '' → logprob: -5.378582000732422
    8. ''all' → logprob: -5.378582000732422
    9. ' sp' → logprob: -5.503582000732422
    10. ''' → logprob: -5.753582000732422

Token 367: ''' (ID: 6)
  Prédit: '-target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-target' → logprob: -0.22543631494045258
    2. '_target' → logprob: -2.100436210632324
    3. '_s' → logprob: -3.975436210632324
    4. ')' → logprob: -4.100436210632324
    5. '_targets' → logprob: -4.475436210632324
    6. '_' → logprob: -4.850436210632324
    7. '_sp' → logprob: -5.100436210632324
    8. '_Target' → logprob: -5.350436210632324
    9. '_TARGET' → logprob: -6.225436210632324
    10. 'Target' → logprob: -6.225436210632324

Token 368: ' spells' (ID: 69967)
  Prédit: '_target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.20121800899505615
    2. '-target' → logprob: -2.0762181282043457
    3. '_' → logprob: -3.2012181282043457
    4. '_targets' → logprob: -5.076218128204346
    5. '_sp' → logprob: -5.951218128204346
    6. ' spells' → logprob: -6.701218128204346
    7. '-' → logprob: -6.701218128204346
    8. 'Target' → logprob: -7.076218128204346
    9. '_Target' → logprob: -7.451218128204346
    10. '_s' → logprob: -7.826218128204346

Token 369: ' M' (ID: 391)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6202667951583862
    2. ' <=' → logprob: -1.6202667951583862
    3. ' =' → logprob: -2.495266914367676
    4. '=' → logprob: -3.120266914367676
    5. ' ==' → logprob: -3.620266914367676
    6. ')' → logprob: -3.995266914367676
    7. ':' → logprob: -3.995266914367676
    8. '<=' → logprob: -4.120266914367676
    9. 's' → logprob: -4.370266914367676
    10. '<|end|>' → logprob: -4.620266914367676

Token 370: ' ≤' (ID: 72554)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.042134165763855
    2. ' <=' → logprob: -1.292134165763855
    3. ' <' → logprob: -2.0421342849731445
    4. 's' → logprob: -2.2921342849731445
    5. '<=' → logprob: -3.1671342849731445
    6. ' is' → logprob: -3.7921342849731445
    7. ']' → logprob: -4.4171342849731445
    8. ' ==' → logprob: -4.5421342849731445
    9. '=' → logprob: -4.5421342849731445
    10. ' =' → logprob: -5.1671342849731445

Token 371: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.8373554944992065
    2. ' ' → logprob: -1.2123554944992065
    3. '10' → logprob: -1.7123554944992065
    4. '50' → logprob: -3.587355613708496
    5. '100' → logprob: -3.587355613708496
    6. '15' → logprob: -5.212355613708496
    7. 'M' → logprob: -5.337355613708496
    8. '99' → logprob: -5.337355613708496
    9. '5' → logprob: -5.587355613708496
    10. '30' → logprob: -5.962355613708496

Token 372: '100' (ID: 1353)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.7128421664237976
    2. '10' → logprob: -1.4628422260284424
    3. '100' → logprob: -2.2128422260284424
    4. '50' → logprob: -2.4628422260284424
    5. ' ' → logprob: -3.2128422260284424
    6. '99' → logprob: -3.8378422260284424
    7. '15' → logprob: -4.962841987609863
    8. 'M' → logprob: -5.462841987609863
    9. '30' → logprob: -5.837841987609863
    10. '5' → logprob: -6.712841987609863

Token 373: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9067465662956238
    2. '<|end|>' → logprob: -1.0317466259002686
    3. ':' → logprob: -2.5317466259002686
    4. '<|end|>' → logprob: -3.1567466259002686
    5. '
' → logprob: -3.6567466259002686
    6. ',
' → logprob: -3.7817466259002686
    7. '   ' → logprob: -4.1567463874816895
    8. ':
' → logprob: -4.4067463874816895
    9. ')' → logprob: -4.4067463874816895
    10. '       ' → logprob: -5.4067463874816895

Token 374: ' but' (ID: 889)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8034883141517639
    2. ' we' → logprob: -2.053488254547119
    3. '#' → logprob: -2.428488254547119
    4. 'import' → logprob: -2.928488254547119
    5. 'and' → logprob: -3.053488254547119
    6. 'max' → logprob: -3.303488254547119
    7. ' the' → logprob: -3.678488254547119
    8. ' #' → logprob: -3.928488254547119
    9. '
' → logprob: -3.928488254547119
    10. '       ' → logprob: -4.053488254547119

Token 375: ' their' (ID: 1043)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.5269328355789185
    2. 'max' → logprob: -2.151932716369629
    3. ' M' → logprob: -2.276932716369629
    4. ' the' → logprob: -2.651932716369629
    5. ' number' → logprob: -2.901932716369629
    6. 'number' → logprob: -3.026932716369629
    7. 'N' → logprob: -3.026932716369629
    8. ' max' → logprob: -3.151932716369629
    9. ' ' → logprob: -3.401932716369629
    10. 'the' → logprob: -3.401932716369629

Token 376: ' usage' (ID: 16622)
  Prédit: ' usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' usage' → logprob: -1.1566044092178345
    2. ' number' → logprob: -1.4066044092178345
    3. 'count' → logprob: -2.156604290008545
    4. 'number' → logprob: -2.406604290008545
    5. ' count' → logprob: -3.156604290008545
    6. ' cost' → logprob: -3.656604290008545
    7. 'cost' → logprob: -3.656604290008545
    8. 'usage' → logprob: -3.656604290008545
    9. ' counts' → logprob: -4.656604290008545
    10. 'damage' → logprob: -4.656604290008545

Token 377: ' count' (ID: 3605)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9386110901832581
    2. '_limit' → logprob: -1.4386110305786133
    3. '_count' → logprob: -2.1886110305786133
    4. '_' → logprob: -3.4386110305786133
    5. '<|end|>' → logprob: -3.5636110305786133
    6. '_limits' → logprob: -3.8136110305786133
    7. ',' → logprob: -3.9386110305786133
    8. ' limits' → logprob: -3.9386110305786133
    9. ' is' → logprob: -4.313611030578613
    10. ')' → logprob: -4.313611030578613

Token 378: ' can' (ID: 665)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07686875015497208
    2. '<|end|>' → logprob: -2.826868772506714
    3. ' is' → logprob: -5.576868534088135
    4. '<|end|>' → logprob: -5.701868534088135
    5. ' can' → logprob: -5.951868534088135
    6. ' s' → logprob: -6.451868534088135
    7. ' could' → logprob: -7.326868534088135
    8. ',' → logprob: -7.576868534088135
    9. ' ' → logprob: -7.701868534088135
    10. '_limit' → logprob: -8.326869010925293

Token 379: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.027313247323036194
    2. ' vary' → logprob: -4.027313232421875
    3. ' range' → logprob: -5.777313232421875
    4. ' go' → logprob: -5.902313232421875
    5. ' not' → logprob: -6.777313232421875
    6. ' exceed' → logprob: -7.027313232421875
    7. ' ' → logprob: -7.402313232421875
    8. 'be' → logprob: -9.277313232421875
    9. 'n't' → logprob: -9.652313232421875
    10. '<|end|>' → logprob: -9.902313232421875

Token 380: ' large' (ID: 4410)
  Prédit: ' large'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' large' → logprob: -0.657520592212677
    2. 'large' → logprob: -1.1575205326080322
    3. 'high' → logprob: -3.4075205326080322
    4. ' up' → logprob: -3.7825205326080322
    5. ' high' → logprob: -3.7825205326080322
    6. 'hu' → logprob: -4.032520771026611
    7. 'very' → logprob: -4.157520771026611
    8. 'up' → logprob: -4.407520771026611
    9. 'bounded' → logprob: -4.532520771026611
    10. ' very' → logprob: -4.782520771026611

Token 381: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 382: ' we' (ID: 581)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2655775249004364
    2. '<|end|>' → logprob: -2.265577554702759
    3. ' 
' → logprob: -2.515577554702759
    4. ',' → logprob: -4.89057731628418
    5. ')' → logprob: -4.89057731628418
    6. '       ' → logprob: -5.51557731628418
    7. ' max' → logprob: -5.76557731628418
    8. '#' → logprob: -6.01557731628418
    9. '<|end|>' → logprob: -6.01557731628418
    10. ' we' → logprob: -6.01557731628418

Token 383: ' cannot' (ID: 6284)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -1.365269422531128
    2. ' continue' → logprob: -1.490269422531128
    3. ' cannot' → logprob: -1.990269422531128
    4. ' can' → logprob: -2.490269422531128
    5. '<|end|>' → logprob: -2.990269422531128
    6. 'import' → logprob: -3.115269422531128
    7. ' ' → logprob: -3.490269422531128
    8. '#' → logprob: -3.490269422531128
    9. ' have' → logprob: -3.990269422531128
    10. 'continue' → logprob: -3.990269422531128

Token 384: ' try' (ID: 2075)
  Prédit: ' use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' use' → logprob: -0.963132381439209
    2. ' enumerate' → logprob: -1.088132381439209
    3. 'enumer' → logprob: -1.838132381439209
    4. ' apply' → logprob: -3.838132381439209
    5. 'apply' → logprob: -3.963132381439209
    6. ' try' → logprob: -4.463132381439209
    7. 'use' → logprob: -5.088132381439209
    8. 'expl' → logprob: -5.213132381439209
    9. 'iterate' → logprob: -5.463132381439209
    10. ' brute' → logprob: -5.463132381439209

Token 385: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.3959093987941742
    2. ' all' → logprob: -1.5209094285964966
    3. 'every' → logprob: -3.270909309387207
    4. '```' → logprob: -4.895909309387207
    5. ' every' → logprob: -5.020909309387207
    6. 'more' → logprob: -5.270909309387207
    7. 'ranges' → logprob: -5.395909309387207
    8. ' combinations' → logprob: -5.395909309387207
    9. ' to' → logprob: -5.770909309387207
    10. '   ' → logprob: -5.895909309387207

Token 386: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 387: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5105111002922058
    2. '
' → logprob: -2.0105111598968506
    3. '#' → logprob: -2.1355111598968506
    4. '        
' → logprob: -2.6355111598968506
    5. ' 
' → logprob: -3.6355111598968506
    6. '<|end|>' → logprob: -4.0105109214782715
    7. '    
' → logprob: -5.6355109214782715
    8. '   ' → logprob: -5.7605109214782715
    9. '  
' → logprob: -5.8855109214782715
    10. ',' → logprob: -6.1355109214782715

Token 388: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8212022185325623
    2. '#' (adapté à ' #') → logprob: -1.821202278137207
    3. '
' → logprob: -2.071202278137207
    4. ' 
' → logprob: -2.571202278137207
    5. '\n' → logprob: -2.821202278137207
    6. '        
' → logprob: -3.321202278137207
    7. '   ' → logprob: -3.446202278137207
    8. '\' → logprob: -4.196202278137207
    9. '<|end|>' → logprob: -4.446202278137207
    10. '    
' → logprob: -4.821202278137207

Token 389: ' Another' (ID: 20064)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1536085605621338
    2. 'max' → logprob: -1.2786085605621338
    3. 'from' → logprob: -1.2786085605621338
    4. 'all' → logprob: -3.028608560562134
    5. 'import' → logprob: -4.028608322143555
    6. 'best' → logprob: -4.653608322143555
    7. ' from' → logprob: -4.653608322143555
    8. 'min' → logprob: -4.778608322143555
    9. 'dp' → logprob: -4.778608322143555
    10. ' max' → logprob: -4.903608322143555

Token 390: ' idea' (ID: 6056)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.200742244720459
    2. 'line' → logprob: -1.950742244720459
    3. ' line' → logprob: -2.200742244720459
    4. 'idea' → logprob: -2.325742244720459
    5. 'appro' → logprob: -2.700742244720459
    6. 'import' → logprob: -2.950742244720459
    7. ' possible' → logprob: -3.325742244720459
    8. '#' → logprob: -3.450742244720459
    9. ' approach' → logprob: -3.450742244720459
    10. '   ' → logprob: -3.575742244720459

Token 391: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21541497111320496
    2. ',' → logprob: -3.3404150009155273
    3. ' =' → logprob: -3.3404150009155273
    4. '<|end|>' → logprob: -3.4654150009155273
    5. 'import' → logprob: -3.5904150009155273
    6. '#' → logprob: -4.340415000915527
    7. '=' → logprob: -4.340415000915527
    8. ':
' → logprob: -4.590415000915527
    9. '<|end|>' → logprob: -4.840415000915527
    10. '   ' → logprob: -5.715415000915527

Token 392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19407805800437927
    2. '#' → logprob: -2.069077968597412
    3. 'import' → logprob: -4.194077968597412
    4. 'from' → logprob: -4.319077968597412
    5. ' #' → logprob: -5.444077968597412
    6. '   ' → logprob: -5.819077968597412
    7. 'max' → logprob: -5.819077968597412
    8. ' max' → logprob: -6.069077968597412
    9. '
' → logprob: -6.819077968597412
    10. ' from' → logprob: -6.944077968597412

Token 393: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7746818661689758
    2. 'max' → logprob: -1.899681806564331
    3. ' max' → logprob: -2.399681806564331
    4. '       ' → logprob: -2.899681806564331
    5. 'all' → logprob: -3.274681806564331
    6. 'from' → logprob: -3.524681806564331
    7. ' single' → logprob: -3.524681806564331
    8. 'single' → logprob: -3.524681806564331
    9. 'best' → logprob: -3.774681806564331
    10. ' best' → logprob: -4.14968204498291

Token 394: ' Use' (ID: 7649)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.19754385948181152
    2. '#' → logprob: -1.9475438594818115
    3. 'import' → logprob: -4.322544097900391
    4. ' from' → logprob: -4.697544097900391
    5. 'max' → logprob: -5.197544097900391
    6. 'dp' → logprob: -6.072544097900391
    7. ' #' → logprob: -6.572544097900391
    8. 'for' → logprob: -7.072544097900391
    9. ' max' → logprob: -7.447544097900391
    10. '       ' → logprob: -7.447544097900391

Token 395: ' formula' (ID: 20690)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -1.5616439580917358
    2. 'math' → logprob: -2.0616440773010254
    3. 'binary' → logprob: -2.1866440773010254
    4. 'from' → logprob: -2.5616440773010254
    5. 'collections' → logprob: -2.6866440773010254
    6. 'import' → logprob: -3.0616440773010254
    7. ' a' → logprob: -3.1866440773010254
    8. 'dp' → logprob: -3.1866440773010254
    9. 'a' → logprob: -3.1866440773010254
    10. 'single' → logprob: -3.3116440773010254

Token 396: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.362789511680603
    2. ' ' → logprob: -1.487789511680603
    3. ' =' → logprob: -2.1127896308898926
    4. '<|end|>' → logprob: -2.3627896308898926
    5. '_' → logprob: -2.9877896308898926
    6. ' (' → logprob: -3.6127896308898926
    7. '=' → logprob: -3.8627896308898926
    8. '(' → logprob: -4.112789630889893
    9. ' for' → logprob: -4.112789630889893
    10. ',' → logprob: -4.112789630889893

Token 397: ' optimization' (ID: 34658)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.8811172842979431
    2. ' binary' → logprob: -2.006117343902588
    3. 'math' → logprob: -2.631117343902588
    4. 'binary' → logprob: -2.631117343902588
    5. 'dp' → logprob: -2.756117343902588
    6. '       ' → logprob: -2.881117343902588
    7. 'enumer' → logprob: -4.006117343902588
    8. ' code' → logprob: -4.631117343902588
    9. ' constraints' → logprob: -4.631117343902588
    10. ' dp' → logprob: -4.881117343902588

Token 398: ':
' (ID: 734)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5591219663619995
    2. '<|end|>' → logprob: -1.9341219663619995
    3. '#' → logprob: -2.809122085571289
    4. 'def' → logprob: -3.309122085571289
    5. 'max' → logprob: -3.684122085571289
    6. 'import' → logprob: -3.934122085571289
    7. ':' → logprob: -4.184122085571289
    8. 'dp' → logprob: -4.309122085571289
    9. '   ' → logprob: -4.434122085571289
    10. '       ' → logprob: -4.434122085571289

Token 399: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8774488568305969
    2. '       ' → logprob: -1.2524487972259521
    3. '
' → logprob: -3.002448797225952
    4. '<|end|>' → logprob: -3.002448797225952
    5. ' for' → logprob: -3.502448797225952
    6. 'import' → logprob: -3.502448797225952
    7. ' #' → logprob: -3.752448797225952
    8. ' 
' → logprob: -4.002449035644531
    9. 'def' → logprob: -4.377449035644531
    10. ' max' → logprob: -4.877449035644531

Token 400: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.726053774356842
    2. '       ' → logprob: -1.4760537147521973
    3. 'dp' → logprob: -2.4760537147521973
    4. 'max' → logprob: -3.2260537147521973
    5. ' max' → logprob: -3.6010537147521973
    6. 'import' → logprob: -3.7260537147521973
    7. 'from' → logprob: -3.7260537147521973
    8. ' #' → logprob: -4.226053714752197
    9. ' dp' → logprob: -4.476053714752197
    10. 'def' → logprob: -4.851053714752197

Token 401: ' Since' (ID: 12265)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.09569251537323
    2. 'from' → logprob: -1.84569251537323
    3. 'max' → logprob: -1.97069251537323
    4. '#' → logprob: -2.7206926345825195
    5. 'import' → logprob: -2.8456926345825195
    6. ' from' → logprob: -3.0956926345825195
    7. ' 
' → logprob: -3.3456926345825195
    8. '
' → logprob: -3.4706926345825195
    9. '       ' → logprob: -3.8456926345825195
    10. ' #' → logprob: -3.9706926345825195

Token 402: ' '' (ID: 461)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.9091430902481079
    2. ' all' → logprob: -1.034143090248108
    3. ' single' → logprob: -2.9091429710388184
    4. ' the' → logprob: -2.9091429710388184
    5. ' we' → logprob: -3.6591429710388184
    6. 'the' → logprob: -3.9091429710388184
    7. ' damage' → logprob: -4.159142971038818
    8. 'single' → logprob: -4.409142971038818
    9. 'we' → logprob: -4.659142971038818
    10. 'damage' → logprob: -4.784142971038818

Token 403: 'All' (ID: 2594)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.08932753652334213
    2. ' all' → logprob: -2.714327573776245
    3. 'single' → logprob: -4.464327335357666
    4. ' single' → logprob: -5.714327335357666
    5. ''' → logprob: -6.214327335357666
    6. 'the' → logprob: -7.839327335357666
    7. 'All' → logprob: -8.089327812194824
    8. ' '' → logprob: -8.214327812194824
    9. ' the' → logprob: -8.589327812194824
    10. 'each' → logprob: -8.589327812194824

Token 404: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.28755319118499756
    2. '-target' → logprob: -1.7875531911849976
    3. '-' → logprob: -2.912553310394287
    4. '_' → logprob: -4.787553310394287
    5. ' '' → logprob: -5.037553310394287
    6. '_target' → logprob: -5.287553310394287
    7. 'Target' → logprob: -6.037553310394287
    8. ''-' → logprob: -6.412553310394287
    9. '-'' → logprob: -7.537553310394287
    10. '_'' → logprob: -7.662553310394287

Token 405: ' spells' (ID: 69967)
  Prédit: '-target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-target' → logprob: -0.05958821624517441
    2. '-' → logprob: -3.5595881938934326
    3. '_target' → logprob: -4.184588432312012
    4. '_' → logprob: -5.184588432312012
    5. 'Target' → logprob: -5.684588432312012
    6. ' spells' → logprob: -6.309588432312012
    7. '_TARGET' → logprob: -7.059588432312012
    8. ' ' → logprob: -7.934588432312012
    9. '_Target' → logprob: -8.059588432312012
    10. ' -' → logprob: -8.184588432312012

Token 406: ' impact' (ID: 6232)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.0713997408747673
    2. ' apply' → logprob: -3.821399688720703
    3. ' ' → logprob: -4.321399688720703
    4. 'can' → logprob: -4.571399688720703
    5. 'apply' → logprob: -5.321399688720703
    6. 's' → logprob: -5.946399688720703
    7. ' are' → logprob: -5.946399688720703
    8. ''' → logprob: -6.071399688720703
    9. '   ' → logprob: -6.196399688720703
    10. '<|end|>' → logprob: -6.321399688720703

Token 407: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.14253519475460052
    2. ' the' → logprob: -2.5175352096557617
    3. 's' → logprob: -4.142535209655762
    4. ' =' → logprob: -5.017535209655762
    5. ' multiple' → logprob: -5.267535209655762
    6. ' can' → logprob: -5.392535209655762
    7. 'all' → logprob: -5.642535209655762
    8. ' each' → logprob: -5.892535209655762
    9. ' ' → logprob: -6.267535209655762
    10. ' is' → logprob: -6.392535209655762

Token 408: ' monsters' (ID: 59311)
  Prédit: ' monsters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' monsters' → logprob: -0.0589960440993309
    2. 'mon' → logprob: -2.9339959621429443
    3. ' targets' → logprob: -6.433996200561523
    4. ' spells' → logprob: -7.058996200561523
    5. 'targets' → logprob: -7.808996200561523
    6. '_mon' → logprob: -8.433996200561523
    7. 'sp' → logprob: -8.808996200561523
    8. '```' → logprob: -8.933996200561523
    9. ' mon' → logprob: -9.183996200561523
    10. ' ' → logprob: -9.558996200561523

Token 409: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5713412761688232
    2. '<|end|>' → logprob: -2.0713412761688232
    3. ' can' → logprob: -2.9463412761688232
    4. '.' → logprob: -3.5713412761688232
    5. ' apply' → logprob: -4.071341514587402
    6. ' ,' → logprob: -4.196341514587402
    7. ')' → logprob: -4.321341514587402
    8. ' are' → logprob: -4.446341514587402
    9. ',
' → logprob: -4.446341514587402
    10. '   ' → logprob: -4.571341514587402

Token 410: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.43309494853019714
    2. ' we' → logprob: -1.6830949783325195
    3. 'we' → logprob: -2.0580949783325195
    4. ' let's' → logprob: -4.9330949783325195
    5. ' #' → logprob: -5.3080949783325195
    6. ' and' → logprob: -5.4330949783325195
    7. ' use' → logprob: -5.4330949783325195
    8. 'and' → logprob: -6.1830949783325195
    9. '       ' → logprob: -6.4330949783325195
    10. ' apply' → logprob: -6.4330949783325195

Token 411: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.022989323362708092
    2. 'can' → logprob: -3.897989273071289
    3. '#' → logprob: -6.272989273071289
    4. ' could' → logprob: -8.397989273071289
    5. ' may' → logprob: -9.772989273071289
    6. 'could' → logprob: -9.772989273071289
    7. ' cannot' → logprob: -9.897989273071289
    8. ' should' → logprob: -10.147989273071289
    9. ' might' → logprob: -10.647989273071289
    10. ' have' → logprob: -10.772989273071289

Token 412: ' try' (ID: 2075)
  Prédit: 'consider'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'consider' → logprob: -0.868678092956543
    2. 'try' → logprob: -1.368678092956543
    3. 'apply' → logprob: -2.618678092956543
    4. 'think' → logprob: -2.868678092956543
    5. 'use' → logprob: -2.868678092956543
    6. 'binary' → logprob: -3.118678092956543
    7. ' try' → logprob: -3.368678092956543
    8. ' use' → logprob: -4.118678092956543
    9. ' consider' → logprob: -4.243678092956543
    10. 'opt' → logprob: -4.868678092956543

Token 413: ' to' (ID: 316)
  Prédit: 'casting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'casting' → logprob: -1.0581618547439575
    2. 'app' → logprob: -1.3081618547439575
    3. ' casting' → logprob: -1.5581618547439575
    4. ' applying' → logprob: -2.308161735534668
    5. 'binary' → logprob: -4.183161735534668
    6. ' to' → logprob: -4.433161735534668
    7. ' binary' → logprob: -4.683161735534668
    8. 'to' → logprob: -5.058161735534668
    9. '0' → logprob: -5.308161735534668
    10. 'using' → logprob: -5.433161735534668

Token 414: ' combine' (ID: 21700)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.46670249104499817
    2. ' enumerate' → logprob: -2.466702461242676
    3. 'apply' → logprob: -3.091702461242676
    4. ' use' → logprob: -3.091702461242676
    5. 'use' → logprob: -3.091702461242676
    6. 'binary' → logprob: -3.216702461242676
    7. 'opt' → logprob: -3.466702461242676
    8. ' binary' → logprob: -4.716702461242676
    9. 'consider' → logprob: -4.966702461242676
    10. 'sum' → logprob: -4.966702461242676

Token 415: ' them' (ID: 1373)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.7301708459854126
    2. ' them' → logprob: -1.4801708459854126
    3. ' the' → logprob: -2.230170726776123
    4. 'all' → logprob: -2.605170726776123
    5. ' their' → logprob: -4.105170726776123
    6. ' spells' → logprob: -4.355170726776123
    7. 'them' → logprob: -4.480170726776123
    8. ' '' → logprob: -4.480170726776123
    9. 'the' → logprob: -4.605170726776123
    10. ' applying' → logprob: -4.855170726776123

Token 416: ' in' (ID: 306)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.43299397826194763
    2. ' in' → logprob: -2.1829938888549805
    3. '<|end|>' → logprob: -2.6829938888549805
    4. ',' → logprob: -2.9329938888549805
    5. ' and' → logprob: -3.3079938888549805
    6. ' into' → logprob: -4.3079938888549805
    7. 'to' → logprob: -4.5579938888549805
    8. 'in' → logprob: -5.0579938888549805
    9. ' as' → logprob: -5.3079938888549805
    10. 's' → logprob: -5.4329938888549805

Token 417: ' any' (ID: 1062)
  Prédit: 'some'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'some' → logprob: -1.0661060810089111
    2. 'a' → logprob: -2.066106081008911
    3. 'linear' → logprob: -2.066106081008911
    4. 'different' → logprob: -2.191106081008911
    5. 'var' → logprob: -2.316106081008911
    6. ' linear' → logprob: -2.691106081008911
    7. ' various' → logprob: -3.441106081008911
    8. ' a' → logprob: -3.816106081008911
    9. 'all' → logprob: -4.191105842590332
    10. ' some' → logprob: -4.566105842590332

Token 418: ' way' (ID: 2006)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.9340128302574158
    2. 'possible' → logprob: -1.1840128898620605
    3. ' combination' → logprob: -2.1840128898620605
    4. ' number' → logprob: -2.8090128898620605
    5. ' integer' → logprob: -2.9340128898620605
    6. ' linear' → logprob: -3.4340128898620605
    7. 'number' → logprob: -4.4340128898620605
    8. 'integer' → logprob: -5.0590128898620605
    9. 'linear' → logprob: -5.1840128898620605
    10. ' way' → logprob: -5.3090128898620605

Token 419: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 420: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8323745727539062
    2. '       ' → logprob: -1.2073745727539062
    3. ',' → logprob: -2.4573745727539062
    4. '<|end|>' → logprob: -2.9573745727539062
    5. ' and' → logprob: -3.5823745727539062
    6. ' #' → logprob: -4.582374572753906
    7. '.' → logprob: -4.582374572753906
    8. ' to' → logprob: -4.582374572753906
    9. ' ' → logprob: -4.707374572753906
    10. ' or' → logprob: -5.582374572753906

Token 421: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.04916701838374138
    2. '       ' → logprob: -3.5491669178009033
    3. ' #' → logprob: -4.799167156219482
    4. 'from' → logprob: -5.174167156219482
    5. '#
' → logprob: -7.049167156219482
    6. ' from' → logprob: -7.674167156219482
    7. 'import' → logprob: -7.674167156219482
    8. ',' → logprob: -7.799167156219482
    9. 'for' → logprob: -8.049166679382324
    10. ' and' → logprob: -8.049166679382324

Token 422: ' The' (ID: 623)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.37150198221206665
    2. '#' → logprob: -2.621501922607422
    3. 'dp' → logprob: -2.871501922607422
    4. 'import' → logprob: -3.621501922607422
    5. ' from' → logprob: -3.621501922607422
    6. '       ' → logprob: -3.621501922607422
    7. ' dp' → logprob: -3.871501922607422
    8. 'max' → logprob: -4.121501922607422
    9. 'def' → logprob: -4.121501922607422
    10. 'for' → logprob: -4.621501922607422

Token 423: ' damage' (ID: 10364)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.6258795261383057
    2. ' problem' → logprob: -2.0008795261383057
    3. '#' → logprob: -2.3758795261383057
    4. ' #' → logprob: -2.7508795261383057
    5. ' total' → logprob: -3.6258795261383057
    6. ' next' → logprob: -3.7508795261383057
    7. ' idea' → logprob: -4.500879287719727
    8. 'best' → logprob: -4.500879287719727
    9. ' minimal' → logprob: -4.625879287719727
    10. ' rest' → logprob: -5.000879287719727

Token 424: ' of' (ID: 328)
  Prédit: ' applied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' applied' → logprob: -1.0885523557662964
    2. 's' → logprob: -1.8385523557662964
    3. ' to' → logprob: -1.8385523557662964
    4. ' can' → logprob: -2.713552474975586
    5. ' applies' → logprob: -3.338552474975586
    6. ' done' → logprob: -3.338552474975586
    7. ' on' → logprob: -3.588552474975586
    8. ' s' → logprob: -4.338552474975586
    9. ' sum' → logprob: -4.338552474975586
    10. ' per' → logprob: -4.338552474975586

Token 425: ' "' (ID: 392)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.0246875286102295
    2. ' all' → logprob: -1.0246875286102295
    3. 'each' → logprob: -2.5246875286102295
    4. ' each' → logprob: -2.6496875286102295
    5. ' '' → logprob: -3.0246875286102295
    6. ''' → logprob: -3.2746875286102295
    7. ' the' → logprob: -3.7746875286102295
    8. 'the' → logprob: -4.774687767028809
    9. ''all' → logprob: -5.649687767028809
    10. '"' → logprob: -5.899687767028809

Token 426: 'All' (ID: 2594)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.06904922425746918
    2. ' all' → logprob: -3.069049119949341
    3. 'each' → logprob: -4.31904935836792
    4. 'the' → logprob: -6.19404935836792
    5. '"' → logprob: -6.56904935836792
    6. ' each' → logprob: -6.94404935836792
    7. 'All' → logprob: -7.69404935836792
    8. ''' → logprob: -7.69404935836792
    9. ' the' → logprob: -7.81904935836792
    10. ''all' → logprob: -8.319048881530762

Token 427: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.360543429851532
    2. ' "' → logprob: -1.2355434894561768
    3. '-target' → logprob: -5.235543251037598
    4. 'Target' → logprob: -5.735543251037598
    5. ' spells' → logprob: -7.110543251037598
    6. '_target' → logprob: -7.735543251037598
    7. ' Target' → logprob: -7.985543251037598
    8. ''' → logprob: -8.360543251037598
    9. 'Sp' → logprob: -8.485543251037598
    10. 'All' → logprob: -8.860543251037598

Token 428: ' spells' (ID: 69967)
  Prédit: ' spells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spells' → logprob: -0.6531537771224976
    2. '"' → logprob: -1.2781537771224976
    3. ' "' → logprob: -1.9031537771224976
    4. ' Sp' → logprob: -4.153153896331787
    5. '_sp' → logprob: -4.278153896331787
    6. 'sp' → logprob: -4.403153896331787
    7. 'Sp' → logprob: -5.028153896331787
    8. ' sp' → logprob: -7.403153896331787
    9. '_' → logprob: -7.528153896331787
    10. ' spell' → logprob: -7.903153896331787

Token 429: ' sum' (ID: 4215)
  Prédit: ' applied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' applied' → logprob: -0.3412225842475891
    2. ' can' → logprob: -1.8412225246429443
    3. ' combined' → logprob: -3.4662225246429443
    4. 's' → logprob: -4.341222763061523
    5. 'can' → logprob: -4.591222763061523
    6. ' is' → logprob: -4.591222763061523
    7. ' to' → logprob: -4.591222763061523
    8. ' applies' → logprob: -4.966222763061523
    9. ' =' → logprob: -5.091222763061523
    10. 'ap' → logprob: -5.216222763061523

Token 430: ' up' (ID: 869)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6656512022018433
    2. ' =' → logprob: -1.9156512022018433
    3. '=' → logprob: -2.040651321411133
    4. 'ed' → logprob: -2.415651321411133
    5. '_' → logprob: -3.915651321411133
    6. 'es' → logprob: -4.540651321411133
    7. ' s' → logprob: -4.540651321411133
    8. ' +=' → logprob: -4.665651321411133
    9. '_s' → logprob: -4.790651321411133
    10. '(s' → logprob: -4.915651321411133

Token 431: ' line' (ID: 2543)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5490068793296814
    2. ',' → logprob: -2.049006938934326
    3. ' up' → logprob: -2.424006938934326
    4. ' =' → logprob: -2.924006938934326
    5. 'to' → logprob: -2.924006938934326
    6. '<|end|>' → logprob: -3.799006938934326
    7. '=' → logprob: -4.049006938934326
    8. '.' → logprob: -4.549006938934326
    9. ' ,' → logprob: -4.674006938934326
    10. 's' → logprob: -4.799006938934326

Token 432: 'arly' (ID: 3489)
  Prédit: 'arly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arly' → logprob: -0.45953741669654846
    2. 'k' → logprob: -2.2095375061035156
    3. 'ar' → logprob: -2.2095375061035156
    4. 's' → logprob: -3.7095375061035156
    5. 'e' → logprob: -3.7095375061035156
    6. 'space' → logprob: -4.084537506103516
    7. ' to' → logprob: -4.209537506103516
    8. '=' → logprob: -4.584537506103516
    9. 'to' → logprob: -4.834537506103516
    10. 'arity' → logprob: -4.834537506103516

Token 433: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 434: ' cost' (ID: 3097)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6875061988830566
    2. ' so' → logprob: -1.9375061988830566
    3. '#' → logprob: -2.5625061988830566
    4. '       ' → logprob: -2.5625061988830566
    5. '<|end|>' → logprob: -2.5625061988830566
    6. 'and' → logprob: -3.6875061988830566
    7. ' ' → logprob: -4.062506198883057
    8. ',' → logprob: -4.312506198883057
    9. ' then' → logprob: -4.562506198883057
    10. '<|end|>' → logprob: -5.312506198883057

Token 435: ' sums' (ID: 73121)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.8070790767669678
    2. ' =' → logprob: -1.3070790767669678
    3. '=' → logprob: -1.6820790767669678
    4. '_' → logprob: -3.5570790767669678
    5. '+=' → logprob: -4.307079315185547
    6. ')' → logprob: -4.432079315185547
    7. 's' → logprob: -4.807079315185547
    8. ' ' → logprob: -5.057079315185547
    9. '+' → logprob: -5.057079315185547
    10. ' used' → logprob: -5.557079315185547

Token 436: ' up' (ID: 869)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4619554877281189
    2. '   ' → logprob: -2.2119555473327637
    3. '<|end|>' → logprob: -2.8369555473327637
    4. ',' → logprob: -3.2119555473327637
    5. '<|end|>' → logprob: -3.2119555473327637
    6. ' )' → logprob: -3.7119555473327637
    7. ' =' → logprob: -3.8369555473327637
    8. '       ' → logprob: -4.586955547332764
    9. '_' → logprob: -4.711955547332764
    10. '  ' → logprob: -5.086955547332764

Token 437: ' line' (ID: 2543)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 438: 'arly' (ID: 3489)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.5360109210014343
    2. '+' → logprob: -1.286010980606079
    3. ')' → logprob: -2.411010980606079
    4. ' +' → logprob: -4.2860107421875
    5. 'arity' → logprob: -4.9110107421875
    6. '=' → logprob: -5.0360107421875
    7. '+=' → logprob: -5.5360107421875
    8. '       ' → logprob: -5.9110107421875
    9. ' +=' → logprob: -6.0360107421875
    10. ' )' → logprob: -6.5360107421875

Token 439: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.64703369140625
    2. '
' → logprob: -1.77203369140625
    3. '<|end|>' → logprob: -1.89703369140625
    4. '   ' → logprob: -2.02203369140625
    5. '       ' → logprob: -2.52203369140625
    6. ':' → logprob: -2.64703369140625
    7. '#' → logprob: -3.02203369140625
    8. ',
' → logprob: -3.14703369140625
    9. ':
' → logprob: -4.14703369140625
    10. '<|end|>' → logprob: -4.27203369140625

Token 440: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07196253538131714
    2. '<|end|>' → logprob: -3.696962594985962
    3. ',' → logprob: -4.696962356567383
    4. '#' → logprob: -4.696962356567383
    5. '
' → logprob: -4.946962356567383
    6. '        
' → logprob: -5.196962356567383
    7. '   ' → logprob: -5.321962356567383
    8. ' 
' → logprob: -6.446962356567383
    9. '\' → logprob: -7.071962356567383
    10. '<|end|>' → logprob: -7.321962356567383

Token 441: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1589096039533615
    2. '<|end|>' → logprob: -2.408909559249878
    3. '#' (adapté à ' #') → logprob: -3.908909559249878
    4. ',' → logprob: -4.533909797668457
    5. '
' → logprob: -5.283909797668457
    6. '   ' → logprob: -5.408909797668457
    7. '<|end|>' → logprob: -5.658909797668457
    8. '        
' → logprob: -5.783909797668457
    9. '.' → logprob: -5.783909797668457
    10. '\' → logprob: -6.658909797668457

Token 442: ' So' (ID: 2632)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.090742826461792
    2. '
' → logprob: -1.090742826461792
    3. '       ' → logprob: -2.840742826461792
    4. ',' → logprob: -3.090742826461792
    5. '<|end|>' → logprob: -3.465742826461792
    6. ',
' → logprob: -3.590742826461792
    7. ' 
' → logprob: -3.590742826461792
    8. '\n' → logprob: -3.715742826461792
    9. 'import' → logprob: -3.965742826461792
    10. '   ' → logprob: -4.340743064880371

Token 443: ',' (ID: 11)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.5141468048095703
    2. 'we' → logprob: -2.2641468048095703
    3. ' total' → logprob: -2.5141468048095703
    4. ' let's' → logprob: -2.7641468048095703
    5. ' next' → logprob: -3.0141468048095703
    6. '#' → logprob: -4.13914680480957
    7. ' the' → logprob: -4.13914680480957
    8. ' for' → logprob: -4.26414680480957
    9. 'total' → logprob: -4.51414680480957
    10. ' dp' → logprob: -5.13914680480957

Token 444: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4972090423107147
    2. 'we' → logprob: -1.997209072113037
    3. ' we' → logprob: -2.622209072113037
    4. ' #' → logprob: -2.997209072113037
    5. 'for' → logprob: -3.372209072113037
    6. 'from' → logprob: -3.622209072113037
    7. 'import' → logprob: -3.997209072113037
    8. ' for' → logprob: -4.122209072113037
    9. 'dp' → logprob: -4.997209072113037
    10. 'def' → logprob: -5.247209072113037

Token 445: ' want' (ID: 1682)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.0075529166497290134
    2. 'can' → logprob: -5.1325531005859375
    3. ' could' → logprob: -7.3825531005859375
    4. '#' → logprob: -7.8825531005859375
    5. ' need' → logprob: -9.007553100585938
    6. ' try' → logprob: -9.382553100585938
    7. ' #' → logprob: -9.507553100585938
    8. ' have' → logprob: -9.757553100585938
    9. ' may' → logprob: -10.007553100585938
    10. '_can' → logprob: -10.257553100585938

Token 446: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.03029222972691059
    2. 'to' → logprob: -3.905292272567749
    3. ' minimize' → logprob: -5.40529203414917
    4. ' find' → logprob: -5.65529203414917
    5. 'min' → logprob: -6.53029203414917
    6. ' min' → logprob: -9.155292510986328
    7. ' minimal' → logprob: -10.030292510986328
    8. 'find' → logprob: -10.530292510986328
    9. ' a' → logprob: -11.155292510986328
    10. ' ' → logprob: -11.280292510986328

Token 447: ' find' (ID: 1646)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5949069261550903
    2. 'find' → logprob: -1.4699069261550903
    3. ' minimize' → logprob: -2.344906806945801
    4. ' find' → logprob: -2.469906806945801
    5. 'use' → logprob: -4.094906806945801
    6. ' use' → logprob: -4.844906806945801
    7. 'choose' → logprob: -6.094906806945801
    8. 'solve' → logprob: -6.219906806945801
    9. 'maximize' → logprob: -6.344906806945801
    10. 'opt' → logprob: -6.344906806945801

Token 448: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8252617120742798
    2. ' the' → logprob: -0.8252617120742798
    3. ' minimal' → logprob: -3.3252615928649902
    4. 'the' → logprob: -3.7002615928649902
    5. 'a' → logprob: -4.32526159286499
    6. ' x' → logprob: -4.57526159286499
    7. ' an' → logprob: -5.07526159286499
    8. ' combinations' → logprob: -5.57526159286499
    9. ' min' → logprob: -5.70026159286499
    10. 'min' → logprob: -5.82526159286499

Token 449: ' minimal' (ID: 19957)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -1.1602489948272705
    2. 'minimum' → logprob: -1.2852489948272705
    3. 'minimal' → logprob: -1.7852489948272705
    4. ' minimal' → logprob: -2.4102489948272705
    5. 'number' → logprob: -3.4102489948272705
    6. ' best' → logprob: -3.6602489948272705
    7. ' combination' → logprob: -3.6602489948272705
    8. ' minimum' → logprob: -4.285248756408691
    9. 'min' → logprob: -4.660248756408691
    10. ' number' → logprob: -4.785248756408691

Token 450: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.7912100553512573
    2. 'total' → logprob: -1.6662100553512573
    3. ' combination' → logprob: -2.416210174560547
    4. 'cost' → logprob: -2.541210174560547
    5. ' amount' → logprob: -2.791210174560547
    6. ' cost' → logprob: -3.291210174560547
    7. 'amount' → logprob: -3.541210174560547
    8. ' number' → logprob: -4.666210174560547
    9. ' MP' → logprob: -4.916210174560547
    10. ' magic' → logprob: -5.041210174560547

Token 451: ' MP' (ID: 14857)
  Prédit: ' MP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MP' → logprob: -0.5293728709220886
    2. ' magic' → logprob: -1.7793729305267334
    3. ' cost' → logprob: -2.5293729305267334
    4. ' mp' → logprob: -3.0293729305267334
    5. 'MP' → logprob: -3.2793729305267334
    6. 'cost' → logprob: -3.4043729305267334
    7. 'magic' → logprob: -3.9043729305267334
    8. '_magic' → logprob: -4.654372692108154
    9. 'mp' → logprob: -5.654372692108154
    10. '_mp' → logprob: -6.279372692108154

Token 452: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30925682187080383
    2. ' to' → logprob: -2.8092567920684814
    3. ' =' → logprob: -3.1842567920684814
    4. '_' → logprob: -3.8092567920684814
    5. ' usage' → logprob: -3.9342567920684814
    6. ' )' → logprob: -4.0592570304870605
    7. '=' → logprob: -4.6842570304870605
    8. ')' → logprob: -4.9342570304870605
    9. ' _' → logprob: -4.9342570304870605
    10. ' (' → logprob: -5.0592570304870605

Token 453: ' sum' (ID: 4215)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.12260901927948
    2. 'casting' → logprob: -1.24760901927948
    3. 'all' → logprob: -1.62260901927948
    4. ' casting' → logprob: -2.6226091384887695
    5. 'casts' → logprob: -3.4976091384887695
    6. ' applying' → logprob: -4.1226091384887695
    7. ' all' → logprob: -4.2476091384887695
    8. 'using' → logprob: -4.4976091384887695
    9. '"' → logprob: -4.8726091384887695
    10. 'the' → logprob: -5.2476091384887695

Token 454: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0103477239608765
    2. ' of' → logprob: -1.0103477239608765
    3. '(' → logprob: -2.760347843170166
    4. 'of' → logprob: -2.885347843170166
    5. '_of' → logprob: -3.510347843170166
    6. ' (' → logprob: -3.760347843170166
    7. ' _' → logprob: -4.260347843170166
    8. '(sp' → logprob: -4.385347843170166
    9. '   ' → logprob: -4.635347843170166
    10. ' =' → logprob: -4.760347843170166

Token 455: ' "' (ID: 392)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.227626234292984
    2. ' all' → logprob: -1.9776262044906616
    3. 'damage' → logprob: -3.852626323699951
    4. ' damage' → logprob: -4.727626323699951
    5. 'd' → logprob: -5.227626323699951
    6. 'casts' → logprob: -5.352626323699951
    7. '"' → logprob: -5.852626323699951
    8. 'All' → logprob: -5.852626323699951
    9. ' damages' → logprob: -6.102626323699951
    10. ' usage' → logprob: -6.727626323699951

Token 456: 'All' (ID: 2594)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.10961195081472397
    2. ' all' → logprob: -2.734611988067627
    3. 'All' → logprob: -3.734611988067627
    4. 'damage' → logprob: -5.359611988067627
    5. 'd' → logprob: -5.609611988067627
    6. ' damage' → logprob: -6.609611988067627
    7. '"' → logprob: -7.609611988067627
    8. 'MP' → logprob: -7.734611988067627
    9. ' dmg' → logprob: -7.984611988067627
    10. '(all' → logprob: -8.109611511230469

Token 457: '"' (ID: 1)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.37159478664398193
    2. '"' → logprob: -1.871594786643982
    3. '_target' → logprob: -2.9965949058532715
    4. '_' → logprob: -3.7465949058532715
    5. ' spells' → logprob: -3.8715949058532715
    6. 'Target' → logprob: -4.4965949058532715
    7. 'All' → logprob: -4.4965949058532715
    8. '_all' → logprob: -4.8715949058532715
    9. '-target' → logprob: -5.3715949058532715
    10. ' target' → logprob: -5.3715949058532715

Token 458: ' spells' (ID: 69967)
  Prédit: ' spells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spells' → logprob: -0.12901288270950317
    2. '_sp' → logprob: -2.7540128231048584
    3. 'sp' → logprob: -3.1290128231048584
    4. '_spell' → logprob: -6.1290130615234375
    5. '_' → logprob: -6.3790130615234375
    6. ' sp' → logprob: -6.5040130615234375
    7. ' spell' → logprob: -6.6290130615234375
    8. '_all' → logprob: -6.6290130615234375
    9. '_damage' → logprob: -6.7540130615234375
    10. ' all' → logprob: -7.2540130615234375

Token 459: ' usages' (ID: 146156)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6030305624008179
    2. '<|end|>' → logprob: -1.8530305624008179
    3. 's' → logprob: -2.4780306816101074
    4. ')' → logprob: -2.9780306816101074
    5. ' _' → logprob: -3.4780306816101074
    6. ' ' → logprob: -3.6030306816101074
    7. '   ' → logprob: -4.228030681610107
    8. ',' → logprob: -4.478030681610107
    9. '_usage' → logprob: -5.103030681610107
    10. '[' → logprob: -5.103030681610107

Token 460: ' to' (ID: 316)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1064660549163818
    2. '<|end|>' → logprob: -1.2314660549163818
    3. ',' → logprob: -1.7314660549163818
    4. ':' → logprob: -2.856466054916382
    5. '.' → logprob: -3.981466054916382
    6. '   ' → logprob: -4.106466293334961
    7. '[' → logprob: -4.231466293334961
    8. ')' → logprob: -4.231466293334961
    9. ' _' → logprob: -4.481466293334961
    10. '<|end|>' → logprob: -4.606466293334961

Token 461: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -1.3818200826644897
    2. ' achieve' → logprob: -1.7568200826644897
    3. ' reduce' → logprob: -2.1318202018737793
    4. 'apply' → logprob: -2.1318202018737793
    5. 'ach' → logprob: -2.8818202018737793
    6. ' apply' → logprob: -3.0068202018737793
    7. 'damage' → logprob: -3.6318202018737793
    8. ' reach' → logprob: -3.6318202018737793
    9. 'reach' → logprob: -3.7568202018737793
    10. ' kill' → logprob: -4.006820201873779

Token 462: ' all' (ID: 722)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2602110505104065
    2. 'the' → logprob: -2.1352109909057617
    3. ' all' → logprob: -3.6352109909057617
    4. 'all' → logprob: -3.8852109909057617
    5. 'HP' → logprob: -4.260210990905762
    6. ' HP' → logprob: -4.510210990905762
    7. ' ' → logprob: -5.260210990905762
    8. 'mon' → logprob: -5.260210990905762
    9. ' monsters' → logprob: -5.260210990905762
    10. ' monster' → logprob: -5.385210990905762

Token 463: ' monsters' (ID: 59311)
  Prédit: ' monsters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' monsters' → logprob: -0.7993162274360657
    2. 'mon' → logprob: -1.049316167831421
    3. 'HP' → logprob: -2.674316167831421
    4. 'monster' → logprob: -3.049316167831421
    5. ' monster' → logprob: -3.299316167831421
    6. ' HP' → logprob: -3.549316167831421
    7. ' remaining' → logprob: -5.04931640625
    8. ' the' → logprob: -6.29931640625
    9. '_mon' → logprob: -6.29931640625
    10. '```' → logprob: -6.42431640625

Token 464: ' HP' (ID: 21979)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 465: ' as' (ID: 472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 466: ' much' (ID: 2009)
  Prédit: 'much'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'much' → logprob: -0.052318669855594635
    2. ' much' → logprob: -3.052318572998047
    3. 'least' → logprob: -6.302318572998047
    4. 'at' → logprob: -7.302318572998047
    5. 'low' → logprob: -7.302318572998047
    6. '```' → logprob: -8.802318572998047
    7. 'below' → logprob: -9.677318572998047
    8. '0' → logprob: -9.927318572998047
    9. ' at' → logprob: -10.177318572998047
    10. ' least' → logprob: -10.552318572998047

Token 467: ' as' (ID: 472)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5416449308395386
    2. '       ' → logprob: -2.041645050048828
    3. ',' → logprob: -2.166645050048828
    4. ' by' → logprob: -2.291645050048828
    5. 'by' → logprob: -2.416645050048828
    6. ' to' → logprob: -3.041645050048828
    7. '.' → logprob: -3.291645050048828
    8. '   ' → logprob: -3.541645050048828
    9. 'possible' → logprob: -3.666645050048828
    10. ' =' → logprob: -3.666645050048828

Token 468: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.001088662538677454
    2. ' possible' → logprob: -7.001088619232178
    3. 'much' → logprob: -9.001089096069336
    4. '```' → logprob: -11.001089096069336
    5. '   ' → logprob: -11.376089096069336
    6. '0' → logprob: -11.751089096069336
    7. 'poss' → logprob: -11.876089096069336
    8. 'needed' → logprob: -12.876089096069336
    9. 'pos' → logprob: -13.501089096069336
    10. '
' → logprob: -13.751089096069336

Token 469: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.099185585975647
    2. '   ' → logprob: -1.224185585975647
    3. ':' → logprob: -1.474185585975647
    4. '<|end|>' → logprob: -3.5991854667663574
    5. '\n' → logprob: -3.5991854667663574
    6. '       ' → logprob: -3.7241854667663574
    7. ',' → logprob: -4.349185466766357
    8. ':
' → logprob: -4.599185466766357
    9. '  
' → logprob: -4.849185466766357
    10. '    
' → logprob: -5.099185466766357

Token 470: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35383230447769165
    2. '<|end|>' → logprob: -1.6038322448730469
    3. '   ' → logprob: -3.353832244873047
    4. '#' → logprob: -4.228832244873047
    5. '
' → logprob: -4.353832244873047
    6. '\n' → logprob: -4.853832244873047
    7. ',' → logprob: -5.353832244873047
    8. '\' → logprob: -5.478832244873047
    9. '<|end|>' → logprob: -5.728832244873047
    10. '        
' → logprob: -5.853832244873047

Token 471: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2578129768371582
    2. '
' → logprob: -2.882812976837158
    3. '        
' → logprob: -3.257812976837158
    4. '#' (adapté à ' #') → logprob: -3.382812976837158
    5. ' 
' → logprob: -3.382812976837158
    6. '   ' → logprob: -4.132812976837158
    7. '\n' → logprob: -4.632812976837158
    8. '\' → logprob: -5.007812976837158
    9. '    
' → logprob: -5.632812976837158
    10. '        ' → logprob: -5.757812976837158

Token 472: ' Let's' (ID: 41021)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.24286435544490814
    2. '#' → logprob: -2.3678643703460693
    3. '       ' → logprob: -2.3678643703460693
    4. 'single' → logprob: -4.61786413192749
    5. 'from' → logprob: -5.11786413192749
    6. 'total' → logprob: -6.24286413192749
    7. 'a' → logprob: -6.49286413192749
    8. 'import' → logprob: -6.49286413192749
    9. 'best' → logprob: -6.49286413192749
    10. 'dp' → logprob: -6.99286413192749

Token 473: ' try' (ID: 2075)
  Prédit: 'collect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collect' → logprob: -0.7807923555374146
    2. 'consider' → logprob: -1.5307923555374146
    3. 'continue' → logprob: -2.030792236328125
    4. '#' → logprob: -3.280792236328125
    5. 'try' → logprob: -3.280792236328125
    6. '   ' → logprob: -3.405792236328125
    7. 'import' → logprob: -3.655792236328125
    8. 'from' → logprob: -4.155792236328125
    9. '       ' → logprob: -4.405792236328125
    10. 'combine' → logprob: -4.780792236328125

Token 474: ' with' (ID: 483)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.068509578704834
    2. '   ' → logprob: -1.818509578704834
    3. '       ' → logprob: -2.068509578704834
    4. ' to' → logprob: -2.193509578704834
    5. 'from' → logprob: -2.318509578704834
    6. 'all' → logprob: -2.443509578704834
    7. ':' → logprob: -3.443509578704834
    8. 'import' → logprob: -4.443509578704834
    9. ':
' → logprob: -4.818509578704834
    10. 'def' → logprob: -4.943509578704834

Token 475: ' the' (ID: 290)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.31822267174720764
    2. 'dp' → logprob: -2.818222761154175
    3. 'all' → logprob: -3.193222761154175
    4. ' binary' → logprob: -3.318222761154175
    5. 'a' → logprob: -3.568222761154175
    6. 'the' → logprob: -4.443222522735596
    7. 'single' → logprob: -4.443222522735596
    8. 'import' → logprob: -4.818222522735596
    9. 'linear' → logprob: -5.068222522735596
    10. 'def' → logprob: -5.193222522735596

Token 476: ' linear' (ID: 23876)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.2384939193725586
    2. 'best' → logprob: -1.8634939193725586
    3. 'total' → logprob: -2.6134939193725586
    4. 'def' → logprob: -2.7384939193725586
    5. '#' → logprob: -2.7384939193725586
    6. 'single' → logprob: -2.9884939193725586
    7. 'sum' → logprob: -3.3634939193725586
    8. 'all' → logprob: -3.4884939193725586
    9. 'minimum' → logprob: -3.4884939193725586
    10. 'dp' → logprob: -3.4884939193725586

Token 477: ' programming' (ID: 23238)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'program' → logprob: -0.7504740953445435
    2. ' programming' → logprob: -0.7504740953445435
    3. '_program' → logprob: -4.375473976135254
    4. 'al' → logprob: -4.875473976135254
    5. ' program' → logprob: -4.875473976135254
    6. 'search' → logprob: -5.125473976135254
    7. 'ity' → logprob: -5.625473976135254
    8. ' optimization' → logprob: -5.750473976135254
    9. '_' → logprob: -6.000473976135254
    10. ' search' → logprob: -6.250473976135254

Token 478: ' approach' (ID: 7139)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 479: ' simplified' (ID: 77177)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9399060606956482
    2. '<|end|>' → logprob: -1.064906120300293
    3. 'import' → logprob: -2.564906120300293
    4. '   ' → logprob: -2.689906120300293
    5. '
' → logprob: -3.439906120300293
    6. '<|end|>' → logprob: -3.689906120300293
    7. '#' → logprob: -4.314906120300293
    8. 'from' → logprob: -4.689906120300293
    9. ' ' → logprob: -5.064906120300293
    10. ':
' → logprob: -5.189906120300293

Token 480: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0277552604675293
    2. '<|end|>' → logprob: -1.1527552604675293
    3. 'import' → logprob: -2.5277552604675293
    4. '   ' → logprob: -2.7777552604675293
    5. ' ' → logprob: -3.1527552604675293
    6. '
' → logprob: -3.5277552604675293
    7. '<|end|>' → logprob: -3.9027552604675293
    8. ' =' → logprob: -3.9027552604675293
    9. '#' → logprob: -4.527755260467529
    10. 'def' → logprob: -4.777755260467529

Token 481: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17725355923175812
    2. 'import' → logprob: -3.052253484725952
    3. '#' → logprob: -3.302253484725952
    4. 'from' → logprob: -3.427253484725952
    5. '        ' → logprob: -4.302253723144531
    6. ' from' → logprob: -4.302253723144531
    7. ' #' → logprob: -5.552253723144531
    8. '        
' → logprob: -5.552253723144531
    9. ' import' → logprob: -6.052253723144531
    10. '   ' → logprob: -6.427253723144531

Token 482: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14401079714298248
    2. 'import' → logprob: -3.3940107822418213
    3. '        ' → logprob: -3.5190107822418213
    4. 'from' → logprob: -3.8940107822418213
    5. '#' (adapté à ' #') → logprob: -4.0190110206604
    6. ' from' → logprob: -5.0190110206604
    7. ' pass' → logprob: -5.1440110206604
    8. '        
' → logprob: -5.5190110206604
    9. ' #' → logprob: -6.1440110206604
    10. ' import' → logprob: -6.1440110206604

Token 483: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0775173902511597
    2. '#' → logprob: -1.3275173902511597
    3. 'import' → logprob: -1.9525173902511597
    4. 'from' → logprob: -2.202517509460449
    5. ' #' → logprob: -3.327517509460449
    6. '        ' → logprob: -3.952517509460449
    7. ' from' → logprob: -4.327517509460449
    8. ' pass' → logprob: -4.577517509460449
    9. 'pass' → logprob: -4.577517509460449
    10. 'max' → logprob: -4.827517509460449

Token 484: ' only' (ID: 1606)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.416598916053772
    2. ' can' → logprob: -1.416598916053772
    3. ' ' → logprob: -1.666598916053772
    4. ' =' → logprob: -2.5415987968444824
    5. 'import' → logprob: -3.0415987968444824
    6. ' #' → logprob: -3.1665987968444824
    7. ' want' → logprob: -3.5415987968444824
    8. '_' → logprob: -3.6665987968444824
    9. '=' → logprob: -4.291598796844482
    10. '.' → logprob: -4.416598796844482

Token 485: ' need' (ID: 1309)
  Prédit: ' need'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -1.2266348600387573
    2. 'consider' → logprob: -1.6016348600387573
    3. ' consider' → logprob: -1.9766348600387573
    4. 'need' → logprob: -1.9766348600387573
    5. ' have' → logprob: -2.476634979248047
    6. ' can' → logprob: -2.601634979248047
    7. 'have' → logprob: -3.226634979248047
    8. 'can' → logprob: -4.101634979248047
    9. ' use' → logprob: -5.101634979248047
    10. ' try' → logprob: -5.601634979248047

Token 486: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.187066450715065
    2. 'to' → logprob: -1.8120664358139038
    3. ' one' → logprob: -5.687066555023193
    4. 'import' → logprob: -6.937066555023193
    5. 'one' → logprob: -7.812066555023193
    6. ' the' → logprob: -7.937066555023193
    7. 'the' → logprob: -8.062066078186035
    8. '       ' → logprob: -8.187066078186035
    9. 'def' → logprob: -8.687066078186035
    10. '           ' → logprob: -8.812066078186035

Token 487: ' find' (ID: 1646)
  Prédit: 'consider'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'consider' → logprob: -0.29045963287353516
    2. ' consider' → logprob: -2.290459632873535
    3. 'min' → logprob: -3.290459632873535
    4. 'try' → logprob: -3.915459632873535
    5. ' use' → logprob: -3.915459632873535
    6. 'use' → logprob: -4.165459632873535
    7. ' minimize' → logprob: -4.665459632873535
    8. 'find' → logprob: -5.040459632873535
    9. 'choose' → logprob: -5.165459632873535
    10. ' try' → logprob: -5.165459632873535

Token 488: ' min' (ID: 1349)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2520483434200287
    2. ' one' → logprob: -2.6270482540130615
    3. 'the' → logprob: -3.0020482540130615
    4. ' a' → logprob: -3.5020482540130615
    5. ' an' → logprob: -4.252048492431641
    6. ' minimal' → logprob: -4.252048492431641
    7. ' how' → logprob: -4.502048492431641
    8. ' total' → logprob: -5.252048492431641
    9. ' x' → logprob: -5.752048492431641
    10. 'one' → logprob: -5.877048492431641

Token 489: ' sum' (ID: 4215)
  Prédit: 'imize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'imize' → logprob: -0.15479382872581482
    2. '_' → logprob: -2.9047937393188477
    3. '_total' → logprob: -3.5297937393188477
    4. 'imum' → logprob: -3.7797937393188477
    5. 'imal' → logprob: -4.154793739318848
    6. 'imized' → logprob: -5.404793739318848
    7. ' total' → logprob: -5.779793739318848
    8. 'sum' → logprob: -6.154793739318848
    9. ' ' → logprob: -6.279793739318848
    10. 'im' → logprob: -6.404793739318848

Token 490: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06541667133569717
    2. '(' → logprob: -3.3154165744781494
    3. '()' → logprob: -4.8154168128967285
    4. ' _' → logprob: -5.1904168128967285
    5. ' (' → logprob: -5.6904168128967285
    6. ' =' → logprob: -6.1904168128967285
    7. ' of' → logprob: -7.0654168128967285
    8. ')' → logprob: -7.1904168128967285
    9. '[' → logprob: -7.3154168128967285
    10. '    ' → logprob: -7.3154168128967285

Token 491: ' (' (ID: 350)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.8072174787521362
    2. 'MP' → logprob: -1.0572174787521362
    3. 'x' → logprob: -3.057217597961426
    4. ' MP' → logprob: -3.182217597961426
    5. '(M' → logprob: -3.682217597961426
    6. 'a' → logprob: -3.807217597961426
    7. 'c' → logprob: -4.307217597961426
    8. 'casts' → logprob: -4.682217597961426
    9. ' x' → logprob: -5.307217597961426
    10. 'mp' → logprob: -5.307217597961426

Token 492: 'all' (ID: 586)
  Prédit: 'MP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MP' → logprob: -0.3635316491127014
    2. 'x' → logprob: -1.9885315895080566
    3. 'all' → logprob: -2.9885315895080566
    4. ' MP' → logprob: -3.3635315895080566
    5. 'usage' → logprob: -4.113531589508057
    6. 'casts' → logprob: -4.113531589508057
    7. 'sp' → logprob: -4.363531589508057
    8. 'c' → logprob: -5.113531589508057
    9. ' x' → logprob: -5.363531589508057
    10. 'count' → logprob: -5.488531589508057

Token 493: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.6240087151527405
    2. '_all' → logprob: -2.3740086555480957
    3. 'sp' → logprob: -2.6240086555480957
    4. '_cast' → logprob: -2.7490086555480957
    5. '_' → logprob: -3.3740086555480957
    6. '(sp' → logprob: -3.7490086555480957
    7. ')' → logprob: -3.8740086555480957
    8. '_mp' → logprob: -3.8740086555480957
    9. ' spells' → logprob: -4.374008655548096
    10. '_usage' → logprob: -4.499008655548096

Token 494: 'ells' (ID: 9703)
  Prédit: 'ells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ells' → logprob: -0.0167765524238348
    2. 'ell' → logprob: -4.1417765617370605
    3. 'els' → logprob: -8.266776084899902
    4. 'e' → logprob: -9.141776084899902
    5. 'el' → logprob: -9.391776084899902
    6. '_' → logprob: -9.516776084899902
    7. ')' → logprob: -9.641776084899902
    8. 'ec' → logprob: -10.016776084899902
    9. 'ects' → logprob: -10.516776084899902
    10. 'aces' → logprob: -11.391776084899902

Token 495: '_usage' (ID: 77753)
  Prédit: '_usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_usage' → logprob: -0.2906590700149536
    2. '_us' → logprob: -1.6656590700149536
    3. '_use' → logprob: -4.165658950805664
    4. '[i' → logprob: -4.290658950805664
    5. '_used' → logprob: -5.040658950805664
    6. ')' → logprob: -5.290658950805664
    7. '_mp' → logprob: -5.415658950805664
    8. '_cast' → logprob: -5.415658950805664
    9. '_cost' → logprob: -5.540658950805664
    10. '_' → logprob: -5.915658950805664

Token 496: '_j' (ID: 12021)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3218737244606018
    2. ' )' → logprob: -1.946873664855957
    3. 's' → logprob: -2.446873664855957
    4. ' *' → logprob: -3.821873664855957
    5. '_' → logprob: -5.321873664855957
    6. '[i' → logprob: -5.696873664855957
    7. '*' → logprob: -5.946873664855957
    8. ')s' → logprob: -6.071873664855957
    9. ' ' → logprob: -6.321873664855957
    10. '[' → logprob: -6.446873664855957

Token 497: ' *' (ID: 425)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.6480948328971863
    2. ' *' → logprob: -1.023094892501831
    3. ')' → logprob: -2.773094892501831
    4. '*' → logprob: -4.023094654083252
    5. '_j' → logprob: -4.398094654083252
    6. '[' → logprob: -5.148094654083252
    7. 's' → logprob: -5.148094654083252
    8. ' ' → logprob: -5.773094654083252
    9. ' )' → logprob: -5.898094654083252
    10. '*j' → logprob: -6.023094654083252

Token 498: ' MP' (ID: 14857)
  Prédit: 'MP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MP' → logprob: -0.08965408802032471
    2. ' MP' → logprob: -2.464653968811035
    3. ' spells' → logprob: -8.214653968811035
    4. 'sp' → logprob: -8.589653968811035
    5. 'mp' → logprob: -9.714653968811035
    6. ' ' → logprob: -10.339653968811035
    7. 'cost' → logprob: -10.464653968811035
    8. 'SP' → logprob: -10.464653968811035
    9. '_MP' → logprob: -10.589653968811035
    10. ' mp' → logprob: -11.089653968811035

Token 499: '_j' (ID: 12021)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.595777690410614
    2. '_j' → logprob: -0.970777690410614
    3. ')' → logprob: -2.845777750015259
    4. '[' → logprob: -4.84577751159668
    5. 'j' → logprob: -5.72077751159668
    6. 's' → logprob: -7.84577751159668
    7. '_' → logprob: -8.22077751159668
    8. '[s' → logprob: -10.34577751159668
    9. '   ' → logprob: -10.84577751159668
    10. ' )' → logprob: -10.97077751159668

Token 500: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.120653435587883
    2. '_j' → logprob: -2.2456533908843994
    3. ' )' → logprob: -5.4956536293029785
    4. '[j' → logprob: -6.7456536293029785
    5. 'j' → logprob: -6.9956536293029785
    6. ')+' → logprob: -7.8706536293029785
    7. '*' → logprob: -8.12065315246582
    8. ' *' → logprob: -8.24565315246582
    9. '[' → logprob: -8.24565315246582
    10. ' +' → logprob: -9.24565315246582

Token 501: ' such' (ID: 2238)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 502: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.29296520352363586
    2. ' that' → logprob: -1.5429651737213135
    3. 'with' → logprob: -4.042965412139893
    4. '_that' → logprob: -4.417965412139893
    5. 'space' → logprob: -5.917965412139893
    6. '=' → logprob: -6.167965412139893
    7. 'to' → logprob: -7.167965412139893
    8. ' with' → logprob: -7.167965412139893
    9. 'for' → logprob: -7.292965412139893
    10. 'That' → logprob: -7.792965412139893

Token 503: ' for' (ID: 395)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.8768371343612671
    2. 'for' → logprob: -1.251837134361267
    3. 'sum' → logprob: -1.876837134361267
    4. ' all' → logprob: -2.8768372535705566
    5. ' for' → logprob: -3.1268372535705566
    6. ' sum' → logprob: -4.501837253570557
    7. 'damage' → logprob: -4.876837253570557
    8. 'forall' → logprob: -5.001837253570557
    9. 'the' → logprob: -5.376837253570557
    10. '   ' → logprob: -5.751837253570557

Token 504: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.3881382942199707
    2. 'all' → logprob: -1.3881382942199707
    3. ' each' → logprob: -3.3881382942199707
    4. ' all' → logprob: -3.7631382942199707
    5. 'every' → logprob: -4.388138294219971
    6. ' every' → logprob: -6.263138294219971
    7. 'i' → logprob: -8.263137817382812
    8. 'j' → logprob: -8.388137817382812
    9. ' j' → logprob: -9.263137817382812
    10. ' i' → logprob: -9.388137817382812

Token 505: ' monster' (ID: 36286)
  Prédit: ' monster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' monster' → logprob: -0.6583116054534912
    2. 'monster' → logprob: -0.7833116054534912
    3. ' i' → logprob: -4.40831184387207
    4. 'i' → logprob: -5.15831184387207
    5. 'mon' → logprob: -5.15831184387207
    6. ' HP' → logprob: -7.03331184387207
    7. 'HP' → logprob: -8.40831184387207
    8. ' j' → logprob: -9.03331184387207
    9. ' monsters' → logprob: -9.90831184387207
    10. '
' → logprob: -10.03331184387207

Token 506: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6773995757102966
    2. ' i' → logprob: -1.1773996353149414
    3. 'i' → logprob: -3.0523996353149414
    4. '_i' → logprob: -3.1773996353149414
    5. '[i' → logprob: -3.8023996353149414
    6. ' j' → logprob: -3.8023996353149414
    7. '_j' → logprob: -4.552399635314941
    8. ':' → logprob: -4.927399635314941
    9. '       ' → logprob: -5.302399635314941
    10. ' ,' → logprob: -5.427399635314941

Token 507: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.190109133720398
    2. '        ' → logprob: -2.1901092529296875
    3. ' (' → logprob: -2.4401092529296875
    4. ' for' → logprob: -2.5651092529296875
    5. '#' → logprob: -2.6901092529296875
    6. 'for' → logprob: -2.8151092529296875
    7. 'd' → logprob: -2.9401092529296875
    8. '           ' → logprob: -3.4401092529296875
    9. ' all' → logprob: -3.8151092529296875
    10. 'all' → logprob: -3.9401092529296875

Token 508: ' #' (ID: 1069)
  Prédit: ' HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' HP' → logprob: -0.40582048892974854
    2. 'HP' → logprob: -3.155820369720459
    3. ' all' → logprob: -3.155820369720459
    4. ' (' → logprob: -3.405820369720459
    5. ' max' → logprob: -3.655820369720459
    6. '        ' → logprob: -3.655820369720459
    7. 'd' → logprob: -4.030820369720459
    8. ' dmg' → logprob: -4.030820369720459
    9. ' sum' → logprob: -4.155820369720459
    10. ' damage' → logprob: -4.280820369720459

Token 509: ' HP' (ID: 21979)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'damage' → logprob: -1.912624478340149
    2. ' damage' → logprob: -2.0376243591308594
    3. 'sum' → logprob: -2.0376243591308594
    4. ' sum' → logprob: -2.0376243591308594
    5. ' all' → logprob: -2.4126243591308594
    6. ' HP' → logprob: -2.7876243591308594
    7. 'd' → logprob: -2.9126243591308594
    8. 'HP' → logprob: -3.1626243591308594
    9. 'all' → logprob: -3.1626243591308594
    10. ' dmg' → logprob: -3.2876243591308594

Token 510: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06017932668328285
    2. ' -' → logprob: -3.5601792335510254
    3. ' <=' → logprob: -4.435179233551025
    4. '[j' → logprob: -5.060179233551025
    5. '       ' → logprob: -5.935179233551025
    6. ' >=' → logprob: -6.435179233551025
    7. ' ' → logprob: -6.935179233551025
    8. '-' → logprob: -6.935179233551025
    9. '[' → logprob: -7.185179233551025
    10. '   ' → logprob: -7.435179233551025

Token 511: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.047558821737766266
    2. ' -' → logprob: -4.047558784484863
    3. ']>' → logprob: -4.672558784484863
    4. '-' → logprob: -5.547558784484863
    5. ']>=' → logprob: -5.547558784484863
    6. '[i' → logprob: -5.672558784484863
    7. ')' → logprob: -6.297558784484863
    8. ' ]' → logprob: -6.547558784484863
    9. '>' → logprob: -6.797558784484863
    10. '       ' → logprob: -7.047558784484863

Token 512: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9210720658302307
    2. ' <=' → logprob: -1.296072006225586
    3. ' >=' → logprob: -2.796072006225586
    4. '-' → logprob: -3.046072006225586
    5. ')' → logprob: -3.171072006225586
    6. '<=' → logprob: -3.421072006225586
    7. '>' → logprob: -3.546072006225586
    8. ' >' → logprob: -3.796072006225586
    9. ']' → logprob: -3.921072006225586
    10. '[i' → logprob: -4.171072006225586

Token 513: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.2259048968553543
    2. ' sum' → logprob: -1.600904941558838
    3. '(sum' → logprob: -8.85090446472168
    4. ' \' → logprob: -8.97590446472168
    5. '\' → logprob: -9.35090446472168
    6. ' (' → logprob: -10.47590446472168
    7. '\xe2\x88' → logprob: -11.10090446472168
    8. '   ' → logprob: -11.22590446472168
    9. '
' → logprob: -11.35090446472168
    10. '(' → logprob: -11.60090446472168

Token 514: '(all' (ID: 34727)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.749142587184906
    2. '(sp' → logprob: -1.8741426467895508
    3. '(all' → logprob: -2.124142646789551
    4. ' (' → logprob: -2.249142646789551
    5. 'of' → logprob: -2.999142646789551
    6. ' of' → logprob: -3.374142646789551
    7. '_all' → logprob: -4.499142646789551
    8. 'all' → logprob: -4.624142646789551
    9. '_' → logprob: -4.874142646789551
    10. '_j' → logprob: -5.374142646789551

Token 515: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.013886566273868084
    2. 'sp' → logprob: -5.388886451721191
    3. '_target' → logprob: -6.263886451721191
    4. '_spell' → logprob: -6.263886451721191
    5. '_s' → logprob: -6.388886451721191
    6. '_j' → logprob: -7.013886451721191
    7. '[i' → logprob: -7.513886451721191
    8. '_usage' → logprob: -7.763886451721191
    9. '_targets' → logprob: -8.263886451721191
    10. '_' → logprob: -8.388886451721191

Token 516: 'ells' (ID: 9703)
  Prédit: 'ells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ells' → logprob: -0.005573098547756672
    2. '_' → logprob: -6.255573272705078
    3. '```' → logprob: -7.255573272705078
    4. 'els' → logprob: -7.380573272705078
    5. 'ell' → logprob: -7.630573272705078
    6. '_j' → logprob: -8.130573272705078
    7. '_use' → logprob: -9.005573272705078
    8. '   ' → logprob: -9.255573272705078
    9. '_usage' → logprob: -9.255573272705078
    10. 'aces' → logprob: -9.380573272705078

Token 517: '_usage' (ID: 77753)
  Prédit: '_usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_usage' → logprob: -0.1449161320924759
    2. '_j' → logprob: -2.76991605758667
    3. '_us' → logprob: -3.64491605758667
    4. ']_' → logprob: -4.26991605758667
    5. '[j' → logprob: -4.76991605758667
    6. 'usage' → logprob: -5.64491605758667
    7. '_use' → logprob: -5.76991605758667
    8. ']' → logprob: -6.14491605758667
    9. '_used' → logprob: -6.26991605758667
    10. '_' → logprob: -6.39491605758667

Token 518: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.05080243945121765
    2. '[j' → logprob: -3.30080246925354
    3. ']' → logprob: -5.425802230834961
    4. ']_' → logprob: -5.925802230834961
    5. 's' → logprob: -6.675802230834961
    6. '[' → logprob: -7.050802230834961
    7. '```' → logprob: -7.550802230834961
    8. '[_' → logprob: -7.675802230834961
    9. '_' → logprob: -8.050802230834961
    10. '_k' → logprob: -8.050802230834961

Token 519: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.09195821732282639
    2. '*' → logprob: -2.4669582843780518
    3. ')' → logprob: -6.966958045959473
    4. '[j' → logprob: -7.216958045959473
    5. ']' → logprob: -8.216958045959473
    6. '[i' → logprob: -8.466958045959473
    7. '_j' → logprob: -8.716958045959473
    8. '[' → logprob: -8.841958045959473
    9. '*j' → logprob: -9.091958045959473
    10. ' ' → logprob: -9.216958045959473

Token 520: ' damage' (ID: 10364)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.006528384052217007
    2. ' dmg' → logprob: -5.256528377532959
    3. 'damage' → logprob: -7.131528377532959
    4. 'sp' → logprob: -8.256528854370117
    5. ' spells' → logprob: -8.631528854370117
    6. ' damage' → logprob: -10.756528854370117
    7. 'dam' → logprob: -11.756528854370117
    8. '(d' → logprob: -12.256528854370117
    9. 'target' → logprob: -12.881528854370117
    10. ' d' → logprob: -13.131528854370117

Token 521: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.07456386834383011
    2. '[j' → logprob: -2.699563980102539
    3. '[' → logprob: -6.824563980102539
    4. 's' → logprob: -6.824563980102539
    5. ')' → logprob: -7.449563980102539
    6. '_all' → logprob: -7.949563980102539
    7. ']' → logprob: -8.074563980102539
    8. 'j' → logprob: -8.699563980102539
    9. '_s' → logprob: -8.824563980102539
    10. ']_' → logprob: -8.949563980102539

Token 522: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06884840130805969
    2. '[j' → logprob: -2.9438483715057373
    3. ' )' → logprob: -4.443848609924316
    4. '_j' → logprob: -7.818848609924316
    5. '[i' → logprob: -8.068848609924316
    6. 'j' → logprob: -8.318848609924316
    7. '])' → logprob: -8.318848609924316
    8. '[' → logprob: -8.443848609924316
    9. ')>=' → logprob: -8.693848609924316
    10. ']' → logprob: -8.943848609924316

Token 523: ' ≤' (ID: 72554)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.19677230715751648
    2. ' <=' → logprob: -2.321772336959839
    3. '>=' → logprob: -3.196772336959839
    4. ')' → logprob: -4.32177209854126
    5. '[j' → logprob: -4.82177209854126
    6. '[i' → logprob: -5.07177209854126
    7. ' ' → logprob: -5.82177209854126
    8. '<=' → logprob: -6.57177209854126
    9. ' ≥' → logprob: -7.07177209854126
    10. ')>=' → logprob: -7.32177209854126

Token 524: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10441728681325912
    2. ' ' → logprob: -2.729417324066162
    3. 'HP' → logprob: -3.979417324066162
    4. ' HP' → logprob: -4.979417324066162
    5. '-' → logprob: -5.854417324066162
    6. ' -' → logprob: -5.854417324066162
    7. 'max' → logprob: -7.604417324066162
    8. 'd' → logprob: -7.729417324066162
    9. ' max' → logprob: -8.229416847229004
    10. '-d' → logprob: -8.604416847229004

Token 525: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020305246114730835
    2. 'HP' → logprob: -4.145305156707764
    3. ' ' → logprob: -6.020305156707764
    4. ' HP' → logprob: -7.145305156707764
    5. 'max' → logprob: -7.395305156707764
    6. '-' → logprob: -8.895305633544922
    7. ' -' → logprob: -9.895305633544922
    8. '-d' → logprob: -10.145305633544922
    9. ' max' → logprob: -10.145305633544922
    10. 'hp' → logprob: -10.957805633544922

Token 526: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.175613135099411
    2. '
' → logprob: -2.5506131649017334
    3. '<|end|>' → logprob: -2.8006131649017334
    4. '   ' → logprob: -5.425612926483154
    5. ',' → logprob: -5.800612926483154
    6. '<|end|>' → logprob: -5.925612926483154
    7. '#' → logprob: -6.050612926483154
    8. 'import' → logprob: -6.300612926483154
    9. '        
' → logprob: -6.425612926483154
    10. '\n' → logprob: -6.925612926483154

Token 527: ' ≤' (ID: 72554)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6813058853149414
    2. ' ' → logprob: -1.8063058853149414
    3. '1' → logprob: -2.0563058853149414
    4. '\n' → logprob: -3.4313058853149414
    5. ' \' → logprob: -3.8063058853149414
    6. 'max' → logprob: -4.306305885314941
    7. ' >=' → logprob: -4.306305885314941
    8. ' max' → logprob: -4.431305885314941
    9. ' +' → logprob: -4.431305885314941
    10. '+' → logprob: -4.431305885314941

Token 528: ' residual' (ID: 54782)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4204096794128418
    2. ' ' → logprob: -1.7954096794128418
    3. 'HP' → logprob: -2.170409679412842
    4. ' HP' → logprob: -3.545409679412842
    5. '   ' → logprob: -5.170409679412842
    6. '1' → logprob: -5.295409679412842
    7. 'max' → logprob: -5.420409679412842
    8. ' max' → logprob: -6.107909679412842
    9. 'remaining' → logprob: -6.107909679412842
    10. ' (' → logprob: -6.857909679412842

Token 529: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40658634901046753
    2. '_j' → logprob: -2.1565864086151123
    3. '_' → logprob: -2.4065864086151123
    4. '   ' → logprob: -3.7815864086151123
    5. '
' → logprob: -4.281586170196533
    6. ')' → logprob: -4.281586170196533
    7. '[' → logprob: -4.406586170196533
    8. '        
' → logprob: -4.656586170196533
    9. '[j' → logprob: -4.781586170196533
    10. ' =' → logprob: -5.156586170196533

Token 530: ' be' (ID: 413)
  Prédit: 'kill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kill' → logprob: -0.050884462893009186
    2. ' kill' → logprob: -4.300884246826172
    3. 'k' → logprob: -4.800884246826172
    4. '0' → logprob: -5.300884246826172
    5. 'def' → logprob: -5.300884246826172
    6. ' defeat' → logprob: -5.925884246826172
    7. ' be' → logprob: -6.050884246826172
    8. 'damage' → logprob: -6.050884246826172
    9. '```' → logprob: -6.675884246826172
    10. 'HP' → logprob: -6.675884246826172

Token 531: ' killed' (ID: 17372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03765742853283882
    2. '0' → logprob: -4.037657260894775
    3. '```' → logprob: -5.162657260894775
    4. ' killed' → logprob: -5.662657260894775
    5. 'done' → logprob: -6.662657260894775
    6. 'HP' → logprob: -6.912657260894775
    7. 'covered' → logprob: -6.912657260894775
    8. 'kill' → logprob: -7.037657260894775
    9. '1' → logprob: -7.162657260894775
    10. ' dealt' → logprob: -7.412657260894775

Token 532: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5572490096092224
    2. '
' → logprob: -1.5572490692138672
    3. '<|end|>' → logprob: -2.057249069213867
    4. '   ' → logprob: -3.557249069213867
    5. '_j' → logprob: -4.557249069213867
    6. ')' → logprob: -4.807249069213867
    7. '\n' → logprob: -5.307249069213867
    8. '#' → logprob: -5.432249069213867
    9. '        
' → logprob: -5.432249069213867
    10. '[j' → logprob: -5.682249069213867

Token 533: ' single' (ID: 4590)
  Prédit: ' single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' single' → logprob: -1.0058674812316895
    2. 'single' → logprob: -1.1308674812316895
    3. '<|end|>' → logprob: -1.8808674812316895
    4. ' ' → logprob: -3.5058674812316895
    5. ')' → logprob: -3.7558674812316895
    6. 'Single' → logprob: -4.0058674812316895
    7. ' all' → logprob: -4.2558674812316895
    8. 'all' → logprob: -4.2558674812316895
    9. 'sp' → logprob: -4.7558674812316895
    10. '_single' → logprob: -5.1308674812316895

Token 534: '-target' (ID: 40350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3547811806201935
    2. '_' → logprob: -2.104781150817871
    3. '<|end|>' → logprob: -3.479781150817871
    4. '
' → logprob: -3.604781150817871
    5. '   ' → logprob: -3.729781150817871
    6. ')' → logprob: -3.729781150817871
    7. '        
' → logprob: -4.479781150817871
    8. ' ' → logprob: -4.604781150817871
    9. '[' → logprob: -5.104781150817871
    10. ' 
' → logprob: -5.354781150817871

Token 535: ' spells' (ID: 69967)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2631075382232666
    2. '<|end|>' → logprob: -2.5131075382232666
    3. '   ' → logprob: -3.2631075382232666
    4. '
' → logprob: -3.3881075382232666
    5. '_j' → logprob: -4.7631072998046875
    6. '_' → logprob: -4.7631072998046875
    7. ')' → logprob: -4.8881072998046875
    8. '        
' → logprob: -5.0131072998046875
    9. '#' → logprob: -5.0131072998046875
    10. 's' → logprob: -5.5131072998046875

Token 536: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 537: ' cost' (ID: 3097)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.4692010879516602
    2. 'the' → logprob: -1.8442010879516602
    3. ' single' → logprob: -2.34420108795166
    4. 'out' → logprob: -2.34420108795166
    5. ' minimal' → logprob: -3.09420108795166
    6. 'single' → logprob: -3.09420108795166
    7. ' remaining' → logprob: -3.21920108795166
    8. '#' → logprob: -3.46920108795166
    9. 'remaining' → logprob: -3.46920108795166
    10. ' available' → logprob: -3.84420108795166

Token 538: ' best' (ID: 1636)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9652202129364014
    2. '       ' → logprob: -1.2152202129364014
    3. ')' → logprob: -2.4652202129364014
    4. '_' → logprob: -3.0902202129364014
    5. '[' → logprob: -3.5902202129364014
    6. '<|end|>' → logprob: -3.5902202129364014
    7. '[
' → logprob: -3.5902202129364014
    8. '   ' → logprob: -3.7152202129364014
    9. ']' → logprob: -4.2152204513549805
    10. ' 
' → logprob: -4.8402204513549805

Token 539: '_single' (ID: 46053)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2710227966308594
    2. ')' → logprob: -2.6460227966308594
    3. '       ' → logprob: -2.7710227966308594
    4. ' _' → logprob: -3.8960227966308594
    5. '[' → logprob: -4.146022796630859
    6. '   ' → logprob: -4.146022796630859
    7. '  ' → logprob: -5.146022796630859
    8. ' ' → logprob: -5.396022796630859
    9. '    ' → logprob: -5.521022796630859
    10. '=' → logprob: -5.521022796630859

Token 540: '_mp' (ID: 96508)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2706912159919739
    2. ']' → logprob: -2.395691156387329
    3. '_j' → logprob: -2.895691156387329
    4. ')' → logprob: -3.520691156387329
    5. '[i' → logprob: -4.270691394805908
    6. '[j' → logprob: -4.770691394805908
    7. '[' → logprob: -4.770691394805908
    8. '   ' → logprob: -5.270691394805908
    9. '       ' → logprob: -5.520691394805908
    10. ' _' → logprob: -5.645691394805908

Token 541: '[i' (ID: 1768)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12487819045782089
    2. '<|end|>' → logprob: -2.624878168106079
    3. ' ' → logprob: -4.749878406524658
    4. ')' → logprob: -5.249878406524658
    5. '   ' → logprob: -5.624878406524658
    6. '        
' → logprob: -5.624878406524658
    7. '        ' → logprob: -5.749878406524658
    8. '#' → logprob: -5.874878406524658
    9. '
' → logprob: -5.999878406524658
    10. '_j' → logprob: -6.124878406524658

Token 542: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6504335403442383
    2. '])' → logprob: -0.7754335403442383
    3. ')' → logprob: -4.650433540344238
    4. ')]' → logprob: -6.025433540344238
    5. '       ' → logprob: -7.025433540344238
    6. ']
' → logprob: -7.025433540344238
    7. '])
' → logprob: -7.150433540344238
    8. ']))' → logprob: -7.275433540344238
    9. ')])' → logprob: -7.275433540344238
    10. '[i' → logprob: -8.025433540344238

Token 543: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12460219115018845
    2. '   ' → logprob: -3.2496020793914795
    3. '<|end|>' → logprob: -3.8746020793914795
    4. '
' → logprob: -4.124602317810059
    5. '        
' → logprob: -4.874602317810059
    6. ')' → logprob: -5.249602317810059
    7. ' 
' → logprob: -5.499602317810059
    8. '    
' → logprob: -5.874602317810059
    9. ',' → logprob: -5.999602317810059
    10. '  
' → logprob: -6.124602317810059

Token 544: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10025779157876968
    2. '   ' → logprob: -3.8502578735351562
    3. '\n' → logprob: -4.350257873535156
    4. ')' → logprob: -4.850257873535156
    5. '
' → logprob: -4.975257873535156
    6. ':' → logprob: -4.975257873535156
    7. '        
' → logprob: -5.100257873535156
    8. '\' → logprob: -5.350257873535156
    9. '[' → logprob: -5.600257873535156
    10. ' =' → logprob: -6.100257873535156

Token 545: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0870833694934845
    2. '        
' → logprob: -3.587083339691162
    3. ' 
' → logprob: -3.837083339691162
    4. '\' → logprob: -5.212083339691162
    5. '   ' → logprob: -5.337083339691162
    6. '
' → logprob: -5.337083339691162
    7. '#' → logprob: -5.712083339691162
    8. '\n' → logprob: -5.962083339691162
    9. '    
' → logprob: -6.337083339691162
    10. '        ' → logprob: -6.587083339691162

Token 546: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45290279388427734
    2. '
' → logprob: -2.7029027938842773
    3. ' all' → logprob: -2.7029027938842773
    4. '#' → logprob: -3.2029027938842773
    5. 'import' → logprob: -3.2029027938842773
    6. 'all' → logprob: -3.7029027938842773
    7. 'def' → logprob: -4.327902793884277
    8. ' we' → logprob: -4.577902793884277
    9. ' best' → logprob: -4.702902793884277
    10. '        ' → logprob: -4.952902793884277

Token 547: ' after' (ID: 1934)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.5290995836257935
    2. 'from' → logprob: -1.7790995836257935
    3. '#' → logprob: -1.9040995836257935
    4. ' from' → logprob: -2.279099464416504
    5. ' #' → logprob: -3.029099464416504
    6. 'all' → logprob: -3.154099464416504
    7. ' best' → logprob: -3.404099464416504
    8. ' all' → logprob: -3.404099464416504
    9. 'dp' → logprob: -3.529099464416504
    10. ' pass' → logprob: -3.779099464416504

Token 548: ' applying' (ID: 24667)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.11203811317682266
    2. 'all' → logprob: -3.3620381355285645
    3. ' applying' → logprob: -3.4870381355285645
    4. 'subtract' → logprob: -4.3620381355285645
    5. ' subtract' → logprob: -5.3620381355285645
    6. 'calcul' → logprob: -5.4870381355285645
    7. ' all' → logprob: -5.7370381355285645
    8. 'redu' → logprob: -6.2370381355285645
    9. 'consider' → logprob: -6.4870381355285645
    10. ' app' → logprob: -6.4870381355285645

Token 549: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.12528687715530396
    2. ' all' → logprob: -2.250286817550659
    3. '"' → logprob: -5.375287055969238
    4. ' the' → logprob: -5.625287055969238
    5. 'the' → logprob: -5.625287055969238
    6. 'sum' → logprob: -8.625287055969238
    7. ''all' → logprob: -9.375287055969238
    8. ' "' → logprob: -9.500287055969238
    9. ''' → logprob: -9.875287055969238
    10. ' sum' → logprob: -10.125287055969238

Token 550: '-sp' (ID: 29290)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.0012799992691725492
    2. '_' → logprob: -7.376279830932617
    3. '_all' → logprob: -8.251279830932617
    4. 'sp' → logprob: -8.751279830932617
    5. '_spell' → logprob: -9.501279830932617
    6. ' _' → logprob: -10.251279830932617
    7. '_target' → logprob: -10.251279830932617
    8. '_targets' → logprob: -10.626279830932617
    9. '_s' → logprob: -10.751279830932617
    10. ' ' → logprob: -11.751279830932617

Token 551: 'ells' (ID: 9703)
  Prédit: 'ells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ells' → logprob: -0.02216240018606186
    2. 'ell' → logprob: -4.022162437438965
    3. '_' → logprob: -7.022162437438965
    4. 'aces' → logprob: -7.272162437438965
    5. 'els' → logprob: -7.397162437438965
    6. 'ects' → logprob: -7.897162437438965
    7. '   ' → logprob: -8.397162437438965
    8. '```' → logprob: -8.522162437438965
    9. 'el' → logprob: -8.647162437438965
    10. 'ec' → logprob: -8.897162437438965

Token 552: ' usages' (ID: 146156)
  Prédit: '_usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_usage' → logprob: -0.031818490475416183
    2. '_us' → logprob: -3.781818389892578
    3. 'usage' → logprob: -6.031818389892578
    4. '_j' → logprob: -6.781818389892578
    5. '_use' → logprob: -7.031818389892578
    6. '   ' → logprob: -7.031818389892578
    7. '_' → logprob: -7.031818389892578
    8. ',' → logprob: -7.906818389892578
    9. '_used' → logprob: -7.906818389892578
    10. ' usage' → logprob: -8.281818389892578

Token 553: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6550101041793823
    2. '_j' → logprob: -0.7800101041793823
    3. '_' → logprob: -5.030010223388672
    4. '_,' → logprob: -5.155010223388672
    5. '       ' → logprob: -5.780010223388672
    6. '   ' → logprob: -6.030010223388672
    7. '#' → logprob: -7.030010223388672
    8. ',j' → logprob: -7.405010223388672
    9. ' ,' → logprob: -7.530010223388672
    10. ',
' → logprob: -7.780010223388672

Token 554: ' residual' (ID: 54782)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7186076045036316
    2. '#' → logprob: -1.3436076641082764
    3. 'remaining' → logprob: -2.2186076641082764
    4. 'the' → logprob: -2.8436076641082764
    5. ' residual' → logprob: -3.8436076641082764
    6. 'we' → logprob: -4.093607425689697
    7. 'rest' → logprob: -4.718607425689697
    8. 'for' → logprob: -4.718607425689697
    9. ' the' → logprob: -4.843607425689697
    10. '   ' → logprob: -5.593607425689697

Token 555: ' HP' (ID: 21979)
  Prédit: '_hp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hp' → logprob: -0.4034150242805481
    2. '_' → logprob: -2.1534149646759033
    3. '_HP' → logprob: -2.2784149646759033
    4. ' =' → logprob: -2.5284149646759033
    5. 'HP' → logprob: -3.6534149646759033
    6. 's' → logprob: -5.778415203094482
    7. ' HP' → logprob: -6.403415203094482
    8. '_H' → logprob: -6.903415203094482
    9. '=' → logprob: -7.278415203094482
    10. '_damage' → logprob: -8.278414726257324

Token 556: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.781806468963623
    2. '[i' → logprob: -1.531806468963623
    3. '=' → logprob: -2.156806468963623
    4. 's' → logprob: -2.281806468963623
    5. '>' → logprob: -4.281806468963623
    6. ' -=' → logprob: -4.281806468963623
    7. ' <=' → logprob: -4.531806468963623
    8. ')' → logprob: -4.656806468963623
    9. '[:]' → logprob: -4.781806468963623
    10. '_remaining' → logprob: -5.156806468963623

Token 557: ']_' (ID: 167793)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0313974991440773
    2. ' -' → logprob: -4.656397342681885
    3. '[i' → logprob: -5.531397342681885
    4. '-' → logprob: -5.656397342681885
    5. ' ]' → logprob: -6.031397342681885
    6. '>' → logprob: -6.281397342681885
    7. ']>' → logprob: -6.281397342681885
    8. ' >' → logprob: -6.906397342681885
    9. ']=' → logprob: -7.031397342681885
    10. ')' → logprob: -7.031397342681885

Token 558: 'left' (ID: 4530)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1841282695531845
    2. '=' → logprob: -2.0591282844543457
    3. ' <=' → logprob: -4.809128284454346
    4. '[i' → logprob: -5.309128284454346
    5. ' -' → logprob: -5.434128284454346
    6. '   ' → logprob: -5.559128284454346
    7. ' -=' → logprob: -5.684128284454346
    8. '_remaining' → logprob: -6.309128284454346
    9. ' ' → logprob: -6.684128284454346
    10. 's' → logprob: -6.809128284454346

Token 559: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7280146479606628
    2. ' =' → logprob: -0.9780146479606628
    3. '[i' → logprob: -2.8530147075653076
    4. '_' → logprob: -3.9780147075653076
    5. '   ' → logprob: -4.1030144691467285
    6. ' <=' → logprob: -4.4780144691467285
    7. '```' → logprob: -5.2280144691467285
    8. 's' → logprob: -5.3530144691467285
    9. ' -=' → logprob: -5.4780144691467285
    10. ']' → logprob: -5.6030144691467285

Token 560: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.44877809286117554
    2. 'max' → logprob: -1.1987781524658203
    3. 'HP' → logprob: -3.4487781524658203
    4. ' HP' → logprob: -3.5737781524658203
    5. '   ' → logprob: -9.44877815246582
    6. '[max' → logprob: -10.57377815246582
    7. ' ' → logprob: -10.82377815246582
    8. '(max' → logprob: -11.32377815246582
    9. '_HP' → logprob: -11.44877815246582
    10. '0' → logprob: -12.07377815246582

Token 561: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.292907877039397e-06
    2. ' (' → logprob: -13.25000286102295
    3. '(
' → logprob: -14.12500286102295
    4. '0' → logprob: -14.25000286102295
    5. '```' → logprob: -16.875003814697266
    6. '[' → logprob: -17.500003814697266
    7. 'HP' → logprob: -17.625003814697266
    8. '(H' → logprob: -17.750003814697266
    9. 'def' → logprob: -18.625003814697266
    10. '(

' → logprob: -18.625003814697266

Token 562: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1656944304704666
    2. '(' → logprob: -2.16569447517395
    3. 'HP' → logprob: -3.29069447517395
    4. ' ' → logprob: -7.915694236755371
    5. ' HP' → logprob: -8.790694236755371
    6. ' (' → logprob: -9.790694236755371
    7. '   ' → logprob: -9.790694236755371
    8. '_HP' → logprob: -10.040694236755371
    9. ')' → logprob: -10.665694236755371
    10. '(H' → logprob: -10.790694236755371

Token 563: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3259694576263428
    2. ',' → logprob: -1.9509694576263428
    3. '-' → logprob: -2.0759694576263428
    4. ')' → logprob: -5.575969696044922
    5. '[' → logprob: -5.950969696044922
    6. '[i' → logprob: -6.450969696044922
    7. '       ' → logprob: -7.825969696044922
    8. ' ,' → logprob: -7.950969696044922
    9. '           ' → logprob: -8.700969696044922
    10. '(' → logprob: -8.700969696044922

Token 564: ' HP' (ID: 21979)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.008652626536786556
    2. ' HP' → logprob: -4.758652687072754
    3. '   ' → logprob: -10.758652687072754
    4. '_HP' → logprob: -11.633652687072754
    5. '       ' → logprob: -12.633652687072754
    6. '           ' → logprob: -13.758652687072754
    7. ' ' → logprob: -14.133652687072754
    8. ' ' → logprob: -15.008652687072754
    9. 'Hp' → logprob: -15.008652687072754
    10. '```' → logprob: -15.008652687072754

Token 565: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003685861302074045
    2. '[' → logprob: -8.000368118286133
    3. ' [' → logprob: -10.625368118286133
    4. ')' → logprob: -13.250368118286133
    5. ' -' → logprob: -13.375368118286133
    6. ')[' → logprob: -13.625368118286133
    7. '   ' → logprob: -13.875368118286133
    8. '```' → logprob: -14.000368118286133
    9. '       ' → logprob: -14.750368118286133
    10. '-' → logprob: -14.875368118286133

Token 566: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.24676570296287537
    2. ']' → logprob: -1.7467657327651978
    3. ' -' → logprob: -3.371765613555908
    4. '-' → logprob: -4.746765613555908
    5. ')' → logprob: -7.621765613555908
    6. ']-' → logprob: -7.871765613555908
    7. '[' → logprob: -9.121766090393066
    8. ' ]' → logprob: -9.746766090393066
    9. '])' → logprob: -9.996766090393066
    10. '][' → logprob: -10.121766090393066

Token 567: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03461414575576782
    2. '-' → logprob: -3.409614086151123
    3. '[i' → logprob: -7.784614086151123
    4. ')' → logprob: -8.034614562988281
    5. ' ' → logprob: -9.784614562988281
    6. ']' → logprob: -10.034614562988281
    7. '       ' → logprob: -10.159614562988281
    8. '        ' → logprob: -11.159614562988281
    9. '           ' → logprob: -11.159614562988281
    10. '   ' → logprob: -11.534614562988281

Token 568: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5331524610519409
    2. ' sum' → logprob: -0.9081524610519409
    3. ' total' → logprob: -5.1581525802612305
    4. 'total' → logprob: -5.6581525802612305
    5. 'all' → logprob: -8.65815258026123
    6. ' all' → logprob: -8.65815258026123
    7. 'damage' → logprob: -9.40815258026123
    8. 'sp' → logprob: -9.78315258026123
    9. ' damage' → logprob: -10.15815258026123
    10. '   ' → logprob: -10.15815258026123

Token 569: '_all' (ID: 13305)
  Prédit: '(all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(all' → logprob: -0.15616866946220398
    2. '(' → logprob: -2.0311686992645264
    3. '(
' → logprob: -5.031168460845947
    4. ' (' → logprob: -6.031168460845947
    5. '([' → logprob: -6.406168460845947
    6. 'all' → logprob: -6.906168460845947
    7. '(sum' → logprob: -7.281168460845947
    8. '(sp' → logprob: -8.406168937683105
    9. '_all' → logprob: -8.781168937683105
    10. '_' → logprob: -8.781168937683105

Token 570: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.012316323816776276
    2. '_usage' → logprob: -5.5123162269592285
    3. '_spell' → logprob: -6.0123162269592285
    4. 'sp' → logprob: -6.5123162269592285
    5. '_s' → logprob: -6.5123162269592285
    6. '_' → logprob: -7.2623162269592285
    7. '_j' → logprob: -7.7623162269592285
    8. 's' → logprob: -7.8873162269592285
    9. '_cast' → logprob: -8.387316703796387
    10. '_target' → logprob: -8.512316703796387

Token 571: 'ells' (ID: 9703)
  Prédit: '_usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_usage' → logprob: -0.2778427004814148
    2. 'ells' → logprob: -2.2778427600860596
    3. 'ell' → logprob: -2.4028427600860596
    4. 'usage' → logprob: -3.7778427600860596
    5. '_' → logprob: -5.0278425216674805
    6. 'el' → logprob: -5.7778425216674805
    7. '_use' → logprob: -6.2778425216674805
    8. 'an' → logprob: -6.4028425216674805
    9. '   ' → logprob: -6.6528425216674805
    10. 'Usage' → logprob: -6.7778425216674805

Token 572: '_damage' (ID: 124305)
  Prédit: '_usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_usage' → logprob: -0.03136896342039108
    2. '_us' → logprob: -3.7813689708709717
    3. '_j' → logprob: -5.031368732452393
    4. '   ' → logprob: -8.53136920928955
    5. '_used' → logprob: -8.65636920928955
    6. ']_' → logprob: -8.65636920928955
    7. '[j' → logprob: -8.78136920928955
    8. '_' → logprob: -9.03136920928955
    9. 'usage' → logprob: -9.15636920928955
    10. '_use' → logprob: -9.28136920928955

Token 573: ')
' (ID: 446)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.4179641604423523
    2. '))' → logprob: -1.917964220046997
    3. ')' → logprob: -2.042964220046997
    4. '])' → logprob: -3.667964220046997
    5. '[j' → logprob: -3.917964220046997
    6. '_' → logprob: -5.167963981628418
    7. '   ' → logprob: -5.917963981628418
    8. 's' → logprob: -6.542963981628418
    9. ')]' → logprob: -6.542963981628418
    10. ' )' → logprob: -6.667963981628418

Token 574: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14399808645248413
    2. '   ' → logprob: -2.768998146057129
    3. '        
' → logprob: -4.018998146057129
    4. '
' → logprob: -5.018998146057129
    5. '    
' → logprob: -5.018998146057129
    6. '_' → logprob: -5.143998146057129
    7. ' 
' → logprob: -5.268998146057129
    8. ')' → logprob: -5.393998146057129
    9. ' =' → logprob: -5.518998146057129
    10. '<|end|>' → logprob: -6.143998146057129

Token 575: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051844872534275055
    2. '[j' → logprob: -4.551845073699951
    3. ')' → logprob: -4.926845073699951
    4. '_j' → logprob: -5.176845073699951
    5. '   ' → logprob: -5.301845073699951
    6. '[' → logprob: -5.676845073699951
    7. '[i' → logprob: -5.926845073699951
    8. '_' → logprob: -5.926845073699951
    9. '#' (adapté à ' #') → logprob: -6.176845073699951
    10. ',' → logprob: -6.301845073699951

Token 576: ' Then' (ID: 7801)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1978868991136551
    2. ' 
' → logprob: -3.0728869438171387
    3. '\' → logprob: -3.5728869438171387
    4. '\n' → logprob: -3.9478869438171387
    5. '        
' → logprob: -4.447886943817139
    6. '#' → logprob: -4.572886943817139
    7. '   ' → logprob: -4.697886943817139
    8. ' ' → logprob: -4.947886943817139
    9. ',' → logprob: -5.447886943817139
    10. ')' → logprob: -5.572886943817139

Token 577: ' sum' (ID: 4215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3676443099975586
    2. ' best' → logprob: -1.3676443099975586
    3. ' single' → logprob: -2.3676443099975586
    4. 'best' → logprob: -2.3676443099975586
    5. ' residual' → logprob: -2.4926443099975586
    6. 'res' → logprob: -3.1176443099975586
    7. '#' → logprob: -3.3676443099975586
    8. ' total' → logprob: -3.8676443099975586
    9. 'single' → logprob: -4.117644309997559
    10. 'total' → logprob: -4.492644309997559

Token 578: ' over' (ID: 1072)
  Prédit: '_all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.7924380898475647
    2. '(' → logprob: -1.79243803024292
    3. '_left' → logprob: -1.79243803024292
    4. 'res' → logprob: -2.91743803024292
    5. '_' → logprob: -3.04243803024292
    6. '_res' → logprob: -3.16743803024292
    7. '_best' → logprob: -3.41743803024292
    8. '_of' → logprob: -4.04243803024292
    9. '_single' → logprob: -6.04243803024292
    10. '(res' → logprob: -6.04243803024292

Token 579: ' i' (ID: 575)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.6410459876060486
    2. ' best' → logprob: -1.6410460472106934
    3. '(best' → logprob: -2.3910460472106934
    4. 'all' → logprob: -3.2660460472106934
    5. 'single' → logprob: -3.3910460472106934
    6. '(' → logprob: -3.6410460472106934
    7. ' (' → logprob: -4.516046047210693
    8. 'res' → logprob: -4.516046047210693
    9. ' single' → logprob: -4.641046047210693
    10. '_single' → logprob: -4.766046047210693

Token 580: ' best' (ID: 1636)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.49374920129776
    2. '(' → logprob: -1.3687491416931152
    3. ')' → logprob: -3.3687491416931152
    4. '[' → logprob: -3.9937491416931152
    5. '       ' → logprob: -4.243749141693115
    6. '_all' → logprob: -4.993749141693115
    7. '(best' → logprob: -4.993749141693115
    8. ' _' → logprob: -5.368749141693115
    9. '   ' → logprob: -5.493749141693115
    10. '(all' → logprob: -5.743749141693115

Token 581: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.0031932818237692118
    2. '_' → logprob: -6.628193378448486
    3. '_all' → logprob: -7.128193378448486
    4. '_sp' → logprob: -8.628192901611328
    5. '_remaining' → logprob: -8.878192901611328
    6. '_res' → logprob: -9.253192901611328
    7. '_target' → logprob: -9.253192901611328
    8. '_best' → logprob: -10.003192901611328
    9. '_left' → logprob: -10.128192901611328
    10. ']_' → logprob: -10.253192901611328

Token 582: '_mp' (ID: 96508)
  Prédit: '_mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mp' → logprob: -0.00012928384239785373
    2. '_MP' → logprob: -10.375129699707031
    3. '_' → logprob: -11.000129699707031
    4. '_sp' → logprob: -11.750129699707031
    5. ' _' → logprob: -11.750129699707031
    6. '_dp' → logprob: -12.000129699707031
    7. '_hp' → logprob: -12.000129699707031
    8. ')' → logprob: -12.125129699707031
    9. ')_' → logprob: -12.625129699707031
    10. '   ' → logprob: -12.625129699707031

Token 583: '[i' (ID: 1768)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29978305101394653
    2. ' _' → logprob: -2.4247829914093018
    3. ' =' → logprob: -3.2997829914093018
    4. '   ' → logprob: -3.2997829914093018
    5. '[' → logprob: -4.299783229827881
    6. ')' → logprob: -4.549783229827881
    7. '       ' → logprob: -4.674783229827881
    8. '_j' → logprob: -4.799783229827881
    9. '[i' → logprob: -5.049783229827881
    10. '=' → logprob: -5.674783229827881

Token 584: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08506406098604202
    2. '])' → logprob: -3.210064172744751
    3. '[i' → logprob: -3.460064172744751
    4. ')' → logprob: -4.960063934326172
    5. ')]' → logprob: -6.710063934326172
    6. ']+' → logprob: -7.960063934326172
    7. '   ' → logprob: -8.960063934326172
    8. '[' → logprob: -8.960063934326172
    9. ']=' → logprob: -9.460063934326172
    10. ' ]' → logprob: -9.460063934326172

Token 585: ' to' (ID: 316)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4684698581695557
    2. '       ' → logprob: -1.7184698581695557
    3. '_' → logprob: -1.7184698581695557
    4. '   ' → logprob: -2.4684698581695557
    5. ':' → logprob: -2.9684698581695557
    6. ' =' → logprob: -3.3434698581695557
    7. ')' → logprob: -3.5934698581695557
    8. '<|end|>' → logprob: -3.7184698581695557
    9. ' ' → logprob: -4.093469619750977
    10. ',' → logprob: -4.093469619750977

Token 586: ' kill' (ID: 15874)
  Prédit: 'kill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kill' → logprob: -0.010203293524682522
    2. ' kill' → logprob: -5.3852033615112305
    3. 'cover' → logprob: -6.3852033615112305
    4. 'complete' → logprob: -7.0102033615112305
    5. 'k' → logprob: -7.1352033615112305
    6. ' ' → logprob: -7.8852033615112305
    7. '   ' → logprob: -8.26020336151123
    8. 'def' → logprob: -8.26020336151123
    9. 'get' → logprob: -8.63520336151123
    10. 'finish' → logprob: -8.76020336151123

Token 587: ' remains' (ID: 14777)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07950345426797867
    2. '(' → logprob: -4.204503536224365
    3. '_all' → logprob: -4.204503536224365
    4. ')' → logprob: -4.579503536224365
    5. ' _' → logprob: -5.204503536224365
    6. 'all' → logprob: -5.454503536224365
    7. '[' → logprob: -5.454503536224365
    8. '   ' → logprob: -5.954503536224365
    9. ' =' → logprob: -6.079503536224365
    10. ']' → logprob: -6.204503536224365

Token 588: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10419906675815582
    2. ')' → logprob: -3.854199171066284
    3. '[' → logprob: -3.854199171066284
    4. '       ' → logprob: -4.229198932647705
    5. '   ' → logprob: -4.854198932647705
    6. 's' → logprob: -5.104198932647705
    7. ',' → logprob: -5.604198932647705
    8. ']' → logprob: -5.729198932647705
    9. ' _' → logprob: -6.229198932647705
    10. '[
' → logprob: -6.229198932647705

Token 589: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018038490787148476
    2. '<|end|>' → logprob: -5.893038272857666
    3. '#' → logprob: -6.018038272857666
    4. '        
' → logprob: -6.143038272857666
    5. '   ' → logprob: -6.393038272857666
    6. '
' → logprob: -6.393038272857666
    7. '_j' → logprob: -7.143038272857666
    8. ',' → logprob: -7.143038272857666
    9. ')' → logprob: -7.268038272857666
    10. '        ' → logprob: -7.393038272857666

Token 590: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05352271348237991
    2. '<|end|>' → logprob: -4.05352258682251
    3. '
' → logprob: -4.92852258682251
    4. '#' (adapté à ' #') → logprob: -5.17852258682251
    5. '        
' → logprob: -5.30352258682251
    6. '   ' → logprob: -5.55352258682251
    7. '<|end|>' → logprob: -5.80352258682251
    8. ',' → logprob: -6.30352258682251
    9. ')' → logprob: -6.30352258682251
    10. '        ' → logprob: -7.05352258682251

Token 591: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.529996931552887
    2. '#' → logprob: -2.154996871948242
    3. '
' → logprob: -2.154996871948242
    4. 'import' → logprob: -3.279996871948242
    5. ' 
' → logprob: -3.404996871948242
    6. '        
' → logprob: -3.529996871948242
    7. '\' → logprob: -4.404996871948242
    8. '<|end|>' → logprob: -4.529996871948242
    9. 'def' → logprob: -4.654996871948242
    10. ',' → logprob: -5.404996871948242

Token 592: ' total' (ID: 3609)
  Prédit: ' problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' problem' → logprob: -1.2408586740493774
    2. '_' → logprob: -1.9908586740493774
    3. ' best' → logprob: -2.365858554840088
    4. ' code' → logprob: -2.740858554840088
    5. ' user' → logprob: -2.740858554840088
    6. ' goal' → logprob: -3.365858554840088
    7. ' ' → logprob: -3.490858554840088
    8. '#' → logprob: -3.490858554840088
    9. ' final' → logprob: -3.615858554840088
    10. ' result' → logprob: -3.740858554840088

Token 593: ' cost' (ID: 3097)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.5227651596069336
    2. '_mp' → logprob: -1.8977651596069336
    3. '_MP' → logprob: -2.0227651596069336
    4. '_' → logprob: -2.6477651596069336
    5. '_magic' → logprob: -3.2727651596069336
    6. ' =' → logprob: -4.772765159606934
    7. ' _' → logprob: -6.147765159606934
    8. '_M' → logprob: -7.272765159606934
    9. 'cost' → logprob: -7.397765159606934
    10. ' MP' → logprob: -7.397765159606934

Token 594: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18552447855472565
    2. '=' → logprob: -1.9355244636535645
    3. '_' → logprob: -4.6855244636535645
    4. ' +=' → logprob: -4.9355244636535645
    5. ' ' → logprob: -5.9355244636535645
    6. ')' → logprob: -6.3105244636535645
    7. '[' → logprob: -7.3105244636535645
    8. ' is' → logprob: -7.5605244636535645
    9. '   ' → logprob: -7.8105244636535645
    10. ',' → logprob: -7.8105244636535645

Token 595: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.3495413064956665
    2. 'sum' → logprob: -1.9745413064956665
    3. ' all' → logprob: -2.599541187286377
    4. ' total' → logprob: -3.474541187286377
    5. 'all' → logprob: -3.974541187286377
    6. ' min' → logprob: -4.599541187286377
    7. '0' → logprob: -5.099541187286377
    8. 'total' → logprob: -5.849541187286377
    9. ' ' → logprob: -6.099541187286377
    10. ' cost' → logprob: -6.349541187286377

Token 596: '_all' (ID: 13305)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22948594391345978
    2. '_' → logprob: -2.6044859886169434
    3. ' (' → logprob: -3.6044859886169434
    4. '(sp' → logprob: -3.9794859886169434
    5. 'of' → logprob: -4.229485988616943
    6. '[' → logprob: -4.479485988616943
    7. ' of' → logprob: -4.729485988616943
    8. ' +' → logprob: -4.854485988616943
    9. '_all' → logprob: -5.229485988616943
    10. '(all' → logprob: -5.354485988616943

Token 597: '_sp' (ID: 18491)
  Prédit: '_all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.07247889786958694
    2. '_MP' → logprob: -3.447479009628296
    3. '_' → logprob: -4.447478771209717
    4. '_mp' → logprob: -4.572478771209717
    5. '_cost' → logprob: -4.822478771209717
    6. '_sp' → logprob: -5.197478771209717
    7. ' _' → logprob: -6.572478771209717
    8. '_spell' → logprob: -8.447479248046875
    9. '_power' → logprob: -8.697479248046875
    10. '_All' → logprob: -8.947479248046875

Token 598: 'ells' (ID: 9703)
  Prédit: ' power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' power' → logprob: -0.38910427689552307
    2. 'ower' → logprob: -1.6391042470932007
    3. ')' → logprob: -3.2641043663024902
    4. '_power' → logprob: -3.8891043663024902
    5. ' )' → logprob: -4.01410436630249
    6. '_' → logprob: -4.26410436630249
    7. 'power' → logprob: -4.63910436630249
    8. ' _' → logprob: -5.13910436630249
    9. 'aces' → logprob: -6.01410436630249
    10. 'owers' → logprob: -6.26410436630249

Token 599: '_us' (ID: 43779)
  Prédit: '_usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_usage' → logprob: -0.1923074573278427
    2. '_' → logprob: -2.317307472229004
    3. '_used' → logprob: -3.567307472229004
    4. '_cost' → logprob: -4.442307472229004
    5. '_j' → logprob: -4.567307472229004
    6. '_us' → logprob: -4.817307472229004
    7. 's' → logprob: -4.942307472229004
    8. '_use' → logprob: -5.692307472229004
    9. 'es' → logprob: -6.067307472229004
    10. ' _' → logprob: -6.692307472229004

Token 600: 'ages' (ID: 1461)
  Prédit: 'age'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.0029951741453260183
    2. 'ages' → logprob: -5.877995014190674
    3. 'e' → logprob: -8.752995491027832
    4. 'ag' → logprob: -11.377995491027832
    5. 'es' → logprob: -11.752995491027832
    6. 'sage' → logprob: -12.377995491027832
    7. 'a' → logprob: -13.252995491027832
    8. '_age' → logprob: -13.502995491027832
    9. 'ge' → logprob: -13.627995491027832
    10. ' age' → logprob: -13.752995491027832

Token 601: '_MP' (ID: 143061)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.683579683303833
    2. '_' → logprob: -1.808579683303833
    3. '[' → logprob: -2.308579683303833
    4. ':' → logprob: -3.433579683303833
    5. ' =' → logprob: -3.558579683303833
    6. '   ' → logprob: -3.683579683303833
    7. ']' → logprob: -3.933579683303833
    8. '<|end|>' → logprob: -4.308579444885254
    9. '=' → logprob: -4.433579444885254
    10. '
' → logprob: -4.558579444885254

Token 602: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8221755027770996
    2. '[' → logprob: -2.0721755027770996
    3. '_' → logprob: -2.0721755027770996
    4. ':' → logprob: -2.6971755027770996
    5. '   ' → logprob: -3.6971755027770996
    6. ' ' → logprob: -3.6971755027770996
    7. '<|end|>' → logprob: -3.9471755027770996
    8. ' =' → logprob: -4.0721755027771
    9. '[
' → logprob: -4.1971755027771
    10. ',' → logprob: -4.1971755027771

Token 603: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.16041067242622375
    2. ' sum' → logprob: -1.9104106426239014
    3. '(sum' → logprob: -9.41041088104248
    4. '\xe2\x88' → logprob: -10.53541088104248
    5. '\' → logprob: -10.78541088104248
    6. '   ' → logprob: -11.66041088104248
    7. ' ' → logprob: -11.66041088104248
    8. 'int' → logprob: -11.78541088104248
    9. 'total' → logprob: -12.03541088104248
    10. ' \' → logprob: -12.66041088104248

Token 604: ' residual' (ID: 54782)
  Prédit: '_all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.8969921469688416
    2. '_best' → logprob: -1.1469922065734863
    3. '_' → logprob: -2.0219922065734863
    4. '(' → logprob: -2.8969922065734863
    5. '_over' → logprob: -3.0219922065734863
    6. '(best' → logprob: -3.8969922065734863
    7. '_single' → logprob: -4.771992206573486
    8. 'over' → logprob: -6.146992206573486
    9. 'best' → logprob: -6.146992206573486
    10. '(_' → logprob: -6.271992206573486

Token 605: ' single' (ID: 4590)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.27916136384010315
    2. ' _' → logprob: -1.9041613340377808
    3. '[' → logprob: -3.6541614532470703
    4. '_j' → logprob: -4.40416145324707
    5. ')' → logprob: -4.65416145324707
    6. ' =' → logprob: -4.90416145324707
    7. '   ' → logprob: -5.02916145324707
    8. 's' → logprob: -5.77916145324707
    9. ']' → logprob: -5.77916145324707
    10. '_usage' → logprob: -5.90416145324707

Token 606: '-target' (ID: 40350)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 607: ' cost' (ID: 3097)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3341882228851318
    2. ':' → logprob: -1.5841882228851318
    3. ')' → logprob: -1.9591882228851318
    4. '
' → logprob: -2.834188222885132
    5. ' =' → logprob: -2.959188222885132
    6. '[' → logprob: -3.334188222885132
    7. '<|end|>' → logprob: -3.334188222885132
    8. '   ' → logprob: -3.459188222885132
    9. '\n' → logprob: -4.084188461303711
    10. '\' → logprob: -4.084188461303711

Token 608: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10925335437059402
    2. ')' → logprob: -3.609253406524658
    3. '
' → logprob: -4.484253406524658
    4. '[' → logprob: -4.609253406524658
    5. ',' → logprob: -5.234253406524658
    6. '(' → logprob: -5.359253406524658
    7. ' =' → logprob: -5.484253406524658
    8. '   ' → logprob: -5.484253406524658
    9. ':
' → logprob: -5.609253406524658
    10. '):' → logprob: -5.609253406524658

Token 609: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24065791070461273
    2. '   ' → logprob: -2.4906578063964844
    3. ':' → logprob: -3.3656578063964844
    4. '
' → logprob: -3.3656578063964844
    5. '        
' → logprob: -3.6156578063964844
    6. '    
' → logprob: -4.365657806396484
    7. ' 
' → logprob: -5.240657806396484
    8. '  
' → logprob: -5.865657806396484
    9. ':
' → logprob: -5.990657806396484
    10. 'def' → logprob: -6.240657806396484

Token 610: ' #' (ID: 1069)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.25540462136268616
    2. '       ' → logprob: -2.0054047107696533
    3. '\' → logprob: -3.8804047107696533
    4. '\n' → logprob: -3.8804047107696533
    5. '
' → logprob: -4.255404472351074
    6. '        
' → logprob: -4.755404472351074
    7. '   ' → logprob: -5.380404472351074
    8. ' ' → logprob: -5.630404472351074
    9. '#' (adapté à ' #') → logprob: -5.630404472351074
    10. ' \' → logprob: -6.005404472351074

Token 611: ' Thus' (ID: 23586)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4629449248313904
    2. 'single' → logprob: -2.337944984436035
    3. 'from' → logprob: -2.587944984436035
    4. 'import' → logprob: -2.837944984436035
    5. 'best' → logprob: -2.837944984436035
    6. '       ' → logprob: -3.712944984436035
    7. 'all' → logprob: -3.837944984436035
    8. 'max' → logprob: -4.837944984436035
    9. 'def' → logprob: -5.087944984436035
    10. ' best' → logprob: -5.962944984436035

Token 612: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.684700071811676
    2. '       ' → logprob: -1.0597000122070312
    3. '#' → logprob: -3.4347000122070312
    4. '   ' → logprob: -3.6847000122070312
    5. 'def' → logprob: -3.8097000122070312
    6. 'import' → logprob: -3.9347000122070312
    7. ' =' → logprob: -4.434700012207031
    8. '=' → logprob: -4.684700012207031
    9. ',' → logprob: -4.809700012207031
    10. 'from' → logprob: -5.684700012207031

Token 613: ' try' (ID: 2075)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8775876760482788
    2. 'all' → logprob: -1.1275876760482788
    3. 'single' → logprob: -2.1275877952575684
    4. 'from' → logprob: -3.0025877952575684
    5. 'import' → logprob: -3.2525877952575684
    6. ' single' → logprob: -4.627587795257568
    7. '       ' → logprob: -4.627587795257568
    8. 'def' → logprob: -4.627587795257568
    9. ' #' → logprob: -4.877587795257568
    10. ' all' → logprob: -5.252587795257568

Token 614: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.18447279930114746
    2. 'to' → logprob: -2.8094727993011475
    3. 'binary' → logprob: -3.9344727993011475
    4. ' to' → logprob: -3.9344727993011475
    5. ' all' → logprob: -4.309473037719727
    6. 'casting' → logprob: -4.684473037719727
    7. '   ' → logprob: -4.809473037719727
    8. '       ' → logprob: -5.559473037719727
    9. 'values' → logprob: -5.809473037719727
    10. 'from' → logprob: -5.809473037719727

Token 615: ' combinations' (ID: 43835)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.6129924654960632
    2. 'com' → logprob: -2.362992525100708
    3. 'sp' → logprob: -2.737992525100708
    4. '_all' → logprob: -3.112992525100708
    5. ' possible' → logprob: -3.112992525100708
    6. 'all' → logprob: -3.487992525100708
    7. ' ' → logprob: -4.112992286682129
    8. '_sp' → logprob: -4.112992286682129
    9. '   ' → logprob: -4.112992286682129
    10. '       ' → logprob: -4.612992286682129

Token 616: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1309223175048828
    2. '_' → logprob: -2.130922317504883
    3. '   ' → logprob: -2.255922317504883
    4. '<|end|>' → logprob: -2.380922317504883
    5. ':' → logprob: -2.505922317504883
    6. ' =' → logprob: -2.755922317504883
    7. '       ' → logprob: -3.505922317504883
    8. '<|end|>' → logprob: -3.630922317504883
    9. '[
' → logprob: -3.755922317504883
    10. ')' → logprob: -3.880922317504883

Token 617: ' "' (ID: 392)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.3257588148117065
    2. 'number' → logprob: -1.4507588148117065
    3. 'casts' → logprob: -1.7007588148117065
    4. 'numbers' → logprob: -2.325758934020996
    5. 'casting' → logprob: -2.825758934020996
    6. 'counts' → logprob: -3.075758934020996
    7. 'usage' → logprob: -3.825758934020996
    8. '0' → logprob: -4.075758934020996
    9. '"' → logprob: -4.575758934020996
    10. ' number' → logprob: -4.825758934020996

Token 618: 'all' (ID: 586)
  Prédit: 'all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.07258433103561401
    2. ' all' → logprob: -3.197584390640259
    3. 'single' → logprob: -4.57258415222168
    4. ' single' → logprob: -5.32258415222168
    5. ' usage' → logprob: -5.94758415222168
    6. 'sp' → logprob: -6.44758415222168
    7. 'casts' → logprob: -6.57258415222168
    8. 'All' → logprob: -6.82258415222168
    9. ' spells' → logprob: -6.82258415222168
    10. 'usage' → logprob: -7.19758415222168

Token 619: '"' (ID: 1)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07896503061056137
    2. '_sp' → logprob: -3.078964948654175
    3. '_s' → logprob: -4.078965187072754
    4. ' _' → logprob: -5.203965187072754
    5. '_target' → logprob: -5.828965187072754
    6. '_targets' → logprob: -6.453965187072754
    7. '"' → logprob: -6.828965187072754
    8. '-' → logprob: -7.453965187072754
    9. '-target' → logprob: -8.578965187072754
    10. '"_' → logprob: -8.703965187072754

Token 620: ' spells' (ID: 69967)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14611868560314178
    2. '_sp' → logprob: -2.396118640899658
    3. '_s' → logprob: -4.146118640899658
    4. '_target' → logprob: -4.646118640899658
    5. '_targets' → logprob: -5.146118640899658
    6. ' _' → logprob: -5.646118640899658
    7. 'sp' → logprob: -5.896118640899658
    8. '<|end|>' → logprob: -6.146118640899658
    9. ')' → logprob: -6.896118640899658
    10. 's' → logprob: -7.021118640899658

Token 621: ' usages' (ID: 146156)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.144755244255066
    2. 's' → logprob: -1.269755244255066
    3. '<|end|>' → logprob: -2.0197553634643555
    4. '[' → logprob: -2.7697553634643555
    5. '_s' → logprob: -3.1447553634643555
    6. ')' → logprob: -3.5197553634643555
    7. ':' → logprob: -3.7697553634643555
    8. '<|end|>' → logprob: -4.5197553634643555
    9. ',' → logprob: -4.6447553634643555
    10. '_usage' → logprob: -4.7697553634643555

Token 622: '?' (ID: 30)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8808245658874512
    2. '[' → logprob: -1.1308245658874512
    3. 's' → logprob: -3.255824565887451
    4. ']' → logprob: -3.380824565887451
    5. '<|end|>' → logprob: -3.380824565887451
    6. ')' → logprob: -3.505824565887451
    7. '_' → logprob: -3.755824565887451
    8. '[
' → logprob: -4.005824565887451
    9. ',' → logprob: -4.380824565887451
    10. '   ' → logprob: -4.505824565887451

Token 623: ' impossible' (ID: 19786)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 624: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 625: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13422870635986328
    2. '#' → logprob: -2.5092287063598633
    3. '<|end|>' → logprob: -4.634228706359863
    4. '\' → logprob: -4.884228706359863
    5. '   ' → logprob: -5.259228706359863
    6. ')' → logprob: -5.759228706359863
    7. ',' → logprob: -5.884228706359863
    8. ' 
' → logprob: -6.134228706359863
    9. '        
' → logprob: -6.259228706359863
    10. '        ' → logprob: -6.259228706359863

Token 626: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01788276806473732
    2. '#' (adapté à ' #') → logprob: -5.267882823944092
    3. '        
' → logprob: -5.517882823944092
    4. '   ' → logprob: -5.767882823944092
    5. 'import' → logprob: -6.892882823944092
    6. '        ' → logprob: -7.017882823944092
    7. ' 
' → logprob: -7.392882823944092
    8. '
' → logprob: -7.767882823944092
    9. ',' → logprob: -8.642882347106934
    10. '           ' → logprob: -8.767882347106934

Token 627: ' Because' (ID: 13602)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4933786392211914
    2. 'from' → logprob: -1.2433786392211914
    3. 'import' → logprob: -2.6183786392211914
    4. '       ' → logprob: -4.368378639221191
    5. 'single' → logprob: -4.993378639221191
    6. 'all' → logprob: -5.368378639221191
    7. 'dp' → logprob: -6.368378639221191
    8. 'best' → logprob: -7.743378639221191
    9. '
' → logprob: -8.118378639221191
    10. 'def' → logprob: -8.368378639221191

Token 628: ' all' (ID: 722)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.6644500494003296
    2. ' we' → logprob: -1.9144500494003296
    3. ' the' → logprob: -2.039450168609619
    4. 'the' → logprob: -2.414450168609619
    5. 'we' → logprob: -2.664450168609619
    6. '#' → logprob: -2.789450168609619
    7. ' of' → logprob: -2.914450168609619
    8. '[' → logprob: -3.539450168609619
    9. 'for' → logprob: -3.539450168609619
    10. ' ' → logprob: -3.789450168609619

Token 629: ' spells' (ID: 69967)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5453091263771057
    2. '_sp' → logprob: -1.045309066772461
    3. '_s' → logprob: -3.170309066772461
    4. ' _' → logprob: -4.045309066772461
    5. '_target' → logprob: -5.920309066772461
    6. 'sp' → logprob: -6.045309066772461
    7. '_targets' → logprob: -6.545309066772461
    8. 'Sp' → logprob: -8.045309066772461
    9. '_all' → logprob: -8.170309066772461
    10. ' spells' → logprob: -8.420309066772461

Token 630: ' are' (ID: 553)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.438780665397644
    2. 's' → logprob: -1.938780665397644
    3. ' are' → logprob: -2.4387807846069336
    4. ' can' → logprob: -2.6887807846069336
    5. '<|end|>' → logprob: -2.6887807846069336
    6. '_usage' → logprob: -2.8137807846069336
    7. '_' → logprob: -2.9387807846069336
    8. ')' → logprob: -3.4387807846069336
    9. '#' → logprob: -3.6887807846069336
    10. '.' → logprob: -3.8137807846069336

Token 631: ' integer' (ID: 16336)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'single' → logprob: -1.179069995880127
    2. 'either' → logprob: -1.679069995880127
    3. 'all' → logprob: -1.804069995880127
    4. ''' → logprob: -2.429069995880127
    5. ' either' → logprob: -2.429069995880127
    6. '"' → logprob: -2.554069995880127
    7. 'linear' → logprob: -3.679069995880127
    8. ' single' → logprob: -3.804069995880127
    9. 'of' → logprob: -5.179069995880127
    10. ' of' → logprob: -5.554069995880127

Token 632: ' cost' (ID: 3097)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 633: ' and' (ID: 326)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8138071894645691
    2. '<|end|>' → logprob: -1.6888072490692139
    3. ')' → logprob: -2.188807249069214
    4. '_' → logprob: -2.313807249069214
    5. '
' → logprob: -3.313807249069214
    6. '<|end|>' → logprob: -3.688807249069214
    7. '   ' → logprob: -4.188807010650635
    8. '[' → logprob: -4.313807010650635
    9. ' ' → logprob: -4.688807010650635
    10. ' _' → logprob: -4.813807010650635

Token 634: ' damage' (ID: 10364)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'damage' → logprob: -0.071711465716362
    2. ' damage' → logprob: -2.946711540222168
    3. 'HP' → logprob: -5.571711540222168
    4. 'all' → logprob: -6.071711540222168
    5. 'usage' → logprob: -6.446711540222168
    6. ' usage' → logprob: -6.696711540222168
    7. '#' → logprob: -7.071711540222168
    8. ' all' → logprob: -7.196711540222168
    9. '   ' → logprob: -7.321711540222168
    10. 'd' → logprob: -7.321711540222168

Token 635: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 636: ' and' (ID: 326)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7274037003517151
    2. '       ' → logprob: -1.3524036407470703
    3. '<|end|>' → logprob: -1.7274036407470703
    4. '<|end|>' → logprob: -3.7274036407470703
    5. '        
' → logprob: -4.72740364074707
    6. ' #' → logprob: -4.97740364074707
    7. ' we' → logprob: -4.97740364074707
    8. ' 
' → logprob: -5.35240364074707
    9. ' ' → logprob: -5.35240364074707
    10. '        ' → logprob: -5.72740364074707

Token 637: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.8836842179298401
    2. ' all' → logprob: -1.7586841583251953
    3. '#' → logprob: -2.1336841583251953
    4. 'the' → logprob: -2.1336841583251953
    5. ' the' → logprob: -3.0086841583251953
    6. 'HP' → logprob: -3.1336841583251953
    7. 'we' → logprob: -4.258684158325195
    8. 'mon' → logprob: -5.008684158325195
    9. ' #' → logprob: -5.133684158325195
    10. ' we' → logprob: -5.133684158325195

Token 638: ' spells' (ID: 69967)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.13638320565223694
    2. '_' → logprob: -2.761383295059204
    3. 'sp' → logprob: -4.011383056640625
    4. ' _' → logprob: -4.136383056640625
    5. '_s' → logprob: -4.636383056640625
    6. '_target' → logprob: -5.261383056640625
    7. '_targets' → logprob: -5.261383056640625
    8. ' spells' → logprob: -6.136383056640625
    9. ' sp' → logprob: -6.636383056640625
    10. ')' → logprob: -6.761383056640625

Token 639: ' usage' (ID: 16622)
  Prédit: '_usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_usage' → logprob: -0.5148341655731201
    2. ' are' → logprob: -2.76483416557312
    3. ' can' → logprob: -2.76483416557312
    4. ''' → logprob: -2.88983416557312
    5. 's' → logprob: -3.26483416557312
    6. '_' → logprob: -3.26483416557312
    7. '_us' → logprob: -4.139834403991699
    8. ' usage' → logprob: -4.139834403991699
    9. '_use' → logprob: -4.264834403991699
    10. ' _' → logprob: -4.514834403991699

Token 640: ' counts' (ID: 28991)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0534275658428669
    2. '<|end|>' → logprob: -3.4284274578094482
    3. '_s' → logprob: -5.428427696228027
    4. '_' → logprob: -5.928427696228027
    5. ')' → logprob: -6.053427696228027
    6. '_count' → logprob: -6.178427696228027
    7. '_counts' → logprob: -6.303427696228027
    8. '<|end|>' → logprob: -6.678427696228027
    9. 'es' → logprob: -6.803427696228027
    10. ' s' → logprob: -6.928427696228027

Token 641: ' must' (ID: 2804)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 642: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.0006291598547250032
    2. '=' → logprob: -8.750629425048828
    3. 'be' → logprob: -8.875629425048828
    4. ' <=' → logprob: -9.250629425048828
    5. ' =' → logprob: -9.625629425048828
    6. '<=' → logprob: -10.000629425048828
    7. ' have' → logprob: -10.250629425048828
    8. ' ' → logprob: -11.125629425048828
    9. ' +=' → logprob: -11.250629425048828
    10. '<|end|>' → logprob: -11.375629425048828

Token 643: ' integers' (ID: 54912)
  Prédit: 'inte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.7683894038200378
    2. 'integer' → logprob: -0.8933894038200378
    3. ' integers' → logprob: -2.2683894634246826
    4. 'non' → logprob: -4.5183892250061035
    5. ' integer' → logprob: -4.6433892250061035
    6. '0' → logprob: -6.8933892250061035
    7. ' non' → logprob: -7.8933892250061035
    8. '≥' → logprob: -7.8933892250061035
    9. '>=' → logprob: -8.018389701843262
    10. ' integral' → logprob: -8.393389701843262

Token 644: ',
' (ID: 412)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 645: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5203326344490051
    2. '       ' → logprob: -1.3953325748443604
    3. '<|end|>' → logprob: -2.0203325748443604
    4. ',' → logprob: -4.6453328132629395
    5. '<|end|>' → logprob: -5.0203328132629395
    6. '.' → logprob: -6.1453328132629395
    7. '\' → logprob: -6.1453328132629395
    8. ' ' → logprob: -7.3953328132629395
    9. ' #' → logprob: -7.3953328132629395
    10. ')' → logprob: -7.6453328132629395

Token 646: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35972845554351807
    2. ':' → logprob: -1.734728455543518
    3. ')' → logprob: -3.1097283363342285
    4. '   ' → logprob: -3.7347283363342285
    5. '#' (adapté à ' #') → logprob: -4.4847283363342285
    6. ' ' → logprob: -4.7347283363342285
    7. '):' → logprob: -5.2347283363342285
    8. '    ' → logprob: -5.4847283363342285
    9. '[' → logprob: -5.4847283363342285
    10. ']' → logprob: -5.6097283363342285

Token 647: ' and' (ID: 326)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5001180171966553
    2. '       ' → logprob: -1.2501180171966553
    3. '\n' → logprob: -4.000118255615234
    4. '\' → logprob: -4.125118255615234
    5. ':' → logprob: -4.125118255615234
    6. '   ' → logprob: -4.375118255615234
    7. ':
' → logprob: -5.000118255615234
    8. 'import' → logprob: -5.125118255615234
    9. 'def' → logprob: -5.125118255615234
    10. '
' → logprob: -5.500118255615234

Token 648: ' damages' (ID: 37402)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0982409715652466
    2. ' all' → logprob: -1.0982409715652466
    3. 'the' → logprob: -2.598240852355957
    4. 'all' → logprob: -3.223240852355957
    5. ' we' → logprob: -3.348240852355957
    6. ' N' → logprob: -3.473240852355957
    7. '#' → logprob: -3.598240852355957
    8. ' HP' → logprob: -3.848240852355957
    9. ' target' → logprob: -4.348240852355957
    10. ' damage' → logprob: -4.598240852355957

Token 649: ' and' (ID: 326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 650: ' costs' (ID: 8959)
  Prédit: 'MP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MP' → logprob: -0.4291462302207947
    2. 'cost' → logprob: -2.0541462898254395
    3. ' MP' → logprob: -2.6791462898254395
    4. ' costs' → logprob: -2.6791462898254395
    5. ' MPs' → logprob: -3.4291462898254395
    6. 'mp' → logprob: -3.9291462898254395
    7. 'counts' → logprob: -4.4291462898254395
    8. 'HP' → logprob: -5.4291462898254395
    9. ' mp' → logprob: -5.8041462898254395
    10. 'targets' → logprob: -6.5541462898254395

Token 651: ' arbitrary' (ID: 56424)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.03083740919828415
    2. '<|end|>' → logprob: -4.405837535858154
    3. ' can' → logprob: -4.780837535858154
    4. '.' → logprob: -5.780837535858154
    5. ',' → logprob: -6.030837535858154
    6. ' must' → logprob: -6.530837535858154
    7. '<|end|>' → logprob: -7.655837535858154
    8. 'are' → logprob: -7.655837535858154
    9. ')' → logprob: -8.405837059020996
    10. ' may' → logprob: -8.405837059020996

Token 652: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 653: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.346101850271225
    2. ':' → logprob: -1.7211018800735474
    3. '#' → logprob: -3.471101760864258
    4. '\' → logprob: -4.221101760864258
    5. '<|end|>' → logprob: -4.221101760864258
    6. ':
' → logprob: -4.596101760864258
    7. '   ' → logprob: -4.846101760864258
    8. '
' → logprob: -4.971101760864258
    9. '```' → logprob: -5.096101760864258
    10. '\n' → logprob: -5.471101760864258

Token 654: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1478128582239151
    2. '#' (adapté à ' #') → logprob: -2.772812843322754
    3. '        
' → logprob: -3.772812843322754
    4. '
' → logprob: -4.647812843322754
    5. '   ' → logprob: -5.022812843322754
    6. ' 
' → logprob: -5.022812843322754
    7. 'import' → logprob: -5.147812843322754
    8. ':' → logprob: -5.522812843322754
    9. 'def' → logprob: -5.522812843322754
    10. ',' → logprob: -6.022812843322754

Token 655: ' We'll' (ID: 46830)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1572927087545395
    2. 'from' → logprob: -2.782292604446411
    3. '       ' → logprob: -3.032292604446411
    4. 'import' → logprob: -4.28229284286499
    5. 'all' → logprob: -4.90729284286499
    6. 'def' → logprob: -4.90729284286499
    7. 'single' → logprob: -5.65729284286499
    8. 'max' → logprob: -6.78229284286499
    9. 'best' → logprob: -7.65729284286499
    10. 'dp' → logprob: -7.78229284286499

Token 656: ' use' (ID: 1199)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.3077408969402313
    2. 'continue' → logprob: -1.5577409267425537
    3. 'use' → logprob: -3.8077409267425537
    4. 'import' → logprob: -4.182740688323975
    5. ' try' → logprob: -5.557740688323975
    6. 'consider' → logprob: -5.682740688323975
    7. 'def' → logprob: -6.057740688323975
    8. '       ' → logprob: -6.682740688323975
    9. 'binary' → logprob: -6.682740688323975
    10. 'from' → logprob: -7.432740688323975

Token 657: ' a' (ID: 261)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.5585160255432129
    2. 'dp' → logprob: -1.308516025543213
    3. 'binary' → logprob: -2.933516025543213
    4. 'from' → logprob: -3.558516025543213
    5. 'DP' → logprob: -3.933516025543213
    6. 'import' → logprob: -4.308516025543213
    7. 'a' → logprob: -4.558516025543213
    8. 'the' → logprob: -4.933516025543213
    9. 'dynamic' → logprob: -5.058516025543213
    10. 'decimal' → logprob: -5.433516025543213

Token 658: ' kn' (ID: 1313)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6666831374168396
    2. 'kn' → logprob: -1.7916831970214844
    3. 'DP' → logprob: -2.0416831970214844
    4. 'binary' → logprob: -2.1666831970214844
    5. 'min' → logprob: -4.166683197021484
    6. 'from' → logprob: -4.416683197021484
    7. 'dynamic' → logprob: -4.416683197021484
    8. 'gre' → logprob: -4.666683197021484
    9. ' DP' → logprob: -5.291683197021484
    10. 'priority' → logprob: -5.291683197021484

Token 659: 'apsack' (ID: 178559)
  Prédit: 'apsack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -0.0006438109558075666
    2. 'ap' → logprob: -7.375643730163574
    3. 'aps' → logprob: -11.375643730163574
    4. 'ight' → logprob: -13.250643730163574
    5. 'n' → logprob: -13.375643730163574
    6. 'e' → logprob: -13.750643730163574
    7. 'a' → logprob: -13.750643730163574
    8. 'ап' → logprob: -16.25064468383789
    9. 'aptop' → logprob: -16.87564468383789
    10. 'i' → logprob: -17.12564468383789

Token 660: '-like' (ID: 22085)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08629000186920166
    2. '<|end|>' → logprob: -3.836289882659912
    3. ' =' → logprob: -4.836289882659912
    4. ':
' → logprob: -5.086289882659912
    5. '[' → logprob: -5.086289882659912
    6. '(' → logprob: -5.586289882659912
    7. ')' → logprob: -5.586289882659912
    8. '(
' → logprob: -5.586289882659912
    9. '<|end|>' → logprob: -5.586289882659912
    10. '.' → logprob: -5.711289882659912

Token 661: ' approach' (ID: 7139)
  Prédit: ' approach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.11419064551591873
    2. ')' → logprob: -3.8641905784606934
    3. 'appro' → logprob: -4.114190578460693
    4. '<|end|>' → logprob: -4.364190578460693
    5. '   ' → logprob: -4.864190578460693
    6. 'dp' → logprob: -4.989190578460693
    7. ' 
' → logprob: -5.114190578460693
    8. ':' → logprob: -5.114190578460693
    9. ' ' → logprob: -5.614190578460693
    10. '<|end|>' → logprob: -5.739190578460693

Token 662: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028758792206645012
    2. '   ' → logprob: -4.528759002685547
    3. '       ' → logprob: -5.028759002685547
    4. ':
' → logprob: -5.528759002685547
    5. ' :' → logprob: -6.153759002685547
    6. ' =' → logprob: -7.153759002685547
    7. ',' → logprob: -7.403759002685547
    8. '(' → logprob: -7.778759002685547
    9. '
' → logprob: -7.903759002685547
    10. '[' → logprob: -8.028759002685547

Token 663: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.1015673875808716
    2. ' all' → logprob: -1.2265673875808716
    3. '"' → logprob: -1.8515673875808716
    4. ' the' → logprob: -1.9765673875808716
    5. 'the' → logprob: -3.476567268371582
    6. ' single' → logprob: -4.101567268371582
    7. ' "' → logprob: -4.851567268371582
    8. ' each' → logprob: -5.101567268371582
    9. 'single' → logprob: -5.351567268371582
    10. 'dp' → logprob: -6.476567268371582

Token 664: '-sp' (ID: 29290)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.7457800507545471
    2. '_target' → logprob: -1.2457799911499023
    3. 'sp' → logprob: -2.3707799911499023
    4. 'target' → logprob: -3.3707799911499023
    5. '_targets' → logprob: -3.7457799911499023
    6. ' spells' → logprob: -3.8707799911499023
    7. '-target' → logprob: -3.8707799911499023
    8. '_all' → logprob: -4.245779991149902
    9. '   ' → logprob: -4.745779991149902
    10. '_s' → logprob: -5.120779991149902

Token 665: 'ells' (ID: 9703)
  Prédit: 'ells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ells' → logprob: -0.045206304639577866
    2. 'ell' → logprob: -3.170206308364868
    3. 'e' → logprob: -6.420206069946289
    4. 'els' → logprob: -8.170206069946289
    5. 'el' → logprob: -8.795206069946289
    6. 'ects' → logprob: -9.920206069946289
    7. 'elif' → logprob: -10.670206069946289
    8. '_' → logprob: -11.170206069946289
    9. '```' → logprob: -11.420206069946289
    10. 'aces' → logprob: -11.420206069946289

Token 666: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7140859961509705
    2. ':' → logprob: -1.5890860557556152
    3. '_sp' → logprob: -2.5890860557556152
    4. 's' → logprob: -2.7140860557556152
    5. '   ' → logprob: -3.4640860557556152
    6. '_' → logprob: -3.5890860557556152
    7. '[' → logprob: -3.9640860557556152
    8. '[]' → logprob: -5.089086055755615
    9. '       ' → logprob: -5.214086055755615
    10. 'sp' → logprob: -5.214086055755615

Token 667: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09505848586559296
    2. 'from' → logprob: -3.9700584411621094
    3. 'import' → logprob: -4.220058441162109
    4. '#' → logprob: -4.595058441162109
    5. '```' → logprob: -4.595058441162109
    6. ' from' → logprob: -5.220058441162109
    7. 'dp' → logprob: -5.470058441162109
    8. '<|end|>' → logprob: -5.595058441162109
    9. 'max' → logprob: -5.970058441162109
    10. '        
' → logprob: -6.095058441162109

Token 668: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15173764526844025
    2. 'dp' → logprob: -3.026737689971924
    3. 'max' → logprob: -3.901737689971924
    4. '#' (adapté à ' #') → logprob: -3.901737689971924
    5. ' dp' → logprob: -3.901737689971924
    6. ' max' → logprob: -4.026737689971924
    7. ' #' → logprob: -6.276737689971924
    8. '        
' → logprob: -6.401737689971924
    9. '        ' → logprob: -6.651737689971924
    10. 'import' → logprob: -6.651737689971924

Token 669: ' Since' (ID: 12265)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5697368383407593
    2. 'max' → logprob: -1.6947368383407593
    3. '       ' → logprob: -2.319736957550049
    4. 'from' → logprob: -3.194736957550049
    5. '#' → logprob: -3.444736957550049
    6. ' dp' → logprob: -3.694736957550049
    7. ' max' → logprob: -4.319736957550049
    8. '   ' → logprob: -4.944736957550049
    9. 'continue' → logprob: -4.944736957550049
    10. ' from' → logprob: -5.069736957550049

Token 670: ' MP' (ID: 14857)
  Prédit: 'MP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MP' → logprob: -1.3458075523376465
    2. 'all' → logprob: -1.4708075523376465
    3. 'max' → logprob: -1.8458075523376465
    4. 'the' → logprob: -2.2208075523376465
    5. 'M' → logprob: -2.9708075523376465
    6. ' the' → logprob: -3.2208075523376465
    7. ' all' → logprob: -3.3458075523376465
    8. ' M' → logprob: -3.7208075523376465
    9. ' max' → logprob: -3.9708075523376465
    10. 'total' → logprob: -4.5958075523376465

Token 671: '_j' (ID: 12021)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.0434595346450806
    2. '_limit' → logprob: -1.5434595346450806
    3. '_budget' → logprob: -2.043459415435791
    4. '_usage' → logprob: -2.418459415435791
    5. ' <=' → logprob: -3.168459415435791
    6. '_' → logprob: -3.293459415435791
    7. '_used' → logprob: -3.793459415435791
    8. ' =' → logprob: -3.918459415435791
    9. ' usage' → logprob: -4.168459415435791
    10. '_capacity' → logprob: -4.543459415435791

Token 672: ' ≤' (ID: 72554)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2343253493309021
    2. 's' → logprob: -2.984325408935547
    3. '<=' → logprob: -3.109325408935547
    4. ')' → logprob: -3.734325408935547
    5. '_j' → logprob: -3.734325408935547
    6. '=' → logprob: -4.109325408935547
    7. ',' → logprob: -4.609325408935547
    8. ' =' → logprob: -5.359325408935547
    9. ' ' → logprob: -5.859325408935547
    10. '   ' → logprob: -5.984325408935547

Token 673: '99' (ID: 2058)
  Prédit: '99'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '99' → logprob: -0.28302472829818726
    2. '100' → logprob: -1.408024787902832
    3. ' ' → logprob: -6.283024787902832
    4. '=' → logprob: -13.783024787902832
    5. '   ' → logprob: -13.908024787902832
    6. '999' → logprob: -14.033024787902832
    7. '  ' → logprob: -14.283024787902832
    8. '10' → logprob: -15.158024787902832
    9. '50' → logprob: -15.345524787902832
    10. '101' → logprob: -15.783024787902832

Token 674: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 675: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.5415836572647095
    2. '       ' → logprob: -1.6665836572647095
    3. 'damage' → logprob: -1.9165836572647095
    4. 'dp' → logprob: -2.29158353805542
    5. ' and' → logprob: -3.04158353805542
    6. 'd' → logprob: -3.04158353805542
    7. ' max' → logprob: -3.16658353805542
    8. '<|end|>' → logprob: -3.29158353805542
    9. ' ' → logprob: -3.79158353805542
    10. 'target' → logprob: -3.79158353805542

Token 676: ' damage' (ID: 10364)
  Prédit: '_HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_HP' → logprob: -1.2591341733932495
    2. '_hp' → logprob: -1.3841341733932495
    3. '_damage' → logprob: -1.5091341733932495
    4. '_MP' → logprob: -2.259134292602539
    5. '_cost' → logprob: -2.884134292602539
    6. 'HP' → logprob: -3.634134292602539
    7. '_mp' → logprob: -3.884134292602539
    8. '_usage' → logprob: -5.259134292602539
    9. '```' → logprob: -5.634134292602539
    10. 'damage' → logprob: -5.759134292602539

Token 677: ' can' (ID: 665)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0362592935562134
    2. '<|end|>' → logprob: -2.036259174346924
    3. '_' → logprob: -2.286259174346924
    4. ')' → logprob: -2.536259174346924
    5. '_j' → logprob: -2.536259174346924
    6. ' =' → logprob: -2.661259174346924
    7. ',' → logprob: -3.036259174346924
    8. ']' → logprob: -3.161259174346924
    9. '<|end|>' → logprob: -3.536259174346924
    10. ' ' → logprob: -4.786259174346924

Token 678: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.14254499971866608
    2. '=' → logprob: -2.392544984817505
    3. ' =' → logprob: -3.642544984817505
    4. ' apply' → logprob: -4.892545223236084
    5. ' ' → logprob: -6.392545223236084
    6. '<|end|>' → logprob: -6.767545223236084
    7. ' not' → logprob: -7.517545223236084
    8. 'apply' → logprob: -7.642545223236084
    9. ' reach' → logprob: -7.767545223236084
    10. 'n't' → logprob: -8.017544746398926

Token 679: ' high' (ID: 1932)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5533958673477173
    2. ' ' → logprob: -1.4283958673477173
    3. '99' → logprob: -2.5533957481384277
    4. '999' → logprob: -2.8033957481384277
    5. '0' → logprob: -3.9283957481384277
    6. '10' → logprob: -4.553395748138428
    7. '1' → logprob: -4.678395748138428
    8. 'all' → logprob: -7.053395748138428
    9. 'target' → logprob: -7.053395748138428
    10. 'sum' → logprob: -7.053395748138428

Token 680: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9373058676719666
    2. ')' → logprob: -1.6873059272766113
    3. '<|end|>' → logprob: -1.8123059272766113
    4. ']' → logprob: -2.9373059272766113
    5. '<|end|>' → logprob: -3.5623059272766113
    6. '   ' → logprob: -3.5623059272766113
    7. ',' → logprob: -3.6873059272766113
    8. ' =' → logprob: -3.9373059272766113
    9. '[' → logprob: -4.062305927276611
    10. '       ' → logprob: -4.437305927276611

Token 681: 'up' (ID: 817)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.040535565465688705
    2. ' ' → logprob: -4.4155354499816895
    3. ' )' → logprob: -4.6655354499816895
    4. '<|end|>' → logprob: -5.7905354499816895
    5. '99' → logprob: -6.0405354499816895
    6. ']' → logprob: -6.4155354499816895
    7. '100' → logprob: -6.7905354499816895
    8. ')]' → logprob: -6.9155354499816895
    9. ',' → logprob: -6.9155354499816895
    10. '...' → logprob: -7.0405354499816895

Token 682: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.41914311051368713
    2. ' to' → logprob: -1.2941430807113647
    3. 'To' → logprob: -4.169143199920654
    4. '       ' → logprob: -4.419143199920654
    5. '=' → logprob: -4.544143199920654
    6. ')' → logprob: -5.044143199920654
    7. '_to' → logprob: -5.419143199920654
    8. '   ' → logprob: -6.044143199920654
    9. '1' → logprob: -6.169143199920654
    10. ' =' → logprob: -6.544143199920654

Token 683: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.24666772782802582
    2. '10' → logprob: -2.2466676235198975
    3. ' ' → logprob: -2.4966676235198975
    4. '999' → logprob: -4.121667861938477
    5. '1' → logprob: -4.996667861938477
    6. '99' → logprob: -5.496667861938477
    7. 'HP' → logprob: -6.621667861938477
    8. ' HP' → logprob: -7.621667861938477
    9. ')' → logprob: -7.996667861938477
    10. '   ' → logprob: -8.496667861938477

Token 684: '999' (ID: 9130)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.11994357407093048
    2. '10' → logprob: -2.244943618774414
    3. '999' → logprob: -5.619943618774414
    4. '1' → logprob: -6.494943618774414
    5. '99' → logprob: -6.994943618774414
    6. ' ' → logprob: -7.744943618774414
    7. 'HP' → logprob: -7.869943618774414
    8. '   ' → logprob: -9.244943618774414
    9. '500' → logprob: -10.869943618774414
    10. 'hp' → logprob: -11.369943618774414

Token 685: '999' (ID: 9130)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05276060104370117
    2. '9' → logprob: -3.177760601043701
    3. '+' → logprob: -5.552760601043701
    4. ' )' → logprob: -6.802760601043701
    5. ')+' → logprob: -6.927760601043701
    6. '999' → logprob: -7.427760601043701
    7. ')
' → logprob: -7.552760601043701
    8. '),' → logprob: -7.677760601043701
    9. '99' → logprob: -7.927760601043701
    10. '
' → logprob: -8.05276107788086

Token 686: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005455728620290756
    2. '9' → logprob: -5.630455493927002
    3. '),' → logprob: -7.255455493927002
    4. ')
' → logprob: -7.880455493927002
    5. '+' → logprob: -8.38045597076416
    6. ' )' → logprob: -8.88045597076416
    7. '<|end|>' → logprob: -9.38045597076416
    8. '999' → logprob: -10.13045597076416
    9. ')+' → logprob: -10.38045597076416
    10. '')' → logprob: -10.50545597076416

Token 687: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04307626932859421
    2. '
' → logprob: -5.043076038360596
    3. '   ' → logprob: -5.168076038360596
    4. ':' → logprob: -5.418076038360596
    5. '<|end|>' → logprob: -5.543076038360596
    6. ']' → logprob: -5.793076038360596
    7. ')' → logprob: -5.793076038360596
    8. 'import' → logprob: -6.168076038360596
    9. '[' → logprob: -6.418076038360596
    10. '```' → logprob: -6.543076038360596

Token 688: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05517337843775749
    2. '#' (adapté à ' #') → logprob: -3.805173397064209
    3. '<|end|>' → logprob: -5.055173397064209
    4. ')' → logprob: -5.180173397064209
    5. '```' → logprob: -5.180173397064209
    6. '
' → logprob: -5.430173397064209
    7. '   ' → logprob: -6.305173397064209
    8. ']' → logprob: -6.430173397064209
    9. ',' → logprob: -7.180173397064209
    10. '        
' → logprob: -7.305173397064209

Token 689: ' But' (ID: 3072)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7608882188796997
    2. '       ' → logprob: -0.8858882188796997
    3. 'dp' → logprob: -2.76088809967041
    4. 'max' → logprob: -3.51088809967041
    5. '   ' → logprob: -5.13588809967041
    6. 'from' → logprob: -5.26088809967041
    7. '```' → logprob: -5.38588809967041
    8. '
' → logprob: -5.76088809967041
    9. 'import' → logprob: -6.13588809967041
    10. '        
' → logprob: -7.01088809967041

Token 690: ' number' (ID: 2086)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.224942922592163
    2. 'max' → logprob: -1.849942922592163
    3. '       ' → logprob: -2.099942922592163
    4. '#' → logprob: -2.599942922592163
    5. ' max' → logprob: -2.849942922592163
    6. 'damage' → logprob: -2.974942922592163
    7. ' dp' → logprob: -2.974942922592163
    8. '   ' → logprob: -3.599942922592163
    9. ' all' → logprob: -3.849942922592163
    10. 'all' → logprob: -4.224943161010742

Token 691: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.034050464630127
    2. '#' → logprob: -1.159050464630127
    3. '=' → logprob: -2.284050464630127
    4. ' of' → logprob: -2.909050464630127
    5. 'of' → logprob: -3.784050464630127
    6. 'import' → logprob: -4.034050464630127
    7. '_limit' → logprob: -4.159050464630127
    8. '       ' → logprob: -4.409050464630127
    9. ']' → logprob: -4.409050464630127
    10. ' =' → logprob: -4.534050464630127

Token 692: ' monsters' (ID: 59311)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.8585003614425659
    2. '_sp' → logprob: -1.858500361442566
    3. 'all' → logprob: -2.1085004806518555
    4. ' spells' → logprob: -2.2335004806518555
    5. ' all' → logprob: -2.7335004806518555
    6. '_all' → logprob: -2.9835004806518555
    7. 'spaces' → logprob: -4.6085004806518555
    8. ' sp' → logprob: -4.8585004806518555
    9. '```' → logprob: -5.1085004806518555
    10. '   ' → logprob: -5.1085004806518555

Token 693: ' ≤' (ID: 72554)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 694: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.004847207572311163
    2. ' ' → logprob: -6.254847049713135
    3. '10' → logprob: -6.629847049713135
    4. '99' → logprob: -7.379847049713135
    5. '50' → logprob: -7.879847049713135
    6. '20' → logprob: -7.879847049713135
    7. '5' → logprob: -10.129847526550293
    8. '0' → logprob: -10.379847526550293
    9. '3' → logprob: -10.629847526550293
    10. '15' → logprob: -10.754847526550293

Token 695: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4352478086948395
    2. '
' → logprob: -1.560247778892517
    3. ':' → logprob: -3.3102478981018066
    4. '   ' → logprob: -3.6852478981018066
    5. '        
' → logprob: -4.060247898101807
    6. '```' → logprob: -4.185247898101807
    7. ':
' → logprob: -4.435247898101807
    8. ',' → logprob: -5.435247898101807
    9. 'def' → logprob: -5.560247898101807
    10. '#' → logprob: -5.685247898101807

Token 696: ' their' (ID: 1043)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4361962080001831
    2. '100' → logprob: -1.811196208000183
    3. 'HP' → logprob: -3.5611963272094727
    4. '99' → logprob: -3.6861963272094727
    5. 'their' → logprob: -3.6861963272094727
    6. ' max' → logprob: -3.6861963272094727
    7. ' their' → logprob: -4.436196327209473
    8. 'damage' → logprob: -4.436196327209473
    9. 'maximum' → logprob: -4.686196327209473
    10. 'targets' → logprob: -5.186196327209473

Token 697: ' HP' (ID: 21979)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.7060373425483704
    2. ' HP' → logprob: -2.0810372829437256
    3. 'damage' → logprob: -2.3310372829437256
    4. '```' → logprob: -2.5810372829437256
    5. ' damage' → logprob: -2.9560372829437256
    6. 'max' → logprob: -3.8310372829437256
    7. ')' → logprob: -4.081037521362305
    8. '#' → logprob: -4.456037521362305
    9. 's' → logprob: -4.581037521362305
    10. ' max' → logprob: -4.581037521362305

Token 698: ' ≤' (ID: 72554)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1877979040145874
    2. ']' → logprob: -1.5627979040145874
    3. '[i' → logprob: -2.062798023223877
    4. 's' → logprob: -2.187798023223877
    5. '#' → logprob: -3.062798023223877
    6. '   ' → logprob: -3.437798023223877
    7. '       ' → logprob: -3.812798023223877
    8. '=' → logprob: -4.062798023223877
    9. ':' → logprob: -4.312798023223877
    10. '<|end|>' → logprob: -4.437798023223877

Token 699: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.004464654717594385
    2. '10' → logprob: -5.504464626312256
    3. ' ' → logprob: -7.879464626312256
    4. '1' → logprob: -12.129465103149414
    5. '999' → logprob: -13.504465103149414
    6. '   ' → logprob: -15.379465103149414
    7. '  ' → logprob: -16.129465103149414
    8. '000' → logprob: -16.379465103149414
    9. '```' → logprob: -16.379465103149414
    10. 'int' → logprob: -16.379465103149414

Token 700: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.09567129611968994
    2. '0' → logprob: -2.4706711769104004
    3. '5' → logprob: -5.9706711769104
    4. '6' → logprob: -6.0956711769104
    5. '00' → logprob: -7.4706711769104
    6. ')' → logprob: -7.8456711769104
    7. '```' → logprob: -8.720671653747559
    8. '4' → logprob: -9.095671653747559
    9. '500' → logprob: -9.220671653747559
    10. '7' → logprob: -9.720671653747559

Token 701: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21488817036151886
    2. '<|end|>' → logprob: -1.8398882150650024
    3. '<|end|>' → logprob: -4.839888095855713
    4. '
' → logprob: -4.964888095855713
    5. '   ' → logprob: -5.964888095855713
    6. '```' → logprob: -6.214888095855713
    7. '        
' → logprob: -6.214888095855713
    8. '#' → logprob: -6.214888095855713
    9. ',' → logprob: -6.339888095855713
    10. '...' → logprob: -6.464888095855713

Token 702: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09704717248678207
    2. '#' → logprob: -2.9720470905303955
    3. '
' → logprob: -3.5970470905303955
    4. '<|end|>' → logprob: -5.722047328948975
    5. '```' → logprob: -6.222047328948975
    6. ',' → logprob: -6.347047328948975
    7. '        
' → logprob: -6.347047328948975
    8. '   ' → logprob: -6.597047328948975
    9. '...' → logprob: -6.972047328948975
    10. 'import' → logprob: -7.722047328948975

Token 703: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18676337599754333
    2. '
' → logprob: -2.061763286590576
    3. '#' (adapté à ' #') → logprob: -3.436763286590576
    4. '        
' → logprob: -5.186763286590576
    5. '```' → logprob: -6.811763286590576
    6. 'from' → logprob: -7.061763286590576
    7. 'import' → logprob: -7.061763286590576
    8. 'max' → logprob: -7.186763286590576
    9. '   ' → logprob: -7.936763286590576
    10. 'def' → logprob: -8.561763763427734

Token 704: ' Let's' (ID: 41021)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.633215606212616
    2. '       ' → logprob: -1.1332156658172607
    3. '#' → logprob: -2.2582156658172607
    4. 'dp' → logprob: -3.8832156658172607
    5. 'from' → logprob: -5.383215427398682
    6. 'best' → logprob: -5.883215427398682
    7. 'import' → logprob: -5.883215427398682
    8. '   ' → logprob: -6.008215427398682
    9. 'def' → logprob: -6.133215427398682
    10. 'all' → logprob: -6.258215427398682

Token 705: ' consider' (ID: 3331)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.354097455739975
    2. '   ' → logprob: -2.604097366333008
    3. '       ' → logprob: -2.604097366333008
    4. 'consider' → logprob: -2.854097366333008
    5. 'try' → logprob: -3.354097366333008
    6. 'def' → logprob: -3.979097366333008
    7. '#' → logprob: -4.229097366333008
    8. 'import' → logprob: -4.854097366333008
    9. 'initialize' → logprob: -5.729097366333008
    10. 'define' → logprob: -6.104097366333008

Token 706: ' only' (ID: 1606)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5314658880233765
    2. 'max' → logprob: -2.031466007232666
    3. 'the' → logprob: -2.281466007232666
    4. 'all' → logprob: -3.156466007232666
    5. 'from' → logprob: -3.156466007232666
    6. 'single' → logprob: -3.781466007232666
    7. '   ' → logprob: -3.781466007232666
    8. 'import' → logprob: -4.281466007232666
    9. 'using' → logprob: -5.156466007232666
    10. 'def' → logprob: -5.156466007232666

Token 707: ' the' (ID: 290)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.563753068447113
    2. 'all' → logprob: -1.1887531280517578
    3. 'the' → logprob: -2.188753128051758
    4. 'using' → logprob: -5.063753128051758
    5. ' single' → logprob: -5.188753128051758
    6. '"' → logprob: -7.688753128051758
    7. ' all' → logprob: -7.813753128051758
    8. 'only' → logprob: -8.063753128051758
    9. ' the' → logprob: -8.063753128051758
    10. ''' → logprob: -8.563753128051758

Token 708: ' "' (ID: 392)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.7322507500648499
    2. 'all' → logprob: -1.107250690460205
    3. ' single' → logprob: -2.607250690460205
    4. 'best' → logprob: -3.357250690460205
    5. 'sp' → logprob: -3.607250690460205
    6. ' all' → logprob: -4.107250690460205
    7. ' best' → logprob: -4.857250690460205
    8. '[' → logprob: -5.607250690460205
    9. '"' → logprob: -5.857250690460205
    10. '   ' → logprob: -6.357250690460205

Token 709: 'All' (ID: 2594)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.06746601313352585
    2. 'single' → logprob: -2.8174660205841064
    3. 'sp' → logprob: -6.317465782165527
    4. ' all' → logprob: -6.692465782165527
    5. 'best' → logprob: -7.817465782165527
    6. ' single' → logprob: -7.817465782165527
    7. 'target' → logprob: -8.067465782165527
    8. 'def' → logprob: -8.442465782165527
    9. 'All' → logprob: -8.442465782165527
    10. '   ' → logprob: -9.067465782165527

Token 710: '"' (ID: 1)
  Prédit: '-target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-target' → logprob: -0.3068852126598358
    2. '-' → logprob: -2.431885242462158
    3. '"' → logprob: -2.556885242462158
    4. '_target' → logprob: -2.806885242462158
    5. '_sp' → logprob: -4.056885242462158
    6. '_' → logprob: -4.806885242462158
    7. '_targets' → logprob: -5.306885242462158
    8. '_s' → logprob: -6.556885242462158
    9. '-sp' → logprob: -6.681885242462158
    10. '"-' → logprob: -6.806885242462158

Token 711: ' spells' (ID: 69967)
  Prédit: '_target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.41492313146591187
    2. '_sp' → logprob: -1.4149231910705566
    3. '-target' → logprob: -2.9149231910705566
    4. '_' → logprob: -4.164923191070557
    5. ' spells' → logprob: -4.664923191070557
    6. '_targets' → logprob: -4.664923191070557
    7. '_s' → logprob: -6.539923191070557
    8. '-' → logprob: -6.664923191070557
    9. 'target' → logprob: -6.914923191070557
    10. 'sp' → logprob: -6.914923191070557

Token 712: ',' (ID: 11)
  Prédit: '_all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.034752439707517624
    2. '_' → logprob: -4.034752368927002
    3. '_sp' → logprob: -5.284752368927002
    4. 'all' → logprob: -5.409752368927002
    5. ' =' → logprob: -5.659752368927002
    6. ':' → logprob: -6.659752368927002
    7. '   ' → logprob: -7.534752368927002
    8. '       ' → logprob: -7.659752368927002
    9. 'def' → logprob: -8.40975284576416
    10. '_s' → logprob: -9.15975284576416

Token 713: ' we'll' (ID: 22782)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.002380761317908764
    2. 'single' → logprob: -6.877380847930908
    3. '   ' → logprob: -7.627380847930908
    4. ' all' → logprob: -8.25238037109375
    5. '#' → logprob: -8.87738037109375
    6. 'from' → logprob: -9.12738037109375
    7. 'dp' → logprob: -9.12738037109375
    8. '       ' → logprob: -9.62738037109375
    9. 'damage' → logprob: -10.12738037109375
    10. 'total' → logprob: -10.87738037109375

Token 714: ' try' (ID: 2075)
  Prédit: 'collect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collect' → logprob: -0.4696904420852661
    2. 'try' → logprob: -1.5946904420852661
    3. 'consider' → logprob: -2.7196903228759766
    4. 'use' → logprob: -3.2196903228759766
    5. 'dp' → logprob: -3.2196903228759766
    6. 'filter' → logprob: -5.344690322875977
    7. 'select' → logprob: -6.094690322875977
    8. 'sort' → logprob: -6.219690322875977
    9. 'import' → logprob: -6.344690322875977
    10. 'combine' → logprob: -6.469690322875977

Token 715: ' all' (ID: 722)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0689445286989212
    2. ' to' → logprob: -2.8189444541931152
    3. '   ' → logprob: -6.318944454193115
    4. 'app' → logprob: -6.693944454193115
    5. 'multip' → logprob: -7.443944454193115
    6. 'dp' → logprob: -7.568944454193115
    7. '```' → logprob: -7.693944454193115
    8. 'all' → logprob: -7.693944454193115
    9. 'casting' → logprob: -8.193944931030273
    10. '       ' → logprob: -8.318944931030273

Token 716: ' possible' (ID: 4149)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.9559920430183411
    2. 'possible' → logprob: -1.0809919834136963
    3. ' possible' → logprob: -2.3309919834136963
    4. ' combinations' → logprob: -3.4559919834136963
    5. '   ' → logprob: -3.5809919834136963
    6. 'poss' → logprob: -3.7059919834136963
    7. 'damage' → logprob: -3.8309919834136963
    8. 'counts' → logprob: -4.580992221832275
    9. 'dp' → logprob: -4.705992221832275
    10. 'all' → logprob: -4.705992221832275

Token 717: ' sums' (ID: 73121)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'damage' → logprob: -0.21499769389629364
    2. ' damage' → logprob: -3.2149977684020996
    3. 'counts' → logprob: -3.4649977684020996
    4. 'dp' → logprob: -3.8399977684020996
    5. 'usage' → logprob: -3.8399977684020996
    6. ' usage' → logprob: -4.2149977684021
    7. 'mp' → logprob: -5.0899977684021
    8. 'casts' → logprob: -5.2149977684021
    9. 'amount' → logprob: -5.3399977684021
    10. '   ' → logprob: -5.4649977684021

Token 718: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8156266808509827
    2. '_' → logprob: -1.190626621246338
    3. ':' → logprob: -2.940626621246338
    4. '   ' → logprob: -3.440626621246338
    5. '[' → logprob: -3.440626621246338
    6. '=' → logprob: -3.565626621246338
    7. ',' → logprob: -4.190626621246338
    8. ')' → logprob: -4.190626621246338
    9. ' _' → logprob: -4.190626621246338
    10. '
' → logprob: -5.065626621246338

Token 719: ' damage' (ID: 10364)
  Prédit: 'MP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MP' → logprob: -0.3898031711578369
    2. 'mp' → logprob: -2.264803171157837
    3. ' MP' → logprob: -2.389803171157837
    4. 'damage' → logprob: -2.514803171157837
    5. ' mp' → logprob: -3.764803171157837
    6. 'dp' → logprob: -5.139802932739258
    7. ' damage' → logprob: -5.264802932739258
    8. 'magic' → logprob: -5.389802932739258
    9. 'all' → logprob: -6.514802932739258
    10. 'cost' → logprob: -6.889802932739258

Token 720: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3364377021789551
    2. '_' → logprob: -2.836437702178955
    3. ',' → logprob: -2.961437702178955
    4. '[' → logprob: -3.586437702178955
    5. ']' → logprob: -3.586437702178955
    6. '   ' → logprob: -3.711437702178955
    7. ')' → logprob: -3.711437702178955
    8. ' =' → logprob: -4.336437702178955
    9. '       ' → logprob: -4.461437702178955
    10. '=' → logprob: -4.586437702178955

Token 721: ' corresponding' (ID: 21824)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.20203475654125214
    2. ' cost' → logprob: -1.8270347118377686
    3. 'MP' → logprob: -5.327034950256348
    4. ' mp' → logprob: -5.452034950256348
    5. 'mp' → logprob: -5.452034950256348
    6. ' MP' → logprob: -5.702034950256348
    7. 'dp' → logprob: -6.452034950256348
    8. ' costs' → logprob: -6.702034950256348
    9. 'their' → logprob: -7.077034950256348
    10. ' their' → logprob: -7.327034950256348

Token 722: ' minimal' (ID: 19957)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.6951150298118591
    2. ' MP' → logprob: -1.820115089416504
    3. ' cost' → logprob: -2.070115089416504
    4. ' mp' → logprob: -2.695115089416504
    5. 'mp' → logprob: -2.820115089416504
    6. 'MP' → logprob: -2.945115089416504
    7. ' costs' → logprob: -3.445115089416504
    8. ' magic' → logprob: -8.445115089416504
    9. '_MP' → logprob: -8.570115089416504
    10. '_mp' → logprob: -8.695115089416504

Token 723: ' MP' (ID: 14857)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.4425460398197174
    2. 'MP' → logprob: -1.817546010017395
    3. ' cost' → logprob: -2.3175461292266846
    4. ' MP' → logprob: -2.6925461292266846
    5. 'mp' → logprob: -3.9425461292266846
    6. ' mp' → logprob: -4.6925458908081055
    7. 'magic' → logprob: -9.317545890808105
    8. '_MP' → logprob: -9.317545890808105
    9. '_mp' → logprob: -9.942545890808105
    10. ' costs' → logprob: -9.942545890808105

Token 724: ' cost' (ID: 3097)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2628542184829712
    2. ' =' → logprob: -1.3878542184829712
    3. ':' → logprob: -1.7628542184829712
    4. '_' → logprob: -2.1378540992736816
    5. '_all' → logprob: -3.0128540992736816
    6. '       ' → logprob: -3.2628540992736816
    7. 'def' → logprob: -4.387854099273682
    8. '_sp' → logprob: -4.637854099273682
    9. ']' → logprob: -4.762854099273682
    10. ':
' → logprob: -5.012854099273682

Token 725: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0433039665222168
    2. '   ' → logprob: -1.1683039665222168
    3. ' =' → logprob: -2.043303966522217
    4. '       ' → logprob: -2.168303966522217
    5. '_' → logprob: -3.668303966522217
    6. ':
' → logprob: -4.418303966522217
    7. ',' → logprob: -4.918303966522217
    8. '=' → logprob: -5.293303966522217
    9. '[' → logprob: -5.293303966522217
    10. 'dp' → logprob: -5.543303966522217

Token 726: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010740761645138264
    2. '#' → logprob: -5.885740756988525
    3. '
' → logprob: -5.885740756988525
    4. ',' → logprob: -6.010740756988525
    5. '   ' → logprob: -7.260740756988525
    6. '\' → logprob: -8.135741233825684
    7. '```' → logprob: -8.385741233825684
    8. '        
' → logprob: -8.510741233825684
    9. '        ' → logprob: -8.885741233825684
    10. ':' → logprob: -9.010741233825684

Token 727: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6128162145614624
    2. 'all' → logprob: -1.2378162145614624
    3. '   ' → logprob: -1.8628162145614624
    4. 'dp' → logprob: -5.737816333770752
    5. '#' (adapté à ' #') → logprob: -6.112816333770752
    6. ' all' → logprob: -6.237816333770752
    7. 'def' → logprob: -7.362816333770752
    8. '        
' → logprob: -7.487816333770752
    9. 'import' → logprob: -7.487816333770752
    10. '    
' → logprob: -8.112815856933594

Token 728: ' For' (ID: 2214)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.3438747823238373
    2. 'dp' → logprob: -1.9688748121261597
    3. 'from' → logprob: -2.34387469291687
    4. '       ' → logprob: -3.71887469291687
    5. '#' → logprob: -3.84387469291687
    6. '   ' → logprob: -5.468874931335449
    7. 'max' → logprob: -5.718874931335449
    8. 'damage' → logprob: -6.843874931335449
    9. 'import' → logprob: -7.843874931335449
    10. 'possible' → logprob: -8.09387493133545

Token 729: ' each' (ID: 2454)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.30239102244377136
    2. '_all' → logprob: -2.6773910522460938
    3. ' all' → logprob: -2.9273910522460938
    4. '"' → logprob: -3.0523910522460938
    5. 'd' → logprob: -3.5523910522460938
    6. 'i' → logprob: -4.802391052246094
    7. 'each' → logprob: -4.802391052246094
    8. ' "' → logprob: -5.052391052246094
    9. 'dp' → logprob: -5.052391052246094
    10. 'damage' → logprob: -5.177391052246094

Token 730: ' possible' (ID: 4149)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.3165409564971924
    2. ' all' → logprob: -1.9415409564971924
    3. 'spell' → logprob: -2.9415409564971924
    4. ' spell' → logprob: -3.4415409564971924
    5. '_all' → logprob: -4.691540718078613
    6. 'damage' → logprob: -5.066540718078613
    7. '"' → logprob: -5.191540718078613
    8. ' "' → logprob: -5.441540718078613
    9. 'i' → logprob: -6.316540718078613
    10. ' damage' → logprob: -6.316540718078613

Token 731: ' total' (ID: 3609)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'damage' → logprob: -0.2263222187757492
    2. ' damage' → logprob: -2.3513221740722656
    3. 'sum' → logprob: -3.7263221740722656
    4. ' total' → logprob: -3.8513221740722656
    5. 'total' → logprob: -4.226322174072266
    6. 'all' → logprob: -4.351322174072266
    7. ' sum' → logprob: -4.476322174072266
    8. ' all' → logprob: -4.726322174072266
    9. 'amount' → logprob: -5.976322174072266
    10. ' amount' → logprob: -6.101322174072266

Token 732: ' damage' (ID: 10364)
  Prédit: '_damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_damage' → logprob: -0.69501131772995
    2. 'damage' → logprob: -0.94501131772995
    3. ' damage' → logprob: -2.3200113773345947
    4. '_all' → logprob: -4.695011138916016
    5. 'all' → logprob: -6.695011138916016
    6. '_' → logprob: -6.695011138916016
    7. '_d' → logprob: -7.195011138916016
    8. ' all' → logprob: -7.320011138916016
    9. '	damage' → logprob: -8.195011138916016
    10. ' _' → logprob: -8.945011138916016

Token 733: ' D' (ID: 415)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1960945129394531
    2. ' _' → logprob: -1.8210945129394531
    3. ',' → logprob: -1.9460945129394531
    4. '_sum' → logprob: -2.196094512939453
    5. '_possible' → logprob: -3.196094512939453
    6. '_value' → logprob: -3.196094512939453
    7. ' ,' → logprob: -3.571094512939453
    8. '_s' → logprob: -3.571094512939453
    9. ' ' → logprob: -3.946094512939453
    10. '_values' → logprob: -4.071094512939453

Token 734: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5991183519363403
    2. ' ,' → logprob: -2.099118232727051
    3. '_' → logprob: -2.349118232727051
    4. ':' → logprob: -2.974118232727051
    5. ' =' → logprob: -2.974118232727051
    6. ' :' → logprob: -3.974118232727051
    7. ' ' → logprob: -4.099118232727051
    8. '_sum' → logprob: -4.099118232727051
    9. 's' → logprob: -4.224118232727051
    10. ' _' → logprob: -4.849118232727051

Token 735: 'ap' (ID: 403)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4105098247528076
    2. 'in' → logprob: -1.4105098247528076
    3. ' in' → logprob: -1.5355098247528076
    4. '),' → logprob: -1.6605098247528076
    5. ',' → logprob: -2.9105098247528076
    6. '+' → logprob: -4.910510063171387
    7. 'from' → logprob: -4.910510063171387
    8. '=' → logprob: -5.160510063171387
    9. ' ' → logprob: -5.285510063171387
    10. '):
' → logprob: -5.660510063171387

Token 736: 'plied' (ID: 5649)
  Prédit: 'prox'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prox' → logprob: -0.06715595722198486
    2. 'p' → logprob: -3.4421558380126953
    3. ')' → logprob: -4.442155838012695
    4. '   ' → logprob: -5.317155838012695
    5. 'ply' → logprob: -5.317155838012695
    6. 'plied' → logprob: -6.317155838012695
    7. 'pro' → logprob: -6.317155838012695
    8. 'pr' → logprob: -6.567155838012695
    9. '=' → logprob: -6.942155838012695
    10. ']' → logprob: -7.317155838012695

Token 737: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5849635004997253
    2. 'to' → logprob: -2.20996356010437
    3. ')' → logprob: -2.58496356010437
    4. ',' → logprob: -2.70996356010437
    5. ' ' → logprob: -2.95996356010437
    6. ' ,' → logprob: -3.70996356010437
    7. ' )' → logprob: -3.83496356010437
    8. '   ' → logprob: -4.084963321685791
    9. ' on' → logprob: -4.209963321685791
    10. '=' → logprob: -4.709963321685791

Token 738: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.6111980080604553
    2. 'all' → logprob: -0.8611980080604553
    3. ' monsters' → logprob: -3.7361979484558105
    4. 'mon' → logprob: -4.7361979484558105
    5. ' each' → logprob: -7.1111979484558105
    6. 'each' → logprob: -7.9861979484558105
    7. ' monster' → logprob: -8.361198425292969
    8. ')' → logprob: -8.986198425292969
    9. ' ' → logprob: -9.361198425292969
    10. ' the' → logprob: -9.486198425292969

Token 739: ' monsters' (ID: 59311)
  Prédit: '_mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mon' → logprob: -0.2614540755748749
    2. 'mon' → logprob: -2.0114541053771973
    3. ' monsters' → logprob: -3.0114541053771973
    4. ' )' → logprob: -4.136454105377197
    5. ')' → logprob: -4.261454105377197
    6. ' _' → logprob: -5.136454105377197
    7. '_' → logprob: -5.136454105377197
    8. ' ' → logprob: -6.136454105377197
    9. '_targets' → logprob: -7.261454105377197
    10. '   ' → logprob: -7.761454105377197

Token 740: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.09354548156261444
    2. '):
' → logprob: -3.093545436859131
    3. ')' → logprob: -4.093545436859131
    4. ',' → logprob: -4.718545436859131
    5. ' ),' → logprob: -5.843545436859131
    6. '+' → logprob: -6.218545436859131
    7. '):' → logprob: -6.218545436859131
    8. 'from' → logprob: -6.593545436859131
    9. 's' → logprob: -6.593545436859131
    10. ' from' → logprob: -6.968545436859131

Token 741: ' minimal' (ID: 19957)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.716979444026947
    2. 'dp' → logprob: -0.841979444026947
    3. ' for' → logprob: -3.216979503631592
    4. ' max' → logprob: -4.466979503631592
    5. 'for' → logprob: -4.466979503631592
    6. '   ' → logprob: -5.216979503631592
    7. 'max' → logprob: -5.591979503631592
    8. ' we' → logprob: -5.966979503631592
    9. '       ' → logprob: -6.091979503631592
    10. '#' → logprob: -6.966979503631592

Token 742: ' cost' (ID: 3097)
  Prédit: '_mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mp' → logprob: -0.45974454283714294
    2. '_cost' → logprob: -1.0847445726394653
    3. '_MP' → logprob: -3.959744453430176
    4. '_damage' → logprob: -5.209744453430176
    5. '_dp' → logprob: -5.584744453430176
    6. 'cost' → logprob: -7.459744453430176
    7. ' =' → logprob: -8.084744453430176
    8. '_' → logprob: -8.334744453430176
    9. '_sp' → logprob: -8.459744453430176
    10. '_magic' → logprob: -8.584744453430176

Token 743: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20513243973255157
    2. ':' → logprob: -2.955132484436035
    3. ',' → logprob: -3.580132484436035
    4. '_dp' → logprob: -3.955132484436035
    5. '_to' → logprob: -4.080132484436035
    6. '=' → logprob: -4.080132484436035
    7. '   ' → logprob: -4.330132484436035
    8. '_' → logprob: -4.580132484436035
    9. 's' → logprob: -5.580132484436035
    10. '_map' → logprob: -6.080132484436035

Token 744: ' computed' (ID: 46716)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8158538341522217
    2. '{' → logprob: -1.0658538341522217
    3. '0' → logprob: -2.4408538341522217
    4. ' [' → logprob: -3.1908538341522217
    5. ' {' → logprob: -3.6908538341522217
    6. '{}' → logprob: -3.6908538341522217
    7. 'dp' → logprob: -3.8158538341522217
    8. ' =' → logprob: -5.815854072570801
    9. ' {}' → logprob: -6.440854072570801
    10. 'inf' → logprob: -6.565854072570801

Token 745: '.

' (ID: 364)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14927740395069122
    2. '=' → logprob: -2.899277448654175
    3. '   ' → logprob: -3.024277448654175
    4. ':' → logprob: -3.774277448654175
    5. ',' → logprob: -5.524277210235596
    6. 'for' → logprob: -6.774277210235596
    7. '[' → logprob: -6.774277210235596
    8. ' for' → logprob: -7.024277210235596
    9. '.' → logprob: -7.149277210235596
    10. ' =
' → logprob: -7.274277210235596

Token 746: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010233971290290356
    2. 'dp' → logprob: -4.8852338790893555
    3. '   ' → logprob: -6.7602338790893555
    4. '
' → logprob: -7.6352338790893555
    5. '```' → logprob: -7.8852338790893555
    6. 'from' → logprob: -8.510233879089355
    7. ' dp' → logprob: -9.510233879089355
    8. ',' → logprob: -9.885233879089355
    9. '#' → logprob: -10.010233879089355
    10. '        
' → logprob: -10.135233879089355

Token 747: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18288755416870117
    2. 'dp' → logprob: -1.8078875541687012
    3. 'from' → logprob: -7.057887554168701
    4. '   ' → logprob: -7.307887554168701
    5. 'all' → logprob: -7.557887554168701
    6. '#' (adapté à ' #') → logprob: -8.30788803100586
    7. ' dp' → logprob: -8.80788803100586
    8. 'DP' → logprob: -8.93288803100586
    9. '
' → logprob: -8.93288803100586
    10. 'max' → logprob: -9.30788803100586

Token 748: ' Then' (ID: 7801)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.038644369691610336
    2. 'max' → logprob: -3.913644313812256
    3. 'from' → logprob: -4.788644313812256
    4. 'all' → logprob: -4.913644313812256
    5. 'damage' → logprob: -6.913644313812256
    6. '#' → logprob: -7.538644313812256
    7. '   ' → logprob: -8.163644790649414
    8. 'DP' → logprob: -8.913644790649414
    9. '       ' → logprob: -9.163644790649414
    10. 'for' → logprob: -9.788644790649414

Token 749: ' for' (ID: 395)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3902778625488281
    2. 'for' → logprob: -1.8902778625488281
    3. '       ' → logprob: -2.265277862548828
    4. ' for' → logprob: -3.890277862548828
    5. 'dp' → logprob: -4.265277862548828
    6. 'max' → logprob: -4.390277862548828
    7. 'import' → logprob: -5.515277862548828
    8. ' #' → logprob: -6.140277862548828
    9. 'min' → logprob: -6.265277862548828
    10. 'best' → logprob: -6.390277862548828

Token 750: ' given' (ID: 4335)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8001980185508728
    2. 'D' → logprob: -0.9251980185508728
    3. ' D' → logprob: -3.1751980781555176
    4. ' d' → logprob: -3.3001980781555176
    5. 'res' → logprob: -3.4251980781555176
    6. ' residual' → logprob: -4.550198078155518
    7. 'damage' → logprob: -5.175198078155518
    8. 'each' → logprob: -5.800198078155518
    9. ' each' → logprob: -5.800198078155518
    10. 'remaining' → logprob: -5.925198078155518

Token 751: ' D' (ID: 415)
  Prédit: ' D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.5924547910690308
    2. ' total' → logprob: -1.7174547910690308
    3. ' all' → logprob: -2.4674549102783203
    4. ' damage' → logprob: -2.8424549102783203
    5. 'damage' → logprob: -3.9674549102783203
    6. ' d' → logprob: -3.9674549102783203
    7. '_damage' → logprob: -4.09245491027832
    8. 'D' → logprob: -4.21745491027832
    9. ' _' → logprob: -4.59245491027832
    10. '_' → logprob: -4.84245491027832

Token 752: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09903665632009506
    2. ')' → logprob: -3.974036693572998
    3. '),' → logprob: -4.224036693572998
    4. ' in' → logprob: -4.474036693572998
    5. ':' → logprob: -4.599036693572998
    6. ' ,' → logprob: -4.724036693572998
    7. ' =' → logprob: -5.599036693572998
    8. ' to' → logprob: -5.724036693572998
    9. '   ' → logprob: -5.974036693572998
    10. '_max' → logprob: -6.099036693572998

Token 753: ' the' (ID: 290)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9314068555831909
    2. '       ' → logprob: -2.0564069747924805
    3. 'for' → logprob: -2.0564069747924805
    4. ' residual' → logprob: -2.3064069747924805
    5. '#' → logprob: -2.9314069747924805
    6. ' single' → logprob: -3.1814069747924805
    7. 'res' → logprob: -3.4314069747924805
    8. ' min' → logprob: -3.4314069747924805
    9. ' minimal' → logprob: -4.0564069747924805
    10. ' #' → logprob: -4.6814069747924805

Token 754: ' residual' (ID: 54782)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7209627628326416
    2. '#' → logprob: -1.3459627628326416
    3. 'remaining' → logprob: -2.9709627628326416
    4. ' residual' → logprob: -3.2209627628326416
    5. 'single' → logprob: -3.4709627628326416
    6. 'min' → logprob: -3.9709627628326416
    7. 'cost' → logprob: -4.4709625244140625
    8. 'rest' → logprob: -4.4709625244140625
    9. ' single' → logprob: -4.8459625244140625
    10. ' #' → logprob: -4.8459625244140625

Token 755: ' HP' (ID: 21979)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.512434720993042
    2. ' _' → logprob: -2.137434720993042
    3. '_damage' → logprob: -2.262434720993042
    4. '_hp' → logprob: -2.387434720993042
    5. '_cost' → logprob: -4.012434959411621
    6. '_HP' → logprob: -4.512434959411621
    7. ' HP' → logprob: -4.512434959411621
    8. '_d' → logprob: -4.762434959411621
    9. ' damage' → logprob: -4.762434959411621
    10. ')' → logprob: -5.512434959411621

Token 756: '[i' (ID: 1768)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.031294334679841995
    2. 's' → logprob: -4.531294345855713
    3. ' =' → logprob: -5.156294345855713
    4. '_remaining' → logprob: -5.281294345855713
    5. '_rem' → logprob: -5.781294345855713
    6. '_needed' → logprob: -6.406294345855713
    7. 'left' → logprob: -6.656294345855713
    8. '_re' → logprob: -7.156294345855713
    9. '_required' → logprob: -7.906294345855713
    10. '=' → logprob: -8.031293869018555

Token 757: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.571649968624115
    2. '_left' → logprob: -0.946649968624115
    3. 'left' → logprob: -4.32165002822876
    4. '_remaining' → logprob: -4.94665002822876
    5. ']=' → logprob: -5.32165002822876
    6. '[i' → logprob: -5.69665002822876
    7. ']_' → logprob: -6.19665002822876
    8. ')' → logprob: -6.44665002822876
    9. 's' → logprob: -6.57165002822876
    10. '],' → logprob: -6.69665002822876

Token 758: ' are' (ID: 553)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.11177078634500504
    2. ' =' → logprob: -2.7367708683013916
    3. '=' → logprob: -4.4867706298828125
    4. 'left' → logprob: -4.4867706298828125
    5. '_remaining' → logprob: -4.6117706298828125
    6. 's' → logprob: -5.7367706298828125
    7. '_rem' → logprob: -6.7367706298828125
    8. ']' → logprob: -7.4867706298828125
    9. '[i' → logprob: -7.6117706298828125
    10. '_' → logprob: -7.8617706298828125

Token 759: ' HP' (ID: 21979)
  Prédit: '[max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[max' → logprob: -0.4933623671531677
    2. '[' → logprob: -1.3683624267578125
    3. ' [' → logprob: -2.7433624267578125
    4. 'max' → logprob: -2.9933624267578125
    5. ' max' → logprob: -5.2433624267578125
    6. '[i' → logprob: -5.4933624267578125
    7. ' =' → logprob: -5.6183624267578125
    8. '   ' → logprob: -6.3683624267578125
    9. '=max' → logprob: -6.4933624267578125
    10. ')' → logprob: -7.1183624267578125

Token 760: '[i' (ID: 1768)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.14411205053329468
    2. '_' → logprob: -2.8941121101379395
    3. '_remaining' → logprob: -3.3941121101379395
    4. ' -' → logprob: -4.7691121101379395
    5. 'left' → logprob: -4.8941121101379395
    6. ' =' → logprob: -5.2691121101379395
    7. '[i' → logprob: -5.5191121101379395
    8. '   ' → logprob: -5.5191121101379395
    9. '-' → logprob: -6.0191121101379395
    10. ')' → logprob: -6.0191121101379395

Token 761: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5514592528343201
    2. ']' → logprob: -1.4264593124389648
    3. '-' → logprob: -1.8014593124389648
    4. '[i' → logprob: -5.051459312438965
    5. '       ' → logprob: -5.426459312438965
    6. ']-' → logprob: -6.176459312438965
    7. ')' → logprob: -6.426459312438965
    8. '           ' → logprob: -6.926459312438965
    9. '],' → logprob: -7.926459312438965
    10. ' ]' → logprob: -8.176459312438965

Token 762: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.026325615122914314
    2. ' D' → logprob: -3.6513257026672363
    3. 'max' → logprob: -11.151325225830078
    4. 'd' → logprob: -12.026325225830078
    5. ' max' → logprob: -13.151325225830078
    6. ' ' → logprob: -13.776325225830078
    7. 'min' → logprob: -14.776325225830078
    8. '   ' → logprob: -15.526325225830078
    9. '	D' → logprob: -15.651325225830078
    10. '```' → logprob: -15.651325225830078

Token 763: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.859751284122467
    2. ' =' → logprob: -1.1097512245178223
    3. '   ' → logprob: -2.1097512245178223
    4. '=' → logprob: -3.1097512245178223
    5. '       ' → logprob: -3.1097512245178223
    6. ')' → logprob: -4.859751224517822
    7. '
' → logprob: -5.109751224517822
    8. ':
' → logprob: -5.859751224517822
    9. ',' → logprob: -5.984751224517822
    10. '):' → logprob: -6.484751224517822

Token 764: 'min' (ID: 1493)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8756695985794067
    2. ',' → logprob: -1.5006695985794067
    3. ')' → logprob: -1.6256695985794067
    4. '),' → logprob: -2.500669479370117
    5. 'if' → logprob: -2.875669479370117
    6. ')
' → logprob: -4.625669479370117
    7. '       ' → logprob: -5.625669479370117
    8. ' or' → logprob: -6.125669479370117
    9. '
' → logprob: -6.375669479370117
    10. ').' → logprob: -6.875669479370117

Token 765: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4064999520778656
    2. ',' → logprob: -1.781499981880188
    3. '(' → logprob: -2.5314998626708984
    4. ')' → logprob: -3.2814998626708984
    5. 'def' → logprob: -4.656499862670898
    6. '       ' → logprob: -5.156499862670898
    7. 'imum' → logprob: -5.281499862670898
    8. '```' → logprob: -5.531499862670898
    9. ' =' → logprob: -5.656499862670898
    10. '0' → logprob: -5.781499862670898

Token 766: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35230958461761475
    2. '(' → logprob: -1.8523095846176147
    3. '0' → logprob: -2.2273097038269043
    4. ',' → logprob: -3.9773097038269043
    5. ' =' → logprob: -4.727309703826904
    6. ')' → logprob: -6.352309703826904
    7. '```' → logprob: -7.602309703826904
    8. 'def' → logprob: -7.727309703826904
    9. ' (' → logprob: -8.227309226989746
    10. '1' → logprob: -8.352309226989746

Token 767: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08007106930017471
    2. ',' → logprob: -3.205070972442627
    3. '),' → logprob: -3.830070972442627
    4. ' )' → logprob: -5.205070972442627
    5. '       ' → logprob: -5.330070972442627
    6. ' ,' → logprob: -7.080070972442627
    7. ').' → logprob: -7.205070972442627
    8. '))' → logprob: -7.580070972442627
    9. ')
' → logprob: -7.830070972442627
    10. '>' → logprob: -8.580071449279785

Token 768: ' sum' (ID: 4215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2706012725830078
    2. ')' → logprob: -2.895601272583008
    3. ':' → logprob: -3.020601272583008
    4. ' =' → logprob: -3.270601272583008
    5. ',' → logprob: -4.395601272583008
    6. ' and' → logprob: -4.520601272583008
    7. '        ' → logprob: -4.645601272583008
    8. '=' → logprob: -4.770601272583008
    9. '   ' → logprob: -5.020601272583008
    10. ' for' → logprob: -5.520601272583008

Token 769: ' single' (ID: 4590)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17949211597442627
    2. '_cost' → logprob: -2.8044919967651367
    3. '_res' → logprob: -3.3044919967651367
    4. '_single' → logprob: -4.054491996765137
    5. '       ' → logprob: -4.679491996765137
    6. ' =' → logprob: -5.304491996765137
    7. '   ' → logprob: -5.304491996765137
    8. '_remaining' → logprob: -5.429491996765137
    9. '_hp' → logprob: -5.804491996765137
    10. '_required' → logprob: -6.179491996765137

Token 770: ' cost' (ID: 3097)
  Prédit: '_target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.018184125423431396
    2. ' _' → logprob: -4.893184185028076
    3. '_' → logprob: -5.518184185028076
    4. ' -' → logprob: -6.018184185028076
    5. '-target' → logprob: -6.393184185028076
    6. '-' → logprob: -6.893184185028076
    7. '_targets' → logprob: -7.768184185028076
    8. 'target' → logprob: -8.143183708190918
    9. '-_' → logprob: -8.893183708190918
    10. '_single' → logprob: -9.143183708190918

Token 771: ' accordingly' (ID: 44041)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3533698618412018
    2. '_' → logprob: -2.103369951248169
    3. '       ' → logprob: -2.853369951248169
    4. '_dp' → logprob: -3.228369951248169
    5. '_max' → logprob: -3.853369951248169
    6. '   ' → logprob: -4.10336971282959
    7. '=' → logprob: -4.47836971282959
    8. ':' → logprob: -4.97836971282959
    9. '_cost' → logprob: -6.22836971282959
    10. ',' → logprob: -6.47836971282959

Token 772: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.722885251045227
    2. '   ' → logprob: -1.597885251045227
    3. '
' → logprob: -1.847885251045227
    4. ':' → logprob: -3.5978851318359375
    5. ' =' → logprob: -4.0978851318359375
    6. ',' → logprob: -4.4728851318359375
    7. 'def' → logprob: -4.5978851318359375
    8. 'max' → logprob: -4.5978851318359375
    9. '\n' → logprob: -4.8478851318359375
    10. '_max' → logprob: -4.8478851318359375

Token 773: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13058927655220032
    2. '
' → logprob: -2.255589246749878
    3. '   ' → logprob: -4.755589485168457
    4. '        
' → logprob: -6.255589485168457
    5. '```' → logprob: -6.880589485168457
    6. ',' → logprob: -7.005589485168457
    7. ' =' → logprob: -7.380589485168457
    8. ',
' → logprob: -7.380589485168457
    9. '\n' → logprob: -7.505589485168457
    10. '\' → logprob: -7.755589485168457

Token 774: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17130646109580994
    2. '
' → logprob: -2.5463063716888428
    3. '   ' → logprob: -4.171306610107422
    4. '\n' → logprob: -4.171306610107422
    5. '\' → logprob: -4.546306610107422
    6. ' =' → logprob: -4.671306610107422
    7. ',' → logprob: -5.046306610107422
    8. '#' (adapté à ' #') → logprob: -5.546306610107422
    9. '        
' → logprob: -6.171306610107422
    10. ')' → logprob: -6.171306610107422

Token 775: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.370253324508667
    2. '
' → logprob: -1.870253324508667
    3. '   ' → logprob: -1.870253324508667
    4. '#' → logprob: -2.370253324508667
    5. ':
' → logprob: -2.870253324508667
    6. ':' → logprob: -3.245253324508667
    7. 'max' → logprob: -3.495253324508667
    8. 'dp' → logprob: -3.495253324508667
    9. '\' → logprob: -3.620253324508667
    10. ',' → logprob: -3.995253324508667

Token 776: ' take' (ID: 2304)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0940682888031006
    2. ' continue' → logprob: -1.5940682888031006
    3. ' can' → logprob: -1.9690682888031006
    4. '=' → logprob: -2.3440682888031006
    5. ' =' → logprob: -3.0940682888031006
    6. 'continue' → logprob: -3.3440682888031006
    7. '   ' → logprob: -3.5940682888031006
    8. ' will' → logprob: -4.34406852722168
    9. '       ' → logprob: -4.59406852722168
    10. '.' → logprob: -4.59406852722168

Token 777: ' minimal' (ID: 19957)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.837451159954071
    2. ' _' → logprob: -1.7124512195587158
    3. ' the' → logprob: -1.8374512195587158
    4. ' max' → logprob: -2.212451219558716
    5. 'max' → logprob: -2.962451219558716
    6. 'the' → logprob: -3.212451219558716
    7. ' a' → logprob: -5.212450981140137
    8. ' ' → logprob: -6.087450981140137
    9. '_d' → logprob: -6.212450981140137
    10. ' all' → logprob: -6.337450981140137

Token 778: ' MP' (ID: 14857)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0041407374665141106
    2. ' _' → logprob: -6.004140853881836
    3. ' =' → logprob: -7.629140853881836
    4. '_
' → logprob: -8.254140853881836
    5. ' ' → logprob: -8.504140853881836
    6. '_cost' → logprob: -8.754140853881836
    7. '=' → logprob: -8.754140853881836
    8. '  ' → logprob: -10.379140853881836
    9. '_)' → logprob: -10.629140853881836
    10. '_,' → logprob: -10.629140853881836

Token 779: ' cost' (ID: 3097)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9420998692512512
    2. '   ' → logprob: -1.1920998096466064
    3. '_' → logprob: -2.4420998096466064
    4. '       ' → logprob: -3.0670998096466064
    5. '
' → logprob: -3.1920998096466064
    6. 'def' → logprob: -3.9420998096466064
    7. ' _' → logprob: -4.1921000480651855
    8. '=' → logprob: -4.3171000480651855
    9. '[' → logprob: -4.5671000480651855
    10. ' 
' → logprob: -4.6921000480651855

Token 780: ' over' (ID: 1072)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28418073058128357
    2. '[' → logprob: -2.2841806411743164
    3. '   ' → logprob: -3.4091806411743164
    4. '=' → logprob: -3.7841806411743164
    5. ' =' → logprob: -3.7841806411743164
    6. '_
' → logprob: -4.534180641174316
    7. '[
' → logprob: -4.534180641174316
    8. '       ' → logprob: -4.909180641174316
    9. ':' → logprob: -5.159180641174316
    10. ',' → logprob: -5.284180641174316

Token 781: ' all' (ID: 722)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.1850571632385254
    2. ' all' → logprob: -1.3100571632385254
    3. ' D' → logprob: -1.8100571632385254
    4. 'all' → logprob: -2.4350571632385254
    5. ' d' → logprob: -2.8100571632385254
    6. 'range' → logprob: -2.8100571632385254
    7. 'D' → logprob: -3.8100571632385254
    8. 'd' → logprob: -4.310057163238525
    9. ' possible' → logprob: -5.310057163238525
    10. 'possible' → logprob: -6.310057163238525

Token 782: ' possible' (ID: 4149)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4631962478160858
    2. ' _' → logprob: -1.4631962776184082
    3. ' =' → logprob: -2.713196277618408
    4. '   ' → logprob: -4.088196277618408
    5. '_sp' → logprob: -4.588196277618408
    6. ' ' → logprob: -5.338196277618408
    7. 'for' → logprob: -5.463196277618408
    8. '=' → logprob: -5.713196277618408
    9. 'def' → logprob: -5.963196277618408
    10. '    ' → logprob: -5.963196277618408

Token 783: ' D' (ID: 415)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43989941477775574
    2. ' _' → logprob: -1.5648994445800781
    3. '_sp' → logprob: -2.814899444580078
    4. '_damage' → logprob: -3.439899444580078
    5. '_d' → logprob: -3.564899444580078
    6. '_spell' → logprob: -5.564899444580078
    7. '_dp' → logprob: -5.564899444580078
    8. '_all' → logprob: -5.939899444580078
    9. ' =' → logprob: -6.564899444580078
    10. '_possible' → logprob: -6.564899444580078

Token 784: '.

' (ID: 364)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.129504919052124
    2. ':' → logprob: -1.379504919052124
    3. '
' → logprob: -2.504504919052124
    4. '   ' → logprob: -2.504504919052124
    5. ',' → logprob: -2.754504919052124
    6. '[' → logprob: -3.379504919052124
    7. ' ' → logprob: -4.254505157470703
    8. '\' → logprob: -4.379505157470703
    9. ' _' → logprob: -4.504505157470703
    10. '#' → logprob: -4.504505157470703

Token 785: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5212327241897583
    2. '   ' → logprob: -1.2712327241897583
    3. '
' → logprob: -2.7712326049804688
    4. '    
' → logprob: -4.396232604980469
    5. '        
' → logprob: -4.646232604980469
    6. '\n' → logprob: -4.646232604980469
    7. '\' → logprob: -4.771232604980469
    8. ' 
' → logprob: -5.271232604980469
    9. 'def' → logprob: -5.521232604980469
    10. '  
' → logprob: -6.021232604980469

Token 786: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7423896789550781
    2. '       ' → logprob: -1.2423896789550781
    3. '   ' → logprob: -1.9923896789550781
    4. 'dp' → logprob: -3.242389678955078
    5. 'max' → logprob: -3.617389678955078
    6. '\n' → logprob: -4.992389678955078
    7. ' max' → logprob: -5.242389678955078
    8. '\' → logprob: -5.492389678955078
    9. ' dp' → logprob: -5.742389678955078
    10. '        
' → logprob: -5.992389678955078

Token 787: ' To' (ID: 2514)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4043559730052948
    2. 'dp' → logprob: -1.7793560028076172
    3. '   ' → logprob: -2.654356002807617
    4. 'all' → logprob: -3.404356002807617
    5. '#' → logprob: -3.654356002807617
    6. '       ' → logprob: -4.404356002807617
    7. '
' → logprob: -5.279356002807617
    8. '\' → logprob: -6.279356002807617
    9. 'from' → logprob: -6.404356002807617
    10. 'd' → logprob: -6.529356002807617

Token 788: ' limit' (ID: 5967)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.2932429909706116
    2. 'continue' → logprob: -2.918242931365967
    3. ' ' → logprob: -3.168242931365967
    4. '_' → logprob: -3.793242931365967
    5. 'consider' → logprob: -4.418242931365967
    6. ' maximize' → logprob: -4.418242931365967
    7. ' consider' → logprob: -4.543242931365967
    8. '#' → logprob: -4.668242931365967
    9. '[
' → logprob: -4.793242931365967
    10. 'max' → logprob: -5.168242931365967

Token 789: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.06988708674907684
    2. 'the' → logprob: -2.819887161254883
    3. ' damage' → logprob: -5.944887161254883
    4. ' memory' → logprob: -6.569887161254883
    5. 'D' → logprob: -7.194887161254883
    6. ' search' → logprob: -7.569887161254883
    7. ' D' → logprob: -7.694887161254883
    8. ' ' → logprob: -7.819887161254883
    9. 'damage' → logprob: -8.069887161254883
    10. ' states' → logprob: -8.444887161254883

Token 790: ' search' (ID: 3684)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'damage' → logprob: -0.13998179137706757
    2. ' damage' → logprob: -3.014981746673584
    3. 'D' → logprob: -3.264981746673584
    4. 'd' → logprob: -4.264981746673584
    5. 'max' → logprob: -4.389981746673584
    6. 'dp' → logprob: -5.264981746673584
    7. '_damage' → logprob: -6.014981746673584
    8. 'DP' → logprob: -6.014981746673584
    9. 'dam' → logprob: -6.764981746673584
    10. '_D' → logprob: -7.139981746673584

Token 791: ' space' (ID: 4918)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.085541009902954
    2. ' ' → logprob: -1.710541009902954
    3. '       ' → logprob: -1.710541009902954
    4. '_' → logprob: -2.835541009902954
    5. '   ' → logprob: -3.085541009902954
    6. ':' → logprob: -3.210541009902954
    7. ' _' → logprob: -3.710541009902954
    8. ' space' → logprob: -3.710541009902954
    9. '=' → logprob: -3.835541009902954
    10. 'space' → logprob: -4.335540771484375

Token 792: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8563868999481201
    2. ' =' → logprob: -1.7313868999481201
    3. ',' → logprob: -2.23138689994812
    4. '=' → logprob: -2.48138689994812
    5. '   ' → logprob: -2.98138689994812
    6. 'import' → logprob: -3.35638689994812
    7. '[' → logprob: -3.85638689994812
    8. 'for' → logprob: -4.481387138366699
    9. '#' → logprob: -4.606387138366699
    10. ' for' → logprob: -4.856387138366699

Token 793: ' we' (ID: 581)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.5227024555206299
    2. 'max' → logprob: -2.02270245552063
    3. ' for' → logprob: -2.14770245552063
    4. ' we' → logprob: -2.52270245552063
    5. 'for' → logprob: -2.77270245552063
    6. 'import' → logprob: -2.89770245552063
    7. ' import' → logprob: -3.14770245552063
    8. 'dp' → logprob: -3.14770245552063
    9. ' dp' → logprob: -3.27270245552063
    10. '   ' → logprob: -3.27270245552063

Token 794: ' note' (ID: 7477)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.832845151424408
    2. ' continue' → logprob: -1.4578452110290527
    3. ' =' → logprob: -1.7078452110290527
    4. 'continue' → logprob: -3.0828452110290527
    5. 'can' → logprob: -3.3328452110290527
    6. '=' → logprob: -3.8328452110290527
    7. ' will' → logprob: -4.957845211029053
    8. 'limit' → logprob: -5.082845211029053
    9. '#' → logprob: -5.207845211029053
    10. 'max' → logprob: -5.332845211029053

Token 795: ' the' (ID: 290)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.9600931406021118
    2. ' =' → logprob: -2.0850930213928223
    3. 'max' → logprob: -2.4600930213928223
    4. '   ' → logprob: -2.5850930213928223
    5. 'that' → logprob: -3.0850930213928223
    6. '       ' → logprob: -3.4600930213928223
    7. '#' → logprob: -3.5850930213928223
    8. '_' → logprob: -3.7100930213928223
    9. '=' → logprob: -3.7100930213928223
    10. ' we' → logprob: -3.8350930213928223

Token 796: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6203486323356628
    2. ' maximum' → logprob: -2.6203486919403076
    3. '#' → logprob: -2.7453486919403076
    4. 'maximum' → logprob: -2.8703486919403076
    5. ' max' → logprob: -2.9953486919403076
    6. '_' → logprob: -3.4953486919403076
    7. ' maximal' → logprob: -3.4953486919403076
    8. '_max' → logprob: -3.7453486919403076
    9. ''' → logprob: -3.8703486919403076
    10. ' =' → logprob: -4.2453484535217285

Token 797: ' HP' (ID: 21979)
  Prédit: '_damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_damage' → logprob: -0.021904105320572853
    2. '_' → logprob: -4.646903991699219
    3. 'damage' → logprob: -5.646903991699219
    4. '_d' → logprob: -6.146903991699219
    5. 'Damage' → logprob: -6.646903991699219
    6. '_all' → logprob: -6.896903991699219
    7. ' _' → logprob: -6.896903991699219
    8. '_D' → logprob: -7.021903991699219
    9. '_possible' → logprob: -7.146903991699219
    10. ' damage' → logprob: -7.771903991699219

Token 798: ' max' (ID: 2999)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5952174663543701
    2. ' =' → logprob: -1.3452174663543701
    3. '=' → logprob: -2.59521746635437
    4. '_max' → logprob: -2.97021746635437
    5. 's' → logprob: -5.095217704772949
    6. '[' → logprob: -5.220217704772949
    7. ')' → logprob: -5.345217704772949
    8. '   ' → logprob: -5.345217704772949
    9. ' _' → logprob: -5.470217704772949
    10. ':' → logprob: -5.470217704772949

Token 799: 'HP' (ID: 11269)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02391473576426506
    2. ' =' → logprob: -4.398914813995361
    3. '_hp' → logprob: -5.273914813995361
    4. '=' → logprob: -6.523914813995361
    5. '_damage' → logprob: -7.023914813995361
    6. '_val' → logprob: -7.273914813995361
    7. '_HP' → logprob: -7.773914813995361
    8. '_
' → logprob: -7.773914813995361
    9. ')' → logprob: -8.148914337158203
    10. '_=' → logprob: -8.273914337158203

Token 800: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7362134456634521
    2. '_' → logprob: -0.9862134456634521
    3. '=' → logprob: -2.736213445663452
    4. ']' → logprob: -3.486213445663452
    5. ')' → logprob: -4.111213684082031
    6. '_max' → logprob: -4.611213684082031
    7. '   ' → logprob: -5.361213684082031
    8. ':' → logprob: -5.486213684082031
    9. '=max' → logprob: -5.861213684082031
    10. '```' → logprob: -6.361213684082031

Token 801: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5264983773231506
    2. ' max' → logprob: -0.9014983773231506
    3. '=max' → logprob: -6.526498317718506
    4. '   ' → logprob: -7.526498317718506
    5. ' =' → logprob: -7.526498317718506
    6. '100' → logprob: -7.901498317718506
    7. '=' → logprob: -8.901498794555664
    8. '`' → logprob: -9.026498794555664
    9. '```' → logprob: -9.776498794555664
    10. ' ' → logprob: -10.276498794555664

Token 802: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020567815750837326
    2. '(
' → logprob: -4.895567893981934
    3. '_HP' → logprob: -5.395567893981934
    4. '_' → logprob: -5.645567893981934
    5. 'HP' → logprob: -6.145567893981934
    6. '_hp' → logprob: -7.270567893981934
    7. ' (' → logprob: -7.895567893981934
    8. ')' → logprob: -8.270567893981934
    9. '(H' → logprob: -8.645567893981934
    10. '(max' → logprob: -8.645567893981934

Token 803: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.23112186789512634
    2. '(' → logprob: -1.6061218976974487
    3. ')' → logprob: -6.106122016906738
    4. ' HP' → logprob: -6.106122016906738
    5. ' (' → logprob: -8.106122016906738
    6. '_HP' → logprob: -8.356122016906738
    7. 'max' → logprob: -8.481122016906738
    8. '   ' → logprob: -8.731122016906738
    9. '(H' → logprob: -9.481122016906738
    10. '(max' → logprob: -10.106122016906738

Token 804: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09117067605257034
    2. '])' → logprob: -3.4661707878112793
    3. ']' → logprob: -3.8411707878112793
    4. ')
' → logprob: -4.466170787811279
    5. ')+' → logprob: -4.466170787811279
    6. '[i' → logprob: -5.966170787811279
    7. '))' → logprob: -6.091170787811279
    8. ')]' → logprob: -6.591170787811279
    9. ']+' → logprob: -7.341170787811279
    10. '   ' → logprob: -7.716170787811279

Token 805: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6559164524078369
    2. '_max' → logprob: -1.530916452407837
    3. '   ' → logprob: -2.655916452407837
    4. '_' → logprob: -2.780916452407837
    5. '       ' → logprob: -3.030916452407837
    6. '
' → logprob: -3.905916452407837
    7. ')' → logprob: -4.405916213989258
    8. 'max' → logprob: -4.530916213989258
    9. '=' → logprob: -5.030916213989258
    10. ',' → logprob: -5.155916213989258

Token 806: ' max' (ID: 2999)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.141482949256897
    2. ' =' → logprob: -1.141482949256897
    3. '       ' → logprob: -1.891482949256897
    4. 'max' (adapté à ' max') → logprob: -2.6414828300476074
    5. '_max' → logprob: -3.2664828300476074
    6. '=' → logprob: -3.7664828300476074
    7. '
' → logprob: -4.266482830047607
    8. ':' → logprob: -4.391482830047607
    9. ' max' → logprob: -4.391482830047607
    10. ',' → logprob: -4.516482830047607

Token 807: 'HP' (ID: 11269)
  Prédit: '_HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_HP' → logprob: -0.1708555817604065
    2. 'HP' → logprob: -2.1708555221557617
    3. '_hp' → logprob: -3.7958555221557617
    4. '_damage' → logprob: -4.420855522155762
    5. '_DAMAGE' → logprob: -5.920855522155762
    6. '_' → logprob: -6.170855522155762
    7. '_D' → logprob: -6.420855522155762
    8. '_H' → logprob: -7.545855522155762
    9. 'Damage' → logprob: -8.045855522155762
    10. 'D' → logprob: -8.545855522155762

Token 808: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4968438446521759
    2. '=' → logprob: -0.9968438148498535
    3. '+' → logprob: -4.1218438148498535
    4. ' +' → logprob: -5.4968438148498535
    5. '   ' → logprob: -6.8718438148498535
    6. ')' → logprob: -7.1218438148498535
    7. '=max' → logprob: -8.871844291687012
    8. ' +=' → logprob: -9.996844291687012
    9. '    ' → logprob: -10.121844291687012
    10. ',' → logprob: -10.121844291687012

Token 809: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.160427525639534
    2. 'max' → logprob: -1.9104275703430176
    3. '   ' → logprob: -9.28542709350586
    4. '100' → logprob: -9.28542709350586
    5. ' ' → logprob: -11.91042709350586
    6. '10' → logprob: -12.66042709350586
    7. '(max' → logprob: -13.28542709350586
    8. '0' → logprob: -13.41042709350586
    9. '=max' → logprob: -13.53542709350586
    10. '    ' → logprob: -14.16042709350586

Token 810: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007250601192936301
    2. 'HP' → logprob: -8.000724792480469
    3. '(
' → logprob: -8.625724792480469
    4. ' (' → logprob: -8.875724792480469
    5. '_HP' → logprob: -10.250724792480469
    6. ')' → logprob: -11.625724792480469
    7. '_hp' → logprob: -12.625724792480469
    8. '(H' → logprob: -12.625724792480469
    9. '(`' → logprob: -13.125724792480469
    10. '   ' → logprob: -13.250724792480469

Token 811: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.0011437878711149096
    2. ')' → logprob: -7.626143932342529
    3. ' HP' → logprob: -8.001143455505371
    4. '(' → logprob: -8.126143455505371
    5. '_HP' → logprob: -11.501143455505371
    6. '   ' → logprob: -12.251143455505371
    7. ',' → logprob: -12.876143455505371
    8. ' )' → logprob: -13.251143455505371
    9. ')
' → logprob: -14.126143455505371
    10. '(H' → logprob: -14.376143455505371

Token 812: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35493966937065125
    2. '+' → logprob: -1.7299396991729736
    3. ')+' → logprob: -2.4799396991729736
    4. ' +' → logprob: -3.3549396991729736
    5. ')
' → logprob: -6.1049394607543945
    6. '       ' → logprob: -8.354939460754395
    7. '   ' → logprob: -8.854939460754395
    8. ' )' → logprob: -8.854939460754395
    9. '
' → logprob: -10.604939460754395
    10. ',' → logprob: -10.979939460754395

Token 813: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4165676534175873
    2. '
' → logprob: -1.6665676832199097
    3. 'dp' → logprob: -2.91656756401062
    4. 'max' → logprob: -3.41656756401062
    5. '   ' → logprob: -3.66656756401062
    6. ',' → logprob: -4.166567802429199
    7. '        
' → logprob: -5.666567802429199
    8. 'possible' → logprob: -5.666567802429199
    9. ' max' → logprob: -6.041567802429199
    10. ' dp' → logprob: -6.291567802429199

Token 814: ' all' (ID: 722)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13275021314620972
    2. '       ' → logprob: -3.1327502727508545
    3. 'max' → logprob: -3.1327502727508545
    4. 'all' (adapté à ' all') → logprob: -3.8827502727508545
    5. 'DP' → logprob: -5.382750034332275
    6. 'from' → logprob: -5.882750034332275
    7. 'single' → logprob: -6.507750034332275
    8. 'INF' → logprob: -6.507750034332275
    9. 'min' → logprob: -6.757750034332275
    10. '#' → logprob: -6.882750034332275

Token 815: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.010050006210803986
    2. '_all' → logprob: -4.885049819946289
    3. '_damage' → logprob: -6.635049819946289
    4. '_cost' → logprob: -7.385049819946289
    5. '_mp' → logprob: -9.260049819946289
    6. 'sp' → logprob: -9.385049819946289
    7. '_spell' → logprob: -9.385049819946289
    8. '_dp' → logprob: -9.635049819946289
    9. '_d' → logprob: -9.760049819946289
    10. 'all' → logprob: -10.135049819946289

Token 816: 'ells' (ID: 9703)
  Prédit: 'ells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ells' → logprob: -0.001949344645254314
    2. 'ell' → logprob: -6.876949310302734
    3. '=' → logprob: -7.501949310302734
    4. 'e' → logprob: -9.626949310302734
    5. ' =' → logprob: -9.876949310302734
    6. '_' → logprob: -10.376949310302734
    7. '_all' → logprob: -10.876949310302734
    8. 'els' → logprob: -10.876949310302734
    9. 'el' → logprob: -11.251949310302734
    10. '   ' → logprob: -11.251949310302734

Token 817: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.444261759519577
    2. '_dp' → logprob: -1.5692617893218994
    3. '_cost' → logprob: -2.8192617893218994
    4. '=' → logprob: -2.9442617893218994
    5. '_d' → logprob: -4.31926155090332
    6. '_damage' → logprob: -4.44426155090332
    7. 's' → logprob: -5.81926155090332
    8. '_usage' → logprob: -5.94426155090332
    9. '=[]' → logprob: -6.44426155090332
    10. 'dp' → logprob: -6.56926155090332

Token 818: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.358401358127594
    2. '[(' → logprob: -2.108401298522949
    3. '[]
' → logprob: -2.358401298522949
    4. '[s' → logprob: -3.358401298522949
    5. '[t' → logprob: -4.108401298522949
    6. '[i' → logprob: -4.733401298522949
    7. '[j' → logprob: -4.983401298522949
    8. ' [' → logprob: -5.233401298522949
    9. '[]' → logprob: -5.483401298522949
    10. '[list' → logprob: -5.858401298522949

Token 819: 's' (ID: 82)
  Prédit: '(sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sp' → logprob: -0.9851211309432983
    2. '(s' → logprob: -1.1101211309432983
    3. 'spell' → logprob: -1.7351211309432983
    4. 's' → logprob: -2.485121250152588
    5. 'sp' → logprob: -3.610121250152588
    6. '(mp' → logprob: -6.485121250152588
    7. '(M' → logprob: -6.485121250152588
    8. '(' → logprob: -6.485121250152588
    9. '   ' → logprob: -6.860121250152588
    10. ' (' → logprob: -6.985121250152588

Token 820: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4048713147640228
    2. ' for' → logprob: -1.1548713445663452
    3. '[' → logprob: -4.154871463775635
    4. 's' → logprob: -7.279871463775635
    5. '=' → logprob: -7.654871463775635
    6. '
' → logprob: -7.904871463775635
    7. ' =' → logprob: -8.779870986938477
    8. '   ' → logprob: -9.029870986938477
    9. '       ' → logprob: -10.029870986938477
    10. '=[' → logprob: -10.529870986938477

Token 821: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.021398508921265602
    2. 'MP' → logprob: -4.896398544311523
    3. '(M' → logprob: -5.396398544311523
    4. '(s' → logprob: -5.896398544311523
    5. 'in' → logprob: -6.021398544311523
    6. ' s' → logprob: -7.021398544311523
    7. ' in' → logprob: -7.146398544311523
    8. ',' → logprob: -7.521398544311523
    9. '(sp' → logprob: -7.896398544311523
    10. ' (' → logprob: -8.146398544311523

Token 822: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2254755198955536
    2. ' in' → logprob: -1.600475549697876
    3. 'if' → logprob: -10.725475311279297
    4. 'for' → logprob: -11.350475311279297
    5. '[' → logprob: -11.475475311279297
    6. '   ' → logprob: -12.975475311279297
    7. 's' → logprob: -12.975475311279297
    8. '
' → logprob: -13.225475311279297
    9. 'i' → logprob: -13.225475311279297
    10. ' ' → logprob: -13.475475311279297

Token 823: ' spells' (ID: 69967)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.34899017214775085
    2. ' spells' → logprob: -1.2239902019500732
    3. 'range' → logprob: -8.223990440368652
    4. '(sp' → logprob: -9.348990440368652
    5. 'spell' → logprob: -9.973990440368652
    6. 's' → logprob: -10.473990440368652
    7. 'spe' → logprob: -10.848990440368652
    8. '   ' → logprob: -10.973990440368652
    9. '[(' → logprob: -11.223990440368652
    10. '(' → logprob: -11.223990440368652

Token 824: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4741039574146271
    2. 'if' → logprob: -0.9741039276123047
    3. '       ' → logprob: -11.099103927612305
    4. '           ' → logprob: -11.849103927612305
    5. '   ' → logprob: -13.099103927612305
    6. '          ' → logprob: -14.099103927612305
    7. '        ' → logprob: -14.224103927612305
    8. '               ' → logprob: -14.974103927612305
    9. '         ' → logprob: -15.724103927612305
    10. '    ' → logprob: -15.849103927612305

Token 825: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011048054322600365
    2. ' s' → logprob: -4.511047840118408
    3. '   ' → logprob: -15.636048316955566
    4. '(s' → logprob: -16.88604736328125
    5. '    ' → logprob: -17.51104736328125
    6. '_s' → logprob: -17.76104736328125
    7. '	s' → logprob: -17.76104736328125
    8. ' ' → logprob: -17.88604736328125
    9. '     ' → logprob: -18.38604736328125
    10. 'len' → logprob: -18.63604736328125

Token 826: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00019495772721711546
    2. '==' → logprob: -9.875194549560547
    3. '][' → logprob: -10.125194549560547
    4. '=' → logprob: -10.375194549560547
    5. '   ' → logprob: -10.875194549560547
    6. '```' → logprob: -11.500194549560547
    7. ' ==' → logprob: -11.875194549560547
    8. ' [' → logprob: -12.250194549560547
    9. '=[' → logprob: -12.500194549560547
    10. ''[' → logprob: -12.625194549560547

Token 827: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002998312993440777
    2. '2' → logprob: -9.000299453735352
    3. '
' → logprob: -9.500299453735352
    4. '[' → logprob: -10.250299453735352
    5. '#' → logprob: -10.500299453735352
    6. ' ' → logprob: -10.875299453735352
    7. 'target' → logprob: -12.625299453735352
    8. '```' → logprob: -12.875299453735352
    9. '   ' → logprob: -13.125299453735352
    10. ':' → logprob: -13.625299453735352

Token 828: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.19315983355045319
    2. ' ==' → logprob: -2.193159818649292
    3. '=='' → logprob: -2.818159818649292
    4. '=="' → logprob: -6.068160057067871
    5. ']==' → logprob: -7.068160057067871
    6. ']' → logprob: -7.318160057067871
    7. ']=='' → logprob: -7.693160057067871
    8. ' =='' → logprob: -10.568160057067871
    9. '[' → logprob: -10.818160057067871
    10. ']=="' → logprob: -12.068160057067871

Token 829: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.17284755408763885
    2. '=='' → logprob: -2.5478475093841553
    3. ' ==' → logprob: -2.5478475093841553
    4. '=="' → logprob: -6.172847747802734
    5. ']==' → logprob: -10.047847747802734
    6. '==
' → logprob: -10.297847747802734
    7. ' =='' → logprob: -10.547847747802734
    8. '[' → logprob: -11.047847747802734
    9. ']=='' → logprob: -11.547847747802734
    10. '=' → logprob: -12.422847747802734

Token 830: ' "' (ID: 392)
  Prédit: ''all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''all' → logprob: -0.1668771505355835
    2. '"' → logprob: -1.9168771505355835
    3. ' '' → logprob: -6.041877269744873
    4. ''' → logprob: -6.541877269744873
    5. 'all' → logprob: -6.791877269744873
    6. ' "' → logprob: -6.916877269744873
    7. ''al' → logprob: -7.666877269744873
    8. '   ' → logprob: -10.166876792907715
    9. ' all' → logprob: -10.291876792907715
    10. ''any' → logprob: -10.416876792907715

Token 831: 'All' (ID: 2594)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.05461198836565018
    2. '"' → logprob: -3.804611921310425
    3. 'All' → logprob: -4.679612159729004
    4. ''all' → logprob: -4.929612159729004
    5. ''' → logprob: -5.179612159729004
    6. ' all' → logprob: -5.929612159729004
    7. 'ALL' → logprob: -6.054612159729004
    8. 'A' → logprob: -6.179612159729004
    9. 'a' → logprob: -6.804612159729004
    10. '"A' → logprob: -9.679612159729004

Token 832: '"' (ID: 1)
  Prédit: '"]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]
' → logprob: -0.0846436470746994
    2. '"]' → logprob: -2.709643602371216
    3. ']
' → logprob: -4.459643840789795
    4. ']' → logprob: -6.084643840789795
    5. '"]
' → logprob: -7.459643840789795
    6. '']
' → logprob: -9.959643363952637
    7. '"]

' → logprob: -10.209643363952637
    8. '"' → logprob: -10.834643363952637
    9. ')' → logprob: -10.959643363952637
    10. ')
' → logprob: -12.084643363952637

Token 833: ' and' (ID: 326)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3142959773540497
    2. ']
' → logprob: -1.314296007156372
    3. '       ' → logprob: -7.064295768737793
    4. ']
' → logprob: -10.064295768737793
    5. ' ]' → logprob: -10.189295768737793
    6. ' ]
' → logprob: -10.564295768737793
    7. '   ' → logprob: -10.564295768737793
    8. ']

' → logprob: -10.689295768737793
    9. ')' → logprob: -11.939295768737793
    10. '()]
' → logprob: -12.564295768737793

Token 834: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09365621209144592
    2. ' s' → logprob: -2.468656301498413
    3. 'True' → logprob: -6.718656063079834
    4. 'len' → logprob: -7.468656063079834
    5. '(s' → logprob: -7.593656063079834
    6. ']' → logprob: -7.718656063079834
    7. ' (' → logprob: -8.093656539916992
    8. ' True' → logprob: -8.343656539916992
    9. '1' → logprob: -8.718656539916992
    10. 'all' → logprob: -8.718656539916992

Token 835: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014798196963965893
    2. '][' → logprob: -4.514798164367676
    3. '0' → logprob: -6.889798164367676
    4. ']' → logprob: -7.764798164367676
    5. '
' → logprob: -8.139798164367676
    6. ':' → logprob: -8.264798164367676
    7. '2' → logprob: -8.264798164367676
    8. '   ' → logprob: -9.014798164367676
    9. '[
' → logprob: -9.264798164367676
    10. '#' → logprob: -9.639798164367676

Token 836: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008646124973893166
    2. '0' → logprob: -5.383646011352539
    3. ']' → logprob: -6.883646011352539
    4. '3' → logprob: -7.883646011352539
    5. ' ' → logprob: -7.883646011352539
    6. '][' → logprob: -8.008646011352539
    7. '1' → logprob: -8.258646011352539
    8. '-' → logprob: -8.383646011352539
    9. ':' → logprob: -8.383646011352539
    10. '==' → logprob: -8.571146011352539

Token 837: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.3808412551879883
    2. '==' → logprob: -1.3808412551879883
    3. ' ==' → logprob: -1.7558412551879883
    4. ']==' → logprob: -2.7558412551879883
    5. ' <' → logprob: -2.8808412551879883
    6. '>' → logprob: -3.2558412551879883
    7. '<' → logprob: -3.3808412551879883
    8. ']>' → logprob: -3.8808412551879883
    9. ' >' → logprob: -4.255841255187988
    10. ']>=' → logprob: -4.630841255187988

Token 838: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.00301157683134079
    2. ' >' → logprob: -6.253011703491211
    3. '>=' → logprob: -7.753011703491211
    4. '!=' → logprob: -8.378011703491211
    5. '==' → logprob: -9.003011703491211
    6. ']>' → logprob: -9.128011703491211
    7. ']' → logprob: -9.878011703491211
    8. ':' → logprob: -10.128011703491211
    9. '<' → logprob: -10.628011703491211
    10. '[' → logprob: -11.128011703491211

Token 839: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0047055454924702644
    2. '=' → logprob: -5.504705429077148
    3. ' ' → logprob: -7.379705429077148
    4. '>' → logprob: -13.129705429077148
    5. '1' → logprob: -14.629705429077148
    6. '   ' → logprob: -15.879705429077148
    7. '```' → logprob: -16.50470542907715
    8. ' =' → logprob: -16.75470542907715
    9. '>
' → logprob: -16.87970542907715
    10. '=
' → logprob: -17.00470542907715

Token 840: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.250045776367188
    3. '=' → logprob: -11.500045776367188
    4. '1' → logprob: -17.625045776367188
    5. '<|end|>' → logprob: -18.375045776367188
    6. '
' → logprob: -18.625045776367188
    7. '۰' → logprob: -18.750045776367188
    8. '[' → logprob: -18.750045776367188
    9. '>' → logprob: -18.875045776367188
    10. '```' → logprob: -19.000045776367188

Token 841: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.2529928386211395
    2. ']' → logprob: -1.502992868423462
    3. '       ' → logprob: -7.127992630004883
    4. ' ]
' → logprob: -9.502992630004883
    5. ']

' → logprob: -9.502992630004883
    6. ']
' → logprob: -9.502992630004883
    7. '   ' → logprob: -11.127992630004883
    8. ' ]' → logprob: -11.502992630004883
    9. ')' → logprob: -12.752992630004883
    10. ')
' → logprob: -13.127992630004883

Token 842: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4938817620277405
    2. '       ' → logprob: -1.2438817024230957
    3. '        
' → logprob: -3.1188817024230957
    4. ')' → logprob: -4.118881702423096
    5. ',' → logprob: -4.243881702423096
    6. '<|end|>' → logprob: -4.243881702423096
    7. '[' → logprob: -6.493881702423096
    8. ',
' → logprob: -6.743881702423096
    9. ')
' → logprob: -6.993881702423096
    10. ']' → logprob: -6.993881702423096

Token 843: ' single' (ID: 4590)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6564937233924866
    2. 'max' → logprob: -1.4064936637878418
    3. '       ' → logprob: -2.406493663787842
    4. 'single' (adapté à ' single') → logprob: -2.406493663787842
    5. 'from' → logprob: -3.406493663787842
    6. ']' → logprob: -5.656493663787842
    7. '#' → logprob: -5.906493663787842
    8. 'all' → logprob: -5.906493663787842
    9. 'damage' → logprob: -6.031493663787842
    10. 'if' → logprob: -6.031493663787842

Token 844: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.033400505781173706
    2. '_target' → logprob: -3.533400535583496
    3. '_targets' → logprob: -5.908400535583496
    4. '_mp' → logprob: -7.158400535583496
    5. '_single' → logprob: -9.658400535583496
    6. '_' → logprob: -10.533400535583496
    7. '_s' → logprob: -10.658400535583496
    8. '_spell' → logprob: -11.033400535583496
    9. 'target' → logprob: -12.533400535583496
    10. 's' → logprob: -13.408400535583496

Token 845: 'ells' (ID: 9703)
  Prédit: 'ells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ells' → logprob: -0.11656079441308975
    2. 'ell' → logprob: -2.241560697555542
    3. '=' → logprob: -6.741560935974121
    4. 'el' → logprob: -7.116560935974121
    5. 'ects' → logprob: -7.616560935974121
    6. 'e' → logprob: -8.616560935974121
    7. '_' → logprob: -8.616560935974121
    8. '```' → logprob: -9.116560935974121
    9. '=[]' → logprob: -9.491560935974121
    10. 'll' → logprob: -9.741560935974121

Token 846: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20170548558235168
    2. ' =' → logprob: -1.7017054557800293
    3. '=[]' → logprob: -8.826705932617188
    4. 's' → logprob: -9.701705932617188
    5. ')' → logprob: -10.201705932617188
    6. ']' → logprob: -11.076705932617188
    7. '=[]
' → logprob: -12.076705932617188
    8. '=
' → logprob: -12.326705932617188
    9. ']=' → logprob: -12.451705932617188
    10. '=[' → logprob: -12.576705932617188

Token 847: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3136981427669525
    2. '[s' → logprob: -1.313698172569275
    3. '[' → logprob: -7.8136982917785645
    4. '[i' → logprob: -11.688697814941406
    5. '[t' → logprob: -11.938697814941406
    6. '   ' → logprob: -12.063697814941406
    7. '[(' → logprob: -12.563697814941406
    8. ' [(' → logprob: -13.438697814941406
    9. '=[' → logprob: -13.813697814941406
    10. ' =' → logprob: -13.938697814941406

Token 848: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.7530574849806726e-05
    2. '(s' → logprob: -10.000057220458984
    3. ' s' → logprob: -12.250057220458984
    4. '   ' → logprob: -12.250057220458984
    5. 'sp' → logprob: -14.750057220458984
    6. '[s' → logprob: -14.875057220458984
    7. '       ' → logprob: -15.500057220458984
    8. 'MP' → logprob: -15.750057220458984
    9. '(' → logprob: -15.875057220458984
    10. 'mp' → logprob: -16.000057220458984

Token 849: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011925197206437588
    2. '=' → logprob: -5.511925220489502
    3. '           ' → logprob: -6.636925220489502
    4. '       ' → logprob: -6.886925220489502
    5. '(' → logprob: -7.136925220489502
    6. ' if' → logprob: -7.386925220489502
    7. ':' → logprob: -7.761925220489502
    8. '][' → logprob: -8.011924743652344
    9. '   ' → logprob: -8.011924743652344
    10. ']' → logprob: -8.136924743652344

Token 850: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12433430552482605
    2. ' s' → logprob: -2.2493343353271484
    3. '0' → logprob: -4.999334335327148
    4. 'i' → logprob: -5.749334335327148
    5. 'lambda' → logprob: -7.874334335327148
    6. '(s' → logprob: -8.124334335327148
    7. 'x' → logprob: -8.874334335327148
    8. ' ' → logprob: -8.999334335327148
    9. '1' → logprob: -8.999334335327148
    10. ' i' → logprob: -9.124334335327148

Token 851: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28041917085647583
    2. 'in' → logprob: -2.655419111251831
    3. '0' → logprob: -2.780419111251831
    4. '[' → logprob: -3.155419111251831
    5. '=' → logprob: -3.530419111251831
    6. '==' → logprob: -3.905419111251831
    7. ',' → logprob: -5.90541934967041
    8. '(' → logprob: -5.90541934967041
    9. ' =' → logprob: -6.40541934967041
    10. ' ==' → logprob: -6.40541934967041

Token 852: ' spells' (ID: 69967)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5043421387672424
    2. 'range' → logprob: -1.8793420791625977
    3. '1' → logprob: -2.2543420791625977
    4. '2' → logprob: -2.8793420791625977
    5. '0' → logprob: -3.2543420791625977
    6. '[' → logprob: -3.3793420791625977
    7. ' (' → logprob: -5.754342079162598
    8. 's' → logprob: -6.379342079162598
    9. ' range' → logprob: -6.629342079162598
    10. '(s' → logprob: -7.504342079162598

Token 853: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.01920928992331028
    2. 'if' → logprob: -4.019209384918213
    3. '[' → logprob: -7.644209384918213
    4. '=' → logprob: -8.394208908081055
    5. '==' → logprob: -8.894208908081055
    6. ' =' → logprob: -9.769208908081055
    7. '           ' → logprob: -10.394208908081055
    8. ',' → logprob: -10.894208908081055
    9. ' ==' → logprob: -11.269208908081055
    10. '       ' → logprob: -11.519208908081055

Token 854: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07049506157636642
    2. ' s' → logprob: -2.820495128631592
    3. '1' → logprob: -4.820495128631592
    4. '0' → logprob: -8.320494651794434
    5. '(' → logprob: -9.695494651794434
    6. ' ' → logprob: -10.445494651794434
    7. '   ' → logprob: -10.695494651794434
    8. '(s' → logprob: -10.945494651794434
    9. ' (' → logprob: -11.195494651794434
    10. '[' → logprob: -11.320494651794434

Token 855: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.8219583075260743e-05
    2. ' [' → logprob: -11.125038146972656
    3. '][' → logprob: -12.000038146972656
    4. '[
' → logprob: -12.625038146972656
    5. ')[' → logprob: -12.875038146972656
    6. '=' → logprob: -13.000038146972656
    7. '==' → logprob: -13.000038146972656
    8. ':' → logprob: -14.375038146972656
    9. '   ' → logprob: -14.750038146972656
    10. '[][' → logprob: -14.750038146972656

Token 856: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007743032183498144
    2. '1' → logprob: -5.007742881774902
    3. '[' → logprob: -7.007742881774902
    4. ' ' → logprob: -9.757742881774902
    5. '(' → logprob: -11.007742881774902
    6. '
' → logprob: -11.632742881774902
    7. '=' → logprob: -11.757742881774902
    8. '0' → logprob: -12.132742881774902
    9. '   ' → logprob: -12.132742881774902
    10. '```' → logprob: -12.257742881774902

Token 857: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.28349581360816956
    2. ' ==' → logprob: -1.4084957838058472
    3. '=='' → logprob: -7.158495903015137
    4. ']==' → logprob: -7.533495903015137
    5. '[' → logprob: -7.908495903015137
    6. ']' → logprob: -8.658495903015137
    7. '=="' → logprob: -8.783495903015137
    8. '=' → logprob: -9.033495903015137
    9. ')' → logprob: -10.158495903015137
    10. '```' → logprob: -10.158495903015137

Token 858: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06234341487288475
    2. ' ==' → logprob: -2.8123433589935303
    3. '=='' → logprob: -9.06234359741211
    4. '[' → logprob: -9.43734359741211
    5. '=' → logprob: -9.81234359741211
    6. '=="' → logprob: -10.06234359741211
    7. '!=' → logprob: -10.18734359741211
    8. ']==' → logprob: -11.06234359741211
    9. '==
' → logprob: -11.18734359741211
    10. ' !=' → logprob: -12.31234359741211

Token 859: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004234393127262592
    2. ''' → logprob: -5.754234313964844
    3. ' "' → logprob: -6.879234313964844
    4. '0' → logprob: -11.879234313964844
    5. 'single' → logprob: -12.004234313964844
    6. ' '' → logprob: -12.254234313964844
    7. 'Single' → logprob: -12.754234313964844
    8. ''s' → logprob: -13.754234313964844
    9. ' ' → logprob: -13.879234313964844
    10. ' single' → logprob: -14.129234313964844

Token 860: 'Single' (ID: 13301)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01806061714887619
    2. ''' → logprob: -4.393060684204102
    3. 'Single' → logprob: -5.268060684204102
    4. 'single' → logprob: -9.143060684204102
    5. 'Monster' → logprob: -9.643060684204102
    6. 'One' → logprob: -9.893060684204102
    7. 'i' → logprob: -10.268060684204102
    8. ''S' → logprob: -10.393060684204102
    9. ' "' → logprob: -10.893060684204102
    10. ''s' → logprob: -10.893060684204102

Token 861: '"' (ID: 1)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1112569198012352
    2. 'and' → logprob: -2.6112568378448486
    3. ']' → logprob: -3.6112568378448486
    4. '==' → logprob: -6.236257076263428
    5. ' ==' → logprob: -7.111257076263428
    6. '```' → logprob: -7.736257076263428
    7. ']
' → logprob: -7.861257076263428
    8. ' ]' → logprob: -8.36125659942627
    9. '][' → logprob: -8.86125659942627
    10. '0' → logprob: -8.98625659942627

Token 862: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5809787511825562
    2. ']' → logprob: -0.9559787511825562
    3. 'and' → logprob: -3.0809788703918457
    4. '][' → logprob: -6.330978870391846
    5. '==' → logprob: -6.330978870391846
    6. ']==' → logprob: -6.955978870391846
    7. '       ' → logprob: -6.955978870391846
    8. ']
' → logprob: -7.580978870391846
    9. ':]' → logprob: -7.580978870391846
    10. ' ]' → logprob: -7.705978870391846

Token 863: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14497871696949005
    2. ' s' → logprob: -2.0199787616729736
    3. '0' → logprob: -6.1449785232543945
    4. ' ' → logprob: -9.394978523254395
    5. 'len' → logprob: -10.894978523254395
    6. '(s' → logprob: -11.519978523254395
    7. '```' → logprob: -11.644978523254395
    8. ' (' → logprob: -11.769978523254395
    9. '1' → logprob: -11.769978523254395
    10. '[' → logprob: -12.144978523254395

Token 864: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02893923968076706
    2. '2' → logprob: -3.6539392471313477
    3. '>' → logprob: -6.028939247131348
    4. ':' → logprob: -9.653939247131348
    5. '=' → logprob: -10.653939247131348
    6. '```' → logprob: -10.653939247131348
    7. '   ' → logprob: -10.778939247131348
    8. ']' → logprob: -11.153939247131348
    9. '==' → logprob: -11.403939247131348
    10. '][' → logprob: -11.403939247131348

Token 865: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7014437364414334e-05
    2. '[' → logprob: -12.12502670288086
    3. '
' → logprob: -12.12502670288086
    4. ' ' → logprob: -12.25002670288086
    5. '0' → logprob: -13.00002670288086
    6. '3' → logprob: -13.06252670288086
    7. '   ' → logprob: -13.56252670288086
    8. ']' → logprob: -13.75002670288086
    9. '1' → logprob: -13.87502670288086
    10. '```' → logprob: -13.93752670288086

Token 866: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6681933999061584
    2. '>' → logprob: -0.7931933999061584
    3. ']>' → logprob: -3.7931933403015137
    4. ']' → logprob: -4.418193340301514
    5. '[' → logprob: -8.418193817138672
    6. ' ]' → logprob: -10.418193817138672
    7. '>]' → logprob: -10.793193817138672
    8. ')>' → logprob: -11.043193817138672
    9. '```' → logprob: -11.543193817138672
    10. ']>
' → logprob: -11.543193817138672

Token 867: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1272013783454895
    2. ' >' → logprob: -2.1272013187408447
    3. '```' → logprob: -9.377201080322266
    4. '[' → logprob: -9.627201080322266
    5. ']>' → logprob: -10.002201080322266
    6. '>
' → logprob: -10.502201080322266
    7. '0' → logprob: -12.252201080322266
    8. ']' → logprob: -12.252201080322266
    9. ':' → logprob: -12.377201080322266
    10. ' >
' → logprob: -12.502201080322266

Token 868: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20152229070663452
    2. ' ' → logprob: -1.7015223503112793
    3. '=' → logprob: -10.076521873474121
    4. '>' → logprob: -10.076521873474121
    5. ' >' → logprob: -12.076521873474121
    6. '1' → logprob: -12.076521873474121
    7. '```' → logprob: -12.826521873474121
    8. '  ' → logprob: -13.514021873474121
    9. ',' → logprob: -13.826521873474121
    10. '<|end|>' → logprob: -13.889021873474121

Token 869: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028062984347343445
    2. ' ' → logprob: -5.877806186676025
    3. '   ' → logprob: -15.002806663513184
    4. '=' → logprob: -15.002806663513184
    5. '1' → logprob: -15.377806663513184
    6. '>' → logprob: -15.502806663513184
    7. 'int' → logprob: -16.627805709838867
    8. '
' → logprob: -16.815305709838867
    9. '```' → logprob: -16.815305709838867
    10. ',' → logprob: -17.127805709838867

Token 870: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014540439005941153
    2. ']
' → logprob: -6.876453876495361
    3. '       ' → logprob: -8.12645435333252
    4. ']

' → logprob: -10.12645435333252
    5. ')]' → logprob: -10.37645435333252
    6. ' ]' → logprob: -10.62645435333252
    7. ')' → logprob: -11.00145435333252
    8. '`]' → logprob: -12.25145435333252
    9. '()]' → logprob: -13.00145435333252
    10. '']' → logprob: -13.62645435333252

Token 871: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45253658294677734
    2. '       ' → logprob: -1.4525365829467773
    3. '```' → logprob: -3.4525365829467773
    4. 'max' → logprob: -3.7025365829467773
    5. '        
' → logprob: -4.077536582946777
    6. 'dp' → logprob: -4.327536582946777
    7. '#' → logprob: -4.702536582946777
    8. 'best' → logprob: -4.952536582946777
    9. ')
' → logprob: -5.952536582946777
    10. 'import' → logprob: -6.077536582946777

Token 872: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.31859317421913147
    2. 'dp' → logprob: -1.568593144416809
    3. '#' (adapté à ' #') → logprob: -3.5685932636260986
    4. 'from' → logprob: -4.3185930252075195
    5. '       ' → logprob: -4.6935930252075195
    6. 'best' → logprob: -5.0685930252075195
    7. '
' → logprob: -5.5685930252075195
    8. 'all' → logprob: -6.9435930252075195
    9. 'import' → logprob: -7.5685930252075195
    10. 'single' → logprob: -7.5685930252075195

Token 873: ' Pre' (ID: 4659)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.1469476968050003
    2. '#' → logprob: -2.1469476222991943
    3. 'max' → logprob: -4.771947860717773
    4. 'from' → logprob: -5.021947860717773
    5. '       ' → logprob: -5.771947860717773
    6. 'import' → logprob: -7.271947860717773
    7. 'INF' → logprob: -8.146947860717773
    8. '   ' → logprob: -8.521947860717773
    9. 'single' → logprob: -9.146947860717773
    10. 'inf' → logprob: -9.646947860717773

Token 874: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.4460296034812927
    2. 'pare' → logprob: -1.4460296630859375
    3. 'sum' → logprob: -2.3210296630859375
    4. 'computed' → logprob: -5.3210296630859375
    5. 'from' → logprob: -5.4460296630859375
    6. 'max' → logprob: -5.6960296630859375
    7. 'fix' → logprob: -5.9460296630859375
    8. 'dict' → logprob: -6.0710296630859375
    9. '#' → logprob: -6.4460296630859375
    10. 'for' → logprob: -6.6960296630859375

Token 875: ' best' (ID: 1636)
  Prédit: ' best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.4629453718662262
    2. 'best' → logprob: -1.0879453420639038
    3. ' single' → logprob: -4.837945461273193
    4. 'max' → logprob: -5.212945461273193
    5. ' max' → logprob: -5.212945461273193
    6. 'single' → logprob: -5.337945461273193
    7. '
' → logprob: -5.462945461273193
    8. '```' → logprob: -6.587945461273193
    9. '#' → logprob: -7.087945461273193
    10. '       ' → logprob: -7.337945461273193

Token 876: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.0011727249948307872
    2. 'single' → logprob: -6.7511725425720215
    3. '_' → logprob: -14.00117301940918
    4. '```' → logprob: -14.25117301940918
    5. ' single' → logprob: -14.50117301940918
    6. '_target' → logprob: -15.62617301940918
    7. '_best' → logprob: -16.62617301940918
    8. '_possible' → logprob: -16.87617301940918
    9. '``' → logprob: -17.37617301940918
    10. '_SINGLE' → logprob: -17.37617301940918

Token 877: '_mp' (ID: 96508)
  Prédit: '_mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mp' → logprob: -0.0004082699597347528
    2. '_single' → logprob: -8.625408172607422
    3. '_sp' → logprob: -8.875408172607422
    4. '_MP' → logprob: -9.750408172607422
    5. '_' → logprob: -11.000408172607422
    6. '_mv' → logprob: -12.875408172607422
    7. '```' → logprob: -13.375408172607422
    8. 'mp' → logprob: -13.375408172607422
    9. '_dp' → logprob: -13.500408172607422
    10. '_cost' → logprob: -13.625408172607422

Token 878: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6328277587890625
    2. ' =' → logprob: -0.7578277587890625
    3. '   ' → logprob: -9.507827758789062
    4. '=[' → logprob: -10.007827758789062
    5. '_single' → logprob: -10.757827758789062
    6. 's' → logprob: -11.007827758789062
    7. '[i' → logprob: -11.132827758789062
    8. '=[]' → logprob: -11.257827758789062
    9. 'single' → logprob: -12.257827758789062
    10. '=
' → logprob: -12.382827758789062

Token 879: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.055127229541540146
    2. ']=' → logprob: -3.5551271438598633
    3. ' =' → logprob: -4.180127143859863
    4. '=' → logprob: -5.180127143859863
    5. '[i' → logprob: -6.055127143859863
    6. ' ]' → logprob: -7.805127143859863
    7. 's' → logprob: -7.930127143859863
    8. ')' → logprob: -8.305127143859863
    9. '   ' → logprob: -8.930127143859863
    10. '=[]' → logprob: -9.305127143859863

Token 880: ' minimal' (ID: 19957)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.8033816814422607
    2. 'best' → logprob: -1.0533816814422607
    3. '[' → logprob: -2.1783816814422607
    4. ' [' → logprob: -2.6783816814422607
    5. 'import' → logprob: -5.55338191986084
    6. '
' → logprob: -6.17838191986084
    7. '   ' → logprob: -6.17838191986084
    8. '[max' → logprob: -6.30338191986084
    9. ' ' → logprob: -6.80338191986084
    10. '100' → logprob: -6.80338191986084

Token 881: ' MP' (ID: 14857)
  Prédit: '_mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_mp' → logprob: -0.8689364790916443
    2. ' =' → logprob: -1.743936538696289
    3. '_single' → logprob: -2.618936538696289
    4. 'cost' → logprob: -2.618936538696289
    5. '_' → logprob: -2.993936538696289
    6. '_cost' → logprob: -2.993936538696289
    7. ' cost' → logprob: -3.618936538696289
    8. 'single' → logprob: -3.743936538696289
    9. 'mp' → logprob: -3.868936538696289
    10. ' mp' → logprob: -3.993936538696289

Token 882: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46919143199920654
    2. '=' → logprob: -1.2191914319992065
    3. '_to' → logprob: -2.969191551208496
    4. 'for' → logprob: -4.969191551208496
    5. '_needed' → logprob: -5.094191551208496
    6. 'to' → logprob: -6.094191551208496
    7. '=[]' → logprob: -6.219191551208496
    8. '   ' → logprob: -6.344191551208496
    9. '_for' → logprob: -6.594191551208496
    10. '_single' → logprob: -6.969191551208496

Token 883: ' kill' (ID: 15874)
  Prédit: 'kill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kill' → logprob: -0.059437256306409836
    2. 'i' → logprob: -3.3094372749328613
    3. '0' → logprob: -4.684437274932861
    4. '1' → logprob: -5.309437274932861
    5. ' kill' → logprob: -6.184437274932861
    6. '100' → logprob: -6.684437274932861
    7. 'k' → logprob: -7.309437274932861
    8. ' i' → logprob: -7.434437274932861
    9. '[i' → logprob: -7.559437274932861
    10. 'def' → logprob: -7.934437274932861

Token 884: ' monster' (ID: 36286)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5140410661697388
    2. '[i' → logprob: -1.7640410661697388
    3. ' =' → logprob: -2.639040946960449
    4. '_mon' → logprob: -2.639040946960449
    5. 'each' → logprob: -3.139040946960449
    6. ' each' → logprob: -3.264040946960449
    7. 'monster' → logprob: -3.264040946960449
    8. ' _' → logprob: -3.264040946960449
    9. '_i' → logprob: -3.389040946960449
    10. 'mon' → logprob: -3.389040946960449

Token 885: ' i' (ID: 575)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1480109840631485
    2. ' =' → logprob: -3.1480109691619873
    3. '   ' → logprob: -3.6480109691619873
    4. '       ' → logprob: -4.023011207580566
    5. 'for' → logprob: -4.273011207580566
    6. ' for' → logprob: -5.398011207580566
    7. '[' → logprob: -5.398011207580566
    8. '_to' → logprob: -5.648011207580566
    9. '
' → logprob: -5.773011207580566
    10. '```' → logprob: -5.773011207580566

Token 886: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1712954193353653
    2. '=' → logprob: -2.171295404434204
    3. '
' → logprob: -3.921295404434204
    4. '       ' → logprob: -4.296295642852783
    5. 'for' → logprob: -5.546295642852783
    6. '   ' → logprob: -6.671295642852783
    7. '=[]
' → logprob: -7.421295642852783
    8. '[i' → logprob: -7.671295642852783
    9. '=
' → logprob: -7.671295642852783
    10. ' for' → logprob: -7.671295642852783

Token 887: ' single' (ID: 4590)
  Prédit: ' single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' single' → logprob: -0.30658531188964844
    2. 'single' → logprob: -1.4315853118896484
    3. '0' → logprob: -4.931585311889648
    4. ' any' → logprob: -5.431585311889648
    5. ' ' → logprob: -5.681585311889648
    6. ' a' → logprob: -5.681585311889648
    7. ' one' → logprob: -6.431585311889648
    8. 'any' → logprob: -6.556585311889648
    9. 'a' → logprob: -6.806585311889648
    10. 'one' → logprob: -7.056585311889648

Token 888: ' spells' (ID: 69967)
  Prédit: '_target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.6981719136238098
    2. '-' → logprob: -1.573171854019165
    3. '_' → logprob: -1.698171854019165
    4. '-target' → logprob: -3.073171854019165
    5. '-_' → logprob: -3.448171854019165
    6. '_-' → logprob: -4.198172092437744
    7. ' -' → logprob: -5.573172092437744
    8. '_targets' → logprob: -5.948172092437744
    9. '_sp' → logprob: -6.073172092437744
    10. '_token' → logprob: -6.448172092437744

Token 889: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6738564968109131
    2. '
' → logprob: -1.173856496810913
    3. '=' → logprob: -2.923856496810913
    4. '       ' → logprob: -3.048856496810913
    5. '[i' → logprob: -3.173856496810913
    6. '   ' → logprob: -4.923856735229492
    7. '        
' → logprob: -5.173856735229492
    8. 'for' → logprob: -5.798856735229492
    9. '[' → logprob: -6.173856735229492
    10. ':' → logprob: -6.173856735229492

Token 890: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1805352121591568
    2. ' =' → logprob: -2.305535316467285
    3. 'for' → logprob: -3.805535316467285
    4. '
' → logprob: -3.930535316467285
    5. '=' → logprob: -4.305535316467285
    6. ' for' → logprob: -5.180535316467285
    7. 'best' → logprob: -6.805535316467285
    8. '```' → logprob: -7.180535316467285
    9. '   ' → logprob: -7.680535316467285
    10. ',' → logprob: -7.930535316467285

Token 891: ' INF' (ID: 69196)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.27266910672187805
    2. '       ' → logprob: -1.6476690769195557
    3. ' best' → logprob: -3.2726690769195557
    4. 'for' → logprob: -5.272669315338135
    5. '   ' → logprob: -6.647669315338135
    6. ' for' → logprob: -7.397669315338135
    7. '(best' → logprob: -8.272668838500977
    8. '	best' → logprob: -8.647668838500977
    9. '```' → logprob: -8.647668838500977
    10. '
' → logprob: -9.147668838500977

Token 892: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14269757270812988
    2. '=' → logprob: -2.01769757270813
    3. '   ' → logprob: -11.64269733428955
    4. ')' → logprob: -11.64269733428955
    5. ',' → logprob: -13.01769733428955
    6. '    ' → logprob: -14.39269733428955
    7. '```' → logprob: -14.39269733428955
    8. ' ' → logprob: -15.39269733428955
    9. '=int' → logprob: -15.39269733428955
    10. ']' → logprob: -15.89269733428955

Token 893: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.005239921621978283
    2. ' ' → logprob: -5.255239963531494
    3. 'float' → logprob: -12.505239486694336
    4. ' float' → logprob: -14.255239486694336
    5. '100' → logprob: -14.380239486694336
    6. 'int' → logprob: -14.505239486694336
    7. '    ' → logprob: -14.755239486694336
    8. '999' → logprob: -15.880239486694336
    9. '   ' → logprob: -16.505239486694336
    10. 'math' → logprob: -17.380239486694336

Token 894: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0004450892156455666
    2. 'float' → logprob: -7.7504448890686035
    3. 'int' → logprob: -11.375445365905762
    4. 'math' → logprob: -13.375445365905762
    5. '100' → logprob: -13.875445365905762
    6. '1' → logprob: -15.375445365905762
    7. '999' → logprob: -15.500445365905762
    8. ' ' → logprob: -17.750444412231445
    9. '123' → logprob: -18.125444412231445
    10. '987' → logprob: -18.500444412231445

Token 895: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.2683529853820801
    2. '7' → logprob: -1.76835298538208
    3. '6' → logprob: -2.76835298538208
    4. '**' → logprob: -6.89335298538208
    5. '8' → logprob: -7.39335298538208
    6. '5' → logprob: -8.143352508544922
    7. '000' → logprob: -10.268352508544922
    8. '10' → logprob: -10.643352508544922
    9. '```' → logprob: -13.268352508544922
    10. '0' → logprob: -13.518352508544922

Token 896: '15' (ID: 1055)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0003918271977454424
    2. '15' → logprob: -8.125391960144043
    3. '18' → logprob: -9.625391960144043
    4. '12' → logprob: -10.875391960144043
    5. '10' → logprob: -12.000391960144043
    6. '7' → logprob: -13.125391960144043
    7. '14' → logprob: -13.625391960144043
    8. '8' → logprob: -14.500391960144043
    9. '13' → logprob: -14.625391960144043
    10. '6' → logprob: -15.500391960144043

Token 897: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6677196025848389
    2. 'best' → logprob: -0.7927196025848389
    3. ' best' → logprob: -3.917719602584839
    4. '       ' → logprob: -4.792719841003418
    5. '   ' → logprob: -5.667719841003418
    6. 'for' → logprob: -7.167719841003418
    7. '_best' → logprob: -7.542719841003418
    8. '	best' → logprob: -7.917719841003418
    9. '```' → logprob: -8.417719841003418
    10. '
' → logprob: -8.542719841003418

Token 898: '       ' (ID: 309)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.25519728660583496
    2. '       ' → logprob: -1.630197286605835
    3. ' best' → logprob: -3.755197286605835
    4. '   ' → logprob: -6.130197525024414
    5. 'for' → logprob: -6.505197525024414
    6. '
' → logprob: -6.755197525024414
    7. '	best' → logprob: -8.130197525024414
    8. ' for' → logprob: -8.630197525024414
    9. '(best' → logprob: -8.880197525024414
    10. '```' → logprob: -9.130197525024414

Token 899: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.0023187955375760794
    2. ' best' → logprob: -6.502318859100342
    3. '       ' → logprob: -7.627318859100342
    4. 'for' → logprob: -8.502318382263184
    5. '   ' → logprob: -9.877318382263184
    6. 'from' → logprob: -10.502318382263184
    7. 'n' → logprob: -11.252318382263184
    8. '
' → logprob: -11.752318382263184
    9. 'import' → logprob: -11.877318382263184
    10. '```' → logprob: -12.627318382263184

Token 900: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -4.246537173457909e-06
    2. '_s' → logprob: -13.750003814697266
    3. '```' → logprob: -13.875003814697266
    4. '_SINGLE' → logprob: -14.250003814697266
    5. '_sn' → logprob: -15.375003814697266
    6. '_' → logprob: -15.500003814697266
    7. '_safe' → logprob: -15.750003814697266
    8. '_best' → logprob: -15.875003814697266
    9. '_possible' → logprob: -16.000003814697266
    10. '_sp' → logprob: -16.250003814697266

Token 901: '_mp' (ID: 96508)
  Prédit: '_mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mp' → logprob: -1.2948405128554441e-05
    2. '_MP' → logprob: -12.62501335144043
    3. '_' → logprob: -13.25001335144043
    4. '_ml' → logprob: -13.50001335144043
    5. '_mc' → logprob: -13.75001335144043
    6. '_mv' → logprob: -13.87501335144043
    7. '_sp' → logprob: -14.12501335144043
    8. '_cost' → logprob: -14.12501335144043
    9. '_dp' → logprob: -14.25001335144043
    10. '_hp' → logprob: -15.12501335144043

Token 902: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07923740893602371
    2. ' =' → logprob: -2.579237461090088
    3. '=[' → logprob: -8.07923698425293
    4. '=[]' → logprob: -11.07923698425293
    5. ' =[' → logprob: -11.32923698425293
    6. '[i' → logprob: -12.20423698425293
    7. '=[]
' → logprob: -13.82923698425293
    8. '   ' → logprob: -13.95423698425293
    9. '[' → logprob: -13.95423698425293
    10. '```' → logprob: -14.45423698425293

Token 903: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04863357916474342
    2. ' [' → logprob: -3.048633575439453
    3. '[s' → logprob: -11.923633575439453
    4. '[max' → logprob: -12.048633575439453
    5. '[int' → logprob: -12.298633575439453
    6. '[m' → logprob: -12.423633575439453
    7. '[len' → logprob: -12.423633575439453
    8. '[min' → logprob: -12.423633575439453
    9. '[n' → logprob: -12.798633575439453
    10. '[i' → logprob: -13.548633575439453

Token 904: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.00015181333583313972
    2. '0' → logprob: -9.250151634216309
    3. 'math' → logprob: -10.375151634216309
    4. '[' → logprob: -11.375151634216309
    5. 'inf' → logprob: -11.875151634216309
    6. ' INF' → logprob: -12.250151634216309
    7. '_INF' → logprob: -15.125151634216309
    8. 'float' → logprob: -15.375151634216309
    9. 'sys' → logprob: -15.500151634216309
    10. '   ' → logprob: -16.375152587890625

Token 905: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3096156120300293
    2. ' for' → logprob: -1.5596156120300293
    3. 'for' → logprob: -2.9346156120300293
    4. '   ' → logprob: -7.309615612030029
    5. ']*' → logprob: -7.934615612030029
    6. '       ' → logprob: -7.934615612030029
    7. '
' → logprob: -8.309616088867188
    8. '()]' → logprob: -8.434616088867188
    9. ' ]' → logprob: -8.809616088867188
    10. '()' → logprob: -8.809616088867188

Token 906: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.000580792548134923
    2. 'len' → logprob: -7.500580787658691
    3. '100' → logprob: -11.250580787658691
    4. '(N' → logprob: -11.250580787658691
    5. '(len' → logprob: -13.500580787658691
    6. '(' → logprob: -15.125580787658691
    7. ' N' → logprob: -16.375581741333008
    8. '   ' → logprob: -18.375581741333008
    9. '101' → logprob: -19.375581741333008
    10. 'n' → logprob: -19.375581741333008

Token 907: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03649492189288139
    2. '
' → logprob: -3.7864949703216553
    3. ' for' → logprob: -4.411494731903076
    4. '       ' → logprob: -7.536494731903076
    5. '   ' → logprob: -8.161495208740234
    6. '```' → logprob: -9.161495208740234
    7. '        
' → logprob: -10.286495208740234
    8. '	for' → logprob: -10.786495208740234
    9. '    
' → logprob: -11.411495208740234
    10. '<|end|>' → logprob: -12.286495208740234

Token 908: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40557029843330383
    2. '       ' → logprob: -1.1555702686309814
    3. ' for' → logprob: -4.0305705070495605
    4. '   ' → logprob: -7.7805705070495605
    5. '	for' → logprob: -8.405570030212402
    6. '```' → logprob: -9.905570030212402
    7. '        
' → logprob: -10.030570030212402
    8. '
' → logprob: -11.655570030212402
    9. 'import' → logprob: -13.280570030212402
    10. '           ' → logprob: -13.655570030212402

Token 909: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3763674199581146
    2. '       ' → logprob: -1.251367449760437
    3. ' for' → logprob: -3.6263673305511475
    4. '   ' → logprob: -7.751367568969727
    5. '	for' → logprob: -7.876367568969727
    6. '        
' → logprob: -10.001367568969727
    7. '
' → logprob: -11.001367568969727
    8. ')' → logprob: -12.001367568969727
    9. '```' → logprob: -12.001367568969727
    10. '<|end|>' → logprob: -12.376367568969727

Token 910: ' mp' (ID: 11543)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002566383685916662
    2. ' i' → logprob: -6.002566337585449
    3. 'monster' → logprob: -10.37756633758545
    4. 'mp' → logprob: -10.75256633758545
    5. 'idx' → logprob: -11.62756633758545
    6. 'hp' → logprob: -12.62756633758545
    7. '   ' → logprob: -12.62756633758545
    8. 'm' → logprob: -12.75256633758545
    9. 'mon' → logprob: -12.87756633758545
    10. '_i' → logprob: -12.87756633758545

Token 911: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25195741653442383
    2. 's' → logprob: -2.876957416534424
    3. ' in' → logprob: -3.376957416534424
    4. '_j' → logprob: -3.376957416534424
    5. 'in' → logprob: -3.751957416534424
    6. ' ,' → logprob: -3.876957416534424
    7. 'j' → logprob: -4.376957416534424
    8. '_,' → logprob: -4.626957416534424
    9. '_s' → logprob: -4.751957416534424
    10. '_sp' → logprob: -4.751957416534424

Token 912: ' _,' (ID: 18042)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.046182695776224136
    2. ' target' → logprob: -3.171182632446289
    3. ' dmg' → logprob: -6.796182632446289
    4. 'd' → logprob: -7.421182632446289
    5. '_,' → logprob: -7.671182632446289
    6. ' tgt' → logprob: -7.921182632446289
    7. 't' → logprob: -8.046182632446289
    8. ',target' → logprob: -9.671182632446289
    9. ' _,' → logprob: -9.796182632446289
    10. 'damage' → logprob: -10.296182632446289

Token 913: ' dmg' (ID: 168827)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0011395039036870003
    2. ' dmg' → logprob: -7.0011396408081055
    3. 'damage' → logprob: -8.501139640808105
    4. '
' → logprob: -12.251139640808105
    5. '_,' → logprob: -12.376139640808105
    6. '0' → logprob: -12.501139640808105
    7. 'dam' → logprob: -12.751139640808105
    8. '_' → logprob: -13.501139640808105
    9. 'dm' → logprob: -13.626139640808105
    10. ' damage' → logprob: -13.751139640808105

Token 914: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6329501271247864
    2. 'in' → logprob: -0.7579501271247864
    3. ',' → logprob: -8.132949829101562
    4. '       ' → logprob: -11.382949829101562
    5. '   ' → logprob: -11.507949829101562
    6. ' ' → logprob: -11.632949829101562
    7. '	in' → logprob: -12.132949829101562
    8. ' ,' → logprob: -12.632949829101562
    9. '_in' → logprob: -12.882949829101562
    10. '  ' → logprob: -13.132949829101562

Token 915: ' single' (ID: 4590)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.00018041854491457343
    2. ' single' → logprob: -8.6251802444458
    3. '   ' → logprob: -14.5001802444458
    4. '(single' → logprob: -15.7501802444458
    5. ' ' → logprob: -16.875181198120117
    6. '[' → logprob: -17.500181198120117
    7. '
' → logprob: -17.750181198120117
    8. 'sing' → logprob: -18.375181198120117
    9. '  ' → logprob: -19.125181198120117
    10. 'range' → logprob: -19.625181198120117

Token 916: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.021246807649731636
    2. '_' → logprob: -4.396246910095215
    3. '_mp' → logprob: -5.021246910095215
    4. '_spell' → logprob: -6.771246910095215
    5. '-' → logprob: -8.146246910095215
    6. '_target' → logprob: -8.271246910095215
    7. '_targets' → logprob: -9.896246910095215
    8. 'sp' → logprob: -10.021246910095215
    9. '-sp' → logprob: -10.146246910095215
    10. '_tokens' → logprob: -10.396246910095215

Token 917: 'ells' (ID: 9703)
  Prédit: 'ells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ells' → logprob: -0.008770800195634365
    2. '_mp' → logprob: -5.258770942687988
    3. 'ell' → logprob: -6.633770942687988
    4. '```' → logprob: -7.633770942687988
    5. 'll' → logprob: -7.758770942687988
    6. '_' → logprob: -7.883770942687988
    7. 'els' → logprob: -7.883770942687988
    8. 'mp' → logprob: -8.758770942687988
    9. ')' → logprob: -10.008770942687988
    10. '_ll' → logprob: -10.133770942687988

Token 918: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01163444947451353
    2. ':
' → logprob: -4.511634349822998
    3. '       ' → logprob: -8.636634826660156
    4. ',' → logprob: -8.761634826660156
    5. '   ' → logprob: -9.636634826660156
    6. ' in' → logprob: -10.261634826660156
    7. '):' → logprob: -10.261634826660156
    8. '<|end|>' → logprob: -10.511634826660156
    9. '):
' → logprob: -11.011634826660156
    10. ' :' → logprob: -11.136634826660156

Token 919: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028855862095952034
    2. ' for' → logprob: -4.028855800628662
    3. '       ' → logprob: -4.778855800628662
    4. 'for' → logprob: -7.278855800628662
    5. '	       ' → logprob: -7.403855800628662
    6. ',' → logprob: -8.15385627746582
    7. '<|end|>' → logprob: -8.65385627746582
    8. '   ' → logprob: -8.65385627746582
    9. '               ' → logprob: -9.15385627746582
    10. '	   ' → logprob: -10.65385627746582

Token 920: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6051625609397888
    2. 'for' (adapté à ' for') → logprob: -1.6051626205444336
    3. ' for' → logprob: -1.6051626205444336
    4. '       ' → logprob: -2.9801626205444336
    5. '   ' → logprob: -7.355162620544434
    6. '               ' → logprob: -7.980162620544434
    7. '	       ' → logprob: -8.855162620544434
    8. ' if' → logprob: -9.480162620544434
    9. '```' → logprob: -9.730162620544434
    10. 'if' → logprob: -9.980162620544434

Token 921: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003402167232707143
    2. ' i' → logprob: -5.753402233123779
    3. 'j' → logprob: -9.253401756286621
    4. 'monster' → logprob: -9.753401756286621
    5. 'mon' → logprob: -10.503401756286621
    6. 'target' → logprob: -10.753401756286621
    7. 'idx' → logprob: -11.378401756286621
    8. '   ' → logprob: -13.128401756286621
    9. 'k' → logprob: -13.503401756286621
    10. 'damage' → logprob: -13.628401756286621

Token 922: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018330322578549385
    2. 'in' → logprob: -4.018330097198486
    3. ' ' → logprob: -9.143330574035645
    4. ',' → logprob: -10.518330574035645
    5. '	in' → logprob: -10.893330574035645
    6. '<|end|>' → logprob: -12.143330574035645
    7. ' ,' → logprob: -12.268330574035645
    8. '   ' → logprob: -12.393330574035645
    9. '  ' → logprob: -12.393330574035645
    10. '    ' → logprob: -13.518330574035645

Token 923: ' hp' (ID: 37774)
  Prédit: 'hp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hp' → logprob: -0.0505431592464447
    2. 'h' → logprob: -3.3005430698394775
    3. ' hp' → logprob: -4.425543308258057
    4. ' h' → logprob: -8.175542831420898
    5. '_hp' → logprob: -9.175542831420898
    6. 'hit' → logprob: -10.425542831420898
    7. 'health' → logprob: -11.175542831420898
    8. 'hd' → logprob: -11.925542831420898
    9. 'HP' → logprob: -12.300542831420898
    10. '(h' → logprob: -12.800542831420898

Token 924: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5763087272644043
    2. ' in' → logprob: -0.8263087272644043
    3. '=' → logprob: -8.826309204101562
    4. '```' → logprob: -9.076309204101562
    5. ' ' → logprob: -10.826309204101562
    6. '	in' → logprob: -11.076309204101562
    7. '   ' → logprob: -11.451309204101562
    8. ',' → logprob: -11.576309204101562
    9. '           ' → logprob: -11.701309204101562
    10. '_in' → logprob: -11.701309204101562

Token 925: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00020389800192788243
    2. ' enumerate' → logprob: -8.500204086303711
    3. '```' → logprob: -15.000204086303711
    4. 'range' → logprob: -16.62520408630371
    5. '
' → logprob: -17.50020408630371
    6. '[(' → logprob: -18.00020408630371
    7. '   ' → logprob: -18.87520408630371
    8. 'enum' → logprob: -19.12520408630371
    9. '.enumer' → logprob: -19.87520408630371
    10. 'import' → logprob: -20.37520408630371

Token 926: '(' (ID: 7)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.010239169001579285
    2. '(' → logprob: -4.635239124298096
    3. 'enumer' → logprob: -8.135239601135254
    4. ' HP' → logprob: -9.010239601135254
    5. '(H' → logprob: -10.510239601135254
    6. 'range' → logprob: -10.885239601135254
    7. '_HP' → logprob: -12.135239601135254
    8. ' (' → logprob: -12.385239601135254
    9. '   ' → logprob: -12.635239601135254
    10. '[(' → logprob: -13.260239601135254

Token 927: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -1.3856492842023727e-06
    2. ' HP' → logprob: -14.750000953674316
    3. 'range' → logprob: -14.875000953674316
    4. 'enumer' → logprob: -15.375000953674316
    5. '   ' → logprob: -15.500000953674316
    6. '_HP' → logprob: -16.625001907348633
    7. ')' → logprob: -16.750001907348633
    8. '       ' → logprob: -18.000001907348633
    9. '(' → logprob: -18.250001907348633
    10. '           ' → logprob: -18.500001907348633

Token 928: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11235533654689789
    2. '               ' → logprob: -2.4873552322387695
    3. '):' → logprob: -3.8623552322387695
    4. '           ' → logprob: -7.2373552322387695
    5. ':' → logprob: -7.4873552322387695
    6. ':
' → logprob: -8.48735523223877
    7. 'if' → logprob: -9.11235523223877
    8. ' if' → logprob: -9.61235523223877
    9. '):
' → logprob: -9.61235523223877
    10. '():
' → logprob: -9.73735523223877

Token 929: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001725511101540178
    2. ' if' → logprob: -9.25017261505127
    3. '```' → logprob: -10.25017261505127
    4. '	           ' → logprob: -11.50017261505127
    5. '<|end|>' → logprob: -12.12517261505127
    6. '                   ' → logprob: -12.25017261505127
    7. 'if' → logprob: -12.75017261505127
    8. '              ' → logprob: -12.87517261505127
    9. '           ' → logprob: -12.87517261505127
    10. '                ' → logprob: -13.00017261505127

Token 930: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4488845467567444
    2. '                   ' → logprob: -1.1988844871520996
    3. 'if' → logprob: -3.1988844871520996
    4. '   ' → logprob: -5.1988844871521
    5. ' required' → logprob: -5.8238844871521
    6. '                       ' → logprob: -5.9488844871521
    7. ' needed' → logprob: -6.4488844871521
    8. 'required' → logprob: -6.6988844871521
    9. 'needed' → logprob: -7.0738844871521
    10. ' cost' → logprob: -7.1988844871521

Token 931: ' Number' (ID: 9184)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.33998990058898926
    2. 'need' → logprob: -2.2149899005889893
    3. 'needed' → logprob: -2.8399899005889893
    4. 'times' → logprob: -3.7149899005889893
    5. 'hits' → logprob: -3.9649899005889893
    6. ' if' → logprob: -3.9649899005889893
    7. 'damage' → logprob: -4.71498966217041
    8. '               ' → logprob: -5.08998966217041
    9. 'required' → logprob: -5.08998966217041
    10. 'shots' → logprob: -5.21498966217041

Token 932: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9162201881408691
    2. ' of' → logprob: -1.2912201881408691
    3. 'of' → logprob: -2.041220188140869
    4. '_of' → logprob: -3.041220188140869
    5. '=' → logprob: -3.291220188140869
    6. '       ' → logprob: -3.541220188140869
    7. ' =' → logprob: -3.541220188140869
    8. '          ' → logprob: -4.541220188140869
    9. '               ' → logprob: -5.041220188140869
    10. '_tokens' → logprob: -5.166220188140869

Token 933: ' hits' (ID: 21571)
  Prédit: 'casts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'casts' → logprob: -0.01978248916566372
    2. ' casts' → logprob: -4.644782543182373
    3. 'hits' → logprob: -5.144782543182373
    4. 'sp' → logprob: -6.394782543182373
    5. '   ' → logprob: -7.644782543182373
    6. 'att' → logprob: -7.894782543182373
    7. '_cast' → logprob: -8.019782066345215
    8. 'times' → logprob: -8.269782066345215
    9. ' spells' → logprob: -8.644782066345215
    10. ' hits' → logprob: -8.894782066345215

Token 934: ' needed' (ID: 6118)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20534992218017578
    2. '=' → logprob: -1.7053499221801758
    3. '_needed' → logprob: -6.580349922180176
    4. 'needed' → logprob: -6.705349922180176
    5. ' needed' → logprob: -7.580349922180176
    6. '_required' → logprob: -8.330349922180176
    7. 'required' → logprob: -8.455349922180176
    8. ' required' → logprob: -9.080349922180176
    9. '           ' → logprob: -9.330349922180176
    10. ' =
' → logprob: -10.330349922180176

Token 935: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038273051381111145
    2. '=' → logprob: -3.2882730960845947
    3. ' =
' → logprob: -9.788272857666016
    4. '               ' → logprob: -10.288272857666016
    5. '=(' → logprob: -11.038272857666016
    6. '           ' → logprob: -11.288272857666016
    7. '                   ' → logprob: -11.413272857666016
    8. '=
' → logprob: -11.538272857666016
    9. ' (' → logprob: -11.663272857666016
    10. '```' → logprob: -11.788272857666016

Token 936: ' ceil' (ID: 35964)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.5438219904899597
    2. ' (' → logprob: -0.9188219904899597
    3. '(math' → logprob: -4.418821811676025
    4. '(max' → logprob: -5.918821811676025
    5. ' math' → logprob: -6.168821811676025
    6. '                   ' → logprob: -6.543821811676025
    7. '               ' → logprob: -7.293821811676025
    8. '(' → logprob: -7.543821811676025
    9. 'math' → logprob: -8.668822288513184
    10. '                       ' → logprob: -8.793822288513184

Token 937: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.20903487503528595
    2. '(' → logprob: -1.9590349197387695
    3. '((' → logprob: -3.9590349197387695
    4. '(
' → logprob: -4.0840349197387695
    5. ' (' → logprob: -5.0840349197387695
    6. '               ' → logprob: -5.8340349197387695
    7. '                   ' → logprob: -6.8340349197387695
    8. 'div' → logprob: -8.08403491973877
    9. '           ' → logprob: -8.08403491973877
    10. ' (
' → logprob: -8.95903491973877

Token 938: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.839121826691553e-05
    2. '               ' → logprob: -10.375078201293945
    3. 'P' → logprob: -10.875078201293945
    4. '(p' → logprob: -11.125078201293945
    5. '                   ' → logprob: -12.125078201293945
    6. 'it' → logprob: -13.750078201293945
    7. 'ip' → logprob: -14.375078201293945
    8. 'pt' → logprob: -14.500078201293945
    9. 'hp' → logprob: -14.750078201293945
    10. 'pot' → logprob: -14.875078201293945

Token 939: '/d' (ID: 6662)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.3908717632293701
    2. ' /' → logprob: -1.3908717632293701
    3. '/d' → logprob: -3.14087176322937
    4. '/h' → logprob: -3.89087176322937
    5. '```' → logprob: -6.015872001647949
    6. '/
' → logprob: -6.390872001647949
    7. '                   ' → logprob: -6.890872001647949
    8. '               ' → logprob: -7.015872001647949
    9. '(h' → logprob: -7.140872001647949
    10. ')' → logprob: -7.265872001647949

Token 940: 'mg' (ID: 15026)
  Prédit: 'mg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mg' → logprob: -0.20525391399860382
    2. '               ' → logprob: -2.955253839492798
    3. 'd' → logprob: -3.080253839492798
    4. ' dmg' → logprob: -3.830253839492798
    5. 'amage' → logprob: -3.955253839492798
    6. 'm' → logprob: -4.330254077911377
    7. '           ' → logprob: -4.955254077911377
    8. ')' → logprob: -5.205254077911377
    9. '   ' → logprob: -5.705254077911377
    10. '(d' → logprob: -5.705254077911377

Token 941: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002733666682615876
    2. ')
' → logprob: -6.8777337074279785
    3. '           ' → logprob: -8.37773323059082
    4. '):' → logprob: -8.37773323059082
    5. ' )' → logprob: -8.37773323059082
    6. '               ' → logprob: -8.50273323059082
    7. ')=' → logprob: -8.75273323059082
    8. '):
' → logprob: -8.75273323059082
    9. '                   ' → logprob: -9.00273323059082
    10. ')+' → logprob: -9.25273323059082

Token 942: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05849641561508179
    2. '                   ' → logprob: -3.4334964752197266
    3. '```' → logprob: -4.558496475219727
    4. '                       ' → logprob: -6.058496475219727
    5. '*' → logprob: -6.308496475219727
    6. ')' → logprob: -6.558496475219727
    7. '           ' → logprob: -6.683496475219727
    8. ' *' → logprob: -7.183496475219727
    9. '                ' → logprob: -7.558496475219727
    10. ',' → logprob: -7.558496475219727

Token 943: ' hits' (ID: 21571)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0399689674377441
    2. 'hits' (adapté à ' hits') → logprob: -1.6649689674377441
    3. ' needed' → logprob: -2.164968967437744
    4. '                   ' → logprob: -2.164968967437744
    5. ' hits' → logprob: -2.664968967437744
    6. 'needed' → logprob: -3.414968967437744
    7. '                       ' → logprob: -4.039968967437744
    8. ' times' → logprob: -4.664968967437744
    9. ' for' → logprob: -4.664968967437744
    10. 'count' → logprob: -4.914968967437744

Token 944: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2600187063217163
    2. '_needed' → logprob: -2.135018825531006
    3. '=' → logprob: -2.260018825531006
    4. '_required' → logprob: -5.760018825531006
    5. 'needed' → logprob: -7.135018825531006
    6. ')' → logprob: -7.760018825531006
    7. '_count' → logprob: -7.760018825531006
    8. ' needed' → logprob: -8.010018348693848
    9. '           ' → logprob: -8.385018348693848
    10. '_' → logprob: -8.885018348693848

Token 945: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.4744128882884979
    2. ' (' → logprob: -0.9744129180908203
    3. '   ' → logprob: -9.34941291809082
    4. '(math' → logprob: -9.97441291809082
    5. ' -' → logprob: -10.09941291809082
    6. '-' → logprob: -10.47441291809082
    7. ' ' → logprob: -10.97441291809082
    8. '       ' → logprob: -11.34941291809082
    9. '(' → logprob: -11.47441291809082
    10. '(p' → logprob: -11.59941291809082

Token 946: 'hp' (ID: 45478)
  Prédit: 'hp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hp' → logprob: -0.001399164437316358
    2. '(h' → logprob: -6.876399040222168
    3. ' hp' → logprob: -8.376399040222168
    4. '               ' → logprob: -9.751399040222168
    5. '           ' → logprob: -10.126399040222168
    6. '                   ' → logprob: -11.001399040222168
    7. '   ' → logprob: -11.876399040222168
    8. '       ' → logprob: -12.376399040222168
    9. '                       ' → logprob: -12.501399040222168
    10. 'HP' → logprob: -13.626399040222168

Token 947: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.128229022026062
    2. ' +' → logprob: -2.1282291412353516
    3. '-' → logprob: -6.753229141235352
    4. '+
' → logprob: -10.253229141235352
    5. '```' → logprob: -10.253229141235352
    6. ' -' → logprob: -10.878229141235352
    7. '+i' → logprob: -11.878229141235352
    8. '+d' → logprob: -11.878229141235352
    9. '   ' → logprob: -12.128229141235352
    10. ' ' → logprob: -12.753229141235352

Token 948: ' dmg' (ID: 168827)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0003491705865599215
    2. '                   ' → logprob: -9.000349044799805
    3. '               ' → logprob: -9.250349044799805
    4. '           ' → logprob: -9.625349044799805
    5. ' dmg' → logprob: -10.500349044799805
    6. '                       ' → logprob: -10.750349044799805
    7. '   ' → logprob: -12.750349044799805
    8. '       ' → logprob: -13.625349044799805
    9. ' d' → logprob: -13.750349044799805
    10. '                           ' → logprob: -13.875349044799805

Token 949: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1602420061826706
    2. ' -' → logprob: -1.910241961479187
    3. '```' → logprob: -11.535242080688477
    4. ')' → logprob: -12.285242080688477
    5. '   ' → logprob: -13.660242080688477
    6. '           ' → logprob: -14.410242080688477
    7. '       ' → logprob: -15.035242080688477
    8. ' ' → logprob: -15.285242080688477
    9. '1' → logprob: -15.410242080688477
    10. '  ' → logprob: -15.660242080688477

Token 950: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3902033970225602e-05
    2. ' ' → logprob: -11.250014305114746
    3. '```' → logprob: -14.375014305114746
    4. '   ' → logprob: -15.250014305114746
    5. '           ' → logprob: -17.75001335144043
    6. '       ' → logprob: -18.12501335144043
    7. ')' → logprob: -18.25001335144043
    8. '-' → logprob: -18.62501335144043
    9. '               ' → logprob: -19.25001335144043
    10. '                   ' → logprob: -19.25001335144043

Token 951: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12705157697200775
    2. ')//' → logprob: -2.127051591873169
    3. ' )' → logprob: -9.75205135345459
    4. '-' → logprob: -10.25205135345459
    5. '```' → logprob: -12.12705135345459
    6. '           ' → logprob: -12.25205135345459
    7. '//' → logprob: -12.25205135345459
    8. ')
' → logprob: -12.37705135345459
    9. '                   ' → logprob: -12.75205135345459
    10. ' -' → logprob: -13.12705135345459

Token 952: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.9361264946837764e-07
    2. ' dmg' → logprob: -16.25
    3. ')d' → logprob: -17.875
    4. '	d' → logprob: -17.875
    5. 'dlg' → logprob: -18.125
    6. '   ' → logprob: -18.375
    7. '\d' → logprob: -18.625
    8. 'dtype' → logprob: -18.625
    9. '```' → logprob: -19.125
    10. 'damage' → logprob: -19.75

Token 953: 'mg' (ID: 15026)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00022403974435292184
    2. 'mg' → logprob: -8.625224113464355
    3. '   ' → logprob: -11.250224113464355
    4. ' dmg' → logprob: -11.250224113464355
    5. 'dm' → logprob: -11.750224113464355
    6. 'dg' → logprob: -13.250224113464355
    7. ')d' → logprob: -13.375224113464355
    8. '       ' → logprob: -13.750224113464355
    9. '           ' → logprob: -14.125224113464355
    10. '```' → logprob: -14.500224113464355

Token 954: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3806006610393524
    2. '           ' → logprob: -1.8806006908416748
    3. '
' → logprob: -2.130600690841675
    4. '                   ' → logprob: -4.505600452423096
    5. ')' → logprob: -4.880600452423096
    6. '<|end|>' → logprob: -5.130600452423096
    7. '```' → logprob: -5.630600452423096
    8. ',' → logprob: -6.005600452423096
    9. '                
' → logprob: -6.505600452423096
    10. '            
' → logprob: -6.755600452423096

Token 955: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.28553903102874756
    2. '           ' → logprob: -1.4105390310287476
    3. '                   ' → logprob: -6.910539150238037
    4. '```' → logprob: -6.910539150238037
    5. ' for' → logprob: -7.160539150238037
    6. '                       ' → logprob: -8.160538673400879
    7. '       ' → logprob: -8.535538673400879
    8. 'for' → logprob: -8.660538673400879
    9. '<|end|>' → logprob: -9.035538673400879
    10. 'tokens' → logprob: -9.410538673400879

Token 956: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.2636682391166687
    2. ' cost' → logprob: -1.5136682987213135
    3. '               ' → logprob: -5.513668060302734
    4. 'total' → logprob: -5.763668060302734
    5. ' total' → logprob: -6.388668060302734
    6. ' mp' → logprob: -6.888668060302734
    7. 'mp' → logprob: -7.138668060302734
    8. 'use' → logprob: -8.388668060302734
    9. 'curr' → logprob: -8.888668060302734
    10. ' use' → logprob: -9.388668060302734

Token 957: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07893991470336914
    2. ' =' → logprob: -2.578939914703369
    3. '   ' → logprob: -10.328939437866211
    4. '           ' → logprob: -12.453939437866211
    5. '+=' → logprob: -12.578939437866211
    6. 's' → logprob: -12.953939437866211
    7. ' +=' → logprob: -13.078939437866211
    8. '```' → logprob: -13.328939437866211
    9. '       ' → logprob: -13.953939437866211
    10. '=min' → logprob: -14.578939437866211

Token 958: ' hits' (ID: 21571)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.4714075028896332
    2. 'hits' → logprob: -1.3464075326919556
    3. ' mp' → logprob: -2.221407413482666
    4. ' hits' → logprob: -5.096407413482666
    5. '   ' → logprob: -7.346407413482666
    6. '(mp' → logprob: -8.471407890319824
    7. 'hp' → logprob: -9.221407890319824
    8. '	mp' → logprob: -10.471407890319824
    9. '```' → logprob: -10.596407890319824
    10. 'pm' → logprob: -11.283907890319824

Token 959: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4740819036960602
    2. '*' → logprob: -0.9740818738937378
    3. '```' → logprob: -13.849081993103027
    4. ')' → logprob: -14.474081993103027
    5. '   ' → logprob: -14.599081993103027
    6. ')*' → logprob: -14.849081993103027
    7. '*object' → logprob: -15.099081993103027
    8. ' =' → logprob: -15.224081993103027
    9. '*num' → logprob: -15.224081993103027
    10. '**' → logprob: -15.349081993103027

Token 960: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.0019286326132714748
    2. ' mp' → logprob: -6.251928806304932
    3. '(mp' → logprob: -18.001928329467773
    4. 'pm' → logprob: -18.126928329467773
    5. '	mp' → logprob: -19.376928329467773
    6. '_mp' → logprob: -20.126928329467773
    7. 'MP' → logprob: -20.626928329467773
    8. '/mp' → logprob: -22.251928329467773
    9. 'md' → logprob: -22.876928329467773
    10. 'mc' → logprob: -22.876928329467773

Token 961: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024957437068223953
    2. ' if' → logprob: -3.7749574184417725
    3. 'if' → logprob: -7.149957656860352
    4. '           ' → logprob: -7.524957656860352
    5. '                   ' → logprob: -9.399957656860352
    6. '<|end|>' → logprob: -9.399957656860352
    7. ',' → logprob: -9.524957656860352
    8. '                
' → logprob: -10.399957656860352
    9. '
' → logprob: -10.649957656860352
    10. '                       ' → logprob: -11.024957656860352

Token 962: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00020306356600485742
    2. ' if' → logprob: -9.000203132629395
    3. '```' → logprob: -10.500203132629395
    4. '
' → logprob: -11.125203132629395
    5. '<|end|>' → logprob: -11.500203132629395
    6. '           ' → logprob: -11.750203132629395
    7. '                   ' → logprob: -11.875203132629395
    8. 'if' → logprob: -12.250203132629395
    9. '                
' → logprob: -13.250203132629395
    10. '       ' → logprob: -13.750203132629395

Token 963: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011997761204838753
    2. '               ' → logprob: -5.011997699737549
    3. 'best' → logprob: -5.261997699737549
    4. ' if' → logprob: -9.511998176574707
    5. '           ' → logprob: -11.636998176574707
    6. '                   ' → logprob: -15.011998176574707
    7. '       ' → logprob: -16.13699722290039
    8. '```' → logprob: -16.13699722290039
    9. ' best' → logprob: -16.26199722290039
    10. '   ' → logprob: -17.01199722290039

Token 964: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0016235295915976167
    2. 'best' → logprob: -7.126623630523682
    3. ' cost' → logprob: -7.126623630523682
    4. '   ' → logprob: -11.251623153686523
    5. ' best' → logprob: -14.501623153686523
    6. '       ' → logprob: -14.501623153686523
    7. '           ' → logprob: -15.251623153686523
    8. '               ' → logprob: -15.251623153686523
    9. ' ' → logprob: -15.751623153686523
    10. '    ' → logprob: -15.751623153686523

Token 965: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1611318439245224
    2. ' <' → logprob: -1.9111318588256836
    3. '<|end|>' → logprob: -8.036131858825684
    4. '<int' → logprob: -8.536131858825684
    5. '<size' → logprob: -9.661131858825684
    6. '[' → logprob: -10.536131858825684
    7. '<th' → logprob: -10.911131858825684
    8. '<span' → logprob: -11.161131858825684
    9. '<p' → logprob: -11.286131858825684
    10. '<View' → logprob: -11.536131858825684

Token 966: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -3.690834273584187e-05
    2. ' best' → logprob: -10.25003719329834
    3. '           ' → logprob: -14.37503719329834
    4. '               ' → logprob: -14.75003719329834
    5. '                   ' → logprob: -14.75003719329834
    6. '	best' → logprob: -16.125036239624023
    7. '(best' → logprob: -17.375036239624023
    8. '                       ' → logprob: -17.375036239624023
    9. '   ' → logprob: -17.875036239624023
    10. '       ' → logprob: -18.250036239624023

Token 967: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -3.128163257315464e-07
    2. 'single' → logprob: -15.5
    3. '_SINGLE' → logprob: -17.5
    4. '_cost' → logprob: -17.75
    5. '```' → logprob: -18.125
    6. 'Single' → logprob: -18.625
    7. '_s' → logprob: -19.625
    8. '_' → logprob: -19.625
    9. '_possible' → logprob: -19.625
    10. '
' → logprob: -19.75

Token 968: '_mp' (ID: 96508)
  Prédit: '_mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mp' → logprob: -5.240481914370321e-05
    2. 'mp' → logprob: -9.875052452087402
    3. '_sp' → logprob: -14.875052452087402
    4. '_single' → logprob: -16.250051498413086
    5. '_dp' → logprob: -16.625051498413086
    6. ' mp' → logprob: -16.875051498413086
    7. 'single' → logprob: -17.000051498413086
    8. 'MP' → logprob: -17.000051498413086
    9. 'Mp' → logprob: -17.750051498413086
    10. '	mp' → logprob: -18.000051498413086

Token 969: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.41866585687967e-06
    2. '[' → logprob: -11.875008583068848
    3. 'i' → logprob: -14.875008583068848
    4. '[
' → logprob: -15.000008583068848
    5. '```' → logprob: -15.750008583068848
    6. ' [' → logprob: -16.00000762939453
    7. '           ' → logprob: -16.50000762939453
    8. '[j' → logprob: -16.50000762939453
    9. '\[' → logprob: -17.00000762939453
    10. '               ' → logprob: -17.25000762939453

Token 970: ']:
' (ID: 22152)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006983418483287096
    2. ']:' → logprob: -5.256983280181885
    3. ':' → logprob: -7.131983280181885
    4. '           ' → logprob: -8.131983757019043
    5. ']:
' → logprob: -9.006983757019043
    6. '               ' → logprob: -9.256983757019043
    7. '[' → logprob: -9.256983757019043
    8. '                   ' → logprob: -9.381983757019043
    9. '       ' → logprob: -9.381983757019043
    10. '):' → logprob: -10.006983757019043

Token 971: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.034093864262104034
    2. 'best' → logprob: -4.034093856811523
    3. '                       ' → logprob: -4.784093856811523
    4. '               ' → logprob: -5.909093856811523
    5. ' best' → logprob: -5.909093856811523
    6. '                           ' → logprob: -6.784093856811523
    7. '           ' → logprob: -7.159093856811523
    8. '	best' → logprob: -10.284093856811523
    9. '(best' → logprob: -10.784093856811523
    10. '                  ' → logprob: -11.409093856811523

Token 972: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -7.111979357432574e-05
    2. ' best' → logprob: -9.75007152557373
    3. '                   ' → logprob: -11.50007152557373
    4. '                       ' → logprob: -13.75007152557373
    5. '               ' → logprob: -14.00007152557373
    6. '           ' → logprob: -14.25007152557373
    7. '   ' → logprob: -16.875070571899414
    8. '       ' → logprob: -17.375070571899414
    9. '	best' → logprob: -17.500070571899414
    10. '                           ' → logprob: -18.750070571899414

Token 973: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -7.941850526549388e-06
    2. 'single' → logprob: -12.125007629394531
    3. '```' → logprob: -14.375007629394531
    4. '[i' → logprob: -14.750007629394531
    5. 'Single' → logprob: -15.000007629394531
    6. '_SINGLE' → logprob: -15.125007629394531
    7. '
' → logprob: -15.375007629394531
    8. '                   ' → logprob: -16.37500762939453
    9. '               ' → logprob: -16.37500762939453
    10. '           ' → logprob: -16.50000762939453

Token 974: '_mp' (ID: 96508)
  Prédit: '_mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mp' → logprob: -2.093505099765025e-05
    2. 'mp' → logprob: -10.875020980834961
    3. '_sp' → logprob: -14.125020980834961
    4. '_' → logprob: -14.625020980834961
    5. ' mp' → logprob: -15.625020980834961
    6. '_dp' → logprob: -16.00002098083496
    7. '	mp' → logprob: -16.50002098083496
    8. '_mc' → logprob: -16.62502098083496
    9. '_MP' → logprob: -17.00002098083496
    10. '_cp' → logprob: -17.25002098083496

Token 975: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0087516784551553e-05
    2. '=' → logprob: -12.50001049041748
    3. '[' → logprob: -12.75001049041748
    4. '                   ' → logprob: -13.12501049041748
    5. '[
' → logprob: -14.75001049041748
    6. '```' → logprob: -15.12501049041748
    7. '=i' → logprob: -15.25001049041748
    8. 'i' → logprob: -16.000009536743164
    9. '
' → logprob: -16.250009536743164
    10. ' [' → logprob: -16.875009536743164

Token 976: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5545093417167664
    2. ']=' → logprob: -0.9295093417167664
    3. '[i' → logprob: -4.304509162902832
    4. '=' → logprob: -4.679509162902832
    5. '                   ' → logprob: -4.929509162902832
    6. ' =' → logprob: -8.429509162902832
    7. '                       ' → logprob: -8.679509162902832
    8. '=i' → logprob: -8.804509162902832
    9. '               ' → logprob: -9.179509162902832
    10. '[' → logprob: -10.304509162902832

Token 977: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00012535012501757592
    2. ' =' → logprob: -9.00012493133545
    3. '=
' → logprob: -13.37512493133545
    4. '=i' → logprob: -16.375125885009766
    5. '                   ' → logprob: -16.625125885009766
    6. ']=' → logprob: -16.875125885009766
    7. '=int' → logprob: -17.000125885009766
    8. '＝' → logprob: -17.875125885009766
    9. '=s' → logprob: -17.875125885009766
    10. '=

' → logprob: -17.875125885009766

Token 978: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.001170225441455841
    2. ' cost' → logprob: -6.7511701583862305
    3. '(cost' → logprob: -19.751171112060547
    4. 'code' → logprob: -20.876171112060547
    5. '   ' → logprob: -21.001171112060547
    6. '_cost' → logprob: -21.126171112060547
    7. 'Cost' → logprob: -21.876171112060547
    8. 'count' → logprob: -22.251171112060547
    9. '.cost' → logprob: -23.126171112060547
    10. '    ' → logprob: -24.001171112060547

Token 979: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.545691728591919
    2. '<|end|>' → logprob: -1.420691728591919
    3. '
' → logprob: -2.045691728591919
    4. '        
' → logprob: -4.29569149017334
    5. ')' → logprob: -4.92069149017334
    6. '<|end|>' → logprob: -5.17069149017334
    7. '```' → logprob: -5.42069149017334
    8. 'import' → logprob: -5.79569149017334
    9. '        ' → logprob: -6.04569149017334
    10. '#' → logprob: -6.29569149017334

Token 980: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6721391677856445
    2. '       ' → logprob: -1.0471391677856445
    3. '<|end|>' → logprob: -2.0471391677856445
    4. '        
' → logprob: -6.0471391677856445
    5. 'import' → logprob: -6.1721391677856445
    6. '#' → logprob: -7.1721391677856445
    7. ')' → logprob: -7.2971391677856445
    8. 'for' → logprob: -7.5471391677856445
    9. '```' → logprob: -7.6721391677856445
    10. '<|end|>' → logprob: -7.6721391677856445

Token 981: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11189380288124084
    2. 'max' → logprob: -2.986893892288208
    3. '#' (adapté à ' #') → logprob: -3.611893892288208
    4. 'from' → logprob: -3.736893892288208
    5. '       ' → logprob: -6.611893653869629
    6. 'DP' → logprob: -6.736893653869629
    7. 'damage' → logprob: -6.986893653869629
    8. 'all' → logprob: -7.611893653869629
    9. 'if' → logprob: -8.986893653869629
    10. '   ' → logprob: -8.986893653869629

Token 982: ' If' (ID: 1843)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3484083414077759
    2. 'max' → logprob: -1.5984083414077759
    3. 'from' → logprob: -2.5984082221984863
    4. '#' → logprob: -4.598408222198486
    5. 'damage' → logprob: -5.848408222198486
    6. 'if' → logprob: -5.973408222198486
    7. 'DP' → logprob: -7.598408222198486
    8. 'all' → logprob: -8.223408699035645
    9. 'import' → logprob: -8.223408699035645
    10. 'single' → logprob: -8.348408699035645

Token 983: ' no' (ID: 860)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6813856363296509
    2. 'any' → logprob: -1.6813856363296509
    3. ' any' → logprob: -2.1813855171203613
    4. ' min' → logprob: -2.4313855171203613
    5. 'all' → logprob: -2.5563855171203613
    6. ' all' → logprob: -3.6813855171203613
    7. 'INF' → logprob: -5.806385517120361
    8. 'max' → logprob: -7.806385517120361
    9. ' INF' → logprob: -8.30638599395752
    10. 'sum' → logprob: -8.43138599395752

Token 984: ' single' (ID: 4590)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.34769219160079956
    2. ' single' → logprob: -1.7226922512054443
    3. 'all' → logprob: -2.4726922512054443
    4. 'best' → logprob: -4.097692012786865
    5. ' all' → logprob: -4.597692012786865
    6. ' best' → logprob: -5.847692012786865
    7. ' ' → logprob: -8.347692489624023
    8. '_single' → logprob: -8.347692489624023
    9. 's' → logprob: -8.597692489624023
    10. '   ' → logprob: -9.347692489624023

Token 985: ' spells' (ID: 69967)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.11589282751083374
    2. '_' → logprob: -2.3658928871154785
    3. '_single' → logprob: -5.2408928871154785
    4. '_target' → logprob: -5.3658928871154785
    5. '_spell' → logprob: -5.9908928871154785
    6. ' _' → logprob: -6.3658928871154785
    7. '_targets' → logprob: -7.3658928871154785
    8. '_s' → logprob: -8.99089241027832
    9. 'sp' → logprob: -9.49089241027832
    10. '
' → logprob: -9.86589241027832

Token 986: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2119646519422531
    2. ' or' → logprob: -2.2119646072387695
    3. ':
' → logprob: -3.4619646072387695
    4. '==' → logprob: -3.9619646072387695
    5. 'or' → logprob: -4.2119646072387695
    6. 'and' → logprob: -4.8369646072387695
    7. ' and' → logprob: -5.8369646072387695
    8. '[' → logprob: -6.2119646072387695
    9. ' ==' → logprob: -6.7119646072387695
    10. '           ' → logprob: -7.7119646072387695

Token 987: ' best' (ID: 1636)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1935202181339264
    2. 'for' → logprob: -2.8185203075408936
    3. '#' → logprob: -2.9435203075408936
    4. '       ' → logprob: -3.3185203075408936
    5. ' if' → logprob: -4.0685200691223145
    6. 'print' → logprob: -5.5685200691223145
    7. ' for' → logprob: -6.5685200691223145
    8. 'all' → logprob: -6.6935200691223145
    9. 'continue' → logprob: -6.9435200691223145
    10. 'possible' → logprob: -7.3185200691223145

Token 988: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.00038539018714800477
    2. 'single' → logprob: -8.250385284423828
    3. '_sp' → logprob: -9.125385284423828
    4. '_mp' → logprob: -11.375385284423828
    5. 'mp' → logprob: -13.750385284423828
    6. 'if' → logprob: -14.250385284423828
    7. '```' → logprob: -14.500385284423828
    8. 'Single' → logprob: -15.000385284423828
    9. '_possible' → logprob: -15.500385284423828
    10. '_' → logprob: -15.500385284423828

Token 989: '_mp' (ID: 96508)
  Prédit: '_mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mp' → logprob: -0.0003900391166098416
    2. '_sp' → logprob: -8.25039005279541
    3. 'mp' → logprob: -9.00039005279541
    4. '```' → logprob: -13.25039005279541
    5. '_' → logprob: -13.87539005279541
    6. '_dp' → logprob: -14.37539005279541
    7. '[' → logprob: -15.00039005279541
    8. '   ' → logprob: -15.75039005279541
    9. 'sp' → logprob: -15.87539005279541
    10. '_spi' → logprob: -15.87539005279541

Token 990: ' might' (ID: 3572)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10579852759838104
    2. '==' → logprob: -2.9807984828948975
    3. ' =' → logprob: -3.2307984828948975
    4. ' ==' → logprob: -5.355798721313477
    5. ' is' → logprob: -6.230798721313477
    6. '=[' → logprob: -6.605798721313477
    7. '=None' → logprob: -7.105798721313477
    8. '.count' → logprob: -7.980798721313477
    9. '[i' → logprob: -8.605798721313477
    10. 'is' → logprob: -8.605798721313477

Token 991: ' remain' (ID: 12760)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remain' → logprob: -1.0708715915679932
    2. '=' → logprob: -1.1958715915679932
    3. 'contain' → logprob: -2.195871591567993
    4. ' remain' → logprob: -2.445871591567993
    5. 'be' → logprob: -2.695871591567993
    6. 'all' → logprob: -3.695871591567993
    7. '#' → logprob: -4.070871353149414
    8. '==' → logprob: -4.195871353149414
    9. '[i' → logprob: -4.695871353149414
    10. '```' → logprob: -5.320871353149414

Token 992: ' INF' (ID: 69196)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6611154675483704
    2. 'INF' → logprob: -0.7861154675483704
    3. '```' → logprob: -4.536115646362305
    4. 'inf' → logprob: -5.286115646362305
    5. 'import' → logprob: -5.286115646362305
    6. 'float' → logprob: -5.786115646362305
    7. '[int' → logprob: -7.286115646362305
    8. '[
' → logprob: -7.411115646362305
    9. '   ' → logprob: -8.411115646362305
    10. 'if' → logprob: -8.411115646362305

Token 993: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0866890624165535
    2. '
' → logprob: -2.836688995361328
    3. '<|end|>' → logprob: -3.836688995361328
    4. '        
' → logprob: -6.711688995361328
    5. '<|end|>' → logprob: -7.461688995361328
    6. ' if' → logprob: -8.461688995361328
    7. ',' → logprob: -8.961688995361328
    8. 'for' → logprob: -9.336688995361328
    9. ' for' → logprob: -9.461688995361328
    10. 'continue' → logprob: -9.461688995361328

Token 994: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5363137722015381
    2. 'continue' → logprob: -1.036313772201538
    3. ' continue' → logprob: -4.161314010620117
    4. '#' → logprob: -4.161314010620117
    5. '
' → logprob: -4.411314010620117
    6. 'if' → logprob: -5.411314010620117
    7. '```' → logprob: -5.911314010620117
    8. 'for' → logprob: -5.911314010620117
    9. 'which' → logprob: -6.661314010620117
    10. '           ' → logprob: -6.786314010620117

Token 995: ' problem' (ID: 4792)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.022378429770469666
    2. 'for' → logprob: -4.272378444671631
    3. 'if' → logprob: -5.647378444671631
    4. 'we' → logprob: -5.897378444671631
    5. 'continue' → logprob: -7.772378444671631
    6. 'since' → logprob: -7.897378444671631
    7. '       ' → logprob: -8.022377967834473
    8. '```' → logprob: -8.022377967834473
    9. 'they' → logprob: -8.897377967834473
    10. 'all' → logprob: -9.022377967834473

Token 996: ' states' (ID: 9407)
  Prédit: 'does'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'does' → logprob: -0.7127454280853271
    2. ' does' → logprob: -2.337745428085327
    3. '#' → logprob: -2.462745428085327
    4. ' guarantees' → logprob: -2.712745428085327
    5. ' doesn't' → logprob: -3.212745428085327
    6. ' constraints' → logprob: -3.587745428085327
    7. ' states' → logprob: -3.837745428085327
    8. ' might' → logprob: -4.087745666503906
    9. ' continues' → logprob: -4.212745666503906
    10. '       ' → logprob: -4.337745666503906

Token 997: ' at' (ID: 540)
  Prédit: 'there'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'there' → logprob: -0.5547593832015991
    2. '#' → logprob: -1.9297593832015991
    3. 'all' → logprob: -2.3047595024108887
    4. 'sp' → logprob: -3.0547595024108887
    5. 'single' → logprob: -3.3047595024108887
    6. 'at' → logprob: -3.5547595024108887
    7. 'that' → logprob: -3.9297595024108887
    8. '       ' → logprob: -3.9297595024108887
    9. 'they' → logprob: -4.304759502410889
    10. 'the' → logprob: -5.054759502410889

Token 998: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -3.4881879400927573e-05
    2. ' least' → logprob: -11.125035285949707
    3. 'most' → logprob: -11.250035285949707
    4. '_le' → logprob: -12.750035285949707
    5. '#' → logprob: -13.250035285949707
    6. '
' → logprob: -14.125035285949707
    7. '   ' → logprob: -14.625035285949707
    8. 'Least' → logprob: -14.875035285949707
    9. 'last' → logprob: -15.625035285949707
    10. 'lest' → logprob: -15.750035285949707

Token 999: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.03805079311132431
    2. ' one' → logprob: -3.288050889968872
    3. 'some' → logprob: -13.413050651550293
    4. '       ' → logprob: -13.538050651550293
    5. '1' → logprob: -13.663050651550293
    6. '_one' → logprob: -13.663050651550293
    7. '   ' → logprob: -13.913050651550293
    8. 'One' → logprob: -13.913050651550293
    9. 'import' → logprob: -14.163050651550293
    10. '#' → logprob: -14.288050651550293

Token 1000: ' spell' (ID: 29176)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1888558268547058
    2. 'for' → logprob: -2.8138558864593506
    3. ' for' → logprob: -2.9388558864593506
    4. '#' → logprob: -3.6888558864593506
    5. '
' → logprob: -4.3138556480407715
    6. 'if' → logprob: -4.6888556480407715
    7. ' if' → logprob: -5.0638556480407715
    8. 'from' → logprob: -7.5638556480407715
    9. 'single' → logprob: -7.5638556480407715
    10. '   ' → logprob: -7.6888556480407715

Token 1001: ' >' (ID: 1424)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37065714597702026
    2. '#' → logprob: -1.745657205581665
    3. 'max' → logprob: -2.995657205581665
    4. 'dp' → logprob: -2.995657205581665
    5. 'from' → logprob: -4.620656967163086
    6. 'damage' → logprob: -4.995656967163086
    7. 'total' → logprob: -5.245656967163086
    8. 'if' → logprob: -5.370656967163086
    9. 'all' → logprob: -6.370656967163086
    10. 'for' → logprob: -6.495656967163086

Token 1002: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23663534224033356
    2. '=' → logprob: -1.6116353273391724
    3. ' ' → logprob: -4.611635208129883
    4. '#' → logprob: -7.736635208129883
    5. '```' → logprob: -8.861635208129883
    6. '=
' → logprob: -8.986635208129883
    7. 'for' → logprob: -9.111635208129883
    8. '       ' → logprob: -9.611635208129883
    9. ' for' → logprob: -10.361635208129883
    10. ' =' → logprob: -10.486635208129883

Token 1003: ' damage' (ID: 10364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5768545866012573
    2. 'from' → logprob: -1.8268545866012573
    3. 'dp' → logprob: -2.076854705810547
    4. '#' → logprob: -2.451854705810547
    5. 'max' → logprob: -3.201854705810547
    6. '
' → logprob: -4.451854705810547
    7. 'total' → logprob: -5.701854705810547
    8. 'damage' → logprob: -5.826854705810547
    9. 'DP' → logprob: -6.576854705810547
    10. '```' → logprob: -6.701854705810547

Token 1004: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08047867566347122
    2. '
' → logprob: -2.7054786682128906
    3. 'dp' → logprob: -5.080478668212891
    4. '        
' → logprob: -6.330478668212891
    5. 'from' → logprob: -6.705478668212891
    6. '```' → logprob: -8.33047866821289
    7. '#' → logprob: -8.58047866821289
    8. 'import' → logprob: -8.70547866821289
    9. 'DP' → logprob: -9.33047866821289
    10. ' dp' → logprob: -9.58047866821289

Token 1005: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8305119276046753
    2. 'from' → logprob: -1.7055119276046753
    3. 'dp' → logprob: -2.205512046813965
    4. '#' → logprob: -2.330512046813965
    5. '```' → logprob: -3.080512046813965
    6. '
' → logprob: -3.455512046813965
    7. 'max' → logprob: -3.455512046813965
    8. 'if' → logprob: -3.830512046813965
    9. 'all' → logprob: -3.955512046813965
    10. 'damage' → logprob: -4.330512046813965

Token 1006: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.353076696395874
    2. '
' → logprob: -1.853076696395874
    3. '       ' → logprob: -2.728076696395874
    4. 'from' → logprob: -3.853076696395874
    5. 'max' → logprob: -3.853076696395874
    6. 'damage' → logprob: -3.978076696395874
    7. 'all' → logprob: -5.228076934814453
    8. '```' → logprob: -6.103076934814453
    9. 'd' → logprob: -6.478076934814453
    10. '#' (adapté à ' #') → logprob: -6.853076934814453

Token 1007: ' So' (ID: 2632)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12134241312742233
    2. 'max' → logprob: -2.746342420578003
    3. 'from' → logprob: -4.246342182159424
    4. '#' → logprob: -4.371342182159424
    5. '       ' → logprob: -4.621342182159424
    6. 'all' → logprob: -5.496342182159424
    7. 'damage' → logprob: -5.496342182159424
    8. 'DP' → logprob: -6.246342182159424
    9. 'total' → logprob: -7.246342182159424
    10. 'single' → logprob: -7.871342182159424

Token 1008: ' single' (ID: 4590)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.722435474395752
    2. '#' → logprob: -0.972435474395752
    3. '       ' → logprob: -2.847435474395752
    4. 'continue' → logprob: -3.222435474395752
    5. ' for' → logprob: -3.597435474395752
    6. 'if' → logprob: -5.472435474395752
    7. '
' → logprob: -6.347435474395752
    8. 'import' → logprob: -6.597435474395752
    9. ' continue' → logprob: -7.597435474395752
    10. ' #' → logprob: -7.847435474395752

Token 1009: ' spells' (ID: 69967)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.002128968248143792
    2. '_' → logprob: -7.252129077911377
    3. '_spell' → logprob: -7.252129077911377
    4. '_s' → logprob: -8.752128601074219
    5. '_single' → logprob: -8.877128601074219
    6. '_target' → logprob: -9.002128601074219
    7. 'sp' → logprob: -9.377128601074219
    8. ' _' → logprob: -10.002128601074219
    9. 's' → logprob: -10.252128601074219
    10. ' spells' → logprob: -10.627128601074219

Token 1010: ' may' (ID: 1340)
  Prédit: 'might'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'might' → logprob: -1.0985194444656372
    2. ' might' → logprob: -1.4735194444656372
    3. 'may' → logprob: -1.4735194444656372
    4. ':' → logprob: -2.4735193252563477
    5. ' may' → logprob: -2.9735193252563477
    6. ' =' → logprob: -3.9735193252563477
    7. '       ' → logprob: -4.473519325256348
    8. '=' → logprob: -5.223519325256348
    9. 'for' → logprob: -5.473519325256348
    10. 'must' → logprob: -5.723519325256348

Token 1011: ' all' (ID: 722)
  Prédit: 'remain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remain' → logprob: -0.7594475746154785
    2. 'be' → logprob: -1.5094475746154785
    3. 'not' → logprob: -1.7594475746154785
    4. ' be' → logprob: -3.3844475746154785
    5. 'also' → logprob: -3.3844475746154785
    6. 'exist' → logprob: -3.7594475746154785
    7. 'still' → logprob: -4.5094475746154785
    8. ' remain' → logprob: -4.6344475746154785
    9. 'continue' → logprob: -4.7594475746154785
    10. ' not' → logprob: -5.0094475746154785

Token 1012: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.1457255482673645
    2. ' be' → logprob: -2.3957254886627197
    3. 'remain' → logprob: -3.6457254886627197
    4. 'have' → logprob: -4.395725727081299
    5. '=' → logprob: -6.145725727081299
    6. '```' → logprob: -7.020725727081299
    7. 'not' → logprob: -7.145725727081299
    8. '==' → logprob: -7.895725727081299
    9. ' =' → logprob: -8.02072525024414
    10. ' remain' → logprob: -8.27072525024414

Token 1013: ' "' (ID: 392)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.089700698852539
    2. '0' → logprob: -1.214700698852539
    3. 'zero' → logprob: -1.714700698852539
    4. 'empty' → logprob: -2.089700698852539
    5. '[]' → logprob: -4.214700698852539
    6. 'missing' → logprob: -4.714700698852539
    7. 'not' → logprob: -5.464700698852539
    8. 'present' → logprob: -5.589700698852539
    9. 'unused' → logprob: -5.714700698852539
    10. 'un' → logprob: -6.089700698852539

Token 1014: 'All' (ID: 2594)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.940188467502594
    2. 'zero' → logprob: -1.3151884078979492
    3. 'All' → logprob: -1.3151884078979492
    4. 'all' → logprob: -4.065188407897949
    5. 'Zero' → logprob: -4.565188407897949
    6. ' zero' → logprob: -4.565188407897949
    7. '"' → logprob: -4.940188407897949
    8. 'single' → logprob: -5.065188407897949
    9. 'Single' → logprob: -5.565188407897949
    10. ' ' → logprob: -6.065188407897949

Token 1015: '"' (ID: 1)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.4894717037677765
    2. ']' → logprob: -1.864471673965454
    3. '"' → logprob: -2.489471673965454
    4. '_sp' → logprob: -2.614471673965454
    5. ']"' → logprob: -2.864471673965454
    6. '"]
' → logprob: -4.864471912384033
    7. '_s' → logprob: -6.489471912384033
    8. ']
' → logprob: -6.614471912384033
    9. ']_' → logprob: -6.614471912384033
    10. 's' → logprob: -6.989471912384033

Token 1016: ' spells' (ID: 69967)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6133306622505188
    2. '       ' → logprob: -0.9883306622505188
    3. '#' → logprob: -3.738330602645874
    4. 'if' → logprob: -3.863330602645874
    5. 'dp' → logprob: -3.988330602645874
    6. ' if' → logprob: -5.238330841064453
    7. 'all' → logprob: -5.738330841064453
    8. 'from' → logprob: -5.988330841064453
    9. 'max' → logprob: -6.113330841064453
    10. '        
' → logprob: -6.113330841064453

Token 1017: ' only' (ID: 1606)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15614593029022217
    2. '       ' → logprob: -2.2811460494995117
    3. 'dp' → logprob: -3.4061460494995117
    4. '#' → logprob: -6.406146049499512
    5. '        
' → logprob: -6.531146049499512
    6. 'all' → logprob: -6.656146049499512
    7. 'if' → logprob: -6.656146049499512
    8. 'from' → logprob: -7.281146049499512
    9. '

' → logprob: -7.656146049499512
    10. 'import' → logprob: -7.781146049499512

Token 1018: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4929507374763489
    2. '
' → logprob: -1.242950677871704
    3. 'if' → logprob: -2.992950677871704
    4. ' if' → logprob: -4.117950916290283
    5. '```' → logprob: -4.742950916290283
    6. 'max' → logprob: -5.367950916290283
    7. 'dp' → logprob: -5.492950916290283
    8. '#' → logprob: -5.742950916290283
    9. 'all' → logprob: -5.867950916290283
    10. '        
' → logprob: -5.992950916290283

Token 1019: ' need' (ID: 1309)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5112612843513489
    2. '
' → logprob: -1.511261224746704
    3. 'if' → logprob: -2.886261224746704
    4. '#' → logprob: -3.011261224746704
    5. 'continue' → logprob: -3.511261224746704
    6. ' if' → logprob: -4.261261463165283
    7. '```' → logprob: -4.386261463165283
    8. 'import' → logprob: -4.511261463165283
    9. ' continue' → logprob: -6.136261463165283
    10. '        
' → logprob: -7.011261463165283

Token 1020: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.011582361534237862
    2. ' to' → logprob: -4.511582374572754
    3. 'a' → logprob: -9.011582374572754
    4. 'continue' → logprob: -9.636582374572754
    5. '
' → logprob: -9.761582374572754
    6. 's' → logprob: -9.761582374572754
    7. 'another' → logprob: -10.011582374572754
    8. '   ' → logprob: -10.136582374572754
    9. 'import' → logprob: -10.136582374572754
    10. '#' → logprob: -10.386582374572754

Token 1021: ' check' (ID: 2371)
  Prédit: 'handle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'handle' → logprob: -0.007352820597589016
    2. 'consider' → logprob: -5.507352828979492
    3. '#' → logprob: -6.257352828979492
    4. ' handle' → logprob: -8.007352828979492
    5. 'continue' → logprob: -8.007352828979492
    6. 'import' → logprob: -8.257352828979492
    7. 'change' → logprob: -9.132352828979492
    8. 'add' → logprob: -9.382352828979492
    9. 'adjust' → logprob: -9.382352828979492
    10. 'implement' → logprob: -10.757352828979492

Token 1022: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46505969762802124
    2. 'if' → logprob: -1.090059757232666
    3. ' if' → logprob: -3.590059757232666
    4. '
' → logprob: -5.090059757232666
    5. '```' → logprob: -6.465059757232666
    6. 'import' → logprob: -8.840059280395508
    7. 'single' → logprob: -9.715059280395508
    8. '   ' → logprob: -9.715059280395508
    9. '        
' → logprob: -10.465059280395508
    10. 'If' → logprob: -11.215059280395508

Token 1023: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.32463306188583374
    2. '       ' → logprob: -1.3246331214904785
    3. '
' → logprob: -5.4496331214904785
    4. 'from' → logprob: -6.6996331214904785
    5. '```' → logprob: -6.8246331214904785
    6. 'import' → logprob: -6.9496331214904785
    7. ' if' → logprob: -7.0746331214904785
    8. '#' → logprob: -7.0746331214904785
    9. 'dp' → logprob: -7.3246331214904785
    10. 'all' → logprob: -7.9496331214904785

Token 1024: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04673972725868225
    2. 'dp' → logprob: -3.2967398166656494
    3. 'from' → logprob: -5.92173957824707
    4. '       ' → logprob: -6.17173957824707
    5. '#' (adapté à ' #') → logprob: -6.42173957824707
    6. 'all' → logprob: -7.29673957824707
    7. 'max' → logprob: -8.17173957824707
    8. 'damage' → logprob: -8.17173957824707
    9. 'single' → logprob: -8.54673957824707
    10. 'total' → logprob: -8.54673957824707

Token 1025: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22355051338672638
    2. 'dp' → logprob: -1.72355055809021
    3. '#' → logprob: -4.848550319671631
    4. 'from' → logprob: -5.223550319671631
    5. 'single' → logprob: -5.973550319671631
    6. 'damage' → logprob: -6.223550319671631
    7. 'max' → logprob: -6.473550319671631
    8. 'all' → logprob: -7.223550319671631
    9. '       ' → logprob: -8.098550796508789
    10. 'total' → logprob: -8.348550796508789

Token 1026: ' no' (ID: 860)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.12514226138591766
    2. 'not' → logprob: -2.3751423358917236
    3. ' len' → logprob: -4.8751420974731445
    4. ' single' → logprob: -5.1251420974731445
    5. 'len' → logprob: -5.5001420974731445
    6. ' all' → logprob: -5.5001420974731445
    7. 'all' → logprob: -6.5001420974731445
    8. 'single' → logprob: -6.7501420974731445
    9. ' best' → logprob: -9.375142097473145
    10. ' ' → logprob: -9.750142097473145

Token 1027: ' single' (ID: 4590)
  Prédit: ' single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' single' → logprob: -0.321351557970047
    2. 'single' → logprob: -1.3213515281677246
    3. ' best' → logprob: -5.446351528167725
    4. 'best' → logprob: -5.696351528167725
    5. ' all' → logprob: -9.321352005004883
    6. 'all' → logprob: -9.446352005004883
    7. ' ' → logprob: -9.696352005004883
    8. ' not' → logprob: -9.946352005004883
    9. 'len' → logprob: -10.821352005004883
    10. ' len' → logprob: -10.946352005004883

Token 1028: ' spells' (ID: 69967)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.000750663282815367
    2. '_' → logprob: -8.375750541687012
    3. '_s' → logprob: -8.500750541687012
    4. 'sp' → logprob: -8.750750541687012
    5. ' _' → logprob: -9.750750541687012
    6. '_spell' → logprob: -10.375750541687012
    7. '```' → logprob: -10.500750541687012
    8. '_single' → logprob: -11.500750541687012
    9. ' spells' → logprob: -12.250750541687012
    10. '_targets' → logprob: -12.250750541687012

Token 1029: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48923009634017944
    2. '==' → logprob: -1.3642301559448242
    3. ' ==' → logprob: -2.239230155944824
    4. ':
' → logprob: -4.614230155944824
    5. ' =' → logprob: -4.989230155944824
    6. '=' → logprob: -5.614230155944824
    7. '       ' → logprob: -6.489230155944824
    8. 'if' → logprob: -6.989230155944824
    9. ' or' → logprob: -7.864230155944824
    10. ' and' → logprob: -7.989230155944824

Token 1030: ' best' (ID: 1636)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.286435604095459
    2. 'if' → logprob: -2.786435604095459
    3. ' if' → logprob: -3.286435604095459
    4. 'for' → logprob: -3.661435604095459
    5. 'best' → logprob: -3.786435604095459
    6. '       ' → logprob: -4.036435604095459
    7. 'total' → logprob: -4.286435604095459
    8. ' best' → logprob: -4.286435604095459
    9. ' #' → logprob: -4.411435604095459
    10. ' for' → logprob: -4.536435604095459

Token 1031: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.0004279275599401444
    2. '_sp' → logprob: -8.375428199768066
    3. 'single' → logprob: -8.875428199768066
    4. '_mp' → logprob: -10.250428199768066
    5. '```' → logprob: -11.750428199768066
    6. '_possible' → logprob: -12.625428199768066
    7. '_' → logprob: -12.875428199768066
    8. '_target' → logprob: -13.500428199768066
    9. 'Single' → logprob: -13.875428199768066
    10. '_spell' → logprob: -14.000428199768066

Token 1032: '_mp' (ID: 96508)
  Prédit: '_mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mp' → logprob: -0.0011636728886514902
    2. '_sp' → logprob: -7.001163482666016
    3. 'mp' → logprob: -8.376163482666016
    4. '_' → logprob: -11.501163482666016
    5. '```' → logprob: -12.876163482666016
    6. '_spi' → logprob: -13.376163482666016
    7. '_mc' → logprob: -13.626163482666016
    8. '_spell' → logprob: -13.876163482666016
    9. '	mp' → logprob: -14.376163482666016
    10. '_MP' → logprob: -14.751163482666016

Token 1033: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4770052134990692
    2. ' =' → logprob: -0.9770052433013916
    3. '=[' → logprob: -6.4770050048828125
    4. '==' → logprob: -7.1020050048828125
    5. '=None' → logprob: -8.602005004882812
    6. ' ==' → logprob: -9.227005004882812
    7. '=[]' → logprob: -9.602005004882812
    8. ' =[' → logprob: -9.852005004882812
    9. ' is' → logprob: -10.227005004882812
    10. '[' → logprob: -10.727005004882812

Token 1034: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12070456892251968
    2. ' =' → logprob: -2.3707046508789062
    3. '[i' → logprob: -4.870704650878906
    4. ']' → logprob: -6.120704650878906
    5. '=
' → logprob: -6.245704650878906
    6. ')' → logprob: -6.495704650878906
    7. '==' → logprob: -6.870704650878906
    8. ']=' → logprob: -6.870704650878906
    9. ' remains' → logprob: -6.995704650878906
    10. '[' → logprob: -7.245704650878906

Token 1035: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3632398843765259
    2. ' =' → logprob: -1.2382398843765259
    3. '==' → logprob: -4.488239765167236
    4. '[' → logprob: -6.738239765167236
    5. ' ==' → logprob: -7.113239765167236
    6. '```' → logprob: -7.738239765167236
    7. '=[' → logprob: -7.863239765167236
    8. '[i' → logprob: -8.613240242004395
    9. '   ' → logprob: -9.363240242004395
    10. ' is' → logprob: -9.613240242004395

Token 1036: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.33262014389038086
    2. '0' → logprob: -1.3326201438903809
    3. 'min' → logprob: -4.582620143890381
    4. 'math' → logprob: -5.207620143890381
    5. '[' → logprob: -7.082620143890381
    6. 'inf' → logprob: -7.207620143890381
    7. 'max' → logprob: -7.582620143890381
    8. 'HP' → logprob: -7.582620143890381
    9. ' INF' → logprob: -8.332620620727539
    10. ' ' → logprob: -9.332620620727539

Token 1037: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2808249890804291
    2. '       ' → logprob: -1.5308250188827515
    3. ' if' → logprob: -4.780825138092041
    4. '        
' → logprob: -4.780825138092041
    5. '<|end|>' → logprob: -5.155825138092041
    6. ',' → logprob: -6.655825138092041
    7. ')' → logprob: -7.530825138092041
    8. '```' → logprob: -7.780825138092041
    9. '

' → logprob: -8.030824661254883
    10. '  
' → logprob: -8.155824661254883

Token 1038: ' then' (ID: 1815)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.9627999067306519
    2. '       ' → logprob: -1.0877999067306519
    3. 'continue' → logprob: -1.7127999067306519
    4. '#' → logprob: -3.8378000259399414
    5. ' but' → logprob: -4.337800025939941
    6. ' and' → logprob: -4.337800025939941
    7. ' if' → logprob: -4.462800025939941
    8. '           ' → logprob: -4.587800025939941
    9. '
' → logprob: -4.962800025939941
    10. ' so' → logprob: -5.087800025939941

Token 1039: ' all' (ID: 722)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.37568429112434387
    2. 'continue' → logprob: -1.3756842613220215
    3. '       ' → logprob: -4.3756842613220215
    4. 'print' → logprob: -4.5006842613220215
    5. 'pass' → logprob: -4.5006842613220215
    6. 'total' → logprob: -5.3756842613220215
    7. 'single' → logprob: -5.7506842613220215
    8. 'for' → logprob: -5.7506842613220215
    9. 'possible' → logprob: -5.8756842613220215
    10. '```' → logprob: -5.8756842613220215

Token 1040: ' monsters' (ID: 59311)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.013752414844930172
    2. '_s' → logprob: -5.763752460479736
    3. '_single' → logprob: -5.888752460479736
    4. '```' → logprob: -6.388752460479736
    5. 'sp' → logprob: -6.513752460479736
    6. ' spells' → logprob: -7.013752460479736
    7. '_' → logprob: -7.263752460479736
    8. ' _' → logprob: -7.763752460479736
    9. '
' → logprob: -7.763752460479736
    10. '_targets' → logprob: -8.263751983642578

Token 1041: ' must' (ID: 2804)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.346531629562378
    2. '[i' → logprob: -1.596531629562378
    3. 'must' → logprob: -2.096531629562378
    4. '#' → logprob: -2.721531629562378
    5. 'are' → logprob: -2.846531629562378
    6. ' are' → logprob: -3.346531629562378
    7. ' must' → logprob: -3.471531629562378
    8. ' can' → logprob: -3.471531629562378
    9. '```' → logprob: -3.596531629562378
    10. 'remain' → logprob: -3.721531629562378

Token 1042: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.03284279257059097
    2. ' be' → logprob: -4.157842636108398
    3. '#' → logprob: -5.157842636108398
    4. '=' → logprob: -5.407842636108398
    5. '       ' → logprob: -6.532842636108398
    6. '0' → logprob: -6.907842636108398
    7. '
' → logprob: -7.032842636108398
    8. '```' → logprob: -7.032842636108398
    9. '   ' → logprob: -7.782842636108398
    10. 'can' → logprob: -8.532842636108398

Token 1043: ' killed' (ID: 17372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03890400379896164
    2. 'def' → logprob: -4.163904190063477
    3. '0' → logprob: -4.288904190063477
    4. '```' → logprob: -5.038904190063477
    5. '100' → logprob: -6.663904190063477
    6. ' killed' → logprob: -8.163904190063477
    7. 'el' → logprob: -8.663904190063477
    8. 'fully' → logprob: -9.163904190063477
    9. 'covered' → logprob: -9.288904190063477
    10. 'finished' → logprob: -9.413904190063477

Token 1044: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8337478041648865
    2. ' by' → logprob: -0.9587478041648865
    3. 'by' → logprob: -2.8337478637695312
    4. '```' → logprob: -3.2087478637695312
    5. '   ' → logprob: -4.333747863769531
    6. '           ' → logprob: -4.458747863769531
    7. '        
' → logprob: -4.958747863769531
    8. ' with' → logprob: -5.208747863769531
    9. ',' → logprob: -5.458747863769531
    10. ' if' → logprob: -5.458747863769531

Token 1045: ' All' (ID: 2545)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.020193573087453842
    2. '"' → logprob: -4.270193576812744
    3. ' all' → logprob: -5.395193576812744
    4. ''all' → logprob: -7.520193576812744
    5. 'All' → logprob: -7.770193576812744
    6. 'the' → logprob: -8.645193099975586
    7. ''' → logprob: -9.520193099975586
    8. '#' → logprob: -10.020193099975586
    9. ' "' → logprob: -10.520193099975586
    10. ' ' → logprob: -10.895193099975586

Token 1046: ' spells' (ID: 69967)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.7950533628463745
    2. '       ' → logprob: -0.9200533628463745
    3. ' if' → logprob: -3.045053482055664
    4. '
' → logprob: -3.170053482055664
    5. 'if' → logprob: -4.920053482055664
    6. ']' → logprob: -5.045053482055664
    7. 'sp' → logprob: -5.170053482055664
    8. '```' → logprob: -5.545053482055664
    9. '_s' → logprob: -5.670053482055664
    10. ' spells' → logprob: -5.795053482055664

Token 1047: ' only' (ID: 1606)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40610238909721375
    2. '       ' → logprob: -1.1561024188995361
    3. '        
' → logprob: -5.281102180480957
    4. ' if' → logprob: -5.656102180480957
    5. 'if' → logprob: -6.156102180480957
    6. 'import' → logprob: -6.406102180480957
    7. '#' → logprob: -6.656102180480957
    8. '

' → logprob: -6.906102180480957
    9. 'all' → logprob: -7.531102180480957
    10. ',' → logprob: -7.656102180480957

Token 1048: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41417595744132996
    2. '       ' → logprob: -1.1641759872436523
    3. '#' → logprob: -5.039175987243652
    4. 'dp' → logprob: -5.164175987243652
    5. '        
' → logprob: -5.664175987243652
    6. 'import' → logprob: -5.914175987243652
    7. 'if' → logprob: -6.164175987243652
    8. ' if' → logprob: -6.664175987243652
    9. 'from' → logprob: -6.789175987243652
    10. '   ' → logprob: -7.289175987243652

Token 1049: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.68633633852005
    2. 'dp' → logprob: -1.1863362789154053
    3. '
' → logprob: -1.9363362789154053
    4. 'all' → logprob: -3.3113362789154053
    5. '```' → logprob: -5.936336517333984
    6. 'if' → logprob: -6.061336517333984
    7. '        
' → logprob: -6.436336517333984
    8. 'damage' → logprob: -6.936336517333984
    9. 'DP' → logprob: -7.311336517333984
    10. 'from' → logprob: -7.436336517333984

Token 1050: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7078399062156677
    2. '       ' → logprob: -1.4578399658203125
    3. 'dp' → logprob: -1.4578399658203125
    4. 'max' → logprob: -4.0828399658203125
    5. 'from' → logprob: -4.3328399658203125
    6. 'if' (adapté à ' if') → logprob: -5.4578399658203125
    7. '#' → logprob: -5.8328399658203125
    8. '        
' → logprob: -6.7078399658203125
    9. 'damage' → logprob: -6.9578399658203125
    10. 'import' → logprob: -6.9578399658203125

Token 1051: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.432126522064209
    2. 'len' → logprob: -1.307126522064209
    3. ' not' → logprob: -3.182126522064209
    4. 'all' → logprob: -3.307126522064209
    5. ' len' → logprob: -6.557126522064209
    6. 'single' → logprob: -7.682126522064209
    7. ' all' → logprob: -8.932126998901367
    8. 'any' → logprob: -9.932126998901367
    9. 'best' → logprob: -10.432126998901367
    10. '   ' → logprob: -10.432126998901367

Token 1052: ' all' (ID: 722)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.10413084179162979
    2. 'all' → logprob: -2.604130744934082
    3. ' single' → logprob: -3.729130744934082
    4. ' all' → logprob: -7.104130744934082
    5. 'best' → logprob: -9.979130744934082
    6. 'any' → logprob: -10.729130744934082
    7. '(single' → logprob: -11.979130744934082
    8. '   ' → logprob: -12.979130744934082
    9. ' ' → logprob: -13.229130744934082
    10. ' best' → logprob: -13.416630744934082

Token 1053: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.0016410232055932283
    2. '_single' → logprob: -6.626640796661377
    3. 'single' → logprob: -9.126641273498535
    4. ':' → logprob: -9.376641273498535
    5. 'sp' → logprob: -9.501641273498535
    6. '_s' → logprob: -10.501641273498535
    7. '_' → logprob: -11.751641273498535
    8. '```' → logprob: -13.126641273498535
    9. '():' → logprob: -13.626641273498535
    10. ')' → logprob: -13.876641273498535

Token 1054: 'ells' (ID: 9703)
  Prédit: 'ells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ells' → logprob: -0.0010172100737690926
    2. '```' → logprob: -7.626017093658447
    3. 'ell' → logprob: -8.501017570495605
    4. 'e' → logprob: -9.251017570495605
    5. 'el' → logprob: -10.376017570495605
    6. 'els' → logprob: -10.626017570495605
    7. '[' → logprob: -10.751017570495605
    8. '=' → logprob: -10.876017570495605
    9. '[]' → logprob: -11.251017570495605
    10. '_' → logprob: -11.501017570495605

Token 1055: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017012449679896235
    2. ':
' → logprob: -6.626701354980469
    3. '==' → logprob: -8.001701354980469
    4. '=' → logprob: -11.126701354980469
    5. ' ==' → logprob: -11.501701354980469
    6. '):' → logprob: -12.251701354980469
    7. ':return' → logprob: -12.876701354980469
    8. '   ' → logprob: -14.001701354980469
    9. ' =' → logprob: -14.001701354980469
    10. '[' → logprob: -14.126701354980469

Token 1056: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6705833077430725
    2. ':' → logprob: -0.9205833077430725
    3. ':
' → logprob: -3.0455832481384277
    4. '       ' → logprob: -3.1705832481384277
    5. '```' → logprob: -8.545583724975586
    6. ',' → logprob: -8.920583724975586
    7. ':return' → logprob: -9.670583724975586
    8. '   ' → logprob: -9.795583724975586
    9. 'continue' → logprob: -9.920583724975586
    10. '#' → logprob: -10.295583724975586

Token 1057: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16275981068611145
    2. 'print' → logprob: -2.537759780883789
    3. '
' → logprob: -2.787759780883789
    4. '           ' → logprob: -4.912759780883789
    5. 'for' → logprob: -7.412759780883789
    6. ' print' → logprob: -7.662759780883789
    7. '        
' → logprob: -8.412759780883789
    8. '   ' → logprob: -8.537759780883789
    9. 'return' → logprob: -8.662759780883789
    10. 'continue' → logprob: -8.662759780883789

Token 1058: ' Only' (ID: 12817)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1802893579006195
    2. 'total' → logprob: -2.3052892684936523
    3. '       ' → logprob: -3.8052892684936523
    4. 'return' → logprob: -4.305289268493652
    5. 'for' → logprob: -4.430289268493652
    6. ' print' → logprob: -5.180289268493652
    7. ' total' → logprob: -5.930289268493652
    8. 'res' → logprob: -5.930289268493652
    9. 'result' → logprob: -6.055289268493652
    10. '#' → logprob: -6.805289268493652

Token 1059: ' single' (ID: 4590)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.4523800015449524
    2. ' single' → logprob: -1.0773799419403076
    3. 'return' → logprob: -5.327380180358887
    4. '   ' → logprob: -5.827380180358887
    5. 'print' → logprob: -5.952380180358887
    6. '           ' → logprob: -6.202380180358887
    7. '       ' → logprob: -6.327380180358887
    8. ':
' → logprob: -6.327380180358887
    9. ' return' → logprob: -6.452380180358887
    10. ':' → logprob: -6.577380180358887

Token 1060: ' spells' (ID: 69967)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.022537430748343468
    2. ':' → logprob: -4.0225372314453125
    3. '_' → logprob: -6.3975372314453125
    4. 'sp' → logprob: -7.3975372314453125
    5. '_spell' → logprob: -7.5225372314453125
    6. 'Sp' → logprob: -8.147537231445312
    7. '_s' → logprob: -8.397537231445312
    8. '\' → logprob: -8.647537231445312
    9. ':
' → logprob: -9.147537231445312
    10. ')' → logprob: -9.397537231445312

Token 1061: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.702400803565979
    2. ':
' → logprob: -0.702400803565979
    3. '       ' → logprob: -5.2024006843566895
    4. '           ' → logprob: -5.8274006843566895
    5. '[' → logprob: -7.7024006843566895
    6. '
' → logprob: -9.452401161193848
    7. '```' → logprob: -10.077401161193848
    8. '   ' → logprob: -10.452401161193848
    9. ':return' → logprob: -10.952401161193848
    10. '               ' → logprob: -11.077401161193848

Token 1062: ' sum' (ID: 4215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14194247126579285
    2. '
' → logprob: -2.2669425010681152
    3. 'total' → logprob: -4.266942501068115
    4. 'for' → logprob: -5.516942501068115
    5. '```' → logprob: -5.891942501068115
    6. '#' → logprob: -6.391942501068115
    7. ' total' → logprob: -6.641942501068115
    8. '           ' → logprob: -6.766942501068115
    9. 'continue' → logprob: -7.141942501068115
    10. '        
' → logprob: -7.516942501068115

Token 1063: ' best' (ID: 1636)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.2200920581817627
    2. '_best' → logprob: -1.8450920581817627
    3. '_' → logprob: -4.220091819763184
    4. 'cost' → logprob: -4.470091819763184
    5. 'best' → logprob: -5.220091819763184
    6. '_single' → logprob: -6.095091819763184
    7. '_of' → logprob: -6.220091819763184
    8. '(best' → logprob: -7.345091819763184
    9. '_hp' → logprob: -7.595091819763184
    10. ' =' → logprob: -7.720091819763184

Token 1064: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.00020926215802319348
    2. '_' → logprob: -9.625208854675293
    3. '(_' → logprob: -9.875208854675293
    4. '(single' → logprob: -10.500208854675293
    5. '```' → logprob: -11.125208854675293
    6. '(' → logprob: -11.250208854675293
    7. 'single' → logprob: -11.875208854675293
    8. '([' → logprob: -12.250208854675293
    9. '()' → logprob: -12.375208854675293
    10. '(
' → logprob: -12.625208854675293

Token 1065: '_mp' (ID: 96508)
  Prédit: '_mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mp' → logprob: -0.0001600347168277949
    2. 'mp' → logprob: -8.875160217285156
    3. '_cost' → logprob: -12.000160217285156
    4. '```' → logprob: -12.000160217285156
    5. '_' → logprob: -13.500160217285156
    6. 'cost' → logprob: -13.750160217285156
    7. '\' → logprob: -14.000160217285156
    8. 'MP' → logprob: -14.375160217285156
    9. '`' → logprob: -14.500160217285156
    10. '_MP' → logprob: -14.750160217285156

Token 1066: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9151410460472107
    2. '       ' → logprob: -1.0401411056518555
    3. '           ' → logprob: -2.6651411056518555
    4. '_cost' → logprob: -3.4151411056518555
    5. '_total' → logprob: -3.5401411056518555
    6. ':' → logprob: -3.5401411056518555
    7. ':
' → logprob: -4.1651411056518555
    8. '_sum' → logprob: -4.2901411056518555
    9. 'total' → logprob: -4.7901411056518555
    10. '
' → logprob: -4.7901411056518555

Token 1067: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31826332211494446
    2. '])' → logprob: -1.443263292312622
    3. ')' → logprob: -4.068263530731201
    4. '[i' → logprob: -4.568263530731201
    5. ']
' → logprob: -5.318263530731201
    6. ']))' → logprob: -7.443263530731201
    7. '])
' → logprob: -7.568263530731201
    8. ')]' → logprob: -8.068263053894043
    9. '           ' → logprob: -8.193263053894043
    10. '[' → logprob: -8.693263053894043

Token 1068: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018535124137997627
    2. '       ' → logprob: -4.143535137176514
    3. ':' → logprob: -6.393535137176514
    4. '               ' → logprob: -7.643535137176514
    5. ':
' → logprob: -8.893534660339355
    6. '```' → logprob: -9.518534660339355
    7. ',' → logprob: -10.393534660339355
    8. 'return' → logprob: -11.143534660339355
    9. ' =' → logprob: -11.518534660339355
    10. '=' → logprob: -11.768534660339355

Token 1069: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15964801609516144
    2. '           ' → logprob: -2.0346479415893555
    3. '       ' → logprob: -4.2846479415893555
    4. 'return' → logprob: -6.0346479415893555
    5. ' print' → logprob: -7.5346479415893555
    6. 'total' → logprob: -9.909647941589355
    7. '   ' → logprob: -11.034647941589355
    8. '
' → logprob: -11.159647941589355
    9. 'result' → logprob: -11.284647941589355
    10. '               ' → logprob: -11.534647941589355

Token 1070: ' but' (ID: 889)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016542425379157066
    2. '       ' → logprob: -4.891542434692383
    3. '           ' → logprob: -4.891542434692383
    4. 'total' → logprob: -7.266542434692383
    5. ' print' → logprob: -7.641542434692383
    6. 'result' → logprob: -9.141542434692383
    7. 'return' → logprob: -10.016542434692383
    8. '   ' → logprob: -10.641542434692383
    9. 'res' → logprob: -11.016542434692383
    10. '
' → logprob: -12.516542434692383

Token 1071: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.421146959066391
    2. '           ' → logprob: -1.9211469888687134
    3. '       ' → logprob: -2.546146869659424
    4. ' return' → logprob: -2.796146869659424
    5. 'print' → logprob: -3.546146869659424
    6. '   ' → logprob: -4.296146869659424
    7. 'continue' → logprob: -4.921146869659424
    8. 'sum' → logprob: -6.671146869659424
    9. '```' → logprob: -6.921146869659424
    10. 'result' → logprob: -7.046146869659424

Token 1072: ' some' (ID: 1236)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -1.4755198955535889
    2. 'N' → logprob: -1.6005198955535889
    3. 'any' → logprob: -1.8505198955535889
    4. 'all' → logprob: -1.9755198955535889
    5. ' all' → logprob: -2.600519895553589
    6. ' N' → logprob: -3.225519895553589
    7. 'min' → logprob: -3.475519895553589
    8. 'max' → logprob: -3.600519895553589
    9. 'best' → logprob: -3.975519895553589
    10. 'sum' → logprob: -4.600520133972168

Token 1073: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.3279114365577698
    2. '(best' → logprob: -1.702911376953125
    3. '(' → logprob: -3.702911376953125
    4. '(i' → logprob: -3.827911376953125
    5. 'any' → logprob: -4.827911376953125
    6. 'all' → logprob: -5.327911376953125
    7. '[i' → logprob: -5.327911376953125
    8. 'mon' → logprob: -5.452911376953125
    9. '_best' → logprob: -5.827911376953125
    10. 'i' → logprob: -6.077911376953125

Token 1074: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -9.729906196298543e-06
    2. '_' → logprob: -12.125009536743164
    3. 'single' → logprob: -13.375009536743164
    4. '
' → logprob: -14.000009536743164
    5. '```' → logprob: -14.375009536743164
    6. '_
' → logprob: -14.750009536743164
    7. '\' → logprob: -15.375009536743164
    8. '_sp' → logprob: -15.875009536743164
    9. '[_' → logprob: -16.250009536743164
    10. '_SINGLE' → logprob: -16.375009536743164

Token 1075: '_mp' (ID: 96508)
  Prédit: '_mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mp' → logprob: -0.0002261854097014293
    2. '_sp' → logprob: -9.000226020812988
    3. 'mp' → logprob: -10.125226020812988
    4. '```' → logprob: -10.125226020812988
    5. '\' → logprob: -12.250226020812988
    6. '_' → logprob: -12.375226020812988
    7. '[_' → logprob: -13.000226020812988
    8. '_mc' → logprob: -13.375226020812988
    9. '\[' → logprob: -13.375226020812988
    10. 'MP' → logprob: -13.750226020812988

Token 1076: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.033473026007413864
    2. '```' → logprob: -4.658473014831543
    3. '[' → logprob: -4.908473014831543
    4. '==' → logprob: -5.033473014831543
    5. ' ==' → logprob: -6.033473014831543
    6. ']' → logprob: -6.158473014831543
    7. '=' → logprob: -6.908473014831543
    8. ')' → logprob: -7.658473014831543
    9. '][' → logprob: -7.908473014831543
    10. '[j' → logprob: -7.908473014831543

Token 1077: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04858032986521721
    2. ']' → logprob: -3.9235804080963135
    3. '==' → logprob: -4.173580169677734
    4. ']==' → logprob: -5.298580169677734
    5. '```' → logprob: -6.048580169677734
    6. ' ==' → logprob: -6.048580169677734
    7. '[' → logprob: -7.048580169677734
    8. '[idx' → logprob: -7.673580169677734
    9. '[j' → logprob: -8.173580169677734
    10. '
' → logprob: -8.923580169677734

Token 1078: ' is' (ID: 382)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007397437933832407
    2. '==' → logprob: -5.132397651672363
    3. ' ==' → logprob: -7.132397651672363
    4. '[' → logprob: -8.382397651672363
    5. '```' → logprob: -8.632397651672363
    6. '.count' → logprob: -9.882397651672363
    7. '[j' → logprob: -9.882397651672363
    8. '[idx' → logprob: -9.882397651672363
    9. '[id' → logprob: -11.132397651672363
    10. '=' → logprob: -11.757397651672363

Token 1079: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0007454255828633904
    2. 'inf' → logprob: -7.7507452964782715
    3. ' INF' → logprob: -8.25074577331543
    4. '```' → logprob: -11.37574577331543
    5. 'float' → logprob: -11.62574577331543
    6. '==' → logprob: -11.62574577331543
    7. '
' → logprob: -11.75074577331543
    8. '_INF' → logprob: -12.00074577331543
    9. '   ' → logprob: -13.12574577331543
    10. '=' → logprob: -13.12574577331543

Token 1080: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7765192985534668
    2. '           ' → logprob: -1.4015192985534668
    3. ':' → logprob: -1.9015192985534668
    4. '==' → logprob: -2.901519298553467
    5. ' ==' → logprob: -3.276519298553467
    6. '[i' → logprob: -3.526519298553467
    7. '               ' → logprob: -4.651519298553467
    8. '[' → logprob: -5.526519298553467
    9. '       ' → logprob: -6.026519298553467
    10. '```' → logprob: -6.401519298553467

Token 1081: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11783938854932785
    2. '               ' → logprob: -2.8678393363952637
    3. 'print' → logprob: -3.6178393363952637
    4. 'return' → logprob: -4.617839336395264
    5. 'continue' → logprob: -5.242839336395264
    6. ' return' → logprob: -6.117839336395264
    7. 'for' → logprob: -6.117839336395264
    8. '       ' → logprob: -6.492839336395264
    9. ' print' → logprob: -6.617839336395264
    10. '                   ' → logprob: -6.867839336395264

Token 1082: ' INF' (ID: 69196)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6372681260108948
    2. '("' → logprob: -1.51226806640625
    3. '(-' → logprob: -3.01226806640625
    4. '"' → logprob: -3.01226806640625
    5. '   ' → logprob: -3.13726806640625
    6. '('' → logprob: -3.51226806640625
    7. '(' → logprob: -3.76226806640625
    8. ' -' → logprob: -4.63726806640625
    9. 'INF' → logprob: -4.76226806640625
    10. 'float' → logprob: -5.01226806640625

Token 1083: '?
' (ID: 3901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5142676830291748
    2. '
' → logprob: -1.1392676830291748
    3. '           ' → logprob: -2.764267683029175
    4. ':
' → logprob: -4.639267921447754
    5. 'print' → logprob: -6.264267921447754
    6. '        
' → logprob: -6.264267921447754
    7. '   ' → logprob: -6.889267921447754
    8. '    
' → logprob: -7.014267921447754
    9. ':' → logprob: -7.639267921447754
    10. ',' → logprob: -7.889267921447754

Token 1084: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3499637246131897
    2. '       ' → logprob: -1.224963665008545
    3. 'print' → logprob: -7.474963665008545
    4. '               ' → logprob: -8.349964141845703
    5. '   ' → logprob: -8.474964141845703
    6. 'return' → logprob: -9.349964141845703
    7. 'continue' → logprob: -9.849964141845703
    8. '```' → logprob: -9.849964141845703
    9. '
' → logprob: -9.974964141845703
    10. '(' → logprob: -10.349964141845703

Token 1085: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34356608986854553
    2. '       ' → logprob: -1.7185660600662231
    3. 'print' → logprob: -2.2185661792755127
    4. ' print' → logprob: -6.718565940856934
    5. 'return' → logprob: -7.468565940856934
    6. '
' → logprob: -7.843565940856934
    7. 'continue' → logprob: -8.843565940856934
    8. '               ' → logprob: -9.593565940856934
    9. ' return' → logprob: -9.843565940856934
    10. '   ' → logprob: -10.093565940856934

Token 1086: ' Problem' (ID: 26113)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7782370448112488
    2. '       ' → logprob: -1.2782371044158936
    3. '           ' → logprob: -1.5282371044158936
    4. 'total' → logprob: -3.2782371044158936
    5. 'result' → logprob: -5.5282368659973145
    6. 'return' → logprob: -7.0282368659973145
    7. 'if' → logprob: -7.4032368659973145
    8. ' print' → logprob: -7.5282368659973145
    9. 'res' → logprob: -7.6532368659973145
    10. ' total' → logprob: -7.7782368659973145

Token 1087: ' guaranteed' (ID: 21862)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.834312379360199
    2. ':
' → logprob: -1.5843124389648438
    3. ' =' → logprob: -2.5843124389648438
    4. '   ' → logprob: -2.7093124389648438
    5. ':' → logprob: -3.0843124389648438
    6. '```' → logprob: -3.3343124389648438
    7. '
' → logprob: -3.4593124389648438
    8. '           ' → logprob: -4.084312438964844
    9. '=' → logprob: -4.084312438964844
    10. ' if' → logprob: -4.459312438964844

Token 1088: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4373362362384796
    2. 'print' → logprob: -1.1873362064361572
    3. '
' → logprob: -3.6873362064361572
    4. ':
' → logprob: -5.062336444854736
    5. '           ' → logprob: -5.187336444854736
    6. ' print' → logprob: -5.937336444854736
    7. '   ' → logprob: -6.187336444854736
    8. ')
' → logprob: -6.687336444854736
    9. 'sum' → logprob: -6.812336444854736
    10. ' =' → logprob: -7.062336444854736

Token 1089: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.01613829843699932
    2. ' least' → logprob: -4.141138076782227
    3. '   ' → logprob: -10.266138076782227
    4. '       ' → logprob: -10.766138076782227
    5. '```' → logprob: -11.266138076782227
    6. '_le' → logprob: -11.641138076782227
    7. 'Least' → logprob: -11.891138076782227
    8. '
' → logprob: -12.516138076782227
    9. 'le' → logprob: -13.016138076782227
    10. 'return' → logprob: -13.266138076782227

Token 1090: ' one' (ID: 1001)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09797355532646179
    2. '           ' → logprob: -2.597973585128784
    3. '               ' → logprob: -4.847973346710205
    4. ')' → logprob: -6.222973346710205
    5. '```' → logprob: -6.847973346710205
    6. '   ' → logprob: -6.972973346710205
    7. '        ' → logprob: -7.222973346710205
    8. 'for' → logprob: -7.847973346710205
    9. 'least' → logprob: -7.847973346710205
    10. ':
' → logprob: -7.847973346710205

Token 1091: ' spell' (ID: 29176)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.767194926738739
    2. '
' → logprob: -1.3921949863433838
    3. 'print' → logprob: -1.8921949863433838
    4. ')
' → logprob: -3.642194986343384
    5. ' =' → logprob: -3.767194986343384
    6. 'total' → logprob: -4.142194747924805
    7. '   ' → logprob: -4.267194747924805
    8. ')' → logprob: -4.392194747924805
    9. ':
' → logprob: -4.642194747924805
    10. 'sum' → logprob: -5.017194747924805

Token 1092: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6803300380706787
    2. '       ' → logprob: -0.8053300380706787
    3. 'print' → logprob: -4.055330276489258
    4. ' =' → logprob: -5.055330276489258
    5. '           ' → logprob: -5.055330276489258
    6. ':
' → logprob: -5.680330276489258
    7. '   ' → logprob: -6.430330276489258
    8. '```' → logprob: -6.430330276489258
    9. '        
' → logprob: -6.430330276489258
    10. ')
' → logprob: -6.555330276489258

Token 1093: ' damage' (ID: 10364)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.0123423337936401
    2. 'damage' → logprob: -1.1373423337936401
    3. 'positive' → logprob: -1.7623423337936401
    4. '0' → logprob: -2.3873424530029297
    5. 'd' → logprob: -4.63734245300293
    6. ' damage' → logprob: -4.63734245300293
    7. '```' → logprob: -4.76234245300293
    8. 'non' → logprob: -4.88734245300293
    9. ' >' → logprob: -5.13734245300293
    10. ' positive' → logprob: -5.63734245300293

Token 1094: ' >' (ID: 1424)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11956021189689636
    2. '
' → logprob: -2.8695602416992188
    3. 'print' → logprob: -3.3695602416992188
    4. ':
' → logprob: -4.619560241699219
    5. '           ' → logprob: -5.244560241699219
    6. ':' → logprob: -6.619560241699219
    7. '   ' → logprob: -6.869560241699219
    8. ' =' → logprob: -7.494560241699219
    9. ',' → logprob: -7.494560241699219
    10. '        
' → logprob: -7.744560241699219

Token 1095: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005122988484799862
    2. ' ' → logprob: -5.505123138427734
    3. '=' → logprob: -6.880123138427734
    4. '```' → logprob: -12.005123138427734
    5. '=
' → logprob: -13.755123138427734
    6. '   ' → logprob: -13.880123138427734
    7. '#' → logprob: -14.255123138427734
    8. 'zero' → logprob: -14.255123138427734
    9. '1' → logprob: -14.505123138427734
    10. ' =' → logprob: -14.505123138427734

Token 1096: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6390119791030884
    2. '       ' → logprob: -0.7640119791030884
    3. 'print' → logprob: -5.764011859893799
    4. '           ' → logprob: -7.389011859893799
    5. '        
' → logprob: -7.639011859893799
    6. ',' → logprob: -8.264012336730957
    7. ')
' → logprob: -8.264012336730957
    8. '   ' → logprob: -8.264012336730957
    9. '```' → logprob: -8.264012336730957
    10. 'total' → logprob: -8.514012336730957

Token 1097: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6102142930030823
    2. 'print' → logprob: -1.1102142333984375
    3. ' print' → logprob: -3.1102142333984375
    4. '           ' → logprob: -3.9852142333984375
    5. 'total' → logprob: -3.9852142333984375
    6. 'continue' → logprob: -4.4852142333984375
    7. ' total' → logprob: -4.7352142333984375
    8. 'result' → logprob: -5.3602142333984375
    9. ' if' → logprob: -5.3602142333984375
    10. ' continue' → logprob: -5.4852142333984375

Token 1098: ' pass' (ID: 1853)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.013815799728035927
    2. '       ' → logprob: -5.013815879821777
    3. ' print' → logprob: -5.638815879821777
    4. 'total' → logprob: -6.138815879821777
    5. '           ' → logprob: -7.763815879821777
    6. 'continue' → logprob: -8.138815879821777
    7. 'result' → logprob: -8.638815879821777
    8. '
' → logprob: -8.763815879821777
    9. ' total' → logprob: -9.513815879821777
    10. 'return' → logprob: -9.763815879821777

Token 1099: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1740759015083313
    2. '
' → logprob: -1.9240758419036865
    3. ':
' → logprob: -5.799076080322266
    4. '   ' → logprob: -6.174076080322266
    5. '        
' → logprob: -6.549076080322266
    6. '           ' → logprob: -6.674076080322266
    7. ')' → logprob: -7.174076080322266
    8. '  
' → logprob: -7.299076080322266
    9. ' 
' → logprob: -7.424076080322266
    10. ')
' → logprob: -7.424076080322266

Token 1100: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07999701052904129
    2. '           ' → logprob: -2.5799970626831055
    3. '
' → logprob: -7.5799970626831055
    4. '   ' → logprob: -8.454997062683105
    5. '        
' → logprob: -8.954997062683105
    6. 'print' → logprob: -9.829997062683105
    7. '```' → logprob: -9.954997062683105
    8. 'return' → logprob: -10.329997062683105
    9. 'continue' → logprob: -10.454997062683105
    10. '    
' → logprob: -11.079997062683105

Token 1101: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5549527406692505
    2. 'print' (adapté à ' print') → logprob: -0.9299527406692505
    3. '           ' → logprob: -3.679952621459961
    4. 'total' → logprob: -5.679952621459961
    5. ' print' → logprob: -6.929952621459961
    6. 'return' → logprob: -7.304952621459961
    7. '
' → logprob: -7.804952621459961
    8. 'result' → logprob: -8.304952621459961
    9. '   ' → logprob: -8.429952621459961
    10. ' total' → logprob: -9.429952621459961

Token 1102: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.00532531226053834
    2. '(' → logprob: -5.2553253173828125
    3. 'sum' → logprob: -9.755325317382812
    4. '('' → logprob: -11.380325317382812
    5. ' (' → logprob: -11.505325317382812
    6. '   ' → logprob: -12.505325317382812
    7. '(
' → logprob: -12.880325317382812
    8. '(int' → logprob: -13.255325317382812
    9. '(min' → logprob: -14.130325317382812
    10. '("' → logprob: -14.380325317382812

Token 1103: '(best' (ID: 118299)
  Prédit: '(best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(best' → logprob: -0.0232679583132267
    2. 'best' → logprob: -3.773267984390259
    3. ' best' → logprob: -10.77326774597168
    4. '(' → logprob: -14.02326774597168
    5. '	best' → logprob: -15.27326774597168
    6. '_best' → logprob: -15.77326774597168
    7. '(
' → logprob: -16.52326774597168
    8. '([' → logprob: -17.27326774597168
    9. '
' → logprob: -17.27326774597168
    10. '(i' → logprob: -17.52326774597168

Token 1104: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -16.25
    3. '```' → logprob: -16.875
    4. '_SINGLE' → logprob: -17.0
    5. ')_' → logprob: -17.25
    6. '
' → logprob: -17.5
    7. 'single' → logprob: -17.5
    8. '[_' → logprob: -17.875
    9. 'Single' → logprob: -18.25
    10. '_best' → logprob: -18.375

Token 1105: '_mp' (ID: 96508)
  Prédit: '_mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mp' → logprob: -0.00010914575977949426
    2. 'mp' → logprob: -9.12510871887207
    3. 'MP' → logprob: -16.75010871887207
    4. '_dp' → logprob: -17.00010871887207
    5. ' mp' → logprob: -17.12510871887207
    6. '_' → logprob: -17.37510871887207
    7. '	mp' → logprob: -18.25010871887207
    8. '_hp' → logprob: -18.37510871887207
    9. '_pm' → logprob: -18.62510871887207
    10. '```' → logprob: -18.87510871887207

Token 1106: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.09208402037620544
    2. ')' → logprob: -2.4670839309692383
    3. '))
' → logprob: -6.217083930969238
    4. '[i' → logprob: -6.967083930969238
    5. '()))' → logprob: -9.842083930969238
    6. ')))' → logprob: -9.967083930969238
    7. '   ' → logprob: -10.342083930969238
    8. '())' → logprob: -11.342083930969238
    9. ')
' → logprob: -11.342083930969238
    10. ' ))' → logprob: -11.967083930969238

Token 1107: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36302831768989563
    2. '<|end|>' → logprob: -1.4880282878875732
    3. '
' → logprob: -3.1130282878875732
    4. ')' → logprob: -3.6130282878875732
    5. '<|end|>' → logprob: -5.613028526306152
    6. '```' → logprob: -6.988028526306152
    7. '\n' → logprob: -7.613028526306152
    8. '   ' → logprob: -7.988028526306152
    9. '        
' → logprob: -8.113028526306152
    10. 'continue' → logprob: -8.113028526306152

Token 1108: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03938809782266617
    2. 'continue' (adapté à ' continue') → logprob: -4.164388179779053
    3. '
' → logprob: -4.414388179779053
    4. '           ' → logprob: -5.164388179779053
    5. ' continue' → logprob: -6.414388179779053
    6. ')' → logprob: -6.664388179779053
    7. '<|end|>' → logprob: -7.039388179779053
    8. '        
' → logprob: -7.539388179779053
    9. '	continue' → logprob: -8.539387702941895
    10. '   ' → logprob: -9.164387702941895

Token 1109: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6580976843833923
    2. '       ' → logprob: -0.7830976843833923
    3. '        
' → logprob: -4.408097743988037
    4. 'for' → logprob: -5.408097743988037
    5. '```' → logprob: -6.783097743988037
    6. '<|end|>' → logprob: -6.908097743988037
    7. ')' → logprob: -7.283097743988037
    8. '#' → logprob: -7.408097743988037
    9. 'all' → logprob: -7.533097743988037
    10. '    
' → logprob: -7.533097743988037

Token 1110: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5528745651245117
    2. '       ' → logprob: -1.1778745651245117
    3. '
' → logprob: -2.4278745651245117
    4. 'from' → logprob: -4.427874565124512
    5. 'max' → logprob: -4.802874565124512
    6. 'damage' → logprob: -6.052874565124512
    7. 'all' → logprob: -6.427874565124512
    8. '```' → logprob: -6.552874565124512
    9. '#' → logprob: -6.927874565124512
    10. 'DP' → logprob: -7.052874565124512

Token 1111: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10144316405057907
    2. 'max' → logprob: -2.97644305229187
    3. 'from' → logprob: -4.101443290710449
    4. '#' (adapté à ' #') → logprob: -4.476443290710449
    5. '       ' → logprob: -4.601443290710449
    6. 'DP' → logprob: -5.976443290710449
    7. 'all' → logprob: -6.226443290710449
    8. 'damage' → logprob: -6.226443290710449
    9. '
' → logprob: -8.47644329071045
    10. 'MAX' → logprob: -8.72644329071045

Token 1112: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.024783827364444733
    2. 'max' → logprob: -4.024783611297607
    3. 'from' → logprob: -5.649783611297607
    4. '       ' → logprob: -6.399783611297607
    5. '#' → logprob: -7.399783611297607
    6. 'damage' → logprob: -8.024784088134766
    7. 'DP' → logprob: -8.399784088134766
    8. 'all' → logprob: -9.024784088134766
    9. 'MAX' → logprob: -9.774784088134766
    10. '   ' → logprob: -10.774784088134766

Token 1113: ' for' (ID: 395)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08309614658355713
    2. ' =' → logprob: -2.8330960273742676
    3. '=' → logprob: -5.708096027374268
    4. 'max' → logprob: -5.708096027374268
    5. '
' → logprob: -5.833096027374268
    6. 'all' → logprob: -6.083096027374268
    7. '_dp' → logprob: -6.333096027374268
    8. '```' → logprob: -6.583096027374268
    9. '[' → logprob: -6.958096027374268
    10. ' dp' → logprob: -7.083096027374268

Token 1114: ' all' (ID: 722)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.43864306807518005
    2. 'damage' → logprob: -2.063642978668213
    3. ' dp' → logprob: -2.563642978668213
    4. 'max' → logprob: -2.688642978668213
    5. 'd' → logprob: -3.563642978668213
    6. ' damage' → logprob: -3.813642978668213
    7. ' max' → logprob: -4.438642978668213
    8. 'all' → logprob: -4.438642978668213
    9. 'D' → logprob: -6.188642978668213
    10. ' all' → logprob: -6.563642978668213

Token 1115: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.12603993713855743
    2. 'sp' → logprob: -3.126039981842041
    3. '_damage' → logprob: -3.626039981842041
    4. '_dp' → logprob: -4.501039981842041
    5. 'dp' → logprob: -4.626039981842041
    6. ' =' → logprob: -4.626039981842041
    7. 'damage' → logprob: -5.001039981842041
    8. '```' → logprob: -6.251039981842041
    9. '_' → logprob: -6.626039981842041
    10. '   ' → logprob: -6.876039981842041

Token 1116: 'ells' (ID: 9703)
  Prédit: 'ells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ells' → logprob: -0.01569845713675022
    2. '=' → logprob: -5.640698432922363
    3. '```' → logprob: -5.765698432922363
    4. 'ell' → logprob: -6.015698432922363
    5. '   ' → logprob: -6.265698432922363
    6. '
' → logprob: -7.015698432922363
    7. 'ects' → logprob: -7.515698432922363
    8. 'e' → logprob: -7.765698432922363
    9. '       ' → logprob: -8.015698432922363
    10. 'el' → logprob: -8.265698432922363

Token 1117: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007709430996328592
    2. '=' → logprob: -5.507709503173828
    3. '_size' → logprob: -7.007709503173828
    4. '_dp' → logprob: -7.007709503173828
    5. '   ' → logprob: -7.382709503173828
    6. 'dp' → logprob: -8.507709503173828
    7. '_max' → logprob: -8.882709503173828
    8. '_damage' → logprob: -9.007709503173828
    9. '_' → logprob: -9.132709503173828
    10. ':' → logprob: -9.757709503173828

Token 1118: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.018077248707413673
    2. '       ' → logprob: -4.268077373504639
    3. 'max' → logprob: -5.768077373504639
    4. 'damage' → logprob: -8.51807689666748
    5. '```' → logprob: -8.64307689666748
    6. 'size' → logprob: -9.26807689666748
    7. 'from' → logprob: -9.39307689666748
    8. '   ' → logprob: -9.51807689666748
    9. ' dp' → logprob: -9.89307689666748
    10. '
' → logprob: -9.89307689666748

Token 1119: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003072187304496765
    2. 'max' → logprob: -6.378072261810303
    3. 'from' → logprob: -6.878072261810303
    4. '       ' → logprob: -9.003071784973145
    5. '   ' → logprob: -9.253071784973145
    6. 'damage' → logprob: -9.753071784973145
    7. '```' → logprob: -11.003071784973145
    8. ' dp' → logprob: -11.503071784973145
    9. 'import' → logprob: -11.878071784973145
    10. 'DP' → logprob: -11.878071784973145

Token 1120: ' We' (ID: 1416)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.012375901453197002
    2. 'from' → logprob: -5.012375831604004
    3. 'max' → logprob: -5.262375831604004
    4. '   ' → logprob: -8.512375831604004
    5. '       ' → logprob: -8.762375831604004
    6. 'damage' → logprob: -10.512375831604004
    7. 'import' → logprob: -10.887375831604004
    8. ' dp' → logprob: -10.887375831604004
    9. '#' → logprob: -11.387375831604004
    10. 'MAX' → logprob: -11.762375831604004

Token 1121: ' want' (ID: 1682)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.380235880613327
    2. ' =' → logprob: -1.3802359104156494
    3. '_' → logprob: -3.3802359104156494
    4. '_dp' → logprob: -4.50523567199707
    5. '[' → logprob: -5.50523567199707
    6. '
' → logprob: -5.75523567199707
    7. 'dp' → logprob: -6.25523567199707
    8. ']' → logprob: -6.63023567199707
    9. ' will' → logprob: -7.25523567199707
    10. '#' → logprob: -7.38023567199707

Token 1122: ' minimal' (ID: 19957)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01462576538324356
    2. 'max' → logprob: -4.764625549316406
    3. '
' → logprob: -6.514625549316406
    4. '{' → logprob: -6.639625549316406
    5. '   ' → logprob: -6.889625549316406
    6. ' dp' → logprob: -7.639625549316406
    7. '{
' → logprob: -8.139625549316406
    8. 'd' → logprob: -8.139625549316406
    9. '       ' → logprob: -8.264625549316406
    10. 'from' → logprob: -8.639625549316406

Token 1123: ' cost' (ID: 3097)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.9326159954071045
    2. 'cost' → logprob: -1.4326159954071045
    3. 'dp' → logprob: -1.8076159954071045
    4. '_dp' → logprob: -2.3076159954071045
    5. ' =' → logprob: -3.3076159954071045
    6. '```' → logprob: -3.9326159954071045
    7. '_mp' → logprob: -4.557616233825684
    8. '
' → logprob: -4.682616233825684
    9. '   ' → logprob: -5.182616233825684
    10. 'import' → logprob: -5.182616233825684

Token 1124: ' to' (ID: 316)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.33557018637657166
    2. ' =' → logprob: -1.585570216178894
    3. '_to' → logprob: -2.8355700969696045
    4. 'dp' → logprob: -5.460570335388184
    5. '_cost' → logprob: -6.085570335388184
    6. '=' → logprob: -6.210570335388184
    7. '```' → logprob: -6.210570335388184
    8. '_d' → logprob: -6.585570335388184
    9. '_' → logprob: -6.710570335388184
    10. '_sp' → logprob: -6.710570335388184

Token 1125: ' get' (ID: 717)
  Prédit: 'ach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.335680216550827
    2. 'reach' → logprob: -1.8356802463531494
    3. 'get' → logprob: -3.2106802463531494
    4. ' achieve' → logprob: -3.7106802463531494
    5. 'use' → logprob: -3.9606802463531494
    6. '#' → logprob: -4.83568000793457
    7. 'damage' → logprob: -5.21068000793457
    8. 'cover' → logprob: -5.21068000793457
    9. 'ob' → logprob: -5.71068000793457
    10. '0' → logprob: -5.83568000793457

Token 1126: ' total' (ID: 3609)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8715919852256775
    2. ' a' → logprob: -1.6215920448303223
    3. 'damage' → logprob: -2.7465920448303223
    4. 'to' → logprob: -3.1215920448303223
    5. 'all' → logprob: -3.2465920448303223
    6. '0' → logprob: -3.3715920448303223
    7. '
' → logprob: -3.6215920448303223
    8. 'total' → logprob: -3.7465920448303223
    9. ' all' → logprob: -4.121592044830322
    10. 'd' → logprob: -4.121592044830322

Token 1127: ' damage' (ID: 10364)
  Prédit: '_damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_damage' → logprob: -0.5376814007759094
    2. 'damage' → logprob: -0.9126814007759094
    3. '_' → logprob: -4.787681579589844
    4. ' damage' → logprob: -6.037681579589844
    5. '_d' → logprob: -6.662681579589844
    6. ' _' → logprob: -7.037681579589844
    7. 'Damage' → logprob: -8.037681579589844
    8. 'd' → logprob: -8.662681579589844
    9. ' ' → logprob: -8.787681579589844
    10. '   ' → logprob: -9.037681579589844

Token 1128: ' D' (ID: 415)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7217447757720947
    2. '_dp' → logprob: -1.4717447757720947
    3. '_to' → logprob: -1.8467447757720947
    4. '=' → logprob: -3.4717447757720947
    5. '_' → logprob: -4.346744537353516
    6. '_d' → logprob: -4.721744537353516
    7. '_for' → logprob: -4.971744537353516
    8. '
' → logprob: -5.096744537353516
    9. '```' → logprob: -5.096744537353516
    10. '   ' → logprob: -5.221744537353516

Token 1129: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0845356285572052
    2. '_dp' → logprob: -2.959535598754883
    3. '=' → logprob: -4.709535598754883
    4. 'dp' → logprob: -4.834535598754883
    5. '       ' → logprob: -5.334535598754883
    6. '   ' → logprob: -5.834535598754883
    7. '_' → logprob: -6.959535598754883
    8. '_max' → logprob: -7.709535598754883
    9. ',' → logprob: -7.834535598754883
    10. ' dp' → logprob: -8.084535598754883

Token 1130: 'ap' (ID: 403)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20839369297027588
    2. ' +' → logprob: -1.9583936929702759
    3. ')' → logprob: -3.9583935737609863
    4. '=' → logprob: -4.083393573760986
    5. ' =' → logprob: -5.458393573760986
    6. ')
' → logprob: -6.458393573760986
    7. '0' → logprob: -7.083393573760986
    8. 'from' → logprob: -7.083393573760986
    9. ',' → logprob: -7.708393573760986
    10. '
' → logprob: -7.708393573760986

Token 1131: 'plied' (ID: 5649)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7661367654800415
    2. 'plied' → logprob: -1.1411367654800415
    3. 'ply' → logprob: -2.016136646270752
    4. ')' → logprob: -3.641136646270752
    5. 'prox' → logprob: -3.891136646270752
    6. ']' → logprob: -4.516136646270752
    7. 'pl' → logprob: -4.891136646270752
    8. '[' → logprob: -5.766136646270752
    9. 'plic' → logprob: -6.266136646270752
    10. '])' → logprob: -6.391136646270752

Token 1132: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6587345004081726
    2. 'to' → logprob: -1.6587345600128174
    3. ')' → logprob: -2.2837345600128174
    4. ' to' → logprob: -2.5337345600128174
    5. '```' → logprob: -3.1587345600128174
    6. '_to' → logprob: -3.6587345600128174
    7. '       ' → logprob: -4.783734321594238
    8. ']' → logprob: -4.908734321594238
    9. '_' → logprob: -5.533734321594238
    10. ',' → logprob: -5.533734321594238

Token 1133: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.20490072667598724
    2. ' all' → logprob: -1.7049007415771484
    3. ')' → logprob: -7.079900741577148
    4. 'the' → logprob: -7.329900741577148
    5. 'mon' → logprob: -7.579900741577148
    6. 'All' → logprob: -7.954900741577148
    7. '```' → logprob: -8.829900741577148
    8. ' ' → logprob: -8.954900741577148
    9. ' monsters' → logprob: -9.079900741577148
    10. ' the' → logprob: -9.079900741577148

Token 1134: ' monsters' (ID: 59311)
  Prédit: '_mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mon' → logprob: -0.08078616112470627
    2. 'mon' → logprob: -3.2057862281799316
    3. ')' → logprob: -4.330786228179932
    4. '_' → logprob: -4.580786228179932
    5. '_targets' → logprob: -5.205786228179932
    6. ' _' → logprob: -5.955786228179932
    7. '_sp' → logprob: -5.955786228179932
    8. ' monsters' → logprob: -7.205786228179932
    9. ' )' → logprob: -7.955786228179932
    10. '_m' → logprob: -8.080785751342773

Token 1135: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1660131216049194
    2. '_' → logprob: -1.1660131216049194
    3. ']' → logprob: -2.291013240814209
    4. '```' → logprob: -2.541013240814209
    5. '       ' → logprob: -3.291013240814209
    6. '[' → logprob: -3.291013240814209
    7. ',' → logprob: -4.291013240814209
    8. '   ' → logprob: -4.666013240814209
    9. '):' → logprob: -4.791013240814209
    10. '=' → logprob: -4.791013240814209

Token 1136: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.35062727332115173
    2. '       ' → logprob: -2.2256271839141846
    3. ' =' → logprob: -2.9756271839141846
    4. '
' → logprob: -3.8506271839141846
    5. '```' → logprob: -3.8506271839141846
    6. ':' → logprob: -3.9756271839141846
    7. '   ' → logprob: -3.9756271839141846
    8. ' dp' → logprob: -4.225627422332764
    9. '_dp' → logprob: -4.600627422332764
    10. '=' → logprob: -4.600627422332764

Token 1137: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.022798480466008186
    2. '       ' → logprob: -4.897798538208008
    3. ' =' → logprob: -5.272798538208008
    4. 'max' → logprob: -6.647798538208008
    5. '_dp' → logprob: -6.647798538208008
    6. '```' → logprob: -6.647798538208008
    7. '=' → logprob: -6.897798538208008
    8. '
' → logprob: -7.147798538208008
    9. '   ' → logprob: -7.272798538208008
    10. 'DP' → logprob: -7.397798538208008

Token 1138: ' D' (ID: 415)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011762863025069237
    2. '       ' → logprob: -5.261763095855713
    3. 'from' → logprob: -5.261763095855713
    4. 'max' → logprob: -7.386763095855713
    5. 'damage' → logprob: -8.261762619018555
    6. '   ' → logprob: -8.636762619018555
    7. 'all' → logprob: -9.261762619018555
    8. 'import' → logprob: -10.136762619018555
    9. '
' → logprob: -10.136762619018555
    10. ' dp' → logprob: -10.636762619018555

Token 1139: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4136244058609009
    2. '=' → logprob: -1.1636244058609009
    3. '_max' → logprob: -4.413624286651611
    4. 'max' → logprob: -5.538624286651611
    5. '_dp' → logprob: -5.663624286651611
    6. ',' → logprob: -6.538624286651611
    7. 'dp' → logprob: -6.788624286651611
    8. 's' → logprob: -7.163624286651611
    9. '_range' → logprob: -7.288624286651611
    10. '_' → logprob: -7.788624286651611

Token 1140: ' go' (ID: 810)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30008959770202637
    2. ' =' → logprob: -1.8000895977020264
    3. ' be' → logprob: -3.0500895977020264
    4. 'range' → logprob: -3.4250895977020264
    5. ' range' → logprob: -4.5500898361206055
    6. 'be' → logprob: -6.5500898361206055
    7. '_range' → logprob: -7.4250898361206055
    8. '<=' → logprob: -8.050089836120605
    9. ')' → logprob: -8.550089836120605
    10. ' <=' → logprob: -8.800089836120605

Token 1141: ' max' (ID: 2999)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.188273549079895
    2. '=' → logprob: -1.438273549079895
    3. ' up' → logprob: -1.438273549079895
    4. 'up' → logprob: -1.563273549079895
    5. ' =' → logprob: -5.3132734298706055
    6. ' from' → logprob: -5.9382734298706055
    7. 'to' → logprob: -7.0632734298706055
    8. '0' → logprob: -7.3132734298706055
    9. '       ' → logprob: -7.5632734298706055
    10. 'range' → logprob: -7.8132734298706055

Token 1142: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22148911654949188
    2. '=' → logprob: -1.8464890718460083
    3. '+' → logprob: -4.596488952636719
    4. 'up' → logprob: -4.721488952636719
    5. 'HP' → logprob: -5.221488952636719
    6. ' up' → logprob: -5.346488952636719
    7. ' +' → logprob: -5.471488952636719
    8. '   ' → logprob: -6.346488952636719
    9. '=max' → logprob: -6.596488952636719
    10. 'max' → logprob: -7.596488952636719

Token 1143: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.47443920373916626
    2. ' max' → logprob: -0.9744392037391663
    3. '   ' → logprob: -8.47443962097168
    4. '(max' → logprob: -10.34943962097168
    5. ' ' → logprob: -10.47443962097168
    6. 'sum' → logprob: -10.84943962097168
    7. '```' → logprob: -10.97443962097168
    8. '[max' → logprob: -11.34943962097168
    9. '`' → logprob: -11.97443962097168
    10. '=max' → logprob: -11.97443962097168

Token 1144: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.00241572642698884
    2. '_HP' → logprob: -6.752415657043457
    3. '_H' → logprob: -7.377415657043457
    4. '_' → logprob: -8.752415657043457
    5. '_hp' → logprob: -9.252415657043457
    6. 'H' → logprob: -9.252415657043457
    7. '+' → logprob: -9.627415657043457
    8. 'DP' → logprob: -10.377415657043457
    9. '_D' → logprob: -10.502415657043457
    10. '```' → logprob: -10.877415657043457

Token 1145: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9761077165603638
    2. '
' → logprob: -1.6011077165603638
    3. ' =' → logprob: -1.7261077165603638
    4. '_dp' → logprob: -2.226107597351074
    5. 'max' → logprob: -4.101107597351074
    6. '=' → logprob: -4.226107597351074
    7. ',' → logprob: -4.476107597351074
    8. '       ' → logprob: -4.601107597351074
    9. '```' → logprob: -4.601107597351074
    10. '_max' → logprob: -4.851107597351074

Token 1146: 'no' (ID: 1750)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0072534154169261456
    2. ' +' → logprob: -5.007253646850586
    3. ')+' → logprob: -8.257253646850586
    4. ')' → logprob: -8.507253646850586
    5. ')
' → logprob: -10.257253646850586
    6. '+
' → logprob: -11.132253646850586
    7. ']+' → logprob: -11.757253646850586
    8. '=' → logprob: -12.257253646850586
    9. '
' → logprob: -12.632253646850586
    10. '+)' → logprob: -13.132253646850586

Token 1147: ' need' (ID: 1309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8877549767494202
    2. ' +' → logprob: -1.7627549171447754
    3. ' =' → logprob: -1.7627549171447754
    4. '_' → logprob: -2.5127549171447754
    5. '=' → logprob: -2.8877549171447754
    6. '_damage' → logprob: -3.5127549171447754
    7. '   ' → logprob: -4.262754917144775
    8. '       ' → logprob: -4.387754917144775
    9. ')' → logprob: -4.887754917144775
    10. ' +=' → logprob: -5.512754917144775

Token 1148: ' above' (ID: 5151)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2650715410709381
    2. ' +' → logprob: -1.5150715112686157
    3. '=' → logprob: -5.140071392059326
    4. 'to' → logprob: -6.390071392059326
    5. ' to' → logprob: -6.515071392059326
    6. '   ' → logprob: -7.140071392059326
    7. '       ' → logprob: -7.265071392059326
    8. ')' → logprob: -7.265071392059326
    9. ')+' → logprob: -7.765071392059326
    10. ' =' → logprob: -7.765071392059326

Token 1149: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5591037273406982
    2. '+' → logprob: -1.4341037273406982
    3. ' +' → logprob: -2.4341037273406982
    4. ' max' → logprob: -3.3091037273406982
    5. ' =' → logprob: -4.309103965759277
    6. ')' → logprob: -4.309103965759277
    7. '=' → logprob: -4.434103965759277
    8. '=max' → logprob: -4.684103965759277
    9. ')+' → logprob: -5.934103965759277
    10. ')
' → logprob: -6.184103965759277

Token 1150: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.2837206721305847
    2. '_damage' → logprob: -1.9087207317352295
    3. 'Damage' → logprob: -3.4087207317352295
    4. '_HP' → logprob: -4.28372049331665
    5. 'damage' → logprob: -4.65872049331665
    6. '_hp' → logprob: -4.78372049331665
    7. ')' → logprob: -4.90872049331665
    8. '_' → logprob: -4.90872049331665
    9. 'DP' → logprob: -5.28372049331665
    10. '_D' → logprob: -5.78372049331665

Token 1151: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03867923468351364
    2. ' +' → logprob: -3.2886791229248047
    3. '       ' → logprob: -8.288679122924805
    4. '+
' → logprob: -9.038679122924805
    5. '
' → logprob: -9.663679122924805
    6. '   ' → logprob: -10.288679122924805
    7. ')' → logprob: -10.413679122924805
    8. ')+' → logprob: -10.538679122924805
    9. ']+' → logprob: -10.788679122924805
    10. ']' → logprob: -10.788679122924805

Token 1152: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.42035314440727234
    2. '       ' → logprob: -1.5453531742095947
    3. '
' → logprob: -2.4203531742095947
    4. '   ' → logprob: -5.045352935791016
    5. '_dp' → logprob: -5.045352935791016
    6. ' dp' → logprob: -5.295352935791016
    7. '```' → logprob: -5.295352935791016
    8. ':' → logprob: -5.670352935791016
    9. ',' → logprob: -5.795352935791016
    10. ' =' → logprob: -6.170352935791016

Token 1153: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.02789202332496643
    2. '       ' → logprob: -3.6528921127319336
    3. ' dp' → logprob: -7.902892112731934
    4. 'damage' → logprob: -7.902892112731934
    5. 'DP' → logprob: -8.652892112731934
    6. '
' → logprob: -8.652892112731934
    7. 'from' → logprob: -8.902892112731934
    8. 'max' → logprob: -9.152892112731934
    9. '```' → logprob: -9.277892112731934
    10. '   ' → logprob: -9.277892112731934

Token 1154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006036750040948391
    2. '=' → logprob: -5.131036758422852
    3. '=[' → logprob: -9.256036758422852
    4. '[' → logprob: -12.131036758422852
    5. ' =[' → logprob: -12.881036758422852
    6. '```' → logprob: -13.006036758422852
    7. '   ' → logprob: -13.756036758422852
    8. ' ' → logprob: -14.631036758422852
    9. '=[]' → logprob: -15.631036758422852
    10. ']' → logprob: -16.13103675842285

Token 1155: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011403311509639025
    2. ' [' → logprob: -9.250114440917969
    3. '{' → logprob: -11.625114440917969
    4. '[-' → logprob: -12.000114440917969
    5. '[int' → logprob: -13.750114440917969
    6. '[min' → logprob: -14.375114440917969
    7. '[max' → logprob: -14.750114440917969
    8. '[m' → logprob: -15.125114440917969
    9. '[new' → logprob: -16.87511444091797
    10. '[a' → logprob: -16.87511444091797

Token 1156: 'INF' (ID: 64358)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4059799313545227
    2. 'INF' → logprob: -1.530979871749878
    3. 'math' → logprob: -2.280979871749878
    4. 'float' → logprob: -4.405980110168457
    5. '[' → logprob: -6.280980110168457
    6. '0' → logprob: -7.530980110168457
    7. '(' → logprob: -8.280980110168457
    8. 'inf' → logprob: -9.530980110168457
    9. 'None' → logprob: -9.905980110168457
    10. '(math' → logprob: -10.655980110168457

Token 1157: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.30473989248275757
    2. '+' → logprob: -1.5547399520874023
    3. ' +' → logprob: -3.1797399520874023
    4. ']+' → logprob: -5.679739952087402
    5. ' ]' → logprob: -5.679739952087402
    6. ']*' → logprob: -6.804739952087402
    7. '   ' → logprob: -7.929739952087402
    8. ']*(' → logprob: -8.054739952087402
    9. '<|end|>' → logprob: -8.304739952087402
    10. '+]' → logprob: -8.679739952087402

Token 1158: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2113979209971149e-05
    2. '(max' → logprob: -11.625012397766113
    3. ' max' → logprob: -13.625012397766113
    4. '100' → logprob: -13.625012397766113
    5. '[max' → logprob: -15.375012397766113
    6. '   ' → logprob: -15.500012397766113
    7. '           ' → logprob: -16.125011444091797
    8. '       ' → logprob: -16.250011444091797
    9. '=max' → logprob: -18.500011444091797
    10. '	max' → logprob: -18.625011444091797

Token 1159: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -6.170270353322849e-05
    2. '_HP' → logprob: -9.750061988830566
    3. '_hp' → logprob: -13.000061988830566
    4. '+' → logprob: -14.250061988830566
    5. 'hp' → logprob: -15.375061988830566
    6. '   ' → logprob: -16.75006103515625
    7. ' HP' → logprob: -16.75006103515625
    8. '
' → logprob: -16.87506103515625
    9. '_H' → logprob: -17.62506103515625
    10. '```' → logprob: -17.62506103515625

Token 1160: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004307884373702109
    2. ' +' → logprob: -7.750430583953857
    3. ')+' → logprob: -17.250431060791016
    4. '+
' → logprob: -17.375431060791016
    5. '[' → logprob: -18.125431060791016
    6. '```' → logprob: -18.125431060791016
    7. ']+' → logprob: -18.500431060791016
    8. '＋' → logprob: -18.875431060791016
    9. '1' → logprob: -19.125431060791016
    10. '0' → logprob: -19.500431060791016

Token 1161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011558275582501665
    2. '2' → logprob: -9.375115394592285
    3. ' ' → logprob: -10.500115394592285
    4. '   ' → logprob: -13.250115394592285
    5. '
' → logprob: -14.375115394592285
    6. '101' → logprob: -14.375115394592285
    7. '  ' → logprob: -17.0001163482666
    8. '100' → logprob: -17.1251163482666
    9. ')' → logprob: -17.8126163482666
    10. '

' → logprob: -18.0626163482666

Token 1162: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06572961062192917
    2. ')
' → logprob: -3.3157296180725098
    3. '+' → logprob: -3.6907296180725098
    4. ' +' → logprob: -6.44072961807251
    5. '
' → logprob: -8.065729141235352
    6. '```' → logprob: -8.940729141235352
    7. ' )' → logprob: -9.190729141235352
    8. '   ' → logprob: -9.440729141235352
    9. ']' → logprob: -10.565729141235352
    10. ' )
' → logprob: -11.315729141235352

Token 1163: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0008042682893574238
    2. '0' → logprob: -8.25080394744873
    3. ' dp' → logprob: -8.25080394744873
    4. '=' → logprob: -8.87580394744873
    5. '[' → logprob: -9.75080394744873
    6. '```' → logprob: -10.62580394744873
    7. '	dp' → logprob: -10.87580394744873
    8. '_dp' → logprob: -11.12580394744873
    9. '   ' → logprob: -11.50080394744873
    10. '       ' → logprob: -11.50080394744873

Token 1164: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -6.778209353797138e-05
    2. '0' → logprob: -9.750067710876465
    3. ' dp' → logprob: -12.375067710876465
    4. '```' → logprob: -12.375067710876465
    5. '	dp' → logprob: -14.875067710876465
    6. '_dp' → logprob: -15.875067710876465
    7. '
' → logprob: -16.00006866455078
    8. '[' → logprob: -16.12506866455078
    9. 'for' → logprob: -16.12506866455078
    10. '       ' → logprob: -16.75006866455078

Token 1165: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. '<|end|>' → logprob: -14.375000953674316
    3. '[
' → logprob: -15.875000953674316
    4. '```' → logprob: -16.000001907348633
    5. ' [' → logprob: -16.375001907348633
    6. '0' → logprob: -16.750001907348633
    7. '\[' → logprob: -17.625001907348633
    8. '=' → logprob: -17.875001907348633
    9. '<|end|>' → logprob: -17.875001907348633
    10. '][' → logprob: -19.250001907348633

Token 1166: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '[' → logprob: -15.625001907348633
    4. '=' → logprob: -17.875001907348633
    5. '000' → logprob: -18.125001907348633
    6. '   ' → logprob: -18.500001907348633
    7. '{' → logprob: -18.625001907348633
    8. ')' → logprob: -18.625001907348633
    9. '۰' → logprob: -18.625001907348633
    10. '```' → logprob: -18.875001907348633

Token 1167: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3389160633087158
    2. ' =' → logprob: -2.213916063308716
    3. ')' → logprob: -2.338916063308716
    4. ']' → logprob: -3.213916063308716
    5. ']=' → logprob: -3.588916063308716
    6. ')=' → logprob: -4.463915824890137
    7. ' =)' → logprob: -7.588915824890137
    8. ' )' → logprob: -7.838915824890137
    9. '<|end|>' → logprob: -7.963915824890137
    10. ']+=' → logprob: -8.463915824890137

Token 1168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00593033991754055
    2. ' =' → logprob: -5.130930423736572
    3. ']=' → logprob: -13.755929946899414
    4. '<|end|>' → logprob: -15.380929946899414
    5. ')=' → logprob: -15.880929946899414
    6. '=True' → logprob: -16.380929946899414
    7. '=
' → logprob: -16.505929946899414
    8. ']' → logprob: -16.755929946899414
    9. '=}' → logprob: -17.130929946899414
    10. ')' → logprob: -17.130929946899414

Token 1169: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '۰' → logprob: -21.75
    4. '   ' → logprob: -21.875
    5. '000' → logprob: -23.625
    6. '```' → logprob: -23.625
    7. '০' → logprob: -23.875
    8. '=' → logprob: -24.375
    9. '00' → logprob: -24.625
    10. '{' → logprob: -24.75

Token 1170: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '۰' → logprob: -20.375
    4. '   ' → logprob: -21.75
    5. '000' → logprob: -22.0
    6. '০' → logprob: -22.25
    7. '{' → logprob: -23.0
    8. '  ' → logprob: -23.0
    9. '०' → logprob: -23.0
    10. '00' → logprob: -23.125

Token 1171: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.760783851146698
    2. '<|end|>' → logprob: -1.5107839107513428
    3. ' for' → logprob: -2.2607839107513428
    4. '
' → logprob: -2.8857839107513428
    5. 'for' → logprob: -2.8857839107513428
    6. '   ' → logprob: -3.1357839107513428
    7. '        
' → logprob: -4.760783672332764
    8. '<|end|>' → logprob: -4.885783672332764
    9. '	' → logprob: -5.010783672332764
    10. '	for' → logprob: -5.385783672332764

Token 1172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3096863627433777
    2. ' for' → logprob: -1.9346864223480225
    3. 'for' → logprob: -3.3096864223480225
    4. '	for' → logprob: -3.4346864223480225
    5. '<|end|>' → logprob: -3.6846864223480225
    6. '   ' → logprob: -3.8096864223480225
    7. '	' → logprob: -6.309686183929443
    8. ' ' → logprob: -7.684686183929443
    9. '        ' → logprob: -7.934686183929443
    10. '    ' → logprob: -7.934686183929443

Token 1173: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06556204706430435
    2. '       ' → logprob: -2.9405620098114014
    3. ' for' → logprob: -4.6905622482299805
    4. '	for' → logprob: -6.6905622482299805
    5. '   ' → logprob: -8.81556224822998
    6. '```' → logprob: -10.44056224822998
    7. '	' → logprob: -11.81556224822998
    8. '           ' → logprob: -12.56556224822998
    9. '
' → logprob: -12.69056224822998
    10. '        
' → logprob: -13.81556224822998

Token 1174: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.01299880351871252
    2. ' mp' → logprob: -4.887998580932617
    3. 'MP' → logprob: -5.387998580932617
    4. '(mp' → logprob: -7.637998580932617
    5. '_mp' → logprob: -8.512998580932617
    6. ' MP' → logprob: -10.137998580932617
    7. '   ' → logprob: -10.262998580932617
    8. 'cost' → logprob: -11.137998580932617
    9. '_,' → logprob: -11.262998580932617
    10. '_MP' → logprob: -12.012998580932617

Token 1175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027119971811771393
    2. ',j' → logprob: -4.277120113372803
    3. ' ,' → logprob: -4.527120113372803
    4. '<|end|>' → logprob: -7.527120113372803
    5. ' in' → logprob: -8.027119636535645
    6. ',
' → logprob: -8.652119636535645
    7. 'j' → logprob: -8.777119636535645
    8. '_j' → logprob: -8.902119636535645
    9. ':' → logprob: -9.027119636535645
    10. '<|end|>' → logprob: -9.402119636535645

Token 1176: ' _,' (ID: 18042)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3244849145412445
    2. 'target' → logprob: -2.0744848251342773
    3. ' ,' → logprob: -2.8244848251342773
    4. '0' → logprob: -3.0744848251342773
    5. ' ' → logprob: -4.449484825134277
    6. '_,' → logprob: -4.699484825134277
    7. '<|end|>' → logprob: -5.449484825134277
    8. ' target' → logprob: -5.699484825134277
    9. ',target' → logprob: -5.699484825134277
    10. '1' → logprob: -5.824484825134277

Token 1177: ' dmg' (ID: 168827)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0008759701740927994
    2. 's' → logprob: -8.000876426696777
    3. ' dmg' → logprob: -8.625876426696777
    4. 'damage' → logprob: -9.125876426696777
    5. '1' → logprob: -9.500876426696777
    6. '0' → logprob: -9.750876426696777
    7. '2' → logprob: -10.375876426696777
    8. 'dam' → logprob: -10.500876426696777
    9. 'int' → logprob: -11.750876426696777
    10. '[' → logprob: -12.000876426696777

Token 1178: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6332505941390991
    2. 'in' → logprob: -0.7582505941390991
    3. ',' → logprob: -7.883250713348389
    4. ':' → logprob: -8.63325023651123
    5. ')' → logprob: -11.13325023651123
    6. '_in' → logprob: -11.50825023651123
    7. ':
' → logprob: -11.50825023651123
    8. '	in' → logprob: -11.63325023651123
    9. '       ' → logprob: -11.75825023651123
    10. '[' → logprob: -11.75825023651123

Token 1179: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.0001789881061995402
    2. 'range' → logprob: -9.375179290771484
    3. ' all' → logprob: -10.250179290771484
    4. 's' → logprob: -10.500179290771484
    5. '[' → logprob: -11.375179290771484
    6. 'd' → logprob: -12.250179290771484
    7. '1' → logprob: -12.375179290771484
    8. 'sp' → logprob: -13.000179290771484
    9. 'spell' → logprob: -13.375179290771484
    10. '   ' → logprob: -13.625179290771484

Token 1180: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.11685536801815033
    2. 'sp' → logprob: -2.3668553829193115
    3. '_s' → logprob: -5.241855144500732
    4. '[' → logprob: -5.491855144500732
    5. ',' → logprob: -6.241855144500732
    6. ')' → logprob: -6.991855144500732
    7. '_spell' → logprob: -7.116855144500732
    8. ')]' → logprob: -7.241855144500732
    9. '```' → logprob: -8.36685562133789
    10. '       ' → logprob: -8.36685562133789

Token 1181: 'ells' (ID: 9703)
  Prédit: 'ells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ells' → logprob: -0.029437553137540817
    2. '[' → logprob: -4.27943754196167
    3. 'ell' → logprob: -5.77943754196167
    4. '```' → logprob: -5.90443754196167
    5. '[
' → logprob: -6.77943754196167
    6. '[(' → logprob: -7.02943754196167
    7. 'e' → logprob: -7.15443754196167
    8. ']' → logprob: -7.27943754196167
    9. 'ects' → logprob: -7.27943754196167
    10. '_' → logprob: -7.65443754196167

Token 1182: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02391008287668228
    2. ':
' → logprob: -3.8989100456237793
    3. ',' → logprob: -6.148910045623779
    4. '<|end|>' → logprob: -7.523910045623779
    5. '):' → logprob: -8.648910522460938
    6. '       ' → logprob: -9.023910522460938
    7. '):
' → logprob: -9.523910522460938
    8. ']:' → logprob: -9.898910522460938
    9. ' =' → logprob: -10.023910522460938
    10. '   ' → logprob: -10.023910522460938

Token 1183: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03204086422920227
    2. '           ' → logprob: -3.53204083442688
    3. ' for' → logprob: -6.532041072845459
    4. '   ' → logprob: -8.2820405960083
    5. '```' → logprob: -8.7820405960083
    6. '               ' → logprob: -9.1570405960083
    7. '        ' → logprob: -9.4070405960083
    8. '	       ' → logprob: -9.6570405960083
    9. '    ' → logprob: -11.0320405960083
    10. 'for' → logprob: -11.0320405960083

Token 1184: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08725719898939133
    2. 'for' (adapté à ' for') → logprob: -2.587257146835327
    3. '   ' → logprob: -5.337257385253906
    4. '       ' → logprob: -6.462257385253906
    5. '           ' → logprob: -7.337257385253906
    6. '```' → logprob: -8.212257385253906
    7. ' range' → logprob: -8.587257385253906
    8. '    ' → logprob: -8.712257385253906
    9. 'dp' → logprob: -8.837257385253906
    10. 'range' → logprob: -9.212257385253906

Token 1185: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0037410527002066374
    2. 'damage' → logprob: -5.753741264343262
    3. 'D' → logprob: -7.628741264343262
    4. ' dmg' → logprob: -10.128741264343262
    5. ' d' → logprob: -10.753741264343262
    6. 'dam' → logprob: -12.003741264343262
    7. ' damage' → logprob: -12.003741264343262
    8. 'j' → logprob: -13.253741264343262
    9. 'x' → logprob: -14.128741264343262
    10. 'total' → logprob: -15.378741264343262

Token 1186: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016887668520212173
    2. 'in' → logprob: -4.141887664794922
    3. ',' → logprob: -7.516887664794922
    4. 'd' → logprob: -8.641887664794922
    5. '1' → logprob: -9.766887664794922
    6. '   ' → logprob: -10.641887664794922
    7. 'range' → logprob: -12.016887664794922
    8. '       ' → logprob: -12.266887664794922
    9. ',d' → logprob: -12.266887664794922
    10. '=' → logprob: -12.391887664794922

Token 1187: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014101799577474594
    2. ' range' → logprob: -4.389101982116699
    3. 'max' → logprob: -6.889101982116699
    4. 'd' → logprob: -7.514101982116699
    5. 'dp' → logprob: -11.3891019821167
    6. '0' → logprob: -12.0141019821167
    7. '   ' → logprob: -13.0141019821167
    8. ' max' → logprob: -13.2641019821167
    9. '(range' → logprob: -13.7641019821167
    10. ' ' → logprob: -14.0141019821167

Token 1188: '(d' (ID: 2572)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3574455678462982
    2. 'max' → logprob: -1.2324455976486206
    3. '0' → logprob: -4.85744571685791
    4. ' max' → logprob: -7.60744571685791
    5. 'dp' → logprob: -7.73244571685791
    6. '   ' → logprob: -9.35744571685791
    7. ' dmg' → logprob: -9.35744571685791
    8. '1' → logprob: -10.48244571685791
    9. ' d' → logprob: -11.73244571685791
    10. '       ' → logprob: -11.73244571685791

Token 1189: 'mg' (ID: 15026)
  Prédit: 'mg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mg' → logprob: -1.0744489431381226
    2. 'p' → logprob: -1.1994489431381226
    3. 'max' → logprob: -1.9494489431381226
    4. 'm' → logprob: -2.574449062347412
    5. ',' → logprob: -2.699449062347412
    6. ' ' → logprob: -3.699449062347412
    7. '0' → logprob: -4.324449062347412
    8. '   ' → logprob: -5.449449062347412
    9. '1' → logprob: -5.449449062347412
    10. 'd' → logprob: -5.574449062347412

Token 1190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05416479706764221
    2. ',d' → logprob: -3.0541648864746094
    3. ',max' → logprob: -5.554164886474609
    4. ' ,' → logprob: -6.679164886474609
    5. ',
' → logprob: -8.30416488647461
    6. ',m' → logprob: -10.05416488647461
    7. 'd' → logprob: -10.30416488647461
    8. ',len' → logprob: -10.67916488647461
    9. ',D' → logprob: -11.05416488647461
    10. '           ' → logprob: -11.17916488647461

Token 1191: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -5.836499985889532e-05
    2. ' max' → logprob: -9.7500581741333
    3. '(max' → logprob: -17.375059127807617
    4. '
' → logprob: -17.875059127807617
    5. '[max' → logprob: -18.250059127807617
    6. ',max' → logprob: -19.500059127807617
    7. '	max' → logprob: -19.500059127807617
    8. 'len' → logprob: -19.625059127807617
    9. '   ' → logprob: -20.125059127807617
    10. 'dp' → logprob: -20.250059127807617

Token 1192: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -5.512236498361744e-07
    2. '+' → logprob: -15.750000953674316
    3. 'H' → logprob: -16.125
    4. '
' → logprob: -17.0
    5. 'P' → logprob: -17.0
    6. '   ' → logprob: -17.125
    7. '_HP' → logprob: -17.375
    8. 'hp' → logprob: -17.5
    9. ' HP' → logprob: -18.0
    10. '```' → logprob: -18.625

Token 1193: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013289296766743064
    2. ' +' → logprob: -6.626328945159912
    3. '-' → logprob: -13.501328468322754
    4. '+
' → logprob: -14.001328468322754
    5. '   ' → logprob: -15.126328468322754
    6. ',' → logprob: -15.626328468322754
    7. '1' → logprob: -16.00132942199707
    8. '＋' → logprob: -17.00132942199707
    9. '+d' → logprob: -17.12632942199707
    10. '```' → logprob: -17.12632942199707

Token 1194: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.500000953674316
    3. '
' → logprob: -16.125
    4. '   ' → logprob: -17.125
    5. '```' → logprob: -17.625
    6. ',' → logprob: -17.75
    7. '+' → logprob: -18.0
    8. ')' → logprob: -18.375
    9. '=' → logprob: -19.375
    10. '):
' → logprob: -19.5

Token 1195: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014365755021572113
    2. '):' → logprob: -4.3893656730651855
    3. '[' → logprob: -7.5143656730651855
    4. '+' → logprob: -7.6393656730651855
    5. ',' → logprob: -8.264366149902344
    6. '           ' → logprob: -9.264366149902344
    7. '```' → logprob: -9.389366149902344
    8. ':' → logprob: -9.514366149902344
    9. '[::-' → logprob: -9.764366149902344
    10. '               ' → logprob: -9.889366149902344

Token 1196: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002890705829486251
    2. '           ' → logprob: -6.127890586853027
    3. '```' → logprob: -8.002890586853027
    4. ' if' → logprob: -9.127890586853027
    5. '   ' → logprob: -9.627890586853027
    6. '                   ' → logprob: -9.877890586853027
    7. '	           ' → logprob: -10.502890586853027
    8. '       ' → logprob: -10.877890586853027
    9. '[' → logprob: -11.127890586853027
    10. '<|end|>' → logprob: -11.252890586853027

Token 1197: ' if' (ID: 538)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5065983533859253
    2. ' if' → logprob: -1.3815983533859253
    3. 'if' (adapté à ' if') → logprob: -2.506598472595215
    4. ' dp' → logprob: -2.881598472595215
    5. '               ' → logprob: -5.256598472595215
    6. '                   ' → logprob: -6.131598472595215
    7. 'prev' → logprob: -8.131598472595215
    8. '```' → logprob: -8.506598472595215
    9. '	dp' → logprob: -8.631598472595215
    10. '           ' → logprob: -9.256598472595215

Token 1198: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0007133854669518769
    2. ' dp' → logprob: -7.250713348388672
    3. '               ' → logprob: -13.625713348388672
    4. '                   ' → logprob: -14.250713348388672
    5. '           ' → logprob: -14.375713348388672
    6. '   ' → logprob: -14.875713348388672
    7. '(dp' → logprob: -14.875713348388672
    8. '	dp' → logprob: -15.875713348388672
    9. '_dp' → logprob: -17.250713348388672
    10. 'd' → logprob: -17.250713348388672

Token 1199: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -3.6789137084269896e-05
    2. '[' → logprob: -10.75003719329834
    3. 'd' → logprob: -11.25003719329834
    4. '```' → logprob: -13.87503719329834
    5. '[
' → logprob: -14.87503719329834
    6. '               ' → logprob: -15.50003719329834
    7. ' [' → logprob: -15.50003719329834
    8. '                   ' → logprob: -15.62503719329834
    9. '][' → logprob: -16.125036239624023
    10. '\[' → logprob: -16.375036239624023

Token 1200: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.630183756351471
    2. '-d' → logprob: -1.6301836967468262
    3. ']' → logprob: -2.005183696746826
    4. '[d' → logprob: -2.130183696746826
    5. ']>=' → logprob: -5.505183696746826
    6. ' -' → logprob: -5.630183696746826
    7. '[' → logprob: -5.630183696746826
    8. ']>' → logprob: -6.005183696746826
    9. 'd' → logprob: -6.130183696746826
    10. '```' → logprob: -7.380183696746826

Token 1201: ' dmg' (ID: 168827)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.020391104742884636
    2. 'mp' → logprob: -4.02039098739624
    3. '1' → logprob: -7.52039098739624
    4. ']' → logprob: -8.145391464233398
    5. '           ' → logprob: -8.645391464233398
    6. '   ' → logprob: -9.020391464233398
    7. ' dmg' → logprob: -9.020391464233398
    8. '               ' → logprob: -9.145391464233398
    9. 'dp' → logprob: -9.270391464233398
    10. '                   ' → logprob: -9.395391464233398

Token 1202: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011933216592296958
    2. ']+' → logprob: -6.876193523406982
    3. ']!=' → logprob: -9.626193046569824
    4. '[' → logprob: -10.126193046569824
    5. ' ]' → logprob: -10.501193046569824
    6. '+' → logprob: -11.626193046569824
    7. '```' → logprob: -12.126193046569824
    8. ' +' → logprob: -12.501193046569824
    9. ']<' → logprob: -13.626193046569824
    10. '                   ' → logprob: -13.876193046569824

Token 1203: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2537248432636261
    2. ' +' → logprob: -1.5037248134613037
    3. '[' → logprob: -7.378725051879883
    4. '```' → logprob: -7.628725051879883
    5. '!=' → logprob: -8.628725051879883
    6. '>' → logprob: -8.878725051879883
    7. ']' → logprob: -9.628725051879883
    8. '                   ' → logprob: -10.003725051879883
    9. ')' → logprob: -10.128725051879883
    10. '<' → logprob: -10.253725051879883

Token 1204: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -7.493430894101039e-05
    2. ' mp' → logprob: -9.500075340270996
    3. 'MP' → logprob: -20.00007438659668
    4. 'pm' → logprob: -20.12507438659668
    5. 'dp' → logprob: -20.37507438659668
    6. '	mp' → logprob: -20.50007438659668
    7. '(mp' → logprob: -20.75007438659668
    8. '_mp' → logprob: -21.12507438659668
    9. '/mp' → logprob: -22.62507438659668
    10. '   ' → logprob: -22.75007438659668

Token 1205: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.026497799903154373
    2. ' <' → logprob: -3.6514978408813477
    3. ')<' → logprob: -10.026497840881348
    4. '<int' → logprob: -10.276497840881348
    5. ')' → logprob: -10.776497840881348
    6. '<p' → logprob: -11.401497840881348
    7. '<th' → logprob: -11.526497840881348
    8. '<td' → logprob: -11.901497840881348
    9. '<span' → logprob: -11.901497840881348
    10. '(dp' → logprob: -12.276497840881348

Token 1206: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.842555426876061e-06
    2. ' dp' → logprob: -12.250004768371582
    3. '               ' → logprob: -18.5000057220459
    4. '                   ' → logprob: -19.2500057220459
    5. '	dp' → logprob: -19.3750057220459
    6. '_dp' → logprob: -20.5000057220459
    7. '(dp' → logprob: -21.1250057220459
    8. '```' → logprob: -21.6250057220459
    9. '           ' → logprob: -21.7500057220459
    10. 'd' → logprob: -22.3750057220459

Token 1207: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -3.8889261304575484e-06
    2. 'd' → logprob: -12.750003814697266
    3. '                   ' → logprob: -14.750003814697266
    4. '               ' → logprob: -15.125003814697266
    5. '[' → logprob: -17.000003814697266
    6. '(d' → logprob: -17.875003814697266
    7. '[
' → logprob: -18.875003814697266
    8. '           ' → logprob: -19.000003814697266
    9. '                       ' → logprob: -19.125003814697266
    10. '   ' → logprob: -19.250003814697266

Token 1208: ']:
' (ID: 22152)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.0019360085716471076
    2. '               ' → logprob: -6.501935958862305
    3. '                   ' → logprob: -8.501935958862305
    4. ']' → logprob: -9.251935958862305
    5. ']:
' → logprob: -9.501935958862305
    6. '           ' → logprob: -10.626935958862305
    7. 'd' → logprob: -11.751935958862305
    8. ']:' → logprob: -11.751935958862305
    9. '):
' → logprob: -12.251935958862305
    10. '                       ' → logprob: -12.876935958862305

Token 1209: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13521552085876465
    2. '=' → logprob: -3.0102155208587646
    3. 'dp' → logprob: -3.3852155208587646
    4. '               ' → logprob: -4.385215759277344
    5. ' =' → logprob: -4.510215759277344
    6. ' dp' → logprob: -4.760215759277344
    7. '                       ' → logprob: -5.260215759277344
    8. ')' → logprob: -6.510215759277344
    9. '                           ' → logprob: -7.385215759277344
    10. '(dp' → logprob: -7.385215759277344

Token 1210: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.01120343804359436
    2. ' dp' → logprob: -4.511203289031982
    3. '                   ' → logprob: -8.88620376586914
    4. '_dp' → logprob: -12.13620376586914
    5. '                       ' → logprob: -12.26120376586914
    6. '                    ' → logprob: -13.01120376586914
    7. '	dp' → logprob: -13.13620376586914
    8. 'd' → logprob: -13.63620376586914
    9. '(dp' → logprob: -14.26120376586914
    10. '                    
' → logprob: -15.26120376586914

Token 1211: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -3.650518920039758e-06
    2. 'd' → logprob: -12.750003814697266
    3. '[' → logprob: -14.625003814697266
    4. '	d' → logprob: -16.750003814697266
    5. '=d' → logprob: -17.000003814697266
    6. '[
' → logprob: -17.000003814697266
    7. '(d' → logprob: -17.875003814697266
    8. '\[' → logprob: -18.250003814697266
    9. '```' → logprob: -18.250003814697266
    10. '[token' → logprob: -19.375003814697266

Token 1212: ']' (ID: 60)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.0005812693270854652
    2. '                   ' → logprob: -8.375581741333008
    3. 'd' → logprob: -8.500581741333008
    4. ']' → logprob: -10.125581741333008
    5. '=d' → logprob: -10.250581741333008
    6. '               ' → logprob: -10.375581741333008
    7. ' =' → logprob: -11.125581741333008
    8. '[' → logprob: -11.750581741333008
    9. '=' → logprob: -12.625581741333008
    10. '                       ' → logprob: -12.750581741333008

Token 1213: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38366976380348206
    2. '[d' → logprob: -1.3836697340011597
    3. ' =' → logprob: -2.883669853210449
    4. '=d' → logprob: -4.508669853210449
    5. '[' → logprob: -8.00866985321045
    6. '                   ' → logprob: -8.38366985321045
    7. 'd' → logprob: -8.75866985321045
    8. ']' → logprob: -8.88366985321045
    9. ']=' → logprob: -10.13366985321045
    10. '               ' → logprob: -10.25866985321045

Token 1214: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0019288709154352546
    2. ' dp' → logprob: -6.251928806304932
    3. '	dp' → logprob: -16.126928329467773
    4. '                   ' → logprob: -16.501928329467773
    5. '(dp' → logprob: -16.876928329467773
    6. '_dp' → logprob: -18.001928329467773
    7. '               ' → logprob: -18.751928329467773
    8. '                       ' → logprob: -19.376928329467773
    9. '                           ' → logprob: -19.751928329467773
    10. 'd' → logprob: -19.876928329467773

Token 1215: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -2.236549335066229e-05
    2. 'd' → logprob: -10.750021934509277
    3. '[' → logprob: -14.375021934509277
    4. '               ' → logprob: -17.125022888183594
    5. '                   ' → logprob: -17.125022888183594
    6. '[
' → logprob: -17.500022888183594
    7. '	d' → logprob: -17.875022888183594
    8. '(d' → logprob: -18.000022888183594
    9. '           ' → logprob: -18.125022888183594
    10. '
' → logprob: -18.250022888183594

Token 1216: ' -' (ID: 533)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.004394748248159885
    2. ' -' → logprob: -5.62939453125
    3. '-d' → logprob: -7.87939453125
    4. '-' → logprob: -8.37939453125
    5. '[' → logprob: -9.00439453125
    6. 'd' → logprob: -10.00439453125
    7. '[-' → logprob: -11.62939453125
    8. ']' → logprob: -12.37939453125
    9. '   ' → logprob: -13.62939453125
    10. '[
' → logprob: -15.00439453125

Token 1217: ' dmg' (ID: 168827)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.007874553091824055
    2. ' dmg' → logprob: -5.007874488830566
    3. 'mp' → logprob: -6.882874488830566
    4. '   ' → logprob: -10.257874488830566
    5. '           ' → logprob: -11.257874488830566
    6. '                   ' → logprob: -11.382874488830566
    7. '               ' → logprob: -11.632874488830566
    8. '
' → logprob: -11.757874488830566
    9. '       ' → logprob: -11.757874488830566
    10. 'dm' → logprob: -12.007874488830566

Token 1218: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.283936470746994
    2. '[d' → logprob: -2.4089365005493164
    3. '+' → logprob: -2.7839365005493164
    4. ' +' → logprob: -2.9089365005493164
    5. ']+' → logprob: -3.9089365005493164
    6. '[' → logprob: -4.408936500549316
    7. '+d' → logprob: -5.658936500549316
    8. '                   ' → logprob: -6.283936500549316
    9. '               ' → logprob: -6.908936500549316
    10. 'd' → logprob: -7.783936500549316

Token 1219: ' +' (ID: 659)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.4682886600494385
    2. '+' → logprob: -1.9682886600494385
    3. ' +' → logprob: -2.0932886600494385
    4. 'd' → logprob: -3.2182886600494385
    5. '+d' → logprob: -3.2182886600494385
    6. ' mp' → logprob: -4.593288421630859
    7. '[d' → logprob: -4.968288421630859
    8. '                   ' → logprob: -5.093288421630859
    9. '               ' → logprob: -6.843288421630859
    10. 'dp' → logprob: -6.968288421630859

Token 1220: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -6.2729995988775045e-06
    2. ' mp' → logprob: -12.000006675720215
    3. 'pm' → logprob: -18.3750057220459
    4. '(mp' → logprob: -18.8750057220459
    5. '	mp' → logprob: -19.5000057220459
    6. 'dp' → logprob: -20.0000057220459
    7. '_mp' → logprob: -21.7500057220459
    8. '/mp' → logprob: -21.8750057220459
    9. 'ip' → logprob: -23.5000057220459
    10. 'ms' → logprob: -23.7500057220459

Token 1221: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1222: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9067890048027039
    2. '<|end|>' → logprob: -0.9067890048027039
    3. ' ' → logprob: -3.1567890644073486
    4. '       ' → logprob: -3.1567890644073486
    5. ' for' → logprob: -3.5317890644073486
    6. ')' → logprob: -4.1567888259887695
    7. ' ' → logprob: -4.9067888259887695
    8. 'for' → logprob: -5.1567888259887695
    9. ' 
' → logprob: -5.2817888259887695
    10. '        ' → logprob: -5.6567888259887695

Token 1223: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1224: ' Because' (ID: 13602)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1225: ' multiple' (ID: 7598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8439391255378723
    2. 'dp' → logprob: -1.2189390659332275
    3. 'd' → logprob: -2.0939390659332275
    4. 'mp' → logprob: -2.9689390659332275
    5. 'all' → logprob: -3.7189390659332275
    6. ' for' → logprob: -4.093939304351807
    7. 'max' → logprob: -4.843939304351807
    8. 'multiple' → logprob: -4.968939304351807
    9. 'the' → logprob: -5.093939304351807
    10. 'we' → logprob: -5.343939304351807

Token 1226: ' usage' (ID: 16622)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3330598473548889
    2. ' for' → logprob: -1.7080597877502441
    3. '           ' → logprob: -2.708059787750244
    4. 'd' → logprob: -4.833059787750244
    5. '       ' → logprob: -4.958059787750244
    6. '=' → logprob: -5.458059787750244
    7. '   ' → logprob: -5.833059787750244
    8. '#' → logprob: -6.458059787750244
    9. '               ' → logprob: -6.458059787750244
    10. 'dp' → logprob: -6.583059787750244

Token 1227: ' allowed' (ID: 9279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06154484674334526
    2. ' for' → logprob: -3.436544895172119
    3. 'for' → logprob: -3.811544895172119
    4. '       ' → logprob: -5.811544895172119
    5. ',' → logprob: -7.186544895172119
    6. '               ' → logprob: -7.186544895172119
    7. '```' → logprob: -8.311544418334961
    8. '         ' → logprob: -9.061544418334961
    9. '          ' → logprob: -9.186544418334961
    10. '		' → logprob: -9.686544418334961

Token 1228: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1229: ' un' (ID: 537)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06523319333791733
    2. ' for' → logprob: -3.3152332305908203
    3. '           ' → logprob: -4.31523323059082
    4. '       ' → logprob: -4.44023323059082
    5. 'd' → logprob: -6.81523323059082
    6. '   ' → logprob: -8.44023323059082
    7. '               ' → logprob: -8.94023323059082
    8. 'while' → logprob: -9.06523323059082
    9. '                   ' → logprob: -10.69023323059082
    10. 'dp' → logprob: -11.19023323059082

Token 1230: 'bounded' (ID: 135171)
  Prédit: 'bounded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bounded' → logprob: -0.0027341435197740793
    2. 'der' → logprob: -6.752734184265137
    3. '       ' → logprob: -8.127734184265137
    4. '=' → logprob: -8.502734184265137
    5. 'locked' → logprob: -8.627734184265137
    6. '```' → logprob: -8.877734184265137
    7. '
' → logprob: -9.002734184265137
    8. ' bounded' → logprob: -9.252734184265137
    9. 'for' → logprob: -9.377734184265137
    10. 'bound' → logprob: -9.377734184265137

Token 1231: ' kn' (ID: 1313)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1232: 'apsack' (ID: 178559)
  Prédit: 'apsack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -0.056707557290792465
    2. 'ap' → logprob: -2.9317076206207275
    3. 'ack' → logprob: -7.056707382202148
    4. '```' → logprob: -8.056707382202148
    5. 'aps' → logprob: -8.681707382202148
    6. 'dp' → logprob: -9.306707382202148
    7. 'ock' → logprob: -9.431707382202148
    8. 'ep' → logprob: -9.556707382202148
    9. '
' → logprob: -10.431707382202148
    10. '#' → logprob: -10.556707382202148

Token 1233: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.647404670715332
    2. 'for' → logprob: -1.772404670715332
    3. ' for' → logprob: -2.147404670715332
    4. '<|end|>' → logprob: -2.272404670715332
    5. '           ' → logprob: -3.522404670715332
    6. '
' → logprob: -3.897404670715332
    7. '<|end|>' → logprob: -4.897404670715332
    8. '        ' → logprob: -5.147404670715332
    9. '	' → logprob: -5.397404670715332
    10. '```' → logprob: -6.147404670715332

Token 1234: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2370167970657349
    2. ' for' → logprob: -1.2370167970657349
    3. 'for' → logprob: -1.9870167970657349
    4. '           ' → logprob: -2.1120166778564453
    5. '```' → logprob: -2.7370166778564453
    6. '<|end|>' → logprob: -2.9870166778564453
    7. '        ' → logprob: -4.987016677856445
    8. '   ' → logprob: -5.112016677856445
    9. '[' → logprob: -5.612016677856445
    10. ',' → logprob: -5.612016677856445

Token 1235: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5069998502731323
    2. 'while' → logprob: -1.5069998502731323
    3. 'for' → logprob: -2.256999969482422
    4. '           ' → logprob: -3.631999969482422
    5. ' while' → logprob: -3.881999969482422
    6. ' for' → logprob: -4.256999969482422
    7. '   ' → logprob: -5.131999969482422
    8. '```' → logprob: -6.881999969482422
    9. '    ' → logprob: -7.131999969482422
    10. '        ' → logprob: -7.756999969482422

Token 1236: ' Do' (ID: 3756)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45014238357543945
    2. ' for' → logprob: -2.0751423835754395
    3. '<|end|>' → logprob: -2.4501423835754395
    4. 'while' → logprob: -3.2001423835754395
    5. '       ' → logprob: -3.2001423835754395
    6. '
' → logprob: -4.2001423835754395
    7. '<|end|>' → logprob: -4.2001423835754395
    8. '           ' → logprob: -4.8251423835754395
    9. '```' → logprob: -4.9501423835754395
    10. 'continue' → logprob: -5.2001423835754395

Token 1237: ' un' (ID: 537)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.38194379210472107
    2. 'for' → logprob: -1.2569438219070435
    3. '           ' → logprob: -4.881943702697754
    4. '       ' → logprob: -5.006943702697754
    5. '...' → logprob: -5.131943702697754
    6. ' for' → logprob: -5.881943702697754
    7. '   ' → logprob: -6.381943702697754
    8. ' while' → logprob: -6.381943702697754
    9. '
' → logprob: -6.506943702697754
    10. '```' → logprob: -7.006943702697754

Token 1238: 'bounded' (ID: 135171)
  Prédit: 'bounded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bounded' → logprob: -0.00037132782745175064
    2. '
' → logprob: -8.250370979309082
    3. '       ' → logprob: -10.250370979309082
    4. '   ' → logprob: -10.375370979309082
    5. '```' → logprob: -11.125370979309082
    6. ' bounded' → logprob: -11.750370979309082
    7. 'bound' → logprob: -11.875370979309082
    8. 'for' → logprob: -13.000370979309082
    9. '    
' → logprob: -13.375370979309082
    10. 'rolled' → logprob: -13.375370979309082

Token 1239: ' kn' (ID: 1313)
  Prédit: 'kn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kn' → logprob: -0.6902567148208618
    2. 'for' → logprob: -1.0652567148208618
    3. ' kn' → logprob: -2.6902565956115723
    4. ' for' → logprob: -3.5652565956115723
    5. ' loop' → logprob: -4.315256595611572
    6. '
' → logprob: -4.565256595611572
    7. '       ' → logprob: -4.690256595611572
    8. 'loop' → logprob: -4.815256595611572
    9. '_kn' → logprob: -5.315256595611572
    10. '           ' → logprob: -5.690256595611572

Token 1240: 'apsack' (ID: 178559)
  Prédit: 'apsack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -6.611323624383658e-05
    2. 'ap' → logprob: -10.250065803527832
    3. 'aps' → logprob: -11.500065803527832
    4. 'pack' → logprob: -11.625065803527832
    5. 'ack' → logprob: -12.000065803527832
    6. 'p' → logprob: -14.125065803527832
    7. 'dp' → logprob: -14.250065803527832
    8. 'apped' → logprob: -14.250065803527832
    9. '```' → logprob: -14.500065803527832
    10. 'ess' → logprob: -14.625065803527832

Token 1241: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1242: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09612035006284714
    2. 'for' → logprob: -3.4711203575134277
    3. '		' → logprob: -3.7211203575134277
    4. ' for' → logprob: -4.596120357513428
    5. '       ' → logprob: -4.721120357513428
    6. '```' → logprob: -4.846120357513428
    7. '	' → logprob: -5.971120357513428
    8. '               ' → logprob: -6.346120357513428
    9. '                   ' → logprob: -6.846120357513428
    10. '   ' → logprob: -6.971120357513428

Token 1243: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0147738456726074
    2. 'for' → logprob: -1.2647738456726074
    3. ' for' → logprob: -1.2647738456726074
    4. '       ' → logprob: -3.2647738456726074
    5. 'while' → logprob: -4.264773845672607
    6. '```' → logprob: -4.764773845672607
    7. '   ' → logprob: -5.264773845672607
    8. ' while' → logprob: -5.514773845672607
    9. '               ' → logprob: -7.389773845672607
    10. 'd' → logprob: -7.889773845672607

Token 1244: ' Repeat' (ID: 75886)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6200865507125854
    2. '           ' → logprob: -1.3700865507125854
    3. ' for' → logprob: -1.9950865507125854
    4. '       ' → logprob: -3.370086669921875
    5. '   ' → logprob: -4.245086669921875
    6. '```' → logprob: -4.245086669921875
    7. '		' → logprob: -5.870086669921875
    8. '	for' → logprob: -6.120086669921875
    9. '	' → logprob: -7.370086669921875
    10. '               ' → logprob: -7.620086669921875

Token 1245: ' enough' (ID: 4951)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7807995080947876
    2. 'for' → logprob: -1.0307995080947876
    3. 'while' → logprob: -2.405799388885498
    4. '           ' → logprob: -2.655799388885498
    5. ' while' → logprob: -4.405799388885498
    6. '               ' → logprob: -4.655799388885498
    7. '       ' → logprob: -6.905799388885498
    8. 'd' → logprob: -6.905799388885498
    9. '                   ' → logprob: -8.155799865722656
    10. '   ' → logprob: -8.155799865722656

Token 1246: ' times' (ID: 4238)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8139157891273499
    2. '           ' → logprob: -1.188915729522705
    3. ' for' → logprob: -1.813915729522705
    4. '               ' → logprob: -3.313915729522705
    5. '                   ' → logprob: -3.938915729522705
    6. 'while' → logprob: -4.438915729522705
    7. '                       ' → logprob: -4.563915729522705
    8. ' while' → logprob: -5.563915729522705
    9. '```' → logprob: -6.688915729522705
    10. ',' → logprob: -7.063915729522705

Token 1247: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.334557443857193
    2. 'for' → logprob: -1.8345574140548706
    3. ' for' → logprob: -2.33455753326416
    4. '                   ' → logprob: -4.83455753326416
    5. '               ' → logprob: -5.33455753326416
    6. '       ' → logprob: -5.70955753326416
    7. 'while' → logprob: -5.70955753326416
    8. 'd' → logprob: -6.33455753326416
    9. ' while' → logprob: -6.58455753326416
    10. '		' → logprob: -6.58455753326416

Token 1248: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01730228215456009
    2. 'for' → logprob: -4.892302513122559
    3. ' for' → logprob: -5.392302513122559
    4. '               ' → logprob: -6.642302513122559
    5. '       ' → logprob: -6.892302513122559
    6. '```' → logprob: -7.017302513122559
    7. '		' → logprob: -7.517302513122559
    8. '                   ' → logprob: -8.142302513122559
    9. '   ' → logprob: -8.392302513122559
    10. 'while' → logprob: -8.517302513122559

Token 1249: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2449447363615036
    2. ' for' → logprob: -2.1199448108673096
    3. 'for' → logprob: -3.2449448108673096
    4. ' while' → logprob: -3.7449448108673096
    5. 'while' → logprob: -4.1199445724487305
    6. '```' → logprob: -5.6199445724487305
    7. '   ' → logprob: -5.8699445724487305
    8. '       ' → logprob: -5.9949445724487305
    9. '               ' → logprob: -6.2449445724487305
    10. '                   ' → logprob: -6.3699445724487305

Token 1250: ' We'll' (ID: 46830)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7191131711006165
    2. '           ' → logprob: -0.9691131711006165
    3. ' for' → logprob: -2.2191131114959717
    4. 'while' → logprob: -4.219113349914551
    5. '       ' → logprob: -4.969113349914551
    6. ' while' → logprob: -6.844113349914551
    7. '               ' → logprob: -7.344113349914551
    8. '   ' → logprob: -7.719113349914551
    9. '```' → logprob: -8.46911334991455
    10. '                   ' → logprob: -8.96911334991455

Token 1251: ' implement' (ID: 6365)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.5561090707778931
    2. 'for' → logprob: -1.306109070777893
    3. 'do' → logprob: -2.9311089515686035
    4. 'use' → logprob: -3.1811089515686035
    5. 'run' → logprob: -4.3061089515686035
    6. 'continue' → logprob: -4.9311089515686035
    7. '           ' → logprob: -5.0561089515686035
    8. ' for' → logprob: -5.1811089515686035
    9. 'perform' → logprob: -5.3061089515686035
    10. '       ' → logprob: -5.4311089515686035

Token 1252: ' optimized' (ID: 50239)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6166067123413086
    2. 'for' → logprob: -1.1166067123413086
    3. '           ' → logprob: -2.2416067123413086
    4. '               ' → logprob: -4.366606712341309
    5. 'while' → logprob: -4.866606712341309
    6. ' while' → logprob: -6.366606712341309
    7. '                   ' → logprob: -6.366606712341309
    8. 'd' → logprob: -6.866606712341309
    9. '       ' → logprob: -7.991606712341309
    10. '                       ' → logprob: -8.116606712341309

Token 1253: ' un' (ID: 537)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3137292265892029
    2. 'for' → logprob: -1.5637292861938477
    3. 'dp' → logprob: -3.8137292861938477
    4. 'd' → logprob: -4.688729286193848
    5. ' dp' → logprob: -5.063729286193848
    6. 'while' → logprob: -5.813729286193848
    7. ' while' → logprob: -5.813729286193848
    8. ' range' → logprob: -6.313729286193848
    9. '           ' → logprob: -6.313729286193848
    10. 'range' → logprob: -6.313729286193848

Token 1254: 'bounded' (ID: 135171)
  Prédit: 'bounded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bounded' → logprob: -0.07003090530633926
    2. 'for' → logprob: -2.945030927658081
    3. 'dp' → logprob: -4.945030689239502
    4. '
' → logprob: -5.695030689239502
    5. 'import' → logprob: -6.820030689239502
    6. '=' → logprob: -7.195030689239502
    7. '```' → logprob: -7.320030689239502
    8. 'rolled' → logprob: -8.07003116607666
    9. 'fold' → logprob: -8.19503116607666
    10. 'der' → logprob: -8.32003116607666

Token 1255: ' kn' (ID: 1313)
  Prédit: '_kn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_kn' → logprob: -1.1445412635803223
    2. 'for' → logprob: -1.2695412635803223
    3. 'kn' → logprob: -1.6445412635803223
    4. '
' → logprob: -2.3945412635803223
    5. 'dp' → logprob: -3.2695412635803223
    6. 'pack' → logprob: -3.6445412635803223
    7. '```' → logprob: -4.894541263580322
    8. '       ' → logprob: -5.019541263580322
    9. '_dp' → logprob: -5.019541263580322
    10. '_' → logprob: -5.144541263580322

Token 1256: 'apsack' (ID: 178559)
  Prédit: 'apsack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -1.8908587662735954e-05
    2. 'aps' → logprob: -11.375019073486328
    3. 'ap' → logprob: -12.000019073486328
    4. 'ack' → logprob: -14.500019073486328
    5. 'pack' → logprob: -15.125019073486328
    6. '```' → logprob: -15.750019073486328
    7. 'n' → logprob: -17.125019073486328
    8. 'kn' → logprob: -17.250019073486328
    9. 'nap' → logprob: -17.625019073486328
    10. 'p' → logprob: -17.875019073486328

Token 1257: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003268261207267642
    2. ' for' → logprob: -7.253268241882324
    3. '		' → logprob: -7.503268241882324
    4. 'for' → logprob: -7.503268241882324
    5. '                   ' → logprob: -8.128268241882324
    6. '       ' → logprob: -8.128268241882324
    7. '               ' → logprob: -8.378268241882324
    8. ',' → logprob: -8.503268241882324
    9. '	       ' → logprob: -8.503268241882324
    10. '                       ' → logprob: -10.003268241882324

Token 1258: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08116808533668518
    2. '		' → logprob: -2.9561681747436523
    3. 'for' → logprob: -4.831168174743652
    4. '       ' → logprob: -5.206168174743652
    5. '	       ' → logprob: -5.706168174743652
    6. '```' → logprob: -5.956168174743652
    7. '	for' → logprob: -6.456168174743652
    8. '	   ' → logprob: -6.831168174743652
    9. '
' → logprob: -6.831168174743652
    10. ' for' → logprob: -7.081168174743652

Token 1259: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1241246834397316
    2. ' for' → logprob: -3.124124765396118
    3. '       ' → logprob: -3.374124765396118
    4. 'for' → logprob: -3.749124765396118
    5. '
' → logprob: -4.999124526977539
    6. '   ' → logprob: -5.624124526977539
    7. '		' → logprob: -6.124124526977539
    8. '```' → logprob: -7.249124526977539
    9. '               ' → logprob: -7.874124526977539
    10. '	' → logprob: -8.249124526977539

Token 1260: ' Actually' (ID: 50557)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04497293382883072
    2. '       ' → logprob: -3.7949728965759277
    3. 'for' → logprob: -4.419972896575928
    4. '		' → logprob: -5.794972896575928
    5. ' for' → logprob: -6.044972896575928
    6. '   ' → logprob: -6.669972896575928
    7. '
' → logprob: -6.794972896575928
    8. '	' → logprob: -7.919972896575928
    9. '	       ' → logprob: -8.044973373413086
    10. '	   ' → logprob: -8.169973373413086

Token 1261: ' above' (ID: 5151)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9856213927268982
    2. 'for' → logprob: -1.360621452331543
    3. ' for' → logprob: -1.485621452331543
    4. '       ' → logprob: -2.860621452331543
    5. 'continue' → logprob: -3.235621452331543
    6. ' continue' → logprob: -3.860621452331543
    7. '#' → logprob: -5.110621452331543
    8. '```' → logprob: -5.235621452331543
    9. '   ' → logprob: -5.485621452331543
    10. '
' → logprob: -6.235621452331543

Token 1262: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1461842954158783
    2. '<|end|>' → logprob: -3.521184206008911
    3. '<|end|>' → logprob: -3.646184206008911
    4. '
' → logprob: -4.02118444442749
    5. 'for' → logprob: -4.02118444442749
    6. ',' → logprob: -5.02118444442749
    7. ' for' → logprob: -5.02118444442749
    8. ':
' → logprob: -5.14618444442749
    9. '*' → logprob: -5.52118444442749
    10. '```' → logprob: -6.02118444442749

Token 1263: ' ' (ID: 220)
  Prédit: 'correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'correct' → logprob: -0.9410260319709778
    2. 'dp' → logprob: -1.316025972366333
    3. 'for' → logprob: -1.941025972366333
    4. ' correct' → logprob: -2.941025972366333
    5. '```' → logprob: -3.316025972366333
    6. 'not' → logprob: -3.441025972366333
    7. ' for' → logprob: -4.441026210784912
    8. 'already' → logprob: -4.566026210784912
    9. 'valid' → logprob: -5.066026210784912
    10. ' dp' → logprob: -5.066026210784912

Token 1264: '0' (ID: 15)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2390304058790207
    2. 'dp' → logprob: -2.739030361175537
    3. '```' → logprob: -2.739030361175537
    4. 'correct' → logprob: -3.239030361175537
    5. '           ' → logprob: -4.489030361175537
    6. ' for' → logprob: -4.989030361175537
    7. 'not' → logprob: -5.489030361175537
    8. '   ' → logprob: -5.614030361175537
    9. '#' → logprob: -5.864030361175537
    10. 'mp' → logprob: -6.114030361175537

Token 1265: '/' (ID: 14)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3222078084945679
    2. 'for' → logprob: -1.3222078084945679
    3. ' for' → logprob: -1.4472078084945679
    4. '       ' → logprob: -2.9472079277038574
    5. '<|end|>' → logprob: -3.4472079277038574
    6. '           ' → logprob: -3.5722079277038574
    7. '#' → logprob: -3.6972079277038574
    8. ')' → logprob: -3.9472079277038574
    9. ']' → logprob: -4.447207927703857
    10. '   ' → logprob: -4.572207927703857

Token 1266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001354824344161898
    2. '
' → logprob: -9.62513542175293
    3. '/' → logprob: -10.62513542175293
    4. '-' → logprob: -10.75013542175293
    5. '#' → logprob: -11.50013542175293
    6. 'in' → logprob: -12.00013542175293
    7. 'inf' → logprob: -13.00013542175293
    8. 'one' → logprob: -13.37513542175293
    9. '∞' → logprob: -13.62513542175293
    10. '``' → logprob: -15.00013542175293

Token 1267: ' kn' (ID: 1313)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.017725609242916107
    2. '           ' → logprob: -4.767725467681885
    3. ' for' → logprob: -6.017725467681885
    4. 'for' → logprob: -6.017725467681885
    5. '       ' → logprob: -6.767725467681885
    6. '```' → logprob: -7.767725467681885
    7. '\n' → logprob: -7.892725467681885
    8. '  
' → logprob: -8.392725944519043
    9. '
' → logprob: -8.642725944519043
    10. '               ' → logprob: -8.767725944519043

Token 1268: 'apsack' (ID: 178559)
  Prédit: 'apsack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -0.00038777425652369857
    2. 'n' → logprob: -8.000388145446777
    3. 'ack' → logprob: -11.000388145446777
    4. '```' → logprob: -11.375388145446777
    5. 'aps' → logprob: -11.875388145446777
    6. 'p' → logprob: -12.375388145446777
    7. 'nap' → logprob: -12.375388145446777
    8. 'ap' → logprob: -12.500388145446777
    9. '``' → logprob: -13.750388145446777
    10. '#' → logprob: -14.125388145446777

Token 1269: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0871918648481369
    2. '<|end|>' → logprob: -3.5871918201446533
    3. '           ' → logprob: -3.9621918201446533
    4. '       ' → logprob: -4.712192058563232
    5. ' for' → logprob: -4.837192058563232
    6. '<|end|>' → logprob: -5.462192058563232
    7. 'for' → logprob: -5.587192058563232
    8. '  
' → logprob: -5.712192058563232
    9. ' 
' → logprob: -6.837192058563232
    10. '```' → logprob: -7.337192058563232

Token 1270: ' need' (ID: 1309)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7107263803482056
    2. 'for' → logprob: -1.0857263803482056
    3. '           ' → logprob: -2.210726261138916
    4. ' for' → logprob: -3.585726261138916
    5. '                   ' → logprob: -5.085726261138916
    6. '	' → logprob: -5.085726261138916
    7. '		' → logprob: -5.835726261138916
    8. '               ' → logprob: -5.960726261138916
    9. '```' → logprob: -6.085726261138916
    10. '   ' → logprob: -6.335726261138916

Token 1271: ' un' (ID: 537)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10307314246892929
    2. ' for' → logprob: -3.6030731201171875
    3. 'to' → logprob: -3.6030731201171875
    4. 'continue' → logprob: -3.9780731201171875
    5. '```' → logprob: -4.4780731201171875
    6. '           ' → logprob: -5.2280731201171875
    7. ' to' → logprob: -5.8530731201171875
    8. 'while' → logprob: -6.8530731201171875
    9. '   ' → logprob: -7.1030731201171875
    10. '                   ' → logprob: -7.2280731201171875

Token 1272: 'bounded' (ID: 135171)
  Prédit: 'bounded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bounded' → logprob: -0.17920565605163574
    2. 'for' → logprob: -1.9292056560516357
    3. '       ' → logprob: -4.804205894470215
    4. ' for' → logprob: -5.679205894470215
    5. '```' → logprob: -6.179205894470215
    6. '           ' → logprob: -6.554205894470215
    7. '
' → logprob: -6.679205894470215
    8. 'dp' → logprob: -6.804205894470215
    9. '``' → logprob: -8.429205894470215
    10. '                   ' → logprob: -8.679205894470215

Token 1273: ':
' (ID: 734)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45348772406578064
    2. '           ' → logprob: -1.703487753868103
    3. 'for' → logprob: -2.3284876346588135
    4. ' for' → logprob: -2.9534876346588135
    5. '       ' → logprob: -3.5784876346588135
    6. '   ' → logprob: -7.078487873077393
    7. '  
' → logprob: -7.078487873077393
    8. '<|end|>' → logprob: -7.453487873077393
    9. '               ' → logprob: -8.453487396240234
    10. ' 
' → logprob: -8.453487396240234

Token 1274: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10834858566522598
    2. 'for' → logprob: -2.8583486080169678
    3. ' for' → logprob: -3.6083486080169678
    4. '       ' → logprob: -5.233348369598389
    5. '		' → logprob: -5.358348369598389
    6. '```' → logprob: -5.858348369598389
    7. '	       ' → logprob: -6.983348369598389
    8. '	for' → logprob: -7.233348369598389
    9. '
' → logprob: -7.358348369598389
    10. '               ' → logprob: -7.733348369598389

Token 1275: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10820095986127853
    2. ' for' → logprob: -3.233201026916504
    3. '       ' → logprob: -3.733201026916504
    4. 'for' → logprob: -3.733201026916504
    5. '
' → logprob: -4.733201026916504
    6. '               ' → logprob: -6.108201026916504
    7. '```' → logprob: -6.483201026916504
    8. '   ' → logprob: -6.733201026916504
    9. '                   ' → logprob: -7.483201026916504
    10. '		' → logprob: -8.483201026916504

Token 1276: ' So' (ID: 2632)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8396398425102234
    2. '           ' → logprob: -1.0896399021148682
    3. '       ' → logprob: -1.7146399021148682
    4. ' for' → logprob: -3.339639902114868
    5. '```' → logprob: -5.589639663696289
    6. '               ' → logprob: -5.839639663696289
    7. '   ' → logprob: -5.839639663696289
    8. '
' → logprob: -6.214639663696289
    9. '                   ' → logprob: -6.214639663696289
    10. '		' → logprob: -7.464639663696289

Token 1277: ' un' (ID: 537)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8037195205688477
    2. 'for' → logprob: -1.1787195205688477
    3. ' for' → logprob: -1.4287195205688477
    4. '       ' → logprob: -6.053719520568848
    5. '               ' → logprob: -6.428719520568848
    6. '   ' → logprob: -7.678719520568848
    7. '                   ' → logprob: -8.553719520568848
    8. '            ' → logprob: -9.053719520568848
    9. '          ' → logprob: -9.553719520568848
    10. '```' → logprob: -10.303719520568848

Token 1278: 'bounded' (ID: 135171)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8093267679214478
    2. '       ' → logprob: -1.1843267679214478
    3. '
' → logprob: -2.434326648712158
    4. 'bounded' → logprob: -3.059326648712158
    5. 'dp' → logprob: -3.309326648712158
    6. '   ' → logprob: -3.559326648712158
    7. ' for' → logprob: -3.809326648712158
    8. '=' → logprob: -4.684326648712158
    9. 'd' → logprob: -5.434326648712158
    10. '           ' → logprob: -5.559326648712158

Token 1279: ' kn' (ID: 1313)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05283025652170181
    2. ' for' → logprob: -3.677830219268799
    3. ':' → logprob: -4.677830219268799
    4. '_kn' → logprob: -5.177830219268799
    5. '       ' → logprob: -6.427830219268799
    6. '_sp' → logprob: -6.802830219268799
    7. '_dp' → logprob: -6.927830219268799
    8. 'dp' → logprob: -7.052830219268799
    9. 'kn' → logprob: -7.177830219268799
    10. '   ' → logprob: -7.302830219268799

Token 1280: 'apsack' (ID: 178559)
  Prédit: 'apsack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -0.0019245869480073452
    2. 'ack' → logprob: -7.751924514770508
    3. 'own' → logprob: -8.126924514770508
    4. '[' → logprob: -8.251924514770508
    5. 'pack' → logprob: -8.626924514770508
    6. ' =' → logprob: -9.126924514770508
    7. 'uck' → logprob: -9.251924514770508
    8. '=' → logprob: -9.251924514770508
    9. 'n' → logprob: -9.751924514770508
    10. 'ock' → logprob: -10.001924514770508

Token 1281: ':' (ID: 25)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2249871492385864
    2. ' for' → logprob: -1.3499871492385864
    3. '       ' → logprob: -1.7249871492385864
    4. ':' → logprob: -2.099987030029297
    5. '           ' → logprob: -2.224987030029297
    6. '```' → logprob: -4.474987030029297
    7. ':
' → logprob: -5.349987030029297
    8. '
' → logprob: -5.724987030029297
    9. ',' → logprob: -5.724987030029297
    10. '<|end|>' → logprob: -5.849987030029297

Token 1282: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8513578772544861
    2. '           ' → logprob: -1.3513579368591309
    3. '       ' → logprob: -1.7263579368591309
    4. ' for' → logprob: -2.101357936859131
    5. '	for' → logprob: -5.601357936859131
    6. '   ' → logprob: -6.476357936859131
    7. '		' → logprob: -6.601357936859131
    8. '                   ' → logprob: -6.601357936859131
    9. '	       ' → logprob: -6.601357936859131
    10. '	' → logprob: -6.726357936859131

Token 1283: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6683313250541687
    2. 'mp' → logprob: -0.7933313250541687
    3. ' mp' → logprob: -4.043331146240234
    4. '_mp' → logprob: -4.793331146240234
    5. '_d' → logprob: -5.793331146240234
    6. '_' → logprob: -6.543331146240234
    7. ' d' → logprob: -6.668331146240234
    8. 'dp' → logprob: -7.043331146240234
    9. 'damage' → logprob: -7.168331146240234
    10. ' _' → logprob: -8.668331146240234

Token 1284: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5759568214416504
    2. 'in' → logprob: -0.8259568214416504
    3. 'd' → logprob: -12.450956344604492
    4. '
' → logprob: -12.825956344604492
    5. '   ' → logprob: -13.200956344604492
    6. '=' → logprob: -13.575956344604492
    7. 'n' → logprob: -13.825956344604492
    8. 'i' → logprob: -13.825956344604492
    9. 'from' → logprob: -13.950956344604492
    10. '+=' → logprob: -14.200956344604492

Token 1285: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018919114023447037
    2. ' range' → logprob: -4.018918991088867
    3. 'd' → logprob: -7.643918991088867
    4. '0' → logprob: -8.643918991088867
    5. 'mp' → logprob: -9.393918991088867
    6. '1' → logprob: -11.143918991088867
    7. '   ' → logprob: -12.268918991088867
    8. '(range' → logprob: -12.768918991088867
    9. 'dm' → logprob: -13.393918991088867
    10. 'dp' → logprob: -13.518918991088867

Token 1286: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.052590273320674896
    2. '0' → logprob: -3.3025903701782227
    3. 'range' → logprob: -4.927590370178223
    4. 'mp' → logprob: -5.552590370178223
    5. '1' → logprob: -5.927590370178223
    6. 'dm' → logprob: -8.052590370178223
    7. '   ' → logprob: -9.552590370178223
    8. ' range' → logprob: -9.552590370178223
    9. ' ' → logprob: -9.802590370178223
    10. 'dp' → logprob: -10.552590370178223

Token 1287: 'mg' (ID: 15026)
  Prédit: 'mg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mg' → logprob: -0.007531151175498962
    2. 'm' → logprob: -5.50753116607666
    3. 'g' → logprob: -6.88253116607666
    4. 'd' → logprob: -7.13253116607666
    5. '   ' → logprob: -7.75753116607666
    6. 'amage' → logprob: -8.50753116607666
    7. 'range' → logprob: -8.88253116607666
    8. '=' → logprob: -9.25753116607666
    9. ',' → logprob: -9.50753116607666
    10. '       ' → logprob: -9.88253116607666

Token 1288: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07598404586315155
    2. ',d' → logprob: -2.825984001159668
    3. ',max' → logprob: -4.450984001159668
    4. ']:' → logprob: -8.200984001159668
    5. '...' → logprob: -8.200984001159668
    6. ' ,' → logprob: -8.450984001159668
    7. '..' → logprob: -8.450984001159668
    8. 'd' → logprob: -8.575984001159668
    9. 'max' → logprob: -9.075984001159668
    10. '+' → logprob: -9.075984001159668

Token 1289: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -6.372916686814278e-05
    2. 'd' → logprob: -10.0000638961792
    3. ' max' → logprob: -11.3750638961792
    4. '   ' → logprob: -12.8750638961792
    5. '
' → logprob: -13.5000638961792
    6. '```' → logprob: -14.0000638961792
    7. ',max' → logprob: -14.2500638961792
    8. 'dp' → logprob: -14.3750638961792
    9. '[max' → logprob: -15.8750638961792
    10. '=max' → logprob: -15.8750638961792

Token 1290: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -9.782141569303349e-05
    2. 'd' → logprob: -9.50009822845459
    3. '   ' → logprob: -11.87509822845459
    4. ']' → logprob: -12.37509822845459
    5. 'hp' → logprob: -13.00009822845459
    6. 'max' → logprob: -13.25009822845459
    7. 'damage' → logprob: -13.62509822845459
    8. '_hp' → logprob: -14.00009822845459
    9. '```' → logprob: -14.25009822845459
    10. '
' → logprob: -14.25009822845459

Token 1291: ']:' (ID: 12433)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4640338122844696
    2. ']:
' → logprob: -1.714033842086792
    3. ':
' → logprob: -2.714033842086792
    4. ':' → logprob: -2.964033842086792
    5. ']:' → logprob: -4.089033603668213
    6. '       ' → logprob: -4.464033603668213
    7. '           ' → logprob: -4.589033603668213
    8. ',' → logprob: -4.964033603668213
    9. '                   ' → logprob: -5.464033603668213
    10. '   ' → logprob: -5.589033603668213

Token 1292: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5929189324378967
    2. ' for' → logprob: -1.217918872833252
    3. '           ' → logprob: -3.217918872833252
    4. '               ' → logprob: -3.217918872833252
    5. '       ' → logprob: -3.467918872833252
    6. '                   ' → logprob: -4.092918872833252
    7. '```' → logprob: -4.717918872833252
    8. '   ' → logprob: -5.467918872833252
    9. '                       ' → logprob: -5.717918872833252
    10. '	for' → logprob: -6.342918872833252

Token 1293: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.00013643606507685035
    2. 'd' → logprob: -9.250136375427246
    3. '[' → logprob: -11.000136375427246
    4. '[j' → logprob: -11.375136375427246
    5. '```' → logprob: -12.500136375427246
    6. '=' → logprob: -12.875136375427246
    7. '=d' → logprob: -13.000136375427246
    8. '[v' → logprob: -14.250136375427246
    9. '[i' → logprob: -14.500136375427246
    10. '[D' → logprob: -14.750136375427246

Token 1294: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9208924174308777
    2. '+=' → logprob: -1.2958924770355225
    3. ']+=' → logprob: -2.0458924770355225
    4. '[d' → logprob: -2.1708924770355225
    5. ']' → logprob: -3.1708924770355225
    6. ']=' → logprob: -3.6708924770355225
    7. 'd' → logprob: -5.170892238616943
    8. '=d' → logprob: -5.420892238616943
    9. '[' → logprob: -6.295892238616943
    10. '```' → logprob: -6.545892238616943

Token 1295: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0006452414090745151
    2. ' =' → logprob: -7.375645160675049
    3. '                   ' → logprob: -11.500645637512207
    4. '=
' → logprob: -13.250645637512207
    5. '```' → logprob: -13.375645637512207
    6. '                       ' → logprob: -13.500645637512207
    7. '               ' → logprob: -13.750645637512207
    8. '=min' → logprob: -13.750645637512207
    9. '   ' → logprob: -14.000645637512207
    10. '           ' → logprob: -14.875645637512207

Token 1296: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -2.15310683415737e-05
    2. ' min' → logprob: -10.750021934509277
    3. '	min' → logprob: -16.87502098083496
    4. '   ' → logprob: -19.12502098083496
    5. '[min' → logprob: -19.87502098083496
    6. 'max' → logprob: -20.00002098083496
    7. '=min' → logprob: -20.75002098083496
    8. 'minimum' → logprob: -20.75002098083496
    9. '(min' → logprob: -21.00002098083496
    10. '_min' → logprob: -21.12502098083496

Token 1297: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.011448952369391918
    2. 'dp' → logprob: -4.511448860168457
    3. '(' → logprob: -8.511448860168457
    4. '(min' → logprob: -8.761448860168457
    5. 'min' → logprob: -10.886448860168457
    6. '(
' → logprob: -11.636448860168457
    7. ' dp' → logprob: -12.136448860168457
    8. '	dp' → logprob: -12.636448860168457
    9. '   ' → logprob: -13.386448860168457
    10. '[' → logprob: -13.511448860168457

Token 1298: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -8.061054359131958e-06
    2. 'd' → logprob: -12.375007629394531
    3. '[' → logprob: -12.750007629394531
    4. '   ' → logprob: -15.000007629394531
    5. '[
' → logprob: -15.750007629394531
    6. ']' → logprob: -16.50000762939453
    7. '```' → logprob: -16.62500762939453
    8. '(d' → logprob: -16.75000762939453
    9. '       ' → logprob: -17.37500762939453
    10. '	d' → logprob: -17.75000762939453

Token 1299: '],' (ID: 2155)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.015028027817606926
    2. '],' → logprob: -4.26502799987793
    3. ']' → logprob: -8.39002799987793
    4. ',' → logprob: -8.64002799987793
    5. 'd' → logprob: -9.01502799987793
    6. ',d' → logprob: -9.14002799987793
    7. '   ' → logprob: -10.01502799987793
    8. '       ' → logprob: -10.01502799987793
    9. '(d' → logprob: -10.39002799987793
    10. '[' → logprob: -10.64002799987793

Token 1300: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006719640456140041
    2. ' dp' → logprob: -5.006719589233398
    3. '	dp' → logprob: -13.131719589233398
    4. '               ' → logprob: -14.506719589233398
    5. '           ' → logprob: -14.631719589233398
    6. '                   ' → logprob: -14.756719589233398
    7. '   ' → logprob: -14.756719589233398
    8. '(dp' → logprob: -14.881719589233398
    9. '```' → logprob: -16.8817195892334
    10. '_dp' → logprob: -16.8817195892334

Token 1301: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -7.226628895296017e-06
    2. 'd' → logprob: -11.875007629394531
    3. '[' → logprob: -15.250007629394531
    4. '[
' → logprob: -17.12500762939453
    5. '	d' → logprob: -17.75000762939453
    6. '   ' → logprob: -18.00000762939453
    7. '```' → logprob: -18.50000762939453
    8. '       ' → logprob: -19.87500762939453
    9. ' [' → logprob: -20.25000762939453
    10. '(d' → logprob: -20.75000762939453

Token 1302: ' -' (ID: 533)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -4.930552313453518e-05
    2. 'd' → logprob: -10.625049591064453
    3. '-d' → logprob: -11.125049591064453
    4. '[' → logprob: -12.500049591064453
    5. '-' → logprob: -13.125049591064453
    6. '[
' → logprob: -13.375049591064453
    7. ' -' → logprob: -13.750049591064453
    8. ']' → logprob: -13.750049591064453
    9. '   ' → logprob: -15.500049591064453
    10. '[-' → logprob: -15.875049591064453

Token 1303: ' dmg' (ID: 168827)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.9385402993066236e-05
    2. ' dmg' → logprob: -11.250019073486328
    3. '   ' → logprob: -12.500019073486328
    4. ' ' → logprob: -14.250019073486328
    5. 'mp' → logprob: -14.625019073486328
    6. '       ' → logprob: -15.250019073486328
    7. '     ' → logprob: -15.375019073486328
    8. '  ' → logprob: -15.750019073486328
    9. '
' → logprob: -15.750019073486328
    10. '1' → logprob: -15.875019073486328

Token 1304: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020595960319042206
    2. ']+' → logprob: -3.8955960273742676
    3. ' ]' → logprob: -10.39559555053711
    4. '])' → logprob: -11.39559555053711
    5. '           ' → logprob: -13.27059555053711
    6. ']
' → logprob: -13.39559555053711
    7. '   ' → logprob: -13.77059555053711
    8. '               ' → logprob: -13.89559555053711
    9. '']' → logprob: -14.27059555053711
    10. '                   ' → logprob: -14.27059555053711

Token 1305: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1541168689727783
    2. ' +' → logprob: -1.1541168689727783
    3. ']' → logprob: -1.2791168689727783
    4. ']+' → logprob: -2.4041168689727783
    5. '   ' → logprob: -8.5291166305542
    6. '```' → logprob: -8.5291166305542
    7. '[' → logprob: -9.9041166305542
    8. ')+' → logprob: -10.0291166305542
    9. ')' → logprob: -10.0291166305542
    10. ' ]' → logprob: -10.5291166305542

Token 1306: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.003177952254191041
    2. ' mp' → logprob: -5.753178119659424
    3. '	mp' → logprob: -16.878177642822266
    4. 'MP' → logprob: -17.628177642822266
    5. '(mp' → logprob: -17.753177642822266
    6. 'pm' → logprob: -17.753177642822266
    7. '_mp' → logprob: -18.378177642822266
    8. 'dp' → logprob: -18.503177642822266
    9. '   ' → logprob: -18.878177642822266
    10. '/mp' → logprob: -19.253177642822266

Token 1307: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26999256014823914
    2. '               ' → logprob: -2.7699925899505615
    3. '       ' → logprob: -2.8949925899505615
    4. ')' → logprob: -4.019992351531982
    5. ':' → logprob: -4.019992351531982
    6. '):' → logprob: -4.269992351531982
    7. '):
' → logprob: -4.519992351531982
    8. '                   ' → logprob: -4.769992351531982
    9. ']' → logprob: -4.894992351531982
    10. 'for' → logprob: -5.144992351531982

Token 1308: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6893541812896729
    2. '           ' → logprob: -1.8143541812896729
    3. '<|end|>' → logprob: -1.9393541812896729
    4. '
' → logprob: -2.189354181289673
    5. ' for' → logprob: -3.439354181289673
    6. 'for' → logprob: -4.314353942871094
    7. '   ' → logprob: -4.689353942871094
    8. '<|end|>' → logprob: -5.314353942871094
    9. '        ' → logprob: -5.814353942871094
    10. '    ' → logprob: -6.064353942871094

Token 1309: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7715365290641785
    2. '           ' → logprob: -1.2715365886688232
    3. 'for' (adapté à ' for') → logprob: -2.7715365886688232
    4. '
' → logprob: -2.8965365886688232
    5. '<|end|>' → logprob: -3.0215365886688232
    6. ' for' → logprob: -3.2715365886688232
    7. '<|end|>' → logprob: -3.8965365886688232
    8. '   ' → logprob: -4.896536350250244
    9. '```' → logprob: -5.146536350250244
    10. '        ' → logprob: -6.146536350250244

Token 1310: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.030074777081608772
    2. ' d' → logprob: -3.5300748348236084
    3. '_d' → logprob: -9.030075073242188
    4. ' dmg' → logprob: -9.030075073242188
    5. '_' → logprob: -10.655075073242188
    6. ' in' → logprob: -11.030075073242188
    7. ' _' → logprob: -11.530075073242188
    8. 'in' → logprob: -12.405075073242188
    9. 'mp' → logprob: -12.530075073242188
    10. '	d' → logprob: -12.655075073242188

Token 1311: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.154537171125412
    2. 'in' → logprob: -2.0295372009277344
    3. '0' → logprob: -4.654537200927734
    4. '1' → logprob: -6.404537200927734
    5. '=' → logprob: -8.154537200927734
    6. 'd' → logprob: -8.904537200927734
    7. '[' → logprob: -10.029537200927734
    8. '   ' → logprob: -10.154537200927734
    9. ' ' → logprob: -10.154537200927734
    10. ',' → logprob: -11.404537200927734

Token 1312: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00026336227892898023
    2. ' range' → logprob: -8.250263214111328
    3. '(range' → logprob: -13.750263214111328
    4. '   ' → logprob: -14.625263214111328
    5. 'd' → logprob: -14.750263214111328
    6. ' ' → logprob: -17.750263214111328
    7. '	range' → logprob: -18.125263214111328
    8. 'r' → logprob: -18.125263214111328
    9. 'rang' → logprob: -18.250263214111328
    10. '  ' → logprob: -19.250263214111328

Token 1313: '(d' (ID: 2572)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.003500288585200906
    2. '   ' → logprob: -6.878500461578369
    3. '(d' → logprob: -7.253500461578369
    4. '1' → logprob: -7.503500461578369
    5. '0' → logprob: -7.878500461578369
    6. 'max' → logprob: -8.003499984741211
    7. ' dmg' → logprob: -8.878499984741211
    8. '       ' → logprob: -9.878499984741211
    9. 'all' → logprob: -10.003499984741211
    10. 'mp' → logprob: -10.003499984741211

Token 1314: 'mg' (ID: 15026)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3563231825828552
    2. 'd' → logprob: -1.4813232421875
    3. '1' → logprob: -3.4813232421875
    4. 'max' → logprob: -4.1063232421875
    5. '   ' → logprob: -4.8563232421875
    6. 'mp' → logprob: -5.4813232421875
    7. 'dm' → logprob: -5.4813232421875
    8. 'm' → logprob: -5.6063232421875
    9. '       ' → logprob: -6.3563232421875
    10. ' ' → logprob: -7.1063232421875

Token 1315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00845843181014061
    2. ',d' → logprob: -5.883458614349365
    3. ',max' → logprob: -6.008458614349365
    4. ' ,' → logprob: -7.383458614349365
    5. '+' → logprob: -7.383458614349365
    6. '1' → logprob: -7.633458614349365
    7. '0' → logprob: -8.258458137512207
    8. 'd' → logprob: -8.383458137512207
    9. '   ' → logprob: -8.633458137512207
    10. '):
' → logprob: -8.758458137512207

Token 1316: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -2.339278580620885e-06
    2. ' max' → logprob: -13.000001907348633
    3. '(max' → logprob: -17.000001907348633
    4. '
' → logprob: -17.250001907348633
    5. '   ' → logprob: -18.875001907348633
    6. '           ' → logprob: -19.625001907348633
    7. '[max' → logprob: -20.125001907348633
    8. '       ' → logprob: -20.500001907348633
    9. ',max' → logprob: -21.000001907348633
    10. '	max' → logprob: -21.125001907348633

Token 1317: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.012653141282498837
    2. '+' → logprob: -4.887653350830078
    3. 'P' → logprob: -5.762653350830078
    4. '   ' → logprob: -7.012653350830078
    5. ' +' → logprob: -7.262653350830078
    6. ',' → logprob: -8.887653350830078
    7. 'max' → logprob: -9.887653350830078
    8. 'DP' → logprob: -10.762653350830078
    9. 'H' → logprob: -11.512653350830078
    10. '=' → logprob: -11.762653350830078

Token 1318: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006707399734295905
    2. ' +' → logprob: -7.375670909881592
    3. '   ' → logprob: -10.875670433044434
    4. 'max' → logprob: -11.875670433044434
    5. '[' → logprob: -12.625670433044434
    6. '):
' → logprob: -12.875670433044434
    7. '1' → logprob: -13.250670433044434
    8. '```' → logprob: -13.250670433044434
    9. '
' → logprob: -13.375670433044434
    10. '       ' → logprob: -13.625670433044434

Token 1319: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3159404695034027
    2. 'max' → logprob: -1.565940499305725
    3. '1' → logprob: -2.8159403800964355
    4. '(max' → logprob: -6.1909403800964355
    5. ' +' → logprob: -10.440940856933594
    6. ' max' → logprob: -10.815940856933594
    7. '   ' → logprob: -11.190940856933594
    8. '[max' → logprob: -11.190940856933594
    9. ')' → logprob: -12.065940856933594
    10. '=max' → logprob: -12.440940856933594

Token 1320: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.28019824624061584
    2. '):
' → logprob: -2.030198335647583
    3. ':' → logprob: -2.280198335647583
    4. '):' → logprob: -5.405198097229004
    5. '       ' → logprob: -5.655198097229004
    6. '           ' → logprob: -7.405198097229004
    7. '+' → logprob: -7.405198097229004
    8. ']:
' → logprob: -7.405198097229004
    9. '   ' → logprob: -7.905198097229004
    10. '[' → logprob: -8.530198097229004

Token 1321: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.28239917755126953
    2. '       ' → logprob: -1.7823991775512695
    3. '           ' → logprob: -2.6573991775512695
    4. ':' → logprob: -6.0323991775512695
    5. ' if' → logprob: -6.6573991775512695
    6. '   ' → logprob: -7.0323991775512695
    7. ':
' → logprob: -7.4073991775512695
    8. '[' → logprob: -7.9073991775512695
    9. 'dp' → logprob: -7.9073991775512695
    10. '```' → logprob: -7.9073991775512695

Token 1322: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08100034296512604
    2. 'dp' → logprob: -2.831000328063965
    3. ' if' → logprob: -4.081000328063965
    4. ' dp' → logprob: -7.456000328063965
    5. '           ' → logprob: -7.581000328063965
    6. '                   ' → logprob: -7.706000328063965
    7. '               ' → logprob: -8.831000328063965
    8. '       ' → logprob: -8.956000328063965
    9. '   ' → logprob: -10.081000328063965
    10. '                       ' → logprob: -10.706000328063965

Token 1323: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011058080941438675
    2. ' dp' → logprob: -4.5110578536987305
    3. '   ' → logprob: -12.88605785369873
    4. '	dp' → logprob: -12.88605785369873
    5. '                   ' → logprob: -13.26105785369873
    6. '               ' → logprob: -13.26105785369873
    7. '(dp' → logprob: -13.76105785369873
    8. '           ' → logprob: -15.38605785369873
    9. '_dp' → logprob: -16.511058807373047
    10. 'd' → logprob: -16.761058807373047

Token 1324: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.0001105762057704851
    2. 'd' → logprob: -9.125110626220703
    3. '   ' → logprob: -14.875110626220703
    4. '[' → logprob: -14.875110626220703
    5. '[
' → logprob: -14.875110626220703
    6. '	d' → logprob: -15.750110626220703
    7. '```' → logprob: -15.750110626220703
    8. '                   ' → logprob: -16.125110626220703
    9. '               ' → logprob: -16.625110626220703
    10. '=d' → logprob: -17.500110626220703

Token 1325: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06999168545007706
    2. ']>' → logprob: -2.9449915885925293
    3. '>' → logprob: -4.569991588592529
    4. ' >' → logprob: -5.819991588592529
    5. '[' → logprob: -7.819991588592529
    6. '                   ' → logprob: -7.944991588592529
    7. 'd' → logprob: -8.819992065429688
    8. '[d' → logprob: -8.944992065429688
    9. '>d' → logprob: -9.069992065429688
    10. '=' → logprob: -9.194992065429688

Token 1326: ' dmg' (ID: 168827)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00038539018714800477
    2. ' dmg' → logprob: -8.500385284423828
    3. '1' → logprob: -9.875385284423828
    4. '   ' → logprob: -10.000385284423828
    5. 'mp' → logprob: -10.125385284423828
    6. '       ' → logprob: -11.625385284423828
    7. ']' → logprob: -12.500385284423828
    8. ' ' → logprob: -12.625385284423828
    9. '	d' → logprob: -12.750385284423828
    10. '           ' → logprob: -12.750385284423828

Token 1327: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005774584715254605
    2. ']+' → logprob: -7.500577449798584
    3. '[' → logprob: -11.500577926635742
    4. ' ]' → logprob: -12.000577926635742
    5. ' +' → logprob: -12.875577926635742
    6. '+' → logprob: -13.750577926635742
    7. '               ' → logprob: -14.250577926635742
    8. '                   ' → logprob: -14.625577926635742
    9. ')' → logprob: -14.750577926635742
    10. '```' → logprob: -14.875577926635742

Token 1328: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07890300452709198
    2. '+' → logprob: -2.5789029598236084
    3. ']' → logprob: -12.328903198242188
    4. '                   ' → logprob: -12.953903198242188
    5. '>' → logprob: -13.453903198242188
    6. '               ' → logprob: -13.703903198242188
    7. ']+' → logprob: -14.453903198242188
    8. '                ' → logprob: -14.578903198242188
    9. '[' → logprob: -14.828903198242188
    10. '                       ' → logprob: -15.078903198242188

Token 1329: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.004078639671206474
    2. ' mp' → logprob: -5.5040788650512695
    3. 'pm' → logprob: -16.379077911376953
    4. '	mp' → logprob: -16.629077911376953
    5. '_mp' → logprob: -17.379077911376953
    6. '(mp' → logprob: -17.504077911376953
    7. 'MP' → logprob: -17.879077911376953
    8. '/mp' → logprob: -18.504077911376953
    9. 'dp' → logprob: -18.754077911376953
    10. '   ' → logprob: -19.879077911376953

Token 1330: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.20142580568790436
    2. '<' → logprob: -1.7014257907867432
    3. '                   ' → logprob: -12.201425552368164
    4. ')' → logprob: -12.951425552368164
    5. ' ' → logprob: -14.076425552368164
    6. '                       ' → logprob: -14.701425552368164
    7. '<p' → logprob: -14.826425552368164
    8. ')<' → logprob: -14.826425552368164
    9. '<int' → logprob: -14.951425552368164
    10. '               ' → logprob: -14.951425552368164

Token 1331: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.014164921827614307
    2. ' dp' → logprob: -4.264164924621582
    3. '               ' → logprob: -14.139164924621582
    4. '                   ' → logprob: -15.139164924621582
    5. '	dp' → logprob: -15.639164924621582
    6. '           ' → logprob: -16.264163970947266
    7. '(dp' → logprob: -16.514163970947266
    8. '_dp' → logprob: -16.514163970947266
    9. '```' → logprob: -17.889163970947266
    10. '.dp' → logprob: -18.889163970947266

Token 1332: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -1.0206720617134124e-05
    2. 'd' → logprob: -11.50001049041748
    3. ' d' → logprob: -18.750009536743164
    4. '[' → logprob: -18.750009536743164
    5. '=d' → logprob: -18.750009536743164
    6. '	d' → logprob: -18.875009536743164
    7. '(d' → logprob: -19.500009536743164
    8. '   ' → logprob: -19.625009536743164
    9. '```' → logprob: -19.750009536743164
    10. '[
' → logprob: -20.125009536743164

Token 1333: ']:
' (ID: 22152)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3670373857021332
    2. ']:
' → logprob: -1.6170374155044556
    3. ']:' → logprob: -2.742037296295166
    4. ']' → logprob: -4.242037296295166
    5. '=' → logprob: -4.492037296295166
    6. '               ' → logprob: -4.867037296295166
    7. ':
' → logprob: -5.742037296295166
    8. ']=' → logprob: -5.867037296295166
    9. ':' → logprob: -6.242037296295166
    10. '):
' → logprob: -7.492037296295166

Token 1334: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3749988377094269
    2. '=' → logprob: -1.2499988079071045
    3. ' =' → logprob: -3.8749988079071045
    4. '                       ' → logprob: -5.874999046325684
    5. ':' → logprob: -6.624999046325684
    6. '               ' → logprob: -7.624999046325684
    7. ':
' → logprob: -7.749999046325684
    8. 'dp' → logprob: -9.124999046325684
    9. '                    ' → logprob: -10.124999046325684
    10. '=
' → logprob: -10.249999046325684

Token 1335: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0065890164114534855
    2. ' dp' → logprob: -5.131588935852051
    3. '                   ' → logprob: -7.381588935852051
    4. '=' → logprob: -11.13158893585205
    5. '                       ' → logprob: -11.75658893585205
    6. '	dp' → logprob: -12.38158893585205
    7. '(dp' → logprob: -12.75658893585205
    8. 'd' → logprob: -13.13158893585205
    9. '_dp' → logprob: -13.13158893585205
    10. '                    ' → logprob: -14.13158893585205

Token 1336: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -9.372294698550832e-06
    2. '=d' → logprob: -12.125009536743164
    3. '=' → logprob: -13.500009536743164
    4. 'd' → logprob: -13.625009536743164
    5. '[' → logprob: -13.750009536743164
    6. ' =' → logprob: -16.750009536743164
    7. '[
' → logprob: -17.000009536743164
    8. '(d' → logprob: -17.500009536743164
    9. '	d' → logprob: -18.000009536743164
    10. '```' → logprob: -18.125009536743164

Token 1337: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3836561441421509
    2. '[d' → logprob: -1.7586561441421509
    3. ']' → logprob: -2.3836560249328613
    4. ']=' → logprob: -3.5086560249328613
    5. ' =' → logprob: -4.258656024932861
    6. '=d' → logprob: -5.008656024932861
    7. 'd' → logprob: -6.133656024932861
    8. '                   ' → logprob: -7.633656024932861
    9. '=
' → logprob: -7.883656024932861
    10. '[' → logprob: -9.63365650177002

Token 1338: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00016587569552939385
    2. ' =' → logprob: -8.750165939331055
    3. ']=' → logprob: -13.000165939331055
    4. '=d' → logprob: -13.000165939331055
    5. '=
' → logprob: -13.125165939331055
    6. ']' → logprob: -14.625165939331055
    7. '.=' → logprob: -16.250165939331055
    8. '=}' → logprob: -16.625165939331055
    9. '[' → logprob: -17.000165939331055
    10. '=

' → logprob: -17.125165939331055

Token 1339: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0009119403548538685
    2. ' dp' → logprob: -7.000911712646484
    3. '                   ' → logprob: -15.125911712646484
    4. '	dp' → logprob: -16.000911712646484
    5. '(dp' → logprob: -17.000911712646484
    6. '               ' → logprob: -18.125911712646484
    7. '                       ' → logprob: -18.625911712646484
    8. '_dp' → logprob: -19.250911712646484
    9. 'd' → logprob: -19.375911712646484
    10. '           ' → logprob: -19.500911712646484

Token 1340: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -2.5941604690160602e-05
    2. 'd' → logprob: -11.125025749206543
    3. '[' → logprob: -11.750025749206543
    4. '(d' → logprob: -14.625025749206543
    5. ' -' → logprob: -14.750025749206543
    6. '   ' → logprob: -15.000025749206543
    7. '       ' → logprob: -15.000025749206543
    8. '-' → logprob: -15.250025749206543
    9. '[
' → logprob: -15.375025749206543
    10. '
' → logprob: -15.875025749206543

Token 1341: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.009701560251414776
    2. '-' → logprob: -4.884701728820801
    3. ']' → logprob: -6.884701728820801
    4. '-d' → logprob: -7.509701728820801
    5. '[d' → logprob: -9.0097017288208
    6. '               ' → logprob: -9.2597017288208
    7. '       ' → logprob: -9.3847017288208
    8. '                   ' → logprob: -9.7597017288208
    9. '   ' → logprob: -10.2597017288208
    10. '           ' → logprob: -10.2597017288208

Token 1342: ' dmg' (ID: 168827)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3452152609825134
    2. 'mp' → logprob: -1.3452153205871582
    3. '1' → logprob: -3.720215320587158
    4. ' dmg' → logprob: -5.720215320587158
    5. '99' → logprob: -6.845215320587158
    6. '0' → logprob: -7.470215320587158
    7. '   ' → logprob: -7.470215320587158
    8. 'mg' → logprob: -8.22021484375
    9. ' ' → logprob: -8.34521484375
    10. '3' → logprob: -8.47021484375

Token 1343: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029305247589945793
    2. ']+' → logprob: -3.6543052196502686
    3. '+' → logprob: -6.154305458068848
    4. ' +' → logprob: -7.154305458068848
    5. '[' → logprob: -9.904305458068848
    6. '                   ' → logprob: -11.029305458068848
    7. ' ]' → logprob: -11.404305458068848
    8. '   ' → logprob: -12.779305458068848
    9. '               ' → logprob: -12.904305458068848
    10. '                       ' → logprob: -13.529305458068848

Token 1344: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3869136571884155
    2. '+' → logprob: -1.1369136571884155
    3. '                   ' → logprob: -10.636913299560547
    4. '                       ' → logprob: -12.761913299560547
    5. ']+' → logprob: -13.011913299560547
    6. '               ' → logprob: -13.386913299560547
    7. '<|end|>' → logprob: -13.636913299560547
    8. ']' → logprob: -13.636913299560547
    9. '+p' → logprob: -13.636913299560547
    10. '                    ' → logprob: -13.761913299560547

Token 1345: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.00033546582562848926
    2. ' mp' → logprob: -8.000335693359375
    3. 'pm' → logprob: -17.250335693359375
    4. '	mp' → logprob: -18.000335693359375
    5. '(mp' → logprob: -18.500335693359375
    6. '_mp' → logprob: -20.000335693359375
    7. 'dp' → logprob: -20.125335693359375
    8. '/mp' → logprob: -20.625335693359375
    9. 'mpi' → logprob: -21.750335693359375
    10. 'ip' → logprob: -22.000335693359375

Token 1346: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1347: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021697767078876495
    2. '
' → logprob: -5.146697998046875
    3. ' for' → logprob: -5.146697998046875
    4. '<|end|>' → logprob: -5.271697998046875
    5. '```' → logprob: -6.646697998046875
    6. '        ' → logprob: -7.021697998046875
    7. 'for' → logprob: -7.646697998046875
    8. '        
' → logprob: -7.896697998046875
    9. '           ' → logprob: -8.146697998046875
    10. '   ' → logprob: -8.396697998046875

Token 1348: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06082283705472946
    2. 'result' → logprob: -3.4358227252960205
    3. '       ' → logprob: -4.3108229637146
    4. 'res' → logprob: -4.8108229637146
    5. '```' → logprob: -5.8108229637146
    6. 'best' → logprob: -6.4358229637146
    7. 'answer' → logprob: -8.060822486877441
    8. ' for' → logprob: -9.185822486877441
    9. 'min' → logprob: -9.310822486877441
    10. 'ans' → logprob: -10.310822486877441

Token 1349: ' However' (ID: 5551)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.1126749515533447
    2. 'ans' → logprob: -1.3626749515533447
    3. 'result' → logprob: -1.3626749515533447
    4. 'answer' → logprob: -2.3626749515533447
    5. 'for' → logprob: -3.3626749515533447
    6. 'best' → logprob: -3.6126749515533447
    7. 'min' → logprob: -6.112674713134766
    8. '       ' → logprob: -6.987674713134766
    9. '   ' → logprob: -8.987674713134766
    10. 'minimal' → logprob: -9.862674713134766

Token 1350: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7987794280052185
    2. ' for' → logprob: -0.9237794280052185
    3. 'for' → logprob: -2.0487794876098633
    4. '
' → logprob: -4.548779487609863
    5. ' continue' → logprob: -5.298779487609863
    6. '#' → logprob: -5.923779487609863
    7. ' if' → logprob: -6.548779487609863
    8. ' #' → logprob: -6.923779487609863
    9. '   ' → logprob: -7.048779487609863
    10. '        
' → logprob: -7.173779487609863

Token 1351: ' above' (ID: 5151)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08237358182668686
    2. ' for' → logprob: -3.33237361907959
    3. '#' → logprob: -3.45737361907959
    4. '       ' → logprob: -4.70737361907959
    5. 'max' → logprob: -7.33237361907959
    6. 'res' → logprob: -7.83237361907959
    7. 'min' → logprob: -7.95737361907959
    8. 'best' → logprob: -8.08237361907959
    9. '
' → logprob: -8.33237361907959
    10. 'total' → logprob: -8.45737361907959

Token 1352: ' code' (ID: 3490)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0099141597747803
    2. '       ' → logprob: -1.8849141597747803
    3. 'for' → logprob: -1.8849141597747803
    4. '
' → logprob: -2.6349141597747803
    5. '```' → logprob: -2.6349141597747803
    6. ' for' → logprob: -3.6349141597747803
    7. ' is' → logprob: -3.8849141597747803
    8. '        
' → logprob: -4.634914398193359
    9. ':
' → logprob: -4.634914398193359
    10. ' code' → logprob: -4.759914398193359

Token 1353: ' runs' (ID: 13719)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.636177122592926
    2. ' for' → logprob: -1.8861770629882812
    3. 'for' → logprob: -2.2611770629882812
    4. ' continues' → logprob: -3.2611770629882812
    5. ':
' → logprob: -3.5111770629882812
    6. '```' → logprob: -3.6361770629882812
    7. ' is' → logprob: -4.136177062988281
    8. '#' → logprob: -4.136177062988281
    9. '
' → logprob: -4.386177062988281
    10. ' should' → logprob: -4.511177062988281

Token 1354: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8713611960411072
    2. 'in' → logprob: -1.871361255645752
    3. 'too' → logprob: -1.996361255645752
    4. ' for' → logprob: -2.371361255645752
    5. '       ' → logprob: -2.496361255645752
    6. ' twice' → logprob: -3.246361255645752
    7. ' in' → logprob: -3.996361255645752
    8. ' too' → logprob: -4.621361255645752
    9. '```' → logprob: -4.746361255645752
    10. 'only' → logprob: -4.996361255645752

Token 1355: ' update' (ID: 4027)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[d' → logprob: -1.0630258321762085
    2. '       ' → logprob: -2.063025951385498
    3. ' for' → logprob: -2.313025951385498
    4. '=' → logprob: -2.313025951385498
    5. '[' → logprob: -2.438025951385498
    6. 'for' → logprob: -2.813025951385498
    7. 'd' → logprob: -2.938025951385498
    8. ' =' → logprob: -3.438025951385498
    9. '```' → logprob: -3.938025951385498
    10. '[i' → logprob: -4.813025951385498

Token 1356: ' twice' (ID: 18370)
  Prédit: ' twice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' twice' → logprob: -0.5284292697906494
    2. ' for' → logprob: -1.7784292697906494
    3. '       ' → logprob: -2.1534292697906494
    4. ' again' → logprob: -2.9034292697906494
    5. 'for' → logprob: -3.7784292697906494
    6. ' only' → logprob: -4.15342903137207
    7. ' with' → logprob: -5.90342903137207
    8. '   ' → logprob: -5.90342903137207
    9. '        
' → logprob: -5.90342903137207
    10. 'd' → logprob: -6.02842903137207

Token 1357: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08807969838380814
    2. '<|end|>' → logprob: -2.8380796909332275
    3. '
' → logprob: -4.213079929351807
    4. '<|end|>' → logprob: -5.088079929351807
    5. ' for' → logprob: -6.213079929351807
    6. 'for' → logprob: -6.338079929351807
    7. '   ' → logprob: -7.963079929351807
    8. ',' → logprob: -8.963079452514648
    9. '           ' → logprob: -9.088079452514648
    10. '        
' → logprob: -9.088079452514648

Token 1358: 'w' (ID: 86)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49778860807418823
    2. ')' → logprob: -1.497788667678833
    3. 'for' → logprob: -2.372788667678833
    4. ' for' → logprob: -3.122788667678833
    5. '
' → logprob: -5.122788429260254
    6. '<|end|>' → logprob: -5.497788429260254
    7. '<|end|>' → logprob: -5.622788429260254
    8. '   ' → logprob: -5.622788429260254
    9. ',' → logprob: -5.747788429260254
    10. '           ' → logprob: -5.872788429260254

Token 1359: 'aste' (ID: 6604)
  Prédit: 'hile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hile' → logprob: -0.0019218488596379757
    2. 'for' → logprob: -6.626921653747559
    3. '=' → logprob: -7.876921653747559
    4. 'e' → logprob: -9.626921653747559
    5. 'hen' → logprob: -10.501921653747559
    6. 'h' → logprob: -10.626921653747559
    7. '   ' → logprob: -11.001921653747559
    8. '```' → logprob: -11.126921653747559
    9. '#' → logprob: -11.251921653747559
    10. 'here' → logprob: -12.126921653747559

Token 1360: '),' (ID: 936)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5562666654586792
    2. 'd' → logprob: -1.1812666654586792
    3. ')' → logprob: -4.056266784667969
    4. '=' → logprob: -4.431266784667969
    5. 'for' → logprob: -4.556266784667969
    6. '[d' → logprob: -4.556266784667969
    7. 'fully' → logprob: -4.806266784667969
    8. ' for' → logprob: -5.181266784667969
    9. '=True' → logprob: -5.181266784667969
    10. ' =' → logprob: -5.431266784667969

Token 1361: ' fix' (ID: 9295)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018696019425988197
    2. ' for' → logprob: -5.018695831298828
    3. '
' → logprob: -5.143695831298828
    4. 'for' → logprob: -5.518695831298828
    5. '           ' → logprob: -7.393695831298828
    6. '```' → logprob: -7.768695831298828
    7. '        
' → logprob: -8.143695831298828
    8. '   ' → logprob: -8.518695831298828
    9. '<|end|>' → logprob: -9.018695831298828
    10. '        ' → logprob: -9.518695831298828

Token 1362: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015117628499865532
    2. 'for' → logprob: -4.390117645263672
    3. ' for' → logprob: -6.765117645263672
    4. '           ' → logprob: -7.265117645263672
    5. '```' → logprob: -7.390117645263672
    6. '   ' → logprob: -9.515117645263672
    7. '
' → logprob: -10.265117645263672
    8. '#' → logprob: -12.140117645263672
    9. 'For' → logprob: -12.640117645263672
    10. '        ' → logprob: -12.890117645263672

Token 1363: ' one' (ID: 1001)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01211483869701624
    2. 'continue' → logprob: -5.762115001678467
    3. '```' → logprob: -5.762115001678467
    4. ' for' → logprob: -6.262115001678467
    5. 'range' → logprob: -6.387115001678467
    6. 'remove' → logprob: -7.137115001678467
    7. 'replace' → logprob: -8.012114524841309
    8. '#' → logprob: -8.137114524841309
    9. 'd' → logprob: -9.012114524841309
    10. 'only' → logprob: -9.512114524841309

Token 1364: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4132068455219269
    2. '           ' → logprob: -1.1632068157196045
    3. 'for' → logprob: -3.9132068157196045
    4. ' for' → logprob: -5.538207054138184
    5. '
' → logprob: -6.663207054138184
    6. '   ' → logprob: -7.413207054138184
    7. '```' → logprob: -9.413207054138184
    8. '               ' → logprob: -10.163207054138184
    9. '                   ' → logprob: -11.288207054138184
    10. '        
' → logprob: -11.913207054138184

Token 1365: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17925746738910675
    2. '           ' → logprob: -1.9292575120925903
    3. 'for' → logprob: -4.929257392883301
    4. '	' → logprob: -5.304257392883301
    5. '```' → logprob: -6.304257392883301
    6. ' for' → logprob: -6.554257392883301
    7. '		' → logprob: -6.679257392883301
    8. '   ' → logprob: -7.054257392883301
    9. '	       ' → logprob: -7.304257392883301
    10. '	for' → logprob: -8.6792573928833

Token 1366: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00904421042650938
    2. 'for' → logprob: -5.509044170379639
    3. '           ' → logprob: -6.009044170379639
    4. ' for' → logprob: -6.384044170379639
    5. '```' → logprob: -7.634044170379639
    6. '   ' → logprob: -8.384044647216797
    7. '
' → logprob: -11.009044647216797
    8. '#' (adapté à ' #') → logprob: -11.259044647216797
    9. '[' → logprob: -11.384044647216797
    10. '<|end|>' → logprob: -11.634044647216797

Token 1367: ' Let's' (ID: 41021)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022635096684098244
    2. 'for' → logprob: -4.022634983062744
    3. ' for' → logprob: -6.022634983062744
    4. '           ' → logprob: -6.772634983062744
    5. '```' → logprob: -7.897634983062744
    6. '   ' → logprob: -8.022635459899902
    7. '#' → logprob: -9.647635459899902
    8. '
' → logprob: -10.147635459899902
    9. 'For' → logprob: -10.647635459899902
    10. '[' → logprob: -11.147635459899902

Token 1368: ' redo' (ID: 109462)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006875448860228062
    2. 'continue' → logprob: -5.506875514984131
    3. ' for' → logprob: -7.256875514984131
    4. '       ' → logprob: -7.506875514984131
    5. 'remove' → logprob: -7.631875514984131
    6. 'replace' → logprob: -8.006875038146973
    7. '
' → logprob: -9.131875038146973
    8. 'write' → logprob: -9.381875038146973
    9. 'fix' → logprob: -9.631875038146973
    10. 'opt' → logprob: -9.881875038146973

Token 1369: ' dp' (ID: 21546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18392468988895416
    2. 'for' → logprob: -1.808924674987793
    3. ' for' → logprob: -6.558924674987793
    4. '```' → logprob: -6.558924674987793
    5. '           ' → logprob: -6.933924674987793
    6. '   ' → logprob: -8.058924674987793
    7. 'import' → logprob: -10.683924674987793
    8. 'from' → logprob: -11.683924674987793
    9. '	for' → logprob: -12.933924674987793
    10. 'dp' → logprob: -12.933924674987793

Token 1370: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1329616755247116
    2. 'for' → logprob: -2.1329617500305176
    3. ' for' → logprob: -5.257961750030518
    4. '   ' → logprob: -8.00796127319336
    5. '
' → logprob: -8.13296127319336
    6. '           ' → logprob: -9.88296127319336
    7. 'import' → logprob: -10.00796127319336
    8. '```' → logprob: -10.38296127319336
    9. '	for' → logprob: -11.25796127319336
    10. 'def' → logprob: -11.50796127319336

Token 1371: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0071840533055365086
    2. 'for' → logprob: -5.007184028625488
    3. '```' → logprob: -8.382184028625488
    4. ' for' → logprob: -8.632184028625488
    5. '   ' → logprob: -10.382184028625488
    6. '           ' → logprob: -10.632184028625488
    7. '
' → logprob: -13.632184028625488
    8. 'from' → logprob: -13.882184028625488
    9. 'import' → logprob: -13.882184028625488
    10. '        
' → logprob: -14.257184028625488

Token 1372: ' dp' (ID: 21546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03948517516255379
    2. 'for' → logprob: -3.289485216140747
    3. '```' → logprob: -7.289484977722168
    4. ' for' → logprob: -7.664484977722168
    5. '   ' → logprob: -8.664484977722168
    6. 'dp' (adapté à ' dp') → logprob: -9.914484977722168
    7. '           ' → logprob: -10.664484977722168
    8. '
' → logprob: -10.664484977722168
    9. 'import' → logprob: -11.664484977722168
    10. '	for' → logprob: -12.664484977722168

Token 1373: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12978459894657135
    2. '=' → logprob: -2.12978458404541
    3. '   ' → logprob: -6.62978458404541
    4. '[' → logprob: -7.75478458404541
    5. 'for' → logprob: -7.87978458404541
    6. ' for' → logprob: -8.25478458404541
    7. '=[' → logprob: -8.37978458404541
    8. '       ' → logprob: -9.37978458404541
    9. '```' → logprob: -10.00478458404541
    10. ' =[' → logprob: -10.00478458404541

Token 1374: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014251544780563563
    2. ' [' → logprob: -8.875142097473145
    3. '   ' → logprob: -13.125142097473145
    4. 'INF' → logprob: -15.125142097473145
    5. ' ' → logprob: -15.625142097473145
    6. '
' → logprob: -16.62514305114746
    7. '       ' → logprob: -17.25014305114746
    8. '```' → logprob: -17.50014305114746
    9. '[MAX' → logprob: -18.00014305114746
    10. '    ' → logprob: -18.37514305114746

Token 1375: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0011889220913872123
    2. '10' → logprob: -6.7511887550354
    3. '[' → logprob: -12.001189231872559
    4. '0' → logprob: -12.626189231872559
    5. 'IN' → logprob: -12.751189231872559
    6. 'inf' → logprob: -12.876189231872559
    7. ' INF' → logprob: -13.501189231872559
    8. 'float' → logprob: -14.376189231872559
    9. '_INF' → logprob: -15.001189231872559
    10. 'Inf' → logprob: -15.376189231872559

Token 1376: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.03022722899913788
    2. ']' → logprob: -3.7802271842956543
    3. '*(' → logprob: -5.030227184295654
    4. ']+' → logprob: -8.780227661132812
    5. ']*' → logprob: -8.905227661132812
    6. '   ' → logprob: -9.530227661132812
    7. 'for' → logprob: -10.280227661132812
    8. '*' → logprob: -11.780227661132812
    9. ' *' → logprob: -12.655227661132812
    10. ' for' → logprob: -12.655227661132812

Token 1377: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -9.088346359931165e-07
    2. ' max' → logprob: -14.625000953674316
    3. '(max' → logprob: -14.750000953674316
    4. '[max' → logprob: -17.75
    5. '   ' → logprob: -18.5
    6. '           ' → logprob: -20.375
    7. '       ' → logprob: -20.5
    8. '	max' → logprob: -21.0
    9. ',max' → logprob: -21.125
    10. '=max' → logprob: -21.625

Token 1378: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -2.1008713702030946e-06
    2. '+' → logprob: -13.875001907348633
    3. '1' → logprob: -14.625001907348633
    4. '   ' → logprob: -15.375001907348633
    5. '100' → logprob: -15.625001907348633
    6. ' ' → logprob: -17.250001907348633
    7. 'H' → logprob: -17.375001907348633
    8. '=' → logprob: -17.500001907348633
    9. '
' → logprob: -18.000001907348633
    10. '0' → logprob: -18.125001907348633

Token 1379: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.4391956685576588e-05
    2. ' +' → logprob: -10.625024795532227
    3. '+
' → logprob: -18.250024795532227
    4. '   ' → logprob: -19.125024795532227
    5. '
' → logprob: -19.625024795532227
    6. '```' → logprob: -19.625024795532227
    7. ')+' → logprob: -20.000024795532227
    8. '＋' → logprob: -20.500024795532227
    9. '1' → logprob: -20.500024795532227
    10. ']+' → logprob: -20.750024795532227

Token 1380: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '+' → logprob: -14.000000953674316
    3. ' ' → logprob: -15.625000953674316
    4. '   ' → logprob: -16.250001907348633
    5. '```' → logprob: -16.375001907348633
    6. '001' → logprob: -17.125001907348633
    7. '100' → logprob: -17.250001907348633
    8. '01' → logprob: -17.750001907348633
    9. '=' → logprob: -17.750001907348633
    10. '
' → logprob: -17.875001907348633

Token 1381: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06433587521314621
    2. ')' → logprob: -2.814335823059082
    3. '       ' → logprob: -6.064335823059082
    4. '   ' → logprob: -10.939335823059082
    5. '
' → logprob: -11.939335823059082
    6. ')
' → logprob: -12.314335823059082
    7. '```' → logprob: -12.814335823059082
    8. 'for' → logprob: -12.939335823059082
    9. ']
' → logprob: -13.189335823059082
    10. '):
' → logprob: -13.939335823059082

Token 1382: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0008912135381251574
    2. '       ' → logprob: -7.125891208648682
    3. '   ' → logprob: -10.25089168548584
    4. '```' → logprob: -10.37589168548584
    5. ' dp' → logprob: -11.25089168548584
    6. '	dp' → logprob: -12.25089168548584
    7. '[' → logprob: -13.75089168548584
    8. '`' → logprob: -14.37589168548584
    9. '``' → logprob: -15.37589168548584
    10. '(dp' → logprob: -16.000890731811523

Token 1383: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.00010366239439463243
    2. '0' → logprob: -9.250103950500488
    3. ' dp' → logprob: -12.250103950500488
    4. '[' → logprob: -13.875103950500488
    5. '   ' → logprob: -13.875103950500488
    6. '```' → logprob: -14.375103950500488
    7. '       ' → logprob: -16.250102996826172
    8. '	dp' → logprob: -16.625102996826172
    9. '`' → logprob: -17.125102996826172
    10. ' ' → logprob: -17.125102996826172

Token 1384: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012549327686429024
    2. '=' → logprob: -4.38754940032959
    3. '=[' → logprob: -10.88754940032959
    4. '0' → logprob: -11.88754940032959
    5. '```' → logprob: -12.38754940032959
    6. ' =' → logprob: -12.63754940032959
    7. '][' → logprob: -13.13754940032959
    8. '[
' → logprob: -13.26254940032959
    9. ']' → logprob: -14.38754940032959
    10. ']=' → logprob: -14.76254940032959

Token 1385: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.3676733690081164e-05
    2. ' ' → logprob: -11.37502384185791
    3. '   ' → logprob: -12.12502384185791
    4. '=' → logprob: -12.62502384185791
    5. ']' → logprob: -13.12502384185791
    6. '[' → logprob: -14.37502384185791
    7. '```' → logprob: -14.75002384185791
    8. ' =' → logprob: -15.62502384185791
    9. ']=' → logprob: -16.000022888183594
    10. ')' → logprob: -16.125022888183594

Token 1386: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.015268140472471714
    2. ' =' → logprob: -4.515268325805664
    3. ']' → logprob: -5.515268325805664
    4. ']=' → logprob: -8.640268325805664
    5. '   ' → logprob: -12.390268325805664
    6. ')' → logprob: -12.640268325805664
    7. '=
' → logprob: -14.390268325805664
    8. ' ]' → logprob: -14.765268325805664
    9. '=True' → logprob: -15.265268325805664
    10. ' =)' → logprob: -15.265268325805664

Token 1387: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0028062984347343445
    2. ' =' → logprob: -5.877806186676025
    3. '=
' → logprob: -14.502806663513184
    4. '=True' → logprob: -14.752806663513184
    5. '<|end|>' → logprob: -15.627806663513184
    6. '=}' → logprob: -16.877805709838867
    7. '＝' → logprob: -17.002805709838867
    8. '=False' → logprob: -17.002805709838867
    9. ']=' → logprob: -17.127805709838867
    10. '.=' → logprob: -17.252805709838867

Token 1388: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -20.000001907348633
    4. '=' → logprob: -21.625001907348633
    5. '000' → logprob: -22.250001907348633
    6. '۰' → logprob: -22.375001907348633
    7. '```' → logprob: -22.625001907348633
    8. '(' → logprob: -22.750001907348633
    9. '[' → logprob: -22.875001907348633
    10. '00' → logprob: -23.125001907348633

Token 1389: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '=' → logprob: -21.625
    4. '۰' → logprob: -22.375
    5. '000' → logprob: -22.375
    6. '[' → logprob: -22.5
    7. '00' → logprob: -23.125
    8. '(' → logprob: -23.375
    9. '{' → logprob: -24.125
    10. '   ' → logprob: -24.25

Token 1390: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015817589592188597
    2. 'for' → logprob: -6.87658166885376
    3. ' for' → logprob: -8.501582145690918
    4. '	' → logprob: -8.751582145690918
    5. '```' → logprob: -8.876582145690918
    6. '   ' → logprob: -11.126582145690918
    7. '	for' → logprob: -11.126582145690918
    8. '
' → logprob: -11.376582145690918
    9. '        
' → logprob: -13.376582145690918
    10. '           ' → logprob: -13.751582145690918

Token 1391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01908930204808712
    2. 'for' → logprob: -4.269089221954346
    3. ' for' → logprob: -6.269089221954346
    4. '```' → logprob: -6.644089221954346
    5. '   ' → logprob: -7.019089221954346
    6. '	for' → logprob: -7.269089221954346
    7. '	' → logprob: -9.269089698791504
    8. '
' → logprob: -11.394089698791504
    9. '           ' → logprob: -11.769089698791504
    10. '\t' → logprob: -12.769089698791504

Token 1392: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20159459114074707
    2. '       ' → logprob: -1.701594591140747
    3. ' for' → logprob: -8.951594352722168
    4. '```' → logprob: -10.076594352722168
    5. '   ' → logprob: -11.951594352722168
    6. '           ' → logprob: -13.201594352722168
    7. '	for' → logprob: -14.076594352722168
    8. 'from' → logprob: -15.076594352722168
    9. 'import' → logprob: -15.701594352722168
    10. '``' → logprob: -16.326595306396484

Token 1393: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.0007177923689596355
    2. ' mp' → logprob: -7.500717639923096
    3. '(mp' → logprob: -8.875718116760254
    4. '   ' → logprob: -11.500718116760254
    5. '_mp' → logprob: -12.000718116760254
    6. 'MP' → logprob: -12.625718116760254
    7. '	mp' → logprob: -13.250718116760254
    8. '_,' → logprob: -14.625718116760254
    9. 'all' → logprob: -14.625718116760254
    10. '       ' → logprob: -14.750718116760254

Token 1394: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010700537823140621
    2. ' ,' → logprob: -4.635700702667236
    3. ' in' → logprob: -7.510700702667236
    4. 'in' → logprob: -8.510700225830078
    5. ',s' → logprob: -9.635700225830078
    6. '_,' → logprob: -10.010700225830078
    7. 's' → logprob: -11.510700225830078
    8. ',v' → logprob: -12.135700225830078
    9. ',j' → logprob: -12.510700225830078
    10. ',n' → logprob: -12.635700225830078

Token 1395: ' _,' (ID: 18042)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.14397600293159485
    2. ' _,' → logprob: -2.0189759731292725
    3. ',' → logprob: -7.393976211547852
    4. ' ,' → logprob: -7.768976211547852
    5. '_' → logprob: -9.268976211547852
    6. '0' → logprob: -9.893976211547852
    7. ' _' → logprob: -10.518976211547852
    8. '__,' → logprob: -10.643976211547852
    9. 's' → logprob: -11.393976211547852
    10. ' ' → logprob: -11.518976211547852

Token 1396: ' dmg' (ID: 168827)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.2855416066013277e-05
    2. ' dmg' → logprob: -10.375032424926758
    3. 'damage' → logprob: -15.000032424926758
    4. 's' → logprob: -15.125032424926758
    5. '   ' → logprob: -15.125032424926758
    6. '
' → logprob: -15.500032424926758
    7. ' ' → logprob: -16.750032424926758
    8. '       ' → logprob: -16.750032424926758
    9. ' d' → logprob: -17.000032424926758
    10. ')d' → logprob: -17.000032424926758

Token 1397: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3486362397670746
    2. 'in' → logprob: -1.223636269569397
    3. '           ' → logprob: -8.973636627197266
    4. ':
' → logprob: -10.848636627197266
    5. '   ' → logprob: -10.973636627197266
    6. '       ' → logprob: -11.473636627197266
    7. ':' → logprob: -12.223636627197266
    8. '```' → logprob: -12.723636627197266
    9. '	in' → logprob: -12.723636627197266
    10. ',' → logprob: -13.223636627197266

Token 1398: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.00022308611369226128
    2. 'range' → logprob: -9.125223159790039
    3. ' all' → logprob: -9.250223159790039
    4. '   ' → logprob: -11.875223159790039
    5. 'sp' → logprob: -12.875223159790039
    6. 'in' → logprob: -13.125223159790039
    7. '[' → logprob: -13.500223159790039
    8. 's' → logprob: -13.500223159790039
    9. 'd' → logprob: -14.250223159790039
    10. 'spell' → logprob: -14.375223159790039

Token 1399: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.003332187421619892
    2. 'sp' → logprob: -5.753332138061523
    3. 'all' → logprob: -9.128332138061523
    4. 'range' → logprob: -10.753332138061523
    5. '_all' → logprob: -11.378332138061523
    6. '_s' → logprob: -11.878332138061523
    7. '_spell' → logprob: -13.003332138061523
    8. '```' → logprob: -13.878332138061523
    9. 'spell' → logprob: -14.003332138061523
    10. '_range' → logprob: -15.003332138061523

Token 1400: 'ells' (ID: 9703)
  Prédit: 'ells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ells' → logprob: -0.01153310015797615
    2. 'p' → logprob: -4.511533260345459
    3. '```' → logprob: -8.3865327835083
    4. 'o' → logprob: -9.5115327835083
    5. 'ell' → logprob: -10.2615327835083
    6. '[' → logprob: -11.1365327835083
    7. '[
' → logprob: -11.2615327835083
    8. 'e' → logprob: -11.5115327835083
    9. '_sp' → logprob: -11.5115327835083
    10. ']' → logprob: -11.5115327835083

Token 1401: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12711173295974731
    2. ':
' → logprob: -2.1271116733551025
    3. '   ' → logprob: -8.752111434936523
    4. '       ' → logprob: -11.877111434936523
    5. '):
' → logprob: -12.252111434936523
    6. '           ' → logprob: -12.502111434936523
    7. ',' → logprob: -12.627111434936523
    8. ':
' → logprob: -13.627111434936523
    9. '):' → logprob: -13.627111434936523
    10. ':

' → logprob: -14.002111434936523

Token 1402: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.440764844417572
    2. '       ' → logprob: -1.1907649040222168
    3. '```' → logprob: -3.315764904022217
    4. '           ' → logprob: -4.190764904022217
    5. ' for' → logprob: -7.690764904022217
    6. '	for' → logprob: -8.065764427185059
    7. '	   ' → logprob: -9.315764427185059
    8. '``' → logprob: -9.815764427185059
    9. '	       ' → logprob: -10.440764427185059
    10. '               ' → logprob: -10.815764427185059

Token 1403: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7007437944412231
    2. '       ' → logprob: -1.2007437944412231
    3. '   ' → logprob: -1.9507437944412231
    4. '           ' → logprob: -2.9507436752319336
    5. ' for' → logprob: -4.950743675231934
    6. '```' → logprob: -6.700743675231934
    7. 'd' → logprob: -10.825743675231934
    8. '	for' → logprob: -12.325743675231934
    9. '               ' → logprob: -12.450743675231934
    10. '``' → logprob: -12.575743675231934

Token 1404: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00037621514638885856
    2. 'damage' → logprob: -8.000375747680664
    3. ' d' → logprob: -10.125375747680664
    4. '   ' → logprob: -15.250375747680664
    5. ' damage' → logprob: -15.750375747680664
    6. ' dmg' → logprob: -16.250375747680664
    7. 'dam' → logprob: -16.375375747680664
    8. 'amount' → logprob: -16.625375747680664
    9. 'D' → logprob: -16.625375747680664
    10. ' ' → logprob: -17.875375747680664

Token 1405: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021260682493448257
    2. 'in' → logprob: -3.8962607383728027
    3. 'd' → logprob: -7.271260738372803
    4. '0' → logprob: -12.271260261535645
    5. ',d' → logprob: -12.771260261535645
    6. '	in' → logprob: -12.771260261535645
    7. 'import' → logprob: -12.896260261535645
    8. '=' → logprob: -13.021260261535645
    9. '   ' → logprob: -13.646260261535645
    10. '1' → logprob: -13.896260261535645

Token 1406: ' range' (ID: 3352)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.20196276903152466
    2. 'range' → logprob: -1.7019627094268799
    3. ' range' → logprob: -7.576962947845459
    4. '   ' → logprob: -10.7019624710083
    5. ' dmg' → logprob: -12.5769624710083
    6. 'r' → logprob: -12.7019624710083
    7. 'in' → logprob: -13.3269624710083
    8. 'dm' → logprob: -13.9519624710083
    9. '(d' → logprob: -14.2019624710083
    10. 'dp' → logprob: -14.3269624710083

Token 1407: '(d' (ID: 2572)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0005175283877179027
    2. '   ' → logprob: -7.62551736831665
    3. '       ' → logprob: -11.250517845153809
    4. '           ' → logprob: -12.750517845153809
    5. '0' → logprob: -13.000517845153809
    6. '(d' → logprob: -13.125517845153809
    7. ' dmg' → logprob: -13.625517845153809
    8. '     ' → logprob: -13.750517845153809
    9. '1' → logprob: -13.750517845153809
    10. ' ' → logprob: -13.875517845153809

Token 1408: 'mg' (ID: 15026)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0022367320489138365
    2. ',d' → logprob: -7.377236843109131
    3. '=d' → logprob: -7.752236843109131
    4. '   ' → logprob: -8.002236366271973
    5. ',' → logprob: -8.252236366271973
    6. ')d' → logprob: -9.002236366271973
    7. '       ' → logprob: -9.252236366271973
    8. '	d' → logprob: -9.377236366271973
    9. '(d' → logprob: -9.627236366271973
    10. '0' → logprob: -9.877236366271973

Token 1409: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014361754059791565
    2. ',max' → logprob: -4.26436185836792
    3. ' ,' → logprob: -9.139361381530762
    4. ',len' → logprob: -10.389361381530762
    5. ',d' → logprob: -10.514361381530762
    6. 'max' → logprob: -12.014361381530762
    7. '           ' → logprob: -12.014361381530762
    8. ',
' → logprob: -12.014361381530762
    9. '
' → logprob: -12.514361381530762
    10. ',m' → logprob: -13.139361381530762

Token 1410: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -2.696889623621246e-06
    2. ' max' → logprob: -13.00000286102295
    3. '(max' → logprob: -14.75000286102295
    4. '
' → logprob: -17.125001907348633
    5. '   ' → logprob: -18.500001907348633
    6. '[max' → logprob: -18.750001907348633
    7. '	max' → logprob: -19.500001907348633
    8. '           ' → logprob: -19.875001907348633
    9. ',max' → logprob: -19.875001907348633
    10. 'MAX' → logprob: -20.750001907348633

Token 1411: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.0005761472275480628
    2. '+' → logprob: -7.750576019287109
    3. 'P' → logprob: -9.25057601928711
    4. ',' → logprob: -10.75057601928711
    5. '   ' → logprob: -11.62557601928711
    6. ' +' → logprob: -12.87557601928711
    7. '0' → logprob: -12.87557601928711
    8. '=' → logprob: -13.00057601928711
    9. '
' → logprob: -13.00057601928711
    10. '```' → logprob: -13.12557601928711

Token 1412: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001721934968372807
    2. ' +' → logprob: -8.75017261505127
    3. '   ' → logprob: -12.00017261505127
    4. '+
' → logprob: -13.00017261505127
    5. '       ' → logprob: -13.25017261505127
    6. '```' → logprob: -13.75017261505127
    7. ')+' → logprob: -14.25017261505127
    8. ',' → logprob: -14.25017261505127
    9. '1' → logprob: -14.62517261505127
    10. '[' → logprob: -15.75017261505127

Token 1413: '1' (ID: 16)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7350589036941528
    2. '1' → logprob: -1.1100589036941528
    3. '+' → logprob: -1.8600589036941528
    4. '(max' → logprob: -3.3600587844848633
    5. ' max' → logprob: -8.235058784484863
    6. ' +' → logprob: -9.110058784484863
    7. ' ' → logprob: -9.610058784484863
    8. '(' → logprob: -10.610058784484863
    9. 'dp' → logprob: -10.860058784484863
    10. '   ' → logprob: -10.985058784484863

Token 1414: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5091647505760193
    2. '):
' → logprob: -1.884164810180664
    3. ':' → logprob: -2.009164810180664
    4. '               ' → logprob: -2.259164810180664
    5. '):' → logprob: -5.509164810180664
    6. '           ' → logprob: -6.384164810180664
    7. '=' → logprob: -7.259164810180664
    8. ']:
' → logprob: -7.384164810180664
    9. '       ' → logprob: -7.634164810180664
    10. '():
' → logprob: -8.634164810180664

Token 1415: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.031052378937602043
    2. '           ' → logprob: -3.906052350997925
    3. ' if' → logprob: -5.406052589416504
    4. '```' → logprob: -5.406052589416504
    5. '	       ' → logprob: -7.781052589416504
    6. '       ' → logprob: -8.281052589416504
    7. '<|end|>' → logprob: -9.156052589416504
    8. '   ' → logprob: -9.156052589416504
    9. 'if' → logprob: -9.281052589416504
    10. '	           ' → logprob: -9.281052589416504

Token 1416: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08738227188587189
    2. ' if' → logprob: -2.5873823165893555
    3. '               ' → logprob: -5.3373823165893555
    4. '           ' → logprob: -5.9623823165893555
    5. 'while' → logprob: -7.4623823165893555
    6. 'dp' → logprob: -7.7123823165893555
    7. '   ' → logprob: -11.087382316589355
    8. '	if' → logprob: -11.587382316589355
    9. '```' → logprob: -12.337382316589355
    10. ' dp' → logprob: -12.462382316589355

Token 1417: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005954044871032238
    2. ' dp' → logprob: -5.130954265594482
    3. '(dp' → logprob: -11.380953788757324
    4. '	dp' → logprob: -11.505953788757324
    5. '   ' → logprob: -12.755953788757324
    6. '           ' → logprob: -15.130953788757324
    7. '_dp' → logprob: -15.380953788757324
    8. '               ' → logprob: -15.630953788757324
    9. 'min' → logprob: -16.25595474243164
    10. '                   ' → logprob: -16.25595474243164

Token 1418: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.00015955790877342224
    2. 'd' → logprob: -8.75015926361084
    3. '[' → logprob: -14.12515926361084
    4. '   ' → logprob: -16.125160217285156
    5. '```' → logprob: -17.000160217285156
    6. '	d' → logprob: -17.250160217285156
    7. '[
' → logprob: -17.250160217285156
    8. ' d' → logprob: -18.500160217285156
    9. '[min' → logprob: -18.625160217285156
    10. '                   ' → logprob: -18.625160217285156

Token 1419: ' -' (ID: 533)
  Prédit: '-d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-d' → logprob: -0.2448740154504776
    2. '-' → logprob: -2.1198740005493164
    3. ' -' → logprob: -2.4948740005493164
    4. ']' → logprob: -4.994874000549316
    5. '[d' → logprob: -4.994874000549316
    6. '>d' → logprob: -8.119874000549316
    7. ']>' → logprob: -8.119874000549316
    8. 'd' → logprob: -8.619874000549316
    9. '[' → logprob: -9.244874000549316
    10. '   ' → logprob: -9.244874000549316

Token 1420: ' dmg' (ID: 168827)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.2617008400848135e-05
    2. ' dmg' → logprob: -10.375032424926758
    3. '   ' → logprob: -15.000032424926758
    4. 'dtype' → logprob: -15.750032424926758
    5. '\d' → logprob: -16.250032424926758
    6. 'dg' → logprob: -16.375032424926758
    7. ')d' → logprob: -16.375032424926758
    8. '       ' → logprob: -16.625032424926758
    9. ' ' → logprob: -16.625032424926758
    10. '           ' → logprob: -17.000032424926758

Token 1421: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00043805985478684306
    2. ']+' → logprob: -7.750438213348389
    3. ' ]' → logprob: -13.00043773651123
    4. '[' → logprob: -13.00043773651123
    5. ')' → logprob: -13.62543773651123
    6. '+' → logprob: -13.62543773651123
    7. ' +' → logprob: -15.87543773651123
    8. '']' → logprob: -16.500438690185547
    9. '+]' → logprob: -17.000438690185547
    10. ']
' → logprob: -17.250438690185547

Token 1422: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06198235973715782
    2. '+' → logprob: -2.8119823932647705
    3. '[' → logprob: -11.436982154846191
    4. ']' → logprob: -13.811982154846191
    5. ')' → logprob: -14.186982154846191
    6. ']+' → logprob: -14.561982154846191
    7. '```' → logprob: -14.686982154846191
    8. '>' → logprob: -15.686982154846191
    9. '    ' → logprob: -15.686982154846191
    10. 'dp' → logprob: -15.811982154846191

Token 1423: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.0019286326132714748
    2. ' mp' → logprob: -6.251928806304932
    3. '	mp' → logprob: -18.126928329467773
    4. '(mp' → logprob: -19.001928329467773
    5. 'pm' → logprob: -19.876928329467773
    6. 'MP' → logprob: -20.001928329467773
    7. '_mp' → logprob: -20.126928329467773
    8. '/mp' → logprob: -20.251928329467773
    9. '   ' → logprob: -22.001928329467773
    10. '.mp' → logprob: -22.751928329467773

Token 1424: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.12705987691879272
    2. ' <' → logprob: -2.1270599365234375
    3. '                   ' → logprob: -9.252059936523438
    4. '                       ' → logprob: -11.502059936523438
    5. '[' → logprob: -12.877059936523438
    6. '<int' → logprob: -13.127059936523438
    7. '<n' → logprob: -13.252059936523438
    8. '<p' → logprob: -13.252059936523438
    9. ')<' → logprob: -13.377059936523438
    10. '<th' → logprob: -13.377059936523438

Token 1425: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00033558503491804004
    2. ' dp' → logprob: -8.000335693359375
    3. '	dp' → logprob: -16.500335693359375
    4. '_dp' → logprob: -18.000335693359375
    5. '(dp' → logprob: -18.250335693359375
    6. '           ' → logprob: -19.375335693359375
    7. '.dp' → logprob: -20.500335693359375
    8. '               ' → logprob: -20.500335693359375
    9. '                   ' → logprob: -21.500335693359375
    10. 'd' → logprob: -21.875335693359375

Token 1426: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.00033558503491804004
    2. 'd' → logprob: -8.000335693359375
    3. '```' → logprob: -16.750335693359375
    4. '(d' → logprob: -17.125335693359375
    5. '[' → logprob: -17.125335693359375
    6. '	d' → logprob: -17.500335693359375
    7. ')d' → logprob: -18.750335693359375
    8. '=d' → logprob: -19.125335693359375
    9. '   ' → logprob: -19.375335693359375
    10. ' d' → logprob: -19.625335693359375

Token 1427: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.7760223150253296
    2. '                   ' → logprob: -0.9010223150253296
    3. ']:' → logprob: -2.776022434234619
    4. ']' → logprob: -3.276022434234619
    5. ']=' → logprob: -4.526022434234619
    6. ':
' → logprob: -4.901022434234619
    7. '               ' → logprob: -4.901022434234619
    8. ':' → logprob: -5.651022434234619
    9. '=' → logprob: -6.276022434234619
    10. ']==' → logprob: -6.776022434234619

Token 1428: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1045050248503685
    2. '=' → logprob: -2.3545050621032715
    3. ' =' → logprob: -5.6045050621032715
    4. ':' → logprob: -8.229504585266113
    5. '                       ' → logprob: -8.854504585266113
    6. ':
' → logprob: -9.979504585266113
    7. 'dp' → logprob: -10.104504585266113
    8. '               ' → logprob: -10.479504585266113
    9. '                    ' → logprob: -10.854504585266113
    10. '=
' → logprob: -11.104504585266113

Token 1429: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.00012987985974177718
    2. ' dp' → logprob: -9.250129699707031
    3. '                   ' → logprob: -10.375129699707031
    4. '                       ' → logprob: -13.875129699707031
    5. '	dp' → logprob: -14.375129699707031
    6. '```' → logprob: -14.750129699707031
    7. '               ' → logprob: -15.125129699707031
    8. '(dp' → logprob: -16.12512969970703
    9. '_dp' → logprob: -16.50012969970703
    10. 'd' → logprob: -17.62512969970703

Token 1430: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -6.630610641877865e-06
    2. 'd' → logprob: -12.000006675720215
    3. '=d' → logprob: -14.875006675720215
    4. '[' → logprob: -16.7500057220459
    5. '(d' → logprob: -18.2500057220459
    6. '=' → logprob: -18.5000057220459
    7. '                   ' → logprob: -19.0000057220459
    8. '[
' → logprob: -19.1250057220459
    9. '	d' → logprob: -19.5000057220459
    10. '```' → logprob: -19.7500057220459

Token 1431: ']' (ID: 60)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.05269817262887955
    2. ']' → logprob: -3.6776981353759766
    3. '=' → logprob: -3.8026981353759766
    4. '=d' → logprob: -6.427698135375977
    5. ' =' → logprob: -6.927698135375977
    6. ']=' → logprob: -7.052698135375977
    7. 'd' → logprob: -8.927698135375977
    8. '[' → logprob: -10.427698135375977
    9. '   ' → logprob: -10.552698135375977
    10. '                   ' → logprob: -10.802698135375977

Token 1432: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0072105647996068
    2. '=d' → logprob: -5.257210731506348
    3. '[d' → logprob: -6.882210731506348
    4. ' =' → logprob: -7.007210731506348
    5. '=
' → logprob: -10.757210731506348
    6. 'd' → logprob: -11.007210731506348
    7. ']=' → logprob: -12.882210731506348
    8. ']' → logprob: -13.757210731506348
    9. '                   ' → logprob: -14.757210731506348
    10. '   ' → logprob: -15.007210731506348

Token 1433: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.000553151941858232
    2. ' dp' → logprob: -7.500553131103516
    3. '	dp' → logprob: -16.250553131103516
    4. '                   ' → logprob: -16.875553131103516
    5. '(dp' → logprob: -17.125553131103516
    6. '   ' → logprob: -17.375553131103516
    7. '           ' → logprob: -17.375553131103516
    8. '               ' → logprob: -18.125553131103516
    9. '                       ' → logprob: -19.125553131103516
    10. '       ' → logprob: -19.750553131103516

Token 1434: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -2.2200749754119897e-06
    2. 'd' → logprob: -13.375001907348633
    3. '[' → logprob: -14.500001907348633
    4. '(d' → logprob: -16.750001907348633
    5. '   ' → logprob: -18.000001907348633
    6. '[-' → logprob: -18.375001907348633
    7. '       ' → logprob: -18.625001907348633
    8. '-d' → logprob: -18.750001907348633
    9. ' -' → logprob: -18.875001907348633
    10. '	d' → logprob: -19.500001907348633

Token 1435: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2832053303718567
    2. '-' → logprob: -2.283205270767212
    3. '[d' → logprob: -2.283205270767212
    4. '-d' → logprob: -3.158205270767212
    5. '[-' → logprob: -10.033205032348633
    6. 'd' → logprob: -10.033205032348633
    7. '   ' → logprob: -10.158205032348633
    8. '[' → logprob: -10.533205032348633
    9. '       ' → logprob: -11.408205032348633
    10. '-[' → logprob: -11.658205032348633

Token 1436: ' dmg' (ID: 168827)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4046280086040497
    2. ' dmg' → logprob: -2.154628038406372
    3. 'mp' → logprob: -2.404628038406372
    4. '99' → logprob: -2.529628038406372
    5. ' ' → logprob: -3.904628038406372
    6. '1' → logprob: -4.529627799987793
    7. 'dp' → logprob: -4.904627799987793
    8. ' mp' → logprob: -6.529627799987793
    9. '0' → logprob: -6.779627799987793
    10. '   ' → logprob: -7.029627799987793

Token 1437: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5101813077926636
    2. '+' → logprob: -1.3851813077926636
    3. ' +' → logprob: -2.135181427001953
    4. ']+' → logprob: -3.510181427001953
    5. '[' → logprob: -7.635181427001953
    6. '                   ' → logprob: -7.760181427001953
    7. '   ' → logprob: -9.760181427001953
    8. ' ]' → logprob: -10.010181427001953
    9. '               ' → logprob: -10.260181427001953
    10. '                       ' → logprob: -10.385181427001953

Token 1438: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3132743537425995
    2. ' +' → logprob: -1.3132743835449219
    3. '   ' → logprob: -12.813274383544922
    4. '[' → logprob: -13.188274383544922
    5. '                   ' → logprob: -13.313274383544922
    6. ']' → logprob: -13.438274383544922
    7. ']+' → logprob: -13.563274383544922
    8. '               ' → logprob: -13.813274383544922
    9. '           ' → logprob: -14.313274383544922
    10. '    ' → logprob: -14.688274383544922

Token 1439: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -2.15310683415737e-05
    2. ' mp' → logprob: -10.750021934509277
    3. 'pm' → logprob: -18.12502098083496
    4. '(mp' → logprob: -18.37502098083496
    5. '	mp' → logprob: -19.00002098083496
    6. '_mp' → logprob: -20.87502098083496
    7. '/mp' → logprob: -21.37502098083496
    8. 'dp' → logprob: -22.25002098083496
    9. '.mp' → logprob: -23.00002098083496
    10. 'mpi' → logprob: -23.50002098083496

Token 1440: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1441: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1442: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2809489369392395
    2. 'for' → logprob: -2.2809488773345947
    3. ' for' → logprob: -2.9059488773345947
    4. '<|end|>' → logprob: -3.2809488773345947
    5. '```' → logprob: -3.4059488773345947
    6. '           ' → logprob: -5.155949115753174
    7. '...' → logprob: -5.905949115753174
    8. '	for' → logprob: -6.405949115753174
    9. '
' → logprob: -6.655949115753174
    10. '   ' → logprob: -7.030949115753174

Token 1443: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8372345566749573
    2. 'for' → logprob: -1.9622344970703125
    3. ' for' → logprob: -1.9622344970703125
    4. '<|end|>' → logprob: -2.3372344970703125
    5. '   ' → logprob: -2.5872344970703125
    6. '```' → logprob: -3.3372344970703125
    7. '<|end|>' → logprob: -3.9622344970703125
    8. '           ' → logprob: -4.5872344970703125
    9. '[' → logprob: -5.2122344970703125
    10. ')' → logprob: -5.5872344970703125

Token 1444: ' this' (ID: 495)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3450857698917389
    2. ' for' → logprob: -1.8450857400894165
    3. '           ' → logprob: -2.220085859298706
    4. '       ' → logprob: -4.470085620880127
    5. 'continue' → logprob: -5.345085620880127
    6. '```' → logprob: -5.595085620880127
    7. '   ' → logprob: -6.095085620880127
    8. 'd' → logprob: -6.345085620880127
    9. ' continue' → logprob: -7.970085620880127
    10. '#' → logprob: -8.470086097717285

Token 1445: ' is' (ID: 382)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8356652855873108
    2. 'for' → logprob: -0.8356652855873108
    3. '           ' → logprob: -2.835665225982666
    4. '       ' → logprob: -3.710665225982666
    5. '   ' → logprob: -4.085665225982666
    6. ' should' → logprob: -4.710665225982666
    7. ' continues' → logprob: -5.210665225982666
    8. '
' → logprob: -5.460665225982666
    9. ' is' → logprob: -5.585665225982666
    10. '```' → logprob: -6.710665225982666

Token 1446: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.748220682144165
    2. 'not' → logprob: -1.623220682144165
    3. ' for' → logprob: -1.873220682144165
    4. 'un' → logprob: -2.623220682144165
    5. ' not' → logprob: -3.498220682144165
    6. '       ' → logprob: -3.873220682144165
    7. 'in' → logprob: -4.623220443725586
    8. '```' → logprob: -4.748220443725586
    9. ' un' → logprob: -4.873220443725586
    10. '           ' → logprob: -5.748220443725586

Token 1447: '0' (ID: 15)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08385402709245682
    2. 'un' → logprob: -3.4588539600372314
    3. 'd' → logprob: -4.4588541984558105
    4. '       ' → logprob: -4.8338541984558105
    5. 'range' → logprob: -5.2088541984558105
    6. 'dp' → logprob: -5.4588541984558105
    7. ' for' → logprob: -5.8338541984558105
    8. '#' → logprob: -5.9588541984558105
    9. 'True' → logprob: -6.3338541984558105
    10. 'not' → logprob: -6.5838541984558105

Token 1448: '/' (ID: 14)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9908633232116699
    2. '       ' → logprob: -1.36586332321167
    3. ' for' → logprob: -1.49086332321167
    4. ':' → logprob: -2.86586332321167
    5. '#' → logprob: -3.24086332321167
    6. '   ' → logprob: -4.24086332321167
    7. '
' → logprob: -4.36586332321167
    8. '           ' → logprob: -4.36586332321167
    9. '	for' → logprob: -6.49086332321167
    10. ':
' → logprob: -6.86586332321167

Token 1449: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.375538163818419e-05
    2. '#' → logprob: -10.625083923339844
    3. '
' → logprob: -10.625083923339844
    4. '```' → logprob: -11.125083923339844
    5. '/' → logprob: -11.625083923339844
    6. 'all' → logprob: -12.250083923339844
    7. '01' → logprob: -13.375083923339844
    8. 'one' → logprob: -13.625083923339844
    9. 'for' → logprob: -14.250083923339844
    10. '   ' → logprob: -14.250083923339844

Token 1450: ' kn' (ID: 1313)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15094301104545593
    2. 'for' → logprob: -3.0259430408477783
    3. ':' → logprob: -3.5259430408477783
    4. ' for' → logprob: -3.9009430408477783
    5. ':
' → logprob: -4.400942802429199
    6. '       ' → logprob: -4.525942802429199
    7. '
' → logprob: -4.650942802429199
    8. ',' → logprob: -6.025942802429199
    9. '[' → logprob: -6.900942802429199
    10. '<|end|>' → logprob: -6.900942802429199

Token 1451: 'apsack' (ID: 178559)
  Prédit: 'apsack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -0.4883566200733185
    2. 'n' → logprob: -0.9883565902709961
    3. '```' → logprob: -4.863356590270996
    4. 'nap' → logprob: -6.488356590270996
    5. '#' → logprob: -7.113356590270996
    6. '``' → logprob: -7.238356590270996
    7. 'p' → logprob: -7.738356590270996
    8. 'eep' → logprob: -7.863356590270996
    9. 'ernel' → logprob: -8.113356590270996
    10. '   ' → logprob: -8.113356590270996

Token 1452: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23407785594463348
    2. ':' → logprob: -2.7340779304504395
    3. '       ' → logprob: -3.2340779304504395
    4. ':
' → logprob: -3.3590779304504395
    5. ' for' → logprob: -3.3590779304504395
    6. 'for' → logprob: -3.6090779304504395
    7. '   ' → logprob: -6.8590779304504395
    8. '[' → logprob: -6.8590779304504395
    9. '               ' → logprob: -6.9840779304504395
    10. ',' → logprob: -7.6090779304504395

Token 1453: ' we' (ID: 581)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2344590723514557
    2. '       ' → logprob: -1.7344590425491333
    3. 'for' → logprob: -3.484459161758423
    4. ' for' → logprob: -6.859458923339844
    5. '   ' → logprob: -7.484458923339844
    6. '```' → logprob: -9.359458923339844
    7. '		' → logprob: -9.984458923339844
    8. '               ' → logprob: -10.109458923339844
    9. '	for' → logprob: -11.734458923339844
    10. '\t' → logprob: -11.984458923339844

Token 1454: ' need' (ID: 1309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6584040522575378
    2. '           ' → logprob: -1.0334041118621826
    3. ' for' → logprob: -2.6584041118621826
    4. '       ' → logprob: -3.0334041118621826
    5. '   ' → logprob: -5.7834038734436035
    6. 'should' → logprob: -6.6584038734436035
    7. '=' → logprob: -7.1584038734436035
    8. '```' → logprob: -7.4084038734436035
    9. 'continue' → logprob: -7.5334038734436035
    10. 'will' → logprob: -7.7834038734436035

Token 1455: ' un' (ID: 537)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004397478885948658
    2. ' for' → logprob: -6.004397392272949
    3. '           ' → logprob: -6.629397392272949
    4. '```' → logprob: -8.37939739227295
    5. '       ' → logprob: -8.62939739227295
    6. '   ' → logprob: -9.37939739227295
    7. 'd' → logprob: -9.87939739227295
    8. '               ' → logprob: -10.62939739227295
    9. 'to' → logprob: -11.75439739227295
    10. 'in' → logprob: -12.25439739227295

Token 1456: 'bounded' (ID: 135171)
  Prédit: 'bounded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bounded' → logprob: -0.0002680112374946475
    2. 'for' → logprob: -8.37526798248291
    3. '       ' → logprob: -11.37526798248291
    4. '   ' → logprob: -11.87526798248291
    5. 'd' → logprob: -12.25026798248291
    6. 'blocked' → logprob: -12.87526798248291
    7. '           ' → logprob: -13.00026798248291
    8. 'b' → logprob: -13.00026798248291
    9. '```' → logprob: -13.00026798248291
    10. 'bound' → logprob: -13.25026798248291

Token 1457: ' kn' (ID: 1313)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03821855038404465
    2. 'for' → logprob: -3.4132184982299805
    3. ' for' → logprob: -5.6632184982299805
    4. '       ' → logprob: -7.1632184982299805
    5. '   ' → logprob: -9.28821849822998
    6. '               ' → logprob: -9.53821849822998
    7. '```' → logprob: -10.53821849822998
    8. '          ' → logprob: -11.03821849822998
    9. '		' → logprob: -11.16321849822998
    10. '
' → logprob: -11.16321849822998

Token 1458: 'apsack' (ID: 178559)
  Prédit: 'apsack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -4.084206375409849e-05
    2. 'aps' → logprob: -10.125041007995605
    3. 'ap' → logprob: -15.250041007995605
    4. '```' → logprob: -15.750041007995605
    5. 'n' → logprob: -16.00004005432129
    6. 'own' → logprob: -17.12504005432129
    7. 'ock' → logprob: -17.25004005432129
    8. 'ack' → logprob: -17.25004005432129
    9. 'apped' → logprob: -18.00004005432129
    10. 'app' → logprob: -18.12504005432129

Token 1459: ' correctly' (ID: 20323)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06465060263872147
    2. ' for' → logprob: -3.314650535583496
    3. 'for' → logprob: -3.939650535583496
    4. '       ' → logprob: -5.564650535583496
    5. '   ' → logprob: -6.564650535583496
    6. '```' → logprob: -8.064650535583496
    7. '		' → logprob: -8.314650535583496
    8. ',' → logprob: -8.814650535583496
    9. '               ' → logprob: -9.189650535583496
    10. '
' → logprob: -9.314650535583496

Token 1460: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21347452700138092
    2. 'for' → logprob: -2.3384745121002197
    3. ' for' → logprob: -2.4634745121002197
    4. '   ' → logprob: -5.713474750518799
    5. '       ' → logprob: -5.713474750518799
    6. '```' → logprob: -6.838474750518799
    7. ':' → logprob: -7.588474750518799
    8. ':
' → logprob: -7.588474750518799
    9. ',' → logprob: -8.08847427368164
    10. '
' → logprob: -8.33847427368164

Token 1461: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10175525397062302
    2. ' for' → logprob: -2.476755142211914
    3. 'for' → logprob: -4.976755142211914
    4. '       ' → logprob: -5.851755142211914
    5. '```' → logprob: -7.226755142211914
    6. '   ' → logprob: -7.476755142211914
    7. '               ' → logprob: -7.976755142211914
    8. '[' → logprob: -8.726755142211914
    9. ',' → logprob: -8.976755142211914
    10. 'd' → logprob: -9.351755142211914

Token 1462: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07740309834480286
    2. 'for' → logprob: -3.5774030685424805
    3. '       ' → logprob: -3.9524030685424805
    4. ' for' → logprob: -4.4524030685424805
    5. '   ' → logprob: -4.8274030685424805
    6. '```' → logprob: -4.9524030685424805
    7. '               ' → logprob: -8.82740306854248
    8. '		' → logprob: -8.82740306854248
    9. ' ' → logprob: -9.32740306854248
    10. '	for' → logprob: -10.32740306854248

Token 1463: ' For' (ID: 2214)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9364619851112366
    2. 'for' → logprob: -1.4364619255065918
    3. '           ' → logprob: -1.4364619255065918
    4. '       ' → logprob: -2.061461925506592
    5. '   ' → logprob: -6.186461925506592
    6. '```' → logprob: -7.186461925506592
    7. '
' → logprob: -7.811461925506592
    8. 'd' → logprob: -7.811461925506592
    9. '	for' → logprob: -9.06146240234375
    10. ' d' → logprob: -9.43646240234375

Token 1464: ' un' (ID: 537)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.021125424653291702
    2. 'mp' → logprob: -4.771125316619873
    3. '_' → logprob: -5.021125316619873
    4. '_d' → logprob: -6.271125316619873
    5. 'range' → logprob: -7.146125316619873
    6. ' d' → logprob: -7.396125316619873
    7. '_mp' → logprob: -7.771125316619873
    8. 'repeat' → logprob: -8.146125793457031
    9. 'damage' → logprob: -8.271125793457031
    10. ' _' → logprob: -8.271125793457031

Token 1465: 'bounded' (ID: 135171)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9405989050865173
    2. 'for' → logprob: -1.190598964691162
    3. 'd' → logprob: -1.940598964691162
    4. 'bounded' → logprob: -1.940598964691162
    5. '           ' → logprob: -4.815598964691162
    6. '   ' → logprob: -5.065598964691162
    7. ' for' → logprob: -6.940598964691162
    8. '
' → logprob: -7.440598964691162
    9. '```' → logprob: -7.565598964691162
    10. '               ' → logprob: -7.940598964691162

Token 1466: ' kn' (ID: 1313)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4171487092971802
    2. 'd' → logprob: -1.6671487092971802
    3. '           ' → logprob: -2.4171485900878906
    4. '       ' → logprob: -3.2921485900878906
    5. ' for' → logprob: -3.9171485900878906
    6. '```' → logprob: -6.292148590087891
    7. ' in' → logprob: -7.042148590087891
    8. ' d' → logprob: -7.292148590087891
    9. '   ' → logprob: -7.292148590087891
    10. '               ' → logprob: -7.292148590087891

Token 1467: 'apsack' (ID: 178559)
  Prédit: 'apsack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -0.0010300694266334176
    2. 'for' → logprob: -7.251029968261719
    3. '```' → logprob: -9.626029968261719
    4. 'pack' → logprob: -10.001029968261719
    5. 'own' → logprob: -10.001029968261719
    6. 'n' → logprob: -10.751029968261719
    7. '
' → logprob: -10.876029968261719
    8. 'p' → logprob: -11.001029968261719
    9. 'ock' → logprob: -11.126029968261719
    10. 'ack' → logprob: -11.251029968261719

Token 1468: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07225357741117477
    2. 'for' → logprob: -3.572253465652466
    3. ' for' → logprob: -3.572253465652466
    4. '```' → logprob: -5.072253704071045
    5. '       ' → logprob: -5.322253704071045
    6. ',' → logprob: -7.197253704071045
    7. ':' → logprob: -7.697253704071045
    8. '   ' → logprob: -8.072253227233887
    9. ':
' → logprob: -8.447253227233887
    10. '               ' → logprob: -8.572253227233887

Token 1469: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004603741690516472
    2. ' for' → logprob: -6.754603862762451
    3. '       ' → logprob: -7.004603862762451
    4. '		' → logprob: -7.129603862762451
    5. '   ' → logprob: -7.504603862762451
    6. '```' → logprob: -7.629603862762451
    7. '	       ' → logprob: -8.504603385925293
    8. '               ' → logprob: -8.629603385925293
    9. 'for' → logprob: -8.754603385925293
    10. '                   ' → logprob: -11.004603385925293

Token 1470: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027251409366726875
    2. 'for' → logprob: -4.402251243591309
    3. '       ' → logprob: -4.527251243591309
    4. ' for' → logprob: -5.777251243591309
    5. '   ' → logprob: -7.902251243591309
    6. '               ' → logprob: -8.652251243591309
    7. '```' → logprob: -9.652251243591309
    8. ' ' → logprob: -10.027251243591309
    9. '         ' → logprob: -11.027251243591309
    10. '          ' → logprob: -11.402251243591309

Token 1471: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4248009920120239
    2. '           ' → logprob: -1.924800992012024
    3. ' for' → logprob: -2.1748008728027344
    4. '       ' → logprob: -2.6748008728027344
    5. '   ' → logprob: -4.674800872802734
    6. '```' → logprob: -5.674800872802734
    7. 'd' → logprob: -6.299800872802734
    8. '               ' → logprob: -6.424800872802734
    9. '                   ' → logprob: -7.924800872802734
    10. '	for' → logprob: -8.424800872802734

Token 1472: ' each' (ID: 2454)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05508742481470108
    2. ' d' → logprob: -2.9300873279571533
    3. '```' → logprob: -9.805087089538574
    4. '   ' → logprob: -9.930087089538574
    5. '`' → logprob: -10.680087089538574
    6. ' ' → logprob: -11.555087089538574
    7. '	d' → logprob: -11.680087089538574
    8. 'for' → logprob: -11.930087089538574
    9. 'repeat' → logprob: -12.180087089538574
    10. 'int' → logprob: -12.305087089538574

Token 1473: ' spell' (ID: 29176)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0345708429813385
    2. 'mp' → logprob: -3.6595709323883057
    3. ' d' → logprob: -5.659570693969727
    4. ' mp' → logprob: -5.909570693969727
    5. 'all' → logprob: -7.909570693969727
    6. 'damage' → logprob: -8.284570693969727
    7. '   ' → logprob: -8.409570693969727
    8. '_mp' → logprob: -8.659570693969727
    9. ' all' → logprob: -9.034570693969727
    10. 'sp' → logprob: -9.034570693969727

Token 1474: '
' (ID: 198)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8119757771492004
    2. 'in' → logprob: -1.6869757175445557
    3. '           ' → logprob: -1.6869757175445557
    4. 'for' → logprob: -2.4369757175445557
    5. 'd' → logprob: -3.0619757175445557
    6. ' for' → logprob: -3.5619757175445557
    7. ',' → logprob: -4.311975955963135
    8. '               ' → logprob: -6.186975955963135
    9. ':
' → logprob: -6.311975955963135
    10. '```' → logprob: -6.311975955963135

Token 1475: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01244407333433628
    2. ' for' → logprob: -5.387444019317627
    3. 'for' → logprob: -5.887444019317627
    4. ' in' → logprob: -6.387444019317627
    5. '       ' → logprob: -7.012444019317627
    6. ',' → logprob: -7.387444019317627
    7. '```' → logprob: -7.387444019317627
    8. ':
' → logprob: -7.762444019317627
    9. '   ' → logprob: -8.262444496154785
    10. ':' → logprob: -8.512444496154785

Token 1476: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.031861212104558945
    2. 'for' → logprob: -4.031861305236816
    3. ' for' → logprob: -4.531861305236816
    4. '       ' → logprob: -6.781861305236816
    5. '```' → logprob: -7.406861305236816
    6. ',' → logprob: -7.906861305236816
    7. '               ' → logprob: -8.031861305236816
    8. ':
' → logprob: -9.156861305236816
    9. '   ' → logprob: -9.531861305236816
    10. ':' → logprob: -9.656861305236816

Token 1477: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7294778227806091
    2. ' for' → logprob: -1.104477882385254
    3. 'for' → logprob: -1.854477882385254
    4. '       ' → logprob: -4.104477882385254
    5. '   ' → logprob: -4.729477882385254
    6. '	for' → logprob: -6.979477882385254
    7. '		' → logprob: -7.229477882385254
    8. '               ' → logprob: -7.479477882385254
    9. '```' → logprob: -7.729477882385254
    10. ' ' → logprob: -7.979477882385254

Token 1478: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.016079416498541832
    2. ' d' → logprob: -4.141079425811768
    3. '   ' → logprob: -10.76607894897461
    4. ' ' → logprob: -12.14107894897461
    5. 'amount' → logprob: -13.01607894897461
    6. '`' → logprob: -13.26607894897461
    7. 'range' → logprob: -13.26607894897461
    8. '```' → logprob: -13.26607894897461
    9. '	d' → logprob: -13.51607894897461
    10. '  ' → logprob: -13.51607894897461

Token 1479: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20144960284233093
    2. 'in' → logprob: -1.7014496326446533
    3. 'd' → logprob: -10.951449394226074
    4. '   ' → logprob: -11.951449394226074
    5. '=' → logprob: -12.576449394226074
    6. '	in' → logprob: -12.701449394226074
    7. '           ' → logprob: -13.826449394226074
    8. ' =' → logprob: -13.951449394226074
    9. '0' → logprob: -14.201449394226074
    10. ' ' → logprob: -14.576449394226074

Token 1480: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005545823951251805
    2. ' range' → logprob: -7.50055456161499
    3. '   ' → logprob: -14.000555038452148
    4. 'd' → logprob: -14.500555038452148
    5. '(range' → logprob: -16.50055503845215
    6. '	range' → logprob: -17.00055503845215
    7. ' ' → logprob: -17.75055503845215
    8. 'rang' → logprob: -20.37555503845215
    9. '  ' → logprob: -20.50055503845215
    10. '       ' → logprob: -20.62555503845215

Token 1481: '(d' (ID: 2572)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.03855983540415764
    2. '0' → logprob: -3.788559913635254
    3. 'mp' → logprob: -4.663559913635254
    4. '1' → logprob: -6.038559913635254
    5. '   ' → logprob: -6.288559913635254
    6. '       ' → logprob: -8.038559913635254
    7. '(d' → logprob: -8.038559913635254
    8. '           ' → logprob: -9.163559913635254
    9. ' dmg' → logprob: -9.288559913635254
    10. ' ' → logprob: -9.413559913635254

Token 1482: 'mg' (ID: 15026)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.741712212562561
    2. 'mp' → logprob: -1.366712212562561
    3. 'd' → logprob: -1.491712212562561
    4. 'mg' → logprob: -4.2417120933532715
    5. '       ' → logprob: -4.6167120933532715
    6. 'sp' → logprob: -4.7417120933532715
    7. '1' → logprob: -6.3667120933532715
    8. ' ' → logprob: -6.7417120933532715
    9. ' mp' → logprob: -6.8667120933532715
    10. '```' → logprob: -6.8667120933532715

Token 1483: ',max' (ID: 81466)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09204215556383133
    2. ',d' → logprob: -2.4670422077178955
    3. 'd' → logprob: -6.592041969299316
    4. ',max' → logprob: -7.467041969299316
    5. '):
' → logprob: -8.217041969299316
    6. ' ,' → logprob: -8.467041969299316
    7. '(d' → logprob: -8.717041969299316
    8. '   ' → logprob: -9.217041969299316
    9. '           ' → logprob: -9.342041969299316
    10. ',m' → logprob: -9.467041969299316

Token 1484: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.0005021584220230579
    2. '   ' → logprob: -7.750502109527588
    3. '+' → logprob: -11.375502586364746
    4. 'd' → logprob: -11.875502586364746
    5. 'P' → logprob: -12.000502586364746
    6. '(d' → logprob: -12.000502586364746
    7. ',' → logprob: -12.250502586364746
    8. '```' → logprob: -12.375502586364746
    9. 'Hp' → logprob: -12.500502586364746
    10. ' ' → logprob: -12.625502586364746

Token 1485: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0018329687882214785
    2. ' +' → logprob: -7.126832962036133
    3. '):
' → logprob: -8.126832962036133
    4. 'd' → logprob: -8.626832962036133
    5. ',' → logprob: -9.001832962036133
    6. '   ' → logprob: -9.251832962036133
    7. '       ' → logprob: -9.626832962036133
    8. '```' → logprob: -9.626832962036133
    9. '+d' → logprob: -10.001832962036133
    10. '           ' → logprob: -10.626832962036133

Token 1486: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.033962737768888474
    2. '+' → logprob: -3.4089627265930176
    3. 'max' → logprob: -8.783963203430176
    4. '=' → logprob: -10.033963203430176
    5. ' ' → logprob: -10.408963203430176
    6. 'd' → logprob: -10.408963203430176
    7. '   ' → logprob: -11.283963203430176
    8. ' +' → logprob: -11.408963203430176
    9. ')' → logprob: -12.283963203430176
    10. '```' → logprob: -12.283963203430176

Token 1487: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.41410118341445923
    2. '):
' → logprob: -1.5391011238098145
    3. ':' → logprob: -2.6641011238098145
    4. '           ' → logprob: -3.6641011238098145
    5. '               ' → logprob: -4.0391011238098145
    6. '       ' → logprob: -5.5391011238098145
    7. '):' → logprob: -6.0391011238098145
    8. '   ' → logprob: -6.1641011238098145
    9. '```' → logprob: -6.6641011238098145
    10. ',' → logprob: -7.9141011238098145

Token 1488: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09844470024108887
    2. '           ' → logprob: -2.848444700241089
    3. ' for' → logprob: -3.848444700241089
    4. 'for' → logprob: -4.973444938659668
    5. '   ' → logprob: -5.223444938659668
    6. '```' → logprob: -7.223444938659668
    7. '       ' → logprob: -7.848444938659668
    8. '	for' → logprob: -8.223444938659668
    9. ' ' → logprob: -8.348444938659668
    10. '		' → logprob: -8.973444938659668

Token 1489: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14567413926124573
    2. '           ' → logprob: -2.520674228668213
    3. ' for' → logprob: -3.395674228668213
    4. 'for' → logprob: -4.395674228668213
    5. '                   ' → logprob: -6.145674228668213
    6. ':
' → logprob: -6.895674228668213
    7. ':' → logprob: -7.145674228668213
    8. ',' → logprob: -7.645674228668213
    9. '	       ' → logprob: -7.645674228668213
    10. '   ' → logprob: -7.770674228668213

Token 1490: '     ' (ID: 530)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4179220497608185
    2. '           ' → logprob: -1.292922019958496
    3. ' for' → logprob: -3.667922019958496
    4. 'for' → logprob: -3.917922019958496
    5. '   ' → logprob: -4.792922019958496
    6. '                   ' → logprob: -5.667922019958496
    7. '```' → logprob: -5.667922019958496
    8. '       ' → logprob: -6.042922019958496
    9. '		' → logprob: -7.792922019958496
    10. 'd' → logprob: -7.792922019958496

Token 1491: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.040787141770124435
    2. 'd' → logprob: -4.415787220001221
    3. 'for' → logprob: -5.165787220001221
    4. '       ' → logprob: -5.415787220001221
    5. '                   ' → logprob: -5.540787220001221
    6. '           ' → logprob: -5.665787220001221
    7. 'if' → logprob: -6.165787220001221
    8. '               ' → logprob: -6.165787220001221
    9. '   ' → logprob: -6.415787220001221
    10. '```' → logprob: -6.540787220001221

Token 1492: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.00030721822986379266
    2. 'd' → logprob: -8.375307083129883
    3. '```' → logprob: -10.625307083129883
    4. '[' → logprob: -10.750307083129883
    5. '   ' → logprob: -11.500307083129883
    6. '       ' → logprob: -12.125307083129883
    7. ' =' → logprob: -13.000307083129883
    8. '=' → logprob: -13.125307083129883
    9. '                   ' → logprob: -13.250307083129883
    10. '``' → logprob: -13.250307083129883

Token 1493: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21705706417560577
    2. ' =' → logprob: -2.0920569896698
    3. ']' → logprob: -3.0920569896698
    4. '[d' → logprob: -4.217057228088379
    5. ']=' → logprob: -5.467057228088379
    6. 'd' → logprob: -6.717057228088379
    7. '=d' → logprob: -6.717057228088379
    8. '[' → logprob: -6.967057228088379
    9. '   ' → logprob: -7.217057228088379
    10. ']+=' → logprob: -7.717057228088379

Token 1494: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0046844263561069965
    2. ' =' → logprob: -5.3796844482421875
    3. '=
' → logprob: -10.629684448242188
    4. '=min' → logprob: -11.129684448242188
    5. '```' → logprob: -11.879684448242188
    6. '                   ' → logprob: -12.129684448242188
    7. '   ' → logprob: -12.379684448242188
    8. '           ' → logprob: -12.504684448242188
    9. '               ' → logprob: -12.629684448242188
    10. '       ' → logprob: -14.504684448242188

Token 1495: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0024763736873865128
    2. ' min' → logprob: -6.002476215362549
    3. '   ' → logprob: -14.377476692199707
    4. '	min' → logprob: -16.12747573852539
    5. '           ' → logprob: -17.62747573852539
    6. '               ' → logprob: -18.12747573852539
    7. '[min' → logprob: -18.25247573852539
    8. '(min' → logprob: -18.87747573852539
    9. '                   ' → logprob: -18.87747573852539
    10. '=min' → logprob: -19.50247573852539

Token 1496: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.4342102110385895
    2. 'dp' → logprob: -1.059210181236267
    3. '[' → logprob: -5.559210300445557
    4. 'min' → logprob: -7.809210300445557
    5. '	dp' → logprob: -8.059209823608398
    6. ' dp' → logprob: -8.184209823608398
    7. '[min' → logprob: -9.059209823608398
    8. '               ' → logprob: -9.309209823608398
    9. '(min' → logprob: -9.434209823608398
    10. '                   ' → logprob: -9.559209823608398

Token 1497: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.0001317871210630983
    2. '[' → logprob: -9.125131607055664
    3. '   ' → logprob: -11.875131607055664
    4. 'd' → logprob: -12.250131607055664
    5. '       ' → logprob: -13.000131607055664
    6. '```' → logprob: -13.125131607055664
    7. 'dp' → logprob: -13.500131607055664
    8. '``' → logprob: -13.500131607055664
    9. '(dp' → logprob: -13.625131607055664
    10. '[
' → logprob: -14.375131607055664

Token 1498: '],' (ID: 2155)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.0679863765835762
    2. ',' → logprob: -3.567986488342285
    3. '],' → logprob: -3.942986488342285
    4. ']' → logprob: -4.567986488342285
    5. ',d' → logprob: -5.192986488342285
    6. 'd' → logprob: -7.942986488342285
    7. '       ' → logprob: -8.317986488342285
    8. '           ' → logprob: -8.442986488342285
    9. '=' → logprob: -8.692986488342285
    10. ']=' → logprob: -8.817986488342285

Token 1499: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06198662146925926
    2. ' dp' → logprob: -2.8119866847991943
    3. '               ' → logprob: -12.436986923217773
    4. '	dp' → logprob: -12.436986923217773
    5. '           ' → logprob: -12.561986923217773
    6. '(dp' → logprob: -12.936986923217773
    7. '                   ' → logprob: -13.686986923217773
    8. '                ' → logprob: -13.811986923217773
    9. '   ' → logprob: -14.061986923217773
    10. '            ' → logprob: -15.061986923217773

Token 1500: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.0002700377081055194
    2. 'd' → logprob: -8.250269889831543
    3. '[' → logprob: -11.875269889831543
    4. '```' → logprob: -14.375269889831543
    5. '[
' → logprob: -15.125269889831543
    6. '   ' → logprob: -15.250269889831543
    7. '       ' → logprob: -16.12527084350586
    8. '           ' → logprob: -16.25027084350586
    9. '(d' → logprob: -16.25027084350586
    10. '                   ' → logprob: -16.62527084350586

Token 1501: '-d' (ID: 2469)
  Prédit: '-d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-d' → logprob: -0.1355563998222351
    2. '[d' → logprob: -2.13555645942688
    3. ' -' → logprob: -5.010556221008301
    4. '-' → logprob: -6.510556221008301
    5. 'd' → logprob: -8.1355562210083
    6. ']' → logprob: -9.7605562210083
    7. '[' → logprob: -9.8855562210083
    8. '```' → logprob: -12.0105562210083
    9. '[-' → logprob: -12.3855562210083
    10. '   ' → logprob: -12.6355562210083

Token 1502: 'mg' (ID: 15026)
  Prédit: 'mg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mg' → logprob: -2.47495681833243e-05
    2. 'm' → logprob: -11.000024795532227
    3. ' mg' → logprob: -13.625024795532227
    4. ']' → logprob: -13.750024795532227
    5. 'mage' → logprob: -13.750024795532227
    6. '   ' → logprob: -13.875024795532227
    7. 'mgr' → logprob: -14.750024795532227
    8. 'м' → logprob: -15.000024795532227
    9. '
' → logprob: -15.125024795532227
    10. 'd' → logprob: -15.375024795532227

Token 1503: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07967959344387054
    2. ']+' → logprob: -2.579679489135742
    3. '])' → logprob: -7.454679489135742
    4. '-' → logprob: -9.329679489135742
    5. ']-' → logprob: -10.329679489135742
    6. '])
' → logprob: -10.579679489135742
    7. ' -' → logprob: -10.829679489135742
    8. '-d' → logprob: -11.454679489135742
    9. '```' → logprob: -11.454679489135742
    10. ']
' → logprob: -12.329679489135742

Token 1504: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2840377986431122
    2. '+' → logprob: -1.4090378284454346
    3. ']' → logprob: -6.1590375900268555
    4. ']+' → logprob: -7.7840375900268555
    5. '```' → logprob: -8.659037590026855
    6. ')' → logprob: -9.534037590026855
    7. '-' → logprob: -10.409037590026855
    8. ')+' → logprob: -10.909037590026855
    9. ' -' → logprob: -11.534037590026855
    10. '``' → logprob: -11.909037590026855

Token 1505: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.04858827963471413
    2. ' mp' → logprob: -3.048588275909424
    3. '	mp' → logprob: -15.173588752746582
    4. '(mp' → logprob: -15.423588752746582
    5. '   ' → logprob: -15.548588752746582
    6. 'MP' → logprob: -16.173587799072266
    7. '           ' → logprob: -16.423587799072266
    8. '    ' → logprob: -16.798587799072266
    9. '_mp' → logprob: -17.673587799072266
    10. 'pm' → logprob: -18.048587799072266

Token 1506: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16872823238372803
    2. '               ' → logprob: -2.9187283515930176
    3. '       ' → logprob: -3.2937283515930176
    4. '
' → logprob: -4.543728351593018
    5. ':' → logprob: -4.793728351593018
    6. '<|end|>' → logprob: -4.793728351593018
    7. '<|end|>' → logprob: -5.043728351593018
    8. 'for' → logprob: -5.293728351593018
    9. '                   ' → logprob: -5.418728351593018
    10. '```' → logprob: -5.543728351593018

Token 1507: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2326798439025879
    2. '       ' → logprob: -2.107679843902588
    3. '<|end|>' → logprob: -3.232679843902588
    4. ' for' → logprob: -4.107679843902588
    5. 'for' → logprob: -4.482679843902588
    6. '
' → logprob: -5.107679843902588
    7. '<|end|>' → logprob: -5.482679843902588
    8. '   ' → logprob: -5.732679843902588
    9. ')' → logprob: -7.357679843902588
    10. ',' → logprob: -7.732679843902588

Token 1508: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5202848315238953
    2. '           ' → logprob: -1.14528489112854
    3. '   ' → logprob: -3.77028489112854
    4. '```' → logprob: -3.77028489112854
    5. ' for' → logprob: -4.145284652709961
    6. '<|end|>' → logprob: -4.895284652709961
    7. ')' → logprob: -5.270284652709961
    8. 'for' → logprob: -6.020284652709961
    9. '[' → logprob: -6.270284652709961
    10. '        ' → logprob: -6.770284652709961

Token 1509: ' We' (ID: 1416)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16148358583450317
    2. ' for' → logprob: -2.7864835262298584
    3. '       ' → logprob: -3.0364835262298584
    4. 'for' → logprob: -3.6614835262298584
    5. '   ' → logprob: -4.5364837646484375
    6. '```' → logprob: -7.2864837646484375
    7. ' ' → logprob: -7.5364837646484375
    8. '<|end|>' → logprob: -8.161483764648438
    9. '
' → logprob: -8.286483764648438
    10. '               ' → logprob: -9.036483764648438

Token 1510: ' must' (ID: 2804)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6282455325126648
    2. 'for' → logprob: -1.2532455921173096
    3. '       ' → logprob: -2.7532455921173096
    4. ' for' → logprob: -2.8782455921173096
    5. ' =' → logprob: -3.5032455921173096
    6. '   ' → logprob: -4.6282453536987305
    7. 'continue' → logprob: -4.8782453536987305
    8. '           ' → logprob: -5.3782453536987305
    9. '```' → logprob: -5.3782453536987305
    10. '=
' → logprob: -7.2532453536987305

Token 1511: ' do' (ID: 621)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15705758333206177
    2. 'repeat' → logprob: -2.157057523727417
    3. ' for' → logprob: -5.157057762145996
    4. '       ' → logprob: -5.157057762145996
    5. 'continue' → logprob: -5.407057762145996
    6. 'use' → logprob: -5.782057762145996
    7. '           ' → logprob: -6.157057762145996
    8. 'run' → logprob: -6.282057762145996
    9. 'implement' → logprob: -6.782057762145996
    10. 'process' → logprob: -6.907057762145996

Token 1512: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03709299489855766
    2. '           ' → logprob: -3.537092924118042
    3. 'd' → logprob: -5.787093162536621
    4. ' for' → logprob: -5.787093162536621
    5. '       ' → logprob: -7.787093162536621
    6. '```' → logprob: -7.787093162536621
    7. 'dp' → logprob: -9.412093162536621
    8. '   ' → logprob: -9.412093162536621
    9. '               ' → logprob: -9.537093162536621
    10. '``' → logprob: -10.412093162536621

Token 1513: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005303130950778723
    2. 'range' → logprob: -6.755302906036377
    3. '_d' → logprob: -6.880302906036377
    4. 'mp' → logprob: -6.880302906036377
    5. '_' → logprob: -7.380302906036377
    6. '   ' → logprob: -8.255303382873535
    7. ' d' → logprob: -8.630303382873535
    8. 'dp' → logprob: -9.005303382873535
    9. '_mp' → logprob: -9.005303382873535
    10. '_range' → logprob: -9.130303382873535

Token 1514: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.008648606948554516
    2. ' in' → logprob: -4.75864839553833
    3. 'from' → logprob: -11.508648872375488
    4. '=' → logprob: -12.008648872375488
    5. '
' → logprob: -12.008648872375488
    6. 'd' → logprob: -12.383648872375488
    7. '[d' → logprob: -13.008648872375488
    8. '[in' → logprob: -14.008648872375488
    9. 'range' → logprob: -14.133648872375488
    10. '(d' → logprob: -14.508648872375488

Token 1515: ' dmg' (ID: 168827)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003642238210886717
    2. ' range' → logprob: -5.6286420822143555
    3. 'd' → logprob: -10.503642082214355
    4. '   ' → logprob: -11.253642082214355
    5. '(range' → logprob: -14.128642082214355
    6. '	range' → logprob: -15.128642082214355
    7. '       ' → logprob: -15.878642082214355
    8. ' ' → logprob: -16.003643035888672
    9. '```' → logprob: -16.503643035888672
    10. '0' → logprob: -16.753643035888672

Token 1516: '..' (ID: 485)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1517: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07303132861852646
    2. 'd' → logprob: -2.698031425476074
    3. '1' → logprob: -6.948031425476074
    4. '0' → logprob: -7.323031425476074
    5. '   ' → logprob: -7.323031425476074
    6. 'range' → logprob: -8.198031425476074
    7. 'dp' → logprob: -8.823031425476074
    8. '(max' → logprob: -9.448031425476074
    9. '```' → logprob: -9.573031425476074
    10. '[max' → logprob: -10.073031425476074

Token 1518: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.0046063498593866825
    2. '   ' → logprob: -6.004606246948242
    3. 'd' → logprob: -6.754606246948242
    4. '       ' → logprob: -8.504606246948242
    5. 'range' → logprob: -8.879606246948242
    6. '_hp' → logprob: -9.004606246948242
    7. '_HP' → logprob: -9.379606246948242
    8. '(d' → logprob: -9.754606246948242
    9. '_d' → logprob: -10.129606246948242
    10. '+' → logprob: -10.254606246948242

Token 1519: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8458037376403809
    2. ':
' → logprob: -1.5958037376403809
    3. '       ' → logprob: -1.9708037376403809
    4. ':' → logprob: -2.720803737640381
    5. ' for' → logprob: -2.970803737640381
    6. 'for' → logprob: -3.470803737640381
    7. '   ' → logprob: -3.845803737640381
    8. '[' → logprob: -4.220803737640381
    9. '
' → logprob: -4.595803737640381
    10. '```' → logprob: -4.595803737640381

Token 1520: ' each' (ID: 2454)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06514116376638412
    2. 'd' → logprob: -3.190141201019287
    3. ' range' → logprob: -4.065141201019287
    4. 'dp' → logprob: -5.440141201019287
    5. 'mp' → logprob: -8.940140724182129
    6. '   ' → logprob: -9.565140724182129
    7. '       ' → logprob: -9.815140724182129
    8. 'for' → logprob: -10.565140724182129
    9. '(range' → logprob: -10.565140724182129
    10. 'in' → logprob: -11.065140724182129

Token 1521: ' spell' (ID: 29176)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07135690748691559
    2. 'for' → logprob: -3.571357011795044
    3. ' for' → logprob: -3.696357011795044
    4. '       ' → logprob: -4.321356773376465
    5. '   ' → logprob: -7.321356773376465
    6. 'd' → logprob: -7.696356773376465
    7. '```' → logprob: -8.071356773376465
    8. '		' → logprob: -8.821356773376465
    9. '
' → logprob: -8.821356773376465
    10. '               ' → logprob: -8.946356773376465

Token 1522: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13096916675567627
    2. '       ' → logprob: -2.2559690475463867
    3. ' for' → logprob: -4.755969047546387
    4. 'for' → logprob: -5.255969047546387
    5. '   ' → logprob: -6.380969047546387
    6. '		' → logprob: -7.630969047546387
    7. '[' → logprob: -8.255969047546387
    8. ',' → logprob: -8.380969047546387
    9. '
' → logprob: -8.380969047546387
    10. '<|end|>' → logprob: -9.130969047546387

Token 1523: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03482934832572937
    2. ' for' → logprob: -4.034829139709473
    3. '       ' → logprob: -4.659829139709473
    4. 'for' → logprob: -6.159829139709473
    5. '   ' → logprob: -6.534829139709473
    6. '```' → logprob: -6.659829139709473
    7. '		' → logprob: -7.159829139709473
    8. '
' → logprob: -7.909829139709473
    9. '<|end|>' → logprob: -8.659829139709473
    10. '[' → logprob: -9.034829139709473

Token 1524: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5773778557777405
    2. '           ' → logprob: -0.9523778557777405
    3. ' for' → logprob: -3.5773777961730957
    4. 'for' → logprob: -4.452377796173096
    5. '```' → logprob: -4.577377796173096
    6. '
' → logprob: -6.702377796173096
    7. '   ' → logprob: -7.202377796173096
    8. ',' → logprob: -8.702378273010254
    9. ' ' → logprob: -9.202378273010254
    10. '[' → logprob: -9.202378273010254

Token 1525: ' Re' (ID: 907)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0571117177605629
    2. '           ' → logprob: -2.9321117401123047
    3. ' for' → logprob: -7.182111740112305
    4. 'for' → logprob: -7.182111740112305
    5. '   ' → logprob: -7.682111740112305
    6. '```' → logprob: -9.807111740112305
    7. '[' → logprob: -10.182111740112305
    8. '	' → logprob: -10.557111740112305
    9. ' ' → logprob: -11.307111740112305
    10. '
' → logprob: -11.307111740112305

Token 1526: '-' (ID: 12)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4742664098739624
    2. 'dp' → logprob: -1.3492664098739624
    3. '       ' → logprob: -2.224266529083252
    4. 'write' → logprob: -5.599266529083252
    5. 'peat' → logprob: -5.599266529083252
    6. 'set' → logprob: -7.224266529083252
    7. 'place' → logprob: -7.849266529083252
    8. '```' → logprob: -8.849266052246094
    9. 'move' → logprob: -8.974266052246094
    10. ' for' → logprob: -8.974266052246094

Token 1527: 'implement' (ID: 105849)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6416624188423157
    2. 'for' → logprob: -0.7666624188423157
    3. 'set' → logprob: -5.39166259765625
    4. 'write' → logprob: -5.64166259765625
    5. 'do' → logprob: -8.01666259765625
    6. '       ' → logprob: -8.76666259765625
    7. 'initialize' → logprob: -9.39166259765625
    8. 'done' → logprob: -10.01666259765625
    9. '```' → logprob: -10.01666259765625
    10. 'import' → logprob: -10.26666259765625

Token 1528: ' un' (ID: 537)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004991574212908745
    2. '           ' → logprob: -6.12999153137207
    3. 'for' → logprob: -6.12999153137207
    4. ' for' → logprob: -8.12999153137207
    5. '   ' → logprob: -8.37999153137207
    6. '```' → logprob: -9.62999153137207
    7. '
' → logprob: -11.12999153137207
    8. '	' → logprob: -12.00499153137207
    9. ',' → logprob: -13.00499153137207
    10. 'import' → logprob: -13.12999153137207

Token 1529: 'bounded' (ID: 135171)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02048477716743946
    2. 'dp' → logprob: -4.020484924316406
    3. '       ' → logprob: -6.895484924316406
    4. '```' → logprob: -7.520484924316406
    5. '
' → logprob: -7.770484924316406
    6. 'range' → logprob: -8.895484924316406
    7. ' for' → logprob: -8.895484924316406
    8. '           ' → logprob: -11.145484924316406
    9. '   ' → logprob: -11.395484924316406
    10. '=' → logprob: -11.770484924316406

Token 1530: ' kn' (ID: 1313)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44751858711242676
    2. 'for' → logprob: -1.0725185871124268
    3. ' for' → logprob: -4.822518348693848
    4. '           ' → logprob: -6.197518348693848
    5. '   ' → logprob: -6.197518348693848
    6. '```' → logprob: -6.197518348693848
    7. 'sp' → logprob: -7.197518348693848
    8. 'dp' → logprob: -7.197518348693848
    9. '
' → logprob: -7.322518348693848
    10. 'kn' → logprob: -7.822518348693848

Token 1531: 'apsack' (ID: 178559)
  Prédit: 'apsack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -1.0759913921356201
    2. '
' → logprob: -1.3259913921356201
    3. 'bounded' → logprob: -2.57599139213562
    4. 'dp' → logprob: -2.70099139213562
    5. 'for' → logprob: -2.70099139213562
    6. 'ack' → logprob: -2.82599139213562
    7. '```' → logprob: -2.95099139213562
    8. 'p' → logprob: -3.95099139213562
    9. 'own' → logprob: -4.700991630554199
    10. '_dp' → logprob: -5.075991630554199

Token 1532: ' properly' (ID: 13425)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006120402365922928
    2. ' for' → logprob: -6.131120204925537
    3. '   ' → logprob: -6.506120204925537
    4. 'for' → logprob: -6.631120204925537
    5. '
' → logprob: -7.131120204925537
    6. '```' → logprob: -8.881120681762695
    7. '           ' → logprob: -9.131120681762695
    8. '	for' → logprob: -11.131120681762695
    9. '	' → logprob: -11.381120681762695
    10. ',' → logprob: -11.381120681762695

Token 1533: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01851312629878521
    2. 'for' → logprob: -4.768513202667236
    3. '           ' → logprob: -5.393513202667236
    4. ' for' → logprob: -5.518513202667236
    5. '   ' → logprob: -6.893513202667236
    6. '
' → logprob: -9.518512725830078
    7. ',' → logprob: -9.643512725830078
    8. '```' → logprob: -10.268512725830078
    9. '        
' → logprob: -11.018512725830078
    10. '<|end|>' → logprob: -11.143512725830078

Token 1534: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003722049528732896
    2. 'for' → logprob: -6.503722190856934
    3. ' for' → logprob: -6.753722190856934
    4. '```' → logprob: -7.628722190856934
    5. '   ' → logprob: -7.878722190856934
    6. '           ' → logprob: -8.753722190856934
    7. '
' → logprob: -11.878722190856934
    8. '<|end|>' → logprob: -12.253722190856934
    9. '        
' → logprob: -12.878722190856934
    10. ' ' → logprob: -13.128722190856934

Token 1535: ' dp' (ID: 21546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010360694490373135
    2. '   ' → logprob: -5.1353607177734375
    3. 'for' → logprob: -5.5103607177734375
    4. '```' → logprob: -8.510360717773438
    5. ' for' → logprob: -9.510360717773438
    6. '	' → logprob: -9.885360717773438
    7. '	for' → logprob: -10.635360717773438
    8. '           ' → logprob: -10.885360717773438
    9. '	   ' → logprob: -13.135360717773438
    10. ' ' → logprob: -13.385360717773438

Token 1536: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07180145382881165
    2. '=' → logprob: -2.6968014240264893
    3. '=[' → logprob: -6.446801662445068
    4. '[' → logprob: -8.94680118560791
    5. ' =[' → logprob: -10.07180118560791
    6. '```' → logprob: -10.19680118560791
    7. 'for' → logprob: -10.82180118560791
    8. '   ' → logprob: -11.69680118560791
    9. ' for' → logprob: -12.07180118560791
    10. '=[
' → logprob: -12.07180118560791

Token 1537: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00034237600630149245
    2. ' [' → logprob: -8.00034236907959
    3. '   ' → logprob: -12.00034236907959
    4. ' ' → logprob: -14.62534236907959
    5. '[MAX' → logprob: -16.375343322753906
    6. '       ' → logprob: -16.625343322753906
    7. 'INF' → logprob: -17.000343322753906
    8. '    ' → logprob: -17.750343322753906
    9. '[I' → logprob: -18.125343322753906
    10. '     ' → logprob: -18.125343322753906

Token 1538: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.050281211733818054
    2. '10' → logprob: -3.050281286239624
    3. '[' → logprob: -6.675281047821045
    4. '0' → logprob: -8.300281524658203
    5. 'inf' → logprob: -9.800281524658203
    6. 'IN' → logprob: -10.300281524658203
    7. ' INF' → logprob: -11.050281524658203
    8. 'float' → logprob: -11.175281524658203
    9. '(' → logprob: -11.175281524658203
    10. 'import' → logprob: -11.300281524658203

Token 1539: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5437616109848022
    2. ']*(' → logprob: -1.5437616109848022
    3. '[' → logprob: -1.9187616109848022
    4. 'for' → logprob: -4.043761730194092
    5. ']*' → logprob: -4.168761730194092
    6. ']+' → logprob: -4.793761730194092
    7. '*(' → logprob: -5.043761730194092
    8. ' for' → logprob: -5.668761730194092
    9. '[:]' → logprob: -6.793761730194092
    10. '```' → logprob: -7.043761730194092

Token 1540: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.3856492842023727e-06
    2. '(max' → logprob: -13.750000953674316
    3. ' max' → logprob: -15.375000953674316
    4. '[max' → logprob: -17.750001907348633
    5. '   ' → logprob: -19.875001907348633
    6. '       ' → logprob: -21.625001907348633
    7. '
' → logprob: -22.125001907348633
    8. '=max' → logprob: -22.250001907348633
    9. '           ' → logprob: -22.500001907348633
    10. ',max' → logprob: -22.750001907348633

Token 1541: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -2.6537622034084052e-05
    2. '100' → logprob: -11.25002670288086
    3. '0' → logprob: -11.37502670288086
    4. '+' → logprob: -14.87502670288086
    5. '   ' → logprob: -14.87502670288086
    6. '(' → logprob: -15.62502670288086
    7. ' HP' → logprob: -15.62502670288086
    8. '
' → logprob: -15.75002670288086
    9. 'max' → logprob: -15.87502670288086
    10. '1' → logprob: -15.87502670288086

Token 1542: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1875571544806007e-05
    2. ' +' → logprob: -11.375011444091797
    3. '+
' → logprob: -15.125011444091797
    4. '
' → logprob: -17.625011444091797
    5. ']+' → logprob: -17.750011444091797
    6. '```' → logprob: -18.750011444091797
    7. ')+' → logprob: -18.875011444091797
    8. '＋' → logprob: -19.125011444091797
    9. '()+' → logprob: -19.500011444091797
    10. '1' → logprob: -21.000011444091797

Token 1543: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. '+' → logprob: -11.125015258789062
    3. ' ' → logprob: -16.250015258789062
    4. '100' → logprob: -19.000015258789062
    5. '   ' → logprob: -19.250015258789062
    6. ' +' → logprob: -19.375015258789062
    7. '
' → logprob: -19.375015258789062
    8. '```' → logprob: -19.500015258789062
    9. '0' → logprob: -20.000015258789062
    10. '(' → logprob: -20.125015258789062

Token 1544: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.003755782498046756
    2. ')' → logprob: -5.628755569458008
    3. '       ' → logprob: -9.503755569458008
    4. '   ' → logprob: -10.503755569458008
    5. 'for' → logprob: -10.753755569458008
    6. ')
' → logprob: -11.128755569458008
    7. ']
' → logprob: -12.003755569458008
    8. '
' → logprob: -12.378755569458008
    9. '```' → logprob: -12.753755569458008
    10. ')

' → logprob: -14.128755569458008

Token 1545: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00010759611177491024
    2. '   ' → logprob: -10.125107765197754
    3. '       ' → logprob: -10.250107765197754
    4. '```' → logprob: -11.000107765197754
    5. '	dp' → logprob: -11.625107765197754
    6. ' dp' → logprob: -12.125107765197754
    7. '[' → logprob: -14.375107765197754
    8. 'for' → logprob: -15.875107765197754
    9. '	' → logprob: -16.125106811523438
    10. '`' → logprob: -16.500106811523438

Token 1546: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -5.919942486798391e-05
    2. '0' → logprob: -9.750059127807617
    3. ' dp' → logprob: -14.500059127807617
    4. '```' → logprob: -15.375059127807617
    5. '   ' → logprob: -16.500059127807617
    6. '       ' → logprob: -18.000059127807617
    7. '`' → logprob: -18.375059127807617
    8. '	dp' → logprob: -18.625059127807617
    9. '[' → logprob: -18.750059127807617
    10. '
' → logprob: -20.000059127807617

Token 1547: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008712430484592915
    2. '=' → logprob: -4.758712291717529
    3. ' =' → logprob: -10.383712768554688
    4. '[
' → logprob: -10.383712768554688
    5. '=[' → logprob: -10.883712768554688
    6. '0' → logprob: -11.758712768554688
    7. '```' → logprob: -12.133712768554688
    8. '][' → logprob: -14.258712768554688
    9. ' [' → logprob: -14.383712768554688
    10. '=
' → logprob: -14.383712768554688

Token 1548: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. '=' → logprob: -14.125000953674316
    3. ' ' → logprob: -15.750000953674316
    4. '```' → logprob: -16.625001907348633
    5. '[' → logprob: -18.750001907348633
    6. '   ' → logprob: -19.250001907348633
    7. '+' → logprob: -19.500001907348633
    8. '``' → logprob: -20.375001907348633
    9. '`' → logprob: -20.500001907348633
    10. '-' → logprob: -20.625001907348633

Token 1549: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1854410022497177
    2. ' =' → logprob: -1.810441017150879
    3. ']' → logprob: -5.310441017150879
    4. ')' → logprob: -7.810441017150879
    5. ']=' → logprob: -8.185441017150879
    6. '=
' → logprob: -11.310441017150879
    7. ' =)' → logprob: -11.560441017150879
    8. ')=' → logprob: -12.310441017150879
    9. '```' → logprob: -12.310441017150879
    10. '   ' → logprob: -12.435441017150879

Token 1550: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00043102685594931245
    2. ' =' → logprob: -7.750431060791016
    3. '=
' → logprob: -15.500431060791016
    4. '=True' → logprob: -16.875431060791016
    5. ']=' → logprob: -17.000431060791016
    6. '=}' → logprob: -18.000431060791016
    7. ')' → logprob: -18.625431060791016
    8. ')=' → logprob: -18.875431060791016
    9. '```' → logprob: -18.875431060791016
    10. '<|end|>' → logprob: -18.875431060791016

Token 1551: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -20.625001907348633
    4. '=' → logprob: -21.125001907348633
    5. '۰' → logprob: -21.500001907348633
    6. '000' → logprob: -22.875001907348633
    7. '[' → logprob: -23.000001907348633
    8. '  ' → logprob: -23.375001907348633
    9. '```' → logprob: -23.625001907348633
    10. '00' → logprob: -23.625001907348633

Token 1552: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '=' → logprob: -18.875001907348633
    4. '```' → logprob: -19.375001907348633
    5. '   ' → logprob: -19.625001907348633
    6. '۰' → logprob: -20.125001907348633
    7. '000' → logprob: -20.500001907348633
    8. '00' → logprob: -21.500001907348633
    9. '[' → logprob: -21.562501907348633
    10. '1' → logprob: -21.937501907348633

Token 1553: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12347786128520966
    2. 'for' → logprob: -2.2484779357910156
    3. ' for' → logprob: -4.748477935791016
    4. '   ' → logprob: -6.498477935791016
    5. '```' → logprob: -8.498477935791016
    6. '
' → logprob: -9.248477935791016
    7. '	for' → logprob: -9.248477935791016
    8. '           ' → logprob: -11.998477935791016
    9. '        
' → logprob: -12.123477935791016
    10. '	' → logprob: -12.123477935791016

Token 1554: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03008437529206276
    2. 'for' → logprob: -3.5300843715667725
    3. '   ' → logprob: -8.530084609985352
    4. ' for' → logprob: -9.155084609985352
    5. '```' → logprob: -10.905084609985352
    6. '	for' → logprob: -11.905084609985352
    7. '           ' → logprob: -12.655084609985352
    8. '	' → logprob: -13.155084609985352
    9. '	   ' → logprob: -16.53008460998535
    10. 'import' → logprob: -17.03008460998535

Token 1555: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1604679375886917
    2. '       ' → logprob: -1.9104679822921753
    3. '```' → logprob: -9.035468101501465
    4. ' for' → logprob: -9.410468101501465
    5. '   ' → logprob: -10.160468101501465
    6. '           ' → logprob: -12.910468101501465
    7. '	for' → logprob: -13.785468101501465
    8. 'from' → logprob: -15.410468101501465
    9. '``' → logprob: -15.410468101501465
    10. 'import' → logprob: -15.660468101501465

Token 1556: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.02679099515080452
    2. ' mp' → logprob: -3.6517910957336426
    3. '(mp' → logprob: -8.276790618896484
    4. 'd' → logprob: -10.026790618896484
    5. 'sp' → logprob: -10.026790618896484
    6. '   ' → logprob: -10.526790618896484
    7. '_mp' → logprob: -10.526790618896484
    8. 'i' → logprob: -10.651790618896484
    9. 's' → logprob: -10.776790618896484
    10. 'all' → logprob: -11.026790618896484

Token 1557: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005294834729284048
    2. ' ,' → logprob: -5.2552947998046875
    3. ' in' → logprob: -11.255294799804688
    4. '_,' → logprob: -11.380294799804688
    5. ',s' → logprob: -11.505294799804688
    6. 'in' → logprob: -12.380294799804688
    7. ',j' → logprob: -13.255294799804688
    8. ',
' → logprob: -13.380294799804688
    9. 's' → logprob: -13.505294799804688
    10. '   ' → logprob: -13.630294799804688

Token 1558: ' _,' (ID: 18042)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.03377744182944298
    2. ' _,' → logprob: -3.4087774753570557
    3. ',' → logprob: -9.658777236938477
    4. '0' → logprob: -10.908777236938477
    5. '_' → logprob: -11.533777236938477
    6. 'd' → logprob: -11.533777236938477
    7. '__,' → logprob: -11.658777236938477
    8. ' ,' → logprob: -11.908777236938477
    9. 'target' → logprob: -12.283777236938477
    10. ' ' → logprob: -13.033777236938477

Token 1559: ' dmg' (ID: 168827)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2113979209971149e-05
    2. ' dmg' → logprob: -11.375012397766113
    3. '   ' → logprob: -15.375012397766113
    4. 'damage' → logprob: -16.250011444091797
    5. '       ' → logprob: -16.625011444091797
    6. ' ' → logprob: -17.250011444091797
    7. '\d' → logprob: -17.375011444091797
    8. '     ' → logprob: -17.500011444091797
    9. '
' → logprob: -18.125011444091797
    10. 'dam' → logprob: -18.375011444091797

Token 1560: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012546735815703869
    2. 'in' → logprob: -4.387546539306641
    3. ':' → logprob: -10.63754653930664
    4. ':
' → logprob: -12.38754653930664
    5. '   ' → logprob: -12.76254653930664
    6. ',' → logprob: -13.01254653930664
    7. '```' → logprob: -13.38754653930664
    8. 'd' → logprob: -14.26254653930664
    9. '	in' → logprob: -15.51254653930664
    10. '       ' → logprob: -15.76254653930664

Token 1561: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -5.455048449221067e-05
    2. ' all' → logprob: -9.875054359436035
    3. '   ' → logprob: -13.125054359436035
    4. '[' → logprob: -14.625054359436035
    5. '       ' → logprob: -15.875054359436035
    6. 's' → logprob: -16.50005531311035
    7. '	all' → logprob: -16.75005531311035
    8. ' ' → logprob: -17.00005531311035
    9. '
' → logprob: -17.00005531311035
    10. '           ' → logprob: -17.12505531311035

Token 1562: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.04891923815011978
    2. 'sp' → logprob: -3.048919200897217
    3. 'all' → logprob: -8.798919677734375
    4. 'range' → logprob: -9.048919677734375
    5. 'for' → logprob: -10.548919677734375
    6. '_s' → logprob: -11.173919677734375
    7. '_all' → logprob: -11.423919677734375
    8. '```' → logprob: -11.923919677734375
    9. 'spell' → logprob: -13.673919677734375
    10. '[' → logprob: -14.423919677734375

Token 1563: 'ells' (ID: 9703)
  Prédit: 'ells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ells' → logprob: -0.0010463856160640717
    2. 'p' → logprob: -7.126046180725098
    3. '```' → logprob: -8.876046180725098
    4. 'ell' → logprob: -10.751046180725098
    5. '[
' → logprob: -11.251046180725098
    6. ' spells' → logprob: -11.876046180725098
    7. 'els' → logprob: -12.126046180725098
    8. '[' → logprob: -12.501046180725098
    9. '{
' → logprob: -12.501046180725098
    10. '``' → logprob: -12.501046180725098

Token 1564: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04008958861231804
    2. ':
' → logprob: -3.2900896072387695
    3. '   ' → logprob: -7.0400896072387695
    4. '       ' → logprob: -7.4150896072387695
    5. '           ' → logprob: -7.5400896072387695
    6. ' for' → logprob: -11.79008960723877
    7. '):
' → logprob: -12.04008960723877
    8. 'for' → logprob: -12.16508960723877
    9. '):' → logprob: -12.29008960723877
    10. '```' → logprob: -12.79008960723877

Token 1565: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.147902712225914
    2. '       ' → logprob: -2.397902727127075
    3. '	for' → logprob: -3.522902727127075
    4. '           ' → logprob: -4.522902488708496
    5. '```' → logprob: -5.772902488708496
    6. ' for' → logprob: -5.897902488708496
    7. '	       ' → logprob: -8.897902488708496
    8. '	   ' → logprob: -9.772902488708496
    9. '		' → logprob: -10.147902488708496
    10. '	' → logprob: -10.147902488708496

Token 1566: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02441510744392872
    2. '       ' → logprob: -4.524415016174316
    3. ' for' → logprob: -5.024415016174316
    4. '   ' → logprob: -5.149415016174316
    5. '           ' → logprob: -7.024415016174316
    6. '```' → logprob: -12.524415016174316
    7. 'd' → logprob: -12.774415016174316
    8. ' ' → logprob: -13.274415016174316
    9. '	for' → logprob: -14.024415016174316
    10. '  ' → logprob: -14.649415016174316

Token 1567: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0005537479883059859
    2. ' d' → logprob: -7.500553607940674
    3. '   ' → logprob: -14.625554084777832
    4. 'damage' → logprob: -15.875554084777832
    5. ' ' → logprob: -16.375553131103516
    6. 'range' → logprob: -17.750553131103516
    7. '	d' → logprob: -18.375553131103516
    8. 'D' → logprob: -18.750553131103516
    9. ' dmg' → logprob: -19.000553131103516
    10. '  ' → logprob: -19.125553131103516

Token 1568: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030545348301529884
    2. 'in' → logprob: -3.530545234680176
    3. 'd' → logprob: -7.155545234680176
    4. ',d' → logprob: -13.280545234680176
    5. '	in' → logprob: -13.280545234680176
    6. '   ' → logprob: -13.405545234680176
    7. 'range' → logprob: -13.905545234680176
    8. '[d' → logprob: -14.030545234680176
    9. '=' → logprob: -14.155545234680176
    10. 'import' → logprob: -14.280545234680176

Token 1569: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10281418263912201
    2. 'd' → logprob: -2.352814197540283
    3. ' range' → logprob: -5.977814197540283
    4. '   ' → logprob: -10.477813720703125
    5. ' dmg' → logprob: -11.102813720703125
    6. 'r' → logprob: -11.602813720703125
    7. ' ' → logprob: -12.727813720703125
    8. 'dm' → logprob: -12.727813720703125
    9. '(range' → logprob: -12.977813720703125
    10. 'mp' → logprob: -13.227813720703125

Token 1570: '(d' (ID: 2572)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0005371859879232943
    2. '   ' → logprob: -7.875537395477295
    3. '       ' → logprob: -9.375536918640137
    4. '1' → logprob: -10.625536918640137
    5. '           ' → logprob: -11.375536918640137
    6. '0' → logprob: -11.625536918640137
    7. 'dm' → logprob: -12.250536918640137
    8. ' dmg' → logprob: -12.375536918640137
    9. '	d' → logprob: -13.000536918640137
    10. '(d' → logprob: -13.000536918640137

Token 1571: 'mg' (ID: 15026)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0370434895157814
    2. '   ' → logprob: -3.662043571472168
    3. 'mp' → logprob: -5.912043571472168
    4. '       ' → logprob: -5.912043571472168
    5. 'mg' → logprob: -6.537043571472168
    6. 'm' → logprob: -7.287043571472168
    7. '=d' → logprob: -7.662043571472168
    8. ')' → logprob: -7.912043571472168
    9. '1' → logprob: -8.037043571472168
    10. '     ' → logprob: -8.162043571472168

Token 1572: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0271065142005682
    2. ',max' → logprob: -4.527106285095215
    3. ',d' → logprob: -4.902106285095215
    4. '0' → logprob: -5.152106285095215
    5. ' ,' → logprob: -6.777106285095215
    6. '=' → logprob: -8.027106285095215
    7. 'd' → logprob: -8.902106285095215
    8. 'dp' → logprob: -8.902106285095215
    9. ',len' → logprob: -8.902106285095215
    10. ')' → logprob: -9.027106285095215

Token 1573: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.8624639324116288e-06
    2. ' max' → logprob: -13.250001907348633
    3. '(max' → logprob: -16.375001907348633
    4. '   ' → logprob: -19.625001907348633
    5. '[max' → logprob: -20.500001907348633
    6. ',max' → logprob: -20.875001907348633
    7. '
' → logprob: -21.000001907348633
    8. 'MAX' → logprob: -21.250001907348633
    9. '	max' → logprob: -21.875001907348633
    10. '       ' → logprob: -22.250001907348633

Token 1574: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -3.47626737493556e-05
    2. '+' → logprob: -11.00003433227539
    3. '0' → logprob: -11.87503433227539
    4. '_HP' → logprob: -12.50003433227539
    5. 'max' → logprob: -12.62503433227539
    6. 'P' → logprob: -14.12503433227539
    7. '   ' → logprob: -14.37503433227539
    8. '1' → logprob: -14.75003433227539
    9. 'Hp' → logprob: -15.00003433227539
    10. '
' → logprob: -15.00003433227539

Token 1575: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004281659494154155
    2. ' +' → logprob: -7.875428199768066
    3. '):
' → logprob: -11.250428199768066
    4. ',' → logprob: -11.750428199768066
    5. '       ' → logprob: -11.750428199768066
    6. '   ' → logprob: -12.000428199768066
    7. '=' → logprob: -12.875428199768066
    8. '```' → logprob: -13.000428199768066
    9. '[' → logprob: -13.125428199768066
    10. '+
' → logprob: -13.625428199768066

Token 1576: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016766376211307943
    2. '+' → logprob: -8.875167846679688
    3. 'max' → logprob: -10.750167846679688
    4. '(max' → logprob: -12.375167846679688
    5. ' ' → logprob: -14.250167846679688
    6. '   ' → logprob: -14.375167846679688
    7. '(dp' → logprob: -15.250167846679688
    8. 'dp' → logprob: -15.625167846679688
    9. ')' → logprob: -16.250167846679688
    10. '=' → logprob: -16.750167846679688

Token 1577: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.48037126660346985
    2. '):
' → logprob: -1.1053712368011475
    3. ':' → logprob: -3.2303712368011475
    4. '               ' → logprob: -5.105371475219727
    5. '):' → logprob: -6.605371475219727
    6. ']:
' → logprob: -6.605371475219727
    7. '           ' → logprob: -7.230371475219727
    8. '=' → logprob: -7.855371475219727
    9. '       ' → logprob: -7.980371475219727
    10. '():
' → logprob: -8.230371475219727

Token 1578: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005001319805160165
    2. '           ' → logprob: -8.250499725341797
    3. '	           ' → logprob: -9.750499725341797
    4. ' if' → logprob: -9.875499725341797
    5. '```' → logprob: -10.625499725341797
    6. '	       ' → logprob: -10.750499725341797
    7. '			' → logprob: -11.000499725341797
    8. '		       ' → logprob: -11.125499725341797
    9. '                   ' → logprob: -11.625499725341797
    10. '<|end|>' → logprob: -11.875499725341797

Token 1579: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08199464529752731
    2. 'dp' → logprob: -2.5819945335388184
    3. ' if' → logprob: -5.956994533538818
    4. '               ' → logprob: -8.331995010375977
    5. 'while' → logprob: -9.456995010375977
    6. '           ' → logprob: -9.706995010375977
    7. ' dp' → logprob: -9.831995010375977
    8. '   ' → logprob: -11.206995010375977
    9. '                   ' → logprob: -11.706995010375977
    10. ' ' → logprob: -11.706995010375977

Token 1580: ' dp' (ID: 21546)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1581: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.000712074339389801
    2. 'd' → logprob: -7.250711917877197
    3. '[' → logprob: -13.375712394714355
    4. '   ' → logprob: -15.625712394714355
    5. ' d' → logprob: -16.75071144104004
    6. '[
' → logprob: -16.87571144104004
    7. '(d' → logprob: -17.00071144104004
    8. '	d' → logprob: -17.12571144104004
    9. '       ' → logprob: -17.62571144104004
    10. '>d' → logprob: -17.75071144104004

Token 1582: '-d' (ID: 2469)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.038521647453308105
    2. '-d' → logprob: -3.5385217666625977
    3. ' -' → logprob: -5.538521766662598
    4. '-' → logprob: -6.038521766662598
    5. ']' → logprob: -6.163521766662598
    6. '[' → logprob: -8.913521766662598
    7. 'd' → logprob: -9.038521766662598
    8. '[-' → logprob: -10.163521766662598
    9. '[
' → logprob: -12.288521766662598
    10. '   ' → logprob: -12.288521766662598

Token 1583: 'mg' (ID: 15026)
  Prédit: 'mg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mg' → logprob: -0.0008336895843967795
    2. 'd' → logprob: -8.125833511352539
    3. 'm' → logprob: -8.250833511352539
    4. 'mp' → logprob: -8.375833511352539
    5. 'g' → logprob: -11.625833511352539
    6. ']' → logprob: -11.750833511352539
    7. 'msg' → logprob: -12.375833511352539
    8. ' dmg' → logprob: -12.375833511352539
    9. 'mage' → logprob: -12.375833511352539
    10. 'md' → logprob: -12.625833511352539

Token 1584: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006933470256626606
    2. ']+' → logprob: -5.756933689117432
    3. ' +' → logprob: -6.131933689117432
    4. '+' → logprob: -6.506933689117432
    5. '[' → logprob: -10.131933212280273
    6. ')' → logprob: -10.256933212280273
    7. ' ]' → logprob: -12.381933212280273
    8. ']!=' → logprob: -13.756933212280273
    9. '+]' → logprob: -13.881933212280273
    10. ']<' → logprob: -15.256933212280273

Token 1585: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1002393513917923
    2. '+' → logprob: -2.3502392768859863
    3. '[' → logprob: -11.225239753723145
    4. ' <' → logprob: -11.600239753723145
    5. '<' → logprob: -12.975239753723145
    6. ')' → logprob: -13.350239753723145
    7. ' !=' → logprob: -13.850239753723145
    8. '>' → logprob: -14.350239753723145
    9. '               ' → logprob: -14.350239753723145
    10. '!=' → logprob: -14.600239753723145

Token 1586: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.0007099286303855479
    2. ' mp' → logprob: -7.2507100105285645
    3. 'pm' → logprob: -19.875709533691406
    4. '	mp' → logprob: -20.125709533691406
    5. '(mp' → logprob: -21.000709533691406
    6. '_mp' → logprob: -22.125709533691406
    7. 'MP' → logprob: -23.000709533691406
    8. '/mp' → logprob: -23.375709533691406
    9. 'mc' → logprob: -25.000709533691406
    10. 'mpi' → logprob: -25.000709533691406

Token 1587: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2519329786300659
    2. ' <' → logprob: -1.501932978630066
    3. '                   ' → logprob: -13.751933097839355
    4. '<int' → logprob: -14.751933097839355
    5. '               ' → logprob: -14.876933097839355
    6. '<p' → logprob: -15.126933097839355
    7. '<n' → logprob: -15.251933097839355
    8. '[' → logprob: -15.376933097839355
    9. '<th' → logprob: -15.626933097839355
    10. '           ' → logprob: -16.12693214416504

Token 1588: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00015872348740231246
    2. ' dp' → logprob: -8.750158309936523
    3. '	dp' → logprob: -16.375158309936523
    4. '(dp' → logprob: -17.625158309936523
    5. '_dp' → logprob: -18.375158309936523
    6. 'd' → logprob: -21.000158309936523
    7. '.dp' → logprob: -22.125158309936523
    8. '   ' → logprob: -22.375158309936523
    9. '[' → logprob: -22.750158309936523
    10. '           ' → logprob: -22.875158309936523

Token 1589: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.07889033854007721
    2. 'd' → logprob: -2.578890323638916
    3. '	d' → logprob: -14.828890800476074
    4. ' d' → logprob: -15.578890800476074
    5. '```' → logprob: -17.453889846801758
    6. '(d' → logprob: -18.328889846801758
    7. '   ' → logprob: -19.078889846801758
    8. '[' → logprob: -19.203889846801758
    9. ')d' → logprob: -19.453889846801758
    10. '"d' → logprob: -19.453889846801758

Token 1590: ']:
' (ID: 22152)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8830680847167969
    2. ']:
' → logprob: -0.8830680847167969
    3. ']:' → logprob: -3.133068084716797
    4. '               ' → logprob: -3.133068084716797
    5. ']' → logprob: -3.508068084716797
    6. ':
' → logprob: -3.508068084716797
    7. ':' → logprob: -4.633068084716797
    8. '=' → logprob: -5.008068084716797
    9. ']=' → logprob: -5.383068084716797
    10. '                       ' → logprob: -6.758068084716797

Token 1591: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03930271044373512
    2. '=' → logprob: -4.039302825927734
    3. '                       ' → logprob: -4.414302825927734
    4. ' =' → logprob: -5.039302825927734
    5. '               ' → logprob: -6.789302825927734
    6. ':' → logprob: -7.664302825927734
    7. '                    ' → logprob: -8.414302825927734
    8. '           ' → logprob: -9.039302825927734
    9. ':
' → logprob: -9.539302825927734
    10. '                  ' → logprob: -9.914302825927734

Token 1592: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.00017684244085103273
    2. ' dp' → logprob: -8.750176429748535
    3. '                   ' → logprob: -11.000176429748535
    4. '                       ' → logprob: -13.625176429748535
    5. '	dp' → logprob: -15.000176429748535
    6. '               ' → logprob: -16.87517738342285
    7. '(dp' → logprob: -16.87517738342285
    8. 'd' → logprob: -17.25017738342285
    9. '_dp' → logprob: -17.50017738342285
    10. '   ' → logprob: -19.12517738342285

Token 1593: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -4.723352049040841e-06
    2. 'd' → logprob: -12.375004768371582
    3. '=d' → logprob: -15.000004768371582
    4. '=' → logprob: -17.500003814697266
    5. '[' → logprob: -18.750003814697266
    6. '[
' → logprob: -19.000003814697266
    7. '                   ' → logprob: -19.250003814697266
    8. '	d' → logprob: -19.750003814697266
    9. '(d' → logprob: -19.875003814697266
    10. '```' → logprob: -20.875003814697266

Token 1594: ']' (ID: 60)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.0523688979446888
    2. '=d' → logprob: -3.5523688793182373
    3. '=' → logprob: -4.052369117736816
    4. ']' → logprob: -6.052369117736816
    5. 'd' → logprob: -6.427369117736816
    6. ' =' → logprob: -7.302369117736816
    7. ']=' → logprob: -8.302369117736816
    8. '-d' → logprob: -10.177369117736816
    9. '       ' → logprob: -11.052369117736816
    10. '   ' → logprob: -11.302369117736816

Token 1595: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002476016292348504
    2. ' =' → logprob: -6.002476215362549
    3. '=
' → logprob: -16.00247573852539
    4. '=d' → logprob: -16.62747573852539
    5. 'dp' → logprob: -17.62747573852539
    6. '.=' → logprob: -17.75247573852539
    7. ']=' → logprob: -18.12747573852539
    8. '[' → logprob: -18.75247573852539
    9. '                   ' → logprob: -19.37747573852539
    10. ']' → logprob: -20.00247573852539

Token 1596: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00043102685594931245
    2. ' dp' → logprob: -7.750431060791016
    3. '	dp' → logprob: -15.250431060791016
    4. '(dp' → logprob: -16.625431060791016
    5. '_dp' → logprob: -19.125431060791016
    6. '   ' → logprob: -19.875431060791016
    7. '                   ' → logprob: -19.875431060791016
    8. 'd' → logprob: -20.750431060791016
    9. '           ' → logprob: -21.000431060791016
    10. '.dp' → logprob: -21.125431060791016

Token 1597: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -3.273621405242011e-05
    2. 'd' → logprob: -10.375032424926758
    3. '[' → logprob: -13.750032424926758
    4. '-d' → logprob: -15.250032424926758
    5. '   ' → logprob: -16.375032424926758
    6. '(d' → logprob: -17.500032424926758
    7. '	d' → logprob: -17.750032424926758
    8. '       ' → logprob: -18.125032424926758
    9. '[-' → logprob: -18.375032424926758
    10. '-' → logprob: -18.375032424926758

Token 1598: '-d' (ID: 2469)
  Prédit: '-d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-d' → logprob: -0.054974813014268875
    2. ' -' → logprob: -2.9299747943878174
    3. '[d' → logprob: -10.054974555969238
    4. '-' → logprob: -11.054974555969238
    5. 'd' → logprob: -11.304974555969238
    6. '_d' → logprob: -11.679974555969238
    7. '   ' → logprob: -12.179974555969238
    8. ']' → logprob: -13.554974555969238
    9. '       ' → logprob: -13.679974555969238
    10. '[-' → logprob: -14.054974555969238

Token 1599: 'mg' (ID: 15026)
  Prédit: 'mg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mg' → logprob: -0.0002560945285949856
    2. 'mp' → logprob: -8.875256538391113
    3. 'mag' → logprob: -10.000256538391113
    4. 'mage' → logprob: -10.750256538391113
    5. '-d' → logprob: -11.250256538391113
    6. 'd' → logprob: -11.500256538391113
    7. '-m' → logprob: -12.125256538391113
    8. 'm' → logprob: -12.125256538391113
    9. 'mig' → logprob: -13.125256538391113
    10. 'md' → logprob: -13.375256538391113

Token 1600: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.34486666321754456
    2. ' +' → logprob: -1.7198666334152222
    3. '+' → logprob: -2.3448667526245117
    4. ']+' → logprob: -4.094866752624512
    5. '[' → logprob: -10.469866752624512
    6. ' ]' → logprob: -10.844866752624512
    7. ')' → logprob: -11.594866752624512
    8. '    ' → logprob: -12.719866752624512
    9. '```' → logprob: -12.844866752624512
    10. 'mp' → logprob: -13.094866752624512

Token 1601: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.693652868270874
    2. ' +' → logprob: -0.693652868270874
    3. ']' → logprob: -8.193653106689453
    4. ']+' → logprob: -8.568653106689453
    5. '```' → logprob: -10.443653106689453
    6. '[' → logprob: -12.568653106689453
    7. ')' → logprob: -13.193653106689453
    8. 'mp' → logprob: -13.443653106689453
    9. ')+' → logprob: -14.193653106689453
    10. '][' → logprob: -14.693653106689453

Token 1602: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.0001584850688232109
    2. ' mp' → logprob: -8.750158309936523
    3. '(mp' → logprob: -17.625158309936523
    4. '	mp' → logprob: -18.375158309936523
    5. 'pm' → logprob: -18.500158309936523
    6. '_mp' → logprob: -20.250158309936523
    7. '/mp' → logprob: -20.875158309936523
    8. '.mp' → logprob: -23.000158309936523
    9. 'dp' → logprob: -23.500158309936523
    10. 'mpi' → logprob: -23.625158309936523

Token 1603: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1604: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3180992603302002
    2. '           ' → logprob: -2.3180992603302
    3. '<|end|>' → logprob: -2.8180992603302
    4. ' for' → logprob: -3.1930992603302
    5. 'for' → logprob: -3.6930992603302
    6. '               ' → logprob: -4.068099021911621
    7. '```' → logprob: -4.568099021911621
    8. '        ' → logprob: -5.193099021911621
    9. '
' → logprob: -5.818099021911621
    10. '	for' → logprob: -6.318099021911621

Token 1605: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3872509300708771
    2. 'for' → logprob: -1.2622509002685547
    3. ' for' → logprob: -3.7622509002685547
    4. '```' → logprob: -4.887250900268555
    5. '           ' → logprob: -5.137250900268555
    6. 'while' → logprob: -7.512250900268555
    7. '   ' → logprob: -8.637250900268555
    8. '...' → logprob: -8.887250900268555
    9. 'from' → logprob: -9.012250900268555
    10. '<|end|>' → logprob: -9.262250900268555

Token 1606: ' We' (ID: 1416)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7212681770324707
    2. ' for' → logprob: -1.4712681770324707
    3. 'for' → logprob: -1.7212681770324707
    4. '       ' → logprob: -2.4712681770324707
    5. '<|end|>' → logprob: -5.471268177032471
    6. 'd' → logprob: -6.096268177032471
    7. 'while' → logprob: -6.846268177032471
    8. '#' → logprob: -6.971268177032471
    9. '   ' → logprob: -6.971268177032471
    10. 'continue' → logprob: -6.971268177032471

Token 1607: ' need' (ID: 1309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6867849826812744
    2. '=' → logprob: -1.8117849826812744
    3. ' for' → logprob: -1.9367849826812744
    4. '       ' → logprob: -2.0617849826812744
    5. '           ' → logprob: -3.5617849826812744
    6. ' =' → logprob: -4.186784744262695
    7. 'continue' → logprob: -4.811784744262695
    8. '
' → logprob: -6.186784744262695
    9. '   ' → logprob: -6.311784744262695
    10. '+=' → logprob: -6.811784744262695

Token 1608: ' multiple' (ID: 7598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11457882076501846
    2. ' for' → logprob: -2.6145787239074707
    3. '           ' → logprob: -3.6145787239074707
    4. 'while' → logprob: -5.489578723907471
    5. 'd' → logprob: -6.364578723907471
    6. '   ' → logprob: -7.239578723907471
    7. '       ' → logprob: -7.989578723907471
    8. '```' → logprob: -8.614579200744629
    9. 'to' → logprob: -8.864579200744629
    10. ' d' → logprob: -8.989579200744629

Token 1609: ' passes' (ID: 29169)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0851109027862549
    2. 'for' → logprob: -1.0851109027862549
    3. '           ' → logprob: -1.2101109027862549
    4. '       ' → logprob: -4.085110664367676
    5. '   ' → logprob: -6.210110664367676
    6. 'd' → logprob: -6.210110664367676
    7. 'while' → logprob: -6.210110664367676
    8. '```' → logprob: -7.085110664367676
    9. '
' → logprob: -7.460110664367676
    10. ' while' → logprob: -7.585110664367676

Token 1610: ' because' (ID: 2236)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010198229923844337
    2. ' for' → logprob: -5.13519811630249
    3. '		' → logprob: -6.88519811630249
    4. '       ' → logprob: -7.26019811630249
    5. '
' → logprob: -7.51019811630249
    6. '<|end|>' → logprob: -7.51019811630249
    7. ',' → logprob: -8.510198593139648
    8. 'for' → logprob: -8.760198593139648
    9. '	       ' → logprob: -8.885198593139648
    10. ' while' → logprob: -8.885198593139648

Token 1611: ' of' (ID: 328)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.1624186038970947
    2. 'd' → logprob: -1.4124186038970947
    3. ' True' → logprob: -1.4124186038970947
    4. 'for' → logprob: -2.9124186038970947
    5. ' for' → logprob: -3.1624186038970947
    6. '           ' → logprob: -3.4124186038970947
    7. 'dp' → logprob: -3.5374186038970947
    8. '       ' → logprob: -3.9124186038970947
    9. ' d' → logprob: -4.787418365478516
    10. '1' → logprob: -6.037418365478516

Token 1612: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.400139331817627
    2. 'the' → logprob: -1.650139331817627
    3. 'd' → logprob: -1.775139331817627
    4. ' for' → logprob: -2.650139331817627
    5. 'multiple' → logprob: -2.650139331817627
    6. ' the' → logprob: -3.150139331817627
    7. 'range' → logprob: -3.150139331817627
    8. 'True' → logprob: -3.650139331817627
    9. 'max' → logprob: -3.650139331817627
    10. 'un' → logprob: -4.025139331817627

Token 1613: ' dependencies' (ID: 44543)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5650420188903809
    2. '           ' → logprob: -1.6900420188903809
    3. '
' → logprob: -2.440042018890381
    4. 'for' → logprob: -2.690042018890381
    5. '       ' → logprob: -3.815042018890381
    6. '<|end|>' → logprob: -4.190042018890381
    7. '   ' → logprob: -4.315042018890381
    8. ' ' → logprob: -5.315042018890381
    9. ',' → logprob: -5.315042018890381
    10. ' 
' → logprob: -5.565042018890381

Token 1614: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17893736064434052
    2. '       ' → logprob: -2.5539374351501465
    3. ' for' → logprob: -3.0539374351501465
    4. '<|end|>' → logprob: -4.4289374351501465
    5. '		' → logprob: -5.0539374351501465
    6. '   ' → logprob: -5.4289374351501465
    7. 'for' → logprob: -5.4289374351501465
    8. ' while' → logprob: -6.3039374351501465
    9. '	' → logprob: -6.4289374351501465
    10. '
' → logprob: -6.5539374351501465

Token 1615: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14170651137828827
    2. '       ' → logprob: -2.5167064666748047
    3. '		' → logprob: -3.1417064666748047
    4. '	' → logprob: -5.641706466674805
    5. '	       ' → logprob: -6.141706466674805
    6. '	for' → logprob: -7.516706466674805
    7. '	   ' → logprob: -7.516706466674805
    8. '```' → logprob: -7.766706466674805
    9. ' for' → logprob: -8.266706466674805
    10. '   ' → logprob: -8.266706466674805

Token 1616: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48169204592704773
    2. '       ' → logprob: -1.1066920757293701
    3. ' for' → logprob: -3.85669207572937
    4. '   ' → logprob: -4.106691837310791
    5. 'for' → logprob: -4.731691837310791
    6. '```' → logprob: -5.856691837310791
    7. 'while' → logprob: -6.981691837310791
    8. ' while' → logprob: -7.231691837310791
    9. '		' → logprob: -8.48169231414795
    10. '	for' → logprob: -8.98169231414795

Token 1617: ' For' (ID: 2214)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33430665731430054
    2. 'for' → logprob: -1.9593067169189453
    3. '       ' → logprob: -2.8343067169189453
    4. ' for' → logprob: -3.0843067169189453
    5. 'while' → logprob: -3.8343067169189453
    6. '   ' → logprob: -4.459306716918945
    7. ' while' → logprob: -5.709306716918945
    8. '	for' → logprob: -7.834306716918945
    9. '```' → logprob: -7.834306716918945
    10. ' ' → logprob: -8.459306716918945

Token 1618: ' un' (ID: 537)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20622976124286652
    2. '_repeat' → logprob: -2.4562296867370605
    3. 'd' → logprob: -2.7062296867370605
    4. '_pass' → logprob: -4.7062296867370605
    5. '_d' → logprob: -5.4562296867370605
    6. ' _' → logprob: -5.4562296867370605
    7. 'repeat' → logprob: -6.2062296867370605
    8. 'max' → logprob: -6.7062296867370605
    9. ' d' → logprob: -6.8312296867370605
    10. '_max' → logprob: -7.0812296867370605

Token 1619: 'bounded' (ID: 135171)
  Prédit: 'bounded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bounded' → logprob: -0.02543950453400612
    2. 'd' → logprob: -4.025439739227295
    3. 'for' → logprob: -5.025439739227295
    4. 'bound' → logprob: -8.275439262390137
    5. '
' → logprob: -9.025439262390137
    6. 'b' → logprob: -9.025439262390137
    7. '       ' → logprob: -9.650439262390137
    8. '   ' → logprob: -10.275439262390137
    9. 'dp' → logprob: -10.275439262390137
    10. ' bounded' → logprob: -10.775439262390137

Token 1620: ' kn' (ID: 1313)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5315954089164734
    2. 'kn' → logprob: -1.1565954685211182
    3. ' for' → logprob: -3.656595468521118
    4. 'd' → logprob: -4.031595230102539
    5. 'range' → logprob: -4.156595230102539
    6. ' kn' → logprob: -4.281595230102539
    7. '       ' → logprob: -4.531595230102539
    8. '   ' → logprob: -5.406595230102539
    9. 'dp' → logprob: -6.031595230102539
    10. 'sp' → logprob: -6.281595230102539

Token 1621: 'apsack' (ID: 178559)
  Prédit: 'apsack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -6.575563020305708e-05
    2. 'aps' → logprob: -10.375065803527832
    3. 'ack' → logprob: -11.750065803527832
    4. 'n' → logprob: -11.750065803527832
    5. 'pack' → logprob: -12.375065803527832
    6. 's' → logprob: -13.250065803527832
    7. '#' → logprob: -13.375065803527832
    8. 'for' → logprob: -13.750065803527832
    9. 'stack' → logprob: -13.750065803527832
    10. '```' → logprob: -13.875065803527832

Token 1622: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43263718485832214
    2. '       ' → logprob: -1.5576372146606445
    3. ' for' → logprob: -2.4326372146606445
    4. 'for' → logprob: -3.4326372146606445
    5. '```' → logprob: -5.0576372146606445
    6. '
' → logprob: -5.3076372146606445
    7. '   ' → logprob: -5.4326372146606445
    8. ',' → logprob: -6.1826372146606445
    9. '		' → logprob: -7.9326372146606445
    10. '	for' → logprob: -8.182637214660645

Token 1623: ' process' (ID: 2273)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9407975673675537
    2. ' for' → logprob: -1.5657975673675537
    3. 'for' → logprob: -1.6907975673675537
    4. '       ' → logprob: -1.9407975673675537
    5. 'd' → logprob: -2.9407975673675537
    6. ' d' → logprob: -4.815797805786133
    7. '```' → logprob: -6.190797805786133
    8. '               ' → logprob: -6.440797805786133
    9. '   ' → logprob: -6.565797805786133
    10. '...' → logprob: -6.815797805786133

Token 1624: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.755232572555542
    2. '           ' → logprob: -1.255232572555542
    3. ' for' → logprob: -1.505232572555542
    4. '       ' → logprob: -4.380232810974121
    5. 'd' → logprob: -5.005232810974121
    6. '```' → logprob: -6.880232810974121
    7. '   ' → logprob: -7.505232810974121
    8. 'while' → logprob: -7.630232810974121
    9. ' in' → logprob: -7.630232810974121
    10. '               ' → logprob: -7.880232810974121

Token 1625: ' dmg' (ID: 168827)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00036667886888608336
    2. '0' → logprob: -8.7503662109375
    3. '   ' → logprob: -9.7503662109375
    4. '       ' → logprob: -10.0003662109375
    5. ' d' → logprob: -10.5003662109375
    6. '           ' → logprob: -11.0003662109375
    7. 'dm' → logprob: -11.0003662109375
    8. 'dp' → logprob: -12.0003662109375
    9. 'for' → logprob: -12.5003662109375
    10. 'amount' → logprob: -12.6253662109375

Token 1626: ' to' (ID: 316)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6704139709472656
    2. ',' → logprob: -1.5454139709472656
    3. 'for' → logprob: -2.2954139709472656
    4. '0' → logprob: -3.2954139709472656
    5. 'to' → logprob: -3.4204139709472656
    6. ',d' → logprob: -3.6704139709472656
    7. '       ' → logprob: -4.420413970947266
    8. '           ' → logprob: -4.420413970947266
    9. ' for' → logprob: -4.545413970947266
    10. '   ' → logprob: -5.045413970947266

Token 1627: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -3.333223139634356e-05
    2. ' max' → logprob: -10.375033378601074
    3. '```' → logprob: -14.000033378601074
    4. '[max' → logprob: -14.500033378601074
    5. '=max' → logprob: -15.375033378601074
    6. 'd' → logprob: -15.875033378601074
    7. '(max' → logprob: -16.000032424926758
    8. ',max' → logprob: -16.625032424926758
    9. '
' → logprob: -17.000032424926758
    10. '	max' → logprob: -17.250032424926758

Token 1628: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.2681165039539337
    2. '+' → logprob: -1.7681164741516113
    3. ',' → logprob: -3.7681164741516113
    4. '```' → logprob: -4.393116474151611
    5. '       ' → logprob: -4.768116474151611
    6. ' +' → logprob: -5.268116474151611
    7. '``' → logprob: -5.768116474151611
    8. '           ' → logprob: -6.018116474151611
    9. 'd' → logprob: -6.268116474151611
    10. '   ' → logprob: -6.643116474151611

Token 1629: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06403949856758118
    2. 'for' → logprob: -3.564039468765259
    3. ' for' → logprob: -4.064039707183838
    4. '       ' → logprob: -4.564039707183838
    5. '		' → logprob: -6.564039707183838
    6. '   ' → logprob: -6.939039707183838
    7. '<|end|>' → logprob: -6.939039707183838
    8. '```' → logprob: -7.439039707183838
    9. '               ' → logprob: -7.689039707183838
    10. '	for' → logprob: -7.939039707183838

Token 1630: ' single' (ID: 4590)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.361561119556427
    2. 'for' → logprob: -2.4865610599517822
    3. ' for' → logprob: -2.7365610599517822
    4. 'd' → logprob: -2.7365610599517822
    5. '               ' → logprob: -3.1115610599517822
    6. '       ' → logprob: -4.111561298370361
    7. '                   ' → logprob: -4.986561298370361
    8. ' d' → logprob: -5.236561298370361
    9. 'while' → logprob: -5.861561298370361
    10. ' while' → logprob: -6.611561298370361

Token 1631: ' pass' (ID: 1853)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.38199540972709656
    2. 'pass' → logprob: -1.381995439529419
    3. 'for' → logprob: -3.381995439529419
    4. 'iteration' → logprob: -4.63199520111084
    5. 'max' → logprob: -5.38199520111084
    6. 'import' → logprob: -5.63199520111084
    7. '+=' → logprob: -6.75699520111084
    8. 'time' → logprob: -7.00699520111084
    9. '0' → logprob: -7.00699520111084
    10. 'repeat' → logprob: -7.13199520111084

Token 1632: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1633: ' enough' (ID: 4951)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.03912608325481415
    2. 's' → logprob: -3.28912615776062
    3. 'd' → logprob: -7.789125919342041
    4. 'correct' → logprob: -7.914125919342041
    5. ' enough' → logprob: -9.1641263961792
    6. ' sufficient' → logprob: -9.9141263961792
    7. 'dp' → logprob: -10.4141263961792
    8. 'ok' → logprob: -10.9141263961792
    9. '       ' → logprob: -10.9141263961792
    10. '           ' → logprob: -11.1641263961792

Token 1634: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1635: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1636: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1637: ' But' (ID: 3072)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1638: ' spells' (ID: 69967)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3046941757202148
    2. 'continue' → logprob: -1.5546941757202148
    3. 'for' → logprob: -1.6796941757202148
    4. ' continue' → logprob: -2.304694175720215
    5. 'd' → logprob: -2.929694175720215
    6. '#' → logprob: -3.179694175720215
    7. '...' → logprob: -3.554694175720215
    8. '       ' → logprob: -3.679694175720215
    9. ' d' → logprob: -3.804694175720215
    10. 'pass' → logprob: -4.554694175720215

Token 1639: ' can' (ID: 665)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1640: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.39935967326164246
    2. 'repeat' → logprob: -1.8993597030639648
    3. 'damage' → logprob: -3.024359703063965
    4. 'also' → logprob: -3.274359703063965
    5. 'use' → logprob: -3.274359703063965
    6. 'have' → logprob: -4.149359703063965
    7. ' be' → logprob: -4.524359703063965
    8. 'cast' → logprob: -4.899359703063965
    9. 'multiply' → logprob: -5.899359703063965
    10. 'for' → logprob: -6.024359703063965

Token 1641: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.05559125170111656
    2. 'ap' → logprob: -3.305591344833374
    3. 'cast' → logprob: -4.930591106414795
    4. 're' → logprob: -5.305591106414795
    5. 'combined' → logprob: -5.930591106414795
    6. ' used' → logprob: -6.930591106414795
    7. 'multiple' → logprob: -8.180591583251953
    8. '```' → logprob: -8.430591583251953
    9. ' applied' → logprob: -8.555591583251953
    10. 'added' → logprob: -8.555591583251953

Token 1642: ' unlimited' (ID: 34136)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.678356945514679
    2. ' multiple' → logprob: -1.8033568859100342
    3. 'for' → logprob: -2.053356885910034
    4. ' again' → logprob: -2.803356885910034
    5. '           ' → logprob: -3.178356885910034
    6. 'multiple' → logprob: -3.928356885910034
    7. '       ' → logprob: -4.303357124328613
    8. 'again' → logprob: -4.428357124328613
    9. ' ' → logprob: -4.678357124328613
    10. '               ' → logprob: -5.178357124328613

Token 1643: ' times' (ID: 4238)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1644: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1645: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1646: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026681653689593077
    2. '
' → logprob: -7.002668380737305
    3. ' for' → logprob: -7.502668380737305
    4. '   ' → logprob: -7.502668380737305
    5. 'for' → logprob: -7.752668380737305
    6. '```' → logprob: -8.752668380737305
    7. '           ' → logprob: -10.127668380737305
    8. ')' → logprob: -12.002668380737305
    9. '<|end|>' → logprob: -12.252668380737305
    10. '        
' → logprob: -13.252668380737305

Token 1647: ' Because' (ID: 13602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01650420017540455
    2. 'for' → logprob: -4.766504287719727
    3. ' for' → logprob: -5.391504287719727
    4. '   ' → logprob: -6.141504287719727
    5. '           ' → logprob: -7.891504287719727
    6. '#' → logprob: -8.641504287719727
    7. '```' → logprob: -8.891504287719727
    8. '<|end|>' → logprob: -8.891504287719727
    9. ')' → logprob: -9.266504287719727
    10. '
' → logprob: -9.766504287719727

Token 1648: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47566846013069153
    2. 'True' → logprob: -2.225668430328369
    3. ' for' → logprob: -2.350668430328369
    4. 'dp' → logprob: -2.975668430328369
    5. 'd' → logprob: -3.350668430328369
    6. '#' → logprob: -3.725668430328369
    7. '       ' → logprob: -3.850668430328369
    8. ' True' → logprob: -3.850668430328369
    9. 'max' → logprob: -4.725668430328369
    10. 'range' → logprob: -6.100668430328369

Token 1649: ' modified' (ID: 19209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35427314043045044
    2. '       ' → logprob: -2.1042730808258057
    3. ' for' → logprob: -2.4792730808258057
    4. '=' → logprob: -2.7292730808258057
    5. 'continue' → logprob: -4.229273319244385
    6. ' =' → logprob: -5.479273319244385
    7. '   ' → logprob: -5.854273319244385
    8. '#' → logprob: -6.229273319244385
    9. 'range' → logprob: -7.354273319244385
    10. '
' → logprob: -7.604273319244385

Token 1650: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25378328561782837
    2. ' for' → logprob: -1.7537832260131836
    3. 'd' → logprob: -4.003783226013184
    4. '       ' → logprob: -4.503783226013184
    5. 'the' → logprob: -5.003783226013184
    6. 'dp' → logprob: -5.253783226013184
    7. '```' → logprob: -6.003783226013184
    8. ' the' → logprob: -6.128783226013184
    9. '           ' → logprob: -7.753783226013184
    10. ',' → logprob: -7.878783226013184

Token 1651: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.760964035987854
    2. 'for' → logprob: -1.385964035987854
    3. '       ' → logprob: -2.0109639167785645
    4. '<|end|>' → logprob: -2.5109639167785645
    5. '
' → logprob: -3.3859639167785645
    6. '   ' → logprob: -4.0109639167785645
    7. '<|end|>' → logprob: -5.6359639167785645
    8. ',' → logprob: -6.1359639167785645
    9. '[' → logprob: -6.5109639167785645
    10. '```' → logprob: -6.5109639167785645

Token 1652: ' the' (ID: 290)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.0823462009429932
    2. 'the' → logprob: -1.2073462009429932
    3. 'd' → logprob: -1.4573462009429932
    4. 'range' → logprob: -2.832346200942993
    5. '       ' → logprob: -4.207345962524414
    6. ' each' → logprob: -4.457345962524414
    7. 'for' → logprob: -4.457345962524414
    8. 'purpose' → logprob: -4.707345962524414
    9. ' range' → logprob: -5.582345962524414
    10. ' the' → logprob: -5.582345962524414

Token 1653: ' fly' (ID: 14360)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.23820039629936218
    2. 'fly' → logprob: -2.4882004261016846
    3. 'd' → logprob: -2.6132004261016846
    4. 'for' → logprob: -3.1132004261016846
    5. 'previous' → logprob: -5.6132001876831055
    6. 'line' → logprob: -6.6132001876831055
    7. 'next' → logprob: -6.7382001876831055
    8. 'range' → logprob: -6.9882001876831055
    9. 'current' → logprob: -6.9882001876831055
    10. 'right' → logprob: -7.6132001876831055

Token 1654: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12240036576986313
    2. ' for' → logprob: -2.4974002838134766
    3. 'for' → logprob: -4.372400283813477
    4. '           ' → logprob: -4.622400283813477
    5. ',' → logprob: -4.747400283813477
    6. '```' → logprob: -7.497400283813477
    7. '<|end|>' → logprob: -8.122400283813477
    8. '   ' → logprob: -8.122400283813477
    9. ' and' → logprob: -8.747400283813477
    10. '.' → logprob: -9.622400283813477

Token 1655: ' need' (ID: 1309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4197928309440613
    2. '       ' → logprob: -2.294792890548706
    3. '           ' → logprob: -2.419792890548706
    4. 'for' → logprob: -2.919792890548706
    5. '<|end|>' → logprob: -3.294792890548706
    6. ')' → logprob: -5.169792652130127
    7. '        ' → logprob: -5.169792652130127
    8. '   ' → logprob: -5.544792652130127
    9. ' d' → logprob: -5.544792652130127
    10. 'd' → logprob: -5.669792652130127

Token 1656: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2547950744628906
    2. ' for' → logprob: -1.7547950744628906
    3. 'd' → logprob: -3.1297950744628906
    4. ' to' → logprob: -5.754795074462891
    5. 'to' → logprob: -6.129795074462891
    6. '```' → logprob: -7.254795074462891
    7. ' d' → logprob: -8.25479507446289
    8. 'from' → logprob: -8.25479507446289
    9. 'continue' → logprob: -8.37979507446289
    10. '       ' → logprob: -8.37979507446289

Token 1657: ' do' (ID: 621)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27100127935409546
    2. 'repeat' → logprob: -1.6460013389587402
    3. 'continue' → logprob: -3.6460013389587402
    4. 'process' → logprob: -5.77100133895874
    5. 're' → logprob: -6.27100133895874
    6. 'run' → logprob: -6.64600133895874
    7. 'use' → logprob: -6.64600133895874
    8. 'pass' → logprob: -6.77100133895874
    9. 'implement' → logprob: -7.14600133895874
    10. 'd' → logprob: -7.14600133895874

Token 1658: ' repeated' (ID: 24161)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12344339489936829
    2. 'max' → logprob: -3.873443365097046
    3. '       ' → logprob: -3.998443365097046
    4. ' for' → logprob: -3.998443365097046
    5. 'another' → logprob: -3.998443365097046
    6. 'multiple' → logprob: -4.748443603515625
    7. 'a' → logprob: -4.873443603515625
    8. 'an' → logprob: -5.248443603515625
    9. 'more' → logprob: -5.748443603515625
    10. ' multiple' → logprob: -5.998443603515625

Token 1659: ' until' (ID: 4609)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2902943193912506
    2. 'passes' → logprob: -1.7902942895889282
    3. 'd' → logprob: -2.9152944087982178
    4. 'iterations' → logprob: -4.540294170379639
    5. 'updates' → logprob: -5.165294170379639
    6. 'max' → logprob: -5.665294170379639
    7. 'loops' → logprob: -5.790294170379639
    8. 'pass' → logprob: -5.915294170379639
    9. ' for' → logprob: -6.165294170379639
    10. ' passes' → logprob: -7.165294170379639

Token 1660: ' no' (ID: 860)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.02551574632525444
    2. 'False' → logprob: -4.775515556335449
    3. 'changed' → logprob: -5.400515556335449
    4. 'no' → logprob: -5.650515556335449
    5. 'not' → logprob: -5.775515556335449
    6. ' True' → logprob: -5.900515556335449
    7. 'updated' → logprob: -6.775515556335449
    8. 'stable' → logprob: -6.900515556335449
    9. '```' → logprob: -7.525515556335449
    10. 'changes' → logprob: -10.15051555633545

Token 1661: ' changes' (ID: 6629)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.5486871600151062
    2. 'changed' → logprob: -1.798687219619751
    3. 'changes' → logprob: -2.423687219619751
    4. ' changes' → logprob: -2.548687219619751
    5. 'im' → logprob: -2.923687219619751
    6. ' change' → logprob: -3.673687219619751
    7. 'updated' → logprob: -5.798686981201172
    8. ' changed' → logprob: -6.048686981201172
    9. 'update' → logprob: -6.423686981201172
    10. 'updates' → logprob: -6.548686981201172

Token 1662: '?' (ID: 30)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3262115716934204
    2. 'while' → logprob: -1.9512115716934204
    3. '
' → logprob: -2.201211452484131
    4. ' while' → logprob: -4.076211452484131
    5. '           ' → logprob: -5.076211452484131
    6. '   ' → logprob: -6.951211452484131
    7. '```' → logprob: -7.826211452484131
    8. 'for' → logprob: -8.701211929321289
    9. '
' → logprob: -8.951211929321289
    10. ',' → logprob: -8.951211929321289

Token 1663: ' 
' (ID: 793)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7353457808494568
    2. '       ' → logprob: -0.9853457808494568
    3. ' while' → logprob: -2.2353458404541016
    4. 'for' → logprob: -4.485345840454102
    5. ' for' → logprob: -5.235345840454102
    6. '           ' → logprob: -5.235345840454102
    7. '   ' → logprob: -5.360345840454102
    8. '```' → logprob: -5.360345840454102
    9. 'While' → logprob: -6.235345840454102
    10. '
' → logprob: -6.360345840454102

Token 1664: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1503499150276184
    2. 'while' → logprob: -3.0253498554229736
    3. '           ' → logprob: -3.4003498554229736
    4. ' while' → logprob: -3.9003498554229736
    5. 'for' → logprob: -4.400350093841553
    6. ' for' → logprob: -4.650350093841553
    7. '```' → logprob: -5.025350093841553
    8. '
' → logprob: -5.400350093841553
    9. '   ' → logprob: -6.900350093841553
    10. 'While' → logprob: -7.900350093841553

Token 1665: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44452303647994995
    2. 'while' → logprob: -1.4445230960845947
    3. 'for' → logprob: -2.8195230960845947
    4. ' while' → logprob: -3.8195230960845947
    5. ' for' → logprob: -4.194522857666016
    6. '           ' → logprob: -4.319522857666016
    7. '```' → logprob: -5.069522857666016
    8. 'True' → logprob: -6.569522857666016
    9. '   ' → logprob: -6.569522857666016
    10. '
' → logprob: -7.194522857666016

Token 1666: ' Normally' (ID: 85116)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5415282845497131
    2. '       ' → logprob: -1.6665282249450684
    3. ' while' → logprob: -2.2915282249450684
    4. 'for' → logprob: -2.5415282249450684
    5. ' for' → logprob: -3.6665282249450684
    6. '```' → logprob: -4.416528224945068
    7. '           ' → logprob: -5.791528224945068
    8. '
' → logprob: -6.416528224945068
    9. 'continue' → logprob: -6.791528224945068
    10. '   ' → logprob: -6.791528224945068

Token 1667: ' un' (ID: 537)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5400390625
    2. ' for' → logprob: -0.9150390625
    3. '       ' → logprob: -4.9150390625
    4. '#' → logprob: -5.6650390625
    5. '...' → logprob: -6.7900390625
    6. 'd' → logprob: -6.7900390625
    7. 'continue' → logprob: -7.2900390625
    8. 'pass' → logprob: -7.4150390625
    9. ' pass' → logprob: -7.9150390625
    10. ' continue' → logprob: -7.9150390625

Token 1668: 'bounded' (ID: 135171)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10027901083230972
    2. 'for' → logprob: -3.2252790927886963
    3. '[' → logprob: -4.475278854370117
    4. 'dp' → logprob: -4.600278854370117
    5. '
' → logprob: -4.725278854370117
    6. 'bounded' → logprob: -5.100278854370117
    7. ' for' → logprob: -5.600278854370117
    8. '[d' → logprob: -5.600278854370117
    9. '```' → logprob: -5.975278854370117
    10. '=' → logprob: -5.975278854370117

Token 1669: ' kn' (ID: 1313)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6350633502006531
    2. ' for' → logprob: -1.8850634098052979
    3. '[' → logprob: -2.010063409805298
    4. '       ' → logprob: -2.635063409805298
    5. '           ' → logprob: -2.885063409805298
    6. '```' → logprob: -4.885063171386719
    7. '   ' → logprob: -5.010063171386719
    8. '[d' → logprob: -5.260063171386719
    9. '=' → logprob: -5.760063171386719
    10. '_dp' → logprob: -5.885063171386719

Token 1670: 'apsack' (ID: 178559)
  Prédit: 'apsack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -0.00035072024911642075
    2. 'pack' → logprob: -9.375350952148438
    3. 'aps' → logprob: -9.500350952148438
    4. '
' → logprob: -10.125350952148438
    5. '[' → logprob: -10.375350952148438
    6. '```' → logprob: -10.500350952148438
    7. 'ack' → logprob: -10.625350952148438
    8. '=' → logprob: -11.125350952148438
    9. '_' → logprob: -11.875350952148438
    10. 'ap' → logprob: -12.375350952148438

Token 1671: ' single' (ID: 4590)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0774366855621338
    2. 'for' → logprob: -1.7024366855621338
    3. '       ' → logprob: -1.7024366855621338
    4. '<|end|>' → logprob: -1.9524366855621338
    5. '   ' → logprob: -3.327436685562134
    6. ':' → logprob: -3.327436685562134
    7. '
' → logprob: -3.702436685562134
    8. '           ' → logprob: -4.452436447143555
    9. '<|end|>' → logprob: -4.452436447143555
    10. ':
' → logprob: -4.952436447143555

Token 1672: ' pass' (ID: 1853)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7935528755187988
    2. 'for' → logprob: -1.4185528755187988
    3. ' pass' → logprob: -2.293552875518799
    4. 'pass' → logprob: -2.543552875518799
    5. 'd' → logprob: -2.668552875518799
    6. ' d' → logprob: -3.168552875518799
    7. '       ' → logprob: -5.043552875518799
    8. '   ' → logprob: -6.043552875518799
    9. '```' → logprob: -7.293552875518799
    10. 'range' → logprob: -7.668552875518799

Token 1673: ' suff' (ID: 9490)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36792829632759094
    2. '<|end|>' → logprob: -1.9929282665252686
    3. '           ' → logprob: -3.1179282665252686
    4. ':' → logprob: -3.3679282665252686
    5. '   ' → logprob: -3.4929282665252686
    6. ' for' → logprob: -3.8679282665252686
    7. '<|end|>' → logprob: -4.117928504943848
    8. ':
' → logprob: -5.367928504943848
    9. 'for' → logprob: -5.617928504943848
    10. '[' → logprob: -6.117928504943848

Token 1674: 'ices' (ID: 1386)
  Prédit: 'ices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ices' → logprob: -0.28541719913482666
    2. 'ice' → logprob: -1.4104171991348267
    3. 'icient' → logprob: -5.910417079925537
    4. 'for' → logprob: -7.535417079925537
    5. 'ceeds' → logprob: -7.910417079925537
    6. 'f' → logprob: -8.660417556762695
    7. 'fic' → logprob: -8.910417556762695
    8. 'iced' → logprob: -10.035417556762695
    9. 'ces' → logprob: -10.160417556762695
    10. 'iciency' → logprob: -10.535417556762695

Token 1675: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5571929216384888
    2. '<|end|>' → logprob: -1.0571929216384888
    3. ' for' → logprob: -3.807192802429199
    4. '
' → logprob: -4.057192802429199
    5. '   ' → logprob: -4.057192802429199
    6. '<|end|>' → logprob: -4.557192802429199
    7. 'for' → logprob: -5.557192802429199
    8. '           ' → logprob: -5.807192802429199
    9. ' ' → logprob: -7.307192802429199
    10. '```' → logprob: -7.307192802429199

Token 1676: ' we' (ID: 581)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8745377659797668
    2. 'for' → logprob: -1.249537706375122
    3. 'we' → logprob: -1.999537706375122
    4. 'done' → logprob: -3.874537706375122
    5. ' we' → logprob: -3.999537706375122
    6. 'range' → logprob: -4.124537944793701
    7. ' for' → logprob: -4.499537944793701
    8. 'all' → logprob: -4.499537944793701
    9. 'dp' → logprob: -4.499537944793701
    10. 'processed' → logprob: -4.624537944793701

Token 1677: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.04364380985498428
    2. ' process' → logprob: -3.9186437129974365
    3. 'continue' → logprob: -4.668643951416016
    4. 'do' → logprob: -5.418643951416016
    5. 'for' → logprob: -6.043643951416016
    6. 'keep' → logprob: -6.668643951416016
    7. 'use' → logprob: -7.043643951416016
    8. 'implement' → logprob: -7.168643951416016
    9. 'just' → logprob: -7.418643951416016
    10. '       ' → logprob: -7.543643951416016

Token 1678: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06261789053678513
    2. 'from' → logprob: -3.687617778778076
    3. 'in' → logprob: -4.437617778778076
    4. 'for' → logprob: -4.687617778778076
    5. 'dp' → logprob: -4.687617778778076
    6. 'the' → logprob: -6.687617778778076
    7. 'all' → logprob: -7.062617778778076
    8. ' d' → logprob: -7.187617778778076
    9. 'down' → logprob: -7.437617778778076
    10. '```' → logprob: -7.687617778778076

Token 1679: ' from' (ID: 591)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.1892164945602417
    2. '=' → logprob: -1.5642164945602417
    3. ' in' → logprob: -1.8142164945602417
    4. '=d' → logprob: -2.1892166137695312
    5. 'd' → logprob: -2.4392166137695312
    6. 'from' → logprob: -2.8142166137695312
    7. 'range' → logprob: -3.1892166137695312
    8. 'for' → logprob: -4.314216613769531
    9. ' =' → logprob: -5.814216613769531
    10. '+=' → logprob: -6.564216613769531

Token 1680: ' dmg' (ID: 168827)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0006876522093079984
    2. 'all' → logprob: -9.000687599182129
    3. 'dm' → logprob: -9.250687599182129
    4. 'sp' → logprob: -9.375687599182129
    5. '0' → logprob: -9.750687599182129
    6. 'mp' → logprob: -10.125687599182129
    7. 'spell' → logprob: -10.250687599182129
    8. '```' → logprob: -10.250687599182129
    9. '   ' → logprob: -10.625687599182129
    10. '`' → logprob: -10.750687599182129

Token 1681: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.7399797439575195
    2. 'down' → logprob: -1.8649797439575195
    3. ',' → logprob: -2.1149797439575195
    4. 'for' → logprob: -2.4899797439575195
    5. ' to' → logprob: -2.4899797439575195
    6. ':' → logprob: -3.9899797439575195
    7. ' down' → logprob: -4.2399797439575195
    8. ' for' → logprob: -5.1149797439575195
    9. '```' → logprob: -5.3649797439575195
    10. 'd' → logprob: -5.8649797439575195

Token 1682: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -6.2729995988775045e-06
    2. ' max' → logprob: -12.000006675720215
    3. '[max' → logprob: -17.2500057220459
    4. '=max' → logprob: -17.6250057220459
    5. '```' → logprob: -19.0000057220459
    6. '(max' → logprob: -19.1250057220459
    7. ',max' → logprob: -19.5000057220459
    8. '
' → logprob: -20.0000057220459
    9. '	max' → logprob: -20.6250057220459
    10. '   ' → logprob: -20.6250057220459

Token 1683: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.00020091790065634996
    2. 'd' → logprob: -9.375201225280762
    3. '_hp' → logprob: -9.375201225280762
    4. '_HP' → logprob: -11.500201225280762
    5. 'hp' → logprob: -12.375201225280762
    6. 'down' → logprob: -12.625201225280762
    7. 'up' → logprob: -13.000201225280762
    8. 'Hp' → logprob: -13.125201225280762
    9. 'for' → logprob: -13.500201225280762
    10. 'damage' → logprob: -13.875201225280762

Token 1684: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16790688037872314
    2. '<|end|>' → logprob: -2.5429067611694336
    3. '
' → logprob: -3.6679067611694336
    4. ' for' → logprob: -4.167906761169434
    5. '           ' → logprob: -4.542906761169434
    6. '   ' → logprob: -4.667906761169434
    7. 'for' → logprob: -5.542906761169434
    8. '<|end|>' → logprob: -5.667906761169434
    9. '```' → logprob: -6.167906761169434
    10. '        
' → logprob: -7.292906761169434

Token 1685: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3061889410018921
    2. '<|end|>' → logprob: -2.1811890602111816
    3. '           ' → logprob: -2.3061890602111816
    4. ' for' → logprob: -3.6811890602111816
    5. '```' → logprob: -4.806189060211182
    6. '   ' → logprob: -5.306189060211182
    7. 'for' → logprob: -5.931189060211182
    8. '<|end|>' → logprob: -6.056189060211182
    9. ' continue' → logprob: -6.681189060211182
    10. '
' → logprob: -6.681189060211182

Token 1686: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09340498596429825
    2. ' for' → logprob: -3.21840500831604
    3. '```' → logprob: -3.96840500831604
    4. '<|end|>' → logprob: -4.343404769897461
    5. 'for' → logprob: -5.093404769897461
    6. '           ' → logprob: -5.593404769897461
    7. '
' → logprob: -6.718404769897461
    8. '   ' → logprob: -6.718404769897461
    9. ')' → logprob: -6.968404769897461
    10. ',' → logprob: -7.593404769897461

Token 1687: ' Let's' (ID: 41021)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33626890182495117
    2. ' for' → logprob: -1.8362689018249512
    3. 'for' → logprob: -2.961268901824951
    4. '           ' → logprob: -3.336268901824951
    5. '```' → logprob: -3.961268901824951
    6. '<|end|>' → logprob: -4.961268901824951
    7. '   ' → logprob: -5.461268901824951
    8. '
' → logprob: -6.711268901824951
    9. ')' → logprob: -6.961268901824951
    10. ' continue' → logprob: -6.961268901824951

Token 1688: ' do' (ID: 621)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3626866638660431
    2. 'continue' → logprob: -1.3626866340637207
    3. 'pass' → logprob: -3.4876866340637207
    4. '       ' → logprob: -4.612686634063721
    5. ' for' → logprob: -5.987686634063721
    6. 'range' → logprob: -6.862686634063721
    7. '   ' → logprob: -7.487686634063721
    8. 'd' → logprob: -7.612686634063721
    9. '           ' → logprob: -7.612686634063721
    10. 'done' → logprob: -7.987686634063721

Token 1689: ' as' (ID: 472)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03775133565068245
    2. '       ' → logprob: -3.6627514362335205
    3. 'dp' → logprob: -6.037751197814941
    4. '           ' → logprob: -6.037751197814941
    5. ' for' → logprob: -6.162751197814941
    6. 'max' → logprob: -6.412751197814941
    7. 'while' → logprob: -7.287751197814941
    8. 'True' → logprob: -7.537751197814941
    9. 'from' → logprob: -7.787751197814941
    10. 'd' → logprob: -8.412751197814941

Token 1690: ' usual' (ID: 19261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3416235148906708
    2. ' follows' → logprob: -2.216623544692993
    3. 'f' → logprob: -2.591623544692993
    4. 'range' → logprob: -3.216623544692993
    5. '```' → logprob: -4.216623306274414
    6. 'is' → logprob: -4.341623306274414
    7. 'd' → logprob: -5.091623306274414
    8. ' for' → logprob: -5.091623306274414
    9. 'in' → logprob: -5.716623306274414
    10. 'mp' → logprob: -6.216623306274414

Token 1691: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1462840884923935
    2. '<|end|>' → logprob: -2.7712841033935547
    3. ' for' → logprob: -3.5212841033935547
    4. '   ' → logprob: -4.396284103393555
    5. '           ' → logprob: -4.521284103393555
    6. 'for' → logprob: -4.521284103393555
    7. '<|end|>' → logprob: -6.271284103393555
    8. '
' → logprob: -6.896284103393555
    9. '        ' → logprob: -6.896284103393555
    10. '```' → logprob: -7.396284103393555

Token 1692: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05695418640971184
    2. '           ' → logprob: -3.1819541454315186
    3. ' for' → logprob: -4.681954383850098
    4. 'for' → logprob: -5.806954383850098
    5. '   ' → logprob: -7.556954383850098
    6. '```' → logprob: -7.556954383850098
    7. '	for' → logprob: -8.556954383850098
    8. '	' → logprob: -9.181954383850098
    9. '	       ' → logprob: -9.306954383850098
    10. '		' → logprob: -10.181954383850098

Token 1693: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5060209035873413
    2. 'for' (adapté à ' for') → logprob: -1.6310209035873413
    3. ' for' → logprob: -2.256021022796631
    4. '           ' → logprob: -2.381021022796631
    5. '   ' → logprob: -6.256021022796631
    6. '```' → logprob: -6.381021022796631
    7. 'd' → logprob: -9.006020545959473
    8. '	for' → logprob: -9.756020545959473
    9. ' ' → logprob: -10.006020545959473
    10. '               ' → logprob: -10.006020545959473

Token 1694: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.09339185059070587
    2. ' mp' → logprob: -2.7183918952941895
    3. 'd' → logprob: -3.9683918952941895
    4. '_mp' → logprob: -6.2183918952941895
    5. ' d' → logprob: -7.4683918952941895
    6. '_' → logprob: -7.8433918952941895
    7. 'sp' → logprob: -8.093391418457031
    8. 's' → logprob: -8.468391418457031
    9. 'all' → logprob: -9.093391418457031
    10. 'dp' → logprob: -9.593391418457031

Token 1695: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011767814867198467
    2. ' ,' → logprob: -5.386767864227295
    3. ' in' → logprob: -5.636767864227295
    4. 'in' → logprob: -5.761767864227295
    5. '_,' → logprob: -8.636767387390137
    6. 'for' → logprob: -9.261767387390137
    7. '   ' → logprob: -10.761767387390137
    8. 's' → logprob: -10.761767387390137
    9. ',_' → logprob: -11.511767387390137
    10. ' ' → logprob: -12.011767387390137

Token 1696: ' _,' (ID: 18042)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.1322953999042511
    2. ' _,' → logprob: -2.1322953701019287
    3. ' ,' → logprob: -6.132295608520508
    4. '_' → logprob: -6.382295608520508
    5. ',' → logprob: -7.007295608520508
    6. ' mp' → logprob: -8.507295608520508
    7. ' _' → logprob: -9.007295608520508
    8. ' ' → logprob: -9.132295608520508
    9. '__,' → logprob: -10.007295608520508
    10. '0' → logprob: -10.882295608520508

Token 1697: ' dmg' (ID: 168827)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.586529016494751
    2. 'all' → logprob: -0.836529016494751
    3. ' all' → logprob: -5.086528778076172
    4. ' dmg' → logprob: -5.711528778076172
    5. 's' → logprob: -7.711528778076172
    6. 'mp' → logprob: -8.211528778076172
    7. 'range' → logprob: -9.461528778076172
    8. 'damage' → logprob: -9.961528778076172
    9. ' d' → logprob: -10.336528778076172
    10. ' ' → logprob: -10.836528778076172

Token 1698: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17063398659229279
    2. 'in' → logprob: -2.1706340312957764
    3. '           ' → logprob: -3.1706340312957764
    4. '       ' → logprob: -8.295634269714355
    5. 'd' → logprob: -8.795634269714355
    6. ':' → logprob: -8.920634269714355
    7. '   ' → logprob: -9.170634269714355
    8. ':
' → logprob: -9.795634269714355
    9. '```' → logprob: -10.295634269714355
    10. ',' → logprob: -11.295634269714355

Token 1699: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.00012023169983876869
    2. ' all' → logprob: -9.375120162963867
    3. '   ' → logprob: -11.000120162963867
    4. 'range' → logprob: -11.750120162963867
    5. 'single' → logprob: -12.375120162963867
    6. '       ' → logprob: -13.125120162963867
    7. ' ' → logprob: -13.625120162963867
    8. '[' → logprob: -14.000120162963867
    9. '           ' → logprob: -14.625120162963867
    10. '  ' → logprob: -15.000120162963867

Token 1700: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.09125194698572159
    2. 'all' → logprob: -2.716251850128174
    3. 'range' → logprob: -4.341251850128174
    4. 'sp' → logprob: -4.841251850128174
    5. '_all' → logprob: -9.341252326965332
    6. '(all' → logprob: -11.091252326965332
    7. ' all' → logprob: -11.341252326965332
    8. 'Sp' → logprob: -11.341252326965332
    9. ' range' → logprob: -11.716252326965332
    10. '_s' → logprob: -11.841252326965332

Token 1701: 'ells' (ID: 9703)
  Prédit: 'ells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ells' → logprob: -0.0011720098555088043
    2. 'ell' → logprob: -7.501172065734863
    3. 'alls' → logprob: -8.251172065734863
    4. 'all' → logprob: -9.501172065734863
    5. '```' → logprob: -10.001172065734863
    6. 'els' → logprob: -10.251172065734863
    7. 'e' → logprob: -10.501172065734863
    8. 'p' → logprob: -10.751172065734863
    9. '_all' → logprob: -10.876172065734863
    10. 'el' → logprob: -11.626172065734863

Token 1702: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35934513807296753
    2. '           ' → logprob: -1.7343451976776123
    3. ':
' → logprob: -2.1093451976776123
    4. ',' → logprob: -6.734344959259033
    5. ' for' → logprob: -6.859344959259033
    6. '       ' → logprob: -6.984344959259033
    7. '   ' → logprob: -8.734345436096191
    8. '):
' → logprob: -9.109345436096191
    9. '```' → logprob: -9.359345436096191
    10. '		' → logprob: -9.484345436096191

Token 1703: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014499947428703308
    2. '   ' → logprob: -7.001450061798096
    3. ' for' → logprob: -7.751450061798096
    4. '       ' → logprob: -9.876449584960938
    5. '	       ' → logprob: -10.626449584960938
    6. '```' → logprob: -11.126449584960938
    7. '		' → logprob: -11.626449584960938
    8. '               ' → logprob: -12.876449584960938
    9. '          ' → logprob: -13.876449584960938
    10. '	   ' → logprob: -14.001449584960938

Token 1704: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.8119174838066101
    2. ' for' → logprob: -1.3119175434112549
    3. '   ' → logprob: -2.061917543411255
    4. '           ' → logprob: -2.311917543411255
    5. '       ' → logprob: -2.811917543411255
    6. 'd' → logprob: -9.186917304992676
    7. '```' → logprob: -9.186917304992676
    8. '	for' → logprob: -9.686917304992676
    9. ' ' → logprob: -10.936917304992676
    10. '               ' → logprob: -12.061917304992676

Token 1705: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01480747852474451
    2. ' d' → logprob: -4.38980770111084
    3. 'range' → logprob: -6.51480770111084
    4. ' range' → logprob: -7.26480770111084
    5. '   ' → logprob: -9.51480770111084
    6. ' ' → logprob: -11.26480770111084
    7. '1' → logprob: -12.51480770111084
    8. ' in' → logprob: -12.95230770111084
    9. 'i' → logprob: -13.07730770111084
    10. '       ' → logprob: -13.20230770111084

Token 1706: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10071103274822235
    2. 'in' → logprob: -2.3507111072540283
    3. 'd' → logprob: -8.10071086883545
    4. 'range' → logprob: -8.60071086883545
    5. ' range' → logprob: -11.60071086883545
    6. '(d' → logprob: -13.35071086883545
    7. '   ' → logprob: -13.35071086883545
    8. 'import' → logprob: -14.22571086883545
    9. ',d' → logprob: -14.60071086883545
    10. '1' → logprob: -14.85071086883545

Token 1707: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20543263852596283
    2. 'd' → logprob: -1.705432653427124
    3. ' range' → logprob: -5.580432415008545
    4. 'r' → logprob: -9.705432891845703
    5. ' dmg' → logprob: -9.955432891845703
    6. '   ' → logprob: -10.205432891845703
    7. 'dm' → logprob: -10.830432891845703
    8. 'rang' → logprob: -11.080432891845703
    9. '(range' → logprob: -11.830432891845703
    10. 'rng' → logprob: -12.080432891845703

Token 1708: '(d' (ID: 2572)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0005551783833652735
    2. '(d' → logprob: -8.250555038452148
    3. '   ' → logprob: -8.750555038452148
    4. '1' → logprob: -9.750555038452148
    5. '0' → logprob: -10.625555038452148
    6. ' dmg' → logprob: -10.875555038452148
    7. '(' → logprob: -11.625555038452148
    8. '       ' → logprob: -12.000555038452148
    9. ' ' → logprob: -12.125555038452148
    10. 'dm' → logprob: -12.875555038452148

Token 1709: 'mg' (ID: 15026)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0039087263867259026
    2. '   ' → logprob: -5.878908634185791
    3. 'mp' → logprob: -7.503908634185791
    4. '=d' → logprob: -8.50390911102295
    5. 'dm' → logprob: -9.50390911102295
    6. ' ' → logprob: -10.25390911102295
    7. '=' → logprob: -10.25390911102295
    8. '       ' → logprob: -10.37890911102295
    9. ' dmg' → logprob: -10.75390911102295
    10. ',' → logprob: -10.87890911102295

Token 1710: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013358361320570111
    2. ',max' → logprob: -6.876335620880127
    3. ',d' → logprob: -8.876336097717285
    4. ' ,' → logprob: -9.001336097717285
    5. '   ' → logprob: -11.376336097717285
    6. ',
' → logprob: -12.251336097717285
    7. ',len' → logprob: -12.251336097717285
    8. ',m' → logprob: -12.751336097717285
    9. '=' → logprob: -12.751336097717285
    10. '       ' → logprob: -13.126336097717285

Token 1711: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -2.8206473871250637e-05
    2. ' max' → logprob: -10.500028610229492
    3. '(max' → logprob: -14.375028610229492
    4. '   ' → logprob: -16.875028610229492
    5. '
' → logprob: -18.000028610229492
    6. ',max' → logprob: -18.125028610229492
    7. '[max' → logprob: -18.125028610229492
    8. '	max' → logprob: -18.625028610229492
    9. '           ' → logprob: -18.875028610229492
    10. 'MAX' → logprob: -19.125028610229492

Token 1712: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -7.107425062713446e-06
    2. '+' → logprob: -12.500006675720215
    3. '   ' → logprob: -13.375006675720215
    4. ',' → logprob: -14.625006675720215
    5. '1' → logprob: -14.875006675720215
    6. '0' → logprob: -15.250006675720215
    7. 'P' → logprob: -16.25000762939453
    8. '=' → logprob: -16.50000762939453
    9. '```' → logprob: -16.50000762939453
    10. '_HP' → logprob: -16.50000762939453

Token 1713: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000556843588128686
    2. ' +' → logprob: -7.500556945800781
    3. '   ' → logprob: -13.250556945800781
    4. '+
' → logprob: -14.375556945800781
    5. '       ' → logprob: -14.625556945800781
    6. '[' → logprob: -15.500556945800781
    7. ',' → logprob: -15.750556945800781
    8. '
' → logprob: -15.875556945800781
    9. ')+' → logprob: -16.12555694580078
    10. '):
' → logprob: -16.25055694580078

Token 1714: '1' (ID: 16)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.31851643323898315
    2. '1' → logprob: -1.443516492843628
    3. '+' → logprob: -3.443516492843628
    4. 'd' → logprob: -6.568516254425049
    5. '(max' → logprob: -6.943516254425049
    6. '100' → logprob: -7.818516254425049
    7. ' max' → logprob: -7.943516254425049
    8. '   ' → logprob: -7.943516254425049
    9. '       ' → logprob: -8.318516731262207
    10. 'dp' → logprob: -8.568516731262207

Token 1715: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5593295097351074
    2. '               ' → logprob: -1.0593295097351074
    3. ':' → logprob: -3.0593295097351074
    4. '):
' → logprob: -3.4343295097351074
    5. '           ' → logprob: -6.684329509735107
    6. ']:
' → logprob: -8.059329986572266
    7. '):' → logprob: -8.184329986572266
    8. '():
' → logprob: -8.684329986572266
    9. '=' → logprob: -9.184329986572266
    10. '       ' → logprob: -9.309329986572266

Token 1716: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.4656579120783135e-05
    2. ' if' → logprob: -11.125044822692871
    3. '```' → logprob: -11.875044822692871
    4. '           ' → logprob: -12.625044822692871
    5. '			' → logprob: -12.625044822692871
    6. '	           ' → logprob: -12.750044822692871
    7. '                   ' → logprob: -13.125044822692871
    8. '		       ' → logprob: -13.250044822692871
    9. ':' → logprob: -13.500044822692871
    10. '<|end|>' → logprob: -13.750044822692871

Token 1717: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02965860813856125
    2. ' if' → logprob: -4.404658794403076
    3. 'dp' → logprob: -4.529658794403076
    4. '           ' → logprob: -5.404658794403076
    5. '               ' → logprob: -7.529658794403076
    6. 'prev' → logprob: -7.779658794403076
    7. 'new' → logprob: -7.904658794403076
    8. '                   ' → logprob: -9.279658317565918
    9. '   ' → logprob: -9.404658317565918
    10. 'while' → logprob: -9.904658317565918

Token 1718: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003182348096743226
    2. ' dp' → logprob: -5.753182411193848
    3. '               ' → logprob: -13.628182411193848
    4. '	dp' → logprob: -13.628182411193848
    5. '(dp' → logprob: -14.003182411193848
    6. '           ' → logprob: -14.378182411193848
    7. '   ' → logprob: -14.753182411193848
    8. '                   ' → logprob: -15.128182411193848
    9. '       ' → logprob: -16.37818145751953
    10. '_dp' → logprob: -16.75318145751953

Token 1719: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.0008059371029958129
    2. 'd' → logprob: -7.125805854797363
    3. '   ' → logprob: -14.875805854797363
    4. '[' → logprob: -15.000805854797363
    5. 'dp' → logprob: -15.000805854797363
    6. '	d' → logprob: -16.37580680847168
    7. '                   ' → logprob: -16.37580680847168
    8. '       ' → logprob: -16.62580680847168
    9. '           ' → logprob: -16.75080680847168
    10. '               ' → logprob: -16.87580680847168

Token 1720: '-d' (ID: 2469)
  Prédit: '-d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-d' → logprob: -0.1375831961631775
    2. ']' → logprob: -3.2625832557678223
    3. '>' → logprob: -3.5125832557678223
    4. ' -' → logprob: -4.012583255767822
    5. ']>' → logprob: -4.137583255767822
    6. '-' → logprob: -4.887583255767822
    7. ' >' → logprob: -4.887583255767822
    8. '>d' → logprob: -5.012583255767822
    9. '   ' → logprob: -6.512583255767822
    10. 'd' → logprob: -6.887583255767822

Token 1721: 'mg' (ID: 15026)
  Prédit: 'mg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mg' → logprob: -0.01224709115922451
    2. 'd' → logprob: -5.012247085571289
    3. '-d' → logprob: -5.637247085571289
    4. 'mp' → logprob: -6.637247085571289
    5. 'mage' → logprob: -8.637247085571289
    6. 'm' → logprob: -9.262247085571289
    7. '-m' → logprob: -9.887247085571289
    8. ']' → logprob: -10.012247085571289
    9. 'mag' → logprob: -10.637247085571289
    10. 'mig' → logprob: -10.887247085571289

Token 1722: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010774685069918633
    2. ']+' → logprob: -6.876077651977539
    3. ' +' → logprob: -11.001077651977539
    4. '+' → logprob: -11.001077651977539
    5. ' ]' → logprob: -11.876077651977539
    6. '[' → logprob: -13.501077651977539
    7. ')' → logprob: -14.001077651977539
    8. '']' → logprob: -14.626077651977539
    9. '+]' → logprob: -14.626077651977539
    10. '```' → logprob: -15.251077651977539

Token 1723: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47407910227775574
    2. '+' → logprob: -0.9740791320800781
    3. '[' → logprob: -13.849079132080078
    4. ']' → logprob: -14.849079132080078
    5. '<' → logprob: -15.349079132080078
    6. ']+' → logprob: -15.599079132080078
    7. ' <' → logprob: -16.724079132080078
    8. ')' → logprob: -16.724079132080078
    9. '>' → logprob: -16.974079132080078
    10. ' ' → logprob: -17.099079132080078

Token 1724: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.048589304089546204
    2. ' mp' → logprob: -3.0485892295837402
    3. '(mp' → logprob: -14.173589706420898
    4. '	mp' → logprob: -14.673589706420898
    5. '1' → logprob: -15.298589706420898
    6. '```' → logprob: -15.298589706420898
    7. '`' → logprob: -16.7985897064209
    8. 'MP' → logprob: -17.0485897064209
    9. '_mp' → logprob: -17.0485897064209
    10. 'pm' → logprob: -17.0485897064209

Token 1725: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4740898013114929
    2. '<' → logprob: -0.9740898013114929
    3. '                   ' → logprob: -12.349089622497559
    4. '<p' → logprob: -13.474089622497559
    5. '<n' → logprob: -13.724089622497559
    6. '<th' → logprob: -13.974089622497559
    7. '[' → logprob: -14.349089622497559
    8. '               ' → logprob: -14.849089622497559
    9. '<int' → logprob: -14.849089622497559
    10. '```' → logprob: -14.849089622497559

Token 1726: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0019308974733576179
    2. ' dp' → logprob: -6.2519307136535645
    3. 'd' → logprob: -13.251931190490723
    4. '```' → logprob: -15.626931190490723
    5. '	dp' → logprob: -15.876931190490723
    6. '           ' → logprob: -16.376930236816406
    7. '_dp' → logprob: -16.501930236816406
    8. '(dp' → logprob: -16.751930236816406
    9. '               ' → logprob: -18.501930236816406
    10. '.dp' → logprob: -18.876930236816406

Token 1727: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.16029509902000427
    2. 'd' → logprob: -1.9102951288223267
    3. ' d' → logprob: -9.660295486450195
    4. '```' → logprob: -12.785295486450195
    5. '	d' → logprob: -13.160295486450195
    6. '[' → logprob: -13.660295486450195
    7. '   ' → logprob: -15.160295486450195
    8. ' [' → logprob: -15.535295486450195
    9. '(d' → logprob: -15.535295486450195
    10. '           ' → logprob: -16.035295486450195

Token 1728: ']:
' (ID: 22152)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10857190191745758
    2. ']:
' → logprob: -2.483572006225586
    3. ':
' → logprob: -4.983572006225586
    4. ']:' → logprob: -5.233572006225586
    5. ':' → logprob: -6.358572006225586
    6. ']' → logprob: -6.483572006225586
    7. ']=' → logprob: -6.608572006225586
    8. '               ' → logprob: -6.983572006225586
    9. '=' → logprob: -7.233572006225586
    10. 'd' → logprob: -8.483572006225586

Token 1729: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07073899358510971
    2. '=' → logprob: -3.0707390308380127
    3. ' =' → logprob: -3.9457390308380127
    4. '                       ' → logprob: -6.570738792419434
    5. ':' → logprob: -7.945738792419434
    6. '               ' → logprob: -8.320738792419434
    7. 'dp' → logprob: -8.820738792419434
    8. '```' → logprob: -9.195738792419434
    9. '                    ' → logprob: -9.320738792419434
    10. ':
' → logprob: -9.945738792419434

Token 1730: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0008788274135440588
    2. ' dp' → logprob: -7.375878810882568
    3. 'd' → logprob: -9.125879287719727
    4. '                   ' → logprob: -9.500879287719727
    5. '```' → logprob: -10.125879287719727
    6. '                       ' → logprob: -11.250879287719727
    7. '_dp' → logprob: -12.125879287719727
    8. '(dp' → logprob: -12.500879287719727
    9. '	dp' → logprob: -12.625879287719727
    10. '               ' → logprob: -14.000879287719727

Token 1731: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.1201636865735054
    2. '=' → logprob: -2.370163679122925
    3. '=d' → logprob: -4.120163917541504
    4. 'd' → logprob: -5.995163917541504
    5. ' =' → logprob: -7.370163917541504
    6. ']=' → logprob: -8.870163917541504
    7. ']' → logprob: -8.995163917541504
    8. '```' → logprob: -10.245163917541504
    9. '=
' → logprob: -10.495163917541504
    10. '[' → logprob: -10.620163917541504

Token 1732: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06854309886693954
    2. ']' → logprob: -3.4435431957244873
    3. ' =' → logprob: -4.068542957305908
    4. ']=' → logprob: -4.068542957305908
    5. 'd' → logprob: -10.443543434143066
    6. '=d' → logprob: -11.443543434143066
    7. '=
' → logprob: -11.568543434143066
    8. '                   ' → logprob: -11.693543434143066
    9. '```' → logprob: -11.693543434143066
    10. ' ]' → logprob: -11.943543434143066

Token 1733: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002019907406065613
    2. ' =' → logprob: -8.625202178955078
    3. ']=' → logprob: -11.375202178955078
    4. '=d' → logprob: -12.625202178955078
    5. '=
' → logprob: -12.875202178955078
    6. '                   ' → logprob: -13.125202178955078
    7. '                       ' → logprob: -13.375202178955078
    8. ']' → logprob: -15.000202178955078
    9. '=True' → logprob: -15.500202178955078
    10. '```' → logprob: -15.875202178955078

Token 1734: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00318163656629622
    2. ' dp' → logprob: -5.753181457519531
    3. '                   ' → logprob: -12.753181457519531
    4. '	dp' → logprob: -14.253181457519531
    5. '(dp' → logprob: -15.878181457519531
    6. '                       ' → logprob: -15.878181457519531
    7. '   ' → logprob: -16.37818145751953
    8. '               ' → logprob: -16.75318145751953
    9. '           ' → logprob: -17.37818145751953
    10. '                           ' → logprob: -17.62818145751953

Token 1735: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.008783090859651566
    2. 'd' → logprob: -4.758782863616943
    3. '-d' → logprob: -10.008783340454102
    4. '[' → logprob: -10.633783340454102
    5. '   ' → logprob: -10.758783340454102
    6. 'dp' → logprob: -11.258783340454102
    7. ' d' → logprob: -12.008783340454102
    8. '    ' → logprob: -12.133783340454102
    9. '\d' → logprob: -12.133783340454102
    10. '               ' → logprob: -12.258783340454102

Token 1736: '-d' (ID: 2469)
  Prédit: '-d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-d' → logprob: -0.00026860725483857095
    2. ' -' → logprob: -8.250268936157227
    3. 'd' → logprob: -12.125268936157227
    4. '   ' → logprob: -14.125268936157227
    5. '       ' → logprob: -15.000268936157227
    6. '      ' → logprob: -16.125268936157227
    7. '[' → logprob: -16.125268936157227
    8. ' ' → logprob: -16.250268936157227
    9. '[d' → logprob: -16.250268936157227
    10. '    ' → logprob: -16.500268936157227

Token 1737: 'mg' (ID: 15026)
  Prédit: 'mg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mg' → logprob: -2.546478935983032e-05
    2. 'mag' → logprob: -11.375025749206543
    3. 'mage' → logprob: -12.500025749206543
    4. 'mp' → logprob: -13.000025749206543
    5. 'd' → logprob: -13.250025749206543
    6. 'kg' → logprob: -13.375025749206543
    7. '-d' → logprob: -13.500025749206543
    8. ' mg' → logprob: -14.375025749206543
    9. 'm' → logprob: -14.625025749206543
    10. 'msg' → logprob: -15.125025749206543

Token 1738: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8494881987571716
    2. '+' → logprob: -0.9744881987571716
    3. ']' → logprob: -1.7244882583618164
    4. ']+' → logprob: -4.099488258361816
    5. '                   ' → logprob: -10.099488258361816
    6. '```' → logprob: -10.599488258361816
    7. ' ]' → logprob: -11.224488258361816
    8. '   ' → logprob: -11.599488258361816
    9. '+]' → logprob: -11.849488258361816
    10. '               ' → logprob: -12.099488258361816

Token 1739: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38694190979003906
    2. ' +' → logprob: -1.136941909790039
    3. ']' → logprob: -10.761941909790039
    4. '```' → logprob: -11.136941909790039
    5. '[' → logprob: -11.261941909790039
    6. ']+' → logprob: -11.886941909790039
    7. '   ' → logprob: -12.136941909790039
    8. 'mp' → logprob: -13.261941909790039
    9. '`' → logprob: -13.386941909790039
    10. '               ' → logprob: -14.011941909790039

Token 1740: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.011048054322600365
    2. ' mp' → logprob: -4.511047840118408
    3. '(mp' → logprob: -15.636048316955566
    4. '	mp' → logprob: -16.13604736328125
    5. 'pm' → logprob: -17.88604736328125
    6. '/mp' → logprob: -18.01104736328125
    7. '_mp' → logprob: -18.13604736328125
    8. 'dp' → logprob: -19.76104736328125
    9. '.mp' → logprob: -20.26104736328125
    10. 'mpi' → logprob: -21.38604736328125

Token 1741: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1742: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0743739902973175
    2. '
' → logprob: -3.074373960494995
    3. '<|end|>' → logprob: -4.199374198913574
    4. ' for' → logprob: -4.949374198913574
    5. '   ' → logprob: -6.699374198913574
    6. 'for' → logprob: -6.699374198913574
    7. '        
' → logprob: -8.574374198913574
    8. '<|end|>' → logprob: -8.949374198913574
    9. '        ' → logprob: -9.074374198913574
    10. ')' → logprob: -9.699374198913574

Token 1743: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016606442630290985
    2. '
' → logprob: -4.391606330871582
    3. 'for' → logprob: -5.766606330871582
    4. ' for' → logprob: -7.391606330871582
    5. '   ' → logprob: -8.266606330871582
    6. '#' (adapté à ' #') → logprob: -10.766606330871582
    7. '           ' → logprob: -11.016606330871582
    8. '        
' → logprob: -11.266606330871582
    9. '```' → logprob: -11.516606330871582
    10. '<|end|>' → logprob: -11.891606330871582

Token 1744: ' Now' (ID: 6549)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07271236926317215
    2. '<|end|>' → logprob: -3.9477124214172363
    3. ' for' → logprob: -4.072712421417236
    4. ')' → logprob: -4.697712421417236
    5. 'for' → logprob: -4.697712421417236
    6. ':' → logprob: -5.572712421417236
    7. '   ' → logprob: -5.822712421417236
    8. '           ' → logprob: -6.572712421417236
    9. ':
' → logprob: -6.572712421417236
    10. '
' → logprob: -6.947712421417236

Token 1745: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11478695273399353
    2. 'best' → logprob: -3.1147868633270264
    3. '       ' → logprob: -3.2397868633270264
    4. 'min' → logprob: -4.8647871017456055
    5. 'res' → logprob: -4.9897871017456055
    6. ' for' → logprob: -5.2397871017456055
    7. 'result' → logprob: -6.1147871017456055
    8. '#' → logprob: -6.9897871017456055
    9. 'dp' → logprob: -7.1147871017456055
    10. 'ans' → logprob: -8.614787101745605

Token 1746: '[d' (ID: 48377)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5183029770851135
    2. ' =' → logprob: -1.1433029174804688
    3. '[' → logprob: -3.8933029174804688
    4. ']' → logprob: -3.8933029174804688
    5. '```' → logprob: -4.018302917480469
    6. '=[' → logprob: -5.643302917480469
    7. '#' → logprob: -6.018302917480469
    8. ' is' → logprob: -6.018302917480469
    9. ')' → logprob: -6.268302917480469
    10. 'for' → logprob: -6.393302917480469

Token 1747: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7470685243606567
    2. '[d' → logprob: -0.8720685243606567
    3. '[' → logprob: -3.372068405151367
    4. '=' → logprob: -3.497068405151367
    5. ' =' → logprob: -3.497068405151367
    6. 'd' → logprob: -5.747068405151367
    7. ']=' → logprob: -6.247068405151367
    8. '   ' → logprob: -6.622068405151367
    9. ' ]' → logprob: -6.872068405151367
    10. '=d' → logprob: -6.872068405151367

Token 1748: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6263655424118042
    2. ' =' → logprob: -2.0013656616210938
    3. 'for' → logprob: -2.7513656616210938
    4. '```' → logprob: -3.2513656616210938
    5. ']' → logprob: -3.3763656616210938
    6. '#' → logprob: -4.001365661621094
    7. ' for' → logprob: -4.251365661621094
    8. '[' → logprob: -4.251365661621094
    9. 'min' → logprob: -4.376365661621094
    10. '[min' → logprob: -4.751365661621094

Token 1749: ' minimal' (ID: 19957)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.611129641532898
    2. 'dp' → logprob: -0.986129641532898
    3. ' min' → logprob: -2.9861297607421875
    4. ' dp' → logprob: -3.9861297607421875
    5. 'minimal' → logprob: -5.7361297607421875
    6. '[min' → logprob: -5.9861297607421875
    7. 'minimum' → logprob: -6.3611297607421875
    8. '[' → logprob: -6.4861297607421875
    9. '0' → logprob: -6.7361297607421875
    10. 'INF' → logprob: -6.7361297607421875

Token 1750: ' all' (ID: 722)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.2287660390138626
    2. ' cost' → logprob: -1.9787660837173462
    3. ']' → logprob: -3.9787659645080566
    4. 'dp' → logprob: -4.103765964508057
    5. '_cost' → logprob: -4.603765964508057
    6. 'mp' → logprob: -6.103765964508057
    7. ' ]' → logprob: -6.103765964508057
    8. ' =' → logprob: -6.353765964508057
    9. ' dp' → logprob: -6.603765964508057
    10. '       ' → logprob: -6.728765964508057

Token 1751: '-target' (ID: 40350)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.004793703090399504
    2. ']' → logprob: -7.004793643951416
    3. '_s' → logprob: -7.004793643951416
    4. '
' → logprob: -7.379793643951416
    5. '```' → logprob: -7.504793643951416
    6. '_spell' → logprob: -7.629793643951416
    7. '_dp' → logprob: -8.379794120788574
    8. '_damage' → logprob: -8.629794120788574
    9. '_cost' → logprob: -8.754794120788574
    10. 'sp' → logprob: -9.004794120788574

Token 1752: ' spells' (ID: 69967)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sp' → logprob: -1.080647587776184
    2. '_mp' → logprob: -1.455647587776184
    3. '_cost' → logprob: -1.455647587776184
    4. '_dp' → logprob: -2.2056474685668945
    5. '_usage' → logprob: -2.9556474685668945
    6. '_spell' → logprob: -4.3306474685668945
    7. '_damage' → logprob: -5.0806474685668945
    8. '```' → logprob: -5.3306474685668945
    9. ']' → logprob: -6.7056474685668945
    10. ']_' → logprob: -6.9556474685668945

Token 1753: ' MP' (ID: 14857)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -1.2886998653411865
    2. ' usage' → logprob: -1.6636998653411865
    3. '_cost' → logprob: -2.1636998653411865
    4. '_usage' → logprob: -2.5386998653411865
    5. 'cost' → logprob: -2.6636998653411865
    6. ']' → logprob: -2.6636998653411865
    7. '       ' → logprob: -3.0386998653411865
    8. '   ' → logprob: -3.1636998653411865
    9. ' used' → logprob: -4.038700103759766
    10. 'usage' → logprob: -4.163700103759766

Token 1754: ' cost' (ID: 3097)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28438740968704224
    2. '<|end|>' → logprob: -1.9093873500823975
    3. ' for' → logprob: -2.9093873500823975
    4. '
' → logprob: -3.9093873500823975
    5. '<|end|>' → logprob: -4.784387588500977
    6. 'for' → logprob: -5.159387588500977
    7. ')' → logprob: -5.659387588500977
    8. '   ' → logprob: -6.034387588500977
    9. ' ' → logprob: -7.409387588500977
    10. '\n' → logprob: -7.534387588500977

Token 1755: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01761692389845848
    2. '
' → logprob: -4.5176167488098145
    3. '<|end|>' → logprob: -5.7676167488098145
    4. ' for' → logprob: -6.8926167488098145
    5. '   ' → logprob: -7.2676167488098145
    6. ')' → logprob: -7.7676167488098145
    7. 'for' → logprob: -7.8926167488098145
    8. '<|end|>' → logprob: -8.642617225646973
    9. ',' → logprob: -9.017617225646973
    10. '#' → logprob: -9.142617225646973

Token 1756: ' do' (ID: 621)
  Prédit: 'deal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deal' → logprob: -0.8900859355926514
    2. ' achieve' → logprob: -1.2650859355926514
    3. 'ach' → logprob: -2.1400859355926514
    4. 'reach' → logprob: -2.7650859355926514
    5. 'get' → logprob: -2.8900859355926514
    6. ' deal' → logprob: -3.6400859355926514
    7. ' reach' → logprob: -4.0150861740112305
    8. 'apply' → logprob: -4.2650861740112305
    9. ' get' → logprob: -4.5150861740112305
    10. 'make' → logprob: -8.14008617401123

Token 1757: ' damage' (ID: 10364)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1186856031417847
    2. 'for' → logprob: -1.3686856031417847
    3. '       ' → logprob: -1.8686856031417847
    4. '```' → logprob: -1.8686856031417847
    5. ' for' → logprob: -3.743685722351074
    6. '[' → logprob: -3.743685722351074
    7. '#' → logprob: -4.743685722351074
    8. '           ' → logprob: -4.743685722351074
    9. 'max' → logprob: -4.993685722351074
    10. '   ' → logprob: -5.118685722351074

Token 1758: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024690328165888786
    2. ' for' → logprob: -5.0246901512146
    3. '
' → logprob: -5.1496901512146
    4. '<|end|>' → logprob: -5.2746901512146
    5. 'for' → logprob: -6.0246901512146
    6. ')' → logprob: -6.5246901512146
    7. '   ' → logprob: -6.8996901512146
    8. '[' → logprob: -7.7746901512146
    9. '<|end|>' → logprob: -8.024690628051758
    10. '        
' → logprob: -8.899690628051758

Token 1759: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1760: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.005937566980719566
    2. ' all' → logprob: -5.130937576293945
    3. 'the' → logprob: -13.380937576293945
    4. '`' → logprob: -13.380937576293945
    5. 'everyone' → logprob: -13.505937576293945
    6. 'd' → logprob: -13.755937576293945
    7. '```' → logprob: -14.005937576293945
    8. 'each' → logprob: -14.130937576293945
    9. '[' → logprob: -15.005937576293945
    10. '_all' → logprob: -15.130937576293945

Token 1761: ' monsters' (ID: 59311)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17663630843162537
    2. '
' → logprob: -2.176636219024658
    3. '<|end|>' → logprob: -3.176636219024658
    4. '<|end|>' → logprob: -5.801636219024658
    5. '        
' → logprob: -7.301636219024658
    6. ')' → logprob: -7.301636219024658
    7. '   ' → logprob: -7.301636219024658
    8. ' for' → logprob: -8.176636695861816
    9. ',' → logprob: -8.176636695861816
    10. '\n' → logprob: -8.551636695861816

Token 1762: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012689521536231041
    2. '
' → logprob: -4.387689590454102
    3. '        
' → logprob: -9.637689590454102
    4. ',' → logprob: -10.762689590454102
    5. ' for' → logprob: -11.137689590454102
    6. '   ' → logprob: -11.137689590454102
    7. '```' → logprob: -11.262689590454102
    8. 'for' → logprob: -11.512689590454102
    9. '           ' → logprob: -11.512689590454102
    10. '<|end|>' → logprob: -12.137689590454102

Token 1763: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016182051971554756
    2. '
' → logprob: -4.141181945800781
    3. 'for' → logprob: -9.641181945800781
    4. '```' → logprob: -10.016181945800781
    5. '   ' → logprob: -11.016181945800781
    6. '        
' → logprob: -11.641181945800781
    7. ' for' → logprob: -12.016181945800781
    8. '           ' → logprob: -13.016181945800781
    9. '#' → logprob: -14.016181945800781
    10. 'import' → logprob: -14.391181945800781

Token 1764: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08286376297473907
    2. 'for' → logprob: -3.3328638076782227
    3. 'res' → logprob: -3.8328638076782227
    4. 'best' → logprob: -4.582863807678223
    5. 'result' → logprob: -5.332863807678223
    6. 'ans' → logprob: -6.332863807678223
    7. 'min' → logprob: -6.582863807678223
    8. 'total' → logprob: -7.082863807678223
    9. 'answer' → logprob: -7.082863807678223
    10. '#' (adapté à ' #') → logprob: -7.332863807678223

Token 1765: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09778028726577759
    2. ':' → logprob: -2.722780227661133
    3. 'for' → logprob: -5.097780227661133
    4. ' for' → logprob: -5.222780227661133
    5. ':
' → logprob: -5.722780227661133
    6. '[' → logprob: -5.722780227661133
    7. ')' → logprob: -6.347780227661133
    8. '   ' → logprob: -6.847780227661133
    9. '           ' → logprob: -7.097780227661133
    10. ']' → logprob: -7.222780227661133

Token 1766: ' each' (ID: 2454)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.23266303539276123
    2. 'D' → logprob: -1.7326630353927612
    3. 'res' → logprob: -3.607663154602051
    4. 'damage' → logprob: -5.982663154602051
    5. 'left' → logprob: -7.857663154602051
    6. ' d' → logprob: -9.23266315460205
    7. 'all' → logprob: -9.48266315460205
    8. 'i' → logprob: -9.48266315460205
    9. 'remaining' → logprob: -9.73266315460205
    10. 'r' → logprob: -9.85766315460205

Token 1767: ' possible' (ID: 4149)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.011018230579793453
    2. 'D' → logprob: -5.6360182762146
    3. 'res' → logprob: -5.6360182762146
    4. ' d' → logprob: -5.8860182762146
    5. 'i' → logprob: -7.8860182762146
    6. 'damage' → logprob: -8.136017799377441
    7. ' residual' → logprob: -8.886017799377441
    8. 'hp' → logprob: -10.136017799377441
    9. 'possible' → logprob: -10.636017799377441
    10. 'HP' → logprob: -10.761017799377441

Token 1768: ' damage' (ID: 10364)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0038861767388880253
    2. ' d' → logprob: -6.2538862228393555
    3. 'D' → logprob: -6.5038862228393555
    4. 'damage' → logprob: -7.8788862228393555
    5. '   ' → logprob: -10.628886222839355
    6. '_d' → logprob: -11.253886222839355
    7. ' D' → logprob: -11.753886222839355
    8. ' damage' → logprob: -11.878886222839355
    9. '```' → logprob: -12.128886222839355
    10. 'dp' → logprob: -12.628886222839355

Token 1769: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.025084514170885086
    2. 'in' → logprob: -4.275084495544434
    3. ' in' → logprob: -4.650084495544434
    4. ' d' → logprob: -6.900084495544434
    5. 'D' → logprob: -8.775084495544434
    6. '   ' → logprob: -10.525084495544434
    7. '_d' → logprob: -10.650084495544434
    8. 'value' → logprob: -10.775084495544434
    9. 'amount' → logprob: -11.275084495544434
    10. ',' → logprob: -11.400084495544434

Token 1770: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6945702433586121
    2. ' in' → logprob: -0.6945702433586121
    3. '       ' → logprob: -7.944570064544678
    4. ',' → logprob: -8.319570541381836
    5. ':
' → logprob: -8.319570541381836
    6. ':' → logprob: -8.444570541381836
    7. 'd' → logprob: -8.569570541381836
    8. '   ' → logprob: -9.819570541381836
    9. 'for' → logprob: -10.569570541381836
    10. '
' → logprob: -10.944570541381836

Token 1771: ' compute' (ID: 23864)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5420020222663879
    2. ' residual' → logprob: -1.2920019626617432
    3. '       ' → logprob: -2.792001962661743
    4. ' total' → logprob: -3.417001962661743
    5. ' res' → logprob: -4.042002201080322
    6. 'total' → logprob: -4.167002201080322
    7. ' sum' → logprob: -5.667002201080322
    8. ' single' → logprob: -5.792002201080322
    9. 'sum' → logprob: -5.917002201080322
    10. ' best' → logprob: -6.792002201080322

Token 1772: ' total' (ID: 3609)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8180379867553711
    2. 'total' → logprob: -0.8180379867553711
    3. 'cost' → logprob: -2.568037986755371
    4. '   ' → logprob: -4.693037986755371
    5. 'best' → logprob: -4.818037986755371
    6. 'single' → logprob: -5.318037986755371
    7. ' total' → logprob: -5.318037986755371
    8. 'remaining' → logprob: -5.943037986755371
    9. 'sum' → logprob: -6.318037986755371
    10. '```' → logprob: -6.568037986755371

Token 1773: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5265453457832336
    2. '_cost' → logprob: -1.5265452861785889
    3. 'single' → logprob: -3.026545286178589
    4. 'res' → logprob: -3.151545286178589
    5. ' cost' → logprob: -3.651545286178589
    6. '_single' → logprob: -3.651545286178589
    7. '_mp' → logprob: -4.526545524597168
    8. '_res' → logprob: -4.776545524597168
    9. ' single' → logprob: -5.276545524597168
    10. 'mp' → logprob: -5.276545524597168

Token 1774: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003767424263060093
    2. ' for' → logprob: -7.128767490386963
    3. ',' → logprob: -7.253767490386963
    4. 'for' → logprob: -7.253767490386963
    5. '```' → logprob: -8.003767013549805
    6. '
' → logprob: -8.128767013549805
    7. 'total' → logprob: -9.128767013549805
    8. '   ' → logprob: -9.128767013549805
    9. ' =' → logprob: -9.253767013549805
    10. ':' → logprob: -9.503767013549805

Token 1775: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11129862815141678
    2. 'sum' → logprob: -2.3612985610961914
    3. ' dp' → logprob: -5.111298561096191
    4. 'min' → logprob: -6.361298561096191
    5. ' sum' → logprob: -6.361298561096191
    6. '   ' → logprob: -7.111298561096191
    7. 'total' → logprob: -8.111298561096191
    8. '```' → logprob: -9.861298561096191
    9. 'cost' → logprob: -9.986298561096191
    10. '(dp' → logprob: -10.111298561096191

Token 1776: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.08132229000329971
    2. '[' → logprob: -3.081322193145752
    3. '       ' → logprob: -4.956322193145752
    4. ' +' → logprob: -5.206322193145752
    5. '   ' → logprob: -5.706322193145752
    6. 'd' → logprob: -5.706322193145752
    7. ' [' → logprob: -5.831322193145752
    8. 'sum' → logprob: -6.581322193145752
    9. '
' → logprob: -6.581322193145752
    10. ' =' → logprob: -7.081322193145752

Token 1777: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0505625382065773
    2. '+' → logprob: -3.050562620162964
    3. ']' → logprob: -6.425562381744385
    4. ']+' → logprob: -8.300562858581543
    5. ')' → logprob: -10.300562858581543
    6. ' +
' → logprob: -10.425562858581543
    7. '+
' → logprob: -11.050562858581543
    8. ' plus' → logprob: -12.300562858581543
    9. ')+' → logprob: -12.425562858581543
    10. '
' → logprob: -12.425562858581543

Token 1778: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7964221835136414
    2. '+' → logprob: -1.2964222431182861
    3. ' +' → logprob: -1.9214222431182861
    4. 'for' → logprob: -2.421422243118286
    5. '```' → logprob: -4.171422004699707
    6. '
' → logprob: -5.046422004699707
    7. ' for' → logprob: -5.796422004699707
    8. '+d' → logprob: -5.921422004699707
    9. 'import' → logprob: -6.296422004699707
    10. '   ' → logprob: -6.671422004699707

Token 1779: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.10058921575546265
    2. ' sum' → logprob: -2.3505892753601074
    3. '(sum' → logprob: -8.10058879852295
    4. '   ' → logprob: -10.60058879852295
    5. 'max' → logprob: -11.10058879852295
    6. '
' → logprob: -11.47558879852295
    7. '=sum' → logprob: -11.72558879852295
    8. 'min' → logprob: -12.35058879852295
    9. '```' → logprob: -12.97558879852295
    10. '       ' → logprob: -12.97558879852295

Token 1780: ' over' (ID: 1072)
  Prédit: '(best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(best' → logprob: -1.0473638772964478
    2. '(max' → logprob: -1.5473638772964478
    3. 'best' → logprob: -1.7973638772964478
    4. '(' → logprob: -1.9223638772964478
    5. '[' → logprob: -3.047363758087158
    6. '[max' → logprob: -4.047363758087158
    7. '_best' → logprob: -4.422363758087158
    8. 'max' → logprob: -4.672363758087158
    9. '(
' → logprob: -5.172363758087158
    10. '([' → logprob: -5.172363758087158

Token 1781: ' monsters' (ID: 59311)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009804966859519482
    2. ' i' → logprob: -5.134805202484131
    3. 'best' → logprob: -6.384805202484131
    4. '[i' → logprob: -6.509805202484131
    5. 'range' → logprob: -8.509804725646973
    6. '[' → logprob: -8.884804725646973
    7. '(i' → logprob: -9.009804725646973
    8. 'max' → logprob: -9.759804725646973
    9. ' best' → logprob: -9.759804725646973
    10. '   ' → logprob: -10.009804725646973

Token 1782: ' max' (ID: 2999)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.5434120297431946
    2. '[max' → logprob: -1.6684119701385498
    3. '       ' → logprob: -2.79341197013855
    4. '[' → logprob: -2.91841197013855
    5. ' (' → logprob: -3.91841197013855
    6. '(' → logprob: -4.293412208557129
    7. '(best' → logprob: -4.293412208557129
    8. '           ' → logprob: -4.793412208557129
    9. ' of' → logprob: -4.793412208557129
    10. '```' → logprob: -4.793412208557129

Token 1783: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.896309739408025e-07
    2. '(
' → logprob: -14.500000953674316
    3. '0' → logprob: -16.0
    4. '```' → logprob: -16.125
    5. ' (' → logprob: -17.0
    6. '[' → logprob: -17.625
    7. 'd' → logprob: -18.0
    8. 'def' → logprob: -18.5
    9. '((' → logprob: -18.5
    10. '
' → logprob: -18.75

Token 1784: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3486368656158447
    2. '0' → logprob: -1.2236368656158447
    3. ' (' → logprob: -8.973636627197266
    4. ' ' → logprob: -10.723636627197266
    5. '```' → logprob: -10.973636627197266
    6. '(
' → logprob: -11.723636627197266
    7. 'HP' → logprob: -11.848636627197266
    8. '[' → logprob: -13.223636627197266
    9. 'res' → logprob: -13.348636627197266
    10. 'def' → logprob: -13.473636627197266

Token 1785: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5805010199546814
    2. ',' → logprob: -0.8305010199546814
    3. ',(' → logprob: -5.955501079559326
    4. '(d' → logprob: -7.830501079559326
    5. ' (' → logprob: -7.955501079559326
    6. ' ,' → logprob: -8.330500602722168
    7. '```' → logprob: -8.955500602722168
    8. ',d' → logprob: -9.205500602722168
    9. '       ' → logprob: -9.580500602722168
    10. '(dp' → logprob: -9.705500602722168

Token 1786: ' best' (ID: 1636)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.016835158690810204
    2. ' HP' → logprob: -4.1418352127075195
    3. '(' → logprob: -8.01683521270752
    4. '   ' → logprob: -9.14183521270752
    5. 'hp' → logprob: -9.26683521270752
    6. ' (' → logprob: -10.01683521270752
    7. '       ' → logprob: -10.26683521270752
    8. '```' → logprob: -10.39183521270752
    9. '0' → logprob: -10.64183521270752
    10. '           ' → logprob: -10.76683521270752

Token 1787: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.00012320445966906846
    2. 'single' → logprob: -9.750123023986816
    3. '```' → logprob: -11.000123023986816
    4. '[i' → logprob: -11.625123023986816
    5. '[' → logprob: -11.875123023986816
    6. '[d' → logprob: -12.000123023986816
    7. '_mp' → logprob: -12.250123023986816
    8. '_best' → logprob: -12.250123023986816
    9. '[_' → logprob: -12.750123023986816
    10. '(single' → logprob: -13.750123023986816

Token 1788: '_mp' (ID: 96508)
  Prédit: '_mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mp' → logprob: -1.0087516784551553e-05
    2. 'mp' → logprob: -12.00001049041748
    3. '_hp' → logprob: -13.25001049041748
    4. '_dp' → logprob: -13.50001049041748
    5. '```' → logprob: -14.87501049041748
    6. '_sp' → logprob: -16.875009536743164
    7. '_single' → logprob: -17.125009536743164
    8. 'MP' → logprob: -17.875009536743164
    9. '_MP' → logprob: -17.875009536743164
    10. '_cost' → logprob: -18.000009536743164

Token 1789: ' after' (ID: 1934)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005328982137143612
    2. '[' → logprob: -5.755329132080078
    3. '[d' → logprob: -7.505329132080078
    4. ' [' → logprob: -7.630329132080078
    5. ' -' → logprob: -7.755329132080078
    6. '-' → logprob: -8.255329132080078
    7. '```' → logprob: -9.880329132080078
    8. '   ' → logprob: -9.880329132080078
    9. ')[' → logprob: -10.255329132080078
    10. ')' → logprob: -10.505329132080078

Token 1790: ' reducing' (ID: 25040)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8203313946723938
    2. ' -' → logprob: -0.8203313946723938
    3. '-d' → logprob: -2.695331335067749
    4. 'd' → logprob: -3.320331335067749
    5. 'HP' → logprob: -4.945331573486328
    6. ' d' → logprob: -5.820331573486328
    7. 'damage' → logprob: -6.445331573486328
    8. '-D' → logprob: -6.570331573486328
    9. ' HP' → logprob: -7.820331573486328
    10. ' damage' → logprob: -8.070331573486328

Token 1791: ' HP' (ID: 21979)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.11107846349477768
    2. ' HP' → logprob: -3.1110785007476807
    3. 'd' → logprob: -4.111078262329102
    4. '   ' → logprob: -4.861078262329102
    5. ' their' → logprob: -4.986078262329102
    6. 'their' → logprob: -5.236078262329102
    7. 'hp' → logprob: -5.236078262329102
    8. 'damage' → logprob: -5.236078262329102
    9. '```' → logprob: -5.861078262329102
    10. ' d' → logprob: -6.111078262329102

Token 1792: ' by' (ID: 656)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7066126465797424
    2. '[d' → logprob: -1.3316125869750977
    3. '-' → logprob: -2.3316125869750977
    4. '-d' → logprob: -2.8316125869750977
    5. ' -' → logprob: -3.0816125869750977
    6. '[' → logprob: -4.831612586975098
    7. ')' → logprob: -5.081612586975098
    8. '       ' → logprob: -5.206612586975098
    9. 'd' → logprob: -5.581612586975098
    10. '   ' → logprob: -5.706612586975098

Token 1793: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02605328895151615
    2. ' d' → logprob: -3.9010531902313232
    3. 'all' → logprob: -6.151053428649902
    4. '1' → logprob: -6.901053428649902
    5. ' all' → logprob: -7.026053428649902
    6. 'damage' → logprob: -8.151053428649902
    7. '   ' → logprob: -8.651053428649902
    8. '```' → logprob: -8.776053428649902
    9. '`' → logprob: -8.901053428649902
    10. 'D' → logprob: -9.276053428649902

Token 1794: ')

' (ID: 1029)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9609107375144958
    2. ')' → logprob: -1.3359107971191406
    3. ' -' → logprob: -1.9609107971191406
    4. '-' → logprob: -2.5859107971191406
    5. '[d' → logprob: -3.2109107971191406
    6. ')
' → logprob: -3.8359107971191406
    7. '   ' → logprob: -3.9609107971191406
    8. '[' → logprob: -4.335910797119141
    9. '       ' → logprob: -4.710910797119141
    10. '[
' → logprob: -5.085910797119141

Token 1795: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17315146327018738
    2. '
' → logprob: -2.7981514930725098
    3. 'for' → logprob: -2.7981514930725098
    4. ' for' → logprob: -3.9231514930725098
    5. '   ' → logprob: -6.17315149307251
    6. ']' → logprob: -6.29815149307251
    7. '```' → logprob: -6.42315149307251
    8. ')' → logprob: -6.79815149307251
    9. ':' → logprob: -6.79815149307251
    10. ' =' → logprob: -7.17315149307251

Token 1796: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6383666396141052
    2. 'total' → logprob: -1.51336669921875
    3. 'res' → logprob: -2.13836669921875
    4. 'for' → logprob: -3.63836669921875
    5. 'result' → logprob: -3.76336669921875
    6. 'answer' → logprob: -4.13836669921875
    7. 'best' → logprob: -4.26336669921875
    8. 'cost' → logprob: -4.38836669921875
    9. 'ans' → logprob: -4.51336669921875
    10. '
' → logprob: -4.88836669921875

Token 1797: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5516495704650879
    2. 'res' → logprob: -1.926649570465088
    3. '       ' → logprob: -2.301649570465088
    4. 'result' → logprob: -2.926649570465088
    5. 'best' → logprob: -3.426649570465088
    6. 'min' → logprob: -3.551649570465088
    7. 'answer' → logprob: -3.801649570465088
    8. 'total' → logprob: -4.051649570465088
    9. 'ans' → logprob: -4.176649570465088
    10. ' for' → logprob: -5.801649570465088

Token 1798: ' best' (ID: 1636)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.015442232601344585
    2. 'i' → logprob: -4.765442371368408
    3. 'res' → logprob: -5.515442371368408
    4. 'damage' → logprob: -6.640442371368408
    5. ' d' → logprob: -7.015442371368408
    6. 'hp' → logprob: -9.51544189453125
    7. 'remaining' → logprob: -9.51544189453125
    8. 'D' → logprob: -9.89044189453125
    9. 'HP' → logprob: -10.26544189453125
    10. ' i' → logprob: -10.26544189453125

Token 1799: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.012813220731914043
    2. 'single' → logprob: -4.387813091278076
    3. 'cost' → logprob: -9.137813568115234
    4. 'd' → logprob: -9.887813568115234
    5. '_possible' → logprob: -10.262813568115234
    6. '_cost' → logprob: -11.012813568115234
    7. 'for' → logprob: -11.262813568115234
    8. 'Single' → logprob: -11.637813568115234
    9. '```' → logprob: -11.637813568115234
    10. '_SINGLE' → logprob: -12.137813568115234

Token 1800: '_mp' (ID: 96508)
  Prédit: '_mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mp' → logprob: -0.0022018824238330126
    2. 'mp' → logprob: -6.127202033996582
    3. '_dp' → logprob: -11.877202033996582
    4. '_sp' → logprob: -12.377202033996582
    5. '_hp' → logprob: -13.127202033996582
    6. 'd' → logprob: -13.627202033996582
    7. '```' → logprob: -14.252202033996582
    8. 'MP' → logprob: -15.127202033996582
    9. 'def' → logprob: -15.127202033996582
    10. 'single' → logprob: -15.877202033996582

Token 1801: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5658256411552429
    2. '[i' → logprob: -2.3158257007598877
    3. '=' → logprob: -3.1908257007598877
    4. '_val' → logprob: -3.3158257007598877
    5. '_after' → logprob: -3.4408257007598877
    6. '_' → logprob: -3.4408257007598877
    7. '_i' → logprob: -3.5658257007598877
    8. '_for' → logprob: -4.190825462341309
    9. '_idx' → logprob: -4.190825462341309
    10. '_min' → logprob: -4.315825462341309

Token 1802: '],' (ID: 2155)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0573323965072632
    2. '],' → logprob: -1.1823323965072632
    3. ']' → logprob: -2.4323325157165527
    4. ']:' → logprob: -3.0573325157165527
    5. ']:
' → logprob: -3.1823325157165527
    6. ' =' → logprob: -3.1823325157165527
    7. 'i' → logprob: -4.057332515716553
    8. '=' → logprob: -4.432332515716553
    9. ']=' → logprob: -4.432332515716553
    10. 'def' → logprob: -4.932332515716553

Token 1803: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5364130735397339
    2. 'hp' → logprob: -1.7864130735397339
    3. ' for' → logprob: -2.1614131927490234
    4. 'res' → logprob: -3.0364131927490234
    5. 'HP' → logprob: -4.536413192749023
    6. '#' → logprob: -4.911413192749023
    7. 'i' → logprob: -4.911413192749023
    8. 'best' → logprob: -5.036413192749023
    9. ' hp' → logprob: -5.036413192749023
    10. '   ' → logprob: -5.286413192749023

Token 1804: ' pre' (ID: 876)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.6010984182357788
    2. '=' → logprob: -2.2260985374450684
    3. ' =' → logprob: -2.3510985374450684
    4. '#' → logprob: -2.3510985374450684
    5. 'import' → logprob: -2.3510985374450684
    6. ' for' → logprob: -2.4760985374450684
    7. 'continue' → logprob: -2.8510985374450684
    8. 'def' → logprob: -3.2260985374450684
    9. 'need' → logprob: -3.8510985374450684
    10. 'i' → logprob: -3.9760985374450684

Token 1805: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.343017041683197
    2. 'computed' → logprob: -1.9680171012878418
    3. 'for' → logprob: -2.343017101287842
    4. 'sum' → logprob: -3.593017101287842
    5. 'best' → logprob: -4.968017101287842
    6. '       ' → logprob: -5.218017101287842
    7. 'pare' → logprob: -5.468017101287842
    8. 'viously' → logprob: -6.468017101287842
    9. ' best' → logprob: -6.968017101287842
    10. 'import' → logprob: -7.093017101287842

Token 1806: ' per' (ID: 777)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4525705575942993
    2. 'best' → logprob: -1.4525705575942993
    3. 'for' → logprob: -2.0775704383850098
    4. '[' → logprob: -2.7025704383850098
    5. 'max' → logprob: -3.3275704383850098
    6. ' =' → logprob: -3.4525704383850098
    7. '#' → logprob: -3.5775704383850098
    8. 'import' → logprob: -3.7025704383850098
    9. '```' → logprob: -3.7025704383850098
    10. ' for' → logprob: -3.9525704383850098

Token 1807: ' monster' (ID: 36286)
  Prédit: 'monster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'monster' → logprob: -0.7312650084495544
    2. 'i' → logprob: -1.4812650680541992
    3. 'hp' → logprob: -1.7312650680541992
    4. 'mon' → logprob: -3.356265068054199
    5. 'HP' → logprob: -3.981265068054199
    6. 'd' → logprob: -4.231265068054199
    7. 'damage' → logprob: -4.981265068054199
    8. ' monster' → logprob: -5.731265068054199
    9. 'haps' → logprob: -5.731265068054199
    10. 'for' → logprob: -5.856265068054199

Token 1808: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29798272252082825
    2. '[i' → logprob: -3.047982692718506
    3. ' =' → logprob: -3.172982692718506
    4. 'for' → logprob: -3.547982692718506
    5. '[' → logprob: -3.922982692718506
    6. '#' → logprob: -4.297982692718506
    7. ' for' → logprob: -4.297982692718506
    8. '
' → logprob: -4.797982692718506
    9. 'best' → logprob: -5.047982692718506
    10. ':
' → logprob: -5.172982692718506

Token 1809: ' damage' (ID: 10364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.460472583770752
    2. 'HP' → logprob: -1.460472583770752
    3. 'd' → logprob: -2.460472583770752
    4. 'damage' → logprob: -2.835472583770752
    5. 'hp' → logprob: -2.835472583770752
    6. 'best' → logprob: -3.335472583770752
    7. ' for' → logprob: -3.710472583770752
    8. 'i' → logprob: -3.710472583770752
    9. 'dp' → logprob: -3.835472583770752
    10. 'import' → logprob: -3.835472583770752

Token 1810: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1566169261932373
    2. 'for' → logprob: -1.9066169261932373
    3. ' =' → logprob: -2.1566169261932373
    4. '
' → logprob: -3.1566169261932373
    5. '_left' → logprob: -3.2816169261932373
    6. '   ' → logprob: -3.7816169261932373
    7. 'def' → logprob: -3.9066169261932373
    8. '_re' → logprob: -3.9066169261932373
    9. '[i' → logprob: -3.9066169261932373
    10. ']' → logprob: -4.031617164611816

Token 1811: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11521623283624649
    2. '
' → logprob: -2.9902162551879883
    3. 'best' → logprob: -3.8652162551879883
    4. 'import' → logprob: -5.240216255187988
    5. 'def' → logprob: -5.365216255187988
    6. ' best' → logprob: -5.615216255187988
    7. '#' → logprob: -5.740216255187988
    8. '[' → logprob: -5.740216255187988
    9. 'for' → logprob: -6.490216255187988
    10. ' for' → logprob: -6.490216255187988

Token 1812: ' the' (ID: 290)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.4406334161758423
    2. ' best' → logprob: -1.6906334161758423
    3. 'for' → logprob: -1.9406334161758423
    4. '       ' → logprob: -2.0656332969665527
    5. 'best' → logprob: -2.8156332969665527
    6. ' i' → logprob: -3.1906332969665527
    7. '[' → logprob: -3.9406332969665527
    8. ' range' → logprob: -3.9406332969665527
    9. 'range' → logprob: -3.9406332969665527
    10. 'import' → logprob: -4.190633296966553

Token 1813: ' minimal' (ID: 19957)
  Prédit: 'hits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hits' → logprob: -1.9818387031555176
    2. 'needed' → logprob: -2.1068387031555176
    3. ' for' → logprob: -2.2318387031555176
    4. 'res' → logprob: -2.6068387031555176
    5. ' needed' → logprob: -2.6068387031555176
    6. 'for' → logprob: -2.6068387031555176
    7. '#' → logprob: -2.6068387031555176
    8. 'cost' → logprob: -3.3568387031555176
    9. 'remaining' → logprob: -3.4818387031555176
    10. 'best' → logprob: -3.6068387031555176

Token 1814: ' cost' (ID: 3097)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mp' → logprob: -1.0607296228408813
    2. 'MP' → logprob: -1.8107296228408813
    3. ' mp' → logprob: -2.185729503631592
    4. 'hp' → logprob: -2.310729503631592
    5. 'single' → logprob: -2.435729503631592
    6. 'HP' → logprob: -2.935729503631592
    7. '_mp' → logprob: -3.185729503631592
    8. ' single' → logprob: -3.935729503631592
    9. ' hp' → logprob: -4.435729503631592
    10. 'd' → logprob: -4.810729503631592

Token 1815: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40656980872154236
    2. 'for' → logprob: -2.406569719314575
    3. ' for' → logprob: -2.406569719314575
    4. ' =' → logprob: -3.906569719314575
    5. '[i' → logprob: -3.906569719314575
    6. '[' → logprob: -4.031569957733154
    7. ']' → logprob: -4.656569957733154
    8. '=' → logprob: -4.781569957733154
    9. '#' → logprob: -4.906569957733154
    10. 'best' → logprob: -4.906569957733154

Token 1816: ' kill' (ID: 15874)
  Prédit: 'kill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'kill' → logprob: -0.037081051617860794
    2. 'def' → logprob: -4.412081241607666
    3. 'deal' → logprob: -4.412081241607666
    4. 'reduce' → logprob: -5.662081241607666
    5. 'hit' → logprob: -6.537081241607666
    6. '```' → logprob: -6.537081241607666
    7. 'import' → logprob: -6.787081241607666
    8. 'use' → logprob: -6.912081241607666
    9. 'finish' → logprob: -7.162081241607666
    10. '
' → logprob: -7.662081241607666

Token 1817: ' residual' (ID: 54782)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4755116701126099
    2. 'for' → logprob: -1.8505116701126099
    3. ' for' → logprob: -1.9755116701126099
    4. ']' → logprob: -2.1005115509033203
    5. '[i' → logprob: -2.6005115509033203
    6. '][' → logprob: -2.8505115509033203
    7. '   ' → logprob: -3.2255115509033203
    8. ' with' → logprob: -4.22551155090332
    9. 'with' → logprob: -4.22551155090332
    10. 'i' → logprob: -4.35051155090332

Token 1818: ' HP' (ID: 21979)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6688213348388672
    2. 'for' → logprob: -2.043821334838867
    3. '[i' → logprob: -2.418821334838867
    4. ' for' → logprob: -3.293821334838867
    5. ']' → logprob: -3.418821334838867
    6. '[' → logprob: -3.543821334838867
    7. ' =' → logprob: -3.793821334838867
    8. '```' → logprob: -4.168821334838867
    9. ',' → logprob: -4.293821334838867
    10. '
' → logprob: -4.418821334838867

Token 1819: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3610040247440338
    2. 'for' → logprob: -2.111004114151001
    3. '[i' → logprob: -3.611004114151001
    4. ']' → logprob: -3.861004114151001
    5. '[' → logprob: -3.986004114151001
    6. ' for' → logprob: -3.986004114151001
    7. '
' → logprob: -4.361003875732422
    8. '   ' → logprob: -4.486003875732422
    9. '#' → logprob: -4.611003875732422
    10. '```' → logprob: -4.611003875732422

Token 1820: ' HP' (ID: 21979)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37238043546676636
    2. ' for' → logprob: -2.497380495071411
    3. ' best' → logprob: -2.622380495071411
    4. 'best' → logprob: -3.122380495071411
    5. 'res' → logprob: -3.747380495071411
    6. 'for' → logprob: -4.247380256652832
    7. 'import' → logprob: -4.997380256652832
    8. '
' → logprob: -4.997380256652832
    9. 'def' → logprob: -5.122380256652832
    10. '   ' → logprob: -5.122380256652832

Token 1821: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8449722528457642
    2. ' =' → logprob: -1.8449722528457642
    3. '-' → logprob: -2.5949721336364746
    4. '=' → logprob: -2.7199721336364746
    5. ' -' → logprob: -2.7199721336364746
    6. 'left' → logprob: -3.0949721336364746
    7. '       ' → logprob: -3.3449721336364746
    8. 'i' → logprob: -3.8449721336364746
    9. '   ' → logprob: -4.219972133636475
    10. ')' → logprob: -4.594972133636475

Token 1822: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8962922692298889
    2. ' -' → logprob: -1.0212922096252441
    3. '-' → logprob: -2.021292209625244
    4. ']-' → logprob: -2.771292209625244
    5. '[i' → logprob: -4.146292209625244
    6. '+' → logprob: -5.271292209625244
    7. '-d' → logprob: -5.771292209625244
    8. ']+' → logprob: -6.021292209625244
    9. '   ' → logprob: -6.146292209625244
    10. '-i' → logprob: -6.271292209625244

Token 1823: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0553678423166275
    2. ' d' → logprob: -2.930367946624756
    3. '1' → logprob: -9.055367469787598
    4. '   ' → logprob: -9.305367469787598
    5. ' ' → logprob: -9.930367469787598
    6. 'damage' → logprob: -10.180367469787598
    7. '
' → logprob: -10.805367469787598
    8. '```' → logprob: -10.930367469787598
    9. '	d' → logprob: -11.055367469787598
    10. ''d' → logprob: -11.555367469787598

Token 1824: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5619986057281494
    2. '
' → logprob: -1.4369986057281494
    3. '```' → logprob: -2.5619986057281494
    4. 'for' → logprob: -3.8119986057281494
    5. '[i' → logprob: -4.18699836730957
    6. '][' → logprob: -4.43699836730957
    7. ']' → logprob: -4.56199836730957
    8. ' for' → logprob: -5.06199836730957
    9. '[' → logprob: -5.31199836730957
    10. ':
' → logprob: -5.43699836730957

Token 1825: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24407900869846344
    2. '
' → logprob: -2.619079113006592
    3. '```' → logprob: -2.994079113006592
    4. '][' → logprob: -4.744079113006592
    5. ' =' → logprob: -4.869079113006592
    6. ' for' → logprob: -4.869079113006592
    7. 'import' → logprob: -4.994079113006592
    8. 'for' → logprob: -4.994079113006592
    9. '[' → logprob: -5.119079113006592
    10. '[i' → logprob: -5.119079113006592

Token 1826: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28978222608566284
    2. 'for' → logprob: -2.0397822856903076
    3. ' for' → logprob: -3.0397822856903076
    4. '
' → logprob: -3.9147822856903076
    5. 'best' → logprob: -4.0397820472717285
    6. 'import' → logprob: -4.6647820472717285
    7. '```' → logprob: -5.2897820472717285
    8. 'res' → logprob: -5.7897820472717285
    9. '   ' → logprob: -6.0397820472717285
    10. 'result' → logprob: -6.1647820472717285

Token 1827: ' Because' (ID: 13602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3494384288787842
    2. 'for' → logprob: -1.7244384288787842
    3. ' for' → logprob: -2.599438428878784
    4. 'import' → logprob: -4.224438667297363
    5. 'best' → logprob: -4.974438667297363
    6. '#' → logprob: -5.724438667297363
    7. 'res' → logprob: -5.849438667297363
    8. '```' → logprob: -6.099438667297363
    9. '
' → logprob: -6.224438667297363
    10. '   ' → logprob: -6.224438667297363

Token 1828: ' single' (ID: 4590)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.6550357937812805
    2. ' best' → logprob: -0.9050357937812805
    3. 'd' → logprob: -3.9050357341766357
    4. 'HP' → logprob: -4.155035972595215
    5. ' d' → logprob: -5.155035972595215
    6. ' all' → logprob: -5.155035972595215
    7. 'all' → logprob: -5.655035972595215
    8. 'for' → logprob: -5.655035972595215
    9. ' for' → logprob: -5.905035972595215
    10. ' HP' → logprob: -6.030035972595215

Token 1829: ' spells' (ID: 69967)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.005703261587768793
    2. '_target' → logprob: -6.255703449249268
    3. ' _' → logprob: -6.630703449249268
    4. '_' → logprob: -7.630703449249268
    5. '_hp' → logprob: -8.50570297241211
    6. '_targets' → logprob: -8.63070297241211
    7. ')' → logprob: -8.63070297241211
    8. '_single' → logprob: -8.63070297241211
    9. '```' → logprob: -8.63070297241211
    10. '_spell' → logprob: -8.63070297241211

Token 1830: ' usage' (ID: 16622)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8922349810600281
    2. ']' → logprob: -1.7672350406646729
    3. ':' → logprob: -2.517235040664673
    4. '[' → logprob: -3.267235040664673
    5. 'for' → logprob: -3.642235040664673
    6. ',' → logprob: -3.767235040664673
    7. ')' → logprob: -3.767235040664673
    8. 'import' → logprob: -3.892235040664673
    9. '       ' → logprob: -4.267234802246094
    10. '   ' → logprob: -4.267234802246094

Token 1831: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.507510781288147
    2. '[i' → logprob: -1.507510781288147
    3. 'for' → logprob: -2.0075106620788574
    4. '```' → logprob: -3.1325106620788574
    5. ':
' → logprob: -3.2575106620788574
    6. ':' → logprob: -3.2575106620788574
    7. ' for' → logprob: -3.5075106620788574
    8. '=' → logprob: -3.7575106620788574
    9. ' =' → logprob: -3.7575106620788574
    10. ']' → logprob: -3.8825106620788574

Token 1832: ' can' (ID: 665)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6040647625923157
    2. ':' → logprob: -1.979064702987671
    3. '[i' → logprob: -2.729064702987671
    4. '[' → logprob: -3.229064702987671
    5. ')' → logprob: -3.604064702987671
    6. '       ' → logprob: -3.729064702987671
    7. ' =' → logprob: -3.729064702987671
    8. '   ' → logprob: -4.35406494140625
    9. ',' → logprob: -4.47906494140625
    10. 'def' → logprob: -4.47906494140625

Token 1833: ' vary' (ID: 14899)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.8284538388252258
    2. ' be' → logprob: -1.453453779220581
    3. 'range' → logprob: -2.203453779220581
    4. 'not' → logprob: -2.578453779220581
    5. ' range' → logprob: -3.453453779220581
    6. 'vary' → logprob: -3.828453779220581
    7. ' not' → logprob: -4.32845401763916
    8. 'continue' → logprob: -4.45345401763916
    9. ' vary' → logprob: -4.45345401763916
    10. ' ' → logprob: -4.82845401763916

Token 1834: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46354714035987854
    2. ' for' → logprob: -2.0885472297668457
    3. 'for' → logprob: -2.4635472297668457
    4. '
' → logprob: -3.8385472297668457
    5. '#' → logprob: -3.9635472297668457
    6. ':
' → logprob: -4.338547229766846
    7. '][' → logprob: -4.338547229766846
    8. '```' → logprob: -4.338547229766846
    9. ',' → logprob: -4.713547229766846
    10. '[i' → logprob: -4.713547229766846

Token 1835: ' and' (ID: 326)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9785483479499817
    2. 'for' → logprob: -1.103548288345337
    3. '       ' → logprob: -2.103548288345337
    4. '#' → logprob: -3.478548288345337
    5. '```' → logprob: -3.603548288345337
    6. ' best' → logprob: -4.103548526763916
    7. 'best' → logprob: -4.478548526763916
    8. 'd' → logprob: -4.478548526763916
    9. ' but' → logprob: -4.978548526763916
    10. '[' → logprob: -5.228548526763916

Token 1836: ' best' (ID: 1636)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -1.750850796699524
    2. 'for' → logprob: -1.875850796699524
    3. ' for' → logprob: -2.1258506774902344
    4. 'best' → logprob: -2.1258506774902344
    5. 'd' → logprob: -2.5008506774902344
    6. '#' → logprob: -2.6258506774902344
    7. 'the' → logprob: -3.2508506774902344
    8. 'we' → logprob: -3.6258506774902344
    9. ' best' → logprob: -3.7508506774902344
    10. 'res' → logprob: -3.7508506774902344

Token 1837: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.0008197537390515208
    2. '_' → logprob: -8.12582015991211
    3. '```' → logprob: -8.25082015991211
    4. 'single' → logprob: -9.00082015991211
    5. '_SINGLE' → logprob: -10.75082015991211
    6. '
' → logprob: -10.75082015991211
    7. 'Single' → logprob: -11.00082015991211
    8. '`' → logprob: -11.62582015991211
    9. ')' → logprob: -11.75082015991211
    10. '_
' → logprob: -12.00082015991211

Token 1838: '_mp' (ID: 96508)
  Prédit: '_mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mp' → logprob: -0.000307575857732445
    2. 'mp' → logprob: -8.2503080368042
    3. '```' → logprob: -11.1253080368042
    4. '_hp' → logprob: -11.2503080368042
    5. '_' → logprob: -12.8753080368042
    6. 'MP' → logprob: -13.0003080368042
    7. '_dp' → logprob: -13.2503080368042
    8. '_sp' → logprob: -13.5003080368042
    9. '[i' → logprob: -13.6253080368042
    10. '`' → logprob: -13.6253080368042

Token 1839: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7393883466720581
    2. '[i' → logprob: -1.239388346672058
    3. '=' → logprob: -2.6143884658813477
    4. '_rem' → logprob: -4.114388465881348
    5. '_' → logprob: -4.239388465881348
    6. '_remaining' → logprob: -4.239388465881348
    7. '_i' → logprob: -4.364388465881348
    8. ' is' → logprob: -4.739388465881348
    9. '```' → logprob: -5.239388465881348
    10. '_left' → logprob: -5.239388465881348

Token 1840: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.669165849685669
    2. '[i' → logprob: -1.544165849685669
    3. ' =' → logprob: -2.169165849685669
    4. ' is' → logprob: -3.419165849685669
    5. '=' → logprob: -3.919165849685669
    6. ' remains' → logprob: -4.16916561126709
    7. '][' → logprob: -4.79416561126709
    8. '[' → logprob: -4.91916561126709
    9. '])' → logprob: -5.16916561126709
    10. 'def' → logprob: -5.16916561126709

Token 1841: ' was' (ID: 673)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5885819792747498
    2. '=' → logprob: -1.9635820388793945
    3. '[i' → logprob: -1.9635820388793945
    4. ' is' → logprob: -3.8385820388793945
    5. 'def' → logprob: -4.3385820388793945
    6. '```' → logprob: -4.3385820388793945
    7. 'for' → logprob: -4.4635820388793945
    8. ' remains' → logprob: -4.7135820388793945
    9. ']' → logprob: -4.8385820388793945
    10. 's' → logprob: -5.0885820388793945

Token 1842: ' pre' (ID: 876)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.083124041557312
    2. 'cal' → logprob: -1.708124041557312
    3. 'based' → logprob: -2.2081241607666016
    4. 'computed' → logprob: -2.2081241607666016
    5. 'pre' → logprob: -3.4581241607666016
    6. ' recal' → logprob: -3.5831241607666016
    7. 'not' → logprob: -3.5831241607666016
    8. '[]' → logprob: -3.7081241607666016
    9. '#' → logprob: -3.7081241607666016
    10. 're' → logprob: -4.208124160766602

Token 1843: 'computed' (ID: 157929)
  Prédit: 'computed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'computed' → logprob: -0.5935854911804199
    2. '       ' → logprob: -1.21858549118042
    3. '   ' → logprob: -3.34358549118042
    4. ')' → logprob: -4.09358549118042
    5. 'compute' → logprob: -4.09358549118042
    6. '```' → logprob: -4.59358549118042
    7. ']' → logprob: -4.59358549118042
    8. ' =' → logprob: -4.84358549118042
    9. '[' → logprob: -4.84358549118042
    10. '     ' → logprob: -5.21858549118042

Token 1844: ' for' (ID: 395)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.264242172241211
    2. 'for' → logprob: -2.139242172241211
    3. '       ' → logprob: -2.264242172241211
    4. ']' → logprob: -2.389242172241211
    5. ' =' → logprob: -3.139242172241211
    6. ',' → logprob: -3.264242172241211
    7. '#' → logprob: -3.264242172241211
    8. ' for' → logprob: -3.389242172241211
    9. '[' → logprob: -3.514242172241211
    10. ':' → logprob: -3.639242172241211

Token 1845: ' HP' (ID: 21979)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.3396432399749756
    2. 'hp' → logprob: -1.8396432399749756
    3. '0' → logprob: -1.9646432399749756
    4. 'res' → logprob: -1.9646432399749756
    5. 'the' → logprob: -2.5896432399749756
    6. 'HP' → logprob: -2.7146432399749756
    7. 'single' → logprob: -3.4646432399749756
    8. 'all' → logprob: -3.7146432399749756
    9. 'i' → logprob: -4.339643478393555
    10. 'best' → logprob: -4.589643478393555

Token 1846: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3641004264354706
    2. ')' → logprob: -2.739100456237793
    3. '+' → logprob: -3.364100456237793
    4. ']' → logprob: -3.614100456237793
    5. '       ' → logprob: -3.614100456237793
    6. '[' → logprob: -4.114100456237793
    7. ' -' → logprob: -4.364100456237793
    8. ')]' → logprob: -4.364100456237793
    9. '])' → logprob: -4.364100456237793
    10. '):' → logprob: -4.614100456237793

Token 1847: '],' (ID: 2155)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16906119883060455
    2. ' +' → logprob: -2.9190611839294434
    3. ']' → logprob: -3.6690611839294434
    4. ']+' → logprob: -3.6690611839294434
    5. ' -' → logprob: -3.7940611839294434
    6. '-' → logprob: -5.419061183929443
    7. '[i' → logprob: -5.919061183929443
    8. '],' → logprob: -6.169061183929443
    9. '):
' → logprob: -6.419061183929443
    10. '-d' → logprob: -6.544061183929443

Token 1848: ' 
' (ID: 793)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.999750018119812
    2. '[' → logprob: -2.1247501373291016
    3. '```' → logprob: -2.1247501373291016
    4. ':' → logprob: -2.4997501373291016
    5. ')' → logprob: -2.7497501373291016
    6. ':
' → logprob: -3.7497501373291016
    7. ' for' → logprob: -3.7497501373291016
    8. ']' → logprob: -3.9997501373291016
    9. 'for' → logprob: -3.9997501373291016
    10. ' but' → logprob: -4.124750137329102

Token 1849: '       ' (ID: 309)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.7243341207504272
    2. '#' → logprob: -1.7243341207504272
    3. '       ' → logprob: -2.724334239959717
    4. '```' → logprob: -3.224334239959717
    5. 'but' → logprob: -3.599334239959717
    6. '
' → logprob: -3.724334239959717
    7. 'for' → logprob: -3.849334239959717
    8. ':' → logprob: -3.974334239959717
    9. ' for' → logprob: -3.974334239959717
    10. ':
' → logprob: -4.099334239959717

Token 1850: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7629579305648804
    2. ' but' → logprob: -1.7629579305648804
    3. '#' (adapté à ' #') → logprob: -2.26295804977417
    4. 'for' → logprob: -2.76295804977417
    5. 'but' → logprob: -3.26295804977417
    6. ')' → logprob: -3.51295804977417
    7. ' for' → logprob: -3.51295804977417
    8. '   ' → logprob: -4.63795804977417
    9. '```' → logprob: -4.63795804977417
    10. ' and' → logprob: -5.01295804977417

Token 1851: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7838603258132935
    2. 'for' → logprob: -1.5338603258132935
    3. ' for' → logprob: -1.9088603258132935
    4. '#' → logprob: -2.158860206604004
    5. '
' → logprob: -4.158860206604004
    6. '```' → logprob: -5.158860206604004
    7. 'continue' → logprob: -5.533860206604004
    8. '   ' → logprob: -5.783860206604004
    9. ' but' → logprob: -5.783860206604004
    10. '           ' → logprob: -5.908860206604004

Token 1852: ' for' (ID: 395)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9775667786598206
    2. 'for' → logprob: -1.8525667190551758
    3. ' for' → logprob: -2.102566719055176
    4. 'best' → logprob: -2.352566719055176
    5. ' best' → logprob: -2.977566719055176
    6. '       ' → logprob: -3.727566719055176
    7. 'we' → logprob: -3.727566719055176
    8. 'd' → logprob: -3.852566719055176
    9. 'the' → logprob: -4.477566719055176
    10. ' we' → logprob: -4.602566719055176

Token 1853: ' residual' (ID: 54782)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.323779582977295
    2. 'd' → logprob: -1.948779582977295
    3. 'HP' → logprob: -2.073779582977295
    4. 'hp' → logprob: -2.698779582977295
    5. 'each' → logprob: -2.823779582977295
    6. 'sm' → logprob: -3.073779582977295
    7. 'different' → logprob: -3.448779582977295
    8. 'damage' → logprob: -3.448779582977295
    9. ' residual' → logprob: -3.698779582977295
    10. 'single' → logprob: -3.698779582977295

Token 1854: ' HP' (ID: 21979)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.23567228019237518
    2. '_hp' → logprob: -2.2356722354888916
    3. '[i' → logprob: -3.3606722354888916
    4. 'hp' → logprob: -3.9856722354888916
    5. ')' → logprob: -4.735672473907471
    6. '_HP' → logprob: -4.860672473907471
    7. '   ' → logprob: -5.610672473907471
    8. '```' → logprob: -5.610672473907471
    9. ' HP' → logprob: -5.735672473907471
    10. ']' → logprob: -5.860672473907471

Token 1855: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5324785709381104
    2. ' =' → logprob: -2.6574785709381104
    3. '+' → logprob: -2.9074785709381104
    4. '=' → logprob: -3.1574785709381104
    5. ',' → logprob: -3.1574785709381104
    6. ':
' → logprob: -4.032478332519531
    7. ']' → logprob: -4.032478332519531
    8. '-' → logprob: -4.157478332519531
    9. '```' → logprob: -4.157478332519531
    10. '       ' → logprob: -4.157478332519531

Token 1856: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8733609914779663
    2. '[i' → logprob: -1.6233609914779663
    3. '+' → logprob: -1.9983609914779663
    4. ']' → logprob: -2.498361110687256
    5. '-' → logprob: -2.748361110687256
    6. '],' → logprob: -4.123361110687256
    7. ' +' → logprob: -4.248361110687256
    8. '-i' → logprob: -4.498361110687256
    9. ']+' → logprob: -4.998361110687256
    10. ':' → logprob: -5.498361110687256

Token 1857: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.015874581411480904
    2. ' d' → logprob: -4.39087438583374
    3. '1' → logprob: -6.26587438583374
    4. 'i' → logprob: -7.26587438583374
    5. '0' → logprob: -8.890874862670898
    6. '
' → logprob: -9.015874862670898
    7. '```' → logprob: -9.140874862670898
    8. ' i' → logprob: -9.515874862670898
    9. ' ' → logprob: -9.640874862670898
    10. '   ' → logprob: -10.140874862670898

Token 1858: ' (' (ID: 350)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -2.104511260986328
    2. '       ' → logprob: -2.104511260986328
    3. '_' → logprob: -2.229511260986328
    4. '```' → logprob: -2.354511260986328
    5. ':' → logprob: -2.604511260986328
    6. '[i' → logprob: -2.729511260986328
    7. ':
' → logprob: -3.229511260986328
    8. '   ' → logprob: -3.354511260986328
    9. '
' → logprob: -3.479511260986328
    10. '+' → logprob: -3.854511260986328

Token 1859: 'could' (ID: 58995)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7123686075210571
    2. '+' → logprob: -2.0873684883117676
    3. ' )' → logprob: -2.5873684883117676
    4. '):
' → logprob: -2.8373684883117676
    5. ' -' → logprob: -2.8373684883117676
    6. '-' → logprob: -2.9623684883117676
    7. '),' → logprob: -3.0873684883117676
    8. '])' → logprob: -3.3373684883117676
    9. '1' → logprob: -3.7123684883117676
    10. ' if' → logprob: -3.7123684883117676

Token 1860: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.5712675452232361
    2. '=' → logprob: -1.5712676048278809
    3. 'be' → logprob: -2.196267604827881
    4. '<' → logprob: -2.571267604827881
    5. '>' → logprob: -4.071267604827881
    6. ' <' → logprob: -4.946267604827881
    7. '```' → logprob: -5.946267604827881
    8. '0' → logprob: -6.071267604827881
    9. ')' → logprob: -6.821267604827881
    10. '       ' → logprob: -6.946267604827881

Token 1861: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2041827142238617
    2. '>' → logprob: -2.4541826248168945
    3. 'greater' → logprob: -3.0791826248168945
    4. 'larg' → logprob: -4.2041826248168945
    5. '1' → logprob: -4.3291826248168945
    6. 'more' → logprob: -5.5791826248168945
    7. 'negative' → logprob: -5.9541826248168945
    8. ' >' → logprob: -5.9541826248168945
    9. '```' → logprob: -5.9541826248168945
    10. 'less' → logprob: -6.3291826248168945

Token 1862: '0' (ID: 15)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5542992353439331
    2. '0' → logprob: -1.054299235343933
    3. '1' → logprob: -3.3042993545532227
    4. '+' → logprob: -4.679299354553223
    5. 'greater' → logprob: -5.179299354553223
    6. ' >' → logprob: -5.304299354553223
    7. '>
' → logprob: -5.929299354553223
    8. ' ' → logprob: -6.054299354553223
    9. '<' → logprob: -6.054299354553223
    10. '```' → logprob: -6.179299354553223

Token 1863: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.0702276229858398
    2. '+' → logprob: -1.6952276229858398
    3. '):
' → logprob: -1.6952276229858398
    4. '):' → logprob: -2.32022762298584
    5. ' if' → logprob: -2.82022762298584
    6. ',' → logprob: -3.32022762298584
    7. '```' → logprob: -3.69522762298584
    8. ')' → logprob: -4.44522762298584
    9. '),' → logprob: -4.57022762298584
    10. 'if' → logprob: -4.57022762298584

Token 1864: ' less' (ID: 3760)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -1.0178964138031006
    2. 'less' → logprob: -1.2678964138031006
    3. 'more' → logprob: -1.2678964138031006
    4. '1' → logprob: -3.6428964138031006
    5. 'positive' → logprob: -4.01789665222168
    6. 'greater' → logprob: -4.39289665222168
    7. '>' → logprob: -5.14289665222168
    8. '0' → logprob: -5.89289665222168
    9. ' less' → logprob: -6.39289665222168
    10. ')' → logprob: -6.76789665222168

Token 1865: '),' (ID: 936)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8256335258483887
    2. '):
' → logprob: -1.5756335258483887
    3. '):' → logprob: -2.2006335258483887
    4. ' or' → logprob: -2.5756335258483887
    5. ',' → logprob: -2.5756335258483887
    6. ':' → logprob: -3.5756335258483887
    7. '),' → logprob: -4.200633525848389
    8. '```' → logprob: -4.325633525848389
    9. ':
' → logprob: -4.575633525848389
    10. ' if' → logprob: -4.575633525848389

Token 1866: ' need' (ID: 1309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.7402735948562622
    2. ' for' → logprob: -1.8652735948562622
    3. '       ' → logprob: -1.9902735948562622
    4. ']' → logprob: -2.4902734756469727
    5. 'for' → logprob: -2.4902734756469727
    6. '```' → logprob: -2.8652734756469727
    7. ')' → logprob: -3.3652734756469727
    8. '0' → logprob: -3.6152734756469727
    9. 'import' → logprob: -4.240273475646973
    10. '#' → logprob: -4.240273475646973

Token 1867: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.77707439661026
    2. 'to' → logprob: -1.0270743370056152
    3. '0' → logprob: -3.0270743370056152
    4. 'best' → logprob: -3.0270743370056152
    5. '[' → logprob: -3.7770743370056152
    6. ' best' → logprob: -4.277074337005615
    7. '
' → logprob: -4.777074337005615
    8. '   ' → logprob: -5.277074337005615
    9. '```' → logprob: -5.277074337005615
    10. '[
' → logprob: -5.277074337005615

Token 1868: ' recom' (ID: 19119)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1291409730911255
    2. 'adjust' → logprob: -1.5041409730911255
    3. 'update' → logprob: -1.7541409730911255
    4. 'import' → logprob: -2.879140853881836
    5. 'replace' → logprob: -3.254140853881836
    6. 'compute' → logprob: -3.379140853881836
    7. ' for' → logprob: -3.879140853881836
    8. 'continue' → logprob: -3.879140853881836
    9. 'calculate' → logprob: -4.254140853881836
    10. 'best' → logprob: -4.504140853881836

Token 1869: 'pute' (ID: 13605)
  Prédit: 'pute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pute' → logprob: -0.00302809476852417
    2. 'ute' → logprob: -6.37802791595459
    3. 'put' → logprob: -7.62802791595459
    4. '```' → logprob: -7.87802791595459
    5. 'd' → logprob: -9.62802791595459
    6. '#' → logprob: -9.75302791595459
    7. '``' → logprob: -10.12802791595459
    8. '{
' → logprob: -10.25302791595459
    9. '
' → logprob: -10.37802791595459
    10. 'for' → logprob: -10.75302791595459

Token 1870: ' cost' (ID: 3097)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2384341061115265
    2. ' for' → logprob: -2.113434076309204
    3. 'for' → logprob: -2.738434076309204
    4. 'import' → logprob: -5.238434314727783
    5. 'def' → logprob: -5.488434314727783
    6. '           ' → logprob: -5.988434314727783
    7. '```' → logprob: -5.988434314727783
    8. '#' → logprob: -6.488434314727783
    9. 'best' → logprob: -6.488434314727783
    10. '
' → logprob: -6.488434314727783

Token 1871: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4166644215583801
    2. ' for' → logprob: -1.5416643619537354
    3. 'for' → logprob: -3.0416643619537354
    4. 'best' → logprob: -4.4166646003723145
    5. '```' → logprob: -4.6666646003723145
    6. 'import' → logprob: -4.7916646003723145
    7. ' best' → logprob: -4.9166646003723145
    8. '#' → logprob: -5.0416646003723145
    9. '
' → logprob: -5.1666646003723145
    10. ',' → logprob: -5.2916646003723145

Token 1872: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011201199144124985
    2. '           ' → logprob: -5.51120138168335
    3. ' for' → logprob: -6.38620138168335
    4. 'for' → logprob: -6.38620138168335
    5. '```' → logprob: -6.51120138168335
    6. ',' → logprob: -8.011200904846191
    7. 'import' → logprob: -8.261200904846191
    8. '[' → logprob: -8.511200904846191
    9. '                   ' → logprob: -8.636200904846191
    10. '               ' → logprob: -8.636200904846191

Token 1873: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028031125664711
    2. 'for' → logprob: -4.778031349182129
    3. '
' → logprob: -5.028031349182129
    4. 'import' → logprob: -5.278031349182129
    5. 'result' → logprob: -6.028031349182129
    6. 'res' → logprob: -6.528031349182129
    7. '```' → logprob: -7.403031349182129
    8. ' for' → logprob: -7.653031349182129
    9. 'def' → logprob: -7.653031349182129
    10. 'best' → logprob: -7.778031349182129

Token 1874: ' But' (ID: 3072)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26120173931121826
    2. 'res' → logprob: -2.386201858520508
    3. '       ' → logprob: -2.761201858520508
    4. 'result' → logprob: -3.386201858520508
    5. 'best' → logprob: -4.261201858520508
    6. 'answer' → logprob: -5.136201858520508
    7. 'min' → logprob: -5.761201858520508
    8. 'def' → logprob: -6.011201858520508
    9. '#' → logprob: -6.136201858520508
    10. ' for' → logprob: -6.136201858520508

Token 1875: ' single' (ID: 4590)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4338550567626953
    2. ' for' → logprob: -2.1838550567626953
    3. '#' → logprob: -2.5588550567626953
    4. '       ' → logprob: -2.9338550567626953
    5. 'best' → logprob: -2.9338550567626953
    6. 'max' → logprob: -3.9338550567626953
    7. 'import' → logprob: -4.933855056762695
    8. '
' → logprob: -5.683855056762695
    9. ' best' → logprob: -5.808855056762695
    10. '```' → logprob: -5.808855056762695

Token 1876: ' spells' (ID: 69967)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.0030576884746551514
    2. '_single' → logprob: -6.878057479858398
    3. 'sp' → logprob: -7.628057479858398
    4. '```' → logprob: -8.128057479858398
    5. '_' → logprob: -8.378057479858398
    6. ']' → logprob: -8.878057479858398
    7. ' _' → logprob: -8.878057479858398
    8. '_spell' → logprob: -9.253057479858398
    9. '`' → logprob: -9.628057479858398
    10. ')' → logprob: -9.628057479858398

Token 1877: ' cost' (ID: 3097)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.223562240600586
    2. '[i' → logprob: -1.223562240600586
    3. ':' → logprob: -2.723562240600586
    4. '_cost' → logprob: -3.223562240600586
    5. '```' → logprob: -3.348562240600586
    6. '       ' → logprob: -3.348562240600586
    7. 'def' → logprob: -3.598562240600586
    8. '=' → logprob: -3.598562240600586
    9. '[' → logprob: -3.848562240600586
    10. ']' → logprob: -3.973562240600586

Token 1878: ' is' (ID: 382)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.29842400550842285
    2. '=' → logprob: -2.798424005508423
    3. ' =' → logprob: -2.923424005508423
    4. 'def' → logprob: -3.173424005508423
    5. 'for' → logprob: -3.173424005508423
    6. '[i' → logprob: -4.423423767089844
    7. 'to' → logprob: -5.173423767089844
    8. '   ' → logprob: -5.548423767089844
    9. ' for' → logprob: -5.673423767089844
    10. '
' → logprob: -6.173423767089844

Token 1879: ' linear' (ID: 23876)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3255054950714111
    2. '0' → logprob: -1.4505054950714111
    3. 'always' → logprob: -2.575505495071411
    4. 'minimal' → logprob: -2.575505495071411
    5. 'based' → logprob: -3.200505495071411
    6. 'def' → logprob: -3.200505495071411
    7. 'import' → logprob: -3.700505495071411
    8. 'min' → logprob: -3.950505495071411
    9. '```' → logprob: -3.950505495071411
    10. '   ' → logprob: -4.200505256652832

Token 1880: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.01161527633667
    2. '[i' → logprob: -1.63661527633667
    3. ':' → logprob: -2.38661527633667
    4. 'for' → logprob: -2.88661527633667
    5. ' for' → logprob: -3.26161527633667
    6. ':
' → logprob: -3.51161527633667
    7. ' =' → logprob: -3.63661527633667
    8. '#' → logprob: -3.63661527633667
    9. '[' → logprob: -4.01161527633667
    10. ',' → logprob: -4.01161527633667

Token 1881: ' hits' (ID: 21571)
  Prédit: 'damage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'damage' → logprob: -0.48390519618988037
    2. 'd' → logprob: -1.4839051961898804
    3. 'the' → logprob: -3.23390531539917
    4. 'hp' → logprob: -3.35890531539917
    5. 'HP' → logprob: -3.73390531539917
    6. 'number' → logprob: -4.10890531539917
    7. 'hits' → logprob: -4.98390531539917
    8. 'single' → logprob: -5.10890531539917
    9. 'res' → logprob: -5.10890531539917
    10. 'MP' → logprob: -5.23390531539917

Token 1882: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3704448342323303
    2. 'for' → logprob: -2.1204447746276855
    3. ' for' → logprob: -3.1204447746276855
    4. '
' → logprob: -3.7454447746276855
    5. ':' → logprob: -4.2454447746276855
    6. '```' → logprob: -4.3704447746276855
    7. ':
' → logprob: -4.4954447746276855
    8. ',' → logprob: -4.4954447746276855
    9. '#' → logprob: -4.7454447746276855
    10. ' =' → logprob: -4.9954447746276855

Token 1883: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35065948963165283
    2. ' for' → logprob: -2.7256593704223633
    3. '```' → logprob: -2.7256593704223633
    4. 'for' → logprob: -3.2256593704223633
    5. ')' → logprob: -4.100659370422363
    6. '[' → logprob: -4.225659370422363
    7. '#' → logprob: -4.350659370422363
    8. ' (' → logprob: -4.350659370422363
    9. '           ' → logprob: -4.475659370422363
    10. 'For' → logprob: -5.100659370422363

Token 1884: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4473447799682617
    2. ' for' → logprob: -1.4473447799682617
    3. 'for' → logprob: -2.5723447799682617
    4. '#' (adapté à ' #') → logprob: -4.072344779968262
    5. '```' → logprob: -4.947344779968262
    6. '           ' → logprob: -5.697344779968262
    7. ' if' → logprob: -5.822344779968262
    8. '   ' → logprob: -5.947344779968262
    9. 'For' → logprob: -6.072344779968262
    10. '
' → logprob: -6.072344779968262

Token 1885: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.32500359416007996
    2. '#' → logprob: -1.9500036239624023
    3. '       ' → logprob: -2.4500036239624023
    4. 'from' → logprob: -4.075003623962402
    5. '```' → logprob: -4.825003623962402
    6. 'def' → logprob: -5.325003623962402
    7. 'For' → logprob: -5.575003623962402
    8. 'import' → logprob: -5.825003623962402
    9. 'best' → logprob: -5.825003623962402
    10. ' for' → logprob: -6.325003623962402

Token 1886: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8063212037086487
    2. 'hp' → logprob: -0.9313212037086487
    3. 'd' → logprob: -2.806321144104004
    4. ' hp' → logprob: -3.556321144104004
    5. 'mp' → logprob: -4.181321144104004
    6. 'each' → logprob: -4.306321144104004
    7. ' i' → logprob: -4.556321144104004
    8. 'single' → logprob: -4.931321144104004
    9. 'res' → logprob: -5.931321144104004
    10. 'hit' → logprob: -6.431321144104004

Token 1887: ' single' (ID: 4590)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8985453248023987
    2. ' hp' → logprob: -1.773545265197754
    3. 'hp' → logprob: -2.023545265197754
    4. ' i' → logprob: -2.023545265197754
    5. ',' → logprob: -3.023545265197754
    6. '_,' → logprob: -3.648545265197754
    7. ' mp' → logprob: -4.398545265197754
    8. 'mp' → logprob: -4.648545265197754
    9. 'd' → logprob: -4.648545265197754
    10. ' ,' → logprob: -4.898545265197754

Token 1888: ' spell' (ID: 29176)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.08650966733694077
    2. ',' → logprob: -3.7115097045898438
    3. 'sp' → logprob: -4.336509704589844
    4. ' _' → logprob: -4.336509704589844
    5. ']' → logprob: -5.336509704589844
    6. '],' → logprob: -5.461509704589844
    7. ' ,' → logprob: -5.836509704589844
    8. '_hp' → logprob: -5.836509704589844
    9. ')' → logprob: -6.086509704589844
    10. 'target' → logprob: -6.836509704589844

Token 1889: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9447986483573914
    2. ':' → logprob: -1.4447987079620361
    3. 'for' → logprob: -2.194798707962036
    4. ':
' → logprob: -2.819798707962036
    5. ' in' → logprob: -3.319798707962036
    6. ' for' → logprob: -3.694798707962036
    7. '```' → logprob: -3.944798707962036
    8. 'd' → logprob: -4.194798469543457
    9. '           ' → logprob: -4.319798469543457
    10. 'def' → logprob: -4.444798469543457

Token 1890: ' cost' (ID: 3097)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3393919765949249
    2. ' for' → logprob: -2.7143919467926025
    3. '#' → logprob: -3.0893919467926025
    4. '```' → logprob: -3.0893919467926025
    5. 'hp' → logprob: -3.8393919467926025
    6. 'hits' → logprob: -3.9643919467926025
    7. 'we' → logprob: -4.214392185211182
    8. '       ' → logprob: -4.464392185211182
    9. '           ' → logprob: -4.714392185211182
    10. 'best' → logprob: -4.714392185211182

Token 1891: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9239473342895508
    2. '=' → logprob: -1.1739473342895508
    3. 's' → logprob: -2.423947334289551
    4. 'for' → logprob: -2.423947334289551
    5. 'def' → logprob: -3.548947334289551
    6. ',' → logprob: -4.423947334289551
    7. ' for' → logprob: -4.548947334289551
    8. '#' → logprob: -4.923947334289551
    9. ' is' → logprob: -5.173947334289551
    10. '```' → logprob: -5.173947334289551

Token 1892: ' reduce' (ID: 10389)
  Prédit: 'kill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'kill' → logprob: -0.10563056915998459
    2. 'hit' → logprob: -2.60563063621521
    3. 'use' → logprob: -4.980630397796631
    4. 'deal' → logprob: -5.480630397796631
    5. 'def' → logprob: -5.730630397796631
    6. 'hits' → logprob: -5.855630397796631
    7. 'damage' → logprob: -6.105630397796631
    8. '```' → logprob: -6.730630397796631
    9. 'import' → logprob: -7.230630397796631
    10. 'for' → logprob: -7.605630397796631

Token 1893: ' h' (ID: 312)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.654927670955658
    2. 'hp' → logprob: -1.5299277305603027
    3. 'res' → logprob: -2.1549277305603027
    4. ' hp' → logprob: -3.2799277305603027
    5. ' residual' → logprob: -3.7799277305603027
    6. ' HP' → logprob: -3.9049277305603027
    7. '   ' → logprob: -4.279927730560303
    8. '       ' → logprob: -5.529927730560303
    9. 'monster' → logprob: -5.529927730560303
    10. ' (' → logprob: -5.654927730560303

Token 1894: ' HP' (ID: 21979)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.20482787489891052
    2. '   ' → logprob: -2.8298277854919434
    3. 't' → logprob: -3.2048277854919434
    4. ' =' → logprob: -3.3298277854919434
    5. '       ' → logprob: -3.7048277854919434
    6. 'it' → logprob: -5.079827785491943
    7. 'P' → logprob: -5.454827785491943
    8. '=' → logprob: -5.579827785491943
    9. '           ' → logprob: -5.579827785491943
    10. '               ' → logprob: -7.079827785491943

Token 1895: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8749319911003113
    2. '```' → logprob: -2.499932050704956
    3. '#' → logprob: -2.874932050704956
    4. '[i' → logprob: -2.999932050704956
    5. '               ' → logprob: -3.249932050704956
    6. ')' → logprob: -3.499932050704956
    7. ':' → logprob: -3.499932050704956
    8. '           ' → logprob: -3.624932050704956
    9. ' =' → logprob: -3.874932050704956
    10. ':
' → logprob: -3.999932050704956

Token 1896: ' ceil' (ID: 35964)
  Prédit: '(mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mp' → logprob: -1.6459649801254272
    2. ' (' → logprob: -1.7709649801254272
    3. 'mp' → logprob: -1.7709649801254272
    4. ' mp' → logprob: -2.270965099334717
    5. '(h' → logprob: -2.770965099334717
    6. '(d' → logprob: -3.020965099334717
    7. 'd' → logprob: -3.270965099334717
    8. 'hp' → logprob: -3.770965099334717
    9. '```' → logprob: -3.770965099334717
    10. '(' → logprob: -3.770965099334717

Token 1897: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.3228299021720886
    2. '(' → logprob: -1.3228299617767334
    3. ' (' → logprob: -5.822829723358154
    4. '((' → logprob: -6.072829723358154
    5. 'h' → logprob: -6.697829723358154
    6. '       ' → logprob: -7.197829723358154
    7. 'hp' → logprob: -7.822829723358154
    8. '   ' → logprob: -8.072830200195312
    9. '(
' → logprob: -8.072830200195312
    10. '           ' → logprob: -8.197830200195312

Token 1898: '/d' (ID: 6662)
  Prédit: '/d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/d' → logprob: -0.2175290286540985
    2. ' /' → logprob: -1.842529058456421
    3. '/' → logprob: -3.467529058456421
    4. '/h' → logprob: -5.592528820037842
    5. ')' → logprob: -6.842528820037842
    6. '           ' → logprob: -8.217529296875
    7. '/D' → logprob: -8.967529296875
    8. '       ' → logprob: -8.967529296875
    9. '/(' → logprob: -9.217529296875
    10. '               ' → logprob: -9.342529296875

Token 1899: 'mg' (ID: 15026)
  Prédit: 'mg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mg' → logprob: -0.00026622318546287715
    2. 'm' → logprob: -9.000266075134277
    3. 'amage' → logprob: -10.500266075134277
    4. '   ' → logprob: -10.625266075134277
    5. '
' → logprob: -10.750266075134277
    6. 'mage' → logprob: -10.875266075134277
    7. ')' → logprob: -11.375266075134277
    8. ' dmg' → logprob: -12.000266075134277
    9. 'd' → logprob: -12.125266075134277
    10. 'g' → logprob: -12.750266075134277

Token 1900: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015815917402505875
    2. ')
' → logprob: -4.765815734863281
    3. ')+' → logprob: -5.640815734863281
    4. '//' → logprob: -6.640815734863281
    5. '):
' → logprob: -7.890815734863281
    6. '[i' → logprob: -8.015815734863281
    7. '+' → logprob: -8.140815734863281
    8. '       ' → logprob: -8.390815734863281
    9. '):' → logprob: -8.390815734863281
    10. ')//' → logprob: -8.640815734863281

Token 1901: ' *' (ID: 425)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13267922401428223
    2. '           ' → logprob: -3.7576792240142822
    3. '
' → logprob: -4.132678985595703
    4. ' for' → logprob: -4.132678985595703
    5. '```' → logprob: -4.257678985595703
    6. 'for' → logprob: -4.382678985595703
    7. '   ' → logprob: -5.132678985595703
    8. ']' → logprob: -5.382678985595703
    9. '               ' → logprob: -5.632678985595703
    10. ':
' → logprob: -5.757678985595703

Token 1902: ' mp' (ID: 11543)
  Prédit: ' mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mp' → logprob: -0.34869125485420227
    2. 'mp' → logprob: -1.2236912250518799
    3. '```' → logprob: -9.3486909866333
    4. '(mp' → logprob: -10.3486909866333
    5. 'single' → logprob: -10.8486909866333
    6. ')' → logprob: -10.9736909866333
    7. ' single' → logprob: -11.0986909866333
    8. '[' → logprob: -11.2236909866333
    9. ' MP' → logprob: -11.4736909866333
    10. 'MP' → logprob: -11.5986909866333

Token 1903: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13092263042926788
    2. ' for' → logprob: -3.630922555923462
    3. '
' → logprob: -4.005922794342041
    4. '```' → logprob: -4.380922794342041
    5. 'for' → logprob: -4.630922794342041
    6. ')' → logprob: -4.755922794342041
    7. ':
' → logprob: -5.005922794342041
    8. ')
' → logprob: -5.130922794342041
    9. '           ' → logprob: -5.255922794342041
    10. '   ' → logprob: -5.505922794342041

Token 1904: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11533117294311523
    2. 'for' → logprob: -3.4903311729431152
    3. '```' → logprob: -3.7403311729431152
    4. '           ' → logprob: -4.115331172943115
    5. ' for' → logprob: -4.240331172943115
    6. '
' → logprob: -4.490331172943115
    7. ',' → logprob: -6.365331172943115
    8. '                   ' → logprob: -6.490331172943115
    9. '#' → logprob: -6.490331172943115
    10. 'import' → logprob: -6.740331172943115

Token 1905: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03353596106171608
    2. 'for' → logprob: -4.658535957336426
    3. 'import' → logprob: -5.158535957336426
    4. '
' → logprob: -5.408535957336426
    5. ' for' → logprob: -5.658535957336426
    6. '```' → logprob: -5.783535957336426
    7. 'best' → logprob: -6.533535957336426
    8. '           ' → logprob: -6.533535957336426
    9. '#' (adapté à ' #') → logprob: -6.783535957336426
    10. '   ' → logprob: -7.283535957336426

Token 1906: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4779711663722992
    2. '       ' → logprob: -1.3529711961746216
    3. ' for' → logprob: -3.102971076965332
    4. '#' → logprob: -3.602971076965332
    5. 'max' → logprob: -4.727971076965332
    6. '
' → logprob: -4.852971076965332
    7. 'import' → logprob: -5.102971076965332
    8. ']' → logprob: -5.227971076965332
    9. '```' → logprob: -5.227971076965332
    10. '           ' → logprob: -6.352971076965332

Token 1907: ' all' (ID: 722)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5230038166046143
    2. 'd' → logprob: -1.2730038166046143
    3. 'res' → logprob: -2.5230038166046143
    4. ' h' → logprob: -4.148003578186035
    5. ' d' → logprob: -4.523003578186035
    6. 'i' → logprob: -5.148003578186035
    7. ' residual' → logprob: -5.148003578186035
    8. 'hp' → logprob: -5.898003578186035
    9. 'each' → logprob: -6.773003578186035
    10. ' i' → logprob: -7.523003578186035

Token 1908: ' monsters' (ID: 59311)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.501857340335846
    2. 'sp' → logprob: -2.251857280731201
    3. 'd' → logprob: -2.501857280731201
    4. 'single' → logprob: -2.751857280731201
    5. '_sp' → logprob: -4.001857280731201
    6. '#' → logprob: -4.126857280731201
    7. 'for' → logprob: -4.376857280731201
    8. '   ' → logprob: -4.626857280731201
    9. ']' → logprob: -4.751857280731201
    10. ' i' → logprob: -4.751857280731201

Token 1909: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13975200057029724
    2. 'for' → logprob: -2.88975191116333
    3. '```' → logprob: -4.13975191116333
    4. ',' → logprob: -4.26475191116333
    5. 'import' → logprob: -4.63975191116333
    6. '#' → logprob: -4.76475191116333
    7. ' for' → logprob: -4.88975191116333
    8. ':
' → logprob: -5.63975191116333
    9. ':' → logprob: -5.76475191116333
    10. 'max' → logprob: -5.88975191116333

Token 1910: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40887823700904846
    2. 'res' → logprob: -1.658878207206726
    3. 'result' → logprob: -2.9088783264160156
    4. '       ' → logprob: -3.5338783264160156
    5. 'answer' → logprob: -4.158878326416016
    6. 'import' → logprob: -4.658878326416016
    7. 'min' → logprob: -4.783878326416016
    8. '```' → logprob: -5.033878326416016
    9. 'ans' → logprob: -5.283878326416016
    10. 'best' → logprob: -5.658878326416016

Token 1911: ' each' (ID: 2454)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0105564184486866
    2. 'res' → logprob: -5.635556221008301
    3. 'h' → logprob: -5.885556221008301
    4. ' d' → logprob: -6.385556221008301
    5. 'damage' → logprob: -6.510556221008301
    6. 'hp' → logprob: -8.3855562210083
    7. 'hit' → logprob: -9.3855562210083
    8. '   ' → logprob: -9.5105562210083
    9. 'remaining' → logprob: -9.5105562210083
    10. 'i' → logprob: -9.6355562210083

Token 1912: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.17149627208709717
    2. ' d' → logprob: -3.0464963912963867
    3. 'h' → logprob: -3.2964963912963867
    4. 'i' → logprob: -4.421496391296387
    5. ' h' → logprob: -4.546496391296387
    6. 'res' → logprob: -4.671496391296387
    7. ' possible' → logprob: -5.171496391296387
    8. 'possible' → logprob: -5.171496391296387
    9. 'hp' → logprob: -5.296496391296387
    10. 'single' → logprob: -5.546496391296387

Token 1913: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3857651650905609
    2. 'in' → logprob: -1.5107651948928833
    3. ':
' → logprob: -3.2607650756835938
    4. ',' → logprob: -3.3857650756835938
    5. ':' → logprob: -4.635765075683594
    6. '       ' → logprob: -5.260765075683594
    7. '
' → logprob: -6.260765075683594
    8. '   ' → logprob: -6.635765075683594
    9. '           ' → logprob: -7.010765075683594
    10. '+' → logprob: -7.010765075683594

Token 1914: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.135819760151207e-05
    2. '0' → logprob: -10.37507152557373
    3. ' range' → logprob: -10.50007152557373
    4. '[' → logprob: -11.62507152557373
    5. '
' → logprob: -13.75007152557373
    6. '`' → logprob: -14.25007152557373
    7. '```' → logprob: -14.25007152557373
    8. 'dp' → logprob: -15.00007152557373
    9. '(range' → logprob: -15.75007152557373
    10. 'd' → logprob: -15.87507152557373

Token 1915: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00032747918157838285
    2. '0' → logprob: -8.125327110290527
    3. ' range' → logprob: -10.625327110290527
    4. '[' → logprob: -12.500327110290527
    5. '
' → logprob: -14.250327110290527
    6. 'dp' → logprob: -14.750327110290527
    7. '(range' → logprob: -14.875327110290527
    8. 'r' → logprob: -15.125327110290527
    9. '```' → logprob: -15.250327110290527
    10. '   ' → logprob: -15.500327110290527

Token 1916: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14883527159690857
    2. '..' → logprob: -2.1488351821899414
    3. ',max' → logprob: -4.398835182189941
    4. '
' → logprob: -5.523835182189941
    5. ' ,' → logprob: -5.773835182189941
    6. ',
' → logprob: -7.273835182189941
    7. '   ' → logprob: -7.773835182189941
    8. '       ' → logprob: -7.898835182189941
    9. '(max' → logprob: -8.773835182189941
    10. ' ' → logprob: -8.898835182189941

Token 1917: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0001593195047462359
    2. ' max' → logprob: -8.75015926361084
    3. '
' → logprob: -15.00015926361084
    4. 'd' → logprob: -16.125160217285156
    5. '   ' → logprob: -16.250160217285156
    6. '(max' → logprob: -16.250160217285156
    7. '[max' → logprob: -16.375160217285156
    8. 'dp' → logprob: -17.375160217285156
    9. '```' → logprob: -17.500160217285156
    10. ',max' → logprob: -17.750160217285156

Token 1918: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -1.7120533811976202e-05
    2. '
' → logprob: -11.625017166137695
    3. '   ' → logprob: -13.125017166137695
    4. '```' → logprob: -13.500017166137695
    5. '+' → logprob: -13.625017166137695
    6. ']' → logprob: -13.875017166137695
    7. '[i' → logprob: -14.500017166137695
    8. 'P' → logprob: -14.750017166137695
    9. '``' → logprob: -14.750017166137695
    10. '[' → logprob: -15.375017166137695

Token 1919: ':

' (ID: 1402)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.23678351938724518
    2. ':' → logprob: -1.861783504486084
    3. '+' → logprob: -3.486783504486084
    4. '       ' → logprob: -4.486783504486084
    5. ',' → logprob: -5.736783504486084
    6. '[' → logprob: -6.111783504486084
    7. 'for' → logprob: -6.361783504486084
    8. '```' → logprob: -6.611783504486084
    9. '   ' → logprob: -7.111783504486084
    10. ']:
' → logprob: -7.236783504486084

Token 1920: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026144567877054214
    2. 'for' → logprob: -4.651144504547119
    3. ' for' → logprob: -4.651144504547119
    4. '```' → logprob: -5.276144504547119
    5. '           ' → logprob: -7.776144504547119
    6. '   ' → logprob: -7.901144504547119
    7. '
' → logprob: -8.526144981384277
    8. 'import' → logprob: -8.651144981384277
    9. ',' → logprob: -9.026144981384277
    10. ')' → logprob: -10.276144981384277

Token 1921: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3963094651699066
    2. '       ' → logprob: -1.271309494972229
    3. 'total' → logprob: -4.0213093757629395
    4. 'result' → logprob: -4.6463093757629395
    5. ' for' → logprob: -5.1463093757629395
    6. '   ' → logprob: -5.3963093757629395
    7. 'res' → logprob: -5.6463093757629395
    8. '
' → logprob: -6.2713093757629395
    9. '```' → logprob: -6.6463093757629395
    10. 'answer' → logprob: -7.7713093757629395

Token 1922: ' For' (ID: 2214)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5014182329177856
    2. 'result' → logprob: -2.251418113708496
    3. 'for' → logprob: -2.251418113708496
    4. 'min' → logprob: -2.626418113708496
    5. 'best' → logprob: -2.751418113708496
    6. '       ' → logprob: -3.876418113708496
    7. 'answer' → logprob: -5.001418113708496
    8. 'total' → logprob: -5.251418113708496
    9. 'ans' → logprob: -5.501418113708496
    10. '   ' → logprob: -6.126418113708496

Token 1923: ' each' (ID: 2454)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.007467250805348158
    2. 'h' → logprob: -5.882467269897461
    3. 'res' → logprob: -6.132467269897461
    4. 'i' → logprob: -7.132467269897461
    5. 'hp' → logprob: -7.507467269897461
    6. 'damage' → logprob: -7.757467269897461
    7. ' d' → logprob: -8.632467269897461
    8. 'single' → logprob: -9.507467269897461
    9. 'remaining' → logprob: -9.632467269897461
    10. 'each' → logprob: -10.007467269897461

Token 1924: ' monster' (ID: 36286)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6194899082183838
    2. ' d' → logprob: -0.9944899082183838
    3. 'i' → logprob: -3.244489908218384
    4. ' i' → logprob: -3.369489908218384
    5. ' in' → logprob: -5.744489669799805
    6. ' hp' → logprob: -5.744489669799805
    7. ' _' → logprob: -6.119489669799805
    8. ' mp' → logprob: -6.494489669799805
    9. 'hp' → logprob: -6.744489669799805
    10. ' h' → logprob: -6.994489669799805

Token 1925: ' i' (ID: 575)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.4507969617843628
    2. 'for' → logprob: -1.8257969617843628
    3. '       ' → logprob: -1.9507969617843628
    4. ',' → logprob: -2.3257970809936523
    5. ' for' → logprob: -2.3257970809936523
    6. ':' → logprob: -2.5757970809936523
    7. ':
' → logprob: -2.8257970809936523
    8. '```' → logprob: -3.3257970809936523
    9. 'in' → logprob: -4.075797080993652
    10. '[i' → logprob: -4.575797080993652

Token 1926: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.085309624671936
    2. '       ' → logprob: -1.210309624671936
    3. ':
' → logprob: -1.960309624671936
    4. ':' → logprob: -2.7103095054626465
    5. ',' → logprob: -3.3353095054626465
    6. ' for' → logprob: -3.3353095054626465
    7. 'for' → logprob: -3.3353095054626465
    8. ' in' → logprob: -3.7103095054626465
    9. '```' → logprob: -5.4603095054626465
    10. '   ' → logprob: -5.4603095054626465

Token 1927: ' residual' (ID: 54782)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8837886452674866
    2. ' for' → logprob: -1.0087885856628418
    3. 'res' → logprob: -2.508788585662842
    4. '       ' → logprob: -2.883788585662842
    5. ' residual' → logprob: -3.133788585662842
    6. '   ' → logprob: -5.133788585662842
    7. ' h' → logprob: -5.258788585662842
    8. 'hp' → logprob: -5.258788585662842
    9. ' res' → logprob: -5.508788585662842
    10. 'h' → logprob: -5.883788585662842

Token 1928: ' =' (ID: 314)
  Prédit: '_hp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hp' → logprob: -0.5434442162513733
    2. ' =' → logprob: -1.2934441566467285
    3. 'HP' → logprob: -2.4184441566467285
    4. 'hp' → logprob: -3.5434441566467285
    5. '_HP' → logprob: -4.7934441566467285
    6. '=' → logprob: -5.0434441566467285
    7. '_h' → logprob: -6.1684441566467285
    8. '```' → logprob: -6.1684441566467285
    9. '_' → logprob: -6.5434441566467285
    10. '   ' → logprob: -6.9184441566467285

Token 1929: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.09347567707300186
    2. ' max' → logprob: -2.468475580215454
    3. 'HP' → logprob: -5.468475818634033
    4. ' HP' → logprob: -9.093475341796875
    5. '0' → logprob: -9.593475341796875
    6. '   ' → logprob: -10.218475341796875
    7. 'res' → logprob: -10.468475341796875
    8. '(max' → logprob: -10.718475341796875
    9. ' ' → logprob: -11.718475341796875
    10. 'hp' → logprob: -11.843475341796875

Token 1930: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012713817704934627
    2. '0' → logprob: -9.000126838684082
    3. ' (' → logprob: -13.125126838684082
    4. '(res' → logprob: -14.625126838684082
    5. '(
' → logprob: -14.875126838684082
    6. 'res' → logprob: -15.000126838684082
    7. '   ' → logprob: -15.375126838684082
    8. '```' → logprob: -16.0001277923584
    9. 'def' → logprob: -16.3751277923584
    10. '(-' → logprob: -17.1251277923584

Token 1931: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0049250200390815735
    2. '(' → logprob: -5.50492525100708
    3. 'HP' → logprob: -7.87992525100708
    4. ' ' → logprob: -8.004924774169922
    5. 'res' → logprob: -10.504924774169922
    6. '   ' → logprob: -10.629924774169922
    7. ')' → logprob: -10.754924774169922
    8. ' (' → logprob: -10.754924774169922
    9. ',' → logprob: -12.504924774169922
    10. '```' → logprob: -12.754924774169922

Token 1932: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6241557598114014
    2. '-' → logprob: -1.6241557598114014
    3. '[i' → logprob: -2.3741557598114014
    4. ' -' → logprob: -2.4991557598114014
    5. '(i' → logprob: -2.8741557598114014
    6. '(' → logprob: -4.3741559982299805
    7. '[' → logprob: -5.1241559982299805
    8. ',i' → logprob: -5.6241559982299805
    9. ' (' → logprob: -5.8741559982299805
    10. ' ,' → logprob: -6.4991559982299805

Token 1933: ' HP' (ID: 21979)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.0008746589301154017
    2. ' HP' → logprob: -7.1258745193481445
    3. '   ' → logprob: -9.875874519348145
    4. 'hp' → logprob: -11.625874519348145
    5. '       ' → logprob: -13.375874519348145
    6. '           ' → logprob: -13.625874519348145
    7. '0' → logprob: -13.750874519348145
    8. '`' → logprob: -13.875874519348145
    9. '```' → logprob: -14.000874519348145
    10. ' ' → logprob: -14.375874519348145

Token 1934: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.4034345187828876e-05
    2. '[' → logprob: -11.12502384185791
    3. ' [' → logprob: -12.12502384185791
    4. ')' → logprob: -13.25002384185791
    5. 'i' → logprob: -13.62502384185791
    6. ')[' → logprob: -15.37502384185791
    7. '   ' → logprob: -16.000024795532227
    8. ']' → logprob: -16.500024795532227
    9. '[
' → logprob: -16.500024795532227
    10. '][' → logprob: -16.625024795532227

Token 1935: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13028639554977417
    2. ']-' → logprob: -3.005286455154419
    3. '-' → logprob: -3.130286455154419
    4. ' -' → logprob: -3.630286455154419
    5. ')' → logprob: -6.88028621673584
    6. '[i' → logprob: -7.25528621673584
    7. '-d' → logprob: -8.50528621673584
    8. ')-' → logprob: -8.63028621673584
    9. '       ' → logprob: -9.75528621673584
    10. '   ' → logprob: -9.88028621673584

Token 1936: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.49588117003440857
    2. ' -' → logprob: -0.995881199836731
    3. '-d' → logprob: -3.8708810806274414
    4. ')' → logprob: -7.745881080627441
    5. ')-' → logprob: -10.120881080627441
    6. ']' → logprob: -10.120881080627441
    7. '   ' → logprob: -10.370881080627441
    8. '[i' → logprob: -10.495881080627441
    9. '-i' → logprob: -10.495881080627441
    10. ' ' → logprob: -10.620881080627441

Token 1937: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.033659763634204865
    2. ' d' → logprob: -3.4086596965789795
    3. 'dp' → logprob: -12.408659934997559
    4. '   ' → logprob: -13.033659934997559
    5. ')d' → logprob: -13.158659934997559
    6. ' ' → logprob: -13.408659934997559
    7. '    ' → logprob: -14.283659934997559
    8. ')' → logprob: -14.283659934997559
    9. '       ' → logprob: -14.283659934997559
    10. '
' → logprob: -14.783659934997559

Token 1938: ')

' (ID: 1029)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5385419726371765
    2. ')' → logprob: -0.9135419726371765
    3. '       ' → logprob: -5.038541793823242
    4. '):
' → logprob: -6.163541793823242
    5. '           ' → logprob: -6.538541793823242
    6. '```' → logprob: -7.163541793823242
    7. ' )
' → logprob: -7.413541793823242
    8. '               ' → logprob: -7.788541793823242
    9. ' )' → logprob: -7.788541793823242
    10. '-' → logprob: -7.788541793823242

Token 1939: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1510360836982727
    2. '           ' → logprob: -2.276036024093628
    3. '               ' → logprob: -3.776036024093628
    4. '```' → logprob: -4.901036262512207
    5. 'for' → logprob: -6.026036262512207
    6. '                   ' → logprob: -6.526036262512207
    7. 'import' → logprob: -7.151036262512207
    8. '                       ' → logprob: -7.276036262512207
    9. ',' → logprob: -7.651036262512207
    10. 'For' → logprob: -7.901036262512207

Token 1940: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03217916563153267
    2. 'for' → logprob: -4.657179355621338
    3. '```' → logprob: -5.032179355621338
    4. ' for' → logprob: -5.657179355621338
    5. '
' → logprob: -5.657179355621338
    6. '           ' → logprob: -5.907179355621338
    7. 'import' → logprob: -7.157179355621338
    8. 'total' → logprob: -7.282179355621338
    9. '   ' → logprob: -7.407179355621338
    10. ',' → logprob: -7.532179355621338

Token 1941: ' For' (ID: 2214)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.1592305898666382
    2. '       ' → logprob: -1.2842305898666382
    3. 'for' → logprob: -1.6592305898666382
    4. 'res' → logprob: -2.7842307090759277
    5. 'cost' → logprob: -2.7842307090759277
    6. 'best' → logprob: -3.7842307090759277
    7. '   ' → logprob: -3.9092307090759277
    8. ' for' → logprob: -4.159230709075928
    9. 'result' → logprob: -4.284230709075928
    10. 'sum' → logprob: -5.284230709075928

Token 1942: ' each' (ID: 2454)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10837800800800323
    2. 'each' → logprob: -3.4833779335021973
    3. 'res' → logprob: -3.8583779335021973
    4. 'single' → logprob: -3.9833779335021973
    5. ' d' → logprob: -4.733377933502197
    6. 'i' → logprob: -4.983377933502197
    7. ' each' → logprob: -5.233377933502197
    8. 'mp' → logprob: -5.358377933502197
    9. ' single' → logprob: -6.858377933502197
    10. 'best' → logprob: -7.358377933502197

Token 1943: ' monster' (ID: 36286)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8564783334732056
    2. 'd' → logprob: -1.9814783334732056
    3. ' i' → logprob: -1.9814783334732056
    4. 'res' → logprob: -2.356478214263916
    5. 'monster' → logprob: -2.356478214263916
    6. ' monster' → logprob: -3.481478214263916
    7. ' d' → logprob: -3.981478214263916
    8. 'mon' → logprob: -4.356478214263916
    9. ' single' → logprob: -4.481478214263916
    10. 'single' → logprob: -4.606478214263916

Token 1944: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06921698153018951
    2. ' i' → logprob: -3.3192169666290283
    3. ',' → logprob: -3.6942169666290283
    4. '```' → logprob: -6.444217205047607
    5. ' in' → logprob: -6.569217205047607
    6. 'import' → logprob: -7.319217205047607
    7. '[i' → logprob: -8.31921672821045
    8. '       ' → logprob: -8.69421672821045
    9. '           ' → logprob: -8.81921672821045
    10. 'in' → logprob: -8.81921672821045

Token 1945: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48082154989242554
    2. ' in' → logprob: -2.2308216094970703
    3. ':' → logprob: -2.4808216094970703
    4. '       ' → logprob: -2.8558216094970703
    5. ':
' → logprob: -2.8558216094970703
    6. '           ' → logprob: -3.8558216094970703
    7. 'in' → logprob: -4.10582160949707
    8. '```' → logprob: -4.85582160949707
    9. 'for' → logprob: -5.60582160949707
    10. '[i' → logprob: -5.85582160949707

Token 1946: ' cost' (ID: 3097)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.15150101482868195
    2. 'cost' → logprob: -2.526500940322876
    3. 'min' → logprob: -3.901500940322876
    4. 'best' → logprob: -4.901501178741455
    5. '       ' → logprob: -5.151501178741455
    6. '   ' → logprob: -5.276501178741455
    7. ' residual' → logprob: -5.776501178741455
    8. 'single' → logprob: -5.901501178741455
    9. ' res' → logprob: -6.026501178741455
    10. '#' → logprob: -6.026501178741455

Token 1947: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3690308630466461
    2. ' =' → logprob: -1.3690308332443237
    3. '[i' → logprob: -4.244030952453613
    4. 'i' → logprob: -4.369030952453613
    5. '_i' → logprob: -5.119030952453613
    6. '   ' → logprob: -5.119030952453613
    7. 'for' → logprob: -5.494030952453613
    8. 's' → logprob: -5.869030952453613
    9. 'to' → logprob: -6.494030952453613
    10. '=max' → logprob: -6.869030952453613

Token 1948: ' kill' (ID: 15874)
  Prédit: 'kill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kill' → logprob: -0.006322524510324001
    2. 'def' → logprob: -6.381322383880615
    3. 'reduce' → logprob: -6.506322383880615
    4. ' kill' → logprob: -6.881322383880615
    5. '
' → logprob: -7.131322383880615
    6. 'deal' → logprob: -8.256322860717773
    7. '   ' → logprob: -8.631322860717773
    8. 'k' → logprob: -9.131322860717773
    9. 'use' → logprob: -9.256322860717773
    10. 'for' → logprob: -9.256322860717773

Token 1949: ' residual' (ID: 54782)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.19077499210834503
    2. '=' → logprob: -3.065774917602539
    3. ' =' → logprob: -3.190774917602539
    4. 'max' → logprob: -3.190774917602539
    5. 'i' → logprob: -4.065774917602539
    6. ' residual' → logprob: -4.815774917602539
    7. 'monster' → logprob: -4.815774917602539
    8. '=max' → logprob: -6.315774917602539
    9. ' i' → logprob: -6.440774917602539
    10. '   ' → logprob: -6.690774917602539

Token 1950: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06471195071935654
    2. '=' → logprob: -3.0647120475769043
    3. '[i' → logprob: -5.814712047576904
    4. '```' → logprob: -5.814712047576904
    5. '_hp' → logprob: -5.814712047576904
    6. '   ' → logprob: -6.689712047576904
    7. 'hp' → logprob: -7.064712047576904
    8. '`' → logprob: -7.439712047576904
    9. '_i' → logprob: -7.564712047576904
    10. 'res' → logprob: -7.564712047576904

Token 1951: ' single' (ID: 4590)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.1575138121843338
    2. 'best' → logprob: -2.2825138568878174
    3. ' single' → logprob: -3.6575138568878174
    4. ' best' → logprob: -6.032513618469238
    5. 'res' → logprob: -6.282513618469238
    6. '1' → logprob: -6.532513618469238
    7. 'all' → logprob: -6.657513618469238
    8. 'mp' → logprob: -6.907513618469238
    9. 'i' → logprob: -6.907513618469238
    10. '0' → logprob: -7.032513618469238

Token 1952: ' spells' (ID: 69967)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.20345108211040497
    2. '_' → logprob: -2.703451156616211
    3. 'sp' → logprob: -2.953451156616211
    4. '-' → logprob: -3.203451156616211
    5. ' _' → logprob: -5.328451156616211
    6. '_target' → logprob: -5.828451156616211
    7. '-sp' → logprob: -6.078451156616211
    8. '_single' → logprob: -6.328451156616211
    9. '-target' → logprob: -6.453451156616211
    10. '_spell' → logprob: -6.453451156616211

Token 1953: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.859900951385498
    2. ' =' → logprob: -1.109900951385498
    3. '=' → logprob: -2.234900951385498
    4. '[i' → logprob: -3.359900951385498
    5. '```' → logprob: -4.109900951385498
    6. '           ' → logprob: -4.109900951385498
    7. ':' → logprob: -4.234900951385498
    8. ' is' → logprob: -4.359900951385498
    9. ':
' → logprob: -4.984900951385498
    10. ' (' → logprob: -4.984900951385498

Token 1954: ' min' (ID: 1349)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.216921865940094
    2. 'min' → logprob: -1.7169218063354492
    3. '0' → logprob: -4.591921806335449
    4. 'best' → logprob: -6.841921806335449
    5. 'res' → logprob: -7.091921806335449
    6. '
' → logprob: -7.591921806335449
    7. 'max' → logprob: -7.716921806335449
    8. 'def' → logprob: -7.841921806335449
    9. '   ' → logprob: -7.966921806335449
    10. '```' → logprob: -8.09192180633545

Token 1955: ' over' (ID: 1072)
  Prédit: '(best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(best' → logprob: -0.27811768651008606
    2. '(
' → logprob: -2.6531176567077637
    3. 'best' → logprob: -2.7781176567077637
    4. '([' → logprob: -3.0281176567077637
    5. '(' → logprob: -3.6531176567077637
    6. '(cost' → logprob: -4.528117656707764
    7. 'cost' → logprob: -5.153117656707764
    8. '([
' → logprob: -5.153117656707764
    9. '(dp' → logprob: -5.903117656707764
    10. '[
' → logprob: -6.153117656707764

Token 1956: ' all' (ID: 722)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.8311662077903748
    2. 'mp' → logprob: -0.9561662077903748
    3. ' mp' → logprob: -2.0811662673950195
    4. ' single' → logprob: -4.4561662673950195
    5. 'best' → logprob: -4.8311662673950195
    6. 'all' → logprob: -4.9561662673950195
    7. '```' → logprob: -4.9561662673950195
    8. 'd' → logprob: -5.3311662673950195
    9. '(mp' → logprob: -5.5811662673950195
    10. '
' → logprob: -6.3311662673950195

Token 1957: ' single' (ID: 4590)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.5957376956939697
    2. ' mp' → logprob: -1.4707376956939697
    3. 'single' → logprob: -2.3457376956939697
    4. ',' → logprob: -3.8457376956939697
    5. ' single' → logprob: -4.095737457275391
    6. '_mp' → logprob: -4.220737457275391
    7. '_,' → logprob: -4.595737457275391
    8. '(mp' → logprob: -4.720737457275391
    9. 'sp' → logprob: -4.970737457275391
    10. '[' → logprob: -5.095737457275391

Token 1958: ' spells' (ID: 69967)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.005698396358639002
    2. 'sp' → logprob: -6.380698204040527
    3. '_spell' → logprob: -6.505698204040527
    4. '_' → logprob: -6.880698204040527
    5. '```' → logprob: -7.880698204040527
    6. '_
' → logprob: -8.505698204040527
    7. '`' → logprob: -9.130698204040527
    8. '_targets' → logprob: -9.255698204040527
    9. ')' → logprob: -9.630698204040527
    10. '_single' → logprob: -9.880698204040527

Token 1959: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.143641471862793
    2. ':' → logprob: -1.518641471862793
    3. ':
' → logprob: -1.643641471862793
    4. '[' → logprob: -2.643641471862793
    5. '
' → logprob: -2.893641471862793
    6. '[
' → logprob: -3.518641471862793
    7. '           ' → logprob: -4.268641471862793
    8. ' for' → logprob: -4.518641471862793
    9. 'for' → logprob: -4.518641471862793
    10. '```' → logprob: -4.518641471862793

Token 1960: ' ceil' (ID: 35964)
  Prédit: '(mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mp' → logprob: -0.6850593090057373
    2. '(' → logprob: -2.4350593090057373
    3. ' (' → logprob: -2.5600593090057373
    4. '((' → logprob: -2.6850593090057373
    5. ' mp' → logprob: -2.9350593090057373
    6. '(max' → logprob: -3.0600593090057373
    7. 'mp' → logprob: -3.0600593090057373
    8. 'hits' → logprob: -4.310059547424316
    9. '```' → logprob: -4.435059547424316
    10. '(h' → logprob: -4.560059547424316

Token 1961: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.03632330521941185
    2. '(' → logprob: -3.536323308944702
    3. ' (' → logprob: -5.286323070526123
    4. 'res' → logprob: -7.286323070526123
    5. '(h' → logprob: -8.036323547363281
    6. '(
' → logprob: -8.411323547363281
    7. ' residual' → logprob: -9.161323547363281
    8. '((' → logprob: -9.286323547363281
    9. '(max' → logprob: -10.911323547363281
    10. ' ' → logprob: -12.036323547363281

Token 1962: 'idual' (ID: 85004)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0749894380569458
    2. 'idual' → logprob: -1.3249894380569458
    3. 'HP' → logprob: -2.1999893188476562
    4. '_hp' → logprob: -2.6999893188476562
    5. 'hp' → logprob: -3.0749893188476562
    6. '   ' → logprob: -3.1999893188476562
    7. ' -' → logprob: -4.449989318847656
    8. ']' → logprob: -4.574989318847656
    9. '_HP' → logprob: -4.699989318847656
    10. '       ' → logprob: -4.824989318847656

Token 1963: '/d' (ID: 6662)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.9377766251564026
    2. '/d' → logprob: -1.3127765655517578
    3. '/res' → logprob: -1.8127765655517578
    4. '/h' → logprob: -2.187776565551758
    5. ' /' → logprob: -2.812776565551758
    6. '(res' → logprob: -6.187776565551758
    7. '           ' → logprob: -6.937776565551758
    8. '/div' → logprob: -8.687776565551758
    9. '/
' → logprob: -8.687776565551758
    10. '                   ' → logprob: -9.312776565551758

Token 1964: 'mg' (ID: 15026)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7379094362258911
    2. 'mg' → logprob: -1.1129094362258911
    3. '   ' → logprob: -1.9879094362258911
    4. '       ' → logprob: -3.9879093170166016
    5. 'm' → logprob: -4.987909317016602
    6. 'mage' → logprob: -5.237909317016602
    7. 'sp' → logprob: -5.362909317016602
    8. '
' → logprob: -5.737909317016602
    9. 'amage' → logprob: -5.862909317016602
    10. ' ' → logprob: -6.112909317016602

Token 1965: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023302172776311636
    2. ')+' → logprob: -6.377330303192139
    3. '[i' → logprob: -8.12732982635498
    4. ')
' → logprob: -8.75232982635498
    5. '/' → logprob: -9.62732982635498
    6. '//' → logprob: -11.12732982635498
    7. ')`' → logprob: -11.12732982635498
    8. '```' → logprob: -11.50232982635498
    9. '`)' → logprob: -12.00232982635498
    10. ' )' → logprob: -12.12732982635498

Token 1966: 'mp' (ID: 2211)
  Prédit: 'mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.014164102263748646
    2. ' mp' → logprob: -4.264163970947266
    3. '_mp' → logprob: -15.139163970947266
    4. '(mp' → logprob: -16.264163970947266
    5. '```' → logprob: -16.514163970947266
    6. '	mp' → logprob: -16.639163970947266
    7. 'pm' → logprob: -16.889163970947266
    8. '`' → logprob: -16.889163970947266
    9. '   ' → logprob: -17.764163970947266
    10. 'MP' → logprob: -18.264163970947266

Token 1967: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29912492632865906
    2. ':
' → logprob: -2.6741249561309814
    3. '
' → logprob: -3.4241249561309814
    4. '           ' → logprob: -4.174124717712402
    5. 'for' → logprob: -4.174124717712402
    6. '```' → logprob: -4.299124717712402
    7. '[' → logprob: -4.424124717712402
    8. ')
' → logprob: -4.549124717712402
    9. ']' → logprob: -4.549124717712402
    10. ':' → logprob: -4.674124717712402

Token 1968: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15369977056980133
    2. 'for' → logprob: -3.1536998748779297
    3. '```' → logprob: -3.1536998748779297
    4. '[' → logprob: -4.40369987487793
    5. ' for' → logprob: -4.77869987487793
    6. '
' → logprob: -5.02869987487793
    7. '           ' → logprob: -5.27869987487793
    8. ']' → logprob: -5.52869987487793
    9. 'import' → logprob: -5.77869987487793
    10. ':
' → logprob: -6.15369987487793

Token 1969: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11714592576026917
    2. '
' → logprob: -3.8671460151672363
    3. '[' → logprob: -3.9921460151672363
    4. '```' → logprob: -3.9921460151672363
    5. ']' → logprob: -4.492146015167236
    6. ':
' → logprob: -5.242146015167236
    7. 'for' → logprob: -5.367146015167236
    8. '        
' → logprob: -5.742146015167236
    9. '\n' → logprob: -5.867146015167236
    10. ')' → logprob: -5.992146015167236

Token 1970: ' We'll' (ID: 46830)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.491313099861145
    2. '       ' → logprob: -1.366313099861145
    3. ' for' → logprob: -3.2413129806518555
    4. '
' → logprob: -3.3663129806518555
    5. ']' → logprob: -4.8663129806518555
    6. '#' → logprob: -4.9913129806518555
    7. '[' → logprob: -5.2413129806518555
    8. ':
' → logprob: -5.2413129806518555
    9. '[
' → logprob: -5.3663129806518555
    10. 'dp' → logprob: -5.4913129806518555

Token 1971: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.7960927486419678
    2. 'for' → logprob: -1.7960927486419678
    3. 'continue' → logprob: -2.0460927486419678
    4. 'import' → logprob: -2.5460927486419678
    5. 'compute' → logprob: -2.9210927486419678
    6. ' pre' → logprob: -3.7960927486419678
    7. 'extend' → logprob: -3.9210927486419678
    8. 'fill' → logprob: -4.796092987060547
    9. 'build' → logprob: -5.046092987060547
    10. '       ' → logprob: -5.046092987060547

Token 1972: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0005190743831917644
    2. 'calculate' → logprob: -9.375518798828125
    3. 'pare' → logprob: -9.750518798828125
    4. '       ' → logprob: -9.750518798828125
    5. 'import' → logprob: -9.875518798828125
    6. 'from' → logprob: -10.125518798828125
    7. '```' → logprob: -10.625518798828125
    8. 'process' → logprob: -10.875518798828125
    9. 'for' → logprob: -10.875518798828125
    10. 'serve' → logprob: -11.250518798828125

Token 1973: ' for' (ID: 395)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.1085472106933594
    2. '       ' → logprob: -1.3585472106933594
    3. 'single' → logprob: -1.8585472106933594
    4. 'best' → logprob: -2.7335472106933594
    5. 'for' → logprob: -3.2335472106933594
    6. '   ' → logprob: -4.108547210693359
    7. 'dp' → logprob: -4.108547210693359
    8. '```' → logprob: -4.233547210693359
    9. 'max' → logprob: -4.358547210693359
    10. 'cost' → logprob: -4.483547210693359

Token 1974: ' all' (ID: 722)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3710651993751526
    2. 'd' → logprob: -1.4960651397705078
    3. 'h' → logprob: -3.371065139770508
    4. 'each' → logprob: -3.496065139770508
    5. 'i' → logprob: -4.996065139770508
    6. 'hp' → logprob: -5.371065139770508
    7. 'damage' → logprob: -5.746065139770508
    8. 'all' → logprob: -5.996065139770508
    9. '   ' → logprob: -7.371065139770508
    10. 'single' → logprob: -7.621065139770508

Token 1975: ' monsters' (ID: 59311)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5669029951095581
    2. 'range' → logprob: -1.816902995109558
    3. 'res' → logprob: -2.6919031143188477
    4. 'single' → logprob: -2.8169031143188477
    5. 'i' → logprob: -3.1919031143188477
    6. 'max' → logprob: -3.5669031143188477
    7. '0' → logprob: -3.8169031143188477
    8. 'N' → logprob: -4.441903114318848
    9. '   ' → logprob: -4.941903114318848
    10. '1' → logprob: -4.941903114318848

Token 1976: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35494595766067505
    2. '```' → logprob: -2.6049458980560303
    3. '
' → logprob: -3.4799458980560303
    4. ' for' → logprob: -3.7299458980560303
    5. 'best' → logprob: -3.7299458980560303
    6. '[' → logprob: -3.9799458980560303
    7. 'import' → logprob: -4.229946136474609
    8. ' best' → logprob: -4.354946136474609
    9. 'for' → logprob: -4.604946136474609
    10. ' =' → logprob: -4.604946136474609

Token 1977: ' for' (ID: 395)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6697431206703186
    2. 'max' → logprob: -1.4197430610656738
    3. 'for' → logprob: -2.169743061065674
    4. ' residual' → logprob: -3.794743061065674
    5. ' for' → logprob: -3.919743061065674
    6. '#' → logprob: -4.044743061065674
    7. ' max' → logprob: -4.044743061065674
    8. '       ' → logprob: -4.419743061065674
    9. 'import' → logprob: -4.919743061065674
    10. '
' → logprob: -5.044743061065674

Token 1978: ' each' (ID: 2454)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5407435894012451
    2. 'd' → logprob: -0.9157435894012451
    3. 'h' → logprob: -4.790743827819824
    4. 'hp' → logprob: -6.290743827819824
    5. 'damage' → logprob: -6.290743827819824
    6. '0' → logprob: -6.665743827819824
    7. '   ' → logprob: -7.040743827819824
    8. ' residual' → logprob: -7.290743827819824
    9. ' d' → logprob: -7.415743827819824
    10. 'all' → logprob: -7.665743827819824

Token 1979: ' residual' (ID: 54782)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2637360990047455
    2. 'res' → logprob: -1.5137361288070679
    3. 'damage' → logprob: -5.263736248016357
    4. 'possible' → logprob: -6.513736248016357
    5. 'r' → logprob: -6.638736248016357
    6. ' d' → logprob: -7.013736248016357
    7. '0' → logprob: -7.013736248016357
    8. 'h' → logprob: -7.263736248016357
    9. ' residual' → logprob: -8.2637357711792
    10. 'hp' → logprob: -8.2637357711792

Token 1980: ' HP' (ID: 21979)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15499037504196167
    2. ' =' → logprob: -2.9049904346466064
    3. ']' → logprob: -4.279990196228027
    4. '[' → logprob: -4.279990196228027
    5. '```' → logprob: -4.904990196228027
    6. ' _' → logprob: -5.154990196228027
    7. '=' → logprob: -5.279990196228027
    8. 'res' → logprob: -5.904990196228027
    9. ')' → logprob: -6.029990196228027
    10. '`' → logprob: -6.029990196228027

Token 1981: ' from' (ID: 591)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.597620964050293
    2. '_res' → logprob: -2.347620964050293
    3. '       ' → logprob: -2.597620964050293
    4. '_
' → logprob: -2.972620964050293
    5. '
' → logprob: -3.222620964050293
    6. 'res' → logprob: -3.472620964050293
    7. '_max' → logprob: -3.597620964050293
    8. '```' → logprob: -3.972620964050293
    9. ' =' → logprob: -4.097620964050293
    10. '#' → logprob: -4.847620964050293

Token 1982: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013274075172375888
    2. ' ' → logprob: -9.37513256072998
    3. '```' → logprob: -10.50013256072998
    4. 'max' → logprob: -11.50013256072998
    5. 'res' → logprob: -12.50013256072998
    6. '
' → logprob: -13.00013256072998
    7. '``' → logprob: -13.50013256072998
    8. '   ' → logprob: -14.37513256072998
    9. 'range' → logprob: -14.50013256072998
    10. '`' → logprob: -14.50013256072998

Token 1983: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019935856107622385
    2. 'max' → logprob: -6.251993656158447
    3. 'range' → logprob: -10.501993179321289
    4. ' ' → logprob: -10.626993179321289
    5. '```' → logprob: -13.314493179321289
    6. '
' → logprob: -13.376993179321289
    7. '(max' → logprob: -13.439493179321289
    8. '[max' → logprob: -13.564493179321289
    9. ' max' → logprob: -13.626993179321289
    10. '1' → logprob: -14.001993179321289

Token 1984: '..' (ID: 485)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4340310096740723
    2. 'max' → logprob: -1.9340310096740723
    3. '100' → logprob: -2.0590310096740723
    4. ',' → logprob: -2.1840310096740723
    5. 'to' → logprob: -2.5590310096740723
    6. ' ' → logprob: -2.9340310096740723
    7. '1' → logprob: -3.0590310096740723
    8. '`' → logprob: -3.3090310096740723
    9. '```' → logprob: -3.4340310096740723
    10. '
' → logprob: -3.6840310096740723

Token 1985: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0005128794582560658
    2. '100' → logprob: -8.250513076782227
    3. ' max' → logprob: -9.375513076782227
    4. '0' → logprob: -9.375513076782227
    5. '
' → logprob: -10.375513076782227
    6. '(max' → logprob: -11.000513076782227
    7. '999' → logprob: -11.875513076782227
    8. '```' → logprob: -11.875513076782227
    9. '[max' → logprob: -12.500513076782227
    10. '99' → logprob: -13.125513076782227

Token 1986: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -1.1472419600977446e-06
    2. 'P' → logprob: -14.625000953674316
    3. '```' → logprob: -15.500000953674316
    4. '+' → logprob: -15.875000953674316
    5. ' HP' → logprob: -16.500001907348633
    6. '   ' → logprob: -16.500001907348633
    7. '_HP' → logprob: -16.500001907348633
    8. 'hp' → logprob: -17.000001907348633
    9. 'PH' → logprob: -17.250001907348633
    10. '
' → logprob: -17.500001907348633

Token 1987: ',' (ID: 11)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8214221596717834
    2. 'single' → logprob: -1.3214221000671387
    3. 'max' → logprob: -2.0714221000671387
    4. '#' → logprob: -3.0714221000671387
    5. '       ' → logprob: -3.0714221000671387
    6. 'pre' → logprob: -3.9464221000671387
    7. '   ' → logprob: -4.196422100067139
    8. 'cost' → logprob: -4.696422100067139
    9. 'dp' → logprob: -5.071422100067139
    10. '
' → logprob: -5.196422100067139

Token 1988: ' minimal' (ID: 19957)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.714965581893921
    2. 'res' → logprob: -1.714965581893921
    3. 'max' → logprob: -2.089965581893921
    4. '#' → logprob: -2.089965581893921
    5. 'import' → logprob: -2.839965581893921
    6. '```' → logprob: -2.964965581893921
    7. '   ' → logprob: -3.214965581893921
    8. 'single' → logprob: -3.589965581893921
    9. '][' → logprob: -4.0899658203125
    10. '[' → logprob: -4.0899658203125

Token 1989: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.2104969024658203
    2. 'mp' → logprob: -2.8354969024658203
    3. 'single' → logprob: -3.2104969024658203
    4. 'best' → logprob: -3.3354969024658203
    5. '```' → logprob: -3.9604969024658203
    6. '
' → logprob: -4.96049690246582
    7. '_mp' → logprob: -5.21049690246582
    8. 'for' → logprob: -5.21049690246582
    9. '``' → logprob: -6.08549690246582
    10. 'dp' → logprob: -6.21049690246582

Token 1990: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0547420978546143
    2. '       ' → logprob: -1.1797420978546143
    3. '   ' → logprob: -2.9297420978546143
    4. '```' → logprob: -2.9297420978546143
    5. 'import' → logprob: -3.0547420978546143
    6. 'res' → logprob: -3.4297420978546143
    7. '#' → logprob: -3.9297420978546143
    8. '_res' → logprob: -4.179741859436035
    9. 'single' → logprob: -4.304741859436035
    10. '\n' → logprob: -4.554741859436035

Token 1991: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6500630378723145
    2. 'single' → logprob: -1.1500630378723145
    3. '```' → logprob: -3.0250630378723145
    4. 'res' → logprob: -3.4000630378723145
    5. ' single' → logprob: -4.0250630378723145
    6. '
' → logprob: -4.1500630378723145
    7. '   ' → logprob: -4.7750630378723145
    8. '#' → logprob: -5.0250630378723145
    9. 'pre' → logprob: -5.2750630378723145
    10. 'cost' → logprob: -5.4000630378723145

Token 1992: ' #' (ID: 1069)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.4918000102043152
    2. '       ' → logprob: -2.11680006980896
    3. 'res' → logprob: -2.11680006980896
    4. '#' (adapté à ' #') → logprob: -3.36680006980896
    5. 'best' → logprob: -3.49180006980896
    6. 'cost' → logprob: -3.74180006980896
    7. 'dp' → logprob: -3.86680006980896
    8. '   ' → logprob: -4.116799831390381
    9. 'pre' → logprob: -4.991799831390381
    10. 'min' → logprob: -5.366799831390381

Token 1993: ' First' (ID: 8338)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.28921687602996826
    2. 'res' → logprob: -2.539216995239258
    3. 'cost' → logprob: -2.914216995239258
    4. 'best' → logprob: -3.539216995239258
    5. 'min' → logprob: -3.789216995239258
    6. '#' → logprob: -4.039216995239258
    7. 'pre' → logprob: -4.039216995239258
    8. 'dp' → logprob: -4.289216995239258
    9. '   ' → logprob: -4.914216995239258
    10. 'max' → logprob: -5.539216995239258

Token 1994: ' pre' (ID: 876)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.553032636642456
    2. 'max' → logprob: -1.678032636642456
    3. 'res' → logprob: -2.678032636642456
    4. 'min' → logprob: -3.053032636642456
    5. 'pre' → logprob: -3.428032636642456
    6. '#' → logprob: -3.553032636642456
    7. 'best' → logprob: -3.678032636642456
    8. 'cost' → logprob: -3.803032636642456
    9. 'dp' → logprob: -4.928032875061035
    10. 'monster' → logprob: -5.928032875061035

Token 1995: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.005429169628769159
    2. 'from' → logprob: -5.880429267883301
    3. 'computed' → logprob: -7.005429267883301
    4. 'import' → logprob: -7.380429267883301
    5. '#' → logprob: -7.880429267883301
    6. 'for' → logprob: -8.5054292678833
    7. 'max' → logprob: -8.7554292678833
    8. 'sum' → logprob: -9.3804292678833
    9. 'pare' → logprob: -10.0054292678833
    10. 'count' → logprob: -10.0054292678833

Token 1996: ' single' (ID: 4590)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.809453547000885
    2. 'max' → logprob: -1.0594534873962402
    3. 'res' → logprob: -2.4344534873962402
    4. 'min' → logprob: -2.6844534873962402
    5. 'cost' → logprob: -4.05945348739624
    6. 'pre' → logprob: -4.43445348739624
    7. 'dp' → logprob: -4.80945348739624
    8. '#' → logprob: -4.93445348739624
    9. 'best' → logprob: -5.93445348739624
    10. 'monster' → logprob: -6.68445348739624

Token 1997: ' spell' (ID: 29176)
  Prédit: '_single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.670759379863739
    2. '_hp' → logprob: -1.7957594394683838
    3. '_cost' → logprob: -2.545759439468384
    4. '_sp' → logprob: -2.795759439468384
    5. 'single' → logprob: -2.795759439468384
    6. '_spell' → logprob: -3.295759439468384
    7. '_damage' → logprob: -3.920759439468384
    8. 'cost' → logprob: -4.045759201049805
    9. '_mp' → logprob: -4.545759201049805
    10. '_d' → logprob: -4.670759201049805

Token 1998: ' damages' (ID: 37402)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2604423761367798
    2. 'damage' → logprob: -2.0104422569274902
    3. 'cost' → logprob: -2.1354422569274902
    4. '_hp' → logprob: -2.3854422569274902
    5. 'single' → logprob: -3.0104422569274902
    6. '_d' → logprob: -3.0104422569274902
    7. '_mp' → logprob: -3.1354422569274902
    8. '_cost' → logprob: -3.5104422569274902
    9. '_damage' → logprob: -3.6354422569274902
    10. 'mp' → logprob: -3.7604422569274902

Token 1999: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6627702116966248
    2. 'single' → logprob: -1.9127702713012695
    3. '```' → logprob: -2.5377702713012695
    4. '   ' → logprob: -2.9127702713012695
    5. ']' → logprob: -3.5377702713012695
    6. '
' → logprob: -4.1627702713012695
    7. '#' → logprob: -4.2877702713012695
    8. ' single' → logprob: -4.4127702713012695
    9. 'import' → logprob: -4.5377702713012695
    10. '][' → logprob: -4.6627702713012695

Token 2000: ' MPs' (ID: 115547)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mp' → logprob: -1.8405334949493408
    2. 'max' → logprob: -1.9655334949493408
    3. 'cost' → logprob: -2.090533494949341
    4. 'for' → logprob: -2.215533494949341
    5. 'counts' → logprob: -2.715533494949341
    6. 'import' → logprob: -2.965533494949341
    7. 'hits' → logprob: -3.090533494949341
    8. '```' → logprob: -3.215533494949341
    9. 'res' → logprob: -3.465533494949341
    10. 'MP' → logprob: -3.840533494949341

Token 2001: ' arrays' (ID: 38774)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.05819234251976013
    2. 'max' → logprob: -4.808192253112793
    3. '#' → logprob: -5.058192253112793
    4. ' single' → logprob: -5.183192253112793
    5. '```' → logprob: -5.183192253112793
    6. 'd' → logprob: -5.308192253112793
    7. '   ' → logprob: -5.308192253112793
    8. '       ' → logprob: -5.683192253112793
    9. '
' → logprob: -5.683192253112793
    10. '_single' → logprob: -6.433192253112793

Token 2002: '

' (ID: 279)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.29349055886268616
    2. '       ' → logprob: -2.0434906482696533
    3. '
' → logprob: -3.2934906482696533
    4. 'd' → logprob: -3.9184906482696533
    5. ' single' → logprob: -4.418490409851074
    6. ',' → logprob: -4.418490409851074
    7. '   ' → logprob: -4.543490409851074
    8. 'import' → logprob: -4.793490409851074
    9. '```' → logprob: -5.043490409851074
    10. 'mp' → logprob: -6.043490409851074

Token 2003: '       ' (ID: 309)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.346566766500473
    2. 'd' → logprob: -1.4715667963027954
    3. '```' → logprob: -3.596566677093506
    4. ',' → logprob: -4.471566677093506
    5. '       ' → logprob: -5.846566677093506
    6. 'mp' → logprob: -5.846566677093506
    7. 'damage' → logprob: -5.971566677093506
    8. 'import' → logprob: -6.221566677093506
    9. ' single' → logprob: -6.346566677093506
    10. '   ' → logprob: -6.596566677093506

Token 2004: ' single' (ID: 4590)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' (adapté à ' single') → logprob: -0.02130596712231636
    2. 'd' → logprob: -4.146306037902832
    3. '       ' → logprob: -5.771306037902832
    4. 'max' → logprob: -6.521306037902832
    5. 'sing' → logprob: -8.771306037902832
    6. '   ' → logprob: -9.021306037902832
    7. '```' → logprob: -9.646306037902832
    8. 'import' → logprob: -9.646306037902832
    9. '#' → logprob: -10.021306037902832
    10. 'damage' → logprob: -10.021306037902832

Token 2005: '_d' (ID: 1565)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.12970606982707977
    2. '_mp' → logprob: -2.5047061443328857
    3. '_d' → logprob: -3.2547061443328857
    4. '_damage' → logprob: -7.879705905914307
    5. '_spell' → logprob: -7.879705905914307
    6. '_' → logprob: -8.504706382751465
    7. 's' → logprob: -9.629706382751465
    8. 'd' → logprob: -9.754706382751465
    9. ' =' → logprob: -9.754706382751465
    10. 'sp' → logprob: -10.379706382751465

Token 2006: 'mg' (ID: 15026)
  Prédit: 'mg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mg' → logprob: -0.9173135757446289
    2. 'm' → logprob: -1.417313575744629
    3. 'am' → logprob: -1.542313575744629
    4. ' =' → logprob: -2.792313575744629
    5. 'ams' → logprob: -4.042313575744629
    6. 'amage' → logprob: -4.292313575744629
    7. 'ps' → logprob: -4.417313575744629
    8. 's' → logprob: -4.667313575744629
    9. '=' → logprob: -5.167313575744629
    10. 'ms' → logprob: -5.292313575744629

Token 2007: '_mp' (ID: 96508)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6170682907104492
    2. '=' → logprob: -0.8670682907104492
    3. ' =' → logprob: -3.242068290710449
    4. ',' → logprob: -7.867068290710449
    5. '=[]' → logprob: -8.11706829071045
    6. '=[' → logprob: -8.36706829071045
    7. '_list' → logprob: -9.11706829071045
    8. '_s' → logprob: -9.24206829071045
    9. '=[]
' → logprob: -10.86706829071045
    10. ']' → logprob: -10.86706829071045

Token 2008: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16822893917560577
    2. ' =' → logprob: -1.9182289838790894
    3. 's' → logprob: -5.293229103088379
    4. '=[]' → logprob: -6.168229103088379
    5. ',' → logprob: -8.293229103088379
    6. '=[' → logprob: -8.418229103088379
    7. '_s' → logprob: -9.168229103088379
    8. '[]' → logprob: -10.418229103088379
    9. '_list' → logprob: -10.543229103088379
    10. '   ' → logprob: -10.668229103088379

Token 2009: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.030839145183563232
    2. '[]' → logprob: -3.530839204788208
    3. '[]
' → logprob: -6.905838966369629
    4. '[' → logprob: -10.405838966369629
    5. ' [(' → logprob: -10.405838966369629
    6. '[((' → logprob: -11.905838966369629
    7. 'sorted' → logprob: -12.030838966369629
    8. '[]

' → logprob: -12.280838966369629
    9. '[
' → logprob: -12.530838966369629
    10. ' []' → logprob: -13.780838966369629

Token 2010: 'mp' (ID: 2211)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1733030378818512
    2. 'mp' → logprob: -2.4233031272888184
    3. 's' → logprob: -3.0483031272888184
    4. 'sp' → logprob: -4.173303127288818
    5. '(s' → logprob: -6.048303127288818
    6. '(d' → logprob: -6.673303127288818
    7. '(sp' → logprob: -6.923303127288818
    8. 'single' → logprob: -7.298303127288818
    9. 'spell' → logprob: -7.798303127288818
    10. '(mp' → logprob: -8.17330265045166

Token 2011: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013256934471428394
    2. ',d' → logprob: -4.388257026672363
    3. ' ,' → logprob: -7.513257026672363
    4. ',n' → logprob: -10.138257026672363
    5. ',
' → logprob: -10.763257026672363
    6. ',len' → logprob: -10.763257026672363
    7. ',p' → logprob: -11.138257026672363
    8. ')' → logprob: -11.763257026672363
    9. ',int' → logprob: -11.763257026672363
    10. 'd' → logprob: -12.013257026672363

Token 2012: ' dmg' (ID: 168827)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.003265411127358675
    2. ' dmg' → logprob: -5.753265380859375
    3. '   ' → logprob: -11.503265380859375
    4. ')d' → logprob: -11.628265380859375
    5. '\d' → logprob: -12.003265380859375
    6. '       ' → logprob: -12.128265380859375
    7. 'mp' → logprob: -12.128265380859375
    8. ' ' → logprob: -12.378265380859375
    9. '	d' → logprob: -12.378265380859375
    10. '0' → logprob: -12.628265380859375

Token 2013: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033950187265872955
    2. ',' → logprob: -3.658950090408325
    3. ' )' → logprob: -6.033950328826904
    4. ')]' → logprob: -6.033950328826904
    5. ')
' → logprob: -7.033950328826904
    6. ',)' → logprob: -7.408950328826904
    7. '),' → logprob: -8.283949851989746
    8. ' ,' → logprob: -8.658949851989746
    9. '[' → logprob: -9.033949851989746
    10. '           ' → logprob: -9.158949851989746

Token 2014: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39338216185569763
    2. 'for' → logprob: -1.64338219165802
    3. ')' → logprob: -2.7683820724487305
    4. ',' → logprob: -2.8933820724487305
    5. ']' → logprob: -4.6433820724487305
    6. '
' → logprob: -7.3933820724487305
    7. '       ' → logprob: -7.5183820724487305
    8. '           ' → logprob: -8.01838207244873
    9. ',)' → logprob: -8.01838207244873
    10. '   ' → logprob: -8.14338207244873

Token 2015: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.0025505772791802883
    2. '(mp' → logprob: -6.2525506019592285
    3. ' mp' → logprob: -7.5025506019592285
    4. '_,' → logprob: -10.37755012512207
    5. '	mp' → logprob: -11.50255012512207
    6. '_mp' → logprob: -11.62755012512207
    7. '   ' → logprob: -12.12755012512207
    8. ',' → logprob: -12.37755012512207
    9. '/mp' → logprob: -13.50255012512207
    10. '(' → logprob: -13.75255012512207

Token 2016: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0060483659617602825
    2. ',_' → logprob: -5.631048202514648
    3. ',d' → logprob: -6.131048202514648
    4. '_,' → logprob: -8.631048202514648
    5. ',s' → logprob: -10.256048202514648
    6. ' ,' → logprob: -11.131048202514648
    7. 'd' → logprob: -11.131048202514648
    8. ',n' → logprob: -12.756048202514648
    9. ',name' → logprob: -12.756048202514648
    10. ',c' → logprob: -12.881048202514648

Token 2017: ' _,' (ID: 18042)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.0791446790099144
    2. ' _,' → logprob: -2.5791447162628174
    3. '__,' → logprob: -8.829144477844238
    4. ',' → logprob: -9.579144477844238
    5. '_' → logprob: -11.704144477844238
    6. 'd' → logprob: -11.704144477844238
    7. ' ' → logprob: -12.454144477844238
    8. ' ,' → logprob: -12.579144477844238
    9. '...,' → logprob: -13.079144477844238
    10. '   ' → logprob: -13.329144477844238

Token 2018: ' dmg' (ID: 168827)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.009604386053979397
    2. 'single' → logprob: -5.509604454040527
    3. 'mp' → logprob: -6.009604454040527
    4. 's' → logprob: -6.634604454040527
    5. ' dmg' → logprob: -6.634604454040527
    6. ' single' → logprob: -9.634604454040527
    7. '(d' → logprob: -9.759604454040527
    8. '1' → logprob: -10.259604454040527
    9. 'damage' → logprob: -10.509604454040527
    10. '_,' → logprob: -10.509604454040527

Token 2019: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34845873713493347
    2. 'in' → logprob: -1.2234587669372559
    3. '
' → logprob: -12.973458290100098
    4. ')' → logprob: -12.973458290100098
    5. 'single' → logprob: -12.973458290100098
    6. ',' → logprob: -13.473458290100098
    7. '   ' → logprob: -14.098458290100098
    8. ' ' → logprob: -14.348458290100098
    9. '_in' → logprob: -14.598458290100098
    10. 's' → logprob: -14.598458290100098

Token 2020: ' single' (ID: 4590)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' → logprob: -8.828512363834307e-05
    2. ' single' → logprob: -9.375088691711426
    3. '(single' → logprob: -12.875088691711426
    4. '[' → logprob: -14.625088691711426
    5. '[(' → logprob: -15.750088691711426
    6. '   ' → logprob: -16.75008773803711
    7. ' ' → logprob: -17.37508773803711
    8. '
' → logprob: -17.37508773803711
    9. '.single' → logprob: -17.50008773803711
    10. '           ' → logprob: -18.50008773803711

Token 2021: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -1.27099974633893e-05
    2. '_' → logprob: -11.875012397766113
    3. 'sp' → logprob: -12.875012397766113
    4. '_spell' → logprob: -13.625012397766113
    5. ')]' → logprob: -14.375012397766113
    6. '_mp' → logprob: -14.875012397766113
    7. ' _' → logprob: -15.500012397766113
    8. '_single' → logprob: -16.62501335144043
    9. '```' → logprob: -16.62501335144043
    10. '(_' → logprob: -16.62501335144043

Token 2022: 'ells' (ID: 9703)
  Prédit: 'ells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ells' → logprob: -0.007409389596432447
    2. ')' → logprob: -6.007409572601318
    3. '])' → logprob: -7.007409572601318
    4. 'ects' → logprob: -7.132409572601318
    5. 'ell' → logprob: -7.507409572601318
    6. ']' → logprob: -7.757409572601318
    7. '[' → logprob: -7.882409572601318
    8. ')]' → logprob: -8.00740909576416
    9. '```' → logprob: -8.00740909576416
    10. '[
' → logprob: -8.63240909576416

Token 2023: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09282588958740234
    2. ']
' → logprob: -2.4678258895874023
    3. '       ' → logprob: -5.967825889587402
    4. ']:
' → logprob: -8.217825889587402
    5. ' ]' → logprob: -8.592825889587402
    6. ']
' → logprob: -8.717825889587402
    7. '           ' → logprob: -9.092825889587402
    8. ':
' → logprob: -9.217825889587402
    9. '   ' → logprob: -9.717825889587402
    10. ']

' → logprob: -9.717825889587402

Token 2024: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8209962844848633
    2. 'single' → logprob: -1.3209962844848633
    3. '       ' → logprob: -1.6959962844848633
    4. ']
' → logprob: -3.8209962844848633
    5. '```' → logprob: -3.8209962844848633
    6. ',' → logprob: -3.9459962844848633
    7. '``' → logprob: -4.320996284484863
    8. ',
' → logprob: -4.945996284484863
    9. '#' → logprob: -5.195996284484863
    10. ']' → logprob: -5.570996284484863

Token 2025: ' #' (ID: 1069)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.347917765378952
    2. '
' → logprob: -2.4729177951812744
    3. 'max' → logprob: -2.7229177951812744
    4. 'res' → logprob: -3.0979177951812744
    5. '#' (adapté à ' #') → logprob: -3.5979177951812744
    6. '       ' → logprob: -3.8479177951812744
    7. 'cost' → logprob: -4.722917556762695
    8. 'best' → logprob: -4.847917556762695
    9. '```' → logprob: -4.972917556762695
    10. 'for' → logprob: -4.972917556762695

Token 2026: ' For' (ID: 2214)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.7509801983833313
    2. 'max' → logprob: -1.6259801387786865
    3. 'min' → logprob: -1.8759801387786865
    4. 'res' → logprob: -2.3759801387786865
    5. 'cost' → logprob: -3.1259801387786865
    6. '#' → logprob: -4.125980377197266
    7. 'dp' → logprob: -5.000980377197266
    8. 'pre' → logprob: -5.375980377197266
    9. 'best' → logprob: -5.375980377197266
    10. 'from' → logprob: -5.750980377197266

Token 2027: ' any' (ID: 1062)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.21648406982421875
    2. 'hp' → logprob: -2.0914840698242188
    3. 'i' → logprob: -3.5914840698242188
    4. 'h' → logprob: -3.9664840698242188
    5. 'd' → logprob: -4.216484069824219
    6. ' hp' → logprob: -6.216484069824219
    7. ' residual' → logprob: -6.216484069824219
    8. 'r' → logprob: -6.341484069824219
    9. '_res' → logprob: -7.591484069824219
    10. 'single' → logprob: -7.716484069824219

Token 2028: ' monster' (ID: 36286)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5859100222587585
    2. 'h' → logprob: -1.8359100818634033
    3. ' h' → logprob: -2.7109100818634033
    4. ' residual' → logprob: -2.9609100818634033
    5. 'hp' → logprob: -3.2109100818634033
    6. ' single' → logprob: -3.9609100818634033
    7. ' hp' → logprob: -4.085909843444824
    8. 'd' → logprob: -4.085909843444824
    9. ' d' → logprob: -4.210909843444824
    10. 'single' → logprob: -4.710909843444824

Token 2029: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1988252401351929
    2. ' in' → logprob: -1.5738252401351929
    3. ',' → logprob: -1.9488252401351929
    4. ' for' → logprob: -2.1988253593444824
    5. 'in' → logprob: -2.5738253593444824
    6. 'i' → logprob: -3.0738253593444824
    7. ':
' → logprob: -4.198825359344482
    8. '       ' → logprob: -4.198825359344482
    9. '#' → logprob: -4.573825359344482
    10. ':' → logprob: -4.698825359344482

Token 2030: ' best' (ID: 1636)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34327197074890137
    2. ' for' → logprob: -1.3432719707489014
    3. 'res' → logprob: -4.2182722091674805
    4. '       ' → logprob: -4.8432722091674805
    5. '#' → logprob: -5.9682722091674805
    6. '   ' → logprob: -6.7182722091674805
    7. 'max' → logprob: -6.9682722091674805
    8. '           ' → logprob: -7.7182722091674805
    9. '
' → logprob: -8.21827220916748
    10. 'range' → logprob: -8.34327220916748

Token 2031: ' cost' (ID: 3097)
  Prédit: '_single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.03710472211241722
    2. '_mp' → logprob: -3.787104606628418
    3. '_d' → logprob: -5.037104606628418
    4. 'single' → logprob: -5.912104606628418
    5. '_cost' → logprob: -6.037104606628418
    6. 'cost' → logprob: -7.787104606628418
    7. 'mp' → logprob: -7.912104606628418
    8. 'd' → logprob: -8.162104606628418
    9. '_' → logprob: -8.662104606628418
    10. '
' → logprob: -9.037104606628418

Token 2032: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5377506017684937
    2. '=' → logprob: -1.2877506017684937
    3. 'for' → logprob: -2.787750720977783
    4. '_to' → logprob: -4.662750720977783
    5. 'to' → logprob: -4.787750720977783
    6. 's' → logprob: -4.912750720977783
    7. '_for' → logprob: -5.287750720977783
    8. '[' → logprob: -5.287750720977783
    9. '```' → logprob: -5.412750720977783
    10. ' for' → logprob: -5.662750720977783

Token 2033: ' HP' (ID: 21979)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.18697500228881836
    2. ' residual' → logprob: -2.4369750022888184
    3. '0' → logprob: -3.3119750022888184
    4. 'h' → logprob: -4.061975002288818
    5. ' h' → logprob: -4.686975002288818
    6. 'hp' → logprob: -5.061975002288818
    7. 'r' → logprob: -6.061975002288818
    8. ' hp' → logprob: -6.436975002288818
    9. ' ' → logprob: -6.811975002288818
    10. '   ' → logprob: -6.811975002288818

Token 2034: ' h' (ID: 312)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6658991575241089
    2. '=' → logprob: -1.2908991575241089
    3. 'from' → logprob: -3.2908992767333984
    4. 'res' → logprob: -3.4158992767333984
    5. '   ' → logprob: -3.7908992767333984
    6. 'h' → logprob: -3.7908992767333984
    7. 'left' → logprob: -3.7908992767333984
    8. 'r' → logprob: -4.540899276733398
    9. ' ' → logprob: -5.290899276733398
    10. '+' → logprob: -5.415899276733398

Token 2035: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22563695907592773
    2. ' in' → logprob: -2.4756369590759277
    3. '=' → logprob: -3.2256369590759277
    4. ' is' → logprob: -4.725636959075928
    5. ' ' → logprob: -4.975636959075928
    6. ' from' → logprob: -5.225636959075928
    7. ':' → logprob: -5.225636959075928
    8. '
' → logprob: -5.350636959075928
    9. 'from' → logprob: -5.350636959075928
    10. '       ' → logprob: -5.600636959075928

Token 2036: ' min' (ID: 1349)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1464323997497559
    2. '0' → logprob: -1.3964323997497559
    3. 'INF' → logprob: -2.271432399749756
    4. 'def' → logprob: -2.521432399749756
    5. 'single' → logprob: -3.646432399749756
    6. 'min' → logprob: -3.646432399749756
    7. ' [' → logprob: -3.771432399749756
    8. '[
' → logprob: -3.896432399749756
    9. 'for' → logprob: -3.896432399749756
    10. '[h' → logprob: -4.021432399749756

Token 2037: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7342506051063538
    2. '(
' → logprob: -1.609250545501709
    3. 'for' → logprob: -2.109250545501709
    4. ' for' → logprob: -3.234250545501709
    5. '(mp' → logprob: -3.234250545501709
    6. ' (' → logprob: -3.984250545501709
    7. '((' → logprob: -4.609250545501709
    8. '(h' → logprob: -4.609250545501709
    9. ' over' → logprob: -4.984250545501709
    10. '```' → logprob: -5.234250545501709

Token 2038: ' ceil' (ID: 35964)
  Prédit: '(mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mp' → logprob: -0.555853545665741
    2. 'mp' → logprob: -1.8058536052703857
    3. 'single' → logprob: -2.0558536052703857
    4. '(single' → logprob: -2.6808536052703857
    5. '((' → logprob: -4.305853366851807
    6. '(' → logprob: -4.305853366851807
    7. '(h' → logprob: -5.180853366851807
    8. '(
' → logprob: -5.180853366851807
    9. ' mp' → logprob: -5.430853366851807
    10. 'ceil' → logprob: -5.555853366851807

Token 2039: '(h' (ID: 8120)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6368061900138855
    2. '(h' → logprob: -0.7618061900138855
    3. '(
' → logprob: -6.136806011199951
    4. ' (' → logprob: -7.136806011199951
    5. 'h' → logprob: -7.761806011199951
    6. '((' → logprob: -8.38680648803711
    7. '(res' → logprob: -8.38680648803711
    8. 'div' → logprob: -9.38680648803711
    9. '```' → logprob: -9.38680648803711
    10. '``' → logprob: -10.63680648803711

Token 2040: '/d' (ID: 6662)
  Prédit: '/d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/d' → logprob: -0.11542559415102005
    2. '/' → logprob: -2.2404255867004395
    3. ' /' → logprob: -5.9904255867004395
    4. '/div' → logprob: -10.490426063537598
    5. '/
' → logprob: -10.865426063537598
    6. '/s' → logprob: -11.865426063537598
    7. '/mp' → logprob: -11.990426063537598
    8. '/h' → logprob: -12.240426063537598
    9. '/code' → logprob: -12.365426063537598
    10. '/max' → logprob: -12.490426063537598

Token 2041: 'mg' (ID: 15026)
  Prédit: 'mg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mg' → logprob: -0.0016663733404129744
    2. 'm' → logprob: -7.87666654586792
    3. 'amage' → logprob: -8.376666069030762
    4. ')' → logprob: -8.626666069030762
    5. 'd' → logprob: -8.626666069030762
    6. '(d' → logprob: -9.126666069030762
    7. '
' → logprob: -9.501666069030762
    8. '=' → logprob: -9.501666069030762
    9. 'max' → logprob: -9.876666069030762
    10. 'mage' → logprob: -9.876666069030762

Token 2042: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10582823306322098
    2. ')*' → logprob: -2.355828285217285
    3. ')+' → logprob: -5.355828285217285
    4. ')
' → logprob: -8.230828285217285
    5. ')**' → logprob: -8.730828285217285
    6. ')`' → logprob: -9.105828285217285
    7. '[i' → logprob: -9.605828285217285
    8. '*' → logprob: -9.730828285217285
    9. '),' → logprob: -10.730828285217285
    10. '//' → logprob: -10.855828285217285

Token 2043: 'mp' (ID: 2211)
  Prédit: 'mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.3868851363658905
    2. ' mp' → logprob: -1.136885166168213
    3. '(mp' → logprob: -11.636884689331055
    4. '	mp' → logprob: -13.386884689331055
    5. '_mp' → logprob: -13.761884689331055
    6. '1' → logprob: -14.261884689331055
    7. 'pm' → logprob: -14.761884689331055
    8. 'single' → logprob: -15.011884689331055
    9. ' ' → logprob: -15.136884689331055
    10. ' single' → logprob: -15.761884689331055

Token 2044: ' over' (ID: 1072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4763711988925934
    2. '
' → logprob: -1.601371169090271
    3. 'single' → logprob: -2.7263712882995605
    4. 'for' → logprob: -3.3513712882995605
    5. '```' → logprob: -3.8513712882995605
    6. ' for' → logprob: -4.1013712882995605
    7. '``' → logprob: -5.4763712882995605
    8. 'import' → logprob: -5.4763712882995605
    9. ')
' → logprob: -5.8513712882995605
    10. ',' → logprob: -5.8513712882995605

Token 2045: ' single' (ID: 4590)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.2649058401584625
    2. 'mp' → logprob: -2.6399059295654297
    3. ' single' → logprob: -2.6399059295654297
    4. 'all' → logprob: -3.2649059295654297
    5. ' mp' → logprob: -3.6399059295654297
    6. ' all' → logprob: -4.76490592956543
    7. 'd' → logprob: -5.76490592956543
    8. 'range' → logprob: -6.13990592956543
    9. 'h' → logprob: -6.76490592956543
    10. '   ' → logprob: -6.88990592956543

Token 2046: ' spells' (ID: 69967)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5354695320129395
    2. '_sp' → logprob: -1.9104695320129395
    3. '_' → logprob: -2.2854695320129395
    4. '_d' → logprob: -2.5354695320129395
    5. ']' → logprob: -2.9104695320129395
    6. 'for' → logprob: -2.9104695320129395
    7. '0' → logprob: -3.0354695320129395
    8. '```' → logprob: -3.4104695320129395
    9. '_hp' → logprob: -3.4104695320129395
    10. '
' → logprob: -3.6604695320129395

Token 2047: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43690118193626404
    2. 'single' → logprob: -1.9369012117385864
    3. '```' → logprob: -2.561901092529297
    4. '``' → logprob: -3.686901092529297
    5. '_single' → logprob: -4.061901092529297
    6. '#' → logprob: -4.186901092529297
    7. '       ' → logprob: -4.436901092529297
    8. 'for' → logprob: -4.686901092529297
    9. 'res' → logprob: -4.686901092529297
    10. ',' → logprob: -4.811901092529297

Token 2048: '       ' (ID: 309)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.9743369817733765
    2. '       ' → logprob: -1.3493369817733765
    3. '
' → logprob: -1.7243369817733765
    4. 'for' → logprob: -3.099337100982666
    5. '```' → logprob: -3.099337100982666
    6. 'pre' → logprob: -4.224337100982666
    7. 'res' → logprob: -4.349337100982666
    8. 'best' → logprob: -4.474337100982666
    9. 'max' → logprob: -4.474337100982666
    10. 'cost' → logprob: -4.474337100982666

Token 2049: ' #' (ID: 1069)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.8725107312202454
    2. 'max' → logprob: -1.2475106716156006
    3. 'cost' → logprob: -2.3725106716156006
    4. 'res' → logprob: -2.4975106716156006
    5. 'best' → logprob: -2.9975106716156006
    6. 'min' → logprob: -3.7475106716156006
    7. 'for' → logprob: -4.49751091003418
    8. '   ' → logprob: -4.74751091003418
    9. '#' (adapté à ' #') → logprob: -4.99751091003418
    10. '```' → logprob: -5.12251091003418

Token 2050: ' Pre' (ID: 4659)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5284940004348755
    2. 'single' → logprob: -1.9034940004348755
    3. 'cost' → logprob: -2.403493881225586
    4. 'res' → logprob: -2.778493881225586
    5. 'min' → logprob: -3.028493881225586
    6. '#' → logprob: -3.403493881225586
    7. 'best' → logprob: -4.528493881225586
    8. 'pre' → logprob: -5.153493881225586
    9. 'dp' → logprob: -5.278493881225586
    10. 'MAX' → logprob: -6.903493881225586

Token 2051: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.11712769418954849
    2. 'single' → logprob: -2.8671276569366455
    3. 'computed' → logprob: -3.1171276569366455
    4. 'from' → logprob: -5.867127895355225
    5. '#' → logprob: -6.117127895355225
    6. 'import' → logprob: -6.242127895355225
    7. 'max' → logprob: -6.742127895355225
    8. 'cache' → logprob: -7.367127895355225
    9. 'sum' → logprob: -9.367127418518066
    10. 'com' → logprob: -9.617127418518066

Token 2052: ' for' (ID: 395)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3950783908367157
    2. 'single' → logprob: -1.395078420639038
    3. 'res' → logprob: -3.395078420639038
    4. 'pre' → logprob: -4.520078182220459
    5. 'min' → logprob: -4.520078182220459
    6. 'best' → logprob: -5.145078182220459
    7. 'cost' → logprob: -5.145078182220459
    8. 'monster' → logprob: -5.145078182220459
    9. 'dp' → logprob: -6.520078182220459
    10. '#' → logprob: -6.895078182220459

Token 2053: ' residual' (ID: 54782)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.19246943295001984
    2. 'res' → logprob: -2.067469358444214
    3. 'hp' → logprob: -3.192469358444214
    4. ' h' → logprob: -5.442469596862793
    5. ' residual' → logprob: -7.567469596862793
    6. 'single' → logprob: -7.817469596862793
    7. 'monster' → logprob: -8.067469596862793
    8. ' hp' → logprob: -8.067469596862793
    9. 'all' → logprob: -8.317469596862793
    10. 'each' → logprob: -8.567469596862793

Token 2054: ' HP' (ID: 21979)
  Prédit: 'hp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hp' → logprob: -1.507034182548523
    2. ' =' → logprob: -1.632034182548523
    3. 'HP' → logprob: -2.0070343017578125
    4. 'max' → logprob: -2.1320343017578125
    5. '_hp' → logprob: -2.3820343017578125
    6. '=' → logprob: -2.5070343017578125
    7. 'res' → logprob: -3.6320343017578125
    8. 'single' → logprob: -3.6320343017578125
    9. 'h' → logprob: -4.1320343017578125
    10. 'cost' → logprob: -4.3820343017578125

Token 2055: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8720778226852417
    2. 'res' → logprob: -1.3720778226852417
    3. 'single' → logprob: -1.7470778226852417
    4. ' =' → logprob: -2.8720779418945312
    5. '   ' → logprob: -3.6220779418945312
    6. 'cost' → logprob: -4.372077941894531
    7. '=' → logprob: -4.497077941894531
    8. 'for' → logprob: -4.622077941894531
    9. '_res' → logprob: -4.872077941894531
    10. '_single' → logprob: -5.247077941894531

Token 2056: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7858527898788452
    2. ' =' → logprob: -0.9108527898788452
    3. 'from' → logprob: -3.7858529090881348
    4. 'max' → logprob: -3.9108529090881348
    5. 'res' → logprob: -4.535852909088135
    6. 'range' → logprob: -4.660852909088135
    7. 'for' → logprob: -4.660852909088135
    8. 's' → logprob: -5.035852909088135
    9. 'single' → logprob: -5.160852909088135
    10. '_res' → logprob: -5.160852909088135

Token 2057: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6195800304412842
    2. '=' → logprob: -1.6195800304412842
    3. ' =' → logprob: -1.7445800304412842
    4. '
' → logprob: -2.119580030441284
    5. '+' → logprob: -2.494580030441284
    6. '(max' → logprob: -3.244580030441284
    7. '0' → logprob: -3.369580030441284
    8. 'for' → logprob: -3.494580030441284
    9. 'max' → logprob: -3.994580030441284
    10. ' +' → logprob: -4.619580268859863

Token 2058: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0021508578211069107
    2. ' max' → logprob: -6.252151012420654
    3. '0' → logprob: -9.252150535583496
    4. '
' → logprob: -9.502150535583496
    5. '(max' → logprob: -11.002150535583496
    6. '```' → logprob: -11.377150535583496
    7. '[max' → logprob: -12.002150535583496
    8. '   ' → logprob: -12.752150535583496
    9. '=max' → logprob: -12.877150535583496
    10. ' ' → logprob: -13.127150535583496

Token 2059: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -6.034592388459714e-06
    2. '```' → logprob: -13.875005722045898
    3. '+' → logprob: -14.000005722045898
    4. ' HP' → logprob: -14.125005722045898
    5. '   ' → logprob: -14.125005722045898
    6. '_HP' → logprob: -14.375005722045898
    7. 'hp' → logprob: -14.750005722045898
    8. '_hp' → logprob: -14.750005722045898
    9. 'Hp' → logprob: -15.250005722045898
    10. 'P' → logprob: -15.375005722045898

Token 2060: ' for' (ID: 395)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.2780590355396271
    2. 'res' → logprob: -2.1530590057373047
    3. 'cost' → logprob: -3.1530590057373047
    4. 'best' → logprob: -3.6530590057373047
    5. 'min' → logprob: -3.6530590057373047
    6. 'pre' → logprob: -4.778059005737305
    7. 'dp' → logprob: -5.653059005737305
    8. 'for' → logprob: -6.028059005737305
    9. '```' → logprob: -6.028059005737305
    10. '_single' → logprob: -6.278059005737305

Token 2061: ' all' (ID: 722)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.7817675471305847
    2. 'hp' → logprob: -1.7817676067352295
    3. '_' → logprob: -2.4067676067352295
    4. 'single' → logprob: -2.6567676067352295
    5. 'res' → logprob: -2.9067676067352295
    6. 'monster' → logprob: -3.4067676067352295
    7. 'i' → logprob: -3.7817676067352295
    8. 'each' → logprob: -3.7817676067352295
    9. 'mon' → logprob: -4.53176736831665
    10. '_h' → logprob: -4.78176736831665

Token 2062: ' monsters' (ID: 59311)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.85774165391922
    2. 'cost' → logprob: -1.6077415943145752
    3. 'single' → logprob: -1.6077415943145752
    4. 'best' → logprob: -2.982741594314575
    5. 'for' → logprob: -4.232741832733154
    6. ' single' → logprob: -4.357741832733154
    7. 'range' → logprob: -4.607741832733154
    8. 'max' → logprob: -4.732741832733154
    9. ' cost' → logprob: -4.857741832733154
    10. '_res' → logprob: -4.982741832733154

Token 2063: ' individually' (ID: 44468)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.3424839675426483
    2. 'res' → logprob: -2.4674839973449707
    3. 'cost' → logprob: -3.2174839973449707
    4. ' =' → logprob: -3.7174839973449707
    5. '
' → logprob: -3.8424839973449707
    6. 'pre' → logprob: -4.092483997344971
    7. '```' → logprob: -4.467483997344971
    8. '       ' → logprob: -4.467483997344971
    9. '#' → logprob: -4.592483997344971
    10. 'dp' → logprob: -4.717483997344971

Token 2064: ' is' (ID: 382)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.42456939816474915
    2. 'res' → logprob: -2.2995693683624268
    3. 'for' → logprob: -3.0495693683624268
    4. 'best' → logprob: -3.2995693683624268
    5. 'pre' → logprob: -3.4245693683624268
    6. '       ' → logprob: -3.6745693683624268
    7. '
' → logprob: -3.7995693683624268
    8. 'cost' → logprob: -3.7995693683624268
    9. '```' → logprob: -4.424569606781006
    10. '#' → logprob: -5.049569606781006

Token 2065: ' expensive' (ID: 14818)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'im' → logprob: -1.2052861452102661
    2. '[' → logprob: -1.3302861452102661
    3. 'too' → logprob: -1.9552861452102661
    4. 'not' → logprob: -2.7052860260009766
    5. '
' → logprob: -3.7052860260009766
    6. '[]
' → logprob: -3.8302860260009766
    7. 'possible' → logprob: -4.330286026000977
    8. '[]' → logprob: -4.455286026000977
    9. '#' → logprob: -4.455286026000977
    10. '```' → logprob: -4.455286026000977

Token 2066: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3764931857585907
    2. '
' → logprob: -2.626493215560913
    3. ' for' → logprob: -3.001493215560913
    4. '#' → logprob: -3.251493215560913
    5. '   ' → logprob: -3.376493215560913
    6. 'single' → logprob: -3.626493215560913
    7. '```' → logprob: -3.751493215560913
    8. 'for' → logprob: -4.501492977142334
    9. '``' → logprob: -5.126492977142334
    10. '\' → logprob: -5.251492977142334

Token 2067: 'N' (ID: 45)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24427530169487
    2. '0' → logprob: -3.1192753314971924
    3. '
' → logprob: -3.6192753314971924
    4. 'for' → logprob: -3.8692753314971924
    5. '1' → logprob: -4.119275093078613
    6. 'import' → logprob: -4.244275093078613
    7. ':' → logprob: -4.494275093078613
    8. ']' → logprob: -4.619275093078613
    9. '```' → logprob: -4.619275093078613
    10. ')
' → logprob: -4.744275093078613

Token 2068: ' max' (ID: 2999)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4738460779190063
    2. '=' → logprob: -1.5988460779190063
    3. '
' → logprob: -1.8488460779190063
    4. '```' → logprob: -2.598845958709717
    5. 'for' → logprob: -2.973845958709717
    6. ')' → logprob: -3.223845958709717
    7. ']' → logprob: -3.348845958709717
    8. '][' → logprob: -3.473845958709717
    9. '[' → logprob: -3.848845958709717
    10. 'import' → logprob: -3.848845958709717

Token 2069: ' ' (ID: 220)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20577380061149597
    2. '=' → logprob: -1.9557738304138184
    3. '+
' → logprob: -3.7057738304138184
    4. '       ' → logprob: -5.580773830413818
    5. '```' → logprob: -5.705773830413818
    6. '100' → logprob: -5.705773830413818
    7. ' +' → logprob: -6.455773830413818
    8. '0' → logprob: -6.455773830413818
    9. '+=' → logprob: -6.580773830413818
    10. '1' → logprob: -6.830773830413818

Token 2070: '100' (ID: 1353)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2818343937397003
    2. '=' → logprob: -1.656834363937378
    3. '100' → logprob: -3.406834363937378
    4. '1' → logprob: -4.531834602355957
    5. '```' → logprob: -6.281834602355957
    6. '       ' → logprob: -6.406834602355957
    7. '0' → logprob: -7.156834602355957
    8. '+=' → logprob: -7.281834602355957
    9. ')' → logprob: -7.281834602355957
    10. '   ' → logprob: -7.406834602355957

Token 2071: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8105682134628296
    2. '0' → logprob: -1.8105682134628296
    3. '       ' → logprob: -1.8105682134628296
    4. '```' → logprob: -2.685568332672119
    5. ')
' → logprob: -3.185568332672119
    6. ',' → logprob: -3.810568332672119
    7. ')' → logprob: -3.810568332672119
    8. 'for' → logprob: -4.060568332672119
    9. '[' → logprob: -4.185568332672119
    10. '+' → logprob: -5.060568332672119

Token 2072: ' max' (ID: 2999)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.01709499955177307
    2. '(' → logprob: -4.51709508895874
    3. 'max' → logprob: -5.89209508895874
    4. ' (' → logprob: -6.64209508895874
    5. '100' → logprob: -7.26709508895874
    6. '1' → logprob: -7.51709508895874
    7. '101' → logprob: -7.64209508895874
    8. '
' → logprob: -9.517094612121582
    9. '99' → logprob: -10.767094612121582
    10. '(MAX' → logprob: -10.767094612121582

Token 2073: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -3.452426608419046e-05
    2. '
' → logprob: -11.12503433227539
    3. '+' → logprob: -11.75003433227539
    4. '```' → logprob: -12.00003433227539
    5. '_HP' → logprob: -13.00003433227539
    6. '   ' → logprob: -14.12503433227539
    7. '``' → logprob: -14.62503433227539
    8. ' HP' → logprob: -15.25003433227539
    9. '100' → logprob: -15.25003433227539
    10. '`' → logprob: -15.37503433227539

Token 2074: ' ' (ID: 220)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000936355150770396
    2. ' +' → logprob: -7.500936508178711
    3. '```' → logprob: -8.750936508178711
    4. '
' → logprob: -8.875936508178711
    5. '+
' → logprob: -10.750936508178711
    6. '//' → logprob: -11.250936508178711
    7. ')' → logprob: -11.750936508178711
    8. '=' → logprob: -12.250936508178711
    9. ')+' → logprob: -12.375936508178711
    10. '):
' → logprob: -12.500936508178711

Token 2075: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002600245934445411
    2. ' +' → logprob: -8.750260353088379
    3. '+
' → logprob: -10.250260353088379
    4. '```' → logprob: -10.250260353088379
    5. '
' → logprob: -11.125260353088379
    6. ')' → logprob: -12.500260353088379
    7. ')+' → logprob: -12.500260353088379
    8. '=' → logprob: -13.250260353088379
    9. '+=' → logprob: -14.500260353088379
    10. ']+' → logprob: -14.500260353088379

Token 2076: 'e' (ID: 68)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.006760721560567617
    2. '0' → logprob: -5.506760597229004
    3. '```' → logprob: -6.881760597229004
    4. '5' → logprob: -7.131760597229004
    5. '00' → logprob: -8.131760597229004
    6. '6' → logprob: -9.256760597229004
    7. '4' → logprob: -9.631760597229004
    8. '   ' → logprob: -9.756760597229004
    9. '       ' → logprob: -9.881760597229004
    10. '2' → logprob: -10.131760597229004

Token 2077: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.1552312970161438
    2. '4' → logprob: -2.780231237411499
    3. '000' → logprob: -3.530231237411499
    4. '0' → logprob: -3.905231237411499
    5. '6' → logprob: -4.155231475830078
    6. '3' → logprob: -4.530231475830078
    7. '2' → logprob: -5.530231475830078
    8. '7' → logprob: -7.280231475830078
    9. '```' → logprob: -7.530231475830078
    10. '00' → logprob: -8.530231475830078

Token 2078: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0968815088272095
    2. ':' → logprob: -2.34688138961792
    3. ']' → logprob: -2.59688138961792
    4. '=' → logprob: -2.59688138961792
    5. ')' → logprob: -2.72188138961792
    6. '[' → logprob: -2.72188138961792
    7. '```' → logprob: -2.72188138961792
    8. ':
' → logprob: -3.09688138961792
    9. ' =' → logprob: -3.22188138961792
    10. '0' → logprob: -3.72188138961792

Token 2079: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.45785626769065857
    2. 'Too' → logprob: -1.457856297492981
    3. 'too' → logprob: -3.0828561782836914
    4. '```' → logprob: -3.3328561782836914
    5. ' ' → logprob: -4.332856178283691
    6. '10' → logprob: -4.832856178283691
    7. ' too' → logprob: -5.332856178283691
    8. '0' → logprob: -5.832856178283691
    9. ')' → logprob: -5.957856178283691
    10. '...' → logprob: -6.582856178283691

Token 2080: '1' (ID: 16)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.1345750093460083
    2. '```' → logprob: -2.3845748901367188
    3. '10' → logprob: -4.759574890136719
    4. 'Too' → logprob: -4.884574890136719
    5. '0' → logprob: -6.009574890136719
    6. '``' → logprob: -6.134574890136719
    7. 'too' → logprob: -6.384574890136719
    8. 'import' → logprob: -6.884574890136719
    9. '200' → logprob: -7.009574890136719
    10. '"' → logprob: -7.009574890136719

Token 2081: 'e' (ID: 68)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.16209766268730164
    2. '0' → logprob: -2.287097692489624
    3. '00' → logprob: -3.537097692489624
    4. '2' → logprob: -5.162097454071045
    5. '3' → logprob: -5.537097454071045
    6. '```' → logprob: -5.787097454071045
    7. '7' → logprob: -6.287097454071045
    8. '6' → logprob: -6.787097454071045
    9. '5' → logprob: -6.787097454071045
    10. '8' → logprob: -7.287097454071045

Token 2082: '7' (ID: 22)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.3713440001010895
    2. '4' → logprob: -1.871343970298767
    3. '3' → logprob: -2.3713440895080566
    4. '2' → logprob: -3.1213440895080566
    5. '6' → logprob: -4.871344089508057
    6. '0' → logprob: -5.371344089508057
    7. '7' → logprob: -6.371344089508057
    8. '000' → logprob: -6.621344089508057
    9. '1' → logprob: -6.996344089508057
    10. '00' → logprob: -7.246344089508057

Token 2083: ')

' (ID: 1029)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6329498291015625
    2. ')' → logprob: -2.3829498291015625
    3. '#' → logprob: -2.8829498291015625
    4. ':' → logprob: -3.2579498291015625
    5. '...' → logprob: -3.2579498291015625
    6. '0' → logprob: -3.3829498291015625
    7. ',' → logprob: -3.7579498291015625
    8. ']' → logprob: -3.7579498291015625
    9. '```' → logprob: -3.8829498291015625
    10. ':
' → logprob: -4.1329498291015625

Token 2084: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5380597710609436
    2. '[' → logprob: -1.7880597114562988
    3. '[
' → logprob: -2.663059711456299
    4. ',' → logprob: -3.788059711456299
    5. '\' → logprob: -3.913059711456299
    6. '\n' → logprob: -3.913059711456299
    7. 'for' → logprob: -4.038059711456299
    8. '#' → logprob: -4.288059711456299
    9. '```' → logprob: -4.288059711456299
    10. ' for' → logprob: -4.413059711456299

Token 2085: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12045297771692276
    2. 'for' → logprob: -3.245452880859375
    3. 'import' → logprob: -3.620452880859375
    4. '#' (adapté à ' #') → logprob: -3.870452880859375
    5. '
' → logprob: -4.370452880859375
    6. '```' → logprob: -4.870452880859375
    7. ' for' → logprob: -5.995452880859375
    8. 'from' → logprob: -6.370452880859375
    9. '   ' → logprob: -7.245452880859375
    10. 'continue' → logprob: -8.370452880859375

Token 2086: ' Instead' (ID: 21050)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35942360758781433
    2. '#' → logprob: -1.7344236373901367
    3. 'for' → logprob: -3.2344236373901367
    4. 'import' → logprob: -3.8594236373901367
    5. '
' → logprob: -4.359423637390137
    6. ' for' → logprob: -4.734423637390137
    7. '[' → logprob: -4.734423637390137
    8. ' 
' → logprob: -5.484423637390137
    9. '\' → logprob: -5.609423637390137
    10. '[
' → logprob: -5.609423637390137

Token 2087: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1172153949737549
    2. '       ' → logprob: -1.3672153949737549
    3. 'import' → logprob: -1.8672153949737549
    4. '
' → logprob: -2.367215394973755
    5. ':
' → logprob: -3.492215394973755
    6. '[' → logprob: -3.867215394973755
    7. '[
' → logprob: -4.117215156555176
    8. ':' → logprob: -4.242215156555176
    9. 'for' → logprob: -4.367215156555176
    10. ' for' → logprob: -4.367215156555176

Token 2088: ' since' (ID: 3630)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0394911766052246
    2. 'for' → logprob: -1.1644911766052246
    3. '#' → logprob: -1.7894911766052246
    4. 'break' → logprob: -2.9144911766052246
    5. ' for' → logprob: -3.4144911766052246
    6. '```' → logprob: -4.164491176605225
    7. 'dp' → logprob: -4.164491176605225
    8. 'single' → logprob: -4.289491176605225
    9. 'continue' → logprob: -4.414491176605225
    10. '
' → logprob: -5.539491176605225

Token 2089: ' all' (ID: 722)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.35192328691482544
    2. 'max' → logprob: -1.4769232273101807
    3. ' single' → logprob: -3.8519232273101807
    4. 'd' → logprob: -4.60192346572876
    5. ' max' → logprob: -4.85192346572876
    6. 'the' → logprob: -4.85192346572876
    7. '```' → logprob: -5.22692346572876
    8. 'all' → logprob: -5.60192346572876
    9. 'best' → logprob: -6.10192346572876
    10. 'dp' → logprob: -6.10192346572876

Token 2090: ' monsters' (ID: 59311)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.6603319644927979
    2. '_sp' → logprob: -1.7853319644927979
    3. ' single' → logprob: -1.9103319644927979
    4. 'sp' → logprob: -3.535331964492798
    5. '_d' → logprob: -3.535331964492798
    6. 'd' → logprob: -3.660331964492798
    7. '_single' → logprob: -3.660331964492798
    8. ':' → logprob: -4.785331726074219
    9. '_s' → logprob: -4.785331726074219
    10. '_' → logprob: -4.910331726074219

Token 2091: ' have' (ID: 679)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3893535137176514
    2. '[' → logprob: -1.7643535137176514
    3. '```' → logprob: -1.7643535137176514
    4. '=' → logprob: -2.7643535137176514
    5. ':' → logprob: -3.1393535137176514
    6. ' =' → logprob: -3.2643535137176514
    7. ']' → logprob: -3.2643535137176514
    8. '       ' → logprob: -3.5143535137176514
    9. '#' → logprob: -3.6393535137176514
    10. '   ' → logprob: -4.0143537521362305

Token 2092: ' HP' (ID: 21979)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6073115468025208
    2. 'similar' → logprob: -1.607311487197876
    3. 'same' → logprob: -1.857311487197876
    4. 'max' → logprob: -2.732311487197876
    5. 'small' → logprob: -4.107311725616455
    6. 'equal' → logprob: -5.607311725616455
    7. '```' → logprob: -5.607311725616455
    8. 'maximum' → logprob: -6.607311725616455
    9. 'ident' → logprob: -6.607311725616455
    10. 'different' → logprob: -6.982311725616455

Token 2093: ' ≤' (ID: 72554)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9626095294952393
    2. ' <=' → logprob: -2.2126095294952393
    3. '<=' → logprob: -2.7126095294952393
    4. ' =' → logprob: -2.7126095294952393
    5. '[i' → logprob: -2.8376095294952393
    6. '```' → logprob: -3.2126095294952393
    7. ')' → logprob: -3.2126095294952393
    8. '[' → logprob: -3.3376095294952393
    9. ']' → logprob: -3.5876095294952393
    10. '       ' → logprob: -3.7126095294952393

Token 2094: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12777194380760193
    2. '100' → logprob: -2.1277718544006348
    3. '10' → logprob: -7.627771854400635
    4. ' max' → logprob: -9.002772331237793
    5. '
' → logprob: -9.877772331237793
    6. '```' → logprob: -9.877772331237793
    7. ' ' → logprob: -10.377772331237793
    8. '   ' → logprob: -10.752772331237793
    9. '1' → logprob: -10.877772331237793
    10. '0' → logprob: -11.752772331237793

Token 2095: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.00016563729150220752
    2. '_HP' → logprob: -9.000165939331055
    3. '_hp' → logprob: -10.625165939331055
    4. '```' → logprob: -11.625165939331055
    5. '
' → logprob: -12.875165939331055
    6. '_H' → logprob: -13.750165939331055
    7. '=' → logprob: -14.000165939331055
    8. 'H' → logprob: -14.250165939331055
    9. 'hp' → logprob: -14.250165939331055
    10. '``' → logprob: -14.375165939331055

Token 2096: ' ≤' (ID: 72554)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5448123216629028
    2. ':' → logprob: -1.6698123216629028
    3. ':
' → logprob: -1.9198123216629028
    4. ',' → logprob: -2.1698122024536133
    5. '```' → logprob: -2.9198122024536133
    6. ']' → logprob: -3.1698122024536133
    7. '[' → logprob: -3.2948122024536133
    8. '
' → logprob: -3.4198122024536133
    9. '+' → logprob: -3.6698122024536133
    10. ')' → logprob: -4.044812202453613

Token 2097: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.042780496180057526
    2. '10' → logprob: -3.6677803993225098
    3. 'max' → logprob: -4.54278039932251
    4. '999' → logprob: -5.79278039932251
    5. '0' → logprob: -6.91778039932251
    6. '99' → logprob: -7.54278039932251
    7. '
' → logprob: -7.91778039932251
    8. '```' → logprob: -8.167780876159668
    9. '1' → logprob: -8.417780876159668
    10. '9' → logprob: -10.167780876159668

Token 2098: '1' (ID: 16)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.01156845036894083
    2. '10' → logprob: -4.511568546295166
    3. 'max' → logprob: -7.886568546295166
    4. '999' → logprob: -9.636568069458008
    5. '```' → logprob: -10.511568069458008
    6. '1' → logprob: -11.386568069458008
    7. '
' → logprob: -11.386568069458008
    8. '0' → logprob: -11.761568069458008
    9. '99' → logprob: -12.511568069458008
    10. 'import' → logprob: -12.761568069458008

Token 2099: 'e' (ID: 68)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.17756015062332153
    2. '00' → logprob: -2.0525600910186768
    3. '0' → logprob: -3.5525600910186768
    4. '```' → logprob: -6.052560329437256
    5. '6' → logprob: -7.302560329437256
    6. '
' → logprob: -7.677560329437256
    7. '5' → logprob: -8.177559852600098
    8. '       ' → logprob: -8.865059852600098
    9. '7' → logprob: -8.927559852600098
    10. '_' → logprob: -8.990059852600098

Token 2100: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.020023109391331673
    2. '000' → logprob: -4.395023345947266
    3. '6' → logprob: -6.145023345947266
    4. '05' → logprob: -6.270023345947266
    5. '00' → logprob: -7.270023345947266
    6. '0' → logprob: -7.395023345947266
    7. '```' → logprob: -7.395023345947266
    8. '4' → logprob: -7.645023345947266
    9. '7' → logprob: -8.020023345947266
    10. '3' → logprob: -8.520023345947266

Token 2101: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8764106631278992
    2. ':
' → logprob: -1.501410722732544
    3. ':' → logprob: -1.626410722732544
    4. ',' → logprob: -2.876410722732544
    5. '[' → logprob: -3.876410722732544
    6. '<|end|>' → logprob: -4.001410484313965
    7. '```' → logprob: -4.376410484313965
    8. '       ' → logprob: -4.626410484313965
    9. ']' → logprob: -5.001410484313965
    10. ')' → logprob: -5.376410484313965

Token 2102: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4839625358581543
    2. '```' → logprob: -1.4839625358581543
    3. ' for' → logprob: -1.8589625358581543
    4. '#' → logprob: -2.2339625358581543
    5. '
' → logprob: -2.4839625358581543
    6. 'for' → logprob: -2.7339625358581543
    7. 'import' → logprob: -3.6089625358581543
    8. ':
' → logprob: -3.8589625358581543
    9. ':' → logprob: -4.233962535858154
    10. ',' → logprob: -4.358962535858154

Token 2103: ' number' (ID: 2086)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0262459516525269
    2. 'single' → logprob: -1.4012459516525269
    3. '```' → logprob: -2.2762460708618164
    4. 'for' → logprob: -2.7762460708618164
    5. '#' → logprob: -3.0262460708618164
    6. ' for' → logprob: -3.0262460708618164
    7. 'd' → logprob: -3.2762460708618164
    8. ' single' → logprob: -3.9012460708618164
    9. 'mp' → logprob: -4.151246070861816
    10. '
' → logprob: -4.401246070861816

Token 2104: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5338428020477295
    2. 'of' → logprob: -2.5338428020477295
    3. ')' → logprob: -2.6588428020477295
    4. '<=' → logprob: -2.9088428020477295
    5. '       ' → logprob: -3.4088428020477295
    6. 'for' → logprob: -3.7838428020477295
    7. '#' → logprob: -4.283843040466309
    8. ' =' → logprob: -4.283843040466309
    9. ']' → logprob: -4.283843040466309
    10. 'max' → logprob: -4.783843040466309

Token 2105: ' monsters' (ID: 59311)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.3192249834537506
    2. 'mon' → logprob: -2.3192250728607178
    3. 'sp' → logprob: -2.4442250728607178
    4. ' single' → logprob: -3.0692250728607178
    5. '```' → logprob: -3.6942250728607178
    6. '
' → logprob: -5.819224834442139
    7. 'd' → logprob: -5.944224834442139
    8. 'all' → logprob: -6.819224834442139
    9. 'import' → logprob: -7.194224834442139
    10. 'for' → logprob: -7.194224834442139

Token 2106: ' max' (ID: 2999)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.612065851688385
    2. ' <=' → logprob: -1.8620657920837402
    3. '=' → logprob: -1.9870657920837402
    4. ')' → logprob: -3.1120657920837402
    5. ' =' → logprob: -3.8620657920837402
    6. '
' → logprob: -4.23706579208374
    7. '```' → logprob: -4.36206579208374
    8. '#' → logprob: -4.61206579208374
    9. 'max' → logprob: -4.73706579208374
    10. '≤' → logprob: -4.86206579208374

Token 2107: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.293455570936203
    2. '```' → logprob: -2.5434556007385254
    3. '0' → logprob: -2.7934556007385254
    4. '100' → logprob: -3.5434556007385254
    5. '       ' → logprob: -4.418455600738525
    6. '
' → logprob: -4.668455600738525
    7. ' =' → logprob: -4.668455600738525
    8. '=
' → logprob: -4.918455600738525
    9. '+' → logprob: -5.168455600738525
    10. ')' → logprob: -5.293455600738525

Token 2108: '100' (ID: 1353)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.277330607175827
    2. '100' → logprob: -1.6523306369781494
    3. '0' → logprob: -3.2773306369781494
    4. '```' → logprob: -4.77733039855957
    5. '#' → logprob: -7.77733039855957
    6. ']' → logprob: -7.77733039855957
    7. ' =' → logprob: -8.02733039855957
    8. '``' → logprob: -8.02733039855957
    9. '=
' → logprob: -8.02733039855957
    10. '`' → logprob: -8.27733039855957

Token 2109: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.5012574195861816
    2. '       ' → logprob: -1.7512574195861816
    3. ',' → logprob: -2.0012574195861816
    4. '```' → logprob: -2.0012574195861816
    5. ':
' → logprob: -2.2512574195861816
    6. '#' → logprob: -2.3762574195861816
    7. ',
' → logprob: -3.5012574195861816
    8. ':' → logprob: -3.6262574195861816
    9. 'import' → logprob: -3.7512574195861816
    10. '[' → logprob: -4.876257419586182

Token 2110: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.246788740158081
    2. '```' → logprob: -1.496788740158081
    3. ' for' → logprob: -1.996788740158081
    4. '#' → logprob: -1.996788740158081
    5. 'for' → logprob: -3.121788740158081
    6. 'dp' → logprob: -3.621788740158081
    7. ' single' → logprob: -3.621788740158081
    8. 'import' → logprob: -3.746788740158081
    9. 'single' → logprob: -3.871788740158081
    10. ' continue' → logprob: -4.49678897857666

Token 2111: ' total' (ID: 3609)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0377202033996582
    2. 'range' → logprob: -1.1627202033996582
    3. '#' → logprob: -2.287720203399658
    4. '```' → logprob: -2.537720203399658
    5. 'def' → logprob: -3.037720203399658
    6. 'dp' → logprob: -4.162720203399658
    7. 'for' → logprob: -4.162720203399658
    8. 'code' → logprob: -4.287720203399658
    9. ' range' → logprob: -4.912720203399658
    10. 'a' → logprob: -4.912720203399658

Token 2112: ' ' (ID: 220)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.628739595413208
    2. '
' → logprob: -2.503739595413208
    3. 'import' → logprob: -2.503739595413208
    4. 'for' → logprob: -2.628739595413208
    5. '#' → logprob: -2.628739595413208
    6. '       ' → logprob: -2.878739595413208
    7. ' for' → logprob: -3.253739595413208
    8. '``' → logprob: -3.378739595413208
    9. 'single' → logprob: -5.003739356994629
    10. ' single' → logprob: -5.378739356994629

Token 2113: '1' (ID: 16)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6488223075866699
    2. 'import' → logprob: -1.89882230758667
    3. '
' → logprob: -2.39882230758667
    4. '``' → logprob: -2.89882230758667
    5. 'single' → logprob: -3.02382230758667
    6. 'for' → logprob: -3.64882230758667
    7. ' for' → logprob: -3.89882230758667
    8. '#' → logprob: -3.89882230758667
    9. 'dp' → logprob: -4.39882230758667
    10. ' single' → logprob: -4.77382230758667

Token 2114: 'e' (ID: 68)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.13956809043884277
    2. '0' → logprob: -2.1395680904388428
    3. '00' → logprob: -4.514568328857422
    4. '
' → logprob: -7.264568328857422
    5. '```' → logprob: -8.139568328857422
    6. '<<' → logprob: -8.889568328857422
    7. '       ' → logprob: -9.389568328857422
    8. 'import' → logprob: -9.514568328857422
    9. '   ' → logprob: -10.139568328857422
    10. '    
' → logprob: -10.639568328857422

Token 2115: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.6433351635932922
    2. '5' → logprob: -0.7683351635932922
    3. '6' → logprob: -4.643335342407227
    4. '4' → logprob: -7.768335342407227
    5. '8' → logprob: -8.518335342407227
    6. '```' → logprob: -8.643335342407227
    7. '3' → logprob: -10.143335342407227
    8. '**' → logprob: -10.518335342407227
    9. '000' → logprob: -10.518335342407227
    10. '       ' → logprob: -10.893335342407227

Token 2116: ' operations' (ID: 12084)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1041070222854614
    2. '
' → logprob: -1.3541070222854614
    3. '<|end|>' → logprob: -2.479106903076172
    4. ')' → logprob: -2.979106903076172
    5. '```' → logprob: -3.229106903076172
    6. 'for' → logprob: -3.604106903076172
    7. ']' → logprob: -3.729106903076172
    8. ':
' → logprob: -3.729106903076172
    9. 'import' → logprob: -3.979106903076172
    10. '#' → logprob: -4.104106903076172

Token 2117: ' may' (ID: 1340)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24592457711696625
    2. ' for' → logprob: -2.620924472808838
    3. 'for' → logprob: -2.995924472808838
    4. '```' → logprob: -3.370924472808838
    5. '
' → logprob: -3.495924472808838
    6. 'import' → logprob: -5.120924472808838
    7. '#' → logprob: -5.245924472808838
    8. ',' → logprob: -5.870924472808838
    9. '   ' → logprob: -5.995924472808838
    10. 'def' → logprob: -6.495924472808838

Token 2118: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.45861074328422546
    2. '```' → logprob: -1.2086107730865479
    3. 'be' → logprob: -3.708610773086548
    4. '``' → logprob: -3.958610773086548
    5. 'continue' → logprob: -4.458610534667969
    6. ' continue' → logprob: -5.333610534667969
    7. '       ' → logprob: -7.083610534667969
    8. '\n' → logprob: -7.208610534667969
    9. ' =' → logprob: -7.333610534667969
    10. 'for' → logprob: -7.333610534667969

Token 2119: ' possible' (ID: 4149)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3280578553676605
    2. 'too' → logprob: -1.703057885169983
    3. 'fe' → logprob: -4.453057765960693
    4. '
' → logprob: -4.453057765960693
    5. 'possible' → logprob: -4.453057765960693
    6. '``' → logprob: -4.578057765960693
    7. ' too' → logprob: -5.078057765960693
    8. 'int' → logprob: -5.203057765960693
    9. 'un' → logprob: -5.453057765960693
    10. 't' → logprob: -5.578057765960693

Token 2120: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20612840354442596
    2. 'for' → logprob: -2.5811283588409424
    3. '
' → logprob: -3.2061283588409424
    4. ' for' → logprob: -3.5811283588409424
    5. '```' → logprob: -4.3311285972595215
    6. '#' → logprob: -4.4561285972595215
    7. ',' → logprob: -5.3311285972595215
    8. ',
' → logprob: -6.3311285972595215
    9. '           ' → logprob: -6.7061285972595215
    10. 'dp' → logprob: -6.8311285972595215

Token 2121: ' tight' (ID: 17246)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0854710340499878
    2. 'for' → logprob: -2.2104711532592773
    3. '       ' → logprob: -2.3354711532592773
    4. 'continue' → logprob: -2.5854711532592773
    5. 'import' → logprob: -2.7104711532592773
    6. '#' → logprob: -2.7104711532592773
    7. 'too' → logprob: -2.8354711532592773
    8. 'd' → logprob: -3.5854711532592773
    9. 'not' → logprob: -3.8354711532592773
    10. ' for' → logprob: -4.335471153259277

Token 2122: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03737920895218849
    2. '
' → logprob: -4.412379264831543
    3. '```' → logprob: -4.912379264831543
    4. 'for' → logprob: -5.162379264831543
    5. '#' → logprob: -5.662379264831543
    6. ' for' → logprob: -5.787379264831543
    7. '   ' → logprob: -6.537379264831543
    8. ',
' → logprob: -7.412379264831543
    9. ',' → logprob: -7.662379264831543
    10. '           ' → logprob: -7.912379264831543

Token 2123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058221470564603806
    2. '
' → logprob: -3.4332215785980225
    3. '```' → logprob: -4.183221340179443
    4. 'for' → logprob: -5.558221340179443
    5. '#' → logprob: -6.683221340179443
    6. '``' → logprob: -7.308221340179443
    7. ' for' → logprob: -7.558221340179443
    8. '   ' → logprob: -7.808221340179443
    9. '           ' → logprob: -7.933221340179443
    10. '        
' → logprob: -8.058221817016602

Token 2124: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3466169834136963
    2. 'for' → logprob: -1.3466169834136963
    3. ' for' → logprob: -4.846616744995117
    4. '#' (adapté à ' #') → logprob: -4.846616744995117
    5. '```' → logprob: -5.096616744995117
    6. '
' → logprob: -5.471616744995117
    7. 'import' → logprob: -6.221616744995117
    8. '   ' → logprob: -6.596616744995117
    9. 'while' → logprob: -7.346616744995117
    10. 'continue' → logprob: -7.846616744995117

Token 2125: ' Alternatively' (ID: 46417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7822816371917725
    2. 'for' → logprob: -1.1572816371917725
    3. 'import' → logprob: -2.0322816371917725
    4. '#' → logprob: -3.5322816371917725
    5. 'single' → logprob: -3.7822816371917725
    6. '
' → logprob: -4.282281875610352
    7. 'dp' → logprob: -4.407281875610352
    8. ' for' → logprob: -5.157281875610352
    9. '```' → logprob: -5.657281875610352
    10. 'from' → logprob: -5.782281875610352

Token 2126: ' optimize' (ID: 40398)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1688355207443237
    2. '       ' → logprob: -1.1688355207443237
    3. 'import' → logprob: -1.7938355207443237
    4. 'for' → logprob: -2.0438356399536133
    5. 'single' → logprob: -3.6688356399536133
    6. 'continue' → logprob: -3.9188356399536133
    7. '
' → logprob: -4.543835639953613
    8. ' for' → logprob: -4.918835639953613
    9. '```' → logprob: -5.168835639953613
    10. 'max' → logprob: -6.043835639953613

Token 2127: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8978183269500732
    2. 'import' → logprob: -1.3978183269500732
    3. 'for' → logprob: -2.2728183269500732
    4. 'single' → logprob: -2.5228183269500732
    5. '#' → logprob: -2.8978183269500732
    6. '```' → logprob: -3.1478183269500732
    7. 'max' → logprob: -4.272818565368652
    8. ' for' → logprob: -4.647818565368652
    9. '
' → logprob: -4.772818565368652
    10. 'best' → logprob: -4.772818565368652

Token 2128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1366616189479828
    2. 'for' → logprob: -3.2616615295410156
    3. '```' → logprob: -3.2616615295410156
    4. ' for' → logprob: -4.011661529541016
    5. '#' → logprob: -4.511661529541016
    6. '
' → logprob: -5.011661529541016
    7. '[
' → logprob: -5.761661529541016
    8. '[' → logprob: -6.011661529541016
    9. ',' → logprob: -6.636661529541016
    10. '           ' → logprob: -6.636661529541016

Token 2129: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37180018424987793
    2. '#' (adapté à ' #') → logprob: -2.121800184249878
    3. 'import' → logprob: -2.871800184249878
    4. 'from' → logprob: -3.121800184249878
    5. 'for' → logprob: -3.371800184249878
    6. '```' → logprob: -4.121800422668457
    7. 'dp' → logprob: -4.621800422668457
    8. 'max' → logprob: -4.871800422668457
    9. 'single' → logprob: -4.871800422668457
    10. '
' → logprob: -5.371800422668457

Token 2130: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5802912712097168
    2. 'for' → logprob: -1.3302912712097168
    3. '#' → logprob: -2.455291271209717
    4. 'import' → logprob: -3.830291271209717
    5. '```' → logprob: -4.080291271209717
    6. '
' → logprob: -4.205291271209717
    7. 'single' → logprob: -4.580291271209717
    8. 'max' → logprob: -5.330291271209717
    9. ' for' → logprob: -5.455291271209717
    10. '``' → logprob: -5.455291271209717

Token 2131: ' each' (ID: 2454)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7964285612106323
    2. 'h' → logprob: -0.7964285612106323
    3. 'res' → logprob: -3.046428680419922
    4. ' h' → logprob: -4.296428680419922
    5. ' d' → logprob: -4.546428680419922
    6. 'single' → logprob: -4.546428680419922
    7. 'each' → logprob: -5.171428680419922
    8. 'hp' → logprob: -5.921428680419922
    9. ' residual' → logprob: -6.171428680419922
    10. ' each' → logprob: -6.421428680419922

Token 2132: ' single' (ID: 4590)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.7796956300735474
    2. ' single' → logprob: -1.9046956300735474
    3. 'd' → logprob: -2.029695510864258
    4. 'single' → logprob: -2.404695510864258
    5. 'res' → logprob: -3.029695510864258
    6. 'mp' → logprob: -3.404695510864258
    7. ' h' → logprob: -3.654695510864258
    8. ' d' → logprob: -4.529695510864258
    9. ' residual' → logprob: -4.654695510864258
    10. ')' → logprob: -5.154695510864258

Token 2133: ' spell' (ID: 29176)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.1189662292599678
    2. '_' → logprob: -2.8689663410186768
    3. '_sp' → logprob: -3.3689663410186768
    4. ' _' → logprob: -4.743966102600098
    5. '_mp' → logprob: -5.243966102600098
    6. 'd' → logprob: -6.743966102600098
    7. '_spell' → logprob: -6.868966102600098
    8. ']' → logprob: -7.118966102600098
    9. 'mp' → logprob: -7.118966102600098
    10. 'sp' → logprob: -7.493966102600098

Token 2134: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.449199914932251
    2. ',' → logprob: -1.699199914932251
    3. ' for' → logprob: -1.949199914932251
    4. 'mp' → logprob: -2.449199914932251
    5. ':' → logprob: -2.574199914932251
    6. ':
' → logprob: -2.699199914932251
    7. '       ' → logprob: -2.824199914932251
    8. '```' → logprob: -3.199199914932251
    9. '           ' → logprob: -4.324199676513672
    10. ' mp' → logprob: -4.699199676513672

Token 2135: ' their' (ID: 1043)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1596456915140152
    2. ' for' → logprob: -2.2846457958221436
    3. 'mp' → logprob: -4.4096455574035645
    4. 'h' → logprob: -4.5346455574035645
    5. '```' → logprob: -4.6596455574035645
    6. '       ' → logprob: -5.6596455574035645
    7. '#' → logprob: -6.0346455574035645
    8. 'max' → logprob: -6.7846455574035645
    9. ' h' → logprob: -6.9096455574035645
    10. 'cost' → logprob: -7.0346455574035645

Token 2136: ' cost' (ID: 3097)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.7849915623664856
    2. 'd' → logprob: -1.4099915027618408
    3. 'damage' → logprob: -2.034991502761841
    4. 'max' → logprob: -2.909991502761841
    5. 'cost' → logprob: -3.159991502761841
    6. '```' → logprob: -3.659991502761841
    7. ' mp' → logprob: -4.28499174118042
    8. 'res' → logprob: -5.15999174118042
    9. '``' → logprob: -5.53499174118042
    10. 'MP' → logprob: -5.65999174118042

Token 2137: ' function' (ID: 1114)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2504031658172607
    2. ' =' → logprob: -1.3754031658172607
    3. ' for' → logprob: -1.7504031658172607
    4. '=' → logprob: -2.3754031658172607
    5. ' to' → logprob: -3.2504031658172607
    6. '```' → logprob: -3.2504031658172607
    7. 'to' → logprob: -4.00040340423584
    8. ' is' → logprob: -4.37540340423584
    9. ')' → logprob: -4.75040340423584
    10. '   ' → logprob: -4.87540340423584

Token 2138: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6796416640281677
    2. '=' → logprob: -2.6796417236328125
    3. '```' → logprob: -2.8046417236328125
    4. 'for' → logprob: -2.9296417236328125
    5. ' for' → logprob: -2.9296417236328125
    6. ':' → logprob: -3.0546417236328125
    7. '[' → logprob: -3.8046417236328125
    8. '(h' → logprob: -3.8046417236328125
    9. ' (' → logprob: -3.8046417236328125
    10. ')' → logprob: -4.0546417236328125

Token 2139: ' linear' (ID: 23876)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2635163068771362
    2. 'linear' → logprob: -1.3885163068771362
    3. 'lambda' → logprob: -2.013516426086426
    4. 'def' → logprob: -2.513516426086426
    5. 'h' → logprob: -2.888516426086426
    6. '`' → logprob: -3.138516426086426
    7. '``' → logprob: -3.388516426086426
    8. 'a' → logprob: -3.888516426086426
    9. '   ' → logprob: -4.013516426086426
    10. '(h' → logprob: -4.638516426086426

Token 2140: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19517207145690918
    2. '           ' → logprob: -2.445172071456909
    3. ' for' → logprob: -4.195172309875488
    4. '```' → logprob: -4.570172309875488
    5. '               ' → logprob: -4.945172309875488
    6. ':' → logprob: -4.945172309875488
    7. 'for' → logprob: -5.070172309875488
    8. '                   ' → logprob: -5.070172309875488
    9. ':
' → logprob: -5.320172309875488
    10. '[' → logprob: -5.695172309875488

Token 2141: ' piece' (ID: 9047)
  Prédit: 'mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mon' → logprob: -0.07704578340053558
    2. 'non' → logprob: -3.0770456790924072
    3. 'de' → logprob: -4.702045917510986
    4. '#' → logprob: -4.952045917510986
    5. 'conv' → logprob: -5.452045917510986
    6. 'continuous' → logprob: -6.702045917510986
    7. 'strict' → logprob: -7.202045917510986
    8. 'for' → logprob: -7.327045917510986
    9. ' monot' → logprob: -7.452045917510986
    10. 'dp' → logprob: -7.452045917510986

Token 2142: 'wise' (ID: 7480)
  Prédit: 'wise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wise' → logprob: -0.0034354194067418575
    2. '-wise' → logprob: -5.8784356117248535
    3. 'w' → logprob: -8.503435134887695
    4. '```' → logprob: -9.253435134887695
    5. '_w' → logprob: -9.378435134887695
    6. '=' → logprob: -9.503435134887695
    7. '-' → logprob: -10.128435134887695
    8. '-
' → logprob: -10.628435134887695
    9. '_' → logprob: -10.753435134887695
    10. '
' → logprob: -10.878435134887695

Token 2143: ':

' (ID: 1402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9558755159378052
    2. ' for' → logprob: -1.5808755159378052
    3. 'for' → logprob: -2.0808753967285156
    4. '#' → logprob: -2.8308753967285156
    5. '[
' → logprob: -3.3308753967285156
    6. '```' → logprob: -3.7058753967285156
    7. '[' → logprob: -3.9558753967285156
    8. ')' → logprob: -4.205875396728516
    9. 'def' → logprob: -4.330875396728516
    10. '_' → logprob: -4.455875396728516

Token 2144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.441196084022522
    2. ':' → logprob: -1.816196084022522
    3. '[' → logprob: -1.941196084022522
    4. ')' → logprob: -2.8161959648132324
    5. '           ' → logprob: -2.8161959648132324
    6. '```' → logprob: -2.9411959648132324
    7. 'for' → logprob: -3.0661959648132324
    8. '[
' → logprob: -3.4411959648132324
    9. ' for' → logprob: -3.5661959648132324
    10. '#' → logprob: -3.6911959648132324

Token 2145: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5848939418792725
    2. '#' (adapté à ' #') → logprob: -2.3348939418792725
    3. 'for' → logprob: -2.5848939418792725
    4. ':
' → logprob: -2.7098939418792725
    5. '[
' → logprob: -3.2098939418792725
    6. ' for' → logprob: -3.4598939418792725
    7. '```' → logprob: -3.8348939418792725
    8. '[' → logprob: -3.9598939418792725
    9. ':' → logprob: -4.209894180297852
    10. '           ' → logprob: -4.709894180297852

Token 2146: ' ceil' (ID: 35964)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4248940050601959
    2. '       ' → logprob: -1.7998939752578735
    3. '#' → logprob: -2.299894094467163
    4. ' for' → logprob: -3.299894094467163
    5. '```' → logprob: -3.799894094467163
    6. '``' → logprob: -5.799893856048584
    7. 'dp' → logprob: -5.924893856048584
    8. 'For' → logprob: -6.674893856048584
    9. '           ' → logprob: -6.674893856048584
    10. 'import' → logprob: -6.674893856048584

Token 2147: '(h' (ID: 8120)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21335893869400024
    2. '(h' → logprob: -1.7133588790893555
    3. '(
' → logprob: -5.4633588790893555
    4. '(`' → logprob: -5.9633588790893555
    5. '_' → logprob: -6.5883588790893555
    6. '(_' → logprob: -7.0883588790893555
    7. '```' → logprob: -7.3383588790893555
    8. ')' → logprob: -7.9633588790893555
    9. '((' → logprob: -7.9633588790893555
    10. '_h' → logprob: -8.338358879089355

Token 2148: '/d' (ID: 6662)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17992906272411346
    2. '(h' → logprob: -2.30492901802063
    3. '//' → logprob: -4.179929256439209
    4. '[' → logprob: -5.304929256439209
    5. '_h' → logprob: -5.304929256439209
    6. '+' → logprob: -5.429929256439209
    7. '```' → logprob: -5.554929256439209
    8. ' //' → logprob: -5.804929256439209
    9. '==' → logprob: -5.929929256439209
    10. '_' → logprob: -6.054929256439209

Token 2149: 'mg' (ID: 15026)
  Prédit: 'mg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mg' → logprob: -0.000457605579867959
    2. 'm' → logprob: -8.750457763671875
    3. 'amage' → logprob: -9.125457763671875
    4. ')' → logprob: -9.750457763671875
    5. 'mage' → logprob: -10.875457763671875
    6. '_m' → logprob: -11.125457763671875
    7. '```' → logprob: -11.250457763671875
    8. '`' → logprob: -11.625457763671875
    9. 'max' → logprob: -11.750457763671875
    10. ''m' → logprob: -12.250457763671875

Token 2150: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0060102068819105625
    2. ')*' → logprob: -5.756010055541992
    3. ')+' → logprob: -6.506010055541992
    4. ')
' → logprob: -7.756010055541992
    5. ')//' → logprob: -7.756010055541992
    6. ')`' → logprob: -8.506010055541992
    7. ')**' → logprob: -9.756010055541992
    8. '):
' → logprob: -10.256010055541992
    9. '):' → logprob: -10.881010055541992
    10. '))' → logprob: -10.881010055541992

Token 2151: 'mp' (ID: 2211)
  Prédit: 'mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.6328819990158081
    2. ' mp' → logprob: -0.7578819990158081
    3. ')' → logprob: -8.757882118225098
    4. '(mp' → logprob: -10.132882118225098
    5. ' )' → logprob: -10.382882118225098
    6. '```' → logprob: -11.382882118225098
    7. '`' → logprob: -11.507882118225098
    8. '_mp' → logprob: -11.632882118225098
    9. '	mp' → logprob: -11.757882118225098
    10. ' ' → logprob: -12.632882118225098

Token 2152: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10725732892751694
    2. ':' → logprob: -3.73225736618042
    3. '```' → logprob: -3.98225736618042
    4. '*' → logprob: -5.10725736618042
    5. 'for' → logprob: -5.23225736618042
    6. ' *' → logprob: -5.23225736618042
    7. ' for' → logprob: -5.35725736618042
    8. ')
' → logprob: -5.60725736618042
    9. '(h' → logprob: -5.60725736618042
    10. '):' → logprob: -5.60725736618042

Token 2153: ' ((' (ID: 3536)
  Prédit: '(mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mp' → logprob: -0.24720671772956848
    2. ' (' → logprob: -2.122206687927246
    3. 'mp' → logprob: -2.872206687927246
    4. '((' → logprob: -4.122206687927246
    5. ' mp' → logprob: -4.247206687927246
    6. '(' → logprob: -5.497206687927246
    7. ' ((' → logprob: -5.872206687927246
    8. '```' → logprob: -5.997206687927246
    9. '(h' → logprob: -7.247206687927246
    10. '`' → logprob: -7.997206687927246

Token 2154: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0009233691962435842
    2. '(h' → logprob: -7.250923156738281
    3. ' h' → logprob: -9.500923156738281
    4. '```' → logprob: -10.500923156738281
    5. '           ' → logprob: -11.125923156738281
    6. 'single' → logprob: -11.375923156738281
    7. 'res' → logprob: -11.500923156738281
    8. '   ' → logprob: -11.875923156738281
    9. ' (' → logprob: -11.875923156738281
    10. ')' → logprob: -12.125923156738281

Token 2155: ' +' (ID: 659)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.9751893877983093
    2. ' +' → logprob: -1.100189447402954
    3. '+' → logprob: -1.975189447402954
    4. '//' → logprob: -1.975189447402954
    5. ')' → logprob: -4.725189208984375
    6. ')//' → logprob: -7.225189208984375
    7. '   ' → logprob: -7.475189208984375
    8. ' ' → logprob: -7.600189208984375
    9. '       ' → logprob: -7.725189208984375
    10. '+d' → logprob: -7.850189208984375

Token 2156: ' dmg' (ID: 168827)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.000340111117111519
    2. 'single' → logprob: -8.750340461730957
    3. '(d' → logprob: -9.000340461730957
    4. ' dmg' → logprob: -11.000340461730957
    5. '   ' → logprob: -12.000340461730957
    6. ' single' → logprob: -12.500340461730957
    7. '(' → logprob: -12.625340461730957
    8. '\d' → logprob: -12.750340461730957
    9. '(s' → logprob: -12.875340461730957
    10. 'mp' → logprob: -13.000340461730957

Token 2157: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38687896728515625
    2. '-' → logprob: -1.1368789672851562
    3. ' ' → logprob: -12.386878967285156
    4. '```' → logprob: -13.886878967285156
    5. ')' → logprob: -14.011878967285156
    6. '   ' → logprob: -14.261878967285156
    7. '1' → logprob: -15.011878967285156
    8. '       ' → logprob: -15.136878967285156
    9. ')-' → logprob: -15.511878967285156
    10. '  ' → logprob: -15.886878967285156

Token 2158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.763666947837919e-05
    2. ' ' → logprob: -10.00004768371582
    3. '```' → logprob: -14.12504768371582
    4. '   ' → logprob: -14.37504768371582
    5. ')' → logprob: -14.62504768371582
    6. '           ' → logprob: -15.87504768371582
    7. '       ' → logprob: -16.87504768371582
    8. '                   ' → logprob: -16.87504768371582
    9. '
' → logprob: -17.62504768371582
    10. '  ' → logprob: -17.87504768371582

Token 2159: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.029752103611826897
    2. ')' → logprob: -3.529752016067505
    3. ' )' → logprob: -14.279751777648926
    4. '//' → logprob: -15.154751777648926
    5. ')
' → logprob: -15.404751777648926
    6. ')/' → logprob: -15.779751777648926
    7. ')+' → logprob: -16.279752731323242
    8. ')>>' → logprob: -16.404752731323242
    9. '）' → logprob: -16.779752731323242
    10. '   ' → logprob: -17.154752731323242

Token 2160: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.869639476761222e-05
    2. ' dmg' → logprob: -10.500039100646973
    3. '   ' → logprob: -12.875039100646973
    4. '       ' → logprob: -13.625039100646973
    5. ')d' → logprob: -13.625039100646973
    6. '\d' → logprob: -14.500039100646973
    7. '1' → logprob: -14.500039100646973
    8. '           ' → logprob: -14.625039100646973
    9. '     ' → logprob: -14.625039100646973
    10. ')' → logprob: -14.750039100646973

Token 2161: 'mg' (ID: 15026)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2982978820800781
    2. ')//' → logprob: -2.048297882080078
    3. ')' → logprob: -2.173297882080078
    4. '//' → logprob: -5.673297882080078
    5. 'mg' → logprob: -5.923297882080078
    6. ')/' → logprob: -6.048297882080078
    7. ')d' → logprob: -6.048297882080078
    8. '   ' → logprob: -7.173297882080078
    9. ' dmg' → logprob: -7.548297882080078
    10. ')+' → logprob: -7.673297882080078

Token 2162: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023466749116778374
    2. ')*' → logprob: -4.02346658706665
    3. ')//' → logprob: -5.39846658706665
    4. ')+' → logprob: -7.39846658706665
    5. '//' → logprob: -9.398467063903809
    6. '```' → logprob: -10.898467063903809
    7. ')`' → logprob: -11.523467063903809
    8. ')
' → logprob: -11.523467063903809
    9. ' )' → logprob: -11.773467063903809
    10. '*' → logprob: -12.148467063903809

Token 2163: 'mp' (ID: 2211)
  Prédit: 'mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.029751762747764587
    2. ' mp' → logprob: -3.529751777648926
    3. '	mp' → logprob: -14.529751777648926
    4. '(mp' → logprob: -14.654751777648926
    5. '   ' → logprob: -16.65475082397461
    6. '```' → logprob: -16.77975082397461
    7. '_mp' → logprob: -16.77975082397461
    8. '1' → logprob: -16.77975082397461
    9. '           ' → logprob: -17.40475082397461
    10. '       ' → logprob: -17.52975082397461

Token 2164: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04774431884288788
    2. '
' → logprob: -4.422744274139404
    3. '           ' → logprob: -4.797744274139404
    4. ')' → logprob: -4.797744274139404
    5. ' for' → logprob: -5.547744274139404
    6. '```' → logprob: -5.797744274139404
    7. 'for' → logprob: -5.922744274139404
    8. ')
' → logprob: -6.172744274139404
    9. '   ' → logprob: -6.547744274139404
    10. ' +' → logprob: -7.297744274139404

Token 2165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053258370608091354
    2. '
' → logprob: -4.053258419036865
    3. '           ' → logprob: -4.678258419036865
    4. '```' → logprob: -5.178258419036865
    5. ')
' → logprob: -5.428258419036865
    6. ')' → logprob: -5.553258419036865
    7. '#' → logprob: -5.553258419036865
    8. ' for' → logprob: -6.553258419036865
    9. ' +' → logprob: -7.053258419036865
    10. '+' → logprob: -7.178258419036865

Token 2166: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1263628453016281
    2. 'for' → logprob: -2.8763628005981445
    3. '
' → logprob: -3.3763628005981445
    4. ' for' → logprob: -4.3763628005981445
    5. '```' → logprob: -5.2513628005981445
    6. '#' (adapté à ' #') → logprob: -5.5013628005981445
    7. ')
' → logprob: -7.0013628005981445
    8. '           ' → logprob: -7.1263628005981445
    9. '``' → logprob: -7.3763628005981445
    10. '   ' → logprob: -7.3763628005981445

Token 2167: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8885321021080017
    2. 'for' → logprob: -1.0135321617126465
    3. '#' → logprob: -2.0135321617126465
    4. 'max' → logprob: -3.3885321617126465
    5. 'import' → logprob: -4.2635321617126465
    6. 'dp' → logprob: -5.0135321617126465
    7. '```' → logprob: -5.1385321617126465
    8. ' for' → logprob: -5.3885321617126465
    9. 'min' → logprob: -5.5135321617126465
    10. 'def' → logprob: -5.6385321617126465

Token 2168: ' residual' (ID: 54782)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.10695113986730576
    2. ' h' → logprob: -3.2319512367248535
    3. 'each' → logprob: -3.3569512367248535
    4. ' each' → logprob: -4.4819512367248535
    5. 'd' → logprob: -4.8569512367248535
    6. 'single' → logprob: -5.6069512367248535
    7. ' single' → logprob: -6.8569512367248535
    8. ' d' → logprob: -6.8569512367248535
    9. 'all' → logprob: -7.6069512367248535
    10. 'res' → logprob: -7.8569512367248535

Token 2169: ' h' (ID: 312)
  Prédit: '_hp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_hp' → logprob: -1.0201046466827393
    2. '_' → logprob: -1.7701046466827393
    3. '```' → logprob: -2.2701046466827393
    4. 'HP' → logprob: -2.7701046466827393
    5. ' =' → logprob: -3.2701046466827393
    6. ')' → logprob: -3.2701046466827393
    7. '`' → logprob: -3.2701046466827393
    8. '_h' → logprob: -3.3951046466827393
    9. 'hp' → logprob: -3.5201046466827393
    10. '_HP' → logprob: -4.52010440826416

Token 2170: ',' (ID: 11)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.5982574224472046
    2. ')' → logprob: -1.8482574224472046
    3. ' in' → logprob: -1.8482574224472046
    4. '```' → logprob: -2.223257541656494
    5. ' =' → logprob: -2.473257541656494
    6. ':' → logprob: -3.348257541656494
    7. ' <' → logprob: -3.598257541656494
    8. '):
' → logprob: -3.848257541656494
    9. ':
' → logprob: -3.848257541656494
    10. '``' → logprob: -3.973257541656494

Token 2171: ' minimal' (ID: 19957)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9291455149650574
    2. 'for' → logprob: -1.4291455745697021
    3. ' if' → logprob: -2.929145574569702
    4. 'cost' → logprob: -2.929145574569702
    5. ' cost' → logprob: -3.429145574569702
    6. ' we' → logprob: -3.429145574569702
    7. 'if' → logprob: -3.929145574569702
    8. ' single' → logprob: -4.054145336151123
    9. '```' → logprob: -4.054145336151123
    10. ' min' → logprob: -4.429145336151123

Token 2172: ' over' (ID: 1072)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.6775639057159424
    2. '_cost' → logprob: -0.8025639057159424
    3. ' cost' → logprob: -4.052563667297363
    4. '_mp' → logprob: -5.302563667297363
    5. ' =' → logprob: -5.802563667297363
    6. 'single' → logprob: -5.802563667297363
    7. 'mp' → logprob: -5.927563667297363
    8. '```' → logprob: -6.427563667297363
    9. ')' → logprob: -6.677563667297363
    10. '`' → logprob: -6.802563667297363

Token 2173: ' all' (ID: 722)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.4389484226703644
    2. 'all' → logprob: -1.188948392868042
    3. ' all' → logprob: -3.438948392868042
    4. ' single' → logprob: -4.188948631286621
    5. 'mp' → logprob: -7.313948631286621
    6. 'the' → logprob: -7.813948631286621
    7. '(single' → logprob: -7.938948631286621
    8. ' mp' → logprob: -7.938948631286621
    9. 'd' → logprob: -8.313948631286621
    10. 'each' → logprob: -8.313948631286621

Token 2174: ' spells' (ID: 69967)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.1768776774406433
    2. ' single' → logprob: -2.426877737045288
    3. 'mp' → logprob: -4.301877498626709
    4. 'h' → logprob: -4.551877498626709
    5. ' (' → logprob: -5.176877498626709
    6. ')' → logprob: -5.176877498626709
    7. 'd' → logprob: -5.301877498626709
    8. ']' → logprob: -5.426877498626709
    9. ' mp' → logprob: -5.426877498626709
    10. '(h' → logprob: -5.926877498626709

Token 2175: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5985838770866394
    2. ':
' → logprob: -2.598583936691284
    3. ']
' → logprob: -3.098583936691284
    4. '
' → logprob: -3.098583936691284
    5. '```' → logprob: -3.223583936691284
    6. ']' → logprob: -3.473583936691284
    7. '#' → logprob: -3.848583936691284
    8. ':' → logprob: -4.098583698272705
    9. 'import' → logprob: -4.223583698272705
    10. 'def' → logprob: -4.348583698272705

Token 2176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10761290788650513
    2. ' for' → logprob: -3.4826128482818604
    3. '```' → logprob: -3.9826128482818604
    4. 'for' → logprob: -4.2326130867004395
    5. '
' → logprob: -4.4826130867004395
    6. ',' → logprob: -5.1076130867004395
    7. '#' → logprob: -5.6076130867004395
    8. '[' → logprob: -6.2326130867004395
    9. 'def' → logprob: -6.4826130867004395
    10. ')' → logprob: -6.6076130867004395

Token 2177: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0779891088604927
    2. '
' → logprob: -3.327989101409912
    3. 'for' → logprob: -4.952989101409912
    4. 'single' → logprob: -4.952989101409912
    5. '#' (adapté à ' #') → logprob: -5.077989101409912
    6. '```' → logprob: -5.202989101409912
    7. 'res' → logprob: -5.952989101409912
    8. '   ' → logprob: -6.327989101409912
    9. ',' → logprob: -6.702989101409912
    10. 'import' → logprob: -6.952989101409912

Token 2178: ' We'll' (ID: 46830)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5785607695579529
    2. 'single' → logprob: -1.9535608291625977
    3. 'best' → logprob: -2.4535608291625977
    4. '       ' → logprob: -2.9535608291625977
    5. '#' → logprob: -3.3285608291625977
    6. 'for' → logprob: -3.7035608291625977
    7. 'cost' → logprob: -3.7035608291625977
    8. 'res' → logprob: -3.8285608291625977
    9. 'dp' → logprob: -3.9535608291625977
    10. 'import' → logprob: -4.328560829162598

Token 2179: ' pre' (ID: 876)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.8021101355552673
    2. 'import' → logprob: -1.802110195159912
    3. 'pre' → logprob: -2.302110195159912
    4. '#' → logprob: -2.927110195159912
    5. 'single' → logprob: -3.052110195159912
    6. 'initialize' → logprob: -3.177110195159912
    7. 'compute' → logprob: -3.427110195159912
    8. 'create' → logprob: -3.677110195159912
    9. 'min' → logprob: -4.302110195159912
    10. 'for' → logprob: -4.302110195159912

Token 2180: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0001214237418025732
    2. '_compute' → logprob: -9.625121116638184
    3. 'computed' → logprob: -10.500121116638184
    4. 'continue' → logprob: -12.375121116638184
    5. 'cache' → logprob: -12.500121116638184
    6. 'import' → logprob: -12.500121116638184
    7. '_com' → logprob: -12.750121116638184
    8. '#' → logprob: -13.000121116638184
    9. 'calculate' → logprob: -13.625121116638184
    10. 'com' → logprob: -13.625121116638184

Token 2181: ' minimal' (ID: 19957)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.16737711429595947
    2. 'single' → logprob: -3.29237699508667
    3. 'cost' → logprob: -3.54237699508667
    4. 'max' → logprob: -3.79237699508667
    5. 'best' → logprob: -3.91737699508667
    6. 'res' → logprob: -4.29237699508667
    7. 'minimal' → logprob: -4.79237699508667
    8. 'dp' → logprob: -4.91737699508667
    9. 'for' → logprob: -5.29237699508667
    10. ' min' → logprob: -6.04237699508667

Token 2182: ' single' (ID: 4590)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0176398828625679
    2. '_cost' → logprob: -4.767640113830566
    3. 'mp' → logprob: -5.267640113830566
    4. 'single' → logprob: -6.017640113830566
    5. '_mp' → logprob: -7.392640113830566
    6. 'dp' → logprob: -8.642640113830566
    7. '```' → logprob: -8.767640113830566
    8. 'res' → logprob: -8.767640113830566
    9. '_single' → logprob: -9.392640113830566
    10. 'for' → logprob: -9.767640113830566

Token 2183: '_spell' (ID: 186925)
  Prédit: '_mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mp' → logprob: -0.4775163233280182
    2. '_cost' → logprob: -1.8525162935256958
    3. '_single' → logprob: -2.1025164127349854
    4. '_d' → logprob: -2.8525164127349854
    5. '_sp' → logprob: -4.102516174316406
    6. '_spell' → logprob: -4.352516174316406
    7. '_damage' → logprob: -6.102516174316406
    8. '_target' → logprob: -6.102516174316406
    9. '_' → logprob: -6.352516174316406
    10. ' _' → logprob: -6.602516174316406

Token 2184: ' cost' (ID: 3097)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.546183168888092
    2. '_mp' → logprob: -0.921183168888092
    3. 'cost' → logprob: -4.421183109283447
    4. '_single' → logprob: -5.671183109283447
    5. 'mp' → logprob: -6.546183109283447
    6. '```' → logprob: -6.671183109283447
    7. '_sp' → logprob: -6.796183109283447
    8. '_dp' → logprob: -7.171183109283447
    9. 'single' → logprob: -7.671183109283447
    10. ' =' → logprob: -7.671183109283447

Token 2185: ' per' (ID: 777)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.9840269684791565
    2. 'min' → logprob: -1.9840269088745117
    3. 'max' → logprob: -2.1090269088745117
    4. 'for' → logprob: -2.8590269088745117
    5. ' =' → logprob: -3.2340269088745117
    6. ']' → logprob: -3.2340269088745117
    7. 'cost' → logprob: -3.4840269088745117
    8. '```' → logprob: -3.8590269088745117
    9. 'dp' → logprob: -4.109026908874512
    10. '][' → logprob: -4.234026908874512

Token 2186: ' HP' (ID: 21979)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.47040119767189026
    2. 'h' → logprob: -1.3454011678695679
    3. 'hp' → logprob: -3.5954012870788574
    4. 'd' → logprob: -3.9704012870788574
    5. 'HP' → logprob: -4.470401287078857
    6. ' h' → logprob: -4.470401287078857
    7. 'range' → logprob: -4.720401287078857
    8. 'value' → logprob: -4.720401287078857
    9. ' residual' → logprob: -4.970401287078857
    10. '0' → logprob: -5.095401287078857

Token 2187: ' ' (ID: 220)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.42936810851097107
    2. 'single' → logprob: -1.5543681383132935
    3. 'max' → logprob: -3.054368019104004
    4. ' =' → logprob: -3.929368019104004
    5. 'best' → logprob: -4.804368019104004
    6. '   ' → logprob: -4.804368019104004
    7. 'res' → logprob: -5.054368019104004
    8. 'dp' → logprob: -5.054368019104004
    9. '```' → logprob: -5.429368019104004
    10. '
' → logprob: -5.554368019104004

Token 2188: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.132468581199646
    2. '_cost' → logprob: -1.132468581199646
    3. 'cost' → logprob: -1.757468581199646
    4. '=' → logprob: -3.2574687004089355
    5. 'for' → logprob: -3.8824687004089355
    6. '_single' → logprob: -4.0074687004089355
    7. '_for' → logprob: -4.2574687004089355
    8. 'single' → logprob: -4.6324687004089355
    9. '_res' → logprob: -4.8824687004089355
    10. 'max' → logprob: -5.1324687004089355

Token 2189: '..' (ID: 485)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.45574861764907837
    2. '+' → logprob: -1.5807485580444336
    3. ' =' → logprob: -2.2057485580444336
    4. '0' → logprob: -3.9557485580444336
    5. '
' → logprob: -5.330748558044434
    6. ']' → logprob: -5.455748558044434
    7. 'max' → logprob: -5.705748558044434
    8. 'for' → logprob: -5.830748558044434
    9. '[max' → logprob: -6.455748558044434
    10. ']=' → logprob: -6.580748558044434

Token 2190: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.017058784142136574
    2. ' max' → logprob: -4.642058849334717
    3. '(max' → logprob: -5.267058849334717
    4. '0' → logprob: -7.017058849334717
    5. ' (' → logprob: -7.767058849334717
    6. '
' → logprob: -8.017058372497559
    7. '```' → logprob: -8.892058372497559
    8. '[max' → logprob: -9.392058372497559
    9. ' ' → logprob: -9.517058372497559
    10. '``' → logprob: -10.267058372497559

Token 2191: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.006010683253407478
    2. '5' → logprob: -5.75601053237915
    3. 'P' → logprob: -6.88101053237915
    4. '100' → logprob: -7.38101053237915
    5. '```' → logprob: -7.75601053237915
    6. 'p' → logprob: -9.256011009216309
    7. 'x' → logprob: -9.756011009216309
    8. '   ' → logprob: -9.756011009216309
    9. '[' → logprob: -9.756011009216309
    10. '
' → logprob: -9.881011009216309

Token 2192: ' once' (ID: 4730)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3915115296840668
    2. 'single' → logprob: -1.2665115594863892
    3. 'best' → logprob: -3.7665114402770996
    4. 'dp' → logprob: -5.2665114402771
    5. 'max' → logprob: -6.0165114402771
    6. '#' → logprob: -6.2665114402771
    7. 'res' → logprob: -6.3915114402771
    8. 'minimal' → logprob: -6.3915114402771
    9. '```' → logprob: -6.6415114402771
    10. '
' → logprob: -6.6415114402771

Token 2193: '

' (ID: 279)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'single' → logprob: -1.1047104597091675
    2. '_min' → logprob: -1.3547104597091675
    3. ' =' → logprob: -2.104710578918457
    4. 'min' → logprob: -2.104710578918457
    5. '_single' → logprob: -2.729710578918457
    6. '#' → logprob: -3.854710578918457
    7. '
' → logprob: -3.979710578918457
    8. '```' → logprob: -4.479710578918457
    9. 'import' → logprob: -4.729710578918457
    10. 'best' → logprob: -5.104710578918457

Token 2194: '       ' (ID: 309)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.7144132852554321
    2. 'min' → logprob: -1.0894132852554321
    3. 'best' → logprob: -3.4644131660461426
    4. ' single' → logprob: -3.7144131660461426
    5. ' min' → logprob: -4.089413166046143
    6. 'cost' → logprob: -4.214413166046143
    7. '```' → logprob: -4.214413166046143
    8. ' =' → logprob: -4.339413166046143
    9. '       ' → logprob: -4.964413166046143
    10. 'dp' → logprob: -5.089413166046143

Token 2195: ' min' (ID: 1349)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.3198585510253906
    2. 'min' (adapté à ' min') → logprob: -1.9448585510253906
    3. 'max' → logprob: -2.5698585510253906
    4. 'best' → logprob: -4.069858551025391
    5. 'dp' → logprob: -4.194858551025391
    6. '```' → logprob: -5.194858551025391
    7. '   ' → logprob: -5.694858551025391
    8. 'cost' → logprob: -5.819858551025391
    9. '#' → logprob: -5.944858551025391
    10. '       ' → logprob: -6.319858551025391

Token 2196: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.14297619462013245
    2. '_cost' → logprob: -2.0179762840270996
    3. '_' → logprob: -8.892975807189941
    4. 'single' → logprob: -10.267975807189941
    5. ' _' → logprob: -10.892975807189941
    6. '_s' → logprob: -11.017975807189941
    7. '_
' → logprob: -11.517975807189941
    8. '
' → logprob: -11.642975807189941
    9. '```' → logprob: -11.642975807189941
    10. 'cost' → logprob: -11.767975807189941

Token 2197: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.26618263125419617
    2. '_single' → logprob: -1.5161826610565186
    3. '_mp' → logprob: -4.3911824226379395
    4. '_spell' → logprob: -7.0161824226379395
    5. '_sp' → logprob: -7.3911824226379395
    6. '_' → logprob: -9.891182899475098
    7. '_dp' → logprob: -10.266182899475098
    8. ' _' → logprob: -10.391182899475098
    9. '```' → logprob: -10.766182899475098
    10. '\' → logprob: -11.641182899475098

Token 2198: '_for' (ID: 11903)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.431209534406662
    2. ' =' → logprob: -1.0562095642089844
    3. 's' → logprob: -6.306209564208984
    4. '_' → logprob: -8.556209564208984
    5. '=[' → logprob: -8.556209564208984
    6. '_single' → logprob: -9.306209564208984
    7. '[' → logprob: -9.931209564208984
    8. '_per' → logprob: -9.931209564208984
    9. '_for' → logprob: -10.306209564208984
    10. '   ' → logprob: -11.556209564208984

Token 2199: '_HP' (ID: 196429)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6425965428352356
    2. '_hp' → logprob: -1.6425964832305908
    3. 'hp' → logprob: -2.892596483230591
    4. '=' → logprob: -3.017596483230591
    5. 'res' → logprob: -3.142596483230591
    6. '_res' → logprob: -3.267596483230591
    7. 'h' → logprob: -3.767596483230591
    8. ' hp' → logprob: -4.01759672164917
    9. 'HP' → logprob: -4.64259672164917
    10. '_h' → logprob: -4.64259672164917

Token 2200: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31430327892303467
    2. ' =' → logprob: -1.3143032789230347
    3. '_for' → logprob: -7.189303398132324
    4. '=[' → logprob: -9.064303398132324
    5. 's' → logprob: -9.689303398132324
    6. '_' → logprob: -9.939303398132324
    7. '   ' → logprob: -10.814303398132324
    8. '[' → logprob: -11.689303398132324
    9. 'for' → logprob: -12.189303398132324
    10. '_=' → logprob: -12.189303398132324

Token 2201: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00023846338444855064
    2. ' [' → logprob: -9.000238418579102
    3. '[min' → logprob: -9.500238418579102
    4. '[max' → logprob: -10.250238418579102
    5. '[int' → logprob: -12.500238418579102
    6. '[MAX' → logprob: -14.875238418579102
    7. '[in' → logprob: -15.500238418579102
    8. '[m' → logprob: -15.750238418579102
    9. '[len' → logprob: -16.8752384185791
    10. '   ' → logprob: -17.0002384185791

Token 2202: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.2292393296957016
    2. '0' → logprob: -2.1042392253875732
    3. '10' → logprob: -2.6042392253875732
    4. 'float' → logprob: -4.979239463806152
    5. 'math' → logprob: -6.729239463806152
    6. 'IN' → logprob: -8.229239463806152
    7. 'inf' → logprob: -8.604239463806152
    8. 'sys' → logprob: -9.479239463806152
    9. '[' → logprob: -9.479239463806152
    10. '(' → logprob: -9.854239463806152

Token 2203: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11058198660612106
    2. ']*(' → logprob: -2.610581874847412
    3. '+' → logprob: -4.235581874847412
    4. 'for' → logprob: -4.860581874847412
    5. ']*' → logprob: -5.110581874847412
    6. ']+' → logprob: -6.610581874847412
    7. ' for' → logprob: -7.485581874847412
    8. '[' → logprob: -7.860581874847412
    9. ' +' → logprob: -8.98558235168457
    10. ']
' → logprob: -9.11058235168457

Token 2204: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00010986098641296849
    2. '100' → logprob: -9.500109672546387
    3. '(max' → logprob: -10.500109672546387
    4. ' max' → logprob: -12.000109672546387
    5. '(' → logprob: -15.250109672546387
    6. '   ' → logprob: -15.625109672546387
    7. '0' → logprob: -15.625109672546387
    8. '101' → logprob: -16.000110626220703
    9. '[max' → logprob: -16.125110626220703
    10. '=max' → logprob: -16.750110626220703

Token 2205: 'HP' (ID: 11269)
  Prédit: 'HP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.015020761638879776
    2. '5' → logprob: -4.265020847320557
    3. '+' → logprob: -7.140020847320557
    4. ' ' → logprob: -10.765020370483398
    5. '   ' → logprob: -11.765020370483398
    6. 'P' → logprob: -11.765020370483398
    7. '_HP' → logprob: -11.765020370483398
    8. '1' → logprob: -12.390020370483398
    9. '
' → logprob: -12.515020370483398
    10. ' +' → logprob: -12.640020370483398

Token 2206: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.5954712075181305e-05
    2. ' +' → logprob: -10.250036239624023
    3. '+
' → logprob: -15.500036239624023
    4. '```' → logprob: -15.750036239624023
    5. '1' → logprob: -16.250036239624023
    6. ']+' → logprob: -17.375036239624023
    7. '
' → logprob: -17.500036239624023
    8. '[' → logprob: -18.625036239624023
    9. '＋' → logprob: -19.000036239624023
    10. 'import' → logprob: -19.000036239624023

Token 2207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004118649754673243
    2. '+' → logprob: -5.5041184425354
    3. ' +' → logprob: -11.004118919372559
    4. '5' → logprob: -11.879118919372559
    5. ' ' → logprob: -12.379118919372559
    6. '```' → logprob: -12.504118919372559
    7. '0' → logprob: -12.879118919372559
    8. '2' → logprob: -14.004118919372559
    9. '   ' → logprob: -14.004118919372559
    10. '6' → logprob: -14.254118919372559

Token 2208: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16132481396198273
    2. ')
' → logprob: -1.9113248586654663
    3. '+' → logprob: -6.911324977874756
    4. '
' → logprob: -10.786324501037598
    5. ']' → logprob: -11.411324501037598
    6. ' )' → logprob: -11.536324501037598
    7. ' +' → logprob: -11.786324501037598
    8. '```' → logprob: -11.786324501037598
    9. '   ' → logprob: -11.911324501037598
    10. ')
' → logprob: -12.036324501037598

Token 2209: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24153739213943481
    2. ' for' → logprob: -1.74153733253479
    3. '0' → logprob: -4.491537570953369
    4. 'min' → logprob: -4.616537570953369
    5. '[' → logprob: -4.866537570953369
    6. '```' → logprob: -5.741537570953369
    7. '       ' → logprob: -5.991537570953369
    8. '   ' → logprob: -6.241537570953369
    9. '[min' → logprob: -7.616537570953369
    10. ')' → logprob: -7.616537570953369

Token 2210: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16062773764133453
    2. '0' → logprob: -2.285627841949463
    3. 'min' → logprob: -3.160627841949463
    4. ' for' → logprob: -6.285627841949463
    5. '```' → logprob: -6.410627841949463
    6. '   ' → logprob: -8.535627365112305
    7. '[' → logprob: -9.035627365112305
    8. '1' → logprob: -9.535627365112305
    9. 'single' → logprob: -9.660627365112305
    10. ' min' → logprob: -10.035627365112305

Token 2211: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.1768130362033844
    2. 'hp' → logprob: -2.3018131256103516
    3. 'mp' → logprob: -2.8018131256103516
    4. 'single' → logprob: -8.426813125610352
    5. ' mp' → logprob: -8.426813125610352
    6. ' h' → logprob: -8.426813125610352
    7. 'd' → logprob: -8.551813125610352
    8. ' hp' → logprob: -9.051813125610352
    9. 'i' → logprob: -9.176813125610352
    10. '   ' → logprob: -9.551813125610352

Token 2212: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06996367126703262
    2. 'in' → logprob: -2.6949636936187744
    3. '0' → logprob: -10.819963455200195
    4. ',' → logprob: -12.819963455200195
    5. ' ' → logprob: -13.819963455200195
    6. 'i' → logprob: -14.069963455200195
    7. '1' → logprob: -14.444963455200195
    8. ')' → logprob: -15.069963455200195
    9. '   ' → logprob: -15.069963455200195
    10. '
' → logprob: -15.319963455200195

Token 2213: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001238004770129919
    2. ' range' → logprob: -9.000123977661133
    3. '0' → logprob: -15.125123977661133
    4. '   ' → logprob: -16.500123977661133
    5. ' ' → logprob: -18.750123977661133
    6. '(range' → logprob: -19.375123977661133
    7. '
' → logprob: -19.750123977661133
    8. '	range' → logprob: -20.250123977661133
    9. 'r' → logprob: -20.750123977661133
    10. '```' → logprob: -21.125123977661133

Token 2214: '(max' (ID: 17178)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5161200165748596
    2. '0' → logprob: -1.0161199569702148
    3. '1' → logprob: -3.391119956970215
    4. 'min' → logprob: -5.516119956970215
    5. '(max' → logprob: -6.016119956970215
    6. '(' → logprob: -7.516119956970215
    7. ' max' → logprob: -8.516119956970215
    8. ' ' → logprob: -8.766119956970215
    9. '   ' → logprob: -9.516119956970215
    10. '(min' → logprob: -10.391119956970215

Token 2215: 'HP' (ID: 11269)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23823946714401245
    2. '1' → logprob: -2.1132395267486572
    3. 'max' → logprob: -3.2382395267486572
    4. '+' → logprob: -4.238239288330078
    5. '(max' → logprob: -4.488239288330078
    6. '=' → logprob: -4.613239288330078
    7. '(' → logprob: -5.113239288330078
    8. '   ' → logprob: -5.738239288330078
    9. ' ' → logprob: -5.863239288330078
    10. 'HP' → logprob: -6.238239288330078

Token 2216: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002577797742560506
    2. ' +' → logprob: -6.127577781677246
    3. '1' → logprob: -8.752577781677246
    4. '):
' → logprob: -9.002577781677246
    5. ',' → logprob: -9.752577781677246
    6. '):' → logprob: -10.377577781677246
    7. '0' → logprob: -11.502577781677246
    8. '```' → logprob: -12.252577781677246
    9. '   ' → logprob: -13.252577781677246
    10. '=' → logprob: -13.877577781677246

Token 2217: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006597769097425044
    2. '+' → logprob: -7.500659942626953
    3. '0' → logprob: -9.250659942626953
    4. ' ' → logprob: -12.250659942626953
    5. '=' → logprob: -13.125659942626953
    6. '```' → logprob: -13.250659942626953
    7. '   ' → logprob: -14.375659942626953
    8. ' +' → logprob: -15.125659942626953
    9. '2' → logprob: -15.250659942626953
    10. '
' → logprob: -15.750659942626953

Token 2218: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0032562583219259977
    2. '):' → logprob: -6.003256320953369
    3. '       ' → logprob: -7.753256320953369
    4. '   ' → logprob: -8.253255844116211
    5. ':
' → logprob: -10.503255844116211
    6. '+' → logprob: -10.878255844116211
    7. '           ' → logprob: -11.503255844116211
    8. ':' → logprob: -11.628255844116211
    9. '=' → logprob: -12.128255844116211
    10. '```' → logprob: -12.128255844116211

Token 2219: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6540460586547852
    2. '           ' → logprob: -0.9040460586547852
    3. '       ' → logprob: -3.154046058654785
    4. 'min' → logprob: -3.904046058654785
    5. '```' → logprob: -4.779046058654785
    6. 'for' → logprob: -6.904046058654785
    7. ' for' → logprob: -7.154046058654785
    8. 'best' → logprob: -7.779046058654785
    9. ' min' → logprob: -8.029046058654785
    10. '	min' → logprob: -8.279046058654785

Token 2220: ' c' (ID: 274)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.8013181686401367
    2. 'cost' → logprob: -1.1763181686401367
    3. 'min' → logprob: -2.0513181686401367
    4. 'cur' → logprob: -2.4263181686401367
    5. '   ' → logprob: -5.051318168640137
    6. '       ' → logprob: -5.176318168640137
    7. 'curr' → logprob: -5.676318168640137
    8. '           ' → logprob: -6.051318168640137
    9. 'val' → logprob: -6.301318168640137
    10. 'current' → logprob: -6.551318168640137

Token 2221: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03746039792895317
    2. ' =' → logprob: -3.4124603271484375
    3. '   ' → logprob: -6.6624603271484375
    4. 'ost' → logprob: -6.7874603271484375
    5. 'for' → logprob: -7.0374603271484375
    6. '=[]' → logprob: -9.537460327148438
    7. '=
' → logprob: -9.662460327148438
    8. ' ' → logprob: -9.912460327148438
    9. '=min' → logprob: -10.162460327148438
    10. 'c' → logprob: -10.162460327148438

Token 2222: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.001969077391549945
    2. 'min' → logprob: -6.751968860626221
    3. '10' → logprob: -8.251969337463379
    4. '0' → logprob: -8.501969337463379
    5. 'math' → logprob: -9.126969337463379
    6. 'float' → logprob: -9.376969337463379
    7. 'inf' → logprob: -9.876969337463379
    8. ' INF' → logprob: -10.376969337463379
    9. 'IN' → logprob: -11.126969337463379
    10. 'sys' → logprob: -11.501969337463379

Token 2223: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5238592624664307
    2. ' =' → logprob: -1.7738592624664307
    3. '=' → logprob: -1.8988592624664307
    4. 'for' → logprob: -2.8988592624664307
    5. ' for' → logprob: -3.7738592624664307
    6. '<|end|>' → logprob: -5.523859024047852
    7. '       ' → logprob: -6.148859024047852
    8. '   ' → logprob: -7.148859024047852
    9. '               ' → logprob: -7.398859024047852
    10. ',' → logprob: -7.523859024047852

Token 2224: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35700321197509766
    2. 'for' → logprob: -1.3570032119750977
    3. ' for' → logprob: -3.3570032119750977
    4. '   ' → logprob: -5.107003211975098
    5. '```' → logprob: -6.857003211975098
    6. '       ' → logprob: -7.482003211975098
    7. '               ' → logprob: -9.107003211975098
    8. ' ' → logprob: -10.232003211975098
    9. '<|end|>' → logprob: -10.732003211975098
    10. '	for' → logprob: -10.857003211975098

Token 2225: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0018877071561291814
    2. '           ' → logprob: -6.876887798309326
    3. ' for' → logprob: -7.126887798309326
    4. '   ' → logprob: -10.376887321472168
    5. '       ' → logprob: -11.501887321472168
    6. '	for' → logprob: -12.001887321472168
    7. '```' → logprob: -12.751887321472168
    8. ' ' → logprob: -15.001887321472168
    9. '               ' → logprob: -15.376887321472168
    10. '                   ' → logprob: -16.001888275146484

Token 2226: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.00025073037249967456
    2. ' mp' → logprob: -8.375250816345215
    3. '   ' → logprob: -11.500250816345215
    4. '(mp' → logprob: -11.875250816345215
    5. '	mp' → logprob: -14.250250816345215
    6. '_mp' → logprob: -14.875250816345215
    7. '_,' → logprob: -15.000250816345215
    8. '           ' → logprob: -15.000250816345215
    9. '       ' → logprob: -15.375250816345215
    10. '
' → logprob: -15.375250816345215

Token 2227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007779348641633987
    2. ' ,' → logprob: -4.882779121398926
    3. '_,' → logprob: -8.882779121398926
    4. 'mp' → logprob: -12.007779121398926
    5. ' in' → logprob: -12.257779121398926
    6. ',s' → logprob: -12.507779121398926
    7. '0' → logprob: -12.632779121398926
    8. '1' → logprob: -13.257779121398926
    9. ',
' → logprob: -13.382779121398926
    10. ',d' → logprob: -13.382779121398926

Token 2228: ' dmg' (ID: 168827)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0001628956088097766
    2. ' dmg' → logprob: -8.750163078308105
    3. '   ' → logprob: -13.125163078308105
    4. ' ' → logprob: -15.500163078308105
    5. '     ' → logprob: -15.625163078308105
    6. ',d' → logprob: -15.750163078308105
    7. 'damage' → logprob: -15.750163078308105
    8. '
' → logprob: -15.750163078308105
    9. '       ' → logprob: -15.875163078308105
    10. '    ' → logprob: -15.875163078308105

Token 2229: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06238933652639389
    2. 'in' → logprob: -2.812389373779297
    3. ',' → logprob: -7.937389373779297
    4. ':
' → logprob: -11.562389373779297
    5. '           ' → logprob: -11.562389373779297
    6. '	in' → logprob: -11.562389373779297
    7. ' ' → logprob: -11.812389373779297
    8. ' ,' → logprob: -11.937389373779297
    9. '               ' → logprob: -12.687389373779297
    10. '            ' → logprob: -12.937389373779297

Token 2230: ' single' (ID: 4590)
  Prédit: 'single'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'single' → logprob: -0.00020425561524461955
    2. ' single' → logprob: -8.500204086303711
    3. '(single' → logprob: -14.500204086303711
    4. '   ' → logprob: -15.125204086303711
    5. '
' → logprob: -17.50020408630371
    6. ' ' → logprob: -18.00020408630371
    7. 'range' → logprob: -18.25020408630371
    8. '[' → logprob: -18.37520408630371
    9. '       ' → logprob: -18.50020408630371
    10. '           ' → logprob: -18.62520408630371

Token 2231: '_d' (ID: 1565)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.14741256833076477
    2. ',' → logprob: -2.2724125385284424
    3. '_mp' → logprob: -3.6474125385284424
    4. 'sp' → logprob: -6.3974127769470215
    5. ':' → logprob: -6.6474127769470215
    6. '_,' → logprob: -6.8974127769470215
    7. ' ,' → logprob: -7.1474127769470215
    8. '_spell' → logprob: -7.2724127769470215
    9. ',_' → logprob: -7.6474127769470215
    10. ':
' → logprob: -8.022412300109863

Token 2232: 'mg' (ID: 15026)
  Prédit: 'mg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mg' → logprob: -0.047059573233127594
    2. 'mp' → logprob: -3.5470595359802246
    3. '_sp' → logprob: -5.172059535980225
    4. 'sp' → logprob: -5.422059535980225
    5. '_mp' → logprob: -6.797059535980225
    6. ',' → logprob: -7.172059535980225
    7. '```' → logprob: -7.297059535980225
    8. ')' → logprob: -7.672059535980225
    9. ']' → logprob: -7.797059535980225
    10. '   ' → logprob: -7.922059535980225

Token 2233: '_mp' (ID: 96508)
  Prédit: '_mp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mp' → logprob: -0.0022931136190891266
    2. ',' → logprob: -6.502293109893799
    3. 'mp' → logprob: -7.752293109893799
    4. ' mp' → logprob: -8.377293586730957
    5. ' _' → logprob: -11.252293586730957
    6. ' ,' → logprob: -11.252293586730957
    7. '_MP' → logprob: -11.252293586730957
    8. ')' → logprob: -11.502293586730957
    9. ' ' → logprob: -11.877293586730957
    10. '   ' → logprob: -12.002293586730957

Token 2234: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6093476414680481
    2. '               ' → logprob: -0.8593476414680481
    3. ':' → logprob: -3.4843475818634033
    4. ',' → logprob: -7.609347820281982
    5. '           ' → logprob: -7.609347820281982
    6. '):
' → logprob: -7.734347820281982
    7. '                   ' → logprob: -8.734347343444824
    8. '                       ' → logprob: -8.859347343444824
    9. '              ' → logprob: -9.359347343444824
    10. '```' → logprob: -9.859347343444824

Token 2235: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004324573092162609
    2. '           ' → logprob: -9.000432014465332
    3. '                   ' → logprob: -9.625432014465332
    4. ',' → logprob: -10.000432014465332
    5. '                ' → logprob: -10.375432014465332
    6. '<|end|>' → logprob: -10.625432014465332
    7. '	           ' → logprob: -10.625432014465332
    8. ' if' → logprob: -11.000432014465332
    9. '                               ' → logprob: -11.000432014465332
    10. '              ' → logprob: -11.000432014465332

Token 2236: ' hits' (ID: 21571)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.27501383423805237
    2. 'hits' (adapté à ' hits') → logprob: -1.65001380443573
    3. '               ' → logprob: -4.1500139236450195
    4. ' cost' → logprob: -4.7750139236450195
    5. '           ' → logprob: -5.0250139236450195
    6. 'val' → logprob: -5.2750139236450195
    7. 'tmp' → logprob: -6.1500139236450195
    8. 'temp' → logprob: -6.1500139236450195
    9. ' hits' → logprob: -6.4000139236450195
    10. '       ' → logprob: -6.7750139236450195

Token 2237: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04346989467740059
    2. '=' → logprob: -3.1684699058532715
    3. ' *' → logprob: -8.418469429016113
    4. ')' → logprob: -9.043469429016113
    5. '*' → logprob: -10.168469429016113
    6. '           ' → logprob: -11.168469429016113
    7. ' ' → logprob: -11.793469429016113
    8. ',' → logprob: -11.793469429016113
    9. '*c' → logprob: -12.168469429016113
    10. '   ' → logprob: -12.418469429016113

Token 2238: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.10022003948688507
    2. ' (' → logprob: -2.350219964981079
    3. '   ' → logprob: -12.1002197265625
    4. '(' → logprob: -12.6002197265625
    5. ' ' → logprob: -13.2252197265625
    6. '(c' → logprob: -13.8502197265625
    7. '(H' → logprob: -15.1002197265625
    8. '       ' → logprob: -15.3502197265625
    9. '0' → logprob: -15.3502197265625
    10. '(max' → logprob: -15.4752197265625

Token 2239: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.0564331205387134e-05
    2. ' h' → logprob: -11.75001049041748
    3. '   ' → logprob: -13.12501049041748
    4. '(h' → logprob: -15.50001049041748
    5. 'hp' → logprob: -15.50001049041748
    6. '           ' → logprob: -16.250011444091797
    7. '       ' → logprob: -16.625011444091797
    8. '    ' → logprob: -17.625011444091797
    9. ' ' → logprob: -17.625011444091797
    10. '  ' → logprob: -17.750011444091797

Token 2240: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.39205697178840637
    2. ' +' → logprob: -1.142056941986084
    3. '+d' → logprob: -5.267056941986084
    4. '+D' → logprob: -13.142057418823242
    5. 'd' → logprob: -13.267057418823242
    6. '//' → logprob: -13.517057418823242
    7. '   ' → logprob: -13.642057418823242
    8. '```' → logprob: -13.767057418823242
    9. '+
' → logprob: -13.892057418823242
    10. '+h' → logprob: -13.892057418823242

Token 2241: ' dmg' (ID: 168827)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1041145626222715e-05
    2. '           ' → logprob: -12.750011444091797
    3. '               ' → logprob: -13.250011444091797
    4. '   ' → logprob: -13.250011444091797
    5. ' dmg' → logprob: -13.625011444091797
    6. '                   ' → logprob: -14.000011444091797
    7. '       ' → logprob: -14.375011444091797
    8. ' ' → logprob: -14.500011444091797
    9. '                       ' → logprob: -14.875011444091797
    10. '     ' → logprob: -15.000011444091797

Token 2242: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16023002564907074
    2. '-' → logprob: -1.910230040550232
    3. '```' → logprob: -12.910229682922363
    4. '           ' → logprob: -13.160229682922363
    5. ')' → logprob: -14.660229682922363
    6. ' ' → logprob: -14.910229682922363
    7. '   ' → logprob: -15.785229682922363
    8. '               ' → logprob: -16.41023063659668
    9. '                   ' → logprob: -16.41023063659668
    10. '       ' → logprob: -16.53523063659668

Token 2243: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.466968650580384e-05
    2. ' ' → logprob: -10.125054359436035
    3. '```' → logprob: -11.875054359436035
    4. '-' → logprob: -12.125054359436035
    5. '   ' → logprob: -13.750054359436035
    6. '99' → logprob: -15.250054359436035
    7. '`' → logprob: -15.750054359436035
    8. '``' → logprob: -16.12505531311035
    9. '           ' → logprob: -16.25005531311035
    10. ' -' → logprob: -16.50005531311035

Token 2244: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.023281123489141464
    2. ')' → logprob: -3.7732810974121094
    3. '```' → logprob: -10.77328109741211
    4. '//' → logprob: -11.27328109741211
    5. ')
' → logprob: -14.64828109741211
    6. ')#' → logprob: -15.14828109741211
    7. ')>>' → logprob: -15.27328109741211
    8. '               ' → logprob: -15.77328109741211
    9. '+' → logprob: -15.77328109741211
    10. '           ' → logprob: -16.14828109741211

Token 2245: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.696889623621246e-06
    2. '   ' → logprob: -14.37500286102295
    3. '                   ' → logprob: -14.75000286102295
    4. '\d' → logprob: -14.87500286102295
    5. '           ' → logprob: -15.12500286102295
    6. '```' → logprob: -15.25000286102295
    7. '               ' → logprob: -15.50000286102295
    8. ' dmg' → logprob: -16.000001907348633
    9. ' ' → logprob: -16.250001907348633
    10. '       ' → logprob: -16.375001907348633

Token 2246: 'mg' (ID: 15026)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -6.504040356958285e-05
    2. '1' → logprob: -9.750064849853516
    3. ' dmg' → logprob: -13.125064849853516
    4. '   ' → logprob: -13.500064849853516
    5. '           ' → logprob: -14.250064849853516
    6. '       ' → logprob: -15.000064849853516
    7. '```' → logprob: -15.000064849853516
    8. '                   ' → logprob: -15.125064849853516
    9. '\d' → logprob: -15.250064849853516
    10. '               ' → logprob: -15.250064849853516

Token 2247: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9252660870552063
    2. '*' → logprob: -1.1752660274505615
    3. ' *' → logprob: -2.1752660274505615
    4. '               ' → logprob: -2.4252660274505615
    5. '
' → logprob: -3.4252660274505615
    6. '<|end|>' → logprob: -3.6752660274505615
    7. ')*' → logprob: -4.175266265869141
    8. '                   ' → logprob: -4.675266265869141
    9. '```' → logprob: -6.050266265869141
    10. '           ' → logprob: -6.800266265869141

Token 2248: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.003276937175542116
    2. ' h' → logprob: -5.753276824951172
    3. 'd' → logprob: -9.503276824951172
    4. '   ' → logprob: -11.753276824951172
    5. '1' → logprob: -12.128276824951172
    6. ' ' → logprob: -12.878276824951172
    7. '(h' → logprob: -13.128276824951172
    8. '           ' → logprob: -13.378276824951172
    9. '0' → logprob: -14.003276824951172
    10. '  ' → logprob: -14.253276824951172

Token 2249: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.030242381617426872
    2. ' >' → logprob: -3.530242443084717
    3. '```' → logprob: -8.655241966247559
    4. '!=' → logprob: -8.780241966247559
    5. ' !=' → logprob: -9.655241966247559
    6. 'else' → logprob: -10.405241966247559
    7. '==' → logprob: -11.780241966247559
    8. '>
' → logprob: -12.030241966247559
    9. ':
' → logprob: -12.030241966247559
    10. '           ' → logprob: -12.030241966247559

Token 2250: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '=' → logprob: -18.25001335144043
    4. '   ' → logprob: -18.87501335144043
    5. '```' → logprob: -19.25001335144043
    6. '1' → logprob: -20.37501335144043
    7. '>' → logprob: -20.87501335144043
    8. '  ' → logprob: -21.37501335144043
    9. '۰' → logprob: -21.62501335144043
    10. 'h' → logprob: -21.62501335144043

Token 2251: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -16.75
    4. '=' → logprob: -18.25
    5. 'h' → logprob: -18.625
    6. '۰' → logprob: -19.125
    7. '1' → logprob: -19.75
    8. '>' → logprob: -20.125
    9. '   ' → logprob: -20.375
    10. '
' → logprob: -21.375

Token 2252: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.18048197031021118
    2. 'else' → logprob: -1.9304819107055664
    3. '               ' → logprob: -3.9304819107055664
    4. '           ' → logprob: -8.555481910705566
    5. '                   ' → logprob: -9.680481910705566
    6. ':
' → logprob: -10.055481910705566
    7. ':' → logprob: -10.430481910705566
    8. '```' → logprob: -10.430481910705566
    9. ')' → logprob: -10.555481910705566
    10. '=' → logprob: -12.680481910705566

Token 2253: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -20.625001907348633
    4. '   ' → logprob: -20.750001907348633
    5. '000' → logprob: -22.625001907348633
    6. '00' → logprob: -22.750001907348633
    7. '۰' → logprob: -22.875001907348633
    8. '           ' → logprob: -22.875001907348633
    9. '1' → logprob: -23.000001907348633
    10. '``' → logprob: -23.375001907348633

Token 2254: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -21.25
    4. '۰' → logprob: -21.75
    5. '           ' → logprob: -22.0
    6. '```' → logprob: -22.375
    7. '1' → logprob: -22.625
    8. '                   ' → logprob: -22.875
    9. ')' → logprob: -22.875
    10. '               ' → logprob: -22.875

Token 2255: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010927905328571796
    2. '                   ' → logprob: -4.760927677154541
    3. '<|end|>' → logprob: -7.260927677154541
    4. '           ' → logprob: -7.635927677154541
    5. '
' → logprob: -8.0109281539917
    6. '                       ' → logprob: -9.0109281539917
    7. '                ' → logprob: -9.1359281539917
    8. '              ' → logprob: -9.1359281539917
    9. '```' → logprob: -9.6359281539917
    10. '                               ' → logprob: -9.6359281539917

Token 2256: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002406090497970581
    2. '                   ' → logprob: -8.625240325927734
    3. 'c' → logprob: -11.125240325927734
    4. '           ' → logprob: -11.375240325927734
    5. '```' → logprob: -11.625240325927734
    6. '                       ' → logprob: -11.875240325927734
    7. 'cost' → logprob: -12.125240325927734
    8. ' c' → logprob: -12.625240325927734
    9. '              ' → logprob: -13.000240325927734
    10. '                               ' → logprob: -13.500240325927734

Token 2257: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.03343220427632332
    2. ' cost' → logprob: -3.7834322452545166
    3. 'c' → logprob: -4.7834320068359375
    4. '               ' → logprob: -6.7834320068359375
    5. '                   ' → logprob: -8.408432006835938
    6. ' c' → logprob: -8.908432006835938
    7. 'temp' → logprob: -9.783432006835938
    8. 'tmp' → logprob: -9.908432006835938
    9. 'res' → logprob: -10.533432006835938
    10. '```' → logprob: -10.658432006835938

Token 2258: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021950304508209
    2. ' =' → logprob: -2.350219488143921
    3. '   ' → logprob: -13.1002197265625
    4. '                   ' → logprob: -13.4752197265625
    5. '+=' → logprob: -13.9752197265625
    6. '=min' → logprob: -13.9752197265625
    7. '           ' → logprob: -14.1002197265625
    8. '               ' → logprob: -14.1002197265625
    9. '=c' → logprob: -14.1002197265625
    10. '=int' → logprob: -14.3502197265625

Token 2259: ' hits' (ID: 21571)
  Prédit: 'hits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hits' → logprob: -0.007609586231410503
    2. ' hits' → logprob: -4.8826093673706055
    3. '   ' → logprob: -13.132609367370605
    4. 'mp' → logprob: -14.382609367370605
    5. ' mp' → logprob: -14.757609367370605
    6. 'hit' → logprob: -16.507610321044922
    7. '_hits' → logprob: -16.757610321044922
    8. ' ' → logprob: -16.757610321044922
    9. 'h' → logprob: -17.257610321044922
    10. '0' → logprob: -17.257610321044922

Token 2260: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.47412437200546265
    2. '*' → logprob: -0.9741243720054626
    3. '```' → logprob: -11.22412395477295
    4. ')' → logprob: -11.59912395477295
    5. ' ' → logprob: -12.22412395477295
    6. '<|end|>' → logprob: -12.59912395477295
    7. '
' → logprob: -12.72412395477295
    8. ',' → logprob: -13.22412395477295
    9. '   ' → logprob: -13.22412395477295
    10. ' if' → logprob: -13.72412395477295

Token 2261: ' mp' (ID: 11543)
  Prédit: 'mp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mp' → logprob: -0.0007099286303855479
    2. ' mp' → logprob: -7.2507100105285645
    3. '(mp' → logprob: -18.750709533691406
    4. '	mp' → logprob: -19.125709533691406
    5. '_mp' → logprob: -20.500709533691406
    6. 'pm' → logprob: -20.750709533691406
    7. '/mp' → logprob: -21.750709533691406
    8. '```' → logprob: -21.750709533691406
    9. '.mp' → logprob: -22.250709533691406
    10. '
' → logprob: -22.750709533691406

Token 2262: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12246343493461609
    2. '               ' → logprob: -2.2474634647369385
    3. ' if' → logprob: -5.372463226318359
    4. '                   ' → logprob: -6.247463226318359
    5. '<|end|>' → logprob: -6.747463226318359
    6. '<|end|>' → logprob: -8.24746322631836
    7. 'if' → logprob: -8.49746322631836
    8. ')' → logprob: -8.74746322631836
    9. ' =' → logprob: -9.12246322631836
    10. '```' → logprob: -9.12246322631836

Token 2263: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06409618258476257
    2. '           ' → logprob: -2.814096212387085
    3. ' if' → logprob: -6.814095973968506
    4. '```' → logprob: -7.564095973968506
    5. '                   ' → logprob: -8.564096450805664
    6. 'if' → logprob: -8.689096450805664
    7. '       ' → logprob: -9.939096450805664
    8. '              ' → logprob: -10.564096450805664
    9. '             ' → logprob: -10.814096450805664
    10. '                       ' → logprob: -11.439096450805664

Token 2264: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005289019085466862
    2. ' if' → logprob: -5.755289077758789
    3. '           ' → logprob: -6.255289077758789
    4. 'c' → logprob: -8.880289077758789
    5. '               ' → logprob: -10.380289077758789
    6. 'min' → logprob: -11.005289077758789
    7. '```' → logprob: -14.380289077758789
    8. '                   ' → logprob: -14.755289077758789
    9. '	if' → logprob: -15.255289077758789
    10. '   ' → logprob: -15.880289077758789

Token 2265: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0001584850688232109
    2. ' cost' → logprob: -8.750158309936523
    3. '   ' → logprob: -19.500158309936523
    4. 'c' → logprob: -19.625158309936523
    5. '(cost' → logprob: -21.000158309936523
    6. ' ' → logprob: -21.750158309936523
    7. 'Cost' → logprob: -22.000158309936523
    8. '  ' → logprob: -22.250158309936523
    9. '_cost' → logprob: -22.500158309936523
    10. '
' → logprob: -23.375158309936523

Token 2266: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0025162079837173223
    2. ' <' → logprob: -6.002516269683838
    3. '<c' → logprob: -11.50251579284668
    4. '<h' → logprob: -11.75251579284668
    5. '<int' → logprob: -11.87751579284668
    6. '<size' → logprob: -12.25251579284668
    7. '<th' → logprob: -12.87751579284668
    8. '<count' → logprob: -14.00251579284668
    9. '<len' → logprob: -14.37751579284668
    10. '<const' → logprob: -14.62751579284668

Token 2267: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005934843793511391
    2. 'min' → logprob: -5.130934715270996
    3. ' c' → logprob: -12.255934715270996
    4. ' min' → logprob: -13.880934715270996
    5. '   ' → logprob: -15.130934715270996
    6. '	c' → logprob: -16.380935668945312
    7. '```' → logprob: -16.505935668945312
    8. '
' → logprob: -16.880935668945312
    9. 'cost' → logprob: -17.005935668945312
    10. 'cation' → logprob: -17.755935668945312

Token 2268: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13549476861953735
    2. '=c' → logprob: -3.1354947090148926
    3. ':
' → logprob: -3.5104947090148926
    4. ' =' → logprob: -3.5104947090148926
    5. '                   ' → logprob: -4.885494709014893
    6. '               ' → logprob: -5.135494709014893
    7. ':' → logprob: -5.135494709014893
    8. 'c' → logprob: -6.260494709014893
    9. ' c' → logprob: -7.635494709014893
    10. '=
' → logprob: -8.01049518585205

Token 2269: '                   ' (ID: 699)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.09467131644487381
    2. '                   ' → logprob: -2.8446712493896484
    3. ' c' → logprob: -3.5946712493896484
    4. '               ' → logprob: -5.594671249389648
    5. '                       ' → logprob: -7.719671249389648
    6. '                               ' → logprob: -8.844671249389648
    7. '                           ' → logprob: -8.844671249389648
    8. '                                           ' → logprob: -9.844671249389648
    9. '                                   ' → logprob: -9.844671249389648
    10. '                ' → logprob: -10.344671249389648

Token 2270: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.10027384012937546
    2. 'min' → logprob: -2.350273847579956
    3. '                   ' → logprob: -9.850274085998535
    4. ' min' → logprob: -11.975274085998535
    5. '                       ' → logprob: -12.475274085998535
    6. ' c' → logprob: -13.225274085998535
    7. '               ' → logprob: -14.100274085998535
    8. '```' → logprob: -14.225274085998535
    9. '   ' → logprob: -15.225274085998535
    10. '                           ' → logprob: -15.350274085998535

Token 2271: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0041841790080070496
    2. '=c' → logprob: -5.504184246063232
    3. ' =' → logprob: -9.379183769226074
    4. 'c' → logprob: -11.129183769226074
    5. '=
' → logprob: -12.004183769226074
    6. ' c' → logprob: -15.754183769226074
    7. '=min' → logprob: -16.00418472290039
    8. '=cut' → logprob: -16.50418472290039
    9. '.=' → logprob: -17.25418472290039
    10. '=

' → logprob: -17.62918472290039

Token 2272: ' cost' (ID: 3097)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16066935658454895
    2. 'cost' → logprob: -1.9106693267822266
    3. ' cost' → logprob: -8.410669326782227
    4. ' c' → logprob: -8.410669326782227
    5. '	c' → logprob: -17.535669326782227
    6. 'code' → logprob: -18.660669326782227
    7. '   ' → logprob: -18.785669326782227
    8. '               ' → logprob: -19.160669326782227
    9. '(cost' → logprob: -19.285669326782227
    10. '[c' → logprob: -19.660669326782227

Token 2273: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011725161311915144
    2. '               ' → logprob: -10.375117301940918
    3. '       ' → logprob: -10.625117301940918
    4. 'min' → logprob: -11.000117301940918
    5. '   ' → logprob: -11.625117301940918
    6. '                   ' → logprob: -11.750117301940918
    7. '[min' → logprob: -12.125117301940918
    8. '<|end|>' → logprob: -12.125117301940918
    9. '		' → logprob: -12.625117301940918
    10. '```' → logprob: -12.625117301940918

Token 2274: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00035238542477600276
    2. '                   ' → logprob: -8.87535285949707
    3. '```' → logprob: -9.00035285949707
    4. '               ' → logprob: -10.12535285949707
    5. 'min' → logprob: -11.50035285949707
    6. '       ' → logprob: -11.62535285949707
    7. '[min' → logprob: -11.75035285949707
    8. ' min' → logprob: -12.00035285949707
    9. '<|end|>' → logprob: -12.00035285949707
    10. '[' → logprob: -12.50035285949707

Token 2275: ' min' (ID: 1349)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4891863763332367
    2. 'min' (adapté à ' min') → logprob: -0.9891864061355591
    3. ' min' → logprob: -4.8641862869262695
    4. '       ' → logprob: -5.2391862869262695
    5. '   ' → logprob: -6.4891862869262695
    6. '```' → logprob: -8.73918628692627
    7. '[min' → logprob: -9.36418628692627
    8. '               ' → logprob: -9.73918628692627
    9. '	min' → logprob: -9.98918628692627
    10. '(min' → logprob: -10.23918628692627

Token 2276: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -1.5213274309644476e-05
    2. 'single' → logprob: -11.125015258789062
    3. '(single' → logprob: -15.875015258789062
    4. '_SINGLE' → logprob: -16.750015258789062
    5. '
' → logprob: -16.875015258789062
    6. '```' → logprob: -17.250015258789062
    7. ' single' → logprob: -17.250015258789062
    8. 'Single' → logprob: -17.500015258789062
    9. '\' → logprob: -17.750015258789062
    10. '_s' → logprob: -18.250015258789062

Token 2277: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -7.822646693966817e-06
    2. 'cost' → logprob: -11.875007629394531
    3. 'Cost' → logprob: -16.12500762939453
    4. '_COST' → logprob: -16.12500762939453
    5. ' cost' → logprob: -16.25000762939453
    6. '_single' → logprob: -16.37500762939453
    7. '```' → logprob: -16.50000762939453
    8. '\' → logprob: -16.50000762939453
    9. ' _' → logprob: -16.62500762939453
    10. '_' → logprob: -16.62500762939453

Token 2278: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -2.45848218582978e-06
    2. '=' → logprob: -14.37500286102295
    3. 'for' → logprob: -14.75000286102295
    4. 's' → logprob: -15.00000286102295
    5. '[' → logprob: -15.25000286102295
    6. 'For' → logprob: -15.37500286102295
    7. '```' → logprob: -15.37500286102295
    8. '\' → logprob: -16.125001907348633
    9. '[min' → logprob: -16.625001907348633
    10. '_FOR' → logprob: -16.750001907348633

Token 2279: '_HP' (ID: 196429)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.0017158739501610398
    2. '_HP' → logprob: -6.376715660095215
    3. '_hp' → logprob: -12.251715660095215
    4. 'h' → logprob: -12.751715660095215
    5. 'hp' → logprob: -12.751715660095215
    6. '
' → logprob: -13.501715660095215
    7. 'Hp' → logprob: -14.626715660095215
    8. '   ' → logprob: -14.876715660095215
    9. 'H' → logprob: -15.626715660095215
    10. '```' → logprob: -15.876715660095215

Token 2280: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -8.375538163818419e-05
    2. '=' → logprob: -10.125083923339844
    3. '[min' → logprob: -11.375083923339844
    4. 'for' → logprob: -11.875083923339844
    5. '=h' → logprob: -12.000083923339844
    6. ' =' → logprob: -12.250083923339844
    7. '[c' → logprob: -12.250083923339844
    8. '[' → logprob: -12.625083923339844
    9. 'h' → logprob: -13.375083923339844
    10. '=[' → logprob: -13.500083923339844

Token 2281: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1012428030371666
    2. ']' → logprob: -2.601242780685425
    3. ']=' → logprob: -3.976242780685425
    4. ' =' → logprob: -5.726243019104004
    5. '=
' → logprob: -10.351243019104004
    6. '           ' → logprob: -11.476243019104004
    7. '   ' → logprob: -11.851243019104004
    8. '       ' → logprob: -12.101243019104004
    9. ']+=' → logprob: -12.101243019104004
    10. '[' → logprob: -12.226243019104004

Token 2282: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00015419373812619597
    2. ' =' → logprob: -9.125154495239258
    3. '=c' → logprob: -10.125154495239258
    4. '=
' → logprob: -13.000154495239258
    5. '=min' → logprob: -13.875154495239258
    6. ']=' → logprob: -15.125154495239258
    7. '=

' → logprob: -15.250154495239258
    8. '=[' → logprob: -15.375154495239258
    9. '=True' → logprob: -16.000154495239258
    10. '=[]' → logprob: -16.000154495239258

Token 2283: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0025508119724690914
    2. ' c' → logprob: -6.0025506019592285
    3. '0' → logprob: -9.502551078796387
    4. ' ' → logprob: -15.252551078796387
    5. '	c' → logprob: -16.50255012512207
    6. ')c' → logprob: -17.12755012512207
    7. '$c' → logprob: -17.37755012512207
    8. 'min' → logprob: -17.50255012512207
    9. '   ' → logprob: -17.75255012512207
    10. '[c' → logprob: -18.75255012512207

Token 2284: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42343229055404663
    2. '
' → logprob: -1.2984323501586914
    3. '<|end|>' → logprob: -2.7984323501586914
    4. ' for' → logprob: -5.548432350158691
    5. 'for' → logprob: -5.798432350158691
    6. '<|end|>' → logprob: -6.298432350158691
    7. '        
' → logprob: -6.923432350158691
    8. ',' → logprob: -7.923432350158691
    9. '   ' → logprob: -8.673432350158691
    10. '```' → logprob: -8.673432350158691

Token 2285: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016101589426398277
    2. '
' → logprob: -4.516101360321045
    3. 'for' → logprob: -5.891101360321045
    4. '```' → logprob: -7.141101360321045
    5. '   ' → logprob: -7.391101360321045
    6. ' for' → logprob: -7.766101360321045
    7. 'total' → logprob: -8.266101837158203
    8. '           ' → logprob: -9.891101837158203
    9. '        
' → logprob: -10.516101837158203
    10. ' total' → logprob: -11.391101837158203

Token 2286: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1333649456501007
    2. 'total' → logprob: -2.5083649158477783
    3. 'result' → logprob: -4.008365154266357
    4. '
' → logprob: -4.383365154266357
    5. 'for' → logprob: -5.383365154266357
    6. 'answer' → logprob: -6.133365154266357
    7. 'res' → logprob: -6.383365154266357
    8. '#' (adapté à ' #') → logprob: -6.758365154266357
    9. '```' → logprob: -6.883365154266357
    10. 'best' → logprob: -7.258365154266357

Token 2287: ' For' (ID: 2214)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.7913702130317688
    2. 'ans' → logprob: -1.291370153427124
    3. 'result' → logprob: -1.791370153427124
    4. 'res' → logprob: -2.666370153427124
    5. 'best' → logprob: -3.541370153427124
    6. '       ' → logprob: -5.291370391845703
    7. 'total' → logprob: -7.541370391845703
    8. 'for' → logprob: -7.541370391845703
    9. 'min' → logprob: -8.541370391845703
    10. '#' → logprob: -9.166370391845703

Token 2288: ' each' (ID: 2454)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.001426067785359919
    2. ' d' → logprob: -8.001425743103027
    3. 'each' → logprob: -8.126425743103027
    4. 'damage' → logprob: -8.126425743103027
    5. 'i' → logprob: -8.251425743103027
    6. 'res' → logprob: -9.876425743103027
    7. '_d' → logprob: -10.126425743103027
    8. 'total' → logprob: -10.126425743103027
    9. '```' → logprob: -11.126425743103027
    10. '   ' → logprob: -11.376425743103027

Token 2289: ' possible' (ID: 4149)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.001545810722745955
    2. 'i' → logprob: -7.5015459060668945
    3. 'damage' → logprob: -8.001545906066895
    4. '```' → logprob: -8.751545906066895
    5. ' d' → logprob: -8.876545906066895
    6. 'h' → logprob: -9.501545906066895
    7. '
' → logprob: -9.876545906066895
    8. 'possible' → logprob: -9.876545906066895
    9. '_d' → logprob: -10.501545906066895
    10. 'N' → logprob: -10.751545906066895

Token 2290: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02469823509454727
    2. ' d' → logprob: -3.774698257446289
    3. 'damage' → logprob: -6.649698257446289
    4. ' damage' → logprob: -9.524698257446289
    5. '   ' → logprob: -10.024698257446289
    6. '```' → logprob: -11.149698257446289
    7. '_d' → logprob: -12.024698257446289
    8. 'h' → logprob: -12.649698257446289
    9. ' ' → logprob: -12.649698257446289
    10. '``' → logprob: -13.149698257446289

Token 2291: ' (' (ID: 350)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.42956727743148804
    2. ' in' → logprob: -1.0545673370361328
    3. '
' → logprob: -8.054567337036133
    4. ',' → logprob: -8.054567337036133
    5. ' ' → logprob: -10.179567337036133
    6. 'range' → logprob: -10.179567337036133
    7. 'for' → logprob: -10.304567337036133
    8. 'd' → logprob: -10.554567337036133
    9. '   ' → logprob: -10.929567337036133
    10. '_in' → logprob: -11.054567337036133

Token 2292: 'damage' (ID: 94103)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2459643930196762
    2. ' in' → logprob: -1.7459644079208374
    3. 'range' → logprob: -3.370964288711548
    4. '0' → logprob: -5.120964527130127
    5. ' range' → logprob: -6.370964527130127
    6. 'd' → logprob: -6.995964527130127
    7. 'max' → logprob: -8.120964050292969
    8. ')' → logprob: -8.995964050292969
    9. '=' → logprob: -9.620964050292969
    10. ' ' → logprob: -10.120964050292969

Token 2293: ' from' (ID: 591)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0647927522659302
    2. 'in' → logprob: -1.4397927522659302
    3. '):' → logprob: -1.6897927522659302
    4. '):
' → logprob: -2.8147926330566406
    5. ':' → logprob: -3.8147926330566406
    6. 'ap' → logprob: -3.9397926330566406
    7. ',' → logprob: -4.064792633056641
    8. ']:' → logprob: -4.189792633056641
    9. 'from' → logprob: -4.689792633056641
    10. ')' → logprob: -4.689792633056641

Token 2294: ' all' (ID: 722)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013083349040243775
    2. ' ' → logprob: -9.000130653381348
    3. 'all' → logprob: -12.375130653381348
    4. 'range' → logprob: -13.625130653381348
    5. '```' → logprob: -14.875130653381348
    6. '
' → logprob: -15.000130653381348
    7. '   ' → logprob: -15.250130653381348
    8. 'd' → logprob: -15.875130653381348
    9. ')' → logprob: -16.000131607055664
    10. 'import' → logprob: -16.000131607055664

Token 2295: ' spells' (ID: 69967)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.006471998989582062
    2. 'sp' → logprob: -5.506472110748291
    3. ')' → logprob: -8.006471633911133
    4. ' spells' → logprob: -8.006471633911133
    5. '_target' → logprob: -8.381471633911133
    6. ' _' → logprob: -8.381471633911133
    7. ' ' → logprob: -8.631471633911133
    8. '```' → logprob: -8.631471633911133
    9. '   ' → logprob: -9.006471633911133
    10. ']' → logprob: -9.256471633911133

Token 2296: '),' (ID: 936)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.198521614074707
    2. '):
' → logprob: -1.198521614074707
    3. ' in' → logprob: -1.448521614074707
    4. '):' → logprob: -3.323521614074707
    5. ',' → logprob: -3.573521614074707
    6. '),' → logprob: -3.823521614074707
    7. ':
' → logprob: -4.198521614074707
    8. ':' → logprob: -4.323521614074707
    9. '+' → logprob: -4.323521614074707
    10. '=' → logprob: -4.448521614074707

Token 2297: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.20618805289268494
    2. 'res' → logprob: -2.5811879634857178
    3. ' total' → logprob: -3.0811879634857178
    4. 'for' → logprob: -3.9561879634857178
    5. '       ' → logprob: -4.206188201904297
    6. 'result' → logprob: -5.206188201904297
    7. 'ans' → logprob: -5.331188201904297
    8. 'answer' → logprob: -5.331188201904297
    9. 'best' → logprob: -5.581188201904297
    10. ' for' → logprob: -5.706188201904297

Token 2298: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.16053088009357452
    2. '_cost' → logprob: -1.910530924797058
    3. '```' → logprob: -9.035531044006348
    4. 'single' → logprob: -9.660531044006348
    5. ' cost' → logprob: -9.785531044006348
    6. '_single' → logprob: -10.910531044006348
    7. '
' → logprob: -11.410531044006348
    8. '   ' → logprob: -11.660531044006348
    9. '``' → logprob: -12.535531044006348
    10. '`' → logprob: -12.535531044006348

Token 2299: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5308099389076233
    2. '=' → logprob: -1.0308098793029785
    3. 'for' → logprob: -3.9058098793029785
    4. '       ' → logprob: -5.2808098793029785
    5. '   ' → logprob: -5.2808098793029785
    6. 'total' → logprob: -5.6558098793029785
    7. '```' → logprob: -5.7808098793029785
    8. 'd' → logprob: -5.9058098793029785
    9. ' for' → logprob: -5.9058098793029785
    10. '[' → logprob: -6.1558098793029785

Token 2300: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03164214640855789
    2. ' dp' → logprob: -4.531641960144043
    3. 'sum' → logprob: -4.656641960144043
    4. 'min' → logprob: -5.281641960144043
    5. '0' → logprob: -5.531641960144043
    6. '   ' → logprob: -7.156641960144043
    7. ' sum' → logprob: -8.406641960144043
    8. 'for' → logprob: -8.781641960144043
    9. '(dp' → logprob: -9.156641960144043
    10. ' min' → logprob: -9.281641960144043

Token 2301: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.014352128840982914
    2. '[' → logprob: -4.389352321624756
    3. '+d' → logprob: -7.889352321624756
    4. 'd' → logprob: -8.014351844787598
    5. ' +' → logprob: -8.764351844787598
    6. ' [' → logprob: -8.764351844787598
    7. '[
' → logprob: -8.889351844787598
    8. '   ' → logprob: -9.014351844787598
    9. '+' → logprob: -9.139351844787598
    10. '=' → logprob: -10.014351844787598

Token 2302: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.048471201211214066
    2. ' +' → logprob: -3.798471212387085
    3. '+' → logprob: -4.173470973968506
    4. ']+' → logprob: -4.673470973968506
    5. '+]' → logprob: -9.173471450805664
    6. ' ]' → logprob: -9.798471450805664
    7. ')' → logprob: -13.298471450805664
    8. '```' → logprob: -13.423471450805664
    9. ']
' → logprob: -13.798471450805664
    10. '
' → logprob: -13.923471450805664

Token 2303: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3558235168457031
    2. '+' → logprob: -1.2308235168457031
    3. '+d' → logprob: -5.605823516845703
    4. ']' → logprob: -6.730823516845703
    5. '```' → logprob: -7.355823516845703
    6. ')' → logprob: -7.480823516845703
    7. ' +
' → logprob: -8.480823516845703
    8. '+
' → logprob: -8.605823516845703
    9. '[' → logprob: -8.605823516845703
    10. '[d' → logprob: -8.730823516845703

Token 2304: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.02109752781689167
    2. ' sum' → logprob: -3.896097421646118
    3. '(sum' → logprob: -8.271097183227539
    4. 'min' → logprob: -9.146097183227539
    5. '   ' → logprob: -9.521097183227539
    6. '
' → logprob: -10.146097183227539
    7. '```' → logprob: -10.396097183227539
    8. '0' → logprob: -11.021097183227539
    9. '``' → logprob: -12.396097183227539
    10. ' ' → logprob: -12.396097183227539

Token 2305: ' over' (ID: 1072)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.8212504982948303
    2. '(min' → logprob: -1.0712504386901855
    3. '(' → logprob: -1.9462504386901855
    4. '(
' → logprob: -3.5712504386901855
    5. 'over' → logprob: -4.3212504386901855
    6. ' (' → logprob: -5.0712504386901855
    7. '_over' → logprob: -5.3212504386901855
    8. '([' → logprob: -5.4462504386901855
    9. '_' → logprob: -6.0712504386901855
    10. 'min' → logprob: -6.1962504386901855

Token 2306: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006601445376873016
    2. 'mon' → logprob: -5.631601333618164
    3. 'range' → logprob: -6.506601333618164
    4. ' i' → logprob: -7.381601333618164
    5. 'HP' → logprob: -7.756601333618164
    6. '   ' → logprob: -9.006601333618164
    7. 'min' → logprob: -9.381601333618164
    8. ' range' → logprob: -9.631601333618164
    9. '[' → logprob: -10.381601333618164
    10. '[i' → logprob: -10.756601333618164

Token 2307: ' min' (ID: 1349)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.2481364011764526
    2. '(max' → logprob: -1.2481364011764526
    3. ' (' → logprob: -1.4981364011764526
    4. 'max' → logprob: -1.9981364011764526
    5. '(min' → logprob: -3.748136520385742
    6. '(' → logprob: -3.873136520385742
    7. ' min' → logprob: -4.748136520385742
    8. ' of' → logprob: -5.498136520385742
    9. 'min' → logprob: -5.498136520385742
    10. '
' → logprob: -6.373136520385742

Token 2308: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.0005848454311490059
    2. '(' → logprob: -8.375584602355957
    3. '(_' → logprob: -8.375584602355957
    4. 'single' → logprob: -10.250584602355957
    5. '(min' → logprob: -10.250584602355957
    6. '(single' → logprob: -11.375584602355957
    7. '_' → logprob: -11.500584602355957
    8. '_(' → logprob: -11.625584602355957
    9. '(max' → logprob: -11.875584602355957
    10. 'Single' → logprob: -12.625584602355957

Token 2309: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.0325924449716695e-05
    2. '_single' → logprob: -12.75001049041748
    3. 'cost' → logprob: -12.87501049041748
    4. '```' → logprob: -13.50001049041748
    5. 'Cost' → logprob: -14.00001049041748
    6. '
' → logprob: -14.12501049041748
    7. '\' → logprob: -14.37501049041748
    8. '_' → logprob: -15.25001049041748
    9. '_d' → logprob: -15.87501049041748
    10. '[_' → logprob: -16.000009536743164

Token 2310: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.011559385806322098
    2. 'for' → logprob: -5.26155948638916
    3. ')' → logprob: -7.01155948638916
    4. '[d' → logprob: -7.01155948638916
    5. ' =' → logprob: -7.38655948638916
    6. 's' → logprob: -7.51155948638916
    7. '
' → logprob: -7.63655948638916
    8. '   ' → logprob: -7.76155948638916
    9. '[' → logprob: -8.01155948638916
    10. '[_' → logprob: -8.13655948638916

Token 2311: '_HP' (ID: 196429)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.16135992109775543
    2. '_HP' → logprob: -2.161360025405884
    3. '[' → logprob: -4.161359786987305
    4. '_hp' → logprob: -5.286359786987305
    5. '[i' → logprob: -5.911359786987305
    6. 'i' → logprob: -6.161359786987305
    7. ' HP' → logprob: -7.161359786987305
    8. '   ' → logprob: -7.286359786987305
    9. '_' → logprob: -7.411359786987305
    10. 'res' → logprob: -7.411359786987305

Token 2312: '[max' (ID: 84690)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10906440019607544
    2. '[
' → logprob: -3.6090643405914307
    3. '[d' → logprob: -3.8590643405914307
    4. '(' → logprob: -4.60906457901001
    5. '[max' → logprob: -4.85906457901001
    6. '[h' → logprob: -5.23406457901001
    7. 'for' → logprob: -5.35906457901001
    8. '(d' → logprob: -5.35906457901001
    9. 'd' → logprob: -5.73406457901001
    10. ' [' → logprob: -5.85906457901001

Token 2313: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00031699295504949987
    2. '(
' → logprob: -9.250316619873047
    3. '0' → logprob: -9.500316619873047
    4. ' (' → logprob: -9.750316619873047
    5. '(max' → logprob: -9.875316619873047
    6. '[' → logprob: -11.125316619873047
    7. '```' → logprob: -11.500316619873047
    8. '((' → logprob: -13.125316619873047
    9. 'max' → logprob: -13.875316619873047
    10. 'HP' → logprob: -13.875316619873047

Token 2314: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029823284596204758
    2. '0' → logprob: -3.5298233032226562
    3. '(
' → logprob: -10.904823303222656
    4. 'HP' → logprob: -10.904823303222656
    5. ' (' → logprob: -11.404823303222656
    6. ' ' → logprob: -11.779823303222656
    7. '```' → logprob: -12.029823303222656
    8. '`' → logprob: -13.654823303222656
    9. '   ' → logprob: -13.779823303222656
    10. '(H' → logprob: -13.779823303222656

Token 2315: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4334560036659241
    2. ',' → logprob: -1.0584559440612793
    3. ',(' → logprob: -6.933455944061279
    4. ' (' → logprob: -7.308455944061279
    5. '](' → logprob: -7.558455944061279
    6. '(
' → logprob: -7.808455944061279
    7. ' ,' → logprob: -8.183456420898438
    8. '(i' → logprob: -8.183456420898438
    9. ',
' → logprob: -8.308456420898438
    10. '(max' → logprob: -8.433456420898438

Token 2316: ' HP' (ID: 21979)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.00010306637705070898
    2. ' HP' → logprob: -9.500102996826172
    3. '(' → logprob: -10.750102996826172
    4. '   ' → logprob: -12.625102996826172
    5. '```' → logprob: -13.625102996826172
    6. '_HP' → logprob: -13.875102996826172
    7. '0' → logprob: -14.375102996826172
    8. '`' → logprob: -15.750102996826172
    9. ' (' → logprob: -16.125102996826172
    10. 'hp' → logprob: -16.375102996826172

Token 2317: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.47757811343763e-05
    2. 'i' → logprob: -10.875044822692871
    3. '[' → logprob: -11.000044822692871
    4. '```' → logprob: -12.500044822692871
    5. '[
' → logprob: -12.750044822692871
    6. '``' → logprob: -14.625044822692871
    7. '(i' → logprob: -15.000044822692871
    8. '][' → logprob: -15.375044822692871
    9. '
' → logprob: -15.500044822692871
    10. ' [' → logprob: -16.000043869018555

Token 2318: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.53955078125
    2. '-' → logprob: -1.53955078125
    3. ' -' → logprob: -1.91455078125
    4. '[i' → logprob: -3.78955078125
    5. ']-' → logprob: -3.78955078125
    6. '-d' → logprob: -5.16455078125
    7. '[d' → logprob: -6.28955078125
    8. '[' → logprob: -6.91455078125
    9. ' ]' → logprob: -8.41455078125
    10. '[j' → logprob: -8.41455078125

Token 2319: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0005664954078383744
    2. ' d' → logprob: -7.500566482543945
    3. '
' → logprob: -12.500566482543945
    4. '```' → logprob: -13.125566482543945
    5. ')d' → logprob: -13.125566482543945
    6. ']' → logprob: -13.250566482543945
    7. '   ' → logprob: -13.875566482543945
    8. ')' → logprob: -14.375566482543945
    9. ' ' → logprob: -15.000566482543945
    10. '`' → logprob: -15.250566482543945

Token 2320: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0949890986084938
    2. ')])' → logprob: -2.969989061355591
    3. '])' → logprob: -3.594989061355591
    4. ']' → logprob: -5.21998929977417
    5. ')]
' → logprob: -5.96998929977417
    6. '])]' → logprob: -5.96998929977417
    7. ')' → logprob: -7.34498929977417
    8. ')])
' → logprob: -8.219988822937012
    9. '])
' → logprob: -8.844988822937012
    10. ']+' → logprob: -9.469988822937012

Token 2321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8663626909255981
    2. 'total' → logprob: -1.7413626909255981
    3. 'result' → logprob: -1.8663626909255981
    4. '
' → logprob: -2.6163625717163086
    5. 'ans' → logprob: -2.8663625717163086
    6. 'answer' → logprob: -2.8663625717163086
    7. 'best' → logprob: -3.8663625717163086
    8. 'min' → logprob: -4.116362571716309
    9. 'res' → logprob: -4.866362571716309
    10. 'for' → logprob: -5.241362571716309

Token 2322: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.958793044090271
    2. 'answer' → logprob: -1.208793044090271
    3. 'best' → logprob: -1.958793044090271
    4. 'result' → logprob: -1.958793044090271
    5. '       ' → logprob: -3.8337931632995605
    6. 'res' → logprob: -4.5837931632995605
    7. 'min' → logprob: -6.2087931632995605
    8. 'for' → logprob: -7.3337931632995605
    9. '   ' → logprob: -7.3337931632995605
    10. '
' → logprob: -8.083792686462402

Token 2323: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5238736867904663
    2. ' =' → logprob: -0.8988736867904663
    3. '   ' → logprob: -8.148873329162598
    4. '[' → logprob: -8.523873329162598
    5. '```' → logprob: -9.398873329162598
    6. ',' → logprob: -9.523873329162598
    7. '=
' → logprob: -10.773873329162598
    8. ')' → logprob: -10.773873329162598
    9. ' =
' → logprob: -11.523873329162598
    10. 'for' → logprob: -12.023873329162598

Token 2324: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.00616234727203846
    2. '10' → logprob: -5.131162166595459
    3. ' INF' → logprob: -9.631162643432617
    4. 'min' → logprob: -9.631162643432617
    5. 'sys' → logprob: -10.506162643432617
    6. 'inf' → logprob: -10.756162643432617
    7. 'dp' → logprob: -11.006162643432617
    8. 'float' → logprob: -11.131162643432617
    9. 'IN' → logprob: -12.131162643432617
    10. '[' → logprob: -12.381162643432617

Token 2325: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8015171885490417
    2. '
' → logprob: -1.0515172481536865
    3. '       ' → logprob: -2.3015172481536865
    4. ' =' → logprob: -3.3015172481536865
    5. '=' → logprob: -4.176517009735107
    6. ' for' → logprob: -4.301517009735107
    7. '   ' → logprob: -4.801517009735107
    8. '+' → logprob: -5.301517009735107
    9. ':
' → logprob: -5.676517009735107
    10. ',
' → logprob: -5.926517009735107

Token 2326: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7167331576347351
    2. 'for' → logprob: -1.0917332172393799
    3. '       ' → logprob: -2.09173321723938
    4. ' for' → logprob: -3.71673321723938
    5. ' =' → logprob: -4.341732978820801
    6. '=' → logprob: -5.091732978820801
    7. '   ' → logprob: -6.216732978820801
    8. '        
' → logprob: -6.591732978820801
    9. '```' → logprob: -6.966732978820801
    10. '    
' → logprob: -7.341732978820801

Token 2327: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.236549335066229e-05
    2. '```' → logprob: -11.000021934509277
    3. '       ' → logprob: -12.250021934509277
    4. ' for' → logprob: -14.375021934509277
    5. '``' → logprob: -15.500021934509277
    6. '   ' → logprob: -16.875022888183594
    7. '
' → logprob: -18.125022888183594
    8. 'from' → logprob: -18.875022888183594
    9. '	for' → logprob: -19.625022888183594
    10. 'import' → logprob: -20.000022888183594

Token 2328: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0029785369988530874
    2. ' d' → logprob: -5.877978324890137
    3. 'damage' → logprob: -8.877978324890137
    4. '_d' → logprob: -11.127978324890137
    5. '   ' → logprob: -11.252978324890137
    6. ' damage' → logprob: -13.002978324890137
    7. '_damage' → logprob: -14.252978324890137
    8. 'D' → logprob: -14.627978324890137
    9. '```' → logprob: -14.752978324890137
    10. '	d' → logprob: -14.752978324890137

Token 2329: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038132719695568085
    2. 'in' → logprob: -3.288132667541504
    3. ')' → logprob: -10.788132667541504
    4. ' ' → logprob: -11.038132667541504
    5. ',' → logprob: -11.538132667541504
    6. '0' → logprob: -11.663132667541504
    7. 'd' → logprob: -11.788132667541504
    8. '=' → logprob: -11.913132667541504
    9. 'range' → logprob: -13.038132667541504
    10. ' =' → logprob: -13.163132667541504

Token 2330: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006342819542624056
    2. '0' → logprob: -7.75063419342041
    3. ' range' → logprob: -8.50063419342041
    4. ' ' → logprob: -15.37563419342041
    5. '
' → logprob: -17.875635147094727
    6. '```' → logprob: -18.000635147094727
    7. '(range' → logprob: -18.875635147094727
    8. '   ' → logprob: -19.125635147094727
    9. 'in' → logprob: -19.125635147094727
    10. 'r' → logprob: -19.750635147094727

Token 2331: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.570505678653717
    2. 'max' → logprob: -1.0705056190490723
    3. '0' → logprob: -2.4455056190490723
    4. '(' → logprob: -5.320505619049072
    5. ' max' → logprob: -8.57050609588623
    6. '[max' → logprob: -9.82050609588623
    7. ' ' → logprob: -10.07050609588623
    8. ',max' → logprob: -10.94550609588623
    9. ' (' → logprob: -11.07050609588623
    10. '=max' → logprob: -11.57050609588623

Token 2332: 'HP' (ID: 11269)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05911426246166229
    2. 'HP' → logprob: -3.0591142177581787
    3. ' +' → logprob: -5.184114456176758
    4. 'P' → logprob: -5.684114456176758
    5. '0' → logprob: -7.309114456176758
    6. '+
' → logprob: -8.434114456176758
    7. '   ' → logprob: -8.809114456176758
    8. '=' → logprob: -9.309114456176758
    9. '```' → logprob: -10.059114456176758
    10. ')' → logprob: -10.059114456176758

Token 2333: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007461408386006951
    2. ' +' → logprob: -7.250746250152588
    3. ',' → logprob: -11.25074577331543
    4. '):
' → logprob: -11.37574577331543
    5. '+
' → logprob: -12.50074577331543
    6. '):' → logprob: -12.87574577331543
    7. '```' → logprob: -13.37574577331543
    8. '
' → logprob: -13.50074577331543
    9. '   ' → logprob: -14.50074577331543
    10. '       ' → logprob: -15.37574577331543

Token 2334: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02631562203168869
    2. '+' → logprob: -3.651315689086914
    3. ' +' → logprob: -11.901315689086914
    4. '0' → logprob: -12.901315689086914
    5. '```' → logprob: -12.901315689086914
    6. ' ' → logprob: -13.401315689086914
    7. '=' → logprob: -14.276315689086914
    8. '
' → logprob: -15.151315689086914
    9. '+
' → logprob: -15.276315689086914
    10. ')' → logprob: -15.401315689086914

Token 2335: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.024437326937913895
    2. '):' → logprob: -4.274437427520752
    3. ':
' → logprob: -5.399437427520752
    4. '       ' → logprob: -5.649437427520752
    5. ':' → logprob: -6.399437427520752
    6. '           ' → logprob: -8.524436950683594
    7. '   ' → logprob: -8.649436950683594
    8. '):
' → logprob: -10.524436950683594
    9. '```' → logprob: -10.524436950683594
    10. '+' → logprob: -10.774436950683594

Token 2336: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03451753407716751
    2. 'total' → logprob: -4.159517765045166
    3. '       ' → logprob: -4.284517765045166
    4. '```' → logprob: -6.409517765045166
    5. 'cost' → logprob: -7.034517765045166
    6. ' total' → logprob: -7.034517765045166
    7. '   ' → logprob: -7.409517765045166
    8. 'sum' → logprob: -9.534517288208008
    9. ' cost' → logprob: -9.659517288208008
    10. ' if' → logprob: -9.784517288208008

Token 2337: ' if' (ID: 538)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.19817334413528442
    2. 'cost' → logprob: -1.9481732845306396
    3. 'res' → logprob: -4.323173522949219
    4. '           ' → logprob: -4.698173522949219
    5. '   ' → logprob: -5.073173522949219
    6. 'single' → logprob: -5.573173522949219
    7. 'if' (adapté à ' if') → logprob: -6.198173522949219
    8. 'cur' → logprob: -7.448173522949219
    9. ' total' → logprob: -7.698173522949219
    10. 'curr' → logprob: -7.823173522949219

Token 2338: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00015943869948387146
    2. ' dp' → logprob: -8.75015926361084
    3. '   ' → logprob: -14.75015926361084
    4. '           ' → logprob: -15.00015926361084
    5. '(dp' → logprob: -16.125160217285156
    6. '       ' → logprob: -16.375160217285156
    7. '	dp' → logprob: -16.375160217285156
    8. '               ' → logprob: -18.125160217285156
    9. '                   ' → logprob: -18.500160217285156
    10. '
' → logprob: -18.750160217285156

Token 2339: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -4.842555426876061e-06
    2. 'd' → logprob: -12.625004768371582
    3. '[' → logprob: -13.625004768371582
    4. '[
' → logprob: -16.0000057220459
    5. '```' → logprob: -16.2500057220459
    6. ' [' → logprob: -17.3750057220459
    7. '\[' → logprob: -17.6250057220459
    8. '(d' → logprob: -18.1250057220459
    9. '
' → logprob: -18.2500057220459
    10. '   ' → logprob: -18.6250057220459

Token 2340: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014927281066775322
    2. '[' → logprob: -4.889927387237549
    3. ']!=' → logprob: -6.389927387237549
    4. '!=' → logprob: -6.764927387237549
    5. ' !=' → logprob: -6.889927387237549
    6. '[d' → logprob: -7.264927387237549
    7. '<' → logprob: -7.264927387237549
    8. '==' → logprob: -7.764927387237549
    9. ']<' → logprob: -7.764927387237549
    10. ']==' → logprob: -7.764927387237549

Token 2341: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.016198473051190376
    2. '!=' → logprob: -4.641198635101318
    3. ' <' → logprob: -5.516198635101318
    4. ' !=' → logprob: -6.641198635101318
    5. '<=' → logprob: -7.266198635101318
    6. '==' → logprob: -8.64119815826416
    7. '[' → logprob: -9.39119815826416
    8. '<int' → logprob: -10.76619815826416
    9. '```' → logprob: -10.76619815826416
    10. ' ==' → logprob: -11.26619815826416

Token 2342: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -4.7159857786027715e-05
    2. '0' → logprob: -10.500046730041504
    3. ' INF' → logprob: -12.000046730041504
    4. '[' → logprob: -12.125046730041504
    5. '-INF' → logprob: -12.625046730041504
    6. '_INF' → logprob: -13.250046730041504
    7. 'IN' → logprob: -14.125046730041504
    8. 'inf' → logprob: -14.375046730041504
    9. '<' → logprob: -14.750046730041504
    10. '   ' → logprob: -15.250046730041504

Token 2343: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8632551431655884
    2. ':' → logprob: -1.1132551431655884
    3. '               ' → logprob: -2.113255023956299
    4. ' or' → logprob: -2.238255023956299
    5. ' and' → logprob: -4.238255023956299
    6. '           ' → logprob: -5.613255023956299
    7. 'and' → logprob: -6.738255023956299
    8. 'or' → logprob: -6.863255023956299
    9. '                   ' → logprob: -8.113255500793457
    10. '                       ' → logprob: -8.238255500793457

Token 2344: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009592464193701744
    2. ' and' → logprob: -4.884592533111572
    3. '           ' → logprob: -7.134592533111572
    4. ':
' → logprob: -8.134592056274414
    5. ' or' → logprob: -9.009592056274414
    6. '                   ' → logprob: -9.384592056274414
    7. ':' → logprob: -9.384592056274414
    8. ',' → logprob: -9.634592056274414
    9. '<|end|>' → logprob: -9.634592056274414
    10. ')' → logprob: -9.759592056274414

Token 2345: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.26088377833366394
    2. '               ' → logprob: -1.5108838081359863
    3. ' continue' → logprob: -4.885883808135986
    4. '   ' → logprob: -7.385883808135986
    5. '           ' → logprob: -7.635883808135986
    6. '	continue' → logprob: -9.010883331298828
    7. '       ' → logprob: -9.385883331298828
    8. '```' → logprob: -10.510883331298828
    9. '                   ' → logprob: -11.385883331298828
    10. '_continue' → logprob: -12.385883331298828

Token 2346: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002566979732364416
    2. 'total' → logprob: -6.877566814422607
    3. '               ' → logprob: -7.127566814422607
    4. '
' → logprob: -8.002567291259766
    5. '       ' → logprob: -9.127567291259766
    6. ' total' → logprob: -9.252567291259766
    7. '   ' → logprob: -9.752567291259766
    8. '```' → logprob: -10.752567291259766
    9. 'cost' → logprob: -10.752567291259766
    10. 'ans' → logprob: -11.002567291259766

Token 2347: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023660168517380953
    2. 'total' → logprob: -6.627366065979004
    3. ' total' → logprob: -7.877366065979004
    4. '       ' → logprob: -8.002366065979004
    5. 'cost' → logprob: -9.377366065979004
    6. '               ' → logprob: -9.627366065979004
    7. '
' → logprob: -10.002366065979004
    8. '   ' → logprob: -10.127366065979004
    9. '```' → logprob: -10.502366065979004
    10. ' cost' → logprob: -10.627366065979004

Token 2348: ' total' (ID: 3609)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31780365109443665
    2. 'total' (adapté à ' total') → logprob: -1.8178036212921143
    3. 'cost' → logprob: -3.1928036212921143
    4. 'res' → logprob: -3.1928036212921143
    5. '   ' → logprob: -4.067803859710693
    6. 'single' → logprob: -5.692803859710693
    7. ' total' → logprob: -6.192803859710693
    8. '       ' → logprob: -6.442803859710693
    9. 'sum' → logprob: -6.692803859710693
    10. ' cost' → logprob: -7.942803859710693

Token 2349: ' =' (ID: 314)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0012030890211462975
    2. 'cost' → logprob: -7.2512030601501465
    3. ' +=' → logprob: -8.251203536987305
    4. '_' → logprob: -9.501203536987305
    5. ' =' → logprob: -9.876203536987305
    6. ' _' → logprob: -10.251203536987305
    7. '=' → logprob: -11.001203536987305
    8. '+=' → logprob: -11.251203536987305
    9. ' cost' → logprob: -11.626203536987305
    10. '_COST' → logprob: -11.751203536987305

Token 2350: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3708406984806061
    2. '0' → logprob: -1.2458406686782837
    3. ' dp' → logprob: -3.8708407878875732
    4. ' ' → logprob: -7.120840549468994
    5. 'sum' → logprob: -8.370841026306152
    6. '   ' → logprob: -9.370841026306152
    7. '(dp' → logprob: -9.870841026306152
    8. '           ' → logprob: -10.120841026306152
    9. '       ' → logprob: -10.620841026306152
    10. '	dp' → logprob: -10.995841026306152

Token 2351: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.021957753226161003
    2. '+d' → logprob: -4.146957874298096
    3. ' +' → logprob: -5.896957874298096
    4. '+' → logprob: -6.521957874298096
    5. '[' → logprob: -6.646957874298096
    6. '           ' → logprob: -8.771957397460938
    7. 'd' → logprob: -9.521957397460938
    8. '   ' → logprob: -10.896957397460938
    9. '[
' → logprob: -10.896957397460938
    10. 'total' → logprob: -10.896957397460938

Token 2352: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11163591593503952
    2. ' +' → logprob: -2.73663592338562
    3. ']' → logprob: -3.48663592338562
    4. ']+' → logprob: -4.736635684967041
    5. '+
' → logprob: -6.986635684967041
    6. '           ' → logprob: -8.4866361618042
    7. '
' → logprob: -9.1116361618042
    8. '+]' → logprob: -9.2366361618042
    9. ' +
' → logprob: -10.2366361618042
    10. ']
' → logprob: -11.1116361618042

Token 2353: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002931558701675385
    2. 'for' → logprob: -8.375292778015137
    3. ' for' → logprob: -10.000292778015137
    4. '```' → logprob: -12.000292778015137
    5. ' +' → logprob: -12.625292778015137
    6. '+' → logprob: -13.250292778015137
    7. '       ' → logprob: -13.375292778015137
    8. '   ' → logprob: -13.750292778015137
    9. '               ' → logprob: -14.000292778015137
    10. '                   ' → logprob: -14.500292778015137

Token 2354: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.051295194774866104
    2. 'for' (adapté à ' for') → logprob: -3.176295280456543
    3. ' for' → logprob: -4.801295280456543
    4. '       ' → logprob: -11.176295280456543
    5. '   ' → logprob: -11.551295280456543
    6. '               ' → logprob: -12.051295280456543
    7. '
' → logprob: -13.301295280456543
    8. '                   ' → logprob: -13.301295280456543
    9. '	       ' → logprob: -13.301295280456543
    10. '```' → logprob: -13.301295280456543

Token 2355: ' hp' (ID: 37774)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005927609279751778
    2. ' i' → logprob: -5.380927562713623
    3. 'hp' → logprob: -6.755927562713623
    4. ' hp' → logprob: -10.130928039550781
    5. 'HP' → logprob: -10.380928039550781
    6. '   ' → logprob: -10.755928039550781
    7. 'monster' → logprob: -11.005928039550781
    8. '_,' → logprob: -11.755928039550781
    9. '0' → logprob: -12.880928039550781
    10. ' ' → logprob: -12.880928039550781

Token 2356: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5981523990631104
    2. ' in' → logprob: -0.8481523990631104
    3. 'i' → logprob: -3.8481523990631104
    4. '[i' → logprob: -7.973152160644531
    5. ',' → logprob: -8.973152160644531
    6. '_i' → logprob: -9.973152160644531
    7. '_in' → logprob: -10.598152160644531
    8. ' i' → logprob: -10.723152160644531
    9. '```' → logprob: -11.223152160644531
    10. ')' → logprob: -11.348152160644531

Token 2357: ' HP' (ID: 21979)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -2.999452772201039e-05
    2. 'range' → logprob: -10.500029563903809
    3. ' HP' → logprob: -13.250029563903809
    4. ' range' → logprob: -15.625029563903809
    5. '   ' → logprob: -15.875029563903809
    6. '[' → logprob: -16.250030517578125
    7. 'enumer' → logprob: -16.750030517578125
    8. '_HP' → logprob: -16.875030517578125
    9. '(' → logprob: -17.375030517578125
    10. 'hp' → logprob: -17.375030517578125

Token 2358: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1472407579421997
    2. ':' → logprob: -2.52224063873291
    3. '               ' → logprob: -3.52224063873291
    4. '-' → logprob: -4.02224063873291
    5. '           ' → logprob: -5.89724063873291
    6. '):
' → logprob: -6.14724063873291
    7. 'if' → logprob: -7.64724063873291
    8. '[' → logprob: -7.77224063873291
    9. ',' → logprob: -7.89724063873291
    10. ' if' → logprob: -8.14724063873291

Token 2359: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009144435753114522
    2. '-' → logprob: -8.500914573669434
    3. 'total' → logprob: -8.875914573669434
    4. ' total' → logprob: -9.250914573669434
    5. '```' → logprob: -9.625914573669434
    6. ' -' → logprob: -9.875914573669434
    7. '                   ' → logprob: -9.875914573669434
    8. '           ' → logprob: -10.125914573669434
    9. '              ' → logprob: -10.250914573669434
    10. '<|end|>' → logprob: -10.375914573669434

Token 2360: ' residual' (ID: 54782)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.454128235578537
    2. 'res' → logprob: -1.8291282653808594
    3. '                   ' → logprob: -2.4541282653808594
    4. 'max' → logprob: -3.2041282653808594
    5. ' total' → logprob: -3.4541282653808594
    6. '               ' → logprob: -4.204128265380859
    7. ' residual' → logprob: -4.954128265380859
    8. 'if' → logprob: -4.954128265380859
    9. ' max' → logprob: -5.579128265380859
    10. 'remaining' → logprob: -5.829128265380859

Token 2361: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20852917432785034
    2. ' =' → logprob: -1.7085292339324951
    3. '-' → logprob: -6.208528995513916
    4. 'cost' → logprob: -6.333528995513916
    5. '_cost' → logprob: -6.458528995513916
    6. '               ' → logprob: -8.333529472351074
    7. 'res' → logprob: -8.708529472351074
    8. '=max' → logprob: -8.833529472351074
    9. '-=' → logprob: -8.833529472351074
    10. '_res' → logprob: -8.833529472351074

Token 2362: ' hp' (ID: 37774)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.024178918451070786
    2. ' max' → logprob: -3.774178981781006
    3. '0' → logprob: -7.274178981781006
    4. 'hp' → logprob: -8.524178504943848
    5. ' hp' → logprob: -10.899178504943848
    6. '(max' → logprob: -11.149178504943848
    7. 'res' → logprob: -13.024178504943848
    8. ' ' → logprob: -13.274178504943848
    9. '	max' → logprob: -13.899178504943848
    10. '   ' → logprob: -14.149178504943848

Token 2363: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20555269718170166
    2. ' -' → logprob: -1.7055526971817017
    3. '-d' → logprob: -5.705552577972412
    4. '                   ' → logprob: -7.955552577972412
    5. '               ' → logprob: -8.20555305480957
    6. '-D' → logprob: -10.83055305480957
    7. '           ' → logprob: -10.95555305480957
    8. '                       ' → logprob: -11.08055305480957
    9. '                ' → logprob: -11.45555305480957
    10. '-if' → logprob: -11.70555305480957

Token 2364: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0002036595979006961
    2. ' d' → logprob: -8.500204086303711
    3. '   ' → logprob: -17.37520408630371
    4. '           ' → logprob: -17.50020408630371
    5. '
' → logprob: -18.00020408630371
    6. '```' → logprob: -18.25020408630371
    7. '	d' → logprob: -18.50020408630371
    8. ' ' → logprob: -18.75020408630371
    9. '                   ' → logprob: -19.12520408630371
    10. '       ' → logprob: -19.25020408630371

Token 2365: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15159639716148376
    2. 'if' → logprob: -2.2765963077545166
    3. '               ' → logprob: -3.4015963077545166
    4. '                   ' → logprob: -6.151596546173096
    5. '```' → logprob: -7.026596546173096
    6. '           ' → logprob: -7.276596546173096
    7. '
' → logprob: -7.901596546173096
    8. '                       ' → logprob: -8.901596069335938
    9. '                           ' → logprob: -9.526596069335938
    10. '>' → logprob: -9.526596069335938

Token 2366: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02052367478609085
    2. ' if' → logprob: -4.520523548126221
    3. 'if' → logprob: -4.770523548126221
    4. '           ' → logprob: -7.020523548126221
    5. '```' → logprob: -10.395524024963379
    6. '                   ' → logprob: -10.770524024963379
    7. '			' → logprob: -13.145524024963379
    8. 'total' → logprob: -13.520524024963379
    9. '<|end|>' → logprob: -14.395524024963379
    10. '                       ' → logprob: -14.395524024963379

Token 2367: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.016489893198013306
    2. 'total' → logprob: -4.7664899826049805
    3. ' if' → logprob: -5.3914899826049805
    4. '               ' → logprob: -5.7664899826049805
    5. '                   ' → logprob: -9.76648998260498
    6. 'res' → logprob: -10.01648998260498
    7. ' total' → logprob: -10.76648998260498
    8. '+' → logprob: -11.26648998260498
    9. '           ' → logprob: -11.51648998260498
    10. '```' → logprob: -12.39148998260498

Token 2368: ' residual' (ID: 54782)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.003607555292546749
    2. ' residual' → logprob: -5.628607749938965
    3. '                   ' → logprob: -13.128607749938965
    4. '               ' → logprob: -13.628607749938965
    5. '(res' → logprob: -13.878607749938965
    6. '_res' → logprob: -14.753607749938965
    7. '0' → logprob: -14.753607749938965
    8. '           ' → logprob: -14.753607749938965
    9. ' res' → logprob: -14.878607749938965
    10. '   ' → logprob: -15.128607749938965

Token 2369: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.20847450196743011
    2. '<' → logprob: -2.2084743976593018
    3. '<=' → logprob: -2.7084743976593018
    4. ' >' → logprob: -4.958474636077881
    5. ' <=' → logprob: -5.958474636077881
    6. ' <' → logprob: -6.458474636077881
    7. '>=' → logprob: -8.083474159240723
    8. '                   ' → logprob: -9.708474159240723
    9. '```' → logprob: -10.458474159240723
    10. '               ' → logprob: -10.583474159240723

Token 2370: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029799317941069603
    2. '=' → logprob: -3.529799222946167
    3. ' ' → logprob: -10.029799461364746
    4. '1' → logprob: -13.529799461364746
    5. '           ' → logprob: -14.029799461364746
    6. '               ' → logprob: -14.279799461364746
    7. '```' → logprob: -14.529799461364746
    8. ' =' → logprob: -14.779799461364746
    9. '=
' → logprob: -15.154799461364746
    10. '                   ' → logprob: -15.154799461364746

Token 2371: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004080420359969139
    2. '=' → logprob: -5.504080295562744
    3. '1' → logprob: -14.004080772399902
    4. ' ' → logprob: -14.129080772399902
    5. ' =' → logprob: -16.129079818725586
    6. '```' → logprob: -16.129079818725586
    7. '=
' → logprob: -16.629079818725586
    8. '
' → logprob: -16.754079818725586
    9. '   ' → logprob: -17.879079818725586
    10. '           ' → logprob: -18.254079818725586

Token 2372: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8219698667526245
    2. ':
' → logprob: -1.4469698667526245
    3. '               ' → logprob: -2.196969985961914
    4. '=' → logprob: -2.446969985961914
    5. ':' → logprob: -2.946969985961914
    6. ' =' → logprob: -3.446969985961914
    7. '0' → logprob: -3.571969985961914
    8. '+' → logprob: -5.446969985961914
    9. '                       ' → logprob: -6.071969985961914
    10. '           ' → logprob: -6.196969985961914

Token 2373: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.29689767956733704
    2. '0' → logprob: -1.7968976497650146
    3. '               ' → logprob: -2.7968976497650146
    4. '=' → logprob: -3.6718976497650146
    5. ' =' → logprob: -6.171897888183594
    6. '                       ' → logprob: -7.171897888183594
    7. '+' → logprob: -7.296897888183594
    8. 'res' → logprob: -7.421897888183594
    9. '```' → logprob: -9.046897888183594
    10. '1' → logprob: -9.171897888183594

Token 2374: ' residual' (ID: 54782)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.07828666269779205
    2. '                   ' → logprob: -2.828286647796631
    3. '=' → logprob: -4.703286647796631
    4. '0' → logprob: -5.578286647796631
    5. ' residual' → logprob: -6.453286647796631
    6. '               ' → logprob: -6.703286647796631
    7. '=res' → logprob: -8.203287124633789
    8. '```' → logprob: -10.328287124633789
    9. 'total' → logprob: -10.703287124633789
    10. ' =' → logprob: -10.703287124633789

Token 2375: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00020520923135336488
    2. ' =' → logprob: -8.500205039978027
    3. '                   ' → logprob: -13.750205039978027
    4. '=res' → logprob: -15.625205039978027
    5. ']=' → logprob: -16.375205993652344
    6. '               ' → logprob: -16.375205993652344
    7. '0' → logprob: -16.375205993652344
    8. '=
' → logprob: -17.125205993652344
    9. '           ' → logprob: -17.375205993652344
    10. 'res' → logprob: -17.625205993652344

Token 2376: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '                   ' → logprob: -17.875
    4. '               ' → logprob: -19.5
    5. '```' → logprob: -20.25
    6. '   ' → logprob: -20.875
    7. '=' → logprob: -21.25
    8. '           ' → logprob: -21.375
    9. '                       ' → logprob: -21.875
    10. '
' → logprob: -22.375

Token 2377: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -17.125001907348633
    4. '=' → logprob: -17.750001907348633
    5. '   ' → logprob: -18.000001907348633
    6. '000' → logprob: -19.500001907348633
    7. '`' → logprob: -19.625001907348633
    8. '00' → logprob: -19.625001907348633
    9. '>' → logprob: -19.750001907348633
    10. '۰' → logprob: -19.875001907348633

Token 2378: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005544647108763456
    2. '                   ' → logprob: -5.380544662475586
    3. ' total' → logprob: -7.880544662475586
    4. 'total' → logprob: -8.005544662475586
    5. '
' → logprob: -9.130544662475586
    6. '```' → logprob: -10.505544662475586
    7. ',' → logprob: -10.630544662475586
    8. '           ' → logprob: -10.755544662475586
    9. ',total' → logprob: -11.255544662475586
    10. '(total' → logprob: -12.255544662475586

Token 2379: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003086686134338379
    2. '                   ' → logprob: -5.878086566925049
    3. ' total' → logprob: -9.253087043762207
    4. '           ' → logprob: -9.628087043762207
    5. 'total' → logprob: -10.003087043762207
    6. '
' → logprob: -10.253087043762207
    7. '                       ' → logprob: -11.753087043762207
    8. '```' → logprob: -12.003087043762207
    9. '       ' → logprob: -12.753087043762207
    10. ',total' → logprob: -12.753087043762207

Token 2380: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -5.991464786347933e-05
    2. ' total' → logprob: -9.875060081481934
    3. '           ' → logprob: -12.125060081481934
    4. '                   ' → logprob: -13.500060081481934
    5. 'ans' → logprob: -14.375060081481934
    6. '               ' → logprob: -14.875060081481934
    7. 'token' → logprob: -15.000060081481934
    8. '```' → logprob: -15.250060081481934
    9. '
' → logprob: -17.125059127807617
    10. 'if' → logprob: -18.125059127807617

Token 2381: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06215802580118179
    2. ' +=' → logprob: -2.8121581077575684
    3. '+' → logprob: -8.81215763092041
    4. ']+=' → logprob: -10.43715763092041
    5. '           ' → logprob: -12.68715763092041
    6. '=' → logprob: -13.06215763092041
    7. '```' → logprob: -13.06215763092041
    8. '          ' → logprob: -14.18715763092041
    9. '   ' → logprob: -14.43715763092041
    10. ' +' → logprob: -14.68715763092041

Token 2382: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -6.2729995988775045e-06
    2. ' min' → logprob: -12.000006675720215
    3. '           ' → logprob: -19.3750057220459
    4. '   ' → logprob: -20.1250057220459
    5. '
' → logprob: -20.6250057220459
    6. '[min' → logprob: -20.8750057220459
    7. '	min' → logprob: -21.6250057220459
    8. 'max' → logprob: -21.6250057220459
    9. '(min' → logprob: -22.3750057220459
    10. '       ' → logprob: -23.1250057220459

Token 2383: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -5.848420551046729e-05
    2. 'single' → logprob: -9.7500581741333
    3. '(single' → logprob: -16.500059127807617
    4. 'Single' → logprob: -16.875059127807617
    5. '_SINGLE' → logprob: -18.500059127807617
    6. ' single' → logprob: -18.750059127807617
    7. '
' → logprob: -20.625059127807617
    8. '```' → logprob: -20.875059127807617
    9. 'ingle' → logprob: -21.125059127807617
    10. '(_' → logprob: -21.375059127807617

Token 2384: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.688212614681106e-05
    2. 'cost' → logprob: -11.000017166137695
    3. 'Cost' → logprob: -16.875017166137695
    4. '_COST' → logprob: -17.625017166137695
    5. ' cost' → logprob: -17.875017166137695
    6. '_code' → logprob: -18.625017166137695
    7. '_co' → logprob: -18.750017166137695
    8. '
' → logprob: -19.750017166137695
    9. '```' → logprob: -19.875017166137695
    10. '_c' → logprob: -20.000017166137695

Token 2385: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -6.704273118884885e-07
    2. 'for' → logprob: -15.250000953674316
    3. '   ' → logprob: -16.375
    4. 'For' → logprob: -16.75
    5. '```' → logprob: -17.0
    6. ' _' → logprob: -17.375
    7. '_FOR' → logprob: -17.5
    8. '\' → logprob: -17.5
    9. '_to' → logprob: -18.125
    10. '[_' → logprob: -18.125

Token 2386: '_HP' (ID: 196429)
  Prédit: 'HP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HP' → logprob: -0.12694048881530762
    2. '_HP' → logprob: -2.1269404888153076
    3. ' HP' → logprob: -12.126940727233887
    4. 'for' → logprob: -12.626940727233887
    5. '_hp' → logprob: -14.126940727233887
    6. 'Hp' → logprob: -14.376940727233887
    7. '`' → logprob: -14.876940727233887
    8. '```' → logprob: -14.876940727233887
    9. '
' → logprob: -15.001940727233887
    10. '   ' → logprob: -15.001940727233887

Token 2387: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2200749754119897e-06
    2. 'res' → logprob: -13.125001907348633
    3. '[
' → logprob: -16.750001907348633
    4. ' [' → logprob: -17.125001907348633
    5. '(res' → logprob: -17.375001907348633
    6. '\[' → logprob: -18.625001907348633
    7. '```' → logprob: -18.750001907348633
    8. '   ' → logprob: -18.875001907348633
    9. '[(' → logprob: -19.500001907348633
    10. '[[' → logprob: -19.625001907348633

Token 2388: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: 0.0
    2. ' residual' → logprob: -18.875
    3. '(res' → logprob: -19.375
    4. '_res' → logprob: -20.75
    5. 'reserv' → logprob: -20.75
    6. '[' → logprob: -21.375
    7. '$res' → logprob: -22.25
    8. '	res' → logprob: -22.625
    9. 'reserved' → logprob: -22.75
    10. 'resident' → logprob: -23.375

Token 2389: 'idual' (ID: 85004)
  Prédit: 'idual'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idual' → logprob: -1.5213274309644476e-05
    2. 'id' → logprob: -11.250015258789062
    3. 'i' → logprob: -14.375015258789062
    4. 'ual' → logprob: -14.500015258789062
    5. ' residual' → logprob: -15.000015258789062
    6. '[' → logprob: -15.250015258789062
    7. 'idu' → logprob: -15.625015258789062
    8. ']' → logprob: -15.875015258789062
    9. 'res' → logprob: -16.375015258789062
    10. 'Residual' → logprob: -17.000015258789062

Token 2390: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003614920424297452
    2. ']
' → logprob: -5.878614902496338
    3. '           ' → logprob: -7.753614902496338
    4. '               ' → logprob: -8.003615379333496
    5. '       ' → logprob: -11.253615379333496
    6. '```' → logprob: -11.628615379333496
    7. '`]' → logprob: -12.378615379333496
    8. ']
' → logprob: -12.503615379333496
    9. '<|end|>' → logprob: -12.628615379333496
    10. ' ]' → logprob: -13.128615379333496

Token 2391: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.225939872208983e-05
    2. '```' → logprob: -11.125032424926758
    3. '               ' → logprob: -11.875032424926758
    4. '       ' → logprob: -12.250032424926758
    5. '
' → logprob: -12.750032424926758
    6. 'if' → logprob: -13.750032424926758
    7. '   ' → logprob: -14.125032424926758
    8. '          ' → logprob: -15.625032424926758
    9. '		' → logprob: -15.875032424926758
    10. '<|end|>' → logprob: -16.000032424926758

Token 2392: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10325583070516586
    2. 'if' (adapté à ' if') → logprob: -2.8532557487487793
    3. '               ' → logprob: -3.2282557487487793
    4. ' if' → logprob: -7.353255748748779
    5. '
' → logprob: -8.728256225585938
    6. '```' → logprob: -11.853256225585938
    7. '       ' → logprob: -12.353256225585938
    8. '                   ' → logprob: -13.728256225585938
    9. '#' → logprob: -13.978256225585938
    10. 'else' → logprob: -14.103256225585938

Token 2393: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.004078997299075127
    2. ' total' → logprob: -5.5040788650512695
    3. '   ' → logprob: -14.50407886505127
    4. '	total' → logprob: -17.504079818725586
    5. ' ' → logprob: -18.504079818725586
    6. '(total' → logprob: -19.254079818725586
    7. '       ' → logprob: -20.129079818725586
    8. 'Total' → logprob: -20.129079818725586
    9. '  ' → logprob: -20.129079818725586
    10. '    ' → logprob: -20.504079818725586

Token 2394: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5762579441070557
    2. '>' → logprob: -0.8262579441070557
    3. ' >=' → logprob: -8.451257705688477
    4. '>=' → logprob: -9.326257705688477
    5. '>
' → logprob: -12.701257705688477
    6. ' >
' → logprob: -12.826257705688477
    7. '<' → logprob: -13.201257705688477
    8. ' <' → logprob: -13.326257705688477
    9. '```' → logprob: -13.576257705688477
    10. ' <=' → logprob: -13.701257705688477

Token 2395: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -4.596781946020201e-05
    2. 'INF' → logprob: -10.000045776367188
    3. 'ANS' → logprob: -15.000045776367188
    4. ' ans' → logprob: -15.625045776367188
    5. 'answer' → logprob: -17.625045776367188
    6. '(ans' → logprob: -18.125045776367188
    7. '   ' → logprob: -19.250045776367188
    8. '	ans' → logprob: -19.375045776367188
    9. 'Ans' → logprob: -19.500045776367188
    10. 'inf' → logprob: -19.500045776367188

Token 2396: ':' (ID: 25)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06935802102088928
    2. '               ' → logprob: -3.4443581104278564
    3. '                       ' → logprob: -3.8193581104278564
    4. ':' → logprob: -5.069357872009277
    5. ':
' → logprob: -5.819357872009277
    6. '>' → logprob: -6.694357872009277
    7. 'break' → logprob: -6.944357872009277
    8. '                           ' → logprob: -7.194357872009277
    9. '           ' → logprob: -8.444357872009277
    10. '                               ' → logprob: -8.694357872009277

Token 2397: ' ' (ID: 220)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03817976638674736
    2. 'break' → logprob: -3.288179874420166
    3. '               ' → logprob: -9.663179397583008
    4. ' break' → logprob: -10.163179397583008
    5. '                       ' → logprob: -10.413179397583008
    6. '           ' → logprob: -13.163179397583008
    7. '```' → logprob: -13.413179397583008
    8. '   ' → logprob: -13.788179397583008
    9. '				' → logprob: -14.663179397583008
    10. '       ' → logprob: -15.288179397583008

Token 2398: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.00019984507525805384
    2. '                   ' → logprob: -8.750200271606445
    3. '               ' → logprob: -10.250200271606445
    4. ' break' → logprob: -12.750200271606445
    5. '           ' → logprob: -13.000200271606445
    6. '                       ' → logprob: -14.125200271606445
    7. '```' → logprob: -15.750200271606445
    8. '	break' → logprob: -17.125200271606445
    9. '   ' → logprob: -18.125200271606445
    10. '
' → logprob: -18.125200271606445

Token 2399: ' early' (ID: 6047)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.006406858563423157
    2. '                   ' → logprob: -5.256406784057617
    3. ' break' → logprob: -7.506406784057617
    4. '               ' → logprob: -7.506406784057617
    5. '           ' → logprob: -10.256406784057617
    6. '                       ' → logprob: -10.506406784057617
    7. '       ' → logprob: -12.131406784057617
    8. '   ' → logprob: -12.756406784057617
    9. '```' → logprob: -13.506406784057617
    10. '	break' → logprob: -14.381406784057617

Token 2400: ' stop' (ID: 5666)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.030806314200162888
    2. ' break' → logprob: -4.780806541442871
    3. 'exit' → logprob: -5.030806541442871
    4. 'termination' → logprob: -5.530806541442871
    5. 'stop' → logprob: -5.655806541442871
    6. '_break' → logprob: -5.905806541442871
    7. 'return' → logprob: -5.905806541442871
    8. 'continue' → logprob: -8.030806541442871
    9. 'terminate' → logprob: -8.030806541442871
    10. 'abort' → logprob: -8.030806541442871

Token 2401: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03225880488753319
    2. ':
' → logprob: -3.5322587490081787
    3. ':' → logprob: -6.907258987426758
    4. '               ' → logprob: -6.907258987426758
    5. '                       ' → logprob: -7.782258987426758
    6. 'break' → logprob: -10.157258987426758
    7. '```' → logprob: -11.907258987426758
    8. '           ' → logprob: -11.907258987426758
    9. '				' → logprob: -12.032258987426758
    10. '                  ' → logprob: -12.032258987426758

Token 2402: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00014323067443910986
    2. 'break' → logprob: -9.750143051147461
    3. '                       ' → logprob: -10.000143051147461
    4. ' break' → logprob: -11.000143051147461
    5. '               ' → logprob: -11.125143051147461
    6. '                  ' → logprob: -13.125143051147461
    7. ':
' → logprob: -13.500143051147461
    8. '				' → logprob: -13.750143051147461
    9. '           ' → logprob: -14.375143051147461
    10. '```' → logprob: -14.375143051147461

Token 2403: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.009515115059912205
    2. '                       ' → logprob: -5.009515285491943
    3. '                   ' → logprob: -6.009515285491943
    4. ' break' → logprob: -8.259514808654785
    5. '```' → logprob: -10.384514808654785
    6. '                               ' → logprob: -10.884514808654785
    7. '               ' → logprob: -11.009514808654785
    8. '                           ' → logprob: -12.009514808654785
    9. '	break' → logprob: -13.009514808654785
    10. '
' → logprob: -13.259514808654785

Token 2404: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011963017750531435
    2. '		' → logprob: -7.501196384429932
    3. '
' → logprob: -8.126195907592773
    4. '       ' → logprob: -8.376195907592773
    5. '```' → logprob: -10.001195907592773
    6. '	       ' → logprob: -11.126195907592773
    7. '   ' → logprob: -11.751195907592773
    8. '               ' → logprob: -11.876195907592773
    9. '<|end|>' → logprob: -12.001195907592773
    10. '                   ' → logprob: -12.251195907592773

Token 2405: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.742448022123426e-05
    2. '       ' → logprob: -9.875067710876465
    3. '```' → logprob: -12.250067710876465
    4. '
' → logprob: -12.500067710876465
    5. '                   ' → logprob: -13.250067710876465
    6. '		' → logprob: -13.250067710876465
    7. '               ' → logprob: -13.750067710876465
    8. 'else' → logprob: -14.125067710876465
    9. '   ' → logprob: -14.500067710876465
    10. '          ' → logprob: -14.750067710876465

Token 2406: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9748808145523071
    2. 'if' (adapté à ' if') → logprob: -1.0998808145523071
    3. '       ' → logprob: -1.3498808145523071
    4. ' if' → logprob: -3.8498806953430176
    5. '   ' → logprob: -5.349880695343018
    6. 'else' → logprob: -5.474880695343018
    7. '
' → logprob: -8.974881172180176
    8. '```' → logprob: -9.974881172180176
    9. ')' → logprob: -10.224881172180176
    10. 'ans' → logprob: -10.599881172180176

Token 2407: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.1002502366900444
    2. ' total' → logprob: -2.350250244140625
    3. '   ' → logprob: -10.350250244140625
    4. 'ans' → logprob: -11.725250244140625
    5. '           ' → logprob: -13.975250244140625
    6. ' ans' → logprob: -14.350250244140625
    7. '       ' → logprob: -14.725250244140625
    8. ' ' → logprob: -15.100250244140625
    9. '               ' → logprob: -15.225250244140625
    10. '	total' → logprob: -15.225250244140625

Token 2408: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.02979203499853611
    2. ' <' → logprob: -3.529792070388794
    3. '<int' → logprob: -11.279791831970215
    4. '<|end|>' → logprob: -12.154791831970215
    5. '   ' → logprob: -12.779791831970215
    6. '<size' → logprob: -13.029791831970215
    7. '<
' → logprob: -13.154791831970215
    8. '[' → logprob: -13.404791831970215
    9. ')' → logprob: -13.404791831970215
    10. '<num' → logprob: -13.529791831970215

Token 2409: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.700132997939363e-05
    2. ' ans' → logprob: -11.000017166137695
    3. '           ' → logprob: -16.500017166137695
    4. '   ' → logprob: -16.750017166137695
    5. '	ans' → logprob: -16.875017166137695
    6. '       ' → logprob: -17.250017166137695
    7. '(ans' → logprob: -17.375017166137695
    8. '
' → logprob: -19.000017166137695
    9. '=' → logprob: -19.250017166137695
    10. 'answer' → logprob: -19.250017166137695

Token 2410: ':
' (ID: 734)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01552089024335146
    2. ' =' → logprob: -4.515521049499512
    3. '               ' → logprob: -6.015521049499512
    4. ':
' → logprob: -6.890521049499512
    5. ':' → logprob: -7.265521049499512
    6. '=
' → logprob: -8.390521049499512
    7. '           ' → logprob: -10.640521049499512
    8. 'ans' → logprob: -11.015521049499512
    9. '                   ' → logprob: -11.015521049499512
    10. '=True' → logprob: -11.890521049499512

Token 2411: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0070683010853827
    2. 'ans' → logprob: -5.132068157196045
    3. '           ' → logprob: -7.632068157196045
    4. '                   ' → logprob: -8.382068634033203
    5. '=' → logprob: -9.132068634033203
    6. ' ans' → logprob: -9.757068634033203
    7. '(ans' → logprob: -9.757068634033203
    8. ' =' → logprob: -10.257068634033203
    9. '```' → logprob: -10.382068634033203
    10. '                       ' → logprob: -10.382068634033203

Token 2412: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -5.5861724831629544e-05
    2. '               ' → logprob: -10.250056266784668
    3. ' ans' → logprob: -11.375056266784668
    4. '                   ' → logprob: -11.750056266784668
    5. '           ' → logprob: -14.500056266784668
    6. '(ans' → logprob: -14.875056266784668
    7. '	ans' → logprob: -15.500056266784668
    8. '   ' → logprob: -17.62505531311035
    9. '_ans' → logprob: -17.62505531311035
    10. 'answer' → logprob: -17.87505531311035

Token 2413: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0067170290276408195
    2. ' =' → logprob: -5.006717205047607
    3. '=
' → logprob: -13.63171672821045
    4. ')' → logprob: -16.256717681884766
    5. '.=' → logprob: -16.381717681884766
    6. '＝' → logprob: -16.631717681884766
    7. '=

' → logprob: -17.131717681884766
    8. '=True' → logprob: -17.131717681884766
    9. '<|end|>' → logprob: -17.256717681884766
    10. '=int' → logprob: -17.756717681884766

Token 2414: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.001170225441455841
    2. ' total' → logprob: -6.7511701583862305
    3. '	total' → logprob: -19.001171112060547
    4. '   ' → logprob: -19.376171112060547
    5. '           ' → logprob: -20.751171112060547
    6. '(total' → logprob: -20.876171112060547
    7. '$total' → logprob: -21.251171112060547
    8. '_total' → logprob: -21.876171112060547
    9. 'Total' → logprob: -22.001171112060547
    10. 'ans' → logprob: -22.626171112060547

Token 2415: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39294686913490295
    2. '
' → logprob: -1.1429468393325806
    3. '   ' → logprob: -6.642946720123291
    4. '        
' → logprob: -6.642946720123291
    5. ')
' → logprob: -6.892946720123291
    6. ')' → logprob: -7.017946720123291
    7. '    
' → logprob: -7.767946720123291
    8. '  
' → logprob: -7.892946720123291
    9. '<|end|>' → logprob: -8.64294719696045
    10. 'print' → logprob: -8.76794719696045

Token 2416: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12367517501115799
    2. 'print' → logprob: -2.9986751079559326
    3. '       ' → logprob: -3.1236751079559326
    4. '
' → logprob: -3.8736751079559326
    5. '```' → logprob: -6.998675346374512
    6. ')' → logprob: -8.248675346374512
    7. '    
' → logprob: -8.498675346374512
    8. '<|end|>' → logprob: -9.498675346374512
    9. '()
' → logprob: -9.748675346374512
    10. ' print' → logprob: -9.873675346374512

Token 2417: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.8844796419143677
    2. '   ' → logprob: -1.2594796419143677
    3. '       ' → logprob: -1.2594796419143677
    4. '
' → logprob: -4.009479522705078
    5. '```' → logprob: -7.259479522705078
    6. ' print' → logprob: -8.384479522705078
    7. '        
' → logprob: -8.759479522705078
    8. '    
' → logprob: -9.009479522705078
    9. '           ' → logprob: -9.884479522705078
    10. '<|end|>' → logprob: -11.634479522705078

Token 2418: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -13.875000953674316
    3. '(answer' → logprob: -15.875000953674316
    4. ' (' → logprob: -16.375001907348633
    5. 'ans' → logprob: -16.500001907348633
    6. '()' → logprob: -17.375001907348633
    7. '(
' → logprob: -18.875001907348633
    8. '```' → logprob: -19.000001907348633
    9. '	ans' → logprob: -19.125001907348633
    10. '(ord' → logprob: -19.750001907348633

Token 2419: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003933187108486891
    2. '<|end|>' → logprob: -5.878932952880859
    3. '()' → logprob: -7.503932952880859
    4. '())' → logprob: -8.00393295288086
    5. '```' → logprob: -9.00393295288086
    6. '<|end|>' → logprob: -10.50393295288086
    7. ')
' → logprob: -11.37893295288086
    8. '   ' → logprob: -11.37893295288086
    9. '       ' → logprob: -11.75393295288086
    10. '")' → logprob: -11.87893295288086

Token 2420: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2421: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.523556649684906
    2. '__' → logprob: -0.898556649684906
    3. '___' → logprob: -8.52355670928955
    4. '____' → logprob: -9.14855670928955
    5. '_' → logprob: -9.77355670928955
    6. '"' → logprob: -11.02355670928955
    7. ''' → logprob: -11.27355670928955
    8. 'name' → logprob: -11.64855670928955
    9. ' ' → logprob: -12.27355670928955
    10. '```' → logprob: -12.39855670928955

Token 2422: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04829832911491394
    2. '==' → logprob: -3.9232983589172363
    3. ' ==' → logprob: -4.548298358917236
    4. 'name' → logprob: -5.048298358917236
    5. '```' → logprob: -5.673298358917236
    6. '()' → logprob: -5.923298358917236
    7. '()==' → logprob: -6.423298358917236
    8. '__":
' → logprob: -6.798298358917236
    9. '__.__' → logprob: -8.298297882080078
    10. '   ' → logprob: -8.548297882080078

Token 2423: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.000846671755425632
    2. '==' → logprob: -8.125846862792969
    3. '=="' → logprob: -8.125846862792969
    4. '__.__' → logprob: -9.750846862792969
    5. '__":
' → logprob: -10.000846862792969
    6. '```' → logprob: -10.125846862792969
    7. ' ==' → logprob: -10.375846862792969
    8. '()=="' → logprob: -10.750846862792969
    9. '()==' → logprob: -10.875846862792969
    10. '()' → logprob: -11.500846862792969

Token 2424: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5236132144927979
    2. '==' → logprob: -1.1486132144927979
    3. '=="' → logprob: -3.023613214492798
    4. ' ==' → logprob: -3.273613214492798
    5. '```' → logprob: -6.148612976074219
    6. '=='' → logprob: -6.898612976074219
    7. '__":
' → logprob: -8.523612976074219
    8. '()==' → logprob: -8.773612976074219
    9. '()=="' → logprob: -9.398612976074219
    10. '__.__' → logprob: -9.648612976074219

Token 2425: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006743674166500568
    2. ''' → logprob: -5.006743907928467
    3. '__' → logprob: -10.506743431091309
    4. ' "__' → logprob: -14.131743431091309
    5. '   ' → logprob: -16.506744384765625
    6. 'main' → logprob: -17.631744384765625
    7. '("__' → logprob: -17.881744384765625
    8. '"user' → logprob: -17.881744384765625
    9. ' '__' → logprob: -17.881744384765625
    10. '"name' → logprob: -18.381744384765625

Token 2426: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06722763180732727
    2. 'main' → logprob: -2.942227602005005
    3. '"' → logprob: -4.442227840423584
    4. ''' → logprob: -7.942227840423584
    5. '__":
' → logprob: -9.067227363586426
    6. '__
' → logprob: -12.067227363586426
    7. 'name' → logprob: -12.192227363586426
    8. '__':
' → logprob: -12.442227363586426
    9. '___' → logprob: -12.817227363586426
    10. '____' → logprob: -12.817227363586426

Token 2427: '__":
' (ID: 49892)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.2104363590478897
    2. '__":
' → logprob: -1.7104363441467285
    3. '__' → logprob: -5.3354363441467285
    4. '()' → logprob: -6.5854363441467285
    5. '__':
' → logprob: -6.9604363441467285
    6. ':
' → logprob: -7.9604363441467285
    7. '().' → logprob: -8.210436820983887
    8. '().__' → logprob: -8.460436820983887
    9. '   ' → logprob: -8.585436820983887
    10. '.' → logprob: -8.710436820983887

Token 2428: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14392335712909698
    2. 'solve' → logprob: -2.018923282623291
    3. ' solve' → logprob: -7.268923282623291
    4. '```' → logprob: -7.768923282623291
    5. '.solve' → logprob: -9.26892375946045
    6. '`s' → logprob: -11.76892375946045
    7. '	s' → logprob: -12.39392375946045
    8. ' ' → logprob: -12.64392375946045
    9. 's' → logprob: -12.64392375946045
    10. '  ' → logprob: -12.89392375946045

Token 2429: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -1.0325924449716695e-05
    2. '   ' → logprob: -12.25001049041748
    3. ' solve' → logprob: -12.25001049041748
    4. '.solve' → logprob: -14.50001049041748
    5. '```' → logprob: -16.125009536743164
    6. 'resolve' → logprob: -17.625009536743164
    7. 's' → logprob: -19.500009536743164
    8. '`' → logprob: -20.250009536743164
    9. 'solver' → logprob: -20.250009536743164
    10. '    
' → logprob: -20.375009536743164

Token 2430: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2428
Tokens correctement prédits (1ère position, stricte): 646
Tokens correctement prédits (1ère position, avec adaptation): 692
Tokens correctement prédits (top 10): 1513
Précision stricte (1ère position): 26.61%
Précision adaptée (1ère position): 28.50%
Précision (top 10): 62.31%
================================================================================
