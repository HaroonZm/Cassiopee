================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:59:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def partitions(n, max_part, prefix):
    if n == 0:
        print(' '.join(map(str, prefix)))
        return
    for i in range(min(max_part, n), 0, -1):
        partitions(n - i, i, prefix + [i])

while True:
    n = int(input())
    if n == 0:
        break
    partitions(n, n, [])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' partitions' (ID: 89097)
  → Token d'amorce (pas de prédiction)

Token 2: '(n' (ID: 2406)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03988765552639961
    2. ')' → logprob: -3.4148876667022705
    3. ',' → logprob: -5.289887428283691
    4. ':' → logprob: -7.289887428283691
    5. '[' → logprob: -8.039887428283691
    6. '(n' → logprob: -10.539887428283691
    7. '*' → logprob: -10.664887428283691
    8. '(' → logprob: -10.664887428283691
    9. ',n' → logprob: -11.289887428283691
    10. ')n' → logprob: -11.539887428283691

Token 4: ' max' (ID: 2999)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.693639874458313
    2. ' k' → logprob: -0.693639874458313
    3. ' r' → logprob: -8.193639755249023
    4. 'r' → logprob: -9.318639755249023
    5. 'm' → logprob: -10.193639755249023
    6. ' m' → logprob: -10.443639755249023
    7. ' ' → logprob: -11.693639755249023
    8. ')' → logprob: -11.693639755249023
    9. ' l' → logprob: -12.068639755249023
    10. 's' → logprob: -12.318639755249023

Token 5: '_part' (ID: 24053)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10844924300909042
    2. '_=' → logprob: -2.4834492206573486
    3. '_size' → logprob: -4.858449459075928
    4. '_)' → logprob: -5.733449459075928
    5. '_,' → logprob: -6.358449459075928
    6. '_part' → logprob: -6.483449459075928
    7. '_partition' → logprob: -6.858449459075928
    8. '=' → logprob: -6.858449459075928
    9. '_parts' → logprob: -7.983449459075928
    10. '=_' → logprob: -8.23344898223877

Token 6: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3945927321910858
    2. 's' → logprob: -1.2695927619934082
    3. '):' → logprob: -4.144592761993408
    4. ')=' → logprob: -4.394592761993408
    5. '=None' → logprob: -4.894592761993408
    6. '_size' → logprob: -5.769592761993408
    7. '_=' → logprob: -6.144592761993408
    8. ')' → logprob: -6.519592761993408
    9. 'itions' → logprob: -7.394592761993408
    10. 'ition' → logprob: -7.519592761993408

Token 7: ' prefix' (ID: 18633)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4598768949508667
    2. ' k' → logprob: -1.4598768949508667
    3. ' n' → logprob: -3.4598770141601562
    4. 'max' → logprob: -4.209877014160156
    5. 'k' → logprob: -4.334877014160156
    6. ' parts' → logprob: -4.334877014160156
    7. ' sum' → logprob: -4.584877014160156
    8. ' current' → logprob: -4.709877014160156
    9. ' min' → logprob: -4.959877014160156
    10. ' prev' → logprob: -5.084877014160156

Token 8: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011503404239192605
    2. '=' → logprob: -7.376150131225586
    3. ')' → logprob: -7.626150131225586
    4. '):
' → logprob: -11.376150131225586
    5. ',' → logprob: -11.876150131225586
    6. ':' → logprob: -12.251150131225586
    7. ')=' → logprob: -12.376150131225586
    8. '=None' → logprob: -12.876150131225586
    9. ' ):' → logprob: -13.126150131225586
    10. ''):' → logprob: -13.626150131225586

Token 9: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04293901473283768
    2. '):' → logprob: -4.042939186096191
    3. '```' → logprob: -4.417939186096191
    4. '":' → logprob: -5.542939186096191
    5. '   ' → logprob: -5.792939186096191
    6. '`:' → logprob: -6.417939186096191
    7. '':' → logprob: -6.792939186096191
    8. '":"' → logprob: -8.042939186096191
    9. '"' → logprob: -8.167939186096191
    10. ')' → logprob: -8.292939186096191

Token 10: ' if' (ID: 538)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40704166889190674
    2. ''' → logprob: -2.282041549682617
    3. '```' → logprob: -2.657041549682617
    4. ' if' → logprob: -2.907041549682617
    5. '   ' → logprob: -3.157041549682617
    6. 'if' (adapté à ' if') → logprob: -4.157041549682617
    7. '`' → logprob: -4.532041549682617
    8. '"' → logprob: -4.532041549682617
    9. ' ' → logprob: -4.907041549682617
    10. '`:' → logprob: -5.782041549682617

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0005885370774194598
    2. 'n' → logprob: -7.500588417053223
    3. ' not' → logprob: -10.875588417053223
    4. ' ' → logprob: -11.250588417053223
    5. ' max' → logprob: -13.125588417053223
    6. ' ' → logprob: -13.625588417053223
    7. '	n' → logprob: -15.625588417053223
    8. 'max' → logprob: -16.75058937072754
    9. 'not' → logprob: -17.50058937072754
    10. '  ' → logprob: -17.87558937072754

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10977422446012497
    2. '==' → logprob: -2.609774112701416
    3. ' <=' → logprob: -3.734774112701416
    4. ' <' → logprob: -6.234774112701416
    5. '=' → logprob: -6.359774112701416
    6. '<' → logprob: -6.984774112701416
    7. '<=' → logprob: -7.234774112701416
    8. ' >=' → logprob: -8.109774589538574
    9. ' ' → logprob: -8.359774589538574
    10. ' ' → logprob: -8.859774589538574

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2519298195838928
    2. '0' → logprob: -1.501929759979248
    3. '<|end|>' → logprob: -15.376930236816406
    4. ' ' → logprob: -15.501930236816406
    5. '1' → logprob: -16.751930236816406
    6. '=' → logprob: -17.064430236816406
    7. '۰' → logprob: -17.189430236816406
    8. '  ' → logprob: -17.314430236816406
    9. '_' → logprob: -17.626930236816406
    10. '<|end|>' → logprob: -18.314430236816406

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009118211455643177
    2. ' ' → logprob: -7.000911712646484
    3. '1' → logprob: -15.375911712646484
    4. '   ' → logprob: -16.250911712646484
    5. ' ' → logprob: -17.500911712646484
    6. '  ' → logprob: -17.750911712646484
    7. ')' → logprob: -17.875911712646484
    8. '00' → logprob: -18.875911712646484
    9. '```' → logprob: -19.563411712646484
    10. '    ' → logprob: -19.563411712646484

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.265633419388905e-05
    2. ':return' → logprob: -10.000062942504883
    3. ' :' → logprob: -12.000062942504883
    4. ':
' → logprob: -12.000062942504883
    5. ':**' → logprob: -12.625062942504883
    6. '):' → logprob: -14.125062942504883
    7. ',' → logprob: -15.375062942504883
    8. '   ' → logprob: -15.500062942504883
    9. '():' → logprob: -16.250062942504883
    10. ':def' → logprob: -16.625062942504883

Token 16: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4166185259819031
    2. '\n' → logprob: -1.5416185855865479
    3. '   ' → logprob: -3.166618585586548
    4. ':return' → logprob: -3.166618585586548
    5. '\' → logprob: -4.416618347167969
    6. ' return' → logprob: -4.916618347167969
    7. ' ' → logprob: -5.041618347167969
    8. ' :' → logprob: -5.541618347167969
    9. '       ' → logprob: -5.666618347167969
    10. '    ' → logprob: -5.916618347167969

Token 17: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8299286365509033
    2. ' yield' → logprob: -0.9549286365509033
    3. ' return' → logprob: -2.3299286365509033
    4. 'yield' → logprob: -2.8299286365509033
    5. 'return' → logprob: -4.204928398132324
    6. '   ' → logprob: -5.454928398132324
    7. '```' → logprob: -6.829928398132324
    8. '	yield' → logprob: -6.954928398132324
    9. '    ' → logprob: -8.079928398132324
    10. ' ' → logprob: -8.579928398132324

Token 18: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5370929837226868
    2. '(prefix' → logprob: -1.037092924118042
    3. '()' → logprob: -2.912092924118042
    4. 'prefix' → logprob: -5.662093162536621
    5. '('' → logprob: -6.162093162536621
    6. '("' → logprob: -7.037093162536621
    7. ' ()' → logprob: -9.162093162536621
    8. ' (' → logprob: -9.912093162536621
    9. ' prefix' → logprob: -10.537093162536621
    10. '("")' → logprob: -10.787093162536621

Token 19: ' '.' (ID: 12662)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.22904574871063232
    2. ''' → logprob: -2.229045867919922
    3. '(prefix' → logprob: -2.979045867919922
    4. '   ' → logprob: -3.979045867919922
    5. '',' → logprob: -4.104045867919922
    6. ' prefix' → logprob: -5.604045867919922
    7. ' ' → logprob: -5.604045867919922
    8. '('' → logprob: -7.604045867919922
    9. ',' → logprob: -7.729045867919922
    10. ' +' → logprob: -7.979045867919922

Token 20: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.1279553291387856e-05
    2. ''.' → logprob: -12.250011444091797
    3. ''' → logprob: -12.875011444091797
    4. ' join' → logprob: -13.250011444091797
    5. 'j' → logprob: -14.250011444091797
    6. 'print' → logprob: -14.875011444091797
    7. '.join' → logprob: -15.375011444091797
    8. '*' → logprob: -15.500011444091797
    9. 'jo' → logprob: -15.625011444091797
    10. ')' → logprob: -16.250011444091797

Token 21: '(map' (ID: 16946)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.0002525184245314449
    2. '(' → logprob: -8.750252723693848
    3. '(str' → logprob: -10.000252723693848
    4. 'prefix' → logprob: -10.625252723693848
    5. '([' → logprob: -10.875252723693848
    6. '(['' → logprob: -12.375252723693848
    7. '(map' → logprob: -14.750252723693848
    8. '('' → logprob: -14.875252723693848
    9. ')' → logprob: -15.625252723693848
    10. '((' → logprob: -17.00025177001953

Token 22: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0004375830467324704
    2. 'str' → logprob: -7.7504377365112305
    3. '(' → logprob: -12.25043773651123
    4. ' str' → logprob: -14.00043773651123
    5. '=str' → logprob: -14.25043773651123
    6. '[str' → logprob: -15.62543773651123
    7. ')' → logprob: -15.87543773651123
    8. '(chr' → logprob: -16.125436782836914
    9. '```' → logprob: -16.125436782836914
    10. '	str' → logprob: -16.500436782836914

Token 23: ',' (ID: 11)
  Prédit: '(prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.01021627802401781
    2. ',' → logprob: -5.260216236114502
    3. ',p' → logprob: -5.510216236114502
    4. 'prefix' → logprob: -7.260216236114502
    5. '(' → logprob: -8.76021671295166
    6. '(p' → logprob: -10.38521671295166
    7. ' ,' → logprob: -11.01021671295166
    8. ' prefix' → logprob: -11.76021671295166
    9. ')' → logprob: -13.51021671295166
    10. ' (' → logprob: -13.63521671295166

Token 24: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.38699644804000854
    2. 'prefix' → logprob: -1.1369965076446533
    3. '(prefix' → logprob: -9.011996269226074
    4. ' [' → logprob: -13.511996269226074
    5. '_prefix' → logprob: -14.636996269226074
    6. '[' → logprob: -14.886996269226074
    7. '   ' → logprob: -14.886996269226074
    8. ' prefixes' → logprob: -15.011996269226074
    9. ' ' → logprob: -15.636996269226074
    10. '.prefix' → logprob: -15.886996269226074

Token 25: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0022841955069452524
    2. ')' → logprob: -7.002284049987793
    3. '))' → logprob: -7.127284049987793
    4. ')))
' → logprob: -8.002284049987793
    5. '))))' → logprob: -8.752284049987793
    6. '   ' → logprob: -10.502284049987793
    7. ' ' → logprob: -10.627284049987793
    8. '')))' → logprob: -11.877284049987793
    9. ')));' → logprob: -12.752284049987793
    10. '       ' → logprob: -13.002284049987793

Token 26: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009370805695652962
    2. '       ' → logprob: -5.509370803833008
    3. '    
' → logprob: -5.759370803833008
    4. '\n' → logprob: -7.509370803833008
    5. '```' → logprob: -7.634370803833008
    6. ')' → logprob: -8.259370803833008
    7. '        
' → logprob: -8.884370803833008
    8. '
' → logprob: -9.009370803833008
    9. '<|end|>' → logprob: -9.009370803833008
    10. '  
' → logprob: -9.259370803833008

Token 27: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42340922355651855
    2. '   ' → logprob: -1.6734092235565186
    3. 'return' (adapté à ' return') → logprob: -1.9234092235565186
    4. ' return' → logprob: -4.798409461975098
    5. '	return' → logprob: -6.173409461975098
    6. '```' → logprob: -7.673409461975098
    7. ' ' → logprob: -9.173409461975098
    8. '        
' → logprob: -9.423409461975098
    9. '     ' → logprob: -9.548409461975098
    10. ':return' → logprob: -9.548409461975098

Token 28: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.305396169424057
    2. '    
' → logprob: -2.43039608001709
    3. '\n' → logprob: -2.68039608001709
    4. ' 
' → logprob: -3.68039608001709
    5. '```' → logprob: -3.68039608001709
    6. ' ' → logprob: -4.30539608001709
    7. '  
' → logprob: -4.80539608001709
    8. 'n' → logprob: -4.93039608001709
    9. '<|end|>' → logprob: -5.18039608001709
    10. '\' → logprob: -5.55539608001709

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22618219256401062
    2. ' 
' → logprob: -2.726182222366333
    3. ' ' → logprob: -2.976182222366333
    4. '    
' → logprob: -3.726182222366333
    5. ' if' → logprob: -4.226181983947754
    6. 'n' → logprob: -4.351181983947754
    7. '```' → logprob: -4.601181983947754
    8. '  
' → logprob: -5.351181983947754
    9. ' for' → logprob: -5.976181983947754
    10. '   
' → logprob: -5.976181983947754

Token 30: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.35417091846466064
    2. ' for' → logprob: -1.2291709184646606
    3. '   ' → logprob: -5.479170799255371
    4. ' ' → logprob: -7.479170799255371
    5. '```' → logprob: -8.229170799255371
    6. '	for' → logprob: -8.479170799255371
    7. 'i' → logprob: -8.854170799255371
    8. '    
' → logprob: -9.854170799255371
    9. '  ' → logprob: -10.104170799255371
    10. '`' → logprob: -10.229170799255371

Token 31: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1005697026848793
    2. ' i' → logprob: -2.350569725036621
    3. 'k' → logprob: -8.350569725036621
    4. 'x' → logprob: -9.350569725036621
    5. ' k' → logprob: -11.850569725036621
    6. '	i' → logprob: -11.975569725036621
    7. 'num' → logprob: -12.225569725036621
    8. '(i' → logprob: -12.475569725036621
    9. ' part' → logprob: -12.850569725036621
    10. '   ' → logprob: -12.850569725036621

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026399340480566025
    2. 'in' → logprob: -3.6513993740081787
    3. ' ' → logprob: -10.276399612426758
    4. 'n' → logprob: -10.401399612426758
    5. '   ' → logprob: -11.526399612426758
    6. 'range' → logprob: -11.526399612426758
    7. '  ' → logprob: -12.526399612426758
    8. '```' → logprob: -12.901399612426758
    9. '1' → logprob: -13.151399612426758
    10. '	in' → logprob: -14.151399612426758

Token 33: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20144960284233093
    2. 'range' → logprob: -1.7014496326446533
    3. ' ' → logprob: -11.201449394226074
    4. '1' → logprob: -11.826449394226074
    5. '	range' → logprob: -11.951449394226074
    6. '```' → logprob: -13.076449394226074
    7. ' xrange' → logprob: -13.326449394226074
    8. '   ' → logprob: -13.951449394226074
    9. '(range' → logprob: -14.076449394226074
    10. ' reversed' → logprob: -14.201449394226074

Token 34: '(min' (ID: 26035)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004076501354575157
    2. '(max' → logprob: -6.2540764808654785
    3. '(min' → logprob: -6.6290764808654785
    4. '1' → logprob: -7.2540764808654785
    5. ' ' → logprob: -9.254076957702637
    6. ' (' → logprob: -11.629076957702637
    7. '   ' → logprob: -12.629076957702637
    8. ' min' → logprob: -13.004076957702637
    9. 'max' → logprob: -13.129076957702637
    10. ' max' → logprob: -13.379076957702637

Token 35: '(max' (ID: 17178)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3883737623691559
    2. '(max' → logprob: -1.1383737325668335
    3. '(' → logprob: -7.013373851776123
    4. '(i' → logprob: -7.513373851776123
    5. 'max' → logprob: -10.138373374938965
    6. 'n' → logprob: -12.263373374938965
    7. ' max' → logprob: -13.263373374938965
    8. ',max' → logprob: -13.513373374938965
    9. ')' → logprob: -13.763373374938965
    10. ' (' → logprob: -14.013373374938965

Token 36: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -4.23917081207037e-05
    2. '_' → logprob: -10.625041961669922
    3. '_p' → logprob: -12.500041961669922
    4. '_partition' → logprob: -12.500041961669922
    5. '_parts' → logprob: -12.500041961669922
    6. '_par' → logprob: -13.625041961669922
    7. '_per' → logprob: -13.875041961669922
    8. ')' → logprob: -14.000041961669922
    9. ' _' → logprob: -14.375041961669922
    10. '_pat' → logprob: -14.875041961669922

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0050099557265639305
    2. ' ,' → logprob: -5.50501012802124
    3. ',n' → logprob: -7.00501012802124
    4. 'n' → logprob: -11.755009651184082
    5. ',i' → logprob: -12.255009651184082
    6. '   ' → logprob: -12.380009651184082
    7. '1' → logprob: -13.505009651184082
    8. ' ' → logprob: -13.880009651184082
    9. '‌,' → logprob: -14.130009651184082
    10. '(n' → logprob: -15.005009651184082

Token 38: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.31326571106910706
    2. 'n' → logprob: -1.3132656812667847
    3. '	n' → logprob: -12.938265800476074
    4. ' ' → logprob: -14.438265800476074
    5. ')n' → logprob: -14.438265800476074
    6. '_n' → logprob: -15.563265800476074
    7. ',n' → logprob: -15.938265800476074
    8. ' ' → logprob: -16.563264846801758
    9. '   ' → logprob: -16.688264846801758
    10. '<|end|>' → logprob: -17.063264846801758

Token 39: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.01884121261537075
    2. ',' → logprob: -4.64384126663208
    3. ')' → logprob: -4.89384126663208
    4. ' ),' → logprob: -6.64384126663208
    5. ' ' → logprob: -9.518840789794922
    6. '1' → logprob: -9.893840789794922
    7. ' ,' → logprob: -10.643840789794922
    8. '),(' → logprob: -10.643840789794922
    9. ')+' → logprob: -11.018840789794922
    10. '),
' → logprob: -11.643840789794922

Token 40: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.34853604435920715
    2. ' ' → logprob: -1.2235360145568848
    3. '-' → logprob: -9.598536491394043
    4. ' -' → logprob: -10.973536491394043
    5. '1' → logprob: -12.973536491394043
    6. ' ' → logprob: -13.598536491394043
    7. '```' → logprob: -13.723536491394043
    8. '  ' → logprob: -15.161036491394043
    9. ' 
' → logprob: -15.286036491394043
    10. '>' → logprob: -15.411036491394043

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00037800322752445936
    2. ' ' → logprob: -8.125377655029297
    3. '-' → logprob: -9.500377655029297
    4. '1' → logprob: -12.250377655029297
    5. '```' → logprob: -13.750377655029297
    6. ' -' → logprob: -14.000377655029297
    7. '   ' → logprob: -15.375377655029297
    8. '  ' → logprob: -15.812877655029297
    9. '>' → logprob: -17.125377655029297
    10. '`' → logprob: -17.250377655029297

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11135461926460266
    2. '-' → logprob: -2.6113545894622803
    3. ' -' → logprob: -3.9863545894622803
    4. ' ,' → logprob: -4.861354827880859
    5. ',-' → logprob: -5.361354827880859
    6. ' ,-' → logprob: -7.736354827880859
    7. '   ' → logprob: -8.61135482788086
    8. '0' → logprob: -8.61135482788086
    9. ' ' → logprob: -9.86135482788086
    10. '-,' → logprob: -10.73635482788086

Token 43: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.17975258827209473
    2. ' -' → logprob: -1.8047525882720947
    3. ' ' → logprob: -12.429752349853516
    4. '   ' → logprob: -13.304752349853516
    5. '  ' → logprob: -14.429752349853516
    6. '```' → logprob: -14.679752349853516
    7. '	' → logprob: -14.929752349853516
    8. ')' → logprob: -15.304752349853516
    9. '﻿' → logprob: -16.429752349853516
    10. '−' → logprob: -16.554752349853516

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.542423165636137e-05
    2. ' ' → logprob: -9.375085830688477
    3. ')' → logprob: -14.875085830688477
    4. '   ' → logprob: -16.750085830688477
    5. '  ' → logprob: -16.875085830688477
    6. '```' → logprob: -17.375085830688477
    7. '<|end|>' → logprob: -18.125085830688477
    8. ' -' → logprob: -18.125085830688477
    9. ',' → logprob: -18.250085830688477
    10. ' )' → logprob: -18.500085830688477

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000800811278168112
    2. ' ):' → logprob: -7.750800609588623
    3. '):
' → logprob: -8.125801086425781
    4. ':' → logprob: -10.000801086425781
    5. ')' → logprob: -11.500801086425781
    6. ',' → logprob: -11.500801086425781
    7. '):
' → logprob: -12.750801086425781
    8. '):-' → logprob: -13.500801086425781
    9. '-' → logprob: -13.875801086425781
    10. '1' → logprob: -14.375801086425781

Token 46: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2483915090560913
    2. '       ' → logprob: -1.2483915090560913
    3. '   ' → logprob: -1.9983915090560913
    4. '<|end|>' → logprob: -2.123391628265381
    5. '        
' → logprob: -3.123391628265381
    6. '    ' → logprob: -3.123391628265381
    7. ' 
' → logprob: -3.498391628265381
    8. '    
' → logprob: -4.498391628265381
    9. ')' → logprob: -5.248391628265381
    10. '[' → logprob: -5.373391628265381

Token 47: ' partitions' (ID: 89097)
  Prédit: ' prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.711493194103241
    2. ' partitions' → logprob: -1.3364932537078857
    3. 'prefix' → logprob: -1.7114932537078857
    4. '       ' → logprob: -3.0864932537078857
    5. ' ' → logprob: -4.836493015289307
    6. ' prefixes' → logprob: -5.836493015289307
    7. ' if' → logprob: -6.086493015289307
    8. '        
' → logprob: -6.586493015289307
    9. '        ' → logprob: -7.336493015289307
    10. '	part' → logprob: -7.336493015289307

Token 48: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0019464874640107155
    2. '(' → logprob: -6.251946449279785
    3. '(i' → logprob: -11.126946449279785
    4. ' (' → logprob: -13.751946449279785
    5. '(
' → logprob: -13.876946449279785
    6. '```' → logprob: -14.126946449279785
    7. 'n' → logprob: -16.3769474029541
    8. '<|end|>' → logprob: -16.7519474029541
    9. '/n' → logprob: -17.1269474029541
    10. ')' → logprob: -17.3769474029541

Token 49: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03812193125486374
    2. '-' → logprob: -3.4131219387054443
    3. '-i' → logprob: -5.413121700286865
    4. ' ' → logprob: -12.288122177124023
    5. ',' → logprob: -13.038122177124023
    6. ' i' → logprob: -14.413122177124023
    7. '   ' → logprob: -15.163122177124023
    8. 'i' → logprob: -15.288122177124023
    9. ' ,' → logprob: -16.413122177124023
    10. '  ' → logprob: -16.538122177124023

Token 50: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.42871859669685364
    2. 'i' → logprob: -1.0537185668945312
    3. '	i' → logprob: -11.803718566894531
    4. '<|end|>' → logprob: -12.303718566894531
    5. ' ' → logprob: -13.053718566894531
    6. '```' → logprob: -13.678718566894531
    7. '   ' → logprob: -14.428718566894531
    8. '<|end|>' → logprob: -14.803718566894531
    9. ')i' → logprob: -15.053718566894531
    10. '    ' → logprob: -15.178718566894531

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011160464491695166
    2. ',i' → logprob: -7.0011162757873535
    3. ' ,' → logprob: -8.626115798950195
    4. 'i' → logprob: -11.001115798950195
    5. ' i' → logprob: -12.501115798950195
    6. '   ' → logprob: -13.751115798950195
    7. '),' → logprob: -13.876115798950195
    8. '(i' → logprob: -14.376115798950195
    9. '[i' → logprob: -14.501115798950195
    10. ',
' → logprob: -14.876115798950195

Token 52: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0052398028783500195
    2. ' i' → logprob: -5.255239963531494
    3. '<|end|>' → logprob: -12.755239486694336
    4. ' ' → logprob: -14.130239486694336
    5. ')' → logprob: -14.130239486694336
    6. '	i' → logprob: -14.880239486694336
    7. '   ' → logprob: -15.005239486694336
    8. ')i' → logprob: -15.130239486694336
    9. ',' → logprob: -15.755239486694336
    10. '       ' → logprob: -16.255239486694336

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.65101717156358e-05
    2. ' ,' → logprob: -9.375096321105957
    3. '),' → logprob: -12.625096321105957
    4. '[' → logprob: -12.875096321105957
    5. ',i' → logprob: -13.375096321105957
    6. ')' → logprob: -13.500096321105957
    7. '   ' → logprob: -14.375096321105957
    8. ',[' → logprob: -14.625096321105957
    9. ',p' → logprob: -14.750096321105957
    10. '`,' → logprob: -14.750096321105957

Token 54: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.47408029437065125
    2. ' prefix' → logprob: -0.9740803241729736
    3. '   ' → logprob: -13.599080085754395
    4. '(prefix' → logprob: -14.724080085754395
    5. ' [' → logprob: -14.849080085754395
    6. '[' → logprob: -15.349080085754395
    7. '.prefix' → logprob: -15.474080085754395
    8. '_prefix' → logprob: -15.474080085754395
    9. 'Prefix' → logprob: -15.599080085754395
    10. ' ' → logprob: -15.724080085754395

Token 55: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3146728575229645
    2. '+' → logprob: -1.314672827720642
    3. '+[' → logprob: -6.564672946929932
    4. '＋' → logprob: -15.189672470092773
    5. ' plus' → logprob: -15.689672470092773
    6. '[' → logprob: -15.939672470092773
    7. ')' → logprob: -15.939672470092773
    8. '+i' → logprob: -16.189672470092773
    9. '+p' → logprob: -16.689672470092773
    10. ' ' → logprob: -17.439672470092773

Token 56: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005727320909500122
    2. '[' → logprob: -5.255727291107178
    3. ' [' → logprob: -7.630727291107178
    4. '[I' → logprob: -13.130727767944336
    5. '[f' → logprob: -13.255727767944336
    6. '[ip' → logprob: -13.630727767944336
    7. '[int' → logprob: -14.130727767944336
    8. '[str' → logprob: -14.505727767944336
    9. '[index' → logprob: -15.380727767944336
    10. '[p' → logprob: -15.630727767944336

Token 57: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1472419600977446e-06
    2. ' i' → logprob: -13.750000953674316
    3. '   ' → logprob: -18.000001907348633
    4. '	i' → logprob: -19.125001907348633
    5. ')i' → logprob: -20.875001907348633
    6. '*i' → logprob: -21.750001907348633
    7. '%i' → logprob: -22.000001907348633
    8. '_i' → logprob: -22.625001907348633
    9. '{i' → logprob: -22.625001907348633
    10. '```' → logprob: -22.750001907348633

Token 58: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.38721904158592224
    2. ')' → logprob: -1.1372190713882446
    3. ']' → logprob: -8.887219429016113
    4. ')])' → logprob: -8.887219429016113
    5. '))' → logprob: -10.012219429016113
    6. ']))' → logprob: -11.637219429016113
    7. ')
' → logprob: -12.387219429016113
    8. ''])' → logprob: -12.762219429016113
    9. '])
' → logprob: -12.762219429016113
    10. ')]' → logprob: -12.762219429016113

Token 59: 'while' (ID: 7032)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7873340249061584
    2. 'part' → logprob: -1.5373339653015137
    3. '\n' → logprob: -2.2873339653015137
    4. 'n' → logprob: -2.5373339653015137
    5. 'partition' → logprob: -2.7873339653015137
    6. '
' → logprob: -3.1623339653015137
    7. 'def' → logprob: -4.412333965301514
    8. '#' → logprob: -5.037333965301514
    9. '\' → logprob: -5.287333965301514
    10. '(part' → logprob: -5.662333965301514

Token 60: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.002870373660698533
    2. 'True' → logprob: -5.877870559692383
    3. ' n' → logprob: -10.377870559692383
    4. '(True' → logprob: -10.627870559692383
    5. ' ' → logprob: -12.252870559692383
    6. '_' → logprob: -13.752870559692383
    7. ' input' → logprob: -13.877870559692383
    8. ' not' → logprob: -14.002870559692383
    9. '_true' → logprob: -14.377870559692383
    10. '1' → logprob: -14.377870559692383

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21533261239528656
    2. ' :' → logprob: -1.8403326272964478
    3. '():' → logprob: -3.965332508087158
    4. '(' → logprob: -4.965332508087158
    5. '   ' → logprob: -5.340332508087158
    6. ' (' → logprob: -6.840332508087158
    7. ' ' → logprob: -7.840332508087158
    8. ':
' → logprob: -7.965332508087158
    9. '):' → logprob: -7.965332508087158
    10. ' ():' → logprob: -8.090332984924316

Token 62: '   ' (ID: 271)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7151131629943848
    2. ' input' → logprob: -1.2151131629943848
    3. ' ' → logprob: -2.7151131629943848
    4. ' 
' → logprob: -3.2151131629943848
    5. '<|end|>' → logprob: -3.7151131629943848
    6. '   ' → logprob: -3.9651131629943848
    7. 'n' → logprob: -4.090113162994385
    8. '(n' → logprob: -4.840113162994385
    9. 'input' → logprob: -4.965113162994385
    10. '    
' → logprob: -5.715113162994385

Token 63: ' n' (ID: 297)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.3609945476055145
    2. ' try' → logprob: -2.235994577407837
    3. 'user' → logprob: -2.735994577407837
    4. 'n' (adapté à ' n') → logprob: -2.735994577407837
    5. ' n' → logprob: -3.610994577407837
    6. ' user' → logprob: -3.985994577407837
    7. ' True' → logprob: -5.110994338989258
    8. 'True' → logprob: -5.610994338989258
    9. ' inp' → logprob: -5.735994338989258
    10. ' line' → logprob: -5.860994338989258

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009758567437529564
    2. '=' → logprob: -4.634758472442627
    3. '=int' → logprob: -13.384758949279785
    4. '=input' → logprob: -14.259758949279785
    5. ' ' → logprob: -14.884758949279785
    6. '  ' → logprob: -17.63475799560547
    7. 'input' → logprob: -17.88475799560547
    8. '>' → logprob: -18.00975799560547
    9. 'int' → logprob: -18.13475799560547
    10. '_input' → logprob: -18.13475799560547

Token 65: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25412794947624207
    2. ' int' → logprob: -1.5041279792785645
    3. 'input' → logprob: -6.7541279792785645
    4. ' input' → logprob: -6.8791279792785645
    5. ' ' → logprob: -14.379127502441406
    6. '=int' → logprob: -15.004127502441406
    7. '<int' → logprob: -15.504127502441406
    8. '[int' → logprob: -16.504127502441406
    9. '(int' → logprob: -16.879127502441406
    10. '  ' → logprob: -17.129127502441406

Token 66: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0024949219077825546
    2. '(' → logprob: -6.002494812011719
    3. 'input' → logprob: -10.877494812011719
    4. '=input' → logprob: -16.50249481201172
    5. ' input' → logprob: -17.00249481201172
    6. '<input' → logprob: -17.00249481201172
    7. ' (' → logprob: -17.00249481201172
    8. '(
' → logprob: -17.25249481201172
    9. '(raw' → logprob: -17.62749481201172
    10. '(in' → logprob: -17.75249481201172

Token 67: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.4116949141025543
    2. '())' → logprob: -1.161694884300232
    3. '()' → logprob: -4.1616950035095215
    4. '(' → logprob: -5.1616950035095215
    5. '("' → logprob: -6.4116950035095215
    6. '("("' → logprob: -7.2866950035095215
    7. '('(' → logprob: -8.411694526672363
    8. '(">' → logprob: -8.536694526672363
    9. '(""))' → logprob: -8.786694526672363
    10. '()))' → logprob: -9.536694526672363

Token 68: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2361299842596054
    2. '<|end|>' → logprob: -1.7361299991607666
    3. 'if' → logprob: -4.1111297607421875
    4. ' ' → logprob: -5.2361297607421875
    5. '<|end|>' → logprob: -5.2361297607421875
    6. '   ' → logprob: -5.3611297607421875
    7. '	if' → logprob: -7.2361297607421875
    8. ' 
' → logprob: -7.9861297607421875
    9. '    ' → logprob: -8.111129760742188
    10. ')' → logprob: -8.486129760742188

Token 69: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.25194448232650757
    2. 'if' (adapté à ' if') → logprob: -1.5019445419311523
    3. '   ' → logprob: -11.626944541931152
    4. '<|end|>' → logprob: -12.376944541931152
    5. ')' → logprob: -14.626944541931152
    6. ' ' → logprob: -15.126944541931152
    7. 'If' → logprob: -15.376944541931152
    8. 'n' → logprob: -15.501944541931152
    9. 'ifra' → logprob: -15.876944541931152
    10. '<|end|>' → logprob: -15.876944541931152

Token 70: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0010665126610547304
    2. 'n' → logprob: -7.1260666847229
    3. ' not' → logprob: -8.251066207885742
    4. ' ' → logprob: -14.251066207885742
    5. '	n' → logprob: -15.626066207885742
    6. ' ' → logprob: -16.126066207885742
    7. 'not' → logprob: -16.126066207885742
    8. ' н' → logprob: -19.126066207885742
    9. '0' → logprob: -19.251066207885742
    10. ')n' → logprob: -19.251066207885742

Token 71: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16606728732585907
    2. '==' → logprob: -2.041067361831665
    3. ' <=' → logprob: -3.916067361831665
    4. '<=' → logprob: -5.791067123413086
    5. ' <' → logprob: -9.291067123413086
    6. ' ' → logprob: -10.791067123413086
    7. ')' → logprob: -11.916067123413086
    8. '<' → logprob: -12.041067123413086
    9. ')==' → logprob: -12.166067123413086
    10. '=' → logprob: -12.541067123413086

Token 72: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10020806640386581
    2. ' ' → logprob: -2.350208044052124
    3. ' ' → logprob: -14.850208282470703
    4. ' 
' → logprob: -14.975208282470703
    5. '  ' → logprob: -15.975208282470703
    6. '=' → logprob: -16.162708282470703
    7. '<|end|>' → logprob: -16.225208282470703
    8. ')' → logprob: -16.412708282470703
    9. '   ' → logprob: -16.600208282470703
    10. '```' → logprob: -17.100208282470703

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008068907191045582
    2. ' ' → logprob: -7.12580680847168
    3. '-' → logprob: -14.12580680847168
    4. ')' → logprob: -14.87580680847168
    5. '```' → logprob: -14.87580680847168
    6. '   ' → logprob: -15.12580680847168
    7. '  ' → logprob: -15.25080680847168
    8. '    ' → logprob: -15.50080680847168
    9. ' -' → logprob: -16.31330680847168
    10. '1' → logprob: -17.12580680847168

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01423320360481739
    2. ':
' → logprob: -4.264233112335205
    3. '   ' → logprob: -9.639233589172363
    4. ' :' → logprob: -13.264233589172363
    5. '       ' → logprob: -13.889233589172363
    6. ':
' → logprob: -14.764233589172363
    7. ' :
' → logprob: -15.264233589172363
    8. ':return' → logprob: -15.264233589172363
    9. ',' → logprob: -15.514233589172363
    10. '.' → logprob: -15.639233589172363

Token 75: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2812783122062683
    2. '       ' → logprob: -1.406278371810913
    3. ' break' → logprob: -9.281278610229492
    4. '    ' → logprob: -11.656278610229492
    5. '	break' → logprob: -12.031278610229492
    6. '   ' → logprob: -12.281278610229492
    7. '     ' → logprob: -12.656278610229492
    8. ' ' → logprob: -12.906278610229492
    9. ':' → logprob: -13.031278610229492
    10. '  ' → logprob: -13.281278610229492

Token 76: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.04406207054853439
    2. 'break' (adapté à ' break') → logprob: -3.2940621376037598
    3. '   ' → logprob: -5.29406213760376
    4. '       ' → logprob: -7.04406213760376
    5. '	break' → logprob: -9.169061660766602
    6. '_break' → logprob: -13.419061660766602
    7. '           ' → logprob: -13.794061660766602
    8. '    
' → logprob: -14.669061660766602
    9. '```' → logprob: -14.919061660766602
    10. '
' → logprob: -15.044061660766602

Token 77: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18925179541110992
    2. '
' → logprob: -1.9392517805099487
    3. '    
' → logprob: -3.6892518997192383
    4. '  
' → logprob: -6.564251899719238
    5. ' partitions' → logprob: -7.064251899719238
    6. '<|end|>' → logprob: -7.814251899719238
    7. '   
' → logprob: -8.314251899719238
    8. '        
' → logprob: -8.314251899719238
    9. '```' → logprob: -8.564251899719238
    10. ' 
' → logprob: -9.439251899719238

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1937352418899536
    2. '
' → logprob: -1.9437352418899536
    3. '    
' → logprob: -3.568735122680664
    4. '  
' → logprob: -5.943735122680664
    5. ' partitions' → logprob: -7.318735122680664
    6. '```' → logprob: -7.693735122680664
    7. '<|end|>' → logprob: -8.193735122680664
    8. '   
' → logprob: -8.443735122680664
    9. '        
' → logprob: -8.568735122680664
    10. ' 
' → logprob: -8.693735122680664

Token 79: ' partitions' (ID: 89097)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.5265418291091919
    2. '   ' → logprob: -0.9015418291091919
    3. ' partitions' → logprob: -5.776541709899902
    4. ' part' → logprob: -8.901541709899902
    5. '    
' → logprob: -9.776541709899902
    6. '
' → logprob: -10.526541709899902
    7. '(part' → logprob: -10.776541709899902
    8. '```' → logprob: -10.776541709899902
    9. '	part' → logprob: -11.026541709899902
    10. '_part' → logprob: -11.526541709899902

Token 80: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04304121062159538
    2. '(' → logprob: -3.168041229248047
    3. ' (' → logprob: -10.543041229248047
    4. '(
' → logprob: -11.418041229248047
    5. '<|end|>' → logprob: -13.043041229248047
    6. '(

' → logprob: -14.668041229248047
    7. ')(' → logprob: -15.168041229248047
    8. '((' → logprob: -15.168041229248047
    9. ')' → logprob: -15.543041229248047
    10. '(N' → logprob: -16.043041229248047

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010606779716908932
    2. ',n' → logprob: -4.88560676574707
    3. ' ,' → logprob: -6.13560676574707
    4. '(n' → logprob: -7.13560676574707
    5. '`,' → logprob: -11.26060676574707
    6. ')' → logprob: -11.88560676574707
    7. 'n' → logprob: -11.88560676574707
    8. ' n' → logprob: -12.38560676574707
    9. '(' → logprob: -13.01060676574707
    10. ',
' → logprob: -14.13560676574707

Token 82: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000805341056548059
    2. ' n' → logprob: -7.125805377960205
    3. '   ' → logprob: -14.500804901123047
    4. '	n' → logprob: -15.375804901123047
    5. '    ' → logprob: -16.375804901123047
    6. '  ' → logprob: -17.250804901123047
    7. ' ' → logprob: -17.625804901123047
    8. '<|end|>' → logprob: -17.625804901123047
    9. ')n' → logprob: -18.375804901123047
    10. '_n' → logprob: -19.375804901123047

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.755678961984813e-05
    2. ')' → logprob: -10.125077247619629
    3. ' ,' → logprob: -10.625077247619629
    4. ',n' → logprob: -12.250077247619629
    5. ',)' → logprob: -12.750077247619629
    6. ',[' → logprob: -12.750077247619629
    7. '   ' → logprob: -14.625077247619629
    8. ',p' → logprob: -15.125077247619629
    9. ',['' → logprob: -15.500077247619629
    10. '[])' → logprob: -15.625077247619629

Token 84: ' [])' (ID: 95430)
  Prédit: '[])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[])' → logprob: -0.015261698514223099
    2. '[]' → logprob: -4.265261650085449
    3. ' [])' → logprob: -6.890261650085449
    4. '[])
' → logprob: -9.76526165008545
    5. ')' → logprob: -10.89026165008545
    6. ' []' → logprob: -13.26526165008545
    7. '[]
' → logprob: -13.76526165008545
    8. '[],' → logprob: -15.01526165008545
    9. '[]):' → logprob: -15.51526165008545
    10. '[]}' → logprob: -15.89026165008545


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 82
Tokens correctement prédits (1ère position, stricte): 36
Tokens correctement prédits (1ère position, avec adaptation): 37
Tokens correctement prédits (top 10): 73
Précision stricte (1ère position): 43.90%
Précision adaptée (1ère position): 45.12%
Précision (top 10): 89.02%
================================================================================
