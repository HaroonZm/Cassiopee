================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:18:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Group:
    def __init__(self, index: int):
        self.index = index
        self.arrival = 5 * index
        self.size = 5 if index % 5 == 1 else 2
        self.eat_time = 17 * (index % 2) + 3 * (index % 3) + 19
        self.wait = 0
        self.seated_time = None
        self.seat_start = None

    def __repr__(self):
        return f"G{self.index}(arr={self.arrival}, size={self.size}, eat={self.eat_time})"


class Seating:
    def __init__(self, seats_count: int = 17):
        self.seats_count = seats_count
        self.seats = [None] * self.seats_count  # None or Group index seated

    def can_seat(self, group: Group) -> int:
        # Find first block of consecutive free seats of length group.size
        count = 0
        for i in range(self.seats_count):
            if self.seats[i] is None:
                count += 1
                if count == group.size:
                    return i - group.size + 1
            else:
                count = 0
        return -1

    def seat_group(self, group: Group, start_pos: int, current_time: int):
        for i in range(start_pos, start_pos + group.size):
            self.seats[i] = group.index
        group.seated_time = current_time
        group.seat_start = start_pos

    def leave_group(self, group: Group):
        for i in range(group.seat_start, group.seat_start + group.size):
            self.seats[i] = None

    def __repr__(self):
        # Represent seats: '_' for empty, else group index modulo 10
        return ''.join(str(s % 10) if s is not None else '_' for s in self.seats)


class QueueSystem:
    def __init__(self, total_groups: int = 100):
        self.groups = [Group(i) for i in range(total_groups)]
        self.seating = Seating()
        self.current_time = 0
        self.wait_queue = []
        self.occupied_groups = []
        self.last_arrived = 0  # index of last group arrived
        self.max_group_index = total_groups - 1
        self.events = []  # (time, 'arrive', group_index) or (time, 'leave', group_index)

    def run_until(self, target_index: int):
        # We simulate forward until group[target_index] is seated
        # or beyond seating time of all groups <= target_index
        groups = self.groups
        wait_queue = self.wait_queue
        seating = self.seating
        occupied_groups = self.occupied_groups

        # Event-driven approach with per-minute increments per problem statement
        # We will keep track of next arrivals and next leaves by time
        last_time = 0

        # Prepare tracking structure: we need to know when groups must arrive
        arrivals = {g.arrival: [] for g in groups}
        for g in groups:
            arrivals[g.arrival].append(g)

        # Map group index to leave time if seated: seated_time + eat_time

        # We simulate by time starting from 0 and incrementing by 1 until conditions met
        time = 0
        seated_groups = set()
        seated_target = False

        while True:
            # 1. Handle leaving groups at time
            leaving_groups_now = [g for g in occupied_groups if g.seated_time + g.eat_time == time]
            if leaving_groups_now:
                # Groups leave simultaneously at beginning of this minute
                for g in leaving_groups_now:
                    seating.leave_group(g)
                for g in leaving_groups_now:
                    occupied_groups.remove(g)

            # 2. Handle arriving groups at time
            if time in arrivals:
                for g in arrivals[time]:
                    # Decide to seat or queue
                    if not wait_queue:  # no queue yet
                        # Attempt seating immediately
                        start_pos = seating.can_seat(g)
                        if start_pos != -1:
                            seating.seat_group(g, start_pos, time)
                            occupied_groups.append(g)
                            if g.index == target_index:
                                seated_target = True
                        else:
                            # Queue because no seat
                            wait_queue.append(g)
                    else:
                        # Queue always because a queue exists
                        wait_queue.append(g)

            # 3. Try to seat from queue as many groups as possible in order, without skipping
            # If wait_queue empty then skip
            if wait_queue:
                # We try to seat from the first group in queue as many as possible in order,
                # but if first can't seat no one seats
                while wait_queue:
                    first = wait_queue[0]
                    start_pos = seating.can_seat(first)
                    if start_pos == -1:
                        # No seating possible for first, stop seating attempts for others
                        break
                    else:
                        seating.seat_group(first, start_pos, time)
                        occupied_groups.append(first)
                        wait_queue.pop(0)
                        if first.index == target_index:
                            seated_target = True

            # If we seated target group and it has seated_time assigned, we can stop next minute
            # Wait time = seated_time - arrival_time
            if seated_target:
                break

            # Corner: if time goes beyond some large limit we stop to avoid infinite loops
            if time > 5 * self.max_group_index + 500:
                # Should never reach here logically, but just a safeguard
                break

            time += 1

        # Calculate wait time
        target_group = groups[target_index]
        wait_time = target_group.seated_time - target_group.arrival
        return wait_time


def main():
    import sys
    input_lines = sys.stdin.read().strip().split('\n')
    qs = QueueSystem()
    for line in input_lines:
        if not line.strip():
            continue
        n = int(line)
        wait = qs.run_until(n)
        print(wait)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Group' (ID: 7849)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08110268414020538
    2. '(' → logprob: -2.5811026096343994
    3. '():' → logprob: -6.9561028480529785
    4. '```' → logprob: -7.5811028480529785
    5. '   ' → logprob: -8.20610237121582
    6. '.' → logprob: -8.95610237121582
    7. ' :' → logprob: -8.95610237121582
    8. ':
' → logprob: -10.08110237121582
    9. '(
' → logprob: -10.58110237121582
    10. ''' → logprob: -11.08110237121582

Token 4: ' def' (ID: 1056)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6884230971336365
    2. '   ' → logprob: -1.0634231567382812
    3. '```' → logprob: -2.5634231567382812
    4. '(' → logprob: -3.5634231567382812
    5. 'def' (adapté à ' def') → logprob: -3.9384231567382812
    6. '_' → logprob: -4.313423156738281
    7. '\' → logprob: -5.313423156738281
    8. ' def' → logprob: -6.313423156738281
    9. ''' → logprob: -6.563423156738281
    10. 'a' → logprob: -7.313423156738281

Token 5: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06850692629814148
    2. '__' → logprob: -3.443506956100464
    3. ' __' → logprob: -3.943506956100464
    4. ' ' → logprob: -5.068506717681885
    5. ' init' → logprob: -5.818506717681885
    6. '    ' → logprob: -7.068506717681885
    7. '```' → logprob: -7.443506717681885
    8. '<|end|>' → logprob: -7.818506717681885
    9. 'init' → logprob: -8.193507194519043
    10. ' add' → logprob: -8.193507194519043

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.45848218582978e-06
    2. ' init' → logprob: -13.00000286102295
    3. 'ini' → logprob: -16.000001907348633
    4. '_init' → logprob: -17.000001907348633
    5. '	init' → logprob: -18.750001907348633
    6. 'in' → logprob: -19.250001907348633
    7. 'inite' → logprob: -19.625001907348633
    8. 'int' → logprob: -20.250001907348633
    9. 'innit' → logprob: -20.250001907348633
    10. 'new' → logprob: -20.625001907348633

Token 7: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.5288533568382263
    2. '__' → logprob: -0.9038533568382263
    3. '_' → logprob: -6.153853416442871
    4. '__(
' → logprob: -6.278853416442871
    5. '(' → logprob: -6.653853416442871
    6. '__((' → logprob: -8.528853416442871
    7. '__('' → logprob: -9.528853416442871
    8. '_(' → logprob: -10.153853416442871
    9. '___' → logprob: -10.278853416442871
    10. '(self' → logprob: -10.528853416442871

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004660811275243759
    2. ' self' → logprob: -5.379660606384277
    3. '(self' → logprob: -10.629660606384277
    4. ')' → logprob: -11.629660606384277
    5. ' )' → logprob: -12.629660606384277
    6. ' ' → logprob: -13.004660606384277
    7. 'space' → logprob: -14.879660606384277
    8. '_self' → logprob: -15.129660606384277
    9. ',self' → logprob: -15.379660606384277
    10. ' ' → logprob: -16.004661560058594

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04301871359348297
    2. 'self' → logprob: -4.043018817901611
    3. ')' → logprob: -4.168018817901611
    4. ' ,' → logprob: -5.418018817901611
    5. '_' → logprob: -6.668018817901611
    6. '<|end|>' → logprob: -6.918018817901611
    7. '):' → logprob: -7.543018817901611
    8. '(' → logprob: -8.293018341064453
    9. '_self' → logprob: -8.418018341064453
    10. ' )' → logprob: -8.543018341064453

Token 10: ' index' (ID: 3472)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018561692908406258
    2. ' self' → logprob: -4.018561840057373
    3. 'name' → logprob: -8.018561363220215
    4. ')' → logprob: -9.893561363220215
    5. ' )' → logprob: -11.393561363220215
    6. 'members' → logprob: -12.018561363220215
    7. ' name' → logprob: -12.143561363220215
    8. '(self' → logprob: -13.268561363220215
    9. ' members' → logprob: -13.393561363220215
    10. 'group' → logprob: -13.768561363220215

Token 11: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6034865379333496
    2. ',' → logprob: -0.8534865379333496
    3. ')' → logprob: -3.8534865379333496
    4. ':' → logprob: -5.47848653793335
    5. ' ,' → logprob: -7.47848653793335
    6. '_' → logprob: -7.47848653793335
    7. '=' → logprob: -8.728487014770508
    8. '   ' → logprob: -8.728487014770508
    9. '):
' → logprob: -9.603487014770508
    10. '```' → logprob: -10.228487014770508

Token 12: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.15074576437473297
    2. ' int' → logprob: -2.0257458686828613
    3. ' )' → logprob: -5.650745868682861
    4. ')' → logprob: -5.775745868682861
    5. 'self' → logprob: -8.775745391845703
    6. 'space' → logprob: -9.025745391845703
    7. '=int' → logprob: -9.275745391845703
    8. '[int' → logprob: -9.275745391845703
    9. ' ' → logprob: -9.400745391845703
    10. ' str' → logprob: -9.525745391845703

Token 13: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14319676160812378
    2. '):' → logprob: -2.1431968212127686
    3. ')' → logprob: -4.1431965827941895
    4. '   ' → logprob: -9.393197059631348
    5. ' ,' → logprob: -10.018197059631348
    6. ':' → logprob: -10.643197059631348
    7. ',int' → logprob: -10.893197059631348
    8. ',index' → logprob: -11.268197059631348
    9. '):
' → logprob: -11.268197059631348
    10. '<|end|>' → logprob: -11.518197059631348

Token 14: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004554254002869129
    2. '   ' → logprob: -6.129554271697998
    3. '    ' → logprob: -7.004554271697998
    4. '_' → logprob: -7.879554271697998
    5. 'self' → logprob: -8.25455379486084
    6. ' ' → logprob: -8.75455379486084
    7. ' self' → logprob: -9.12955379486084
    8. '        
' → logprob: -9.37955379486084
    9. '<|end|>' → logprob: -9.62955379486084
    10. '     ' → logprob: -9.87955379486084

Token 15: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3177962601184845
    2. ' self' → logprob: -1.942796230316162
    3. '       ' → logprob: -2.192796230316162
    4. 's' → logprob: -5.192796230316162
    5. '   ' → logprob: -5.692796230316162
    6. ' ' → logprob: -5.817796230316162
    7. '_' → logprob: -6.192796230316162
    8. '        ' → logprob: -6.692796230316162
    9. ' ' → logprob: -7.317796230316162
    10. '    ' → logprob: -7.942796230316162

Token 16: '.index' (ID: 9736)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06203142926096916
    2. '.index' → logprob: -3.0620315074920654
    3. '._' → logprob: -5.562031269073486
    4. '.groups' → logprob: -5.812031269073486
    5. ' .' → logprob: -6.062031269073486
    6. '.name' → logprob: -6.437031269073486
    7. '.group' → logprob: -7.062031269073486
    8. 'index' → logprob: -7.312031269073486
    9. '.indices' → logprob: -9.062031745910645
    10. '.items' → logprob: -9.187031745910645

Token 17: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20274876058101654
    2. ' =' → logprob: -1.7027487754821777
    3. '.' → logprob: -7.077748775482178
    4. ' ' → logprob: -8.32774829864502
    5. '<|end|>' → logprob: -9.07774829864502
    6. ')' → logprob: -9.57774829864502
    7. '_' → logprob: -10.95274829864502
    8. ',' → logprob: -11.82774829864502
    9. ' is' → logprob: -11.95274829864502
    10. '.=' → logprob: -12.07774829864502

Token 18: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.048589639365673065
    2. 'index' → logprob: -3.0485897064208984
    3. ' ' → logprob: -14.423589706420898
    4. '0' → logprob: -14.798589706420898
    5. '	index' → logprob: -14.798589706420898
    6. '#index' → logprob: -14.923589706420898
    7. '(index' → logprob: -15.673589706420898
    8. '=index' → logprob: -15.923589706420898
    9. ' ' → logprob: -16.5485897064209
    10. '@index' → logprob: -17.0485897064209

Token 19: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.3201853036880493
    2. '<|end|>' → logprob: -1.4451853036880493
    3. '\n' → logprob: -1.8201853036880493
    4. '\' → logprob: -2.1951851844787598
    5. '
' → logprob: -2.3201851844787598
    6. '   ' → logprob: -2.9451851844787598
    7. '```' → logprob: -4.19518518447876
    8. '    
' → logprob: -4.32018518447876
    9. '_' → logprob: -4.94518518447876
    10. ' ' → logprob: -5.44518518447876

Token 20: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 21: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6957981586456299
    2. '   ' → logprob: -1.3207981586456299
    3. '\n' → logprob: -2.07079815864563
    4. '<|end|>' → logprob: -3.19579815864563
    5. '    
' → logprob: -3.69579815864563
    6. '       ' → logprob: -3.94579815864563
    7. '\' → logprob: -4.945797920227051
    8. 'def' → logprob: -5.695797920227051
    9. ' 
' → logprob: -6.320797920227051
    10. '```' → logprob: -6.445797920227051

Token 22: '.arr' (ID: 76200)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5553982257843018
    2. '.members' → logprob: -1.8053982257843018
    3. '.groups' → logprob: -2.1803982257843018
    4. ' .' → logprob: -2.5553982257843018
    5. '._' → logprob: -4.180397987365723
    6. '_members' → logprob: -4.680397987365723
    7. '.items' → logprob: -4.680397987365723
    8. '.name' → logprob: -4.805397987365723
    9. 'members' → logprob: -5.305397987365723
    10. '_groups' → logprob: -5.305397987365723

Token 23: 'ival' (ID: 4552)
  Prédit: 'ay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.029851382598280907
    2. 'ays' → logprob: -3.5298514366149902
    3. ' =' → logprob: -10.154850959777832
    4. 'a' → logprob: -10.904850959777832
    5. ' ay' → logprob: -10.904850959777832
    6. '=' → logprob: -11.779850959777832
    7. '[' → logprob: -12.154850959777832
    8. '[]' → logprob: -13.029850959777832
    9. '[:]' → logprob: -13.404850959777832
    10. '_' → logprob: -13.529850959777832

Token 24: ' =' (ID: 314)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.003269568784162402
    2. '_' → logprob: -6.128269672393799
    3. '_times' → logprob: -7.003269672393799
    4. 'Time' → logprob: -10.12826919555664
    5. '_timestamp' → logprob: -10.12826919555664
    6. '_count' → logprob: -10.37826919555664
    7. '_arr' → logprob: -11.50326919555664
    8. 's' → logprob: -11.87826919555664
    9. '_rate' → logprob: -12.00326919555664
    10. ' _' → logprob: -12.25326919555664

Token 25: ' ' (ID: 220)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.6243096590042114
    2. ' None' → logprob: -1.1243096590042114
    3. '[]' → logprob: -2.499309539794922
    4. 'None' → logprob: -2.999309539794922
    5. '0' → logprob: -5.499309539794922
    6. ' ' → logprob: -5.749309539794922
    7. ' {}' → logprob: -9.624309539794922
    8. ' [' → logprob: -10.124309539794922
    9. '[' → logprob: -10.374309539794922
    10. '   ' → logprob: -10.749309539794922

Token 26: '5' (ID: 20)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7277330160140991
    2. 'None' → logprob: -0.8527330160140991
    3. '0' → logprob: -2.4777331352233887
    4. '{}' → logprob: -6.227733135223389
    5. 'time' → logprob: -6.727733135223389
    6. '{' → logprob: -7.227733135223389
    7. '[]}' → logprob: -7.227733135223389
    8. '[' → logprob: -7.477733135223389
    9. 'datetime' → logprob: -7.727733135223389
    10. 'False' → logprob: -8.35273265838623

Token 27: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.6290430426597595
    2. 'index' → logprob: -1.2540431022644043
    3. ' self' → logprob: -2.1290431022644043
    4. 'self' → logprob: -2.8790431022644043
    5. ' ' → logprob: -6.129043102264404
    6. '10' → logprob: -6.629043102264404
    7. '0' → logprob: -7.129043102264404
    8. '60' → logprob: -7.129043102264404
    9. ' (' → logprob: -8.504042625427246
    10. '3' → logprob: -8.879042625427246

Token 29: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9541086554527283
    2. '<|end|>' → logprob: -1.329108715057373
    3. '
' → logprob: -1.454108715057373
    4. '\n' → logprob: -3.204108715057373
    5. ' ' → logprob: -3.829108715057373
    6. '   ' → logprob: -4.204108715057373
    7. '\' → logprob: -5.204108715057373
    8. 'self' (adapté à ' self') → logprob: -5.329108715057373
    9. ' 
' → logprob: -5.454108715057373
    10. '```' → logprob: -5.454108715057373

Token 32: '.size' (ID: 4463)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0031949470285326242
    2. '.members' → logprob: -6.628194808959961
    3. '.size' → logprob: -7.253194808959961
    4. '._' → logprob: -7.628194808959961
    5. '_size' → logprob: -9.753194808959961
    6. '.arr' → logprob: -10.003194808959961
    7. ' .' → logprob: -10.128194808959961
    8. '.time' → logprob: -10.128194808959961
    9. '.wait' → logprob: -10.128194808959961
    10. '.capacity' → logprob: -10.253194808959961

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.034079357981681824
    2. '=' → logprob: -3.4090793132781982
    3. '<|end|>' → logprob: -7.784079551696777
    4. ' ' → logprob: -12.034079551696777
    5. '<|end|>' → logprob: -12.409079551696777
    6. ')' → logprob: -12.784079551696777
    7. '[' → logprob: -14.159079551696777
    8. ' =)' → logprob: -14.409079551696777
    9. '  ' → logprob: -14.784079551696777
    10. ':' → logprob: -15.034079551696777

Token 34: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22539329528808594
    2. '1' → logprob: -1.725393295288086
    3. '0' → logprob: -3.850393295288086
    4. '3' → logprob: -7.475393295288086
    5. '10' → logprob: -7.725393295288086
    6. '5' → logprob: -7.975393295288086
    7. '2' → logprob: -8.475393295288086
    8. '4' → logprob: -8.600393295288086
    9. ' self' → logprob: -8.850393295288086
    10. ' randint' → logprob: -8.975393295288086

Token 35: '5' (ID: 20)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4620710015296936
    2. '3' → logprob: -2.337070941925049
    3. '4' → logprob: -2.337070941925049
    4. '10' → logprob: -2.462070941925049
    5. '0' → logprob: -3.337070941925049
    6. '2' → logprob: -3.587070941925049
    7. '5' → logprob: -4.587070941925049
    8. 'index' → logprob: -4.837070941925049
    9. ' ' → logprob: -5.587070941925049
    10. 'int' → logprob: -6.837070941925049

Token 36: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.02082984708249569
    2. 'index' → logprob: -3.895829916000366
    3. ' not' → logprob: -9.020830154418945
    4. ' self' → logprob: -9.395830154418945
    5. ' ' → logprob: -10.145830154418945
    6. ' (' → logprob: -10.895830154418945
    7. '(index' → logprob: -11.520830154418945
    8. '	index' → logprob: -12.520830154418945
    9. ' size' → logprob: -12.895830154418945
    10. 'self' → logprob: -13.020830154418945

Token 38: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.34591078758239746
    2. ' ' → logprob: -1.8459107875823975
    3. ' <' → logprob: -2.9709107875823975
    4. ' ==' → logprob: -3.3459107875823975
    5. '>' → logprob: -3.8459107875823975
    6. ' <=' → logprob: -4.845911026000977
    7. '+' → logprob: -5.095911026000977
    8. ' !=' → logprob: -5.720911026000977
    9. '==' → logprob: -5.845911026000977
    10. ' +' → logprob: -5.970911026000977

Token 39: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.033813975751399994
    2. '2' → logprob: -3.408813953399658
    3. '3' → logprob: -9.408814430236816
    4. '4' → logprob: -10.408814430236816
    5. '==' → logprob: -10.908814430236816
    6. '<|end|>' → logprob: -11.783814430236816
    7. '6' → logprob: -12.033814430236816
    8. '5' → logprob: -12.533814430236816
    9. '>' → logprob: -12.533814430236816
    10. ' ==' → logprob: -12.783814430236816

Token 40: '5' (ID: 20)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.23866593837738037
    2. ' ' → logprob: -1.6136659383773804
    3. '3' → logprob: -4.48866605758667
    4. '5' → logprob: -7.11366605758667
    5. '4' → logprob: -7.48866605758667
    6. '10' → logprob: -7.98866605758667
    7. '7' → logprob: -9.738665580749512
    8. '6' → logprob: -9.863665580749512
    9. '1' → logprob: -10.738665580749512
    10. '8' → logprob: -11.238665580749512

Token 41: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7625290155410767
    2. ' ==' → logprob: -1.1375290155410767
    3. '==' → logprob: -2.137528896331787
    4. ' else' → logprob: -3.012528896331787
    5. '!=' → logprob: -3.137528896331787
    6. 'else' → logprob: -6.637528896331787
    7. ' ' → logprob: -6.887528896331787
    8. '>' → logprob: -10.137529373168945
    9. ' >' → logprob: -11.887529373168945
    10. '=' → logprob: -12.262529373168945

Token 42: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20145046710968018
    2. '0' → logprob: -1.7014504671096802
    3. '4' → logprob: -10.82645034790039
    4. '3' → logprob: -11.57645034790039
    5. '1' → logprob: -12.95145034790039
    6. '=' → logprob: -13.32645034790039
    7. '  ' → logprob: -13.82645034790039
    8. '2' → logprob: -13.95145034790039
    9. ' ' → logprob: -14.07645034790039
    10. '   ' → logprob: -14.88895034790039

Token 43: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18024200201034546
    2. ' ' → logprob: -1.8052420616149902
    3. '4' → logprob: -7.68024206161499
    4. '3' → logprob: -10.930241584777832
    5. '1' → logprob: -11.680241584777832
    6. '2' → logprob: -12.680241584777832
    7. '  ' → logprob: -13.055241584777832
    8. '   ' → logprob: -13.867741584777832
    9. '```' → logprob: -14.805241584777832
    10. '5' → logprob: -15.117741584777832

Token 44: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.011090032756328583
    2. 'else' → logprob: -4.51108980178833
    3. ' ' → logprob: -10.136090278625488
    4. '-' → logprob: -14.761090278625488
    5. '        ' → logprob: -15.136090278625488
    6. '	else' → logprob: -15.261090278625488
    7. '_else' → logprob: -15.261090278625488
    8. '0' → logprob: -15.511090278625488
    9. '+' → logprob: -15.636090278625488
    10. ' or' → logprob: -15.886090278625488

Token 45: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32919472455978394
    2. '1' → logprob: -1.9541947841644287
    3. '4' → logprob: -2.3291947841644287
    4. '3' → logprob: -3.5791947841644287
    5. '0' → logprob: -5.07919454574585
    6. '10' → logprob: -5.57919454574585
    7. '2' → logprob: -6.20419454574585
    8. '5' → logprob: -6.82919454574585
    9. ' None' → logprob: -8.704195022583008
    10. '7' → logprob: -9.829195022583008

Token 46: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3282564580440521
    2. '1' → logprob: -1.7032564878463745
    3. '4' → logprob: -3.453256368637085
    4. '2' → logprob: -3.828256368637085
    5. '0' → logprob: -4.078256607055664
    6. '10' → logprob: -4.328256607055664
    7. ' ' → logprob: -4.703256607055664
    8. 'index' → logprob: -6.328256607055664
    9. '6' → logprob: -6.953256607055664
    10. '7' → logprob: -7.078256607055664

Token 47: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7082862257957458
    2. '<|end|>' → logprob: -0.8332862257957458
    3. '   ' → logprob: -3.0832862854003906
    4. '    
' → logprob: -5.083286285400391
    5. '\n' → logprob: -5.458286285400391
    6. '```' → logprob: -5.708286285400391
    7. '<|end|>' → logprob: -5.958286285400391
    8. ' 
' → logprob: -6.333286285400391
    9. '       ' → logprob: -6.708286285400391
    10. ')' → logprob: -6.958286285400391

Token 49: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: '.e' (ID: 2560)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08999983966350555
    2. '.is' → logprob: -4.089999675750732
    3. '.arr' → logprob: -4.339999675750732
    4. '._' → logprob: -4.714999675750732
    5. '.wait' → logprob: -4.714999675750732
    6. '.members' → logprob: -4.714999675750732
    7. '.status' → logprob: -5.589999675750732
    8. ' .' → logprob: -6.339999675750732
    9. '.has' → logprob: -6.464999675750732
    10. '.time' → logprob: -6.464999675750732

Token 51: 'at' (ID: 266)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6058793663978577
    2. 'xit' → logprob: -1.105879306793213
    3. 'ating' → logprob: -3.230879306793213
    4. 'nd' → logprob: -3.730879306793213
    5. 'm' → logprob: -3.980879306793213
    6. 'x' → logprob: -4.980879306793213
    7. 'nt' → logprob: -4.980879306793213
    8. 'at' → logprob: -5.605879306793213
    9. 'xp' → logprob: -5.605879306793213
    10. 'arly' → logprob: -5.730879306793213

Token 52: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.6586692333221436
    2. 'ing' → logprob: -0.7836692333221436
    3. '_duration' → logprob: -4.658669471740723
    4. 'time' → logprob: -5.408669471740723
    5. '_' → logprob: -5.783669471740723
    6. 's' → logprob: -5.783669471740723
    7. '_count' → logprob: -7.158669471740723
    8. '_times' → logprob: -7.158669471740723
    9. 'ed' → logprob: -7.408669471740723
    10. '_start' → logprob: -7.408669471740723

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14346037805080414
    2. '=' → logprob: -2.018460273742676
    3. '_' → logprob: -7.518460273742676
    4. ' ' → logprob: -8.893460273742676
    5. '<|end|>' → logprob: -9.768460273742676
    6. 's' → logprob: -11.518460273742676
    7. ')' → logprob: -11.643460273742676
    8. '  ' → logprob: -11.643460273742676
    9. '   ' → logprob: -12.893460273742676
    10. ',' → logprob: -13.268460273742676

Token 54: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8703479766845703
    2. '3' → logprob: -1.1203479766845703
    3. '10' → logprob: -2.6203479766845703
    4. '5' → logprob: -2.7453479766845703
    5. '2' → logprob: -3.1203479766845703
    6. '1' → logprob: -3.2453479766845703
    7. '4' → logprob: -4.24534797668457
    8. ' self' → logprob: -5.12034797668457
    9. 'self' → logprob: -5.49534797668457
    10. '0' → logprob: -5.87034797668457

Token 55: '17' (ID: 1422)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.38207918405532837
    2. '10' → logprob: -2.5070791244506836
    3. '2' → logprob: -2.8820791244506836
    4. '1' → logprob: -2.8820791244506836
    5. '5' → logprob: -3.0070791244506836
    6. '4' → logprob: -4.007079124450684
    7. ' ' → logprob: -4.382079124450684
    8. 'self' → logprob: -4.757079124450684
    9. '7' → logprob: -4.882079124450684
    10. '0' → logprob: -5.007079124450684

Token 56: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' (' (ID: 350)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.5531026124954224
    2. 'index' → logprob: -0.9281026124954224
    3. ' self' → logprob: -4.178102493286133
    4. 'self' → logprob: -4.678102493286133
    5. ' ' → logprob: -6.303102493286133
    6. '2' → logprob: -6.803102493286133
    7. '5' → logprob: -7.803102493286133
    8. '3' → logprob: -7.803102493286133
    9. ' (' → logprob: -8.178102493286133
    10. '(index' → logprob: -8.428102493286133

Token 58: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.9960452318191528
    2. 'self' → logprob: -1.3710452318191528
    3. ' index' → logprob: -1.3710452318191528
    4. ' self' → logprob: -2.1210451126098633
    5. '5' → logprob: -6.496045112609863
    6. ' ' → logprob: -8.121045112609863
    7. '1' → logprob: -8.496045112609863
    8. '2' → logprob: -8.496045112609863
    9. '       ' → logprob: -8.621045112609863
    10. ' (' → logprob: -9.371045112609863

Token 59: ' %' (ID: 1851)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.28390181064605713
    2. ')' → logprob: -2.0339016914367676
    3. '+' → logprob: -2.5339016914367676
    4. ' )' → logprob: -4.033901691436768
    5. ' %' → logprob: -4.908901691436768
    6. '<|end|>' → logprob: -4.908901691436768
    7. ' ' → logprob: -6.158901691436768
    8. '%' → logprob: -6.783901691436768
    9. ' -' → logprob: -7.783901691436768
    10. ' **' → logprob: -8.658902168273926

Token 60: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.6857949495315552
    2. ' ' → logprob: -1.3107949495315552
    3. '10' → logprob: -2.8107948303222656
    4. '7' → logprob: -2.8107948303222656
    5. '6' → logprob: -3.0607948303222656
    6. '4' → logprob: -3.5607948303222656
    7. '3' → logprob: -4.185794830322266
    8. '9' → logprob: -5.435794830322266
    9. '8' → logprob: -5.560794830322266
    10. '2' → logprob: -6.185794830322266

Token 61: '2' (ID: 17)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.26239192485809326
    2. '6' → logprob: -3.137392044067383
    3. ' ' → logprob: -3.137392044067383
    4. '10' → logprob: -3.137392044067383
    5. '4' → logprob: -3.262392044067383
    6. '7' → logprob: -3.637392044067383
    7. '3' → logprob: -3.887392044067383
    8. '9' → logprob: -5.512392044067383
    9. '8' → logprob: -5.637392044067383
    10. '2' → logprob: -6.137392044067383

Token 62: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.356935054063797
    2. ' +' → logprob: -1.8569350242614746
    3. ' )' → logprob: -2.2319350242614746
    4. '+' → logprob: -3.6069350242614746
    5. '1' → logprob: -5.356935024261475
    6. ' ' → logprob: -5.731935024261475
    7. ')+' → logprob: -6.856935024261475
    8. '+)' → logprob: -8.856935501098633
    9. '2' → logprob: -9.481935501098633
    10. '0' → logprob: -9.481935501098633

Token 63: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.574771523475647
    2. '1' → logprob: -1.949771523475647
    3. '3' → logprob: -2.5747714042663574
    4. '10' → logprob: -3.0747714042663574
    5. '5' → logprob: -3.1997714042663574
    6. '7' → logprob: -3.1997714042663574
    7. '4' → logprob: -3.9497714042663574
    8. '6' → logprob: -3.9497714042663574
    9. '8' → logprob: -4.074771404266357
    10. '9' → logprob: -4.324771404266357

Token 65: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.3049709796905518
    2. '10' → logprob: -1.5549709796905518
    3. '5' → logprob: -2.0549709796905518
    4. '1' → logprob: -2.4299709796905518
    5. '7' → logprob: -2.6799709796905518
    6. '8' → logprob: -2.9299709796905518
    7. '4' → logprob: -3.5549709796905518
    8. '6' → logprob: -3.5549709796905518
    9. '2' → logprob: -3.5549709796905518
    10. '9' → logprob: -3.6799709796905518

Token 66: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.693142831325531
    2. ' index' → logprob: -1.6931428909301758
    3. '(' → logprob: -2.318142890930176
    4. '(index' → logprob: -2.318142890930176
    5. 'index' → logprob: -2.443142890930176
    6. ' self' → logprob: -4.818142890930176
    7. '2' → logprob: -4.943142890930176
    8. ' ' → logprob: -5.318142890930176
    9. '5' → logprob: -5.943142890930176
    10. '1' → logprob: -6.068142890930176

Token 68: 'index' (ID: 2257)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1045552492141724
    2. ' index' → logprob: -1.3545552492141724
    3. 'index' → logprob: -1.9795552492141724
    4. '(index' → logprob: -1.9795552492141724
    5. ' self' → logprob: -3.104555130004883
    6. 'self' → logprob: -3.354555130004883
    7. '(' → logprob: -3.479555130004883
    8. '(self' → logprob: -4.979555130004883
    9. ')' → logprob: -5.604555130004883
    10. '1' → logprob: -5.604555130004883

Token 69: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.04020753875374794
    2. '%' → logprob: -3.290207624435425
    3. '<|end|>' → logprob: -6.290207386016846
    4. ' ' → logprob: -8.290207862854004
    5. ')' → logprob: -10.415207862854004
    6. ' ' → logprob: -10.915207862854004
    7. '<|end|>' → logprob: -13.040207862854004
    8. ' +' → logprob: -13.540207862854004
    9. ' )' → logprob: -13.665207862854004
    10. '  ' → logprob: -14.165207862854004

Token 70: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.3393843173980713
    2. ' ' → logprob: -1.5893843173980713
    3. '3' → logprob: -2.9643843173980713
    4. '2' → logprob: -4.089384078979492
    5. '4' → logprob: -4.714384078979492
    6. '1' → logprob: -5.464384078979492
    7. '7' → logprob: -6.964384078979492
    8. '10' → logprob: -7.214384078979492
    9. '6' → logprob: -7.964384078979492
    10. ')' → logprob: -10.214384078979492

Token 71: '3' (ID: 18)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.10645205527544022
    2. '3' → logprob: -2.606451988220215
    3. '4' → logprob: -4.231451988220215
    4. ' ' → logprob: -4.731451988220215
    5. '2' → logprob: -6.356451988220215
    6. '7' → logprob: -7.356451988220215
    7. '10' → logprob: -7.356451988220215
    8. '1' → logprob: -7.731451988220215
    9. '6' → logprob: -8.356451988220215
    10. '9' → logprob: -9.981451988220215

Token 72: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0027813392225652933
    2. ' )' → logprob: -6.002781391143799
    3. '+' → logprob: -8.87778091430664
    4. ')
' → logprob: -9.87778091430664
    5. ' +' → logprob: -10.25278091430664
    6. ')+' → logprob: -10.75278091430664
    7. '<|end|>' → logprob: -11.00278091430664
    8. '   ' → logprob: -12.00278091430664
    9. '1' → logprob: -13.00278091430664
    10. '2' → logprob: -13.12778091430664

Token 73: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1454780250787735
    2. '1' → logprob: -2.2704780101776123
    3. '2' → logprob: -4.770478248596191
    4. ' index' → logprob: -5.020478248596191
    5. 'index' → logprob: -5.645478248596191
    6. ' (' → logprob: -5.645478248596191
    7. '5' → logprob: -5.895478248596191
    8. '7' → logprob: -6.145478248596191
    9. '3' → logprob: -6.395478248596191
    10. '4' → logprob: -6.520478248596191

Token 75: '19' (ID: 858)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6391317248344421
    2. ' ' → logprob: -2.014131784439087
    3. '7' → logprob: -2.264131784439087
    4. '4' → logprob: -2.389131784439087
    5. '2' → logprob: -2.389131784439087
    6. '5' → logprob: -3.639131784439087
    7. 'index' → logprob: -4.889131546020508
    8. '10' → logprob: -5.139131546020508
    9. '3' → logprob: -5.389131546020508
    10. ' (' → logprob: -6.639131546020508

Token 76: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: '.wait' (ID: 29833)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06360646337270737
    2. '.wait' → logprob: -4.313606262207031
    3. '._' → logprob: -4.563606262207031
    4. '.e' → logprob: -4.688606262207031
    5. '.is' → logprob: -5.438606262207031
    6. '.time' → logprob: -5.563606262207031
    7. '.arr' → logprob: -5.813606262207031
    8. '_wait' → logprob: -6.063606262207031
    9. '_time' → logprob: -6.563606262207031
    10. '.size' → logprob: -6.938606262207031

Token 80: ' =' (ID: 314)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.2072414755821228
    2. 'ing' → logprob: -1.9572415351867676
    3. '_' → logprob: -3.2072415351867676
    4. ' =' → logprob: -6.082241535186768
    5. '=' → logprob: -6.582241535186768
    6. '_times' → logprob: -7.707241535186768
    7. '_for' → logprob: -8.45724105834961
    8. 'ed' → logprob: -8.45724105834961
    9. '_ing' → logprob: -9.08224105834961
    10. ' _' → logprob: -9.08224105834961

Token 81: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.349485844373703
    2. '0' → logprob: -1.2244858741760254
    3. ' None' → logprob: -8.474485397338867
    4. 'None' → logprob: -8.474485397338867
    5. 'self' → logprob: -8.974485397338867
    6. '[]' → logprob: -9.349485397338867
    7. ' []' → logprob: -9.349485397338867
    8. ' -' → logprob: -10.161985397338867
    9. ' self' → logprob: -10.286985397338867
    10. '1' → logprob: -10.349485397338867

Token 82: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0035423364024609327
    2. ' ' → logprob: -6.128542423248291
    3. '[]' → logprob: -7.628542423248291
    4. '-' → logprob: -8.253541946411133
    5. 'None' → logprob: -8.378541946411133
    6. 'self' → logprob: -9.128541946411133
    7. '1' → logprob: -10.128541946411133
    8. '10' → logprob: -10.253541946411133
    9. ' []' → logprob: -10.753541946411133
    10. 'float' → logprob: -10.753541946411133

Token 83: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19594791531562805
    2. '<|end|>' → logprob: -2.1959478855133057
    3. '
' → logprob: -3.1959478855133057
    4. 'def' → logprob: -4.945948123931885
    5. '    
' → logprob: -5.195948123931885
    6. ' def' → logprob: -5.820948123931885
    7. ',' → logprob: -6.320948123931885
    8. ' ' → logprob: -6.695948123931885
    9. '       ' → logprob: -6.695948123931885
    10. '<|end|>' → logprob: -6.945948123931885

Token 85: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10619727522134781
    2. '   ' → logprob: -2.4811973571777344
    3. ' def' → logprob: -4.856197357177734
    4. '       ' → logprob: -5.606197357177734
    5. '
' → logprob: -6.106197357177734
    6. '<|end|>' → logprob: -6.606197357177734
    7. '    
' → logprob: -7.231197357177734
    8. '```' → logprob: -8.106197357177734
    9. '        
' → logprob: -8.231197357177734
    10. ' ' → logprob: -8.481197357177734

Token 86: '.se' (ID: 5877)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003973443526774645
    2. '._' → logprob: -6.753973484039307
    3. '.wait' → logprob: -7.503973484039307
    4. '.queue' → logprob: -7.753973484039307
    5. '.is' → logprob: -7.878973484039307
    6. '.status' → logprob: -8.253973007202148
    7. ' .' → logprob: -8.628973007202148
    8. '.e' → logprob: -9.128973007202148
    9. '.time' → logprob: -9.128973007202148
    10. '.arr' → logprob: -9.378973007202148

Token 87: 'ated' (ID: 780)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.7423644065856934
    2. 'ated' → logprob: -1.2423644065856934
    3. 'lf' → logprob: -2.4923644065856934
    4. 'r' → logprob: -2.9923644065856934
    5. 'ats' → logprob: -3.1173644065856934
    6. 't' → logprob: -3.6173644065856934
    7. 'ating' → logprob: -4.367364406585693
    8. 'lected' → logprob: -5.867364406585693
    9. 'ed' → logprob: -6.117364406585693
    10. 'rv' → logprob: -6.367364406585693

Token 88: '_time' (ID: 6425)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28125202655792236
    2. '=' → logprob: -1.4062520265579224
    3. '_' → logprob: -9.656251907348633
    4. ' ' → logprob: -10.906251907348633
    5. ' =
' → logprob: -11.906251907348633
    6. '<|end|>' → logprob: -12.781251907348633
    7. 'space' → logprob: -13.031251907348633
    8. ')' → logprob: -13.281251907348633
    9. 's' → logprob: -13.531251907348633
    10. ',' → logprob: -13.906251907348633

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12694889307022095
    2. '=' → logprob: -2.126948833465576
    3. ' ' → logprob: -11.251949310302734
    4. '=None' → logprob: -12.626949310302734
    5. '_' → logprob: -13.501949310302734
    6. '<|end|>' → logprob: -13.626949310302734
    7. ' None' → logprob: -14.376949310302734
    8. ' =)' → logprob: -14.626949310302734
    9. '  ' → logprob: -15.126949310302734
    10. ' =
' → logprob: -15.251949310302734

Token 90: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.7622255682945251
    2. '0' → logprob: -1.26222562789917
    3. 'None' → logprob: -1.63722562789917
    4. ' ' → logprob: -2.88722562789917
    5. '-' → logprob: -10.137225151062012
    6. ' -' → logprob: -10.387225151062012
    7. '_None' → logprob: -12.137225151062012
    8. 'self' → logprob: -12.262225151062012
    9. '   ' → logprob: -12.387225151062012
    10. ' self' → logprob: -12.637225151062012

Token 91: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6925104260444641
    2. '
' → logprob: -1.1925103664398193
    3. '<|end|>' → logprob: -2.1925103664398193
    4. ' ' → logprob: -3.8175103664398193
    5. ' 
' → logprob: -4.317510604858398
    6. '    
' → logprob: -4.442510604858398
    7. 'n' → logprob: -4.817510604858398
    8. 'def' → logprob: -4.942510604858398
    9. '\n' → logprob: -5.317510604858398
    10. '  
' → logprob: -5.817510604858398

Token 92: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: '.se' (ID: 5877)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003104042261838913
    2. '.is' → logprob: -7.128104209899902
    3. ' .' → logprob: -7.628104209899902
    4. '.wait' → logprob: -7.753104209899902
    5. '.se' → logprob: -8.253104209899902
    6. '.status' → logprob: -8.378104209899902
    7. 's' → logprob: -9.128104209899902
    8. '.available' → logprob: -9.628104209899902
    9. '.space' → logprob: -9.628104209899902
    10. 'se' → logprob: -9.753104209899902

Token 95: 'at' (ID: 266)
  Prédit: 'ated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ated' → logprob: -0.0008324974915012717
    2. 'at' → logprob: -8.125832557678223
    3. '```' → logprob: -9.875832557678223
    4. '   ' → logprob: -10.000832557678223
    5. 'atted' → logprob: -10.000832557678223
    6. '_at' → logprob: -10.375832557678223
    7. 'ating' → logprob: -10.500832557678223
    8. 'sted' → logprob: -10.500832557678223
    9. 'med' → logprob: -10.750832557678223
    10. ' at' → logprob: -10.875832557678223

Token 96: '_start' (ID: 10949)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9328184127807617
    2. 'ed' → logprob: -0.9328184127807617
    3. 's' → logprob: -2.1828184127807617
    4. ' =' → logprob: -2.9328184127807617
    5. '=None' → logprob: -3.6828184127807617
    6. 'd' → logprob: -3.9328184127807617
    7. 'id' → logprob: -6.807818412780762
    8. '_id' → logprob: -8.057818412780762
    9. 'ing' → logprob: -8.307818412780762
    10. 'index' → logprob: -8.807818412780762

Token 97: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10869552940130234
    2. 'd' → logprob: -3.3586955070495605
    3. ' =' → logprob: -3.4836955070495605
    4. 'ed' → logprob: -3.6086955070495605
    5. '_time' → logprob: -4.6086955070495605
    6. '_' → logprob: -7.9836955070495605
    7. '=_' → logprob: -9.733695983886719
    8. '=None' → logprob: -10.608695983886719
    9. 's' → logprob: -11.483695983886719
    10. 'time' → logprob: -12.108695983886719

Token 98: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.20959898829460144
    2. 'None' → logprob: -1.7095990180969238
    3. '0' → logprob: -5.084599018096924
    4. ' ' → logprob: -6.334599018096924
    5. '[]' → logprob: -10.084598541259766
    6. ' []' → logprob: -10.459598541259766
    7. ' time' → logprob: -10.834598541259766
    8. 'self' → logprob: -11.084598541259766
    9. ' self' → logprob: -11.209598541259766
    10. '_None' → logprob: -11.209598541259766

Token 99: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.852340817451477
    2. '
' → logprob: -1.227340817451477
    3. '<|end|>' → logprob: -1.352340817451477
    4. '    
' → logprob: -4.9773406982421875
    5. 'def' → logprob: -5.3523406982421875
    6. ' ' → logprob: -6.8523406982421875
    7. '       ' → logprob: -6.8523406982421875
    8. '<|end|>' → logprob: -6.8523406982421875
    9. '\' → logprob: -6.9773406982421875
    10. ' def' → logprob: -7.1023406982421875

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04914635792374611
    2. '
' → logprob: -3.6741464138031006
    3. 'def' → logprob: -4.0491461753845215
    4. '<|end|>' → logprob: -6.2991461753845215
    5. '    
' → logprob: -6.6741461753845215
    6. ' def' → logprob: -6.9241461753845215
    7. ' ' → logprob: -8.42414665222168
    8. '       ' → logprob: -8.92414665222168
    9. 'class' → logprob: -8.92414665222168
    10. ' 
' → logprob: -9.17414665222168

Token 101: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0047982074320316315
    2. '   ' → logprob: -5.629798412322998
    3. ' def' → logprob: -6.754798412322998
    4. 'd' → logprob: -10.87979793548584
    5. '	def' → logprob: -12.87979793548584
    6. '       ' → logprob: -13.37979793548584
    7. ' ' → logprob: -13.37979793548584
    8. '    
' → logprob: -13.50479793548584
    9. 'class' → logprob: -13.75479793548584
    10. '
' → logprob: -13.87979793548584

Token 102: ' __' (ID: 2516)
  Prédit: ' seat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seat' → logprob: -1.0128540992736816
    2. ' wait' → logprob: -1.6378540992736816
    3. ' get' → logprob: -2.1378540992736816
    4. ' __' → logprob: -2.5128540992736816
    5. ' arrive' → logprob: -2.8878540992736816
    6. ' eat' → logprob: -3.1378540992736816
    7. ' update' → logprob: -3.8878540992736816
    8. ' can' → logprob: -4.137854099273682
    9. ' calculate' → logprob: -4.137854099273682
    10. ' is' → logprob: -4.137854099273682

Token 103: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.40169212222099304
    2. 'str' → logprob: -1.1516921520233154
    3. 'eq' → logprob: -4.401691913604736
    4. 'init' → logprob: -6.151691913604736
    5. 'lt' → logprob: -8.151692390441895
    6. 'len' → logprob: -11.151692390441895
    7. 'rep' → logprob: -12.151692390441895
    8. 'hash' → logprob: -12.776692390441895
    9. 're' → logprob: -12.776692390441895
    10. 'iter' → logprob: -13.151692390441895

Token 104: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.1283024400472641
    2. '__' → logprob: -2.1283023357391357
    3. '__(
' → logprob: -7.378302574157715
    4. '__('' → logprob: -7.503302574157715
    5. '__((' → logprob: -9.128302574157715
    6. '__("' → logprob: -10.128302574157715
    7. '(self' → logprob: -11.003302574157715
    8. '___' → logprob: -11.253302574157715
    9. '__(*' → logprob: -11.628302574157715
    10. '(' → logprob: -12.878302574157715

Token 105: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00016396844875998795
    2. ')' → logprob: -8.875164031982422
    3. ' self' → logprob: -11.000164031982422
    4. '
' → logprob: -12.375164031982422
    5. '<|end|>' → logprob: -13.625164031982422
    6. '   ' → logprob: -14.750164031982422
    7. '(self' → logprob: -14.750164031982422
    8. 's' → logprob: -15.250164031982422
    9. ' ' → logprob: -15.375164031982422
    10. '       ' → logprob: -16.125164031982422

Token 106: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.8841391205787659
    2. ',' → logprob: -1.384139060974121
    3. 'self' → logprob: -2.009139060974121
    4. ')' → logprob: -2.509139060974121
    5. '):' → logprob: -2.759139060974121
    6. '__,' → logprob: -3.884139060974121
    7. '(self' → logprob: -4.759139060974121
    8. '__(' → logprob: -5.134139060974121
    9. '__('' → logprob: -5.384139060974121
    10. '__)' → logprob: -6.134139060974121

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00043639098294079304
    2. ' return' → logprob: -8.500436782836914
    3. ' self' → logprob: -9.625436782836914
    4. ' f' → logprob: -10.000436782836914
    5. 'self' → logprob: -10.250436782836914
    6. '   ' → logprob: -10.625436782836914
    7. 'return' → logprob: -10.625436782836914
    8. '        ' → logprob: -11.375436782836914
    9. '    ' → logprob: -11.500436782836914
    10. '           ' → logprob: -12.250436782836914

Token 108: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2590314745903015
    2. 'return' (adapté à ' return') → logprob: -1.7590315341949463
    3. '       ' → logprob: -2.8840315341949463
    4. '   ' → logprob: -10.259031295776367
    5. ' f' → logprob: -10.259031295776367
    6. '    ' → logprob: -12.759031295776367
    7. ' ' → logprob: -13.134031295776367
    8. '	return' → logprob: -13.384031295776367
    9. '           ' → logprob: -14.134031295776367
    10. '        ' → logprob: -14.259031295776367

Token 109: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.01815052703022957
    2. 'f' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.268150329589844
    4. '	f' → logprob: -15.893150329589844
    5. '"' → logprob: -16.393150329589844
    6. ' F' → logprob: -16.643150329589844
    7. '   ' → logprob: -17.518150329589844
    8. '(f' → logprob: -17.518150329589844
    9. ' repr' → logprob: -17.893150329589844
    10. ''f' → logprob: -17.893150329589844

Token 110: '"G' (ID: 167124)
  Prédit: '<Group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<Group' → logprob: -0.786392867565155
    2. 'f' → logprob: -1.6613929271697998
    3. '"' → logprob: -1.9113929271697998
    4. '"<' → logprob: -2.4113929271698
    5. '(Group' → logprob: -2.9113929271698
    6. 'Group' → logprob: -3.5363929271698
    7. '(f' → logprob: -3.9113929271698
    8. ' f' → logprob: -5.286392688751221
    9. ' Group' → logprob: -6.536392688751221
    10. ''<' → logprob: -6.911392688751221

Token 111: '{' (ID: 90)
  Prédit: 'roup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roup' → logprob: -9.13388703338569e-06
    2. '{' → logprob: -12.250009536743164
    3. ' roup' → logprob: -12.875009536743164
    4. 'group' → logprob: -14.000009536743164
    5. 'roups' → logprob: -15.625009536743164
    6. 'rou' → logprob: -15.625009536743164
    7. 'Group' → logprob: -15.750009536743164
    8. '(group' → logprob: -16.000009536743164
    9. 'ROUP' → logprob: -16.375009536743164
    10. 'roupe' → logprob: -16.375009536743164

Token 112: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08760083466768265
    2. '{' → logprob: -2.9626009464263916
    3. 'roup' → logprob: -3.5876009464263916
    4. '[self' → logprob: -6.0876007080078125
    5. '(self' → logprob: -6.5876007080078125
    6. 'roups' → logprob: -7.3376007080078125
    7. ' self' → logprob: -8.962600708007812
    8. '	self' → logprob: -10.587600708007812
    9. '{
' → logprob: -10.962600708007812
    10. 'elf' → logprob: -11.212600708007812

Token 113: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.00355742359533906
    2. '[index' → logprob: -6.378557205200195
    3. 'index' → logprob: -6.628557205200195
    4. '{' → logprob: -8.128557205200195
    5. '(index' → logprob: -9.503557205200195
    6. ':index' → logprob: -10.503557205200195
    7. 'self' → logprob: -10.503557205200195
    8. '.' → logprob: -10.503557205200195
    9. ' .' → logprob: -11.128557205200195
    10. 'roup' → logprob: -11.503557205200195

Token 114: '}(' (ID: 52930)
  Prédit: '}"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}"' → logprob: -0.00291447713971138
    2. '}' → logprob: -5.8779144287109375
    3. ')"' → logprob: -10.502914428710938
    4. '"' → logprob: -10.877914428710938
    5. '(' → logprob: -11.002914428710938
    6. '}")' → logprob: -11.627914428710938
    7. '}}"' → logprob: -11.752914428710938
    8. '}"
' → logprob: -12.502914428710938
    9. '}>' → logprob: -12.627914428710938
    10. '}@' → logprob: -12.627914428710938

Token 115: 'arr' (ID: 1614)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.11898336559534073
    2. 'size' → logprob: -3.118983268737793
    3. 'self' → logprob: -3.993983268737793
    4. '{i' → logprob: -4.118983268737793
    5. 'arr' → logprob: -4.493983268737793
    6. '{s' → logprob: -4.993983268737793
    7. 's' → logprob: -5.118983268737793
    8. 'index' → logprob: -5.618983268737793
    9. 'arrival' → logprob: -6.118983268737793
    10. 'i' → logprob: -6.993983268737793

Token 116: '={' (ID: 1693)
  Prédit: 'ival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.0003721622342709452
    2. 'val' → logprob: -8.750371932983398
    3. '{' → logprob: -10.375371932983398
    4. '=' → logprob: -10.750371932983398
    5. '[' → logprob: -10.750371932983398
    6. 'iv' → logprob: -10.750371932983398
    7. '}' → logprob: -11.250371932983398
    8. '(self' → logprob: -11.625371932983398
    9. ':' → logprob: -11.750371932983398
    10. '[self' → logprob: -11.875371932983398

Token 117: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.167648876318708e-05
    2. ' self' → logprob: -10.625041961669922
    3. '{' → logprob: -11.000041961669922
    4. '[self' → logprob: -15.000041961669922
    5. 'elf' → logprob: -16.500041961669922
    6. '(self' → logprob: -16.750041961669922
    7. '5' → logprob: -16.875041961669922
    8. '=self' → logprob: -17.625041961669922
    9. '
' → logprob: -17.875041961669922
    10. '	self' → logprob: -18.250041961669922

Token 118: '.arr' (ID: 76200)
  Prédit: 'ival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.20266105234622955
    2. '.arr' → logprob: -1.7026610374450684
    3. 'arrival' → logprob: -6.827661037445068
    4. 'val' → logprob: -9.452661514282227
    5. 'ivals' → logprob: -10.577661514282227
    6. '}' → logprob: -10.952661514282227
    7. '.' → logprob: -11.702661514282227
    8. 'arr' → logprob: -12.202661514282227
    9. 'IVAL' → logprob: -12.452661514282227
    10. 'al' → logprob: -12.702661514282227

Token 119: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.050039030611515045
    2. 'val' → logprob: -3.050039052963257
    3. 'al' → logprob: -6.800038814544678
    4. 'iv' → logprob: -9.425039291381836
    5. '}' → logprob: -10.050039291381836
    6. ')' → logprob: -10.300039291381836
    7. '.val' → logprob: -10.550039291381836
    8. '   ' → logprob: -10.675039291381836
    9. '       ' → logprob: -11.175039291381836
    10. ' ' → logprob: -11.175039291381836

Token 120: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010574605548754334
    2. '},' → logprob: -7.7510576248168945
    3. ' ,' → logprob: -7.8760576248168945
    4. '}' → logprob: -9.001057624816895
    5. ',
' → logprob: -10.376057624816895
    6. '}"' → logprob: -11.126057624816895
    7. '})' → logprob: -11.251057624816895
    8. ')' → logprob: -11.251057624816895
    9. ',time' → logprob: -11.251057624816895
    10. ',s' → logprob: -11.876057624816895

Token 121: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.4194667935371399
    2. 'size' → logprob: -1.1694667339324951
    3. ' wait' → logprob: -4.294466972351074
    4. ' sz' → logprob: -5.044466972351074
    5. 'wait' → logprob: -5.544466972351074
    6. ' seat' → logprob: -5.919466972351074
    7. 'sz' → logprob: -6.294466972351074
    8. 'eat' → logprob: -6.544466972351074
    9. ' eat' → logprob: -7.419466972351074
    10. 'seat' → logprob: -7.544466972351074

Token 122: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.003716938430443406
    2. '=' → logprob: -5.753716945648193
    3. '=self' → logprob: -7.753716945648193
    4. '{' → logprob: -9.378716468811035
    5. ' ={' → logprob: -11.628716468811035
    6. '=f' → logprob: -11.878716468811035
    7. '=}' → logprob: -12.503716468811035
    8. 'self' → logprob: -13.003716468811035
    9. '=
' → logprob: -13.753716468811035
    10. '={}' → logprob: -14.128716468811035

Token 123: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.566264295950532e-05
    2. '{' → logprob: -10.000085830688477
    3. ' self' → logprob: -10.125085830688477
    4. '
' → logprob: -15.875085830688477
    5. '{
' → logprob: -18.875085830688477
    6. '

' → logprob: -19.250085830688477
    7. ' {' → logprob: -19.750085830688477
    8. '```' → logprob: -19.750085830688477
    9. 'group' → logprob: -20.125085830688477
    10. '(self' → logprob: -20.375085830688477

Token 124: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -1.1517960956552997e-05
    2. 'size' → logprob: -12.125011444091797
    3. '.' → logprob: -12.500011444091797
    4. ' .' → logprob: -13.375011444091797
    5. '.se' → logprob: -14.875011444091797
    6. '}.' → logprob: -15.375011444091797
    7. '	size' → logprob: -16.625011444091797
    8. ' size' → logprob: -17.125011444091797
    9. ').' → logprob: -17.250011444091797
    10. '.wait' → logprob: -17.500011444091797

Token 125: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3939529359340668
    2. ')"' → logprob: -1.1439529657363892
    3. ')' → logprob: -5.2689528465271
    4. '}"' → logprob: -7.0189528465271
    5. '"' → logprob: -8.643953323364258
    6. ')}' → logprob: -8.643953323364258
    7. '})' → logprob: -8.768953323364258
    8. ' )' → logprob: -9.018953323364258
    9. ' ,' → logprob: -9.143953323364258
    10. ')">' → logprob: -9.518953323364258

Token 126: ' eat' (ID: 11237)
  Prédit: ' eat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' eat' → logprob: -0.361702024936676
    2. 'eat' → logprob: -1.7367019653320312
    3. ' wait' → logprob: -2.2367019653320312
    4. ' seat' → logprob: -4.611701965332031
    5. 'wait' → logprob: -4.736701965332031
    6. 'seat' → logprob: -7.486701965332031
    7. ' et' → logprob: -8.236701965332031
    8. 'et' → logprob: -8.861701965332031
    9. ' eet' → logprob: -8.986701965332031
    10. ' time' → logprob: -9.111701965332031

Token 127: '={' (ID: 1693)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0019383925246074796
    2. '=_' → logprob: -6.751938343048096
    3. 'time' → logprob: -8.126938819885254
    4. '_t' → logprob: -8.376938819885254
    5. '=' → logprob: -8.501938819885254
    6. '=time' → logprob: -11.501938819885254
    7. '_' → logprob: -11.751938819885254
    8. 't' → logprob: -12.501938819885254
    9. 'Time' → logprob: -12.626938819885254
    10. ' _' → logprob: -12.751938819885254

Token 128: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4742163121700287
    2. '{' → logprob: -0.9742163419723511
    3. ' self' → logprob: -8.97421646118164
    4. '{
' → logprob: -12.34921646118164
    5. '
' → logprob: -13.09921646118164
    6. ' {' → logprob: -13.34921646118164
    7. '(self' → logprob: -13.84921646118164
    8. '{s' → logprob: -13.84921646118164
    9. '=self' → logprob: -14.09921646118164
    10. '[self' → logprob: -14.34921646118164

Token 129: '.e' (ID: 2560)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.9981420336989686e-05
    2. 'time' → logprob: -11.500020027160645
    3. '._' → logprob: -12.125020027160645
    4. 'eat' → logprob: -12.750020027160645
    5. '_wait' → logprob: -15.000020027160645
    6. ')_' → logprob: -15.375020027160645
    7. '.time' → logprob: -15.875020027160645
    8. 'e' → logprob: -16.125019073486328
    9. '}_' → logprob: -16.375019073486328
    10. '_e' → logprob: -16.375019073486328

Token 130: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.002856232225894928
    2. '_time' → logprob: -6.002856254577637
    3. 'time' → logprob: -8.127856254577637
    4. 'altime' → logprob: -10.877856254577637
    5. '_at' → logprob: -11.127856254577637
    6. 'atetime' → logprob: -11.377856254577637
    7. 'ating' → logprob: -12.127856254577637
    8. 'att' → logprob: -12.127856254577637
    9. 'Time' → logprob: -12.252856254577637
    10. 'ат' → logprob: -12.377856254577637

Token 131: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0003221150254830718
    2. 'time' → logprob: -8.250322341918945
    3. 'ime' → logprob: -11.375322341918945
    4. ')' → logprob: -11.625322341918945
    5. '}_' → logprob: -12.000322341918945
    6. '}' → logprob: -12.375322341918945
    7. '_' → logprob: -12.500322341918945
    8. ' _' → logprob: -12.500322341918945
    9. '_t' → logprob: -12.500322341918945
    10. ')_' → logprob: -12.875322341918945

Token 132: '})' (ID: 9263)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.043977998197078705
    2. '})' → logprob: -3.543977975845337
    3. '}"' → logprob: -4.918978214263916
    4. ')' → logprob: -5.543978214263916
    5. ')}' → logprob: -6.168978214263916
    6. ',' → logprob: -7.543978214263916
    7. ' )' → logprob: -9.668977737426758
    8. '}")' → logprob: -9.668977737426758
    9. '))' → logprob: -9.918977737426758
    10. ')")' → logprob: -10.668977737426758

Token 133: '"


' (ID: 36470)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06408903002738953
    2. ')"' → logprob: -2.814089059829712
    3. '}"' → logprob: -6.439088821411133
    4. '")' → logprob: -8.564088821411133
    5. ')' → logprob: -8.814088821411133
    6. '"
' → logprob: -9.439088821411133
    7. '"}' → logprob: -10.189088821411133
    8. '"""' → logprob: -11.064088821411133
    9. '```' → logprob: -11.314088821411133
    10. '\n' → logprob: -12.064088821411133

Token 134: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.014128131791949272
    2. 'class' → logprob: -4.7641282081604
    3. '   ' → logprob: -6.2641282081604
    4. ' class' → logprob: -7.1391282081604
    5. '\n' → logprob: -7.1391282081604
    6. '    
' → logprob: -7.7641282081604
    7. ' 
' → logprob: -8.389127731323242
    8. 'def' → logprob: -8.389127731323242
    9. '' → logprob: -8.639127731323242
    10. ' ' → logprob: -8.639127731323242

Token 135: ' Seating' (ID: 166017)
  Prédit: ' Table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Table' → logprob: -0.9346563220024109
    2. ' Restaurant' → logprob: -1.0596563816070557
    3. ' Seat' → logprob: -2.6846563816070557
    4. ' Dining' → logprob: -3.5596563816070557
    5. ' Reservation' → logprob: -3.5596563816070557
    6. ' Simulator' → logprob: -3.6846563816070557
    7. ' Queue' → logprob: -3.9346563816070557
    8. ' Seating' → logprob: -4.184656143188477
    9. ' Scheduler' → logprob: -4.309656143188477
    10. ' Simulation' → logprob: -4.309656143188477

Token 136: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026962872594594955
    2. 'Manager' → logprob: -4.026962757110596
    3. ':
' → logprob: -4.901962757110596
    4. '():' → logprob: -7.901962757110596
    5. 'Arrangement' → logprob: -8.651963233947754
    6. 'Strategy' → logprob: -8.901963233947754
    7. 'System' → logprob: -9.151963233947754
    8. 'Scheduler' → logprob: -9.401963233947754
    9. 'Queue' → logprob: -9.401963233947754
    10. 'Plan' → logprob: -9.651963233947754

Token 137: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.41434556245803833
    2. '   ' → logprob: -1.1643455028533936
    3. ':
' → logprob: -3.7893455028533936
    4. 'def' → logprob: -5.789345741271973
    5. ' def' → logprob: -6.664345741271973
    6. ':def' → logprob: -9.914345741271973
    7. '(' → logprob: -10.414345741271973
    8. '	def' → logprob: -10.664345741271973
    9. '():' → logprob: -11.664345741271973
    10. '  ' → logprob: -12.039345741271973

Token 138: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0630805715918541
    2. 'def' (adapté à ' def') → logprob: -2.8130805492401123
    3. '   ' → logprob: -6.813080787658691
    4. ' ' → logprob: -12.438080787658691
    5. 'de' → logprob: -13.188080787658691
    6. 'class' → logprob: -13.438080787658691
    7. '    ' → logprob: -13.688080787658691
    8. ' de' → logprob: -13.813080787658691
    9. 'import' → logprob: -14.313080787658691
    10. '	def' → logprob: -14.313080787658691

Token 139: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.008082936517894268
    2. '_init' → logprob: -5.258082866668701
    3. ' init' → logprob: -6.383082866668701
    4. 'init' → logprob: -7.133082866668701
    5. '__' → logprob: -8.00808334350586
    6. ' def' → logprob: -11.50808334350586
    7. ' ' → logprob: -12.38308334350586
    8. '_' → logprob: -12.63308334350586
    9. ' ' → logprob: -12.75808334350586
    10. ' _' → logprob: -13.00808334350586

Token 140: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'def' → logprob: -16.25
    3. ' init' → logprob: -17.0
    4. 'int' → logprob: -17.25
    5. 'ini' → logprob: -17.75
    6. 'iter' → logprob: -18.5
    7. '```' → logprob: -19.125
    8. 'inite' → logprob: -19.25
    9. '
' → logprob: -19.25
    10. '   ' → logprob: -19.875

Token 141: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0002671768015716225
    2. '(self' → logprob: -8.375267028808594
    3. '__' → logprob: -10.625267028808594
    4. '_(' → logprob: -11.500267028808594
    5. '__(
' → logprob: -13.250267028808594
    6. '(' → logprob: -15.875267028808594
    7. 'self' → logprob: -16.000267028808594
    8. ' (' → logprob: -17.125267028808594
    9. '__('' → logprob: -17.250267028808594
    10. '__((' → logprob: -17.250267028808594

Token 142: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004486653197091073
    2. ' self' → logprob: -7.750448703765869
    3. ')' → logprob: -11.750448226928711
    4. '
' → logprob: -11.875448226928711
    5. '   ' → logprob: -13.500448226928711
    6. '       ' → logprob: -14.625448226928711
    7. 'se' → logprob: -14.875448226928711
    8. '):
' → logprob: -15.125448226928711
    9. '0' → logprob: -15.250448226928711
    10. '	self' → logprob: -16.62544822692871

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13236817717552185
    2. 'self' → logprob: -2.2573680877685547
    3. ' self' → logprob: -4.257368087768555
    4. ' ,' → logprob: -5.882368087768555
    5. '):
' → logprob: -6.757368087768555
    6. '   ' → logprob: -7.632368087768555
    7. '):' → logprob: -8.382368087768555
    8. '(self' → logprob: -9.132368087768555
    9. '_self' → logprob: -9.257368087768555
    10. ' (' → logprob: -9.882368087768555

Token 144: ' seats' (ID: 24992)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.23338618874549866
    2. 'capacity' → logprob: -2.358386278152466
    3. 'tables' → logprob: -3.608386278152466
    4. 'num' → logprob: -3.733386278152466
    5. 'groups' → logprob: -3.983386278152466
    6. ' self' → logprob: -4.483386039733887
    7. 'se' → logprob: -4.858386039733887
    8. ' capacity' → logprob: -5.233386039733887
    9. 'table' → logprob: -5.358386039733887
    10. 'max' → logprob: -5.858386039733887

Token 145: '_count' (ID: 7536)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3015570640563965
    2. '):' → logprob: -1.8015570640563965
    3. '_count' → logprob: -2.4265570640563965
    4. ':int' → logprob: -5.9265570640563965
    5. '):
' → logprob: -6.5515570640563965
    6. '=' → logprob: -7.1765570640563965
    7. '_size' → logprob: -8.176557540893555
    8. '_num' → logprob: -8.176557540893555
    9. '_total' → logprob: -8.176557540893555
    10. ',' → logprob: -8.551557540893555

Token 146: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6375671625137329
    2. ':' → logprob: -0.7625671625137329
    3. ' ):' → logprob: -6.012567043304443
    4. '=' → logprob: -6.887567043304443
    5. '):
' → logprob: -7.387567043304443
    6. ':int' → logprob: -8.012567520141602
    7. ')' → logprob: -8.387567520141602
    8. ' :' → logprob: -8.387567520141602
    9. ',' → logprob: -9.637567520141602
    10. '   ' → logprob: -13.012567520141602

Token 147: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04361220449209213
    2. ' int' → logprob: -3.168612241744995
    3. '10' → logprob: -8.168612480163574
    4. '   ' → logprob: -9.918612480163574
    5. '20' → logprob: -9.918612480163574
    6. '5' → logprob: -10.043612480163574
    7. '7' → logprob: -10.293612480163574
    8. '6' → logprob: -10.418612480163574
    9. '8' → logprob: -11.168612480163574
    10. '4' → logprob: -11.543612480163574

Token 148: ' =' (ID: 314)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00487614655867219
    2. ',' → logprob: -6.004876136779785
    3. '):
' → logprob: -6.254876136779785
    4. ' ):' → logprob: -7.879876136779785
    5. ')' → logprob: -9.879876136779785
    6. ':' → logprob: -10.504876136779785
    7. '   ' → logprob: -11.504876136779785
    8. '=' → logprob: -12.754876136779785
    9. '       ' → logprob: -13.254876136779785
    10. '):
' → logprob: -13.504876136779785

Token 149: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2926599979400635
    2. ' ' → logprob: -2.4176599979400635
    3. '20' → logprob: -2.7926599979400635
    4. '5' → logprob: -3.5426599979400635
    5. '8' → logprob: -4.167659759521484
    6. '12' → logprob: -4.292659759521484
    7. '6' → logprob: -4.667659759521484
    8. '4' → logprob: -5.167659759521484
    9. '15' → logprob: -5.167659759521484
    10. '30' → logprob: -5.667659759521484

Token 150: '17' (ID: 1422)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5241944193840027
    2. '20' → logprob: -2.0241944789886475
    3. '5' → logprob: -2.6491944789886475
    4. '15' → logprob: -3.3991944789886475
    5. '12' → logprob: -3.5241944789886475
    6. '25' → logprob: -3.8991944789886475
    7. '30' → logprob: -4.024194240570068
    8. '8' → logprob: -4.149194240570068
    9. '50' → logprob: -4.274194240570068
    10. '7' → logprob: -4.399194240570068

Token 151: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03190520405769348
    2. '):
' → logprob: -3.531905174255371
    3. ',' → logprob: -6.156905174255371
    4. '):
' → logprob: -11.031905174255371
    5. ')' → logprob: -11.906905174255371
    6. '   ' → logprob: -12.406905174255371
    7. ' ):' → logprob: -12.531905174255371
    8. '       ' → logprob: -13.906905174255371
    9. ':' → logprob: -14.031905174255371
    10. '):

' → logprob: -14.781905174255371

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.994086627149954e-05
    2. 'self' → logprob: -10.125080108642578
    3. ',' → logprob: -10.875080108642578
    4. ':' → logprob: -11.750080108642578
    5. '   ' → logprob: -12.375080108642578
    6. ' self' → logprob: -12.500080108642578
    7. '):
' → logprob: -13.875080108642578
    8. '<|end|>' → logprob: -14.250080108642578
    9. '	' → logprob: -14.375080108642578
    10. ')' → logprob: -14.750080108642578

Token 153: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00013166792632546276
    2. ' self' → logprob: -9.250131607055664
    3. '       ' → logprob: -10.250131607055664
    4. '   ' → logprob: -15.750131607055664
    5. 'super' → logprob: -17.375131607055664
    6. '	self' → logprob: -18.750131607055664
    7. 'se' → logprob: -19.500131607055664
    8. 'def' → logprob: -20.375131607055664
    9. ' ' → logprob: -21.125131607055664
    10. '           ' → logprob: -22.125131607055664

Token 154: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -0.0046129957772791386
    2. '.' → logprob: -5.879612922668457
    3. 'se' → logprob: -7.004612922668457
    4. '_se' → logprob: -8.379612922668457
    5. '.count' → logprob: -8.504612922668457
    6. ' .' → logprob: -8.879612922668457
    7. '.s' → logprob: -9.629612922668457
    8. '._' → logprob: -9.754612922668457
    9. '.available' → logprob: -10.504612922668457
    10. '.capacity' → logprob: -11.004612922668457

Token 155: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.0008160584256984293
    2. 'at' → logprob: -7.3758158683776855
    3. 'lf' → logprob: -9.500816345214844
    4. 'ated' → logprob: -10.250816345214844
    5. 'ts' → logprob: -11.250816345214844
    6. 'ating' → logprob: -11.438316345214844
    7. 's' → logprob: -12.188316345214844
    8. 'ates' → logprob: -12.188316345214844
    9. ' ats' → logprob: -12.438316345214844
    10. 'a' → logprob: -13.000816345214844

Token 156: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.5099177360534668
    2. ' =' → logprob: -1.1349177360534668
    3. '_' → logprob: -3.259917736053467
    4. '=' → logprob: -3.384917736053467
    5. 's' → logprob: -6.009917736053467
    6. '_counts' → logprob: -6.634917736053467
    7. '_available' → logprob: -7.759917736053467
    8. '   ' → logprob: -8.134918212890625
    9. '_per' → logprob: -8.259918212890625
    10. 'count' → logprob: -8.759918212890625

Token 157: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931493282318115
    2. ' =' → logprob: -0.6931493282318115
    3. ' ' → logprob: -14.19314956665039
    4. '   ' → logprob: -14.31814956665039
    5. ')' → logprob: -15.06814956665039
    6. '    ' → logprob: -15.56814956665039
    7. ',' → logprob: -15.81814956665039
    8. '  ' → logprob: -15.81814956665039
    9. ':' → logprob: -16.94314956665039
    10. '=int' → logprob: -17.44314956665039

Token 158: ' seats' (ID: 24992)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.1805657595396042
    2. ' seats' → logprob: -1.8055657148361206
    3. '17' → logprob: -7.18056583404541
    4. ' ' → logprob: -10.30556583404541
    5. '   ' → logprob: -11.68056583404541
    6. 'seat' → logprob: -12.30556583404541
    7. '16' → logprob: -13.43056583404541
    8. '```' → logprob: -13.68056583404541
    9. '  ' → logprob: -13.80556583404541
    10. ' se' → logprob: -13.86806583404541

Token 159: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.015530163422226906
    2. 't' → logprob: -4.265530109405518
    3. 'ts' → logprob: -7.265530109405518
    4. 'nt' → logprob: -8.765530586242676
    5. 'nts' → logprob: -8.765530586242676
    6. 's' → logprob: -9.640530586242676
    7. ' _' → logprob: -9.890530586242676
    8. ' ' → logprob: -10.015530586242676
    9. '_' → logprob: -10.140530586242676
    10. '   ' → logprob: -10.265530586242676

Token 160: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015064558014273643
    2. '
' → logprob: -4.640064716339111
    3. 'self' → logprob: -5.390064716339111
    4. '<|end|>' → logprob: -8.015064239501953
    5. ' self' → logprob: -8.515064239501953
    6. ',' → logprob: -9.140064239501953
    7. ',
' → logprob: -10.515064239501953
    8. '   ' → logprob: -10.765064239501953
    9. '(self' → logprob: -11.765064239501953
    10. '        
' → logprob: -11.890064239501953

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00386135489679873
    2. 'self' → logprob: -5.628861427307129
    3. ' self' → logprob: -8.503861427307129
    4. '   ' → logprob: -10.503861427307129
    5. '
' → logprob: -11.128861427307129
    6. ',' → logprob: -12.003861427307129
    7. '<|end|>' → logprob: -12.253861427307129
    8. '	self' → logprob: -13.878861427307129
    9. ' ' → logprob: -14.128861427307129
    10. '(self' → logprob: -14.378861427307129

Token 162: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00036787090357393026
    2. '[' → logprob: -8.875368118286133
    3. '[self' → logprob: -9.250368118286133
    4. ' self' → logprob: -10.250368118286133
    5. '[]' → logprob: -10.375368118286133
    6. '       ' → logprob: -10.750368118286133
    7. '   ' → logprob: -11.250368118286133
    8. '0' → logprob: -11.375368118286133
    9. 'se' → logprob: -11.500368118286133
    10. '['' → logprob: -13.375368118286133

Token 163: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -0.17156676948070526
    2. '.groups' → logprob: -2.2965667247772217
    3. '.available' → logprob: -3.7965667247772217
    4. '.free' → logprob: -4.921566963195801
    5. '.wait' → logprob: -5.046566963195801
    6. '.' → logprob: -5.171566963195801
    7. 'se' → logprob: -5.296566963195801
    8. '.tables' → logprob: -5.921566963195801
    9. '.queue' → logprob: -6.171566963195801
    10. '._' → logprob: -7.296566963195801

Token 164: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.11013039946556091
    2. 'ated' → logprob: -2.4851303100585938
    3. 'at' → logprob: -4.110130310058594
    4. 'ating' → logprob: -6.485130310058594
    5. 'lected' → logprob: -8.047630310058594
    6. 'quences' → logprob: -8.172630310058594
    7. 'atings' → logprob: -8.485130310058594
    8. 'gments' → logprob: -8.672630310058594
    9. 'lf' → logprob: -8.860130310058594
    10. 'a' → logprob: -8.922630310058594

Token 165: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693178653717041
    2. ' =' → logprob: -0.693178653717041
    3. '=[]' → logprob: -11.193178176879883
    4. ':' → logprob: -11.568178176879883
    5. '   ' → logprob: -12.943178176879883
    6. ')' → logprob: -13.818178176879883
    7. 's' → logprob: -13.818178176879883
    8. '[' → logprob: -14.193178176879883
    9. '_' → logprob: -14.318178176879883
    10. ' ' → logprob: -14.568178176879883

Token 166: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25198477506637573
    2. ' [' → logprob: -1.5019848346710205
    3. '[n' → logprob: -10.876984596252441
    4. '[]' → logprob: -11.876984596252441
    5. '[-' → logprob: -12.376984596252441
    6. '   ' → logprob: -12.501984596252441
    7. '[int' → logprob: -12.626984596252441
    8. '[self' → logprob: -13.501984596252441
    9. '[N' → logprob: -13.501984596252441
    10. '['' → logprob: -13.626984596252441

Token 167: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.007965383119881153
    2. 'False' → logprob: -5.382965564727783
    3. 'True' → logprob: -7.007965564727783
    4. '[]' → logprob: -7.132965564727783
    5. '0' → logprob: -7.257965564727783
    6. ' None' → logprob: -7.757965564727783
    7. '-' → logprob: -8.257965087890625
    8. '(None' → logprob: -9.132965087890625
    9. '   ' → logprob: -10.007965087890625
    10. '[' → logprob: -10.132965087890625

Token 168: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01691111922264099
    2. ' for' → logprob: -4.391911029815674
    3. ' ]' → logprob: -5.516911029815674
    4. ']*' → logprob: -8.016911506652832
    5. 'for' → logprob: -10.516911506652832
    6. ',' → logprob: -11.766911506652832
    7. ')' → logprob: -12.141911506652832
    8. '}' → logprob: -14.141911506652832
    9. '   ' → logprob: -14.391911506652832
    10. ']*(' → logprob: -14.516911506652832

Token 169: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09236883372068405
    2. ']' → logprob: -3.3423688411712646
    3. '*' → logprob: -3.5923688411712646
    4. 'for' → logprob: -4.0923686027526855
    5. ' *' → logprob: -5.8423686027526855
    6. '(se' → logprob: -6.3423686027526855
    7. ')' → logprob: -6.4673686027526855
    8. ']*' → logprob: -7.4673686027526855
    9. '       ' → logprob: -7.7173686027526855
    10. '(' → logprob: -7.8423686027526855

Token 170: ' self' (ID: 1051)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.0015934114344418049
    2. 'self' → logprob: -6.751593589782715
    3. ' seats' → logprob: -7.876593589782715
    4. '17' → logprob: -10.126593589782715
    5. ' self' → logprob: -13.376593589782715
    6. '   ' → logprob: -14.126593589782715
    7. 'seat' → logprob: -14.501593589782715
    8. '	se' → logprob: -15.751593589782715
    9. ' ' → logprob: -16.2515926361084
    10. '```' → logprob: -16.2515926361084

Token 171: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -0.029823167249560356
    2. 'se' → logprob: -3.529823064804077
    3. '.' → logprob: -9.779823303222656
    4. '	se' → logprob: -11.904823303222656
    5. 's' → logprob: -12.529823303222656
    6. '_se' → logprob: -12.904823303222656
    7. '.s' → logprob: -13.904823303222656
    8. 'Seats' → logprob: -14.404823303222656
    9. ' .' → logprob: -14.654823303222656
    10. '._' → logprob: -15.029823303222656

Token 172: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -4.8351892473874614e-05
    2. 'at' → logprob: -10.625048637390137
    3. 's' → logprob: -11.125048637390137
    4. ' ats' → logprob: -13.375048637390137
    5. 'ts' → logprob: -13.500048637390137
    6. 'a' → logprob: -13.750048637390137
    7. 'ates' → logprob: -14.125048637390137
    8. 'atso' → logprob: -14.625048637390137
    9. 'nts' → logprob: -14.750048637390137
    10. 'ets' → logprob: -15.125048637390137

Token 173: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -9.372294698550832e-06
    2. 'count' → logprob: -11.750009536743164
    3. 's' → logprob: -14.625009536743164
    4. '_' → logprob: -15.500009536743164
    5. 'Count' → logprob: -15.500009536743164
    6. '_COUNT' → logprob: -15.875009536743164
    7. '_counts' → logprob: -15.875009536743164
    8. '_se' → logprob: -16.750009536743164
    9. '[' → logprob: -17.000009536743164
    10. '._' → logprob: -17.500009536743164

Token 174: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.190146803855896
    2. '<|end|>' → logprob: -2.0651469230651855
    3. '       ' → logprob: -3.1901469230651855
    4. 'self' → logprob: -6.5651469230651855
    5. 'def' → logprob: -7.0651469230651855
    6. '   ' → logprob: -7.1901469230651855
    7. '<|end|>' → logprob: -7.6901469230651855
    8. ' self' → logprob: -8.065146446228027
    9. '    
' → logprob: -8.065146446228027
    10. ',' → logprob: -8.690146446228027

Token 175: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: ' None' (ID: 4662)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4189052879810333
    2. ' [' → logprob: -1.918905258178711
    3. ' list' → logprob: -2.668905258178711
    4. 'None' → logprob: -3.543905258178711
    5. 'List' → logprob: -4.293905258178711
    6. 'list' → logprob: -4.293905258178711
    7. ' None' → logprob: -4.293905258178711
    8. 'se' → logprob: -4.418905258178711
    9. ' seats' → logprob: -4.543905258178711
    10. '[]' → logprob: -4.793905258178711

Token 177: ' or' (ID: 503)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: ' Group' (ID: 7849)
  Prédit: 'Group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Group' → logprob: -0.17845518887043
    2. ' Group' → logprob: -1.9284552335739136
    3. ' group' → logprob: -5.178455352783203
    4. 'a' → logprob: -5.303455352783203
    5. 'group' → logprob: -5.428455352783203
    6. ' a' → logprob: -6.553455352783203
    7. 'instance' → logprob: -7.928455352783203
    8. 'occupied' → logprob: -8.428455352783203
    9. ' instance' → logprob: -9.053455352783203
    10. '<Group' → logprob: -9.053455352783203

Token 179: ' index' (ID: 3472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 180: ' seated' (ID: 77168)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 181: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8423311114311218
    2. 'self' → logprob: -1.4673311710357666
    3. '<|end|>' → logprob: -1.5923311710357666
    4. 'def' → logprob: -2.9673311710357666
    5. '   ' → logprob: -3.2173311710357666
    6. ' self' → logprob: -3.5923311710357666
    7. '<|end|>' → logprob: -5.8423309326171875
    8. ',' → logprob: -6.0923309326171875
    9. ' ' → logprob: -6.0923309326171875
    10. '	self' → logprob: -6.0923309326171875

Token 182: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 183: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0008909751777537167
    2. '   ' → logprob: -7.625891208648682
    3. ' def' → logprob: -8.125890731811523
    4. 'self' → logprob: -9.875890731811523
    5. ')' → logprob: -10.625890731811523
    6. 'de' → logprob: -11.125890731811523
    7. '       ' → logprob: -12.250890731811523
    8. ' ' → logprob: -13.250890731811523
    9. ']' → logprob: -13.250890731811523
    10. '```' → logprob: -13.375890731811523

Token 184: ' can' (ID: 665)
  Prédit: ' seat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seat' → logprob: -0.23329630494117737
    2. 'seat' → logprob: -2.4832963943481445
    3. ' find' → logprob: -2.7332963943481445
    4. 'find' → logprob: -3.2332963943481445
    5. 'se' → logprob: -5.4832963943481445
    6. ' seats' → logprob: -6.2332963943481445
    7. ' available' → logprob: -6.2332963943481445
    8. 'can' → logprob: -6.2332963943481445
    9. 'available' → logprob: -6.4832963943481445
    10. ' can' → logprob: -6.4832963943481445

Token 185: '_se' (ID: 7123)
  Prédit: '_se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_se' → logprob: -0.025416960939764977
    2. '_' → logprob: -4.275416851043701
    3. '_s' → logprob: -5.150416851043701
    4. '_take' → logprob: -6.400416851043701
    5. '_accept' → logprob: -6.775416851043701
    6. '_ac' → logprob: -7.650416851043701
    7. '_allocate' → logprob: -7.775416851043701
    8. '_place' → logprob: -7.775416851043701
    9. '_use' → logprob: -8.27541732788086
    10. '_fit' → logprob: -8.52541732788086

Token 186: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.3782830137643032e-05
    2. 'ated' → logprob: -12.75001335144043
    3. 'ат' → logprob: -13.37501335144043
    4. 'ed' → logprob: -13.62501335144043
    5. '```' → logprob: -13.87501335144043
    6. '_at' → logprob: -14.00001335144043
    7. 'ate' → logprob: -14.12501335144043
    8. ' at' → logprob: -14.12501335144043
    9. 't' → logprob: -14.25001335144043
    10. 'quence' → logprob: -14.25001335144043

Token 187: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03091704659163952
    2. '(' → logprob: -3.530916929244995
    3. ' (' → logprob: -7.280917167663574
    4. 'self' → logprob: -8.155917167663574
    5. '(
' → logprob: -9.530917167663574
    6. ' self' → logprob: -9.780917167663574
    7. '_' → logprob: -10.405917167663574
    8. '(s' → logprob: -12.405917167663574
    9. '_next' → logprob: -12.530917167663574
    10. '_at' → logprob: -12.655917167663574

Token 188: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3782699704170227
    2. 'self' → logprob: -1.878269910812378
    3. ',' → logprob: -2.253269910812378
    4. ' self' → logprob: -3.003269910812378
    5. ' (' → logprob: -6.128270149230957
    6. ')' → logprob: -6.128270149230957
    7. ' at' → logprob: -6.503270149230957
    8. ' ,' → logprob: -7.878270149230957
    9. '(' → logprob: -8.128270149230957
    10. ',self' → logprob: -8.628270149230957

Token 189: ' group' (ID: 3566)
  Prédit: ' group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.538233757019043
    2. 'group' → logprob: -0.913233757019043
    3. 'start' → logprob: -5.413233757019043
    4. 'self' → logprob: -5.663233757019043
    5. ' start' → logprob: -5.913233757019043
    6. 'size' → logprob: -6.538233757019043
    7. ' size' → logprob: -6.788233757019043
    8. ' self' → logprob: -7.163233757019043
    9. 'index' → logprob: -7.538233757019043
    10. ' index' → logprob: -8.663233757019043

Token 190: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41658952832221985
    2. ':' → logprob: -1.7915894985198975
    3. '):' → logprob: -2.1665894985198975
    4. '_index' → logprob: -3.1665894985198975
    5. ' ,' → logprob: -5.291589736938477
    6. 'index' → logprob: -5.416589736938477
    7. '_size' → logprob: -5.791589736938477
    8. ' ):' → logprob: -6.416589736938477
    9. '):
' → logprob: -7.041589736938477
    10. ')' → logprob: -7.041589736938477

Token 191: ' Group' (ID: 7849)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.2704601287841797
    2. ')' → logprob: -2.1454601287841797
    3. ' )' → logprob: -2.5204601287841797
    4. 'group' → logprob: -3.6454601287841797
    5. ' ):' → logprob: -5.39546012878418
    6. '):' → logprob: -5.52046012878418
    7. ' ' → logprob: -6.64546012878418
    8. ' ):
' → logprob: -6.64546012878418
    9. '):
' → logprob: -7.27046012878418
    10. 'Group' → logprob: -8.14546012878418

Token 192: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05178669095039368
    2. ')' → logprob: -3.3017866611480713
    3. '):' → logprob: -4.30178689956665
    4. ' ,' → logprob: -9.926786422729492
    5. ' )' → logprob: -10.926786422729492
    6. '   ' → logprob: -11.176786422729492
    7. '):
' → logprob: -11.426786422729492
    8. ' ):' → logprob: -11.926786422729492
    9. ')->' → logprob: -12.926786422729492
    10. '       ' → logprob: -13.676786422729492

Token 193: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.051468897610902786
    2. ')' → logprob: -4.176468849182129
    3. ' ->' → logprob: -4.176468849182129
    4. '->' → logprob: -4.926468849182129
    5. ',' → logprob: -5.051468849182129
    6. '):' → logprob: -5.551468849182129
    7. ')->' → logprob: -6.801468849182129
    8. '       ' → logprob: -8.051468849182129
    9. '   ' → logprob: -8.301468849182129
    10. '(self' → logprob: -9.301468849182129

Token 194: ' int' (ID: 677)
  Prédit: ' bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.6567450761795044
    2. 'bool' → logprob: -0.7817450761795044
    3. 'int' → logprob: -3.906744956970215
    4. ' int' → logprob: -6.031744956970215
    5. ' ' → logprob: -7.156744956970215
    6. ' list' → logprob: -8.906744956970215
    7. 'list' → logprob: -9.031744956970215
    8. 'None' → logprob: -9.781744956970215
    9. '  ' → logprob: -9.906744956970215
    10. '   ' → logprob: -10.031744956970215

Token 195: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.897412822581828e-05
    2. '):' → logprob: -10.375068664550781
    3. ':
' → logprob: -10.625068664550781
    4. '   ' → logprob: -12.625068664550781
    5. '<|end|>' → logprob: -12.875068664550781
    6. ',' → logprob: -13.250068664550781
    7. ' :' → logprob: -13.625068664550781
    8. '():' → logprob: -13.750068664550781
    9. '       ' → logprob: -13.875068664550781
    10. ')' → logprob: -14.375068664550781

Token 196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000575432030018419
    2. ' for' → logprob: -8.375575065612793
    3. '   ' → logprob: -9.000575065612793
    4. '<|end|>' → logprob: -10.000575065612793
    5. '    ' → logprob: -10.125575065612793
    6. ' ' → logprob: -10.250575065612793
    7. ':' → logprob: -10.375575065612793
    8. ',' → logprob: -11.125575065612793
    9. '      ' → logprob: -11.250575065612793
    10. '        
' → logprob: -11.250575065612793

Token 197: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4739973247051239
    2. 'for' → logprob: -1.3489973545074463
    3. ' n' → logprob: -3.8489973545074463
    4. 'count' → logprob: -4.098997116088867
    5. '       ' → logprob: -4.473997116088867
    6. 'n' → logprob: -4.473997116088867
    7. ' i' → logprob: -4.473997116088867
    8. 'start' → logprob: -4.723997116088867
    9. ' length' → logprob: -5.473997116088867
    10. 'se' → logprob: -5.598997116088867

Token 198: ' Find' (ID: 9764)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4790418148040771
    2. ' for' → logprob: -1.9790418148040771
    3. 'n' → logprob: -2.104041814804077
    4. 'count' → logprob: -2.354041814804077
    5. ' n' → logprob: -3.104041814804077
    6. 'con' → logprob: -3.479041814804077
    7. ' consecutive' → logprob: -3.604041814804077
    8. 'se' → logprob: -3.729041814804077
    9. 'needed' → logprob: -3.854041814804077
    10. 'size' → logprob: -3.854041814804077

Token 199: ' first' (ID: 1577)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7418093085289001
    2. ' a' → logprob: -2.116809368133545
    3. ' first' → logprob: -2.241809368133545
    4. ' next' → logprob: -2.991809368133545
    5. ' i' → logprob: -3.116809368133545
    6. 'se' → logprob: -3.366809368133545
    7. ' for' → logprob: -3.866809368133545
    8. ' free' → logprob: -3.866809368133545
    9. ' available' → logprob: -4.241809368133545
    10. 'the' → logprob: -4.616809368133545

Token 200: ' block' (ID: 4355)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8153178095817566
    2. ' seat' → logprob: -0.9403178095817566
    3. ' index' → logprob: -2.4403178691864014
    4. ' ' → logprob: -3.3153178691864014
    5. ' available' → logprob: -4.690317630767822
    6. ' idx' → logprob: -5.690317630767822
    7. 'index' → logprob: -5.690317630767822
    8. '_' → logprob: -5.690317630767822
    9. 'seat' → logprob: -5.815317630767822
    10. ' sequence' → logprob: -6.065317630767822

Token 201: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.4975149631500244
    2. '<|end|>' → logprob: -0.9975149631500244
    3. ' ' → logprob: -4.497514724731445
    4. '<|end|>' → logprob: -5.372514724731445
    5. '_' → logprob: -5.997514724731445
    6. '    ' → logprob: -6.622514724731445
    7. '   ' → logprob: -6.622514724731445
    8. 'of' → logprob: -7.872514724731445
    9. '[]' → logprob: -8.247514724731445
    10. 's' → logprob: -8.372514724731445

Token 202: ' consecutive' (ID: 40840)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.9754621982574463
    2. 'self' → logprob: -1.1004621982574463
    3. 'se' → logprob: -1.7254621982574463
    4. ' seats' → logprob: -2.8504621982574463
    5. ' consecutive' → logprob: -4.225461959838867
    6. 'con' → logprob: -4.475461959838867
    7. ' contiguous' → logprob: -4.600461959838867
    8. ' free' → logprob: -5.725461959838867
    9. ' group' → logprob: -5.850461959838867
    10. ' ' → logprob: -5.850461959838867

Token 203: ' free' (ID: 2240)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.7353873252868652
    2. ' None' → logprob: -0.8603873252868652
    3. ' seats' → logprob: -3.2353873252868652
    4. ' free' → logprob: -3.7353873252868652
    5. ' self' → logprob: -4.110387325286865
    6. 'se' → logprob: -4.860387325286865
    7. 'self' → logprob: -5.235387325286865
    8. ' empty' → logprob: -5.860387325286865
    9. ' available' → logprob: -7.610387325286865
    10. ' ' → logprob: -7.985387325286865

Token 204: ' seats' (ID: 24992)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.4296264946460724
    2. ' seats' → logprob: -1.05462646484375
    3. ' ' → logprob: -8.17962646484375
    4. '   ' → logprob: -8.92962646484375
    5. '_se' → logprob: -9.17962646484375
    6. 'spaces' → logprob: -9.30462646484375
    7. ' spaces' → logprob: -9.55462646484375
    8. 's' → logprob: -9.80462646484375
    9. '       ' → logprob: -9.92962646484375
    10. 'seat' → logprob: -10.55462646484375

Token 205: ' of' (ID: 328)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5199493169784546
    2. '(' → logprob: -1.1449493169784546
    3. '   ' → logprob: -3.769949436187744
    4. ' ' → logprob: -4.019949436187744
    5. '       ' → logprob: -4.394949436187744
    6. ',' → logprob: -4.769949436187744
    7. '[' → logprob: -5.394949436187744
    8. '_' → logprob: -5.769949436187744
    9. ' (' → logprob: -5.769949436187744
    10. '<|end|>' → logprob: -6.144949436187744

Token 206: ' length' (ID: 5517)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -1.2299901247024536
    2. ' group' → logprob: -1.6049901247024536
    3. ' at' → logprob: -1.7299901247024536
    4. 'size' → logprob: -1.8549901247024536
    5. ' size' → logprob: -1.9799901247024536
    6. 'length' → logprob: -4.104990005493164
    7. ' length' → logprob: -4.229990005493164
    8. 'at' → logprob: -6.354990005493164
    9. 'self' → logprob: -6.479990005493164
    10. ' self' → logprob: -8.729990005493164

Token 207: ' group' (ID: 3566)
  Prédit: ' group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.4741690456867218
    2. 'group' → logprob: -0.9741690158843994
    3. '(group' → logprob: -10.09916877746582
    4. '[group' → logprob: -10.34916877746582
    5. ' at' → logprob: -12.84916877746582
    6. '	group' → logprob: -12.97416877746582
    7. '"group' → logprob: -12.97416877746582
    8. '>=' → logprob: -12.97416877746582
    9. '`' → logprob: -13.34916877746582
    10. ' >=' → logprob: -13.47416877746582

Token 208: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.029241804033517838
    2. 'size' → logprob: -3.6542418003082275
    3. ' size' → logprob: -6.029242038726807
    4. ' .' → logprob: -7.904242038726807
    5. '.group' → logprob: -9.529241561889648
    6. '.' → logprob: -10.279241561889648
    7. '_size' → logprob: -10.904241561889648
    8. '   ' → logprob: -11.279241561889648
    9. '       ' → logprob: -12.154241561889648
    10. '	size' → logprob: -12.404241561889648

Token 209: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3130321204662323
    2. '       ' → logprob: -1.4380321502685547
    3. '   ' → logprob: -4.813032150268555
    4. '
' → logprob: -5.063032150268555
    5. ':
' → logprob: -5.063032150268555
    6. ',' → logprob: -5.188032150268555
    7. '<|end|>' → logprob: -6.563032150268555
    8. ' in' → logprob: -7.063032150268555
    9. '(' → logprob: -8.313032150268555
    10. ' ' → logprob: -8.563032150268555

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3552107512950897
    2. ':' → logprob: -1.230210781097412
    3. '   ' → logprob: -5.355210781097412
    4. ':
' → logprob: -7.480210781097412
    5. ',' → logprob: -7.605210781097412
    6. ' :' → logprob: -8.480210304260254
    7. '<|end|>' → logprob: -8.980210304260254
    8. '        
' → logprob: -9.605210304260254
    9. '
' → logprob: -9.730210304260254
    10. ' for' → logprob: -9.855210304260254

Token 211: ' count' (ID: 3605)
  Prédit: ' free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' free' → logprob: -0.5027230381965637
    2. '       ' → logprob: -1.752722978591919
    3. ' n' → logprob: -2.252722978591919
    4. ' count' → logprob: -3.877722978591919
    5. 'n' → logprob: -4.377723217010498
    6. 'count' (adapté à ' count') → logprob: -4.377723217010498
    7. ' seat' → logprob: -4.502723217010498
    8. 'free' → logprob: -4.502723217010498
    9. ' length' → logprob: -4.627723217010498
    10. ' current' → logprob: -4.627723217010498

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006720705423504114
    2. '=' → logprob: -5.006720542907715
    3. ',' → logprob: -12.381720542907715
    4. ' ' → logprob: -14.131720542907715
    5. '_free' → logprob: -15.506720542907715
    6. '   ' → logprob: -16.13172149658203
    7. '  ' → logprob: -16.88172149658203
    8. 'free' → logprob: -16.88172149658203
    9. '_' → logprob: -16.88172149658203
    10. ' ,' → logprob: -17.63172149658203

Token 213: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34844619035720825
    2. '0' → logprob: -1.2234461307525635
    3. ' ' → logprob: -13.473445892333984
    4. '  ' → logprob: -16.223445892333984
    5. '   ' → logprob: -16.723445892333984
    6. 's' → logprob: -16.785945892333984
    7. '1' → logprob: -17.098445892333984
    8. '=' → logprob: -17.473445892333984
    9. ' =' → logprob: -17.973445892333984
    10. 'self' → logprob: -18.160945892333984

Token 214: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.180879816180095e-05
    2. ' ' → logprob: -9.875051498413086
    3. 'self' → logprob: -15.750051498413086
    4. '   ' → logprob: -17.125051498413086
    5. 'se' → logprob: -17.500051498413086
    6. '1' → logprob: -18.000051498413086
    7. '[' → logprob: -19.062551498413086
    8. '```' → logprob: -19.062551498413086
    9. 'zero' → logprob: -19.750051498413086
    10. '۰' → logprob: -20.187551498413086

Token 215: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 216: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23483164608478546
    2. ' ' → logprob: -2.3598315715789795
    3. 'for' → logprob: -3.4848315715789795
    4. ' 
' → logprob: -3.4848315715789795
    5. ' i' → logprob: -4.359831809997559
    6. '<|end|>' → logprob: -4.984831809997559
    7. ',' → logprob: -5.109831809997559
    8. '
' → logprob: -5.359831809997559
    9. 'i' → logprob: -5.734831809997559
    10. '       ' → logprob: -5.984831809997559

Token 217: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03823954984545708
    2. ' for' → logprob: -3.9132394790649414
    3. 'start' → logprob: -4.788239479064941
    4. '       ' → logprob: -4.913239479064941
    5. 'free' → logprob: -7.163239479064941
    6. 'i' → logprob: -7.413239479064941
    7. 'index' → logprob: -9.288239479064941
    8. ' start' → logprob: -9.913239479064941
    9. 'seat' → logprob: -9.913239479064941
    10. ' free' → logprob: -9.913239479064941

Token 218: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17305652797222137
    2. ' seat' → logprob: -2.1730566024780273
    3. 'i' → logprob: -3.1730566024780273
    4. 'seat' → logprob: -5.798056602478027
    5. ' s' → logprob: -9.548056602478027
    6. ' ' → logprob: -10.673056602478027
    7. ' idx' → logprob: -10.798056602478027
    8. 's' → logprob: -11.048056602478027
    9. '   ' → logprob: -11.423056602478027
    10. 'se' → logprob: -11.923056602478027

Token 219: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020194392651319504
    2. 'in' → logprob: -4.0201945304870605
    3. ' ' → logprob: -6.8951945304870605
    4. ',' → logprob: -7.0201945304870605
    5. ' ,' → logprob: -9.395194053649902
    6. ' i' → logprob: -10.895194053649902
    7. '  ' → logprob: -11.145194053649902
    8. '=' → logprob: -12.645194053649902
    9. 'n' → logprob: -13.520194053649902
    10. '   ' → logprob: -13.645194053649902

Token 220: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47407910227775574
    2. 'range' → logprob: -0.9740791320800781
    3. '	range' → logprob: -14.099079132080078
    4. '   ' → logprob: -14.599079132080078
    5. '(range' → logprob: -15.099079132080078
    6. ' ' → logprob: -15.474079132080078
    7. '  ' → logprob: -15.599079132080078
    8. 'self' → logprob: -17.224079132080078
    9. '    ' → logprob: -17.474079132080078
    10. 're' → logprob: -17.724079132080078

Token 221: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007297091069631279
    2. '(len' → logprob: -7.875729560852051
    3. '(' → logprob: -8.37572956085205
    4. 'self' → logprob: -9.62572956085205
    5. ' self' → logprob: -10.37572956085205
    6. 'len' → logprob: -11.50072956085205
    7. '       ' → logprob: -12.50072956085205
    8. ' (' → logprob: -12.62572956085205
    9. '   ' → logprob: -13.00072956085205
    10. '(
' → logprob: -14.62572956085205

Token 222: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -0.00015109812375158072
    2. 'se' → logprob: -9.750150680541992
    3. '.' → logprob: -10.750150680541992
    4. ' .' → logprob: -10.875150680541992
    5. '	se' → logprob: -11.000150680541992
    6. '   ' → logprob: -11.250150680541992
    7. '_se' → logprob: -11.375150680541992
    8. '.s' → logprob: -12.375150680541992
    9. ').' → logprob: -12.875150680541992
    10. ' seats' → logprob: -14.500150680541992

Token 223: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.00011355629976605996
    2. 'ts' → logprob: -10.500113487243652
    3. 'at' → logprob: -10.625113487243652
    4. 's' → logprob: -11.125113487243652
    5. 'nts' → logprob: -11.250113487243652
    6. 'a' → logprob: -11.875113487243652
    7. '   ' → logprob: -13.062613487243652
    8. 'ates' → logprob: -13.687613487243652
    9. '1' → logprob: -13.750113487243652
    10. '
' → logprob: -13.875113487243652

Token 224: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.3902033970225602e-05
    2. 'count' → logprob: -12.125014305114746
    3. ')' → logprob: -12.875014305114746
    4. '   ' → logprob: -13.500014305114746
    5. '_length' → logprob: -13.500014305114746
    6. '.count' → logprob: -13.875014305114746
    7. '_' → logprob: -14.375014305114746
    8. '       ' → logprob: -15.250014305114746
    9. '_counts' → logprob: -15.250014305114746
    10. '_COUNT' → logprob: -15.625014305114746

Token 225: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.43384626507759094
    2. '):' → logprob: -1.1838462352752686
    3. ' ):
' → logprob: -3.5588462352752686
    4. ' ):' → logprob: -4.058846473693848
    5. '):
' → logprob: -9.183846473693848
    6. '   ' → logprob: -11.183846473693848
    7. '):

' → logprob: -11.308846473693848
    8. '       ' → logprob: -11.933846473693848
    9. ' )' → logprob: -12.433846473693848
    10. ')' → logprob: -12.558846473693848

Token 226: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11075646430253983
    2. ' ' → logprob: -2.9857563972473145
    3. ' if' → logprob: -3.7357563972473145
    4. '<|end|>' → logprob: -5.1107563972473145
    5. '        ' → logprob: -5.2357563972473145
    6. '    ' → logprob: -5.6107563972473145
    7. '        
' → logprob: -5.7357563972473145
    8. ':' → logprob: -5.7357563972473145
    9. ' 
' → logprob: -5.9857563972473145
    10. '           ' → logprob: -6.1107563972473145

Token 227: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.038417138159275055
    2. '       ' → logprob: -3.913417100906372
    3. 'if' (adapté à ' if') → logprob: -4.163417339324951
    4. '           ' → logprob: -6.288417339324951
    5. '        ' → logprob: -8.538416862487793
    6. '
' → logprob: -10.538416862487793
    7. '   ' → logprob: -11.038416862487793
    8. ' ' → logprob: -11.163416862487793
    9. '    ' → logprob: -11.288416862487793
    10. '```' → logprob: -11.913416862487793

Token 228: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.386875182390213
    2. 'self' → logprob: -1.1368751525878906
    3. '(self' → logprob: -13.76187515258789
    4. '   ' → logprob: -14.01187515258789
    5. '	self' → logprob: -14.26187515258789
    6. ' not' → logprob: -14.38687515258789
    7. '[self' → logprob: -14.38687515258789
    8. 'se' → logprob: -16.13687515258789
    9. '=self' → logprob: -16.76187515258789
    10. ' ' → logprob: -17.01187515258789

Token 229: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -0.00025764419115148485
    2. '.' → logprob: -8.75025749206543
    3. '.s' → logprob: -9.62525749206543
    4. 'se' → logprob: -11.25025749206543
    5. ' .' → logprob: -11.25025749206543
    6. '	se' → logprob: -12.12525749206543
    7. ').' → logprob: -15.12525749206543
    8. 's' → logprob: -15.50025749206543
    9. '>.' → logprob: -16.00025749206543
    10. '   ' → logprob: -16.12525749206543

Token 230: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.0008824035176075995
    2. 's' → logprob: -8.500882148742676
    3. '[' → logprob: -8.625882148742676
    4. 'ts' → logprob: -9.500882148742676
    5. '   ' → logprob: -9.625882148742676
    6. 'ated' → logprob: -10.000882148742676
    7. 'at' → logprob: -10.000882148742676
    8. ' ats' → logprob: -10.000882148742676
    9. 'a' → logprob: -10.625882148742676
    10. 'ates' → logprob: -11.063382148742676

Token 231: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.696889623621246e-06
    2. '[' → logprob: -13.12500286102295
    3. ' [' → logprob: -14.75000286102295
    4. '[
' → logprob: -16.125001907348633
    5. '```' → logprob: -16.125001907348633
    6. '[I' → logprob: -16.875001907348633
    7. '
' → logprob: -17.500001907348633
    8. '   ' → logprob: -17.625001907348633
    9. 'i' → logprob: -18.250001907348633
    10. ' ' → logprob: -18.500001907348633

Token 232: ']' (ID: 60)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.02002743072807789
    2. 'is' → logprob: -4.5200276374816895
    3. ')' → logprob: -4.8950276374816895
    4. ']' → logprob: -7.3950276374816895
    5. ' ' → logprob: -8.145027160644531
    6. '==' → logprob: -8.270027160644531
    7. ' )' → logprob: -8.520027160644531
    8. ' ==' → logprob: -10.145027160644531
    9. ' ]' → logprob: -11.020027160644531
    10. ']==' → logprob: -11.520027160644531

Token 233: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.007678792346268892
    2. 'is' → logprob: -4.882678985595703
    3. ' ' → logprob: -9.757678985595703
    4. '==' → logprob: -11.507678985595703
    5. ')' → logprob: -13.007678985595703
    6. ' ==' → logprob: -14.382678985595703
    7. ' None' → logprob: -14.507678985595703
    8. '[' → logprob: -14.882678985595703
    9. 'None' → logprob: -14.882678985595703
    10. 'in' → logprob: -15.632678985595703

Token 234: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.0789010226726532
    2. 'None' → logprob: -2.5789010524749756
    3. ' not' → logprob: -11.953901290893555
    4. ' ' → logprob: -12.703901290893555
    5. '_None' → logprob: -13.953901290893555
    6. '(None' → logprob: -14.328901290893555
    7. 'not' → logprob: -16.078901290893555
    8. '=None' → logprob: -16.203901290893555
    9. '_none' → logprob: -16.453901290893555
    10. ' ' → logprob: -16.828901290893555

Token 235: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10024603456258774
    2. ':
' → logprob: -2.350245952606201
    3. '):
' → logprob: -10.97524642944336
    4. ',' → logprob: -11.85024642944336
    5. ' and' → logprob: -12.47524642944336
    6. '):' → logprob: -12.97524642944336
    7. ':

' → logprob: -13.10024642944336
    8. ' :' → logprob: -13.35024642944336
    9. ':
' → logprob: -13.60024642944336
    10. ' :
' → logprob: -13.72524642944336

Token 236: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.45751458406448364
    2. ':' → logprob: -1.8325145244598389
    3. '           ' → logprob: -1.8325145244598389
    4. ':
' → logprob: -3.957514524459839
    5. '<|end|>' → logprob: -5.082514762878418
    6. ',' → logprob: -5.582514762878418
    7. ' ' → logprob: -5.707514762878418
    8. '            ' → logprob: -5.707514762878418
    9. '                ' → logprob: -6.082514762878418
    10. ' and' → logprob: -6.582514762878418

Token 237: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.5851753950119019
    2. ' count' → logprob: -0.8351753950119019
    3. '               ' → logprob: -4.710175514221191
    4. '           ' → logprob: -9.335175514221191
    5. '	count' → logprob: -10.085175514221191
    6. '                   ' → logprob: -10.460175514221191
    7. '                ' → logprob: -11.835175514221191
    8. '.count' → logprob: -11.960175514221191
    9. '(count' → logprob: -12.210175514221191
    10. '_count' → logprob: -12.585175514221191

Token 238: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.023248739540576935
    2. '+=' → logprob: -3.7732486724853516
    3. ']+=' → logprob: -13.773248672485352
    4. '=' → logprob: -14.148248672485352
    5. ' =' → logprob: -14.648248672485352
    6. '   ' → logprob: -14.648248672485352
    7. ' +' → logprob: -15.898248672485352
    8. '+' → logprob: -15.898248672485352
    9. '    ' → logprob: -16.14824867248535
    10. ' ' → logprob: -16.39824867248535

Token 239: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0380416102707386
    2. ' ' → logprob: -3.288041591644287
    3. '<|end|>' → logprob: -17.038042068481445
    4. '   ' → logprob: -17.413042068481445
    5. '```' → logprob: -18.038042068481445
    6. '  ' → logprob: -19.288042068481445
    7. ' ' → logprob: -19.413042068481445
    8. '+' → logprob: -20.600542068481445
    9. '0' → logprob: -20.663042068481445
    10. '۱' → logprob: -20.913042068481445

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '<|end|>' → logprob: -20.250001907348633
    4. '```' → logprob: -20.750001907348633
    5. '   ' → logprob: -21.500001907348633
    6. '۱' → logprob: -22.750001907348633
    7. '
' → logprob: -23.000001907348633
    8. '１' → logprob: -23.500001907348633
    9. '`' → logprob: -24.062501907348633
    10. '0' → logprob: -24.062501907348633

Token 241: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0999523401260376
    2. '<|end|>' → logprob: -2.849952220916748
    3. '               ' → logprob: -4.349952220916748
    4. ' else' → logprob: -4.599952220916748
    5. '
' → logprob: -5.349952220916748
    6. '       ' → logprob: -5.599952220916748
    7. 'else' → logprob: -6.474952220916748
    8. ' 
' → logprob: -6.724952220916748
    9. ' ' → logprob: -6.724952220916748
    10. '<|end|>' → logprob: -7.224952220916748

Token 242: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015558054437860847
    2. 'else' → logprob: -7.501555919647217
    3. '       ' → logprob: -7.626555919647217
    4. ' else' → logprob: -8.126555442810059
    5. '               ' → logprob: -8.501555442810059
    6. '	       ' → logprob: -11.876555442810059
    7. '```' → logprob: -13.001555442810059
    8. '		' → logprob: -13.376555442810059
    9. 'elif' → logprob: -14.001555442810059
    10. '   ' → logprob: -14.126555442810059

Token 243: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5691753625869751
    2. '           ' → logprob: -1.569175362586975
    3. ' if' → logprob: -1.569175362586975
    4. '               ' → logprob: -4.0691752433776855
    5. 'else' → logprob: -8.444175720214844
    6. '       ' → logprob: -8.694175720214844
    7. 'continue' → logprob: -10.069175720214844
    8. 'elif' → logprob: -10.819175720214844
    9. '	if' → logprob: -11.944175720214844
    10. ' continue' → logprob: -12.194175720214844

Token 244: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.04859282076358795
    2. 'count' → logprob: -3.0485928058624268
    3. '	count' → logprob: -12.548592567443848
    4. '(count' → logprob: -13.548592567443848
    5. '$count' → logprob: -15.673592567443848
    6. '=count' → logprob: -16.298593521118164
    7. ' ' → logprob: -16.548593521118164
    8. '<count' → logprob: -16.798593521118164
    9. '.count' → logprob: -17.048593521118164
    10. '[count' → logprob: -17.673593521118164

Token 245: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09533193707466125
    2. '==' → logprob: -2.595331907272339
    3. ' >=' → logprob: -4.345332145690918
    4. '>=' → logprob: -5.720332145690918
    5. ' ' → logprob: -9.970332145690918
    6. '=' → logprob: -11.470332145690918
    7. ' =' → logprob: -13.095332145690918
    8. ' ' → logprob: -14.345332145690918
    9. '<|end|>' → logprob: -15.345332145690918
    10. '   ' → logprob: -15.595332145690918

Token 246: ' group' (ID: 3566)
  Prédit: ' group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.06196869537234306
    2. 'group' → logprob: -2.8119688034057617
    3. '	group' → logprob: -14.686968803405762
    4. '"group' → logprob: -15.311968803405762
    5. ' ' → logprob: -15.936968803405762
    6. '(group' → logprob: -15.936968803405762
    7. '[group' → logprob: -16.561967849731445
    8. '<|end|>' → logprob: -18.186967849731445
    9. '.group' → logprob: -18.311967849731445
    10. '_group' → logprob: -18.561967849731445

Token 247: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -2.1888679839321412e-05
    2. '.' → logprob: -10.750021934509277
    3. ' .' → logprob: -15.125021934509277
    4. 'size' → logprob: -15.625021934509277
    5. '.se' → logprob: -18.12502098083496
    6. '.s' → logprob: -18.25002098083496
    7. '.length' → logprob: -18.75002098083496
    8. ' size' → logprob: -18.87502098083496
    9. '	size' → logprob: -18.87502098083496
    10. '.width' → logprob: -19.50002098083496

Token 248: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07897229492664337
    2. ':
' → logprob: -2.578972339630127
    3. ':return' → logprob: -9.453971862792969
    4. ' :' → logprob: -13.578971862792969
    5. ':
' → logprob: -14.078971862792969
    6. ' :
' → logprob: -14.078971862792969
    7. ':

' → logprob: -14.703971862792969
    8. ',' → logprob: -14.828971862792969
    9. '):
' → logprob: -15.578971862792969
    10. ' return' → logprob: -15.703971862792969

Token 249: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004769022576510906
    2. ' return' → logprob: -6.0047688484191895
    3. '           ' → logprob: -7.1297688484191895
    4. '               ' → logprob: -7.3797688484191895
    5. ':' → logprob: -8.379769325256348
    6. '                    
' → logprob: -8.504769325256348
    7. '
' → logprob: -9.129769325256348
    8. ':
' → logprob: -9.129769325256348
    9. '                       ' → logprob: -9.504769325256348
    10. ' 
' → logprob: -10.254769325256348

Token 250: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.04800216481089592
    2. 'return' (adapté à ' return') → logprob: -3.298002243041992
    3. '                   ' → logprob: -5.173002243041992
    4. ' start' → logprob: -5.798002243041992
    5. '               ' → logprob: -7.798002243041992
    6. 'start' → logprob: -8.173002243041992
    7. '
' → logprob: -8.923002243041992
    8. '           ' → logprob: -9.048002243041992
    9. '                       ' → logprob: -9.048002243041992
    10. '       ' → logprob: -9.548002243041992

Token 251: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0019288709154352546
    2. 'i' → logprob: -6.251928806304932
    3. '	i' → logprob: -16.126928329467773
    4. '(i' → logprob: -16.626928329467773
    5. ' ' → logprob: -16.876928329467773
    6. '[i' → logprob: -17.751928329467773
    7. '{i' → logprob: -18.126928329467773
    8. '
' → logprob: -18.626928329467773
    9. ' (' → logprob: -18.751928329467773
    10. ' ' → logprob: -20.126928329467773

Token 252: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008620131760835648
    2. '-' → logprob: -4.758620262145996
    3. '+' → logprob: -12.883620262145996
    4. ' +' → logprob: -13.258620262145996
    5. ' ' → logprob: -13.883620262145996
    6. '-l' → logprob: -16.00861930847168
    7. '-group' → logprob: -16.88361930847168
    8. '-size' → logprob: -17.13361930847168
    9. '-space' → logprob: -17.63361930847168
    10. '-length' → logprob: -18.00861930847168

Token 253: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.015800192952156067
    2. ' group' → logprob: -4.7657999992370605
    3. 'count' → logprob: -5.0157999992370605
    4. '(group' → logprob: -7.6407999992370605
    5. '(count' → logprob: -11.015800476074219
    6. ' count' → logprob: -11.140800476074219
    7. ' (' → logprob: -11.390800476074219
    8. '   ' → logprob: -13.265800476074219
    9. '(' → logprob: -14.515800476074219
    10. ' ' → logprob: -14.515800476074219

Token 254: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -4.23917081207037e-05
    2. 'size' → logprob: -10.250041961669922
    3. '.count' → logprob: -12.125041961669922
    4. '.' → logprob: -14.250041961669922
    5. '<size' → logprob: -15.250041961669922
    6. ' size' → logprob: -15.375041961669922
    7. 's' → logprob: -16.000041961669922
    8. '_size' → logprob: -16.125041961669922
    9. '.group' → logprob: -16.500041961669922
    10. '(size' → logprob: -17.250041961669922

Token 255: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12693461775779724
    2. ' +' → logprob: -2.12693452835083
    3. '   ' → logprob: -13.376935005187988
    4. '1' → logprob: -13.376935005187988
    5. ' ' → logprob: -13.626935005187988
    6. '    ' → logprob: -13.876935005187988
    7. ' plus' → logprob: -15.126935005187988
    8. '```' → logprob: -15.251935005187988
    9. '  ' → logprob: -15.501935005187988
    10. '       ' → logprob: -15.626935005187988

Token 256: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -19.000015258789062
    4. '
' → logprob: -20.500015258789062
    5. '   ' → logprob: -20.750015258789062
    6. '۱' → logprob: -21.000015258789062
    7. '

' → logprob: -22.312515258789062
    8. '<|end|>' → logprob: -22.500015258789062
    9. '2' → logprob: -22.625015258789062
    10. '0' → logprob: -22.625015258789062

Token 257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -18.625
    4. '0' → logprob: -19.0
    5. '   ' → logprob: -19.375
    6. '۱' → logprob: -20.125
    7. '2' → logprob: -20.1875
    8. '
' → logprob: -20.9375
    9. '

' → logprob: -21.25
    10. '' → logprob: -21.5625

Token 258: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0479203499853611
    2. '
' → logprob: -3.2979204654693604
    3. ' 
' → logprob: -5.797920227050781
    4. '            
' → logprob: -6.047920227050781
    5. '       ' → logprob: -6.547920227050781
    6. '  
' → logprob: -7.672920227050781
    7. '        
' → logprob: -7.672920227050781
    8. '    
' → logprob: -7.797920227050781
    9. 'else' → logprob: -7.922920227050781
    10. '<|end|>' → logprob: -8.297920227050781

Token 259: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038171395659446716
    2. '       ' → logprob: -3.5381712913513184
    3. '
' → logprob: -5.038171291351318
    4. '        
' → logprob: -8.163171768188477
    5. 'else' → logprob: -8.163171768188477
    6. ' else' → logprob: -8.288171768188477
    7. '            
' → logprob: -8.413171768188477
    8. '\n' → logprob: -8.538171768188477
    9. ' 
' → logprob: -9.163171768188477
    10. 'return' → logprob: -9.288171768188477

Token 260: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.959275484085083
    2. 'else' (adapté à ' else') → logprob: -0.959275484085083
    3. ' else' → logprob: -1.459275484085083
    4. '           ' → logprob: -7.459275245666504
    5. '   ' → logprob: -7.584275245666504
    6. '	else' → logprob: -8.959275245666504
    7. 'elif' → logprob: -11.209275245666504
    8. '    ' → logprob: -12.334275245666504
    9. ' elif' → logprob: -12.334275245666504
    10. ' ' → logprob: -12.584275245666504

Token 261: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.27292510867118835
    2. '           ' → logprob: -2.5229251384735107
    3. ':' → logprob: -2.6479251384735107
    4. ':
' → logprob: -2.6479251384735107
    5. 'count' → logprob: -4.272924900054932
    6. '       ' → logprob: -6.272924900054932
    7. '                   ' → logprob: -8.77292537689209
    8. ' count' → logprob: -8.77292537689209
    9. '   ' → logprob: -8.89792537689209
    10. '[count' → logprob: -9.39792537689209

Token 262: '               ' (ID: 506)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.06447380036115646
    2. '               ' → logprob: -2.814473867416382
    3. ' count' → logprob: -6.189473628997803
    4. '           ' → logprob: -7.939473628997803
    5. '       ' → logprob: -9.564474105834961
    6. '	count' → logprob: -11.189474105834961
    7. '   ' → logprob: -12.689474105834961
    8. '[count' → logprob: -13.189474105834961
    9. ',count' → logprob: -13.314474105834961
    10. '.count' → logprob: -13.439474105834961

Token 263: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.03806077316403389
    2. ' count' → logprob: -3.2880606651306152
    3. '               ' → logprob: -10.913061141967773
    4. '	count' → logprob: -14.413061141967773
    5. '           ' → logprob: -15.038061141967773
    6. '       ' → logprob: -16.413061141967773
    7. '   ' → logprob: -16.538061141967773
    8. ' ' → logprob: -16.913061141967773
    9. '[count' → logprob: -17.663061141967773
    10. '                   ' → logprob: -17.788061141967773

Token 264: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022422909736633
    2. ' =' → logprob: -1.910224199295044
    3. ' ' → logprob: -16.41022491455078
    4. '0' → logprob: -17.53522491455078
    5. ' =
' → logprob: -18.53522491455078
    6. '=
' → logprob: -18.91022491455078
    7. '＝' → logprob: -19.66022491455078
    8. '=

' → logprob: -19.91022491455078
    9. '.=' → logprob: -20.28522491455078
    10. '<|end|>' → logprob: -20.53522491455078

Token 265: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -18.250431060791016
    4. '           ' → logprob: -20.625431060791016
    5. ' ' → logprob: -21.000431060791016
    6. '  ' → logprob: -21.250431060791016
    7. '۰' → logprob: -21.375431060791016
    8. '	' → logprob: -21.437931060791016
    9. '1' → logprob: -21.750431060791016
    10. '       ' → logprob: -21.937931060791016

Token 266: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '۰' → logprob: -18.375003814697266
    4. '```' → logprob: -19.062503814697266
    5. 'zero' → logprob: -19.187503814697266
    6. '000' → logprob: -19.937503814697266
    7. '   ' → logprob: -20.437503814697266
    8. '00' → logprob: -20.562503814697266
    9. '٠' → logprob: -20.562503814697266
    10. '０' → logprob: -20.750003814697266

Token 267: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6840612888336182
    2. '       ' → logprob: -0.9340612888336182
    3. '<|end|>' → logprob: -2.309061288833618
    4. '        
' → logprob: -6.309061050415039
    5. '<|end|>' → logprob: -7.809061050415039
    6. ' 
' → logprob: -8.934061050415039
    7. ' return' → logprob: -8.934061050415039
    8. ' ' → logprob: -9.559061050415039
    9. '  
' → logprob: -9.559061050415039
    10. '\n' → logprob: -9.684061050415039

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008571469807066023
    2. '<|end|>' → logprob: -7.250857353210449
    3. ' return' → logprob: -9.62585735321045
    4. '
' → logprob: -10.62585735321045
    5. 'return' → logprob: -10.75085735321045
    6. '        
' → logprob: -11.62585735321045
    7. '	' → logprob: -12.25085735321045
    8. '   ' → logprob: -12.50085735321045
    9. '        ' → logprob: -12.87585735321045
    10. '<|end|>' → logprob: -12.87585735321045

Token 269: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.833204984664917
    2. '-' → logprob: -1.208204984664917
    3. 'return' (adapté à ' return') → logprob: -2.208204984664917
    4. 'None' → logprob: -2.583204984664917
    5. '   ' → logprob: -3.583204984664917
    6. ' return' → logprob: -3.708204984664917
    7. '
' → logprob: -4.208205223083496
    8. ' None' → logprob: -4.833205223083496
    9. '	return' → logprob: -6.708205223083496
    10. '0' → logprob: -6.958205223083496

Token 270: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1419873684644699
    2. ' -' → logprob: -2.1419873237609863
    3. 'None' → logprob: -4.516987323760986
    4. ' None' → logprob: -5.516987323760986
    5. '0' → logprob: -12.641987800598145
    6. '-none' → logprob: -13.516987800598145
    7. ' ' → logprob: -13.766987800598145
    8. 'False' → logprob: -14.516987800598145
    9. '-n' → logprob: -15.516987800598145
    10. '   ' → logprob: -15.891987800598145

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -19.375001907348633
    4. '0' → logprob: -19.500001907348633
    5. '```' → logprob: -19.875001907348633
    6. '１' → logprob: -20.062501907348633
    7. '2' → logprob: -20.312501907348633
    8. '-' → logprob: -20.500001907348633
    9. '  ' → logprob: -20.937501907348633
    10. '۱' → logprob: -20.937501907348633

Token 272: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 273: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 274: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0003849133790936321
    2. '   ' → logprob: -8.250385284423828
    3. ' def' → logprob: -9.250385284423828
    4. '    
' → logprob: -11.625385284423828
    5. 'd' → logprob: -11.750385284423828
    6. 'de' → logprob: -12.875385284423828
    7. ' 
' → logprob: -13.250385284423828
    8. '
' → logprob: -13.500385284423828
    9. '        
' → logprob: -13.500385284423828
    10. ' ' → logprob: -14.375385284423828

Token 275: ' seat' (ID: 15512)
  Prédit: ' seat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seat' → logprob: -0.023557456210255623
    2. 'seat' → logprob: -3.773557424545288
    3. ' occupy' → logprob: -9.523557662963867
    4. ' seating' → logprob: -10.023557662963867
    5. 'se' → logprob: -10.273557662963867
    6. ' sit' → logprob: -10.898557662963867
    7. 'sit' → logprob: -11.273557662963867
    8. ' assign' → logprob: -11.523557662963867
    9. ' can' → logprob: -11.648557662963867
    10. ' empty' → logprob: -11.773557662963867

Token 276: '_group' (ID: 15990)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2515696585178375
    2. '(' → logprob: -1.6265696287155151
    3. '_(' → logprob: -4.126569747924805
    4. '(self' → logprob: -5.126569747924805
    5. '_group' → logprob: -6.501569747924805
    6. 'self' → logprob: -6.751569747924805
    7. ' (' → logprob: -7.626569747924805
    8. 'ed' → logprob: -8.876569747924805
    9. '[' → logprob: -9.126569747924805
    10. '_at' → logprob: -9.501569747924805

Token 277: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011193415150046349
    2. '(' → logprob: -4.51119327545166
    3. ' (' → logprob: -8.88619327545166
    4. 'self' → logprob: -12.01119327545166
    5. '(
' → logprob: -14.76119327545166
    6. '(s' → logprob: -15.26119327545166
    7. '(se' → logprob: -15.51119327545166
    8. ' self' → logprob: -15.76119327545166
    9. '   ' → logprob: -16.761194229125977
    10. '(sel' → logprob: -17.011194229125977

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015764019917696714
    2. 'self' → logprob: -6.5015764236450195
    3. ' ,' → logprob: -9.87657642364502
    4. ',self' → logprob: -11.25157642364502
    5. '(self' → logprob: -12.12657642364502
    6. ' self' → logprob: -12.75157642364502
    7. '       ' → logprob: -14.50157642364502
    8. ',
' → logprob: -14.75157642364502
    9. '   ' → logprob: -15.50157642364502
    10. 's' → logprob: -15.87657642364502

Token 279: ' group' (ID: 3566)
  Prédit: ' group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.38688287138938904
    2. 'group' → logprob: -1.1368829011917114
    3. 'self' → logprob: -11.761882781982422
    4. ' self' → logprob: -13.386882781982422
    5. '	group' → logprob: -14.761882781982422
    6. ' ' → logprob: -14.886882781982422
    7. '   ' → logprob: -15.261882781982422
    8. ')' → logprob: -15.386882781982422
    9. '"group' → logprob: -15.386882781982422
    10. 'Group' → logprob: -15.761882781982422

Token 280: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031983929220587015
    2. '):' → logprob: -6.003198623657227
    3. ' ,' → logprob: -7.378198623657227
    4. ':' → logprob: -10.003198623657227
    5. ')' → logprob: -10.628198623657227
    6. 'self' → logprob: -11.253198623657227
    7. ' ):' → logprob: -11.628198623657227
    8. '   ' → logprob: -13.378198623657227
    9. '):
' → logprob: -13.878198623657227
    10. ',index' → logprob: -14.128198623657227

Token 281: ' Group' (ID: 7849)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.5799216628074646
    2. 'Group' → logprob: -1.4549217224121094
    3. ' Group' → logprob: -1.8299217224121094
    4. 'group' → logprob: -3.0799217224121094
    5. ')' → logprob: -8.82992172241211
    6. ' ' → logprob: -10.45492172241211
    7. '_group' → logprob: -10.95492172241211
    8. ',' → logprob: -11.20492172241211
    9. ':' → logprob: -11.95492172241211
    10. '):' → logprob: -12.32992172241211

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.372916686814278e-05
    2. ' ,' → logprob: -9.7500638961792
    3. '):' → logprob: -12.5000638961792
    4. 'self' → logprob: -14.6250638961792
    5. ',index' → logprob: -14.6250638961792
    6. '   ' → logprob: -15.3750638961792
    7. '       ' → logprob: -15.6250638961792
    8. ')' → logprob: -16.375062942504883
    9. ',
' → logprob: -16.625062942504883
    10. ':' → logprob: -16.875062942504883

Token 283: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.2074180245399475
    2. ' start' → logprob: -1.9574179649353027
    3. 'pos' → logprob: -3.4574179649353027
    4. ' pos' → logprob: -5.457417964935303
    5. 'position' → logprob: -5.707417964935303
    6. ' seat' → logprob: -5.832417964935303
    7. ' position' → logprob: -6.082417964935303
    8. 'seat' → logprob: -6.457417964935303
    9. 'index' → logprob: -8.707418441772461
    10. ' index' → logprob: -10.082418441772461

Token 284: '_pos' (ID: 14692)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.057961419224739075
    2. '_index' → logprob: -3.8079614639282227
    3. '_' → logprob: -4.682961463928223
    4. ':' → logprob: -4.807961463928223
    5. ')' → logprob: -4.932961463928223
    6. '_idx' → logprob: -5.432961463928223
    7. ' ):' → logprob: -6.182961463928223
    8. '_pos' → logprob: -6.432961463928223
    9. '):
' → logprob: -7.182961463928223
    10. 'index' → logprob: -8.932961463928223

Token 285: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07971999049186707
    2. ':' → logprob: -3.3297200202941895
    3. ' ):' → logprob: -3.3297200202941895
    4. '):
' → logprob: -5.9547200202941895
    5. ')' → logprob: -6.2047200202941895
    6. ' )' → logprob: -8.454719543457031
    7. ' ):
' → logprob: -9.829719543457031
    8. '=' → logprob: -9.829719543457031
    9. ' :' → logprob: -10.204719543457031
    10. ',' → logprob: -11.454719543457031

Token 286: ' int' (ID: 677)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7245553731918335
    2. 'int' → logprob: -1.0995553731918335
    3. ' )' → logprob: -2.474555492401123
    4. ' int' → logprob: -2.849555492401123
    5. 'start' → logprob: -3.724555492401123
    6. ' start' → logprob: -4.349555492401123
    7. ':int' → logprob: -7.474555492401123
    8. '):' → logprob: -7.474555492401123
    9. '<|end|>' → logprob: -7.474555492401123
    10. ' ' → logprob: -7.849555492401123

Token 287: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019143575336784124
    2. ')' → logprob: -6.8769145011901855
    3. ' ):' → logprob: -7.6269145011901855
    4. '):
' → logprob: -7.8769145011901855
    5. ':' → logprob: -11.751914024353027
    6. ' )' → logprob: -12.751914024353027
    7. '):
' → logprob: -13.376914024353027
    8. '   ' → logprob: -13.626914024353027
    9. ',' → logprob: -15.001914024353027
    10. ' ):
' → logprob: -15.376914024353027

Token 288: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.191213920712471
    2. 'current' → logprob: -2.441213846206665
    3. ' time' → logprob: -2.941213846206665
    4. 'time' → logprob: -3.441213846206665
    5. ')' → logprob: -6.941214084625244
    6. '   ' → logprob: -8.441213607788086
    7. ' t' → logprob: -8.691213607788086
    8. ' arrival' → logprob: -8.941213607788086
    9. ' seating' → logprob: -9.316213607788086
    10. 't' → logprob: -9.441213607788086

Token 289: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.045380834490060806
    2. '_' → logprob: -3.1703808307647705
    3. ')' → logprob: -6.79538106918335
    4. ' _' → logprob: -7.17038106918335
    5. ')_' → logprob: -7.92038106918335
    6. 'time' → logprob: -10.670380592346191
    7. '_t' → logprob: -10.795380592346191
    8. '_timestamp' → logprob: -11.170380592346191
    9. ' )' → logprob: -11.295380592346191
    10. '_Time' → logprob: -11.295380592346191

Token 290: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019198372028768063
    2. ')' → logprob: -7.251919746398926
    3. '):
' → logprob: -7.376919746398926
    4. ':' → logprob: -7.501919746398926
    5. ' ):' → logprob: -10.876919746398926
    6. '=' → logprob: -11.876919746398926
    7. '):
' → logprob: -13.126919746398926
    8. '):

' → logprob: -13.751919746398926
    9. '   ' → logprob: -14.376919746398926
    10. ' ' → logprob: -15.001919746398926

Token 291: ' int' (ID: 677)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9935808181762695
    2. '):' → logprob: -1.1185808181762695
    3. ' )' → logprob: -1.8685808181762695
    4. ' ):' → logprob: -2.1185808181762695
    5. ' ):
' → logprob: -4.4935808181762695
    6. '):
' → logprob: -4.7435808181762695
    7. ' ' → logprob: -5.6185808181762695
    8. ' None' → logprob: -6.6185808181762695
    9. 'None' → logprob: -6.8685808181762695
    10. 'int' → logprob: -7.1185808181762695

Token 292: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028540899511426687
    2. '):
' → logprob: -6.252853870391846
    3. ')' → logprob: -7.002853870391846
    4. '):
' → logprob: -12.002854347229004
    5. '   ' → logprob: -12.377854347229004
    6. ' ):' → logprob: -12.877854347229004
    7. ':' → logprob: -13.002854347229004
    8. '):

' → logprob: -14.877854347229004
    9. '       ' → logprob: -15.752854347229004
    10. ')->' → logprob: -17.127853393554688

Token 293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020787693560123444
    2. ' for' → logprob: -4.395787715911865
    3. '
' → logprob: -5.270787715911865
    4. '   ' → logprob: -6.145787715911865
    5. '<|end|>' → logprob: -8.270787239074707
    6. '	for' → logprob: -8.520787239074707
    7. 'for' → logprob: -8.895787239074707
    8. '        
' → logprob: -8.895787239074707
    9. '    
' → logprob: -10.020787239074707
    10. 'self' → logprob: -10.520787239074707

Token 294: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.52848881483078
    2. '       ' → logprob: -0.90348881483078
    3. 'for' (adapté à ' for') → logprob: -5.278488636016846
    4. '	for' → logprob: -8.528489112854004
    5. '   ' → logprob: -10.403489112854004
    6. '	       ' → logprob: -12.028489112854004
    7. '
' → logprob: -12.653489112854004
    8. '	   ' → logprob: -12.903489112854004
    9. ' ' → logprob: -13.403489112854004
    10. '```' → logprob: -13.403489112854004

Token 295: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3138076364994049
    2. ' i' → logprob: -1.3138076066970825
    3. 'pos' → logprob: -8.188807487487793
    4. ' pos' → logprob: -8.563807487487793
    5. ' seat' → logprob: -10.813807487487793
    6. 'j' → logprob: -11.063807487487793
    7. ' j' → logprob: -11.313807487487793
    8. ' idx' → logprob: -11.938807487487793
    9. ' ' → logprob: -12.188807487487793
    10. '_' → logprob: -12.563807487487793

Token 296: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007649688050150871
    2. 'in' → logprob: -4.882649898529053
    3. ' ' → logprob: -10.382649421691895
    4. '<|end|>' → logprob: -11.632649421691895
    5. ',' → logprob: -14.132649421691895
    6. 'range' → logprob: -15.007649421691895
    7. '	in' → logprob: -15.007649421691895
    8. '[' → logprob: -15.007649421691895
    9. '<|end|>' → logprob: -15.132649421691895
    10. '_in' → logprob: -15.507649421691895

Token 297: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31326204538345337
    2. 'range' → logprob: -1.3132619857788086
    3. '(range' → logprob: -15.438261985778809
    4. '	range' → logprob: -15.438261985778809
    5. '_range' → logprob: -19.438262939453125
    6. '.range' → logprob: -19.688262939453125
    7. ' ' → logprob: -19.813262939453125
    8. '   ' → logprob: -19.938262939453125
    9. 'rang' → logprob: -20.563262939453125
    10. ' xrange' → logprob: -20.688262939453125

Token 298: '(start' (ID: 20008)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5059087872505188
    2. '(start' → logprob: -1.005908727645874
    3. ' start' → logprob: -3.505908727645874
    4. '(group' → logprob: -7.380908966064453
    5. 'group' → logprob: -7.505908966064453
    6. '(' → logprob: -9.505908966064453
    7. ' group' → logprob: -9.755908966064453
    8. ' (' → logprob: -13.255908966064453
    9. '(
' → logprob: -13.505908966064453
    10. '	start' → logprob: -13.630908966064453

Token 299: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.125000953674316
    3. 'pos' → logprob: -15.500000953674316
    4. ' _' → logprob: -17.125001907348633
    5. '   ' → logprob: -17.250001907348633
    6. ' pos' → logprob: -17.375001907348633
    7. '_POS' → logprob: -17.750001907348633
    8. '_p' → logprob: -17.875001907348633
    9. '	pos' → logprob: -17.875001907348633
    10. ',' → logprob: -17.875001907348633

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038360210601240396
    2. ',start' → logprob: -8.125383377075195
    3. ' ,' → logprob: -9.625383377075195
    4. 'start' → logprob: -11.000383377075195
    5. ',
' → logprob: -12.875383377075195
    6. '+' → logprob: -14.375383377075195
    7. ' +' → logprob: -14.875383377075195
    8. '   ' → logprob: -15.500383377075195
    9. '<|end|>' → logprob: -15.625383377075195
    10. ' start' → logprob: -15.750383377075195

Token 301: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.008614926598966122
    2. ' start' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.008614540100098
    4. '	start' → logprob: -17.383615493774414
    5. '[start' → logprob: -18.508615493774414
    6. '(start' → logprob: -18.758615493774414
    7. ' ' → logprob: -19.008615493774414
    8. '       ' → logprob: -19.508615493774414
    9. '           ' → logprob: -19.883615493774414
    10. ':start' → logprob: -20.008615493774414

Token 302: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.2664456789934775e-06
    2. 'pos' → logprob: -13.750000953674316
    3. '+' → logprob: -16.000001907348633
    4. ')' → logprob: -17.875001907348633
    5. ',' → logprob: -18.500001907348633
    6. '   ' → logprob: -18.625001907348633
    7. '_' → logprob: -18.625001907348633
    8. '_group' → logprob: -18.750001907348633
    9. '_start' → logprob: -18.875001907348633
    10. '```' → logprob: -18.875001907348633

Token 303: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04858839511871338
    2. '+' → logprob: -3.048588275909424
    3. ' ' → logprob: -14.048588752746582
    4. ' +
' → logprob: -17.048587799072266
    5. ' ' → logprob: -17.673587799072266
    6. '+
' → logprob: -18.673587799072266
    7. ')' → logprob: -18.798587799072266
    8. ',' → logprob: -18.923587799072266
    9. '+self' → logprob: -19.423587799072266
    10. '+n' → logprob: -19.548587799072266

Token 304: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -9.615255839889869e-05
    2. ' group' → logprob: -9.250096321105957
    3. '	group' → logprob: -22.00009536743164
    4. '.group' → logprob: -22.87509536743164
    5. '"group' → logprob: -23.00009536743164
    6. '   ' → logprob: -23.12509536743164
    7. 'Group' → logprob: -23.50009536743164
    8. '       ' → logprob: -23.62509536743164
    9. '(group' → logprob: -23.87509536743164
    10. '[group' → logprob: -24.00009536743164

Token 305: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -3.106736039626412e-05
    2. '.' → logprob: -10.500031471252441
    3. ' .' → logprob: -12.750031471252441
    4. 'size' → logprob: -15.000031471252441
    5. '.length' → logprob: -16.750030517578125
    6. '.s' → logprob: -17.250030517578125
    7. '.width' → logprob: -17.750030517578125
    8. '	size' → logprob: -17.750030517578125
    9. ').' → logprob: -17.875030517578125
    10. ' size' → logprob: -18.000030517578125

Token 306: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20146510004997253
    2. '):' → logprob: -1.701465129852295
    3. '):
' → logprob: -10.201464653015137
    4. '       ' → logprob: -11.576464653015137
    5. ' ):
' → logprob: -13.576464653015137
    6. '):

' → logprob: -13.826464653015137
    7. ')' → logprob: -13.951464653015137
    8. '   ' → logprob: -14.201464653015137
    9. '           ' → logprob: -14.326464653015137
    10. ':' → logprob: -15.326464653015137

Token 307: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004837957210838795
    2. ' self' → logprob: -5.504837989807129
    3. 'self' → logprob: -7.254837989807129
    4. '            
' → logprob: -11.004837989807129
    5. '       ' → logprob: -11.754837989807129
    6. '               ' → logprob: -12.129837989807129
    7. '```' → logprob: -12.504837989807129
    8. '   ' → logprob: -12.629837989807129
    9. '<|end|>' → logprob: -12.754837989807129
    10. ',' → logprob: -13.254837989807129

Token 308: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03806731849908829
    2. ' self' → logprob: -3.28806734085083
    3. '           ' → logprob: -10.663066864013672
    4. '	self' → logprob: -13.413066864013672
    5. '       ' → logprob: -14.663066864013672
    6. '   ' → logprob: -14.913066864013672
    7. '               ' → logprob: -15.913066864013672
    8. '[self' → logprob: -17.413066864013672
    9. ' ' → logprob: -18.538066864013672
    10. '
' → logprob: -18.788066864013672

Token 309: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -4.4849443838757e-06
    2. '.' → logprob: -13.125004768371582
    3. 'se' → logprob: -14.000004768371582
    4. '.s' → logprob: -14.250004768371582
    5. ' .' → logprob: -14.250004768371582
    6. '	se' → logprob: -15.000004768371582
    7. '.Se' → logprob: -17.875003814697266
    8. '.sl' → logprob: -18.750003814697266
    9. ').' → logprob: -19.125003814697266
    10. '[' → logprob: -19.250003814697266

Token 310: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -7.839121826691553e-05
    2. 's' → logprob: -10.375078201293945
    3. 'ates' → logprob: -12.000078201293945
    4. ' ats' → logprob: -12.125078201293945
    5. 'ts' → logprob: -12.500078201293945
    6. '#' → logprob: -12.625078201293945
    7. '```' → logprob: -12.750078201293945
    8. 'ets' → logprob: -12.750078201293945
    9. 'at' → logprob: -13.312578201293945
    10. '[' → logprob: -13.500078201293945

Token 311: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.000000953674316
    3. '```' → logprob: -16.875
    4. ' [' → logprob: -17.375
    5. '[I' → logprob: -17.625
    6. '[self' → logprob: -18.125
    7. 'i' → logprob: -18.25
    8. ')[' → logprob: -18.75
    9. '[
' → logprob: -19.0
    10. '][' → logprob: -19.5

Token 312: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004659425176214427
    2. ']=' → logprob: -8.375466346740723
    3. ' ]' → logprob: -8.500466346740723
    4. '=' → logprob: -10.500466346740723
    5. ' =' → logprob: -12.875466346740723
    6. ')' → logprob: -13.250466346740723
    7. '[' → logprob: -18.250465393066406
    8. ']==' → logprob: -19.000465393066406
    9. ' )' → logprob: -19.125465393066406
    10. ' ' → logprob: -19.375465393066406

Token 313: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804183006286621
    2. ' =' → logprob: -3.288041830062866
    3. ']' → logprob: -15.913042068481445
    4. ']=' → logprob: -16.038042068481445
    5. ')' → logprob: -16.288042068481445
    6. '=user' → logprob: -18.038042068481445
    7. ')=' → logprob: -18.413042068481445
    8. '=
' → logprob: -18.788042068481445
    9. '=index' → logprob: -18.788042068481445
    10. '=None' → logprob: -19.038042068481445

Token 314: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -1.676292231422849e-05
    2. ' group' → logprob: -11.000017166137695
    3. 'g' → logprob: -19.750017166137695
    4. '"group' → logprob: -19.750017166137695
    5. 'groups' → logprob: -19.750017166137695
    6. '	group' → logprob: -20.375017166137695
    7. '   ' → logprob: -21.375017166137695
    8. 'Group' → logprob: -22.375017166137695
    9. '.group' → logprob: -22.500017166137695
    10. '_group' → logprob: -22.625017166137695

Token 315: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.15589137375354767
    2. '
' → logprob: -2.2808914184570312
    3. 'index' → logprob: -3.9058914184570312
    4. '.se' → logprob: -4.030891418457031
    5. '<|end|>' → logprob: -6.155891418457031
    6. '#index' → logprob: -7.905891418457031
    7. '       ' → logprob: -8.155891418457031
    8. '.' → logprob: -8.155891418457031
    9. '@index' → logprob: -8.655891418457031
    10. '        
' → logprob: -8.905891418457031

Token 316: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43037253618240356
    2. '
' → logprob: -1.0553724765777588
    3. 'group' → logprob: -7.305372714996338
    4. '<|end|>' → logprob: -7.430372714996338
    5. '
' → logprob: -9.18037223815918
    6. '	' → logprob: -9.55537223815918
    7. '        
' → logprob: -9.68037223815918
    8. ' group' → logprob: -10.55537223815918
    9. '.group' → logprob: -10.80537223815918
    10. '	group' → logprob: -10.93037223815918

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06754747033119202
    2. 'group' → logprob: -3.442547559738159
    3. '
' → logprob: -3.567547559738159
    4. ' group' → logprob: -5.81754732131958
    5. '   ' → logprob: -6.44254732131958
    6. '	group' → logprob: -9.067547798156738
    7. '```' → logprob: -9.067547798156738
    8. '<|end|>' → logprob: -9.067547798156738
    9. '[group' → logprob: -9.317547798156738
    10. '"group' → logprob: -10.817547798156738

Token 318: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' (adapté à ' group') → logprob: -0.13652518391609192
    2. ' group' → logprob: -2.6365251541137695
    3. '       ' → logprob: -2.8865251541137695
    4. '   ' → logprob: -8.38652515411377
    5. '	group' → logprob: -12.88652515411377
    6. '
' → logprob: -13.13652515411377
    7. '.group' → logprob: -13.88652515411377
    8. '```' → logprob: -14.01152515411377
    9. ' ' → logprob: -14.63652515411377
    10. '_group' → logprob: -14.88652515411377

Token 319: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -6.988221684878226e-06
    2. ' .' → logprob: -12.875006675720215
    3. '.s' → logprob: -13.000006675720215
    4. '.' → logprob: -13.250006675720215
    5. '.Se' → logprob: -16.00000762939453
    6. '	se' → logprob: -17.00000762939453
    7. '\.' → logprob: -17.25000762939453
    8. '.wait' → logprob: -17.37500762939453
    9. '```' → logprob: -17.37500762939453
    10. '.sent' → logprob: -18.50000762939453

Token 320: 'ated' (ID: 780)
  Prédit: 'ated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ated' → logprob: -0.00044127836008556187
    2. 'at' → logprob: -7.750441074371338
    3. 'ted' → logprob: -13.000441551208496
    4. 'atted' → logprob: -13.250441551208496
    5. 't' → logprob: -13.375441551208496
    6. 'ed' → logprob: -14.125441551208496
    7. 'ate' → logprob: -14.500441551208496
    8. '_at' → logprob: -14.625441551208496
    9. ' at' → logprob: -14.625441551208496
    10. 'a' → logprob: -14.750441551208496

Token 321: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -3.128163257315464e-07
    2. '_start' → logprob: -15.75
    3. 'd' → logprob: -17.125
    4. '_' → logprob: -17.125
    5. ' _' → logprob: -17.375
    6. '=_' → logprob: -17.5
    7. 'time' → logprob: -18.125
    8. '_index' → logprob: -19.125
    9. 'ed' → logprob: -19.125
    10. '```' → logprob: -19.5

Token 322: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868713080883026
    2. '=' → logprob: -1.136871337890625
    3. ' ' → logprob: -16.011871337890625
    4. '=current' → logprob: -16.761871337890625
    5. '＝' → logprob: -17.136871337890625
    6. ' ' → logprob: -17.511871337890625
    7. '<|end|>' → logprob: -17.636871337890625
    8. ')' → logprob: -18.261871337890625
    9. '[' → logprob: -19.011871337890625
    10. 's' → logprob: -19.011871337890625

Token 323: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.25192907452583313
    2. ' current' → logprob: -1.5019290447235107
    3. '	current' → logprob: -19.376928329467773
    4. '$current' → logprob: -20.001928329467773
    5. '_current' → logprob: -20.251928329467773
    6. 'cur' → logprob: -20.251928329467773
    7. '
' → logprob: -20.376928329467773
    8. '.current' → logprob: -20.626928329467773
    9. '=current' → logprob: -20.751928329467773
    10. '(current' → logprob: -20.751928329467773

Token 324: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -3.054500666621607e-06
    2. 'time' → logprob: -13.37500286102295
    3. '_t' → logprob: -13.87500286102295
    4. '_' → logprob: -15.00000286102295
    5. ' _' → logprob: -15.87500286102295
    6. 't' → logprob: -16.500003814697266
    7. '_tim' → logprob: -17.875003814697266
    8. '._' → logprob: -18.500003814697266
    9. '_times' → logprob: -19.000003814697266
    10. 'Time' → logprob: -19.000003814697266

Token 325: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01805136911571026
    2. '<|end|>' → logprob: -4.3930511474609375
    3. '
' → logprob: -5.2680511474609375
    4. '   ' → logprob: -9.393051147460938
    5. 'group' → logprob: -9.518051147460938
    6. '	' → logprob: -9.768051147460938
    7. ',' → logprob: -10.518051147460938
    8. '[group' → logprob: -10.643051147460938
    9. ' and' → logprob: -11.518051147460938
    10. '<|end|>' → logprob: -11.518051147460938

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011003728955984116
    2. 'group' → logprob: -5.261003494262695
    3. '<|end|>' → logprob: -6.261003494262695
    4. ' group' → logprob: -6.386003494262695
    5. '	group' → logprob: -6.761003494262695
    6. '   ' → logprob: -8.011003494262695
    7. '[group' → logprob: -8.511003494262695
    8. '
' → logprob: -9.011003494262695
    9. '	' → logprob: -9.261003494262695
    10. '.group' → logprob: -9.886003494262695

Token 327: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' (adapté à ' group') → logprob: -1.8312570318812504e-05
    2. ' group' → logprob: -11.000018119812012
    3. '       ' → logprob: -13.500018119812012
    4. '   ' → logprob: -15.625018119812012
    5. '
' → logprob: -16.750019073486328
    6. '	group' → logprob: -17.375019073486328
    7. '```' → logprob: -17.625019073486328
    8. '"group' → logprob: -18.250019073486328
    9. '.group' → logprob: -19.250019073486328
    10. 'groups' → logprob: -19.375019073486328

Token 328: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -4.4849443838757e-06
    2. '.' → logprob: -13.000004768371582
    3. ' .' → logprob: -13.500004768371582
    4. '.s' → logprob: -15.000004768371582
    5. '.wait' → logprob: -15.375004768371582
    6. '.Se' → logprob: -16.375003814697266
    7. '.sex' → logprob: -17.000003814697266
    8. 'seat' → logprob: -17.625003814697266
    9. '.ticket' → logprob: -18.000003814697266
    10. '}.' → logprob: -18.500003814697266

Token 329: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.002498609945178032
    2. 'ated' → logprob: -6.002498626708984
    3. 't' → logprob: -11.002498626708984
    4. 'ат' → logprob: -13.752498626708984
    5. 'seat' → logprob: -13.752498626708984
    6. 'atted' → logprob: -14.252498626708984
    7. 'a' → logprob: -14.377498626708984
    8. '_at' → logprob: -14.752498626708984
    9. 'ed' → logprob: -15.189998626708984
    10. 'ate' → logprob: -15.189998626708984

Token 330: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -1.0280383548888494e-06
    2. 't' → logprob: -15.000000953674316
    3. '_' → logprob: -15.125000953674316
    4. '_end' → logprob: -16.000001907348633
    5. ' _' → logprob: -16.125001907348633
    6. 'd' → logprob: -17.000001907348633
    7. '_t' → logprob: -17.250001907348633
    8. 's' → logprob: -17.500001907348633
    9. '_START' → logprob: -17.625001907348633
    10. '_time' → logprob: -17.750001907348633

Token 331: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408327460289
    2. '=' → logprob: -0.9740833044052124
    3. '=start' → logprob: -12.099082946777344
    4. '＝' → logprob: -15.224082946777344
    5. ' ' → logprob: -15.849082946777344
    6. '=end' → logprob: -15.849082946777344
    7. '<|end|>' → logprob: -16.849082946777344
    8. 'start' → logprob: -18.474082946777344
    9. 's' → logprob: -18.474082946777344
    10. ' ' → logprob: -18.599082946777344

Token 332: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.01814994215965271
    2. ' start' → logprob: -4.0181498527526855
    3. '[start' → logprob: -19.643150329589844
    4. '=start' → logprob: -20.643150329589844
    5. '	start' → logprob: -21.018150329589844
    6. '   ' → logprob: -21.643150329589844
    7. 'star' → logprob: -21.893150329589844
    8. '(start' → logprob: -21.893150329589844
    9. 'int' → logprob: -22.143150329589844
    10. '_start' → logprob: -22.768150329589844

Token 333: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.6240566083070007e-06
    2. 'pos' → logprob: -13.500001907348633
    3. 'ing' → logprob: -16.625001907348633
    4. 'Pos' → logprob: -17.250001907348633
    5. 's' → logprob: -17.625001907348633
    6. 't' → logprob: -17.625001907348633
    7. '_' → logprob: -17.875001907348633
    8. '_p' → logprob: -18.000001907348633
    9. '_POS' → logprob: -18.750001907348633
    10. 'ed' → logprob: -19.000001907348633

Token 334: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 335: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 336: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03076605126261711
    2. '   ' → logprob: -3.530766010284424
    3. ' def' → logprob: -6.905766010284424
    4. '	def' → logprob: -11.405766487121582
    5. '    
' → logprob: -14.280766487121582
    6. '
' → logprob: -14.655766487121582
    7. ' ' → logprob: -15.405766487121582
    8. '       ' → logprob: -15.405766487121582
    9. '  ' → logprob: -15.905766487121582
    10. '        
' → logprob: -16.530765533447266

Token 337: ' leave' (ID: 7668)
  Prédit: ' release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' release' → logprob: -1.1826053857803345
    2. ' free' → logprob: -1.4326053857803345
    3. 'release' → logprob: -2.182605266571045
    4. ' leave' → logprob: -2.307605266571045
    5. 'leave' → logprob: -2.557605266571045
    6. 'free' → logprob: -3.307605266571045
    7. ' remove' → logprob: -3.682605266571045
    8. 'vac' → logprob: -3.807605266571045
    9. 'remove' → logprob: -3.932605266571045
    10. ' vac' → logprob: -4.057605266571045

Token 338: '_group' (ID: 15990)
  Prédit: '_group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -0.007235070690512657
    2. '(self' → logprob: -5.257235050201416
    3. '_se' → logprob: -6.382235050201416
    4. '_groups' → logprob: -8.257235527038574
    5. 'Group' → logprob: -10.382235527038574
    6. '_' → logprob: -11.882235527038574
    7. 'group' → logprob: -13.007235527038574
    8. 'self' → logprob: -13.007235527038574
    9. '_self' → logprob: -13.007235527038574
    10. '_(' → logprob: -14.257235527038574

Token 339: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00016396844875998795
    2. '(' → logprob: -8.750164031982422
    3. ' (' → logprob: -12.875164031982422
    4. 'self' → logprob: -13.000164031982422
    5. '   ' → logprob: -14.500164031982422
    6. '       ' → logprob: -16.375164031982422
    7. ' self' → logprob: -17.625164031982422
    8. '(group' → logprob: -18.000164031982422
    9. '(se' → logprob: -18.625164031982422
    10. '(
' → logprob: -18.750164031982422

Token 340: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008701201528310776
    2. 'self' → logprob: -4.758701324462891
    3. '(self' → logprob: -9.88370132446289
    4. ' ,' → logprob: -11.00870132446289
    5. ' self' → logprob: -11.13370132446289
    6. ',self' → logprob: -13.75870132446289
    7. ',
' → logprob: -13.88370132446289
    8. '       ' → logprob: -14.63370132446289
    9. 'group' → logprob: -14.63370132446289
    10. 's' → logprob: -14.88370132446289

Token 341: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.6370127201080322
    2. ' group' → logprob: -0.7620127201080322
    3. 'self' → logprob: -6.262012481689453
    4. ' self' → logprob: -7.387012481689453
    5. 'seat' → logprob: -7.512012481689453
    6. ' seat' → logprob: -7.887012481689453
    7. 'start' → logprob: -8.012012481689453
    8. ' start' → logprob: -8.637012481689453
    9. '       ' → logprob: -9.012012481689453
    10. 'index' → logprob: -9.012012481689453

Token 342: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021265586838126183
    2. 'self' → logprob: -4.146265506744385
    3. '):' → logprob: -5.771265506744385
    4. ':' → logprob: -6.896265506744385
    5. '):
' → logprob: -8.271265983581543
    6. ' self' → logprob: -8.396265983581543
    7. '   ' → logprob: -8.521265983581543
    8. '(self' → logprob: -8.771265983581543
    9. '       ' → logprob: -9.146265983581543
    10. ')' → logprob: -9.396265983581543

Token 343: ' Group' (ID: 7849)
  Prédit: 'Group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Group' → logprob: -0.8315402269363403
    2. ' group' → logprob: -1.7065402269363403
    3. 'self' → logprob: -1.8315402269363403
    4. ' Group' → logprob: -1.9565402269363403
    5. ' self' → logprob: -2.831540107727051
    6. 'group' → logprob: -3.831540107727051
    7. 'index' → logprob: -8.33154010772705
    8. ' index' → logprob: -8.83154010772705
    9. '   ' → logprob: -8.95654010772705
    10. '       ' → logprob: -9.08154010772705

Token 344: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2545633316040039
    2. '):' → logprob: -1.504563331604004
    3. ',' → logprob: -7.004563331604004
    4. 'self' → logprob: -7.504563331604004
    5. '):
' → logprob: -7.629563331604004
    6. ')' → logprob: -7.754563331604004
    7. '   ' → logprob: -8.754563331604004
    8. '       ' → logprob: -10.504563331604004
    9. '):

' → logprob: -10.629563331604004
    10. ' ):
' → logprob: -10.629563331604004

Token 345: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.437675803899765
    2. 'for' → logprob: -1.1876758337020874
    3. '       ' → logprob: -3.187675714492798
    4. '   ' → logprob: -4.812675952911377
    5. 'start' → logprob: -9.687675476074219
    6. ' if' → logprob: -10.312675476074219
    7. 'if' → logprob: -10.562675476074219
    8. ' start' → logprob: -11.312675476074219
    9. '	for' → logprob: -11.687675476074219
    10. '```' → logprob: -16.06267547607422

Token 346: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06109918653964996
    2. 'start' → logprob: -3.0610992908477783
    3. ' for' → logprob: -4.811099052429199
    4. 'if' → logprob: -5.686099052429199
    5. ' start' → logprob: -7.186099052429199
    6. '   ' → logprob: -9.6860990524292
    7. ' if' → logprob: -9.6860990524292
    8. '       ' → logprob: -11.1860990524292
    9. 'pos' → logprob: -12.1860990524292
    10. 'seat' → logprob: -14.1860990524292

Token 347: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22542071342468262
    2. ' i' → logprob: -1.6004207134246826
    3. 'seat' → logprob: -12.975420951843262
    4. ' seat' → logprob: -13.350420951843262
    5. ' ' → logprob: -13.850420951843262
    6. 'pos' → logprob: -14.225420951843262
    7. '```' → logprob: -14.225420951843262
    8. '   ' → logprob: -14.725420951843262
    9. ' pos' → logprob: -14.725420951843262
    10. ' idx' → logprob: -15.225420951843262

Token 348: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.474081814289093
    2. 'in' → logprob: -0.974081814289093
    3. ',' → logprob: -12.474081993103027
    4. ' ' → logprob: -14.724081993103027
    5. '   ' → logprob: -15.099081993103027
    6. '  ' → logprob: -16.47408103942871
    7. 'range' → logprob: -16.47408103942871
    8. '    ' → logprob: -16.72408103942871
    9. '```' → logprob: -17.22408103942871
    10. '       ' → logprob: -17.84908103942871

Token 349: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06197160854935646
    2. ' range' → logprob: -2.811971664428711
    3. '(range' → logprob: -13.061971664428711
    4. '   ' → logprob: -14.311971664428711
    5. ' ' → logprob: -14.936971664428711
    6. '	range' → logprob: -15.311971664428711
    7. 'group' → logprob: -15.436971664428711
    8. '  ' → logprob: -15.811971664428711
    9. '    ' → logprob: -16.43697166442871
    10. '[' → logprob: -16.56197166442871

Token 350: '(group' (ID: 36416)
  Prédit: '(group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(group' → logprob: -0.133285790681839
    2. '(range' → logprob: -2.1332857608795166
    3. 'range' → logprob: -5.133285999298096
    4. ' range' → logprob: -8.383285522460938
    5. 'group' → logprob: -8.633285522460938
    6. ' group' → logprob: -10.758285522460938
    7. '(' → logprob: -11.508285522460938
    8. ' (' → logprob: -13.258285522460938
    9. '[group' → logprob: -15.258285522460938
    10. '(groups' → logprob: -15.383285522460938

Token 351: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -7.896309739408025e-07
    2. '.' → logprob: -14.875000953674316
    3. ' .' → logprob: -15.625000953674316
    4. 'seat' → logprob: -16.875
    5. '.Se' → logprob: -17.5
    6. '	se' → logprob: -17.75
    7. '_se' → logprob: -17.875
    8. 'se' → logprob: -18.375
    9. '(se' → logprob: -19.125
    10. '   ' → logprob: -19.5

Token 352: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.9981420336989686e-05
    2. 'seat' → logprob: -11.375020027160645
    3. 'ated' → logprob: -13.250020027160645
    4. 'ат' → logprob: -13.375020027160645
    5. 'a' → logprob: -14.125020027160645
    6. '_se' → logprob: -14.500020027160645
    7. 'ar' → logprob: -14.937520027160645
    8. '_at' → logprob: -15.062520027160645
    9. 'ate' → logprob: -15.125020027160645
    10. 't' → logprob: -15.125020027160645

Token 353: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -1.1472419600977446e-06
    2. 'start' → logprob: -14.000000953674316
    3. 't' → logprob: -15.875000953674316
    4. 'r' → logprob: -17.250001907348633
    5. '_START' → logprob: -17.625001907348633
    6. 'd' → logprob: -18.000001907348633
    7. 'Start' → logprob: -19.500001907348633
    8. ' _' → logprob: -19.875001907348633
    9. '_' → logprob: -19.875001907348633
    10. '_star' → logprob: -20.500001907348633

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.659005157416686e-05
    2. ' ,' → logprob: -9.625066757202148
    3. ',
' → logprob: -15.250066757202148
    4. ',i' → logprob: -16.12506675720215
    5. '   ' → logprob: -16.87506675720215
    6. '       ' → logprob: -17.50006675720215
    7. '_,' → logprob: -17.87506675720215
    8. ' or' → logprob: -18.87506675720215
    9. '),' → logprob: -18.87506675720215
    10. '           ' → logprob: -19.25006675720215

Token 355: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.020546678453683853
    2. ' group' → logprob: -3.8955466747283936
    3. '   ' → logprob: -13.645546913146973
    4. '       ' → logprob: -13.895546913146973
    5. '           ' → logprob: -14.395546913146973
    6. '	group' → logprob: -14.395546913146973
    7. '(group' → logprob: -14.520546913146973
    8. '"group' → logprob: -15.895546913146973
    9. '    ' → logprob: -16.020545959472656
    10. '[group' → logprob: -16.145545959472656

Token 356: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -3.054500666621607e-06
    2. '.group' → logprob: -13.12500286102295
    3. 'seat' → logprob: -14.12500286102295
    4. '_se' → logprob: -16.250003814697266
    5. 'se' → logprob: -16.375003814697266
    6. ' .' → logprob: -16.750003814697266
    7. '.' → logprob: -17.750003814697266
    8. '.Se' → logprob: -17.750003814697266
    9. '	se' → logprob: -18.625003814697266
    10. '(se' → logprob: -19.000003814697266

Token 357: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.00011689399980241433
    2. '_start' → logprob: -9.375117301940918
    3. 'ar' → logprob: -11.625117301940918
    4. 't' → logprob: -12.000117301940918
    5. 'art' → logprob: -12.125117301940918
    6. 'a' → logprob: -12.375117301940918
    7. 'start' → logprob: -13.125117301940918
    8. 'eat' → logprob: -13.375117301940918
    9. '.start' → logprob: -13.625117301940918
    10. 'al' → logprob: -14.500117301940918

Token 358: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0015903194434940815
    2. 'start' → logprob: -6.501590251922607
    3. '.start' → logprob: -9.751590728759766
    4. '.group' → logprob: -10.751590728759766
    5. 'group' → logprob: -12.626590728759766
    6. '.se' → logprob: -13.376590728759766
    7. 'Start' → logprob: -13.501590728759766
    8. 'seat' → logprob: -14.126590728759766
    9. '_size' → logprob: -15.751590728759766
    10. '_se' → logprob: -15.876590728759766

Token 359: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06196768581867218
    2. '+' → logprob: -2.811967611312866
    3. ' ' → logprob: -17.186967849731445
    4. ' ' → logprob: -19.436967849731445
    5. ' +
' → logprob: -19.811967849731445
    6. '+self' → logprob: -20.061967849731445
    7. '＋' → logprob: -20.186967849731445
    8. ')' → logprob: -20.311967849731445
    9. '   ' → logprob: -20.686967849731445
    10. '+n' → logprob: -20.936967849731445

Token 360: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.0019286326132714748
    2. ' group' → logprob: -6.251928806304932
    3. '       ' → logprob: -19.501928329467773
    4. '   ' → logprob: -19.751928329467773
    5. '	group' → logprob: -19.876928329467773
    6. '(group' → logprob: -20.501928329467773
    7. '"group' → logprob: -20.501928329467773
    8. '.group' → logprob: -20.751928329467773
    9. 'groups' → logprob: -21.001928329467773
    10. '
' → logprob: -21.251928329467773

Token 361: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -1.4974866644479334e-05
    2. 'size' → logprob: -11.250015258789062
    3. '.' → logprob: -13.250015258789062
    4. ' .' → logprob: -16.375015258789062
    5. ' size' → logprob: -17.625015258789062
    6. '.se' → logprob: -19.750015258789062
    7. ').' → logprob: -20.500015258789062
    8. '_size' → logprob: -20.625015258789062
    9. '	size' → logprob: -20.750015258789062
    10. '```' → logprob: -20.875015258789062

Token 362: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.001723965280689299
    2. '):' → logprob: -6.376723766326904
    3. '       ' → logprob: -11.251724243164062
    4. '):
' → logprob: -11.876724243164062
    5. ' ):
' → logprob: -14.001724243164062
    6. '   ' → logprob: -14.751724243164062
    7. '           ' → logprob: -14.876724243164062
    8. ':
' → logprob: -15.751724243164062
    9. '):

' → logprob: -16.626724243164062
    10. '():
' → logprob: -16.751724243164062

Token 363: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004703533835709095
    2. 'self' → logprob: -5.504703521728516
    3. ' self' → logprob: -7.379703521728516
    4. '   ' → logprob: -14.504703521728516
    5. '       ' → logprob: -14.879703521728516
    6. '	self' → logprob: -16.629703521728516
    7. '               ' → logprob: -16.754703521728516
    8. '[self' → logprob: -17.629703521728516
    9. '		' → logprob: -17.754703521728516
    10. '	       ' → logprob: -18.254703521728516

Token 364: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00022451656695920974
    2. ' self' → logprob: -8.500224113464355
    3. '           ' → logprob: -11.375224113464355
    4. '       ' → logprob: -11.625224113464355
    5. '   ' → logprob: -15.000224113464355
    6. '	self' → logprob: -15.375224113464355
    7. '               ' → logprob: -17.625225067138672
    8. '[self' → logprob: -18.750225067138672
    9. ' ' → logprob: -19.750225067138672
    10. '(self' → logprob: -20.375225067138672

Token 365: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -0.0004436587623786181
    2. 'se' → logprob: -7.750443458557129
    3. ' .' → logprob: -12.250443458557129
    4. '	se' → logprob: -13.000443458557129
    5. '.s' → logprob: -13.250443458557129
    6. '.' → logprob: -13.250443458557129
    7. '           ' → logprob: -13.875443458557129
    8. '_se' → logprob: -14.625443458557129
    9. '       ' → logprob: -15.000443458557129
    10. 's' → logprob: -15.375443458557129

Token 366: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -3.368984107510187e-05
    2. 's' → logprob: -11.500033378601074
    3. 'ts' → logprob: -12.125033378601074
    4. 'at' → logprob: -12.250033378601074
    5. 'ates' → logprob: -12.375033378601074
    6. ' ats' → logprob: -13.750033378601074
    7. 'a' → logprob: -13.875033378601074
    8. '#' → logprob: -14.375033378601074
    9. 'ets' → logprob: -14.500033378601074
    10. 'se' → logprob: -14.625033378601074

Token 367: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.375
    3. 'i' → logprob: -16.75
    4. '```' → logprob: -17.875
    5. '[I' → logprob: -18.375
    6. '[
' → logprob: -18.75
    7. ' [' → logprob: -19.25
    8. '[self' → logprob: -19.375
    9. '
' → logprob: -19.75
    10. '   ' → logprob: -19.75

Token 368: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0024490193463861942
    2. '=' → logprob: -6.752449035644531
    3. ' =' → logprob: -7.002449035644531
    4. ']=' → logprob: -8.252449035644531
    5. ')' → logprob: -9.502449035644531
    6. ' ]' → logprob: -10.377449035644531
    7. '=None' → logprob: -13.752449035644531
    8. 'None' → logprob: -15.127449035644531
    9. ' ' → logprob: -15.877449035644531
    10. '<|end|>' → logprob: -15.877449035644531

Token 369: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815052703022957
    2. ' =' → logprob: -4.018150329589844
    3. '=None' → logprob: -14.268150329589844
    4. ']=' → logprob: -17.518150329589844
    5. ']' → logprob: -17.768150329589844
    6. '=

' → logprob: -19.268150329589844
    7. ' ' → logprob: -19.643150329589844
    8. '   ' → logprob: -19.893150329589844
    9. ')' → logprob: -20.143150329589844
    10. 'None' → logprob: -20.268150329589844

Token 370: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.15310683415737e-05
    2. ' None' → logprob: -10.750021934509277
    3. '(None' → logprob: -19.25002098083496
    4. '_None' → logprob: -19.87502098083496
    5. '=None' → logprob: -21.25002098083496
    6. ',None' → logprob: -22.75002098083496
    7. '.None' → logprob: -23.00002098083496
    8. '   ' → logprob: -23.62502098083496
    9. '_none' → logprob: -24.87502098083496
    10. 'none' → logprob: -24.87502098083496

Token 371: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 372: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7669062614440918
    2. '<|end|>' → logprob: -0.7669062614440918
    3. 'def' → logprob: -3.391906261444092
    4. '
' → logprob: -4.266906261444092
    5. '<|end|>' → logprob: -4.766906261444092
    6. '#' → logprob: -5.016906261444092
    7. '   ' → logprob: -5.891906261444092
    8. '```' → logprob: -6.266906261444092
    9. '\n' → logprob: -7.266906261444092
    10. ' class' → logprob: -7.766906261444092

Token 373: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.31416434049606323
    2. 'def' (adapté à ' def') → logprob: -1.314164400100708
    3. '   ' → logprob: -7.189164161682129
    4. 'import' → logprob: -9.439164161682129
    5. 'from' → logprob: -10.189164161682129
    6. ' class' → logprob: -11.439164161682129
    7. '```' → logprob: -11.939164161682129
    8. ' def' → logprob: -12.189164161682129
    9. '#' → logprob: -13.564164161682129
    10. '       ' → logprob: -13.689164161682129

Token 374: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2734174132347107
    2. ' __' → logprob: -1.7734174728393555
    3. 'get' → logprob: -4.1484174728393555
    4. 'available' → logprob: -4.3984174728393555
    5. 'occupied' → logprob: -4.5234174728393555
    6. ' get' → logprob: -5.0234174728393555
    7. 'status' → logprob: -5.1484174728393555
    8. 'is' → logprob: -5.3984174728393555
    9. ' occupied' → logprob: -5.8984174728393555
    10. ' available' → logprob: -6.7734174728393555

Token 375: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.0019323242595419288
    2. 'str' → logprob: -6.251932144165039
    3. 'len' → logprob: -12.501932144165039
    4. 'rep' → logprob: -17.75193214416504
    5. '_repr' → logprob: -19.37693214416504
    6. ' repr' → logprob: -19.50193214416504
    7. 'getitem' → logprob: -19.50193214416504
    8. 'iter' → logprob: -20.12693214416504
    9. 'represent' → logprob: -21.62693214416504
    10. 'r' → logprob: -21.75193214416504

Token 376: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0024632872082293034
    2. '(self' → logprob: -6.127463340759277
    3. '__' → logprob: -8.502463340759277
    4. '__(
' → logprob: -9.627463340759277
    5. 'self' → logprob: -12.752463340759277
    6. '_(' → logprob: -12.877463340759277
    7. '(' → logprob: -13.127463340759277
    8. '__('' → logprob: -14.377463340759277
    9. '__((' → logprob: -15.127463340759277
    10. '__[' → logprob: -15.252463340759277

Token 377: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.512236498361744e-07
    2. ' self' → logprob: -15.000000953674316
    3. ')' → logprob: -16.5
    4. '(self' → logprob: -18.625
    5. 's' → logprob: -20.75
    6. '
' → logprob: -21.125
    7. 'Self' → logprob: -21.125
    8. '   ' → logprob: -21.75
    9. '       ' → logprob: -22.375
    10. '):
' → logprob: -22.625

Token 378: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4466492533683777
    2. '(self' → logprob: -1.1966493129730225
    3. ')(' → logprob: -3.5716493129730225
    4. '__(' → logprob: -4.321649074554443
    5. '):
' → logprob: -4.696649074554443
    6. ')' → logprob: -5.446649074554443
    7. '):' → logprob: -6.071649074554443
    8. ' self' → logprob: -8.696649551391602
    9. '   ' → logprob: -8.946649551391602
    10. '       ' → logprob: -8.946649551391602

Token 379: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.763666947837919e-05
    2. '   ' → logprob: -10.12504768371582
    3. 'return' → logprob: -13.25004768371582
    4. ' return' → logprob: -13.37504768371582
    5. 'def' → logprob: -13.50004768371582
    6. 'self' → logprob: -14.00004768371582
    7. '           ' → logprob: -14.75004768371582
    8. '"' → logprob: -14.87504768371582
    9. '     ' → logprob: -15.62504768371582
    10. '      ' → logprob: -15.87504768371582

Token 380: ' #' (ID: 1069)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6514812707901001
    2. 'return' → logprob: -1.0264812707901
    3. ''' → logprob: -3.0264811515808105
    4. ' return' → logprob: -3.6514811515808105
    5. '       ' → logprob: -3.9014811515808105
    6. '   ' → logprob: -4.1514811515808105
    7. ' "["' → logprob: -6.1514811515808105
    8. '"<' → logprob: -6.4014811515808105
    9. ' '['' → logprob: -6.6514811515808105
    10. 'f' → logprob: -6.9014811515808105

Token 381: ' Represent' (ID: 34617)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2030743956565857
    2. '"' → logprob: -2.5780744552612305
    3. ' return' → logprob: -2.7030744552612305
    4. ''' → logprob: -3.8280744552612305
    5. '''.' → logprob: -4.2030744552612305
    6. '       ' → logprob: -7.4530744552612305
    7. '   ' → logprob: -7.5780744552612305
    8. ' ''.' → logprob: -7.7030744552612305
    9. 's' → logprob: -7.9530744552612305
    10. 'r' → logprob: -8.20307445526123

Token 382: ' seats' (ID: 24992)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1782630980014801
    2. ''' → logprob: -2.0532631874084473
    3. 'self' → logprob: -4.553263187408447
    4. 'f' → logprob: -4.678263187408447
    5. '''.' → logprob: -5.428263187408447
    6. ' f' → logprob: -5.553263187408447
    7. ' "["' → logprob: -6.178263187408447
    8. '"[' → logprob: -6.803263187408447
    9. ' '['' → logprob: -7.178263187408447
    10. ' ''.' → logprob: -7.303263187408447

Token 383: ':' (ID: 25)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.18448896706104279
    2. '(self' → logprob: -2.8094890117645264
    3. 'self' → logprob: -2.8094890117645264
    4. '       ' → logprob: -3.4344890117645264
    5. '   ' → logprob: -5.434488773345947
    6. ' self' → logprob: -5.559488773345947
    7. ' =' → logprob: -5.934488773345947
    8. ' line' → logprob: -6.559488773345947
    9. 'as' → logprob: -6.809488773345947
    10. ' in' → logprob: -7.434488773345947

Token 384: ' '_'' (ID: 86115)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.33278509974479675
    2. ''' → logprob: -2.207785129547119
    3. '''.' → logprob: -2.957785129547119
    4. ' '['' → logprob: -3.207785129547119
    5. '"[' → logprob: -3.832785129547119
    6. ' ''.' → logprob: -3.832785129547119
    7. 'return' → logprob: -4.332785129547119
    8. ' "["' → logprob: -4.707785129547119
    9. '[' → logprob: -5.582785129547119
    10. ' return' → logprob: -5.832785129547119

Token 385: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.791461169719696
    2. 'if' → logprob: -1.1664612293243408
    3. 'for' → logprob: -1.9164612293243408
    4. ' for' → logprob: -2.666461229324341
    5. '<|end|>' → logprob: -5.166460990905762
    6. '.' → logprob: -5.416460990905762
    7. '[]' → logprob: -6.416460990905762
    8. '_' → logprob: -6.416460990905762
    9. '[' → logprob: -6.541460990905762
    10. ''' → logprob: -6.666460990905762

Token 386: ' empty' (ID: 8213)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.05169409513473511
    2. 'empty' → logprob: -3.55169415473938
    3. 'free' → logprob: -4.176693916320801
    4. ' None' → logprob: -5.926693916320801
    5. '_' → logprob: -6.301693916320801
    6. ' free' → logprob: -6.676693916320801
    7. ' empty' → logprob: -7.801693916320801
    8. 'Empty' → logprob: -9.5516939163208
    9. 'Free' → logprob: -10.1766939163208
    10. '_empty' → logprob: -10.9266939163208

Token 387: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41128429770469666
    2. ''' → logprob: -2.1612842082977295
    3. ' seats' → logprob: -3.0362842082977295
    4. '"' → logprob: -3.5362842082977295
    5. 'def' → logprob: -3.6612842082977295
    6. '       ' → logprob: -3.7862842082977295
    7. '[' → logprob: -3.9112842082977295
    8. '   ' → logprob: -4.411284446716309
    9. ' and' → logprob: -4.536284446716309
    10. ' for' → logprob: -4.911284446716309

Token 388: ' else' (ID: 1203)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.03419099748134613
    2. ''' → logprob: -3.7841908931732178
    3. ''-' → logprob: -5.034191131591797
    4. '.' → logprob: -6.284191131591797
    5. ' '.'' → logprob: -7.409191131591797
    6. '"."' → logprob: -7.909191131591797
    7. ''#' → logprob: -8.034191131591797
    8. '''.' → logprob: -8.159191131591797
    9. ''*' → logprob: -8.409191131591797
    10. '".' → logprob: -9.284191131591797

Token 389: ' group' (ID: 3566)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.014046442694962025
    2. 'the' → logprob: -5.514046669006348
    3. ' str' → logprob: -5.764046669006348
    4. ''' → logprob: -6.264046669006348
    5. 'G' → logprob: -6.639046669006348
    6. 'group' → logprob: -7.389046669006348
    7. 'g' → logprob: -7.514046669006348
    8. ''#' → logprob: -7.639046669006348
    9. 'f' → logprob: -8.264046669006348
    10. ' the' → logprob: -8.264046669006348

Token 390: ' index' (ID: 3472)
  Prédit: '.index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.1722603142261505
    2. 'index' → logprob: -3.047260284423828
    3. '_index' → logprob: -3.297260284423828
    4. '_repr' → logprob: -3.797260284423828
    5. '"' → logprob: -4.672260284423828
    6. 's' → logprob: -4.797260284423828
    7. '_char' → logprob: -5.047260284423828
    8. '_str' → logprob: -5.422260284423828
    9. '_idx' → logprob: -5.422260284423828
    10. '.' → logprob: -6.047260284423828

Token 391: ' modulo' (ID: 112372)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5553656220436096
    2. '       ' → logprob: -0.9303656220436096
    3. ' return' → logprob: -4.305365562438965
    4. '   ' → logprob: -4.805365562438965
    5. 's' → logprob: -5.930365562438965
    6. 'def' → logprob: -6.055365562438965
    7. '[' → logprob: -6.555365562438965
    8. 'result' → logprob: -7.055365562438965
    9. ')' → logprob: -7.180365562438965
    10. ',' → logprob: -7.680365562438965

Token 392: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.010551928542554379
    2. ' ' → logprob: -4.760551929473877
    3. '5' → logprob: -6.760551929473877
    4. '_' → logprob: -7.885551929473877
    5. '17' → logprob: -8.510551452636719
    6. 'self' → logprob: -9.760551452636719
    7. '```' → logprob: -10.385551452636719
    8. ''' → logprob: -10.885551452636719
    9. '[' → logprob: -11.385551452636719
    10. '7' → logprob: -11.510551452636719

Token 393: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0001645644661039114
    2. '5' → logprob: -8.750164985656738
    3. '17' → logprob: -12.750164985656738
    4. ' ' → logprob: -14.000164985656738
    5. '
' → logprob: -14.250164985656738
    6. '9' → logprob: -15.000164985656738
    7. 'self' → logprob: -15.125164985656738
    8. '_' → logprob: -15.375164985656738
    9. '```' → logprob: -15.375164985656738
    10. '100' → logprob: -15.875164985656738

Token 394: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1517801582813263
    2. 'return' → logprob: -2.276780128479004
    3. ' return' → logprob: -4.401780128479004
    4. ')' → logprob: -4.776780128479004
    5. '   ' → logprob: -5.151780128479004
    6. ' +' → logprob: -5.901780128479004
    7. ',' → logprob: -6.151780128479004
    8. 's' → logprob: -6.401780128479004
    9. '+' → logprob: -6.401780128479004
    10. '[' → logprob: -7.026780128479004

Token 395: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001667207689024508
    2. 'return' → logprob: -7.251667022705078
    3. 'def' → logprob: -7.376667022705078
    4. '   ' → logprob: -8.626667022705078
    5. ' return' → logprob: -8.876667022705078
    6. '```' → logprob: -12.251667022705078
    7. ' def' → logprob: -13.126667022705078
    8. '
' → logprob: -13.376667022705078
    9. '           ' → logprob: -14.126667022705078
    10. 'result' → logprob: -14.751667022705078

Token 396: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03465007618069649
    2. ' return' → logprob: -3.7846500873565674
    3. '       ' → logprob: -4.534649848937988
    4. '''.' → logprob: -7.659649848937988
    5. '"' → logprob: -9.909649848937988
    6. '   ' → logprob: -10.284649848937988
    7. 'result' → logprob: -10.284649848937988
    8. ' ''.' → logprob: -11.909649848937988
    9. 'def' → logprob: -12.784649848937988
    10. 'res' → logprob: -12.909649848937988

Token 397: ' ''.' (ID: 105941)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06487585604190826
    2. ''"' → logprob: -3.564875841140747
    3. '''.' → logprob: -3.939875841140747
    4. ' ''.' → logprob: -4.814876079559326
    5. ' '"'' → logprob: -5.939876079559326
    6. ' "".' → logprob: -6.064876079559326
    7. ''' → logprob: -6.814876079559326
    8. ' "'"' → logprob: -8.189875602722168
    9. '""' → logprob: -8.314875602722168
    10. '''' → logprob: -8.939875602722168

Token 398: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -9.610702363715973e-06
    2. '''.' → logprob: -12.125009536743164
    3. '.join' → logprob: -13.125009536743164
    4. ''.' → logprob: -13.750009536743164
    5. ' join' → logprob: -15.250009536743164
    6. '```' → logprob: -15.375009536743164
    7. 'jo' → logprob: -15.500009536743164
    8. '.' → logprob: -16.250009536743164
    9. 'j' → logprob: -16.750009536743164
    10. '``' → logprob: -16.875009536743164

Token 399: '(str' (ID: 7946)
  Prédit: '('_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('_' → logprob: -0.008863568305969238
    2. '(['' → logprob: -5.00886344909668
    3. '(' → logprob: -6.88386344909668
    4. '("_' → logprob: -7.25886344909668
    5. ''' → logprob: -8.50886344909668
    6. '('' → logprob: -9.63386344909668
    7. '((' → logprob: -10.38386344909668
    8. '([' → logprob: -10.38386344909668
    9. '('.' → logprob: -10.63386344909668
    10. '(
' → logprob: -10.75886344909668

Token 400: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.3453611135482788
    2. '(self' → logprob: -2.2203612327575684
    3. '(g' → logprob: -2.2203612327575684
    4. '(se' → logprob: -2.8453612327575684
    5. '((' → logprob: -4.720361232757568
    6. '(x' → logprob: -4.970361232757568
    7. '(group' → logprob: -8.34536075592041
    8. '(' → logprob: -8.59536075592041
    9. '(None' → logprob: -8.84536075592041
    10. '(i' → logprob: -8.97036075592041

Token 401: ' %' (ID: 1851)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0387033186852932
    2. '[s' → logprob: -4.413703441619873
    3. ' if' → logprob: -4.663703441619873
    4. '[i' → logprob: -5.413703441619873
    5. '[' → logprob: -5.538703441619873
    6. '(i' → logprob: -5.913703441619873
    7. '('_' → logprob: -6.538703441619873
    8. 'x' → logprob: -7.413703441619873
    9. '(x' → logprob: -7.413703441619873
    10. '%' → logprob: -7.788703441619873

Token 402: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.750019073486328
    4. '
' → logprob: -17.250019073486328
    5. '  ' → logprob: -18.125019073486328
    6. '۱۰' → logprob: -18.625019073486328
    7. '```' → logprob: -19.375019073486328
    8. ')' → logprob: -19.500019073486328
    9. '1' → logprob: -19.500019073486328
    10. '１０' → logprob: -19.875019073486328

Token 403: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '۱۰' → logprob: -21.375
    4. '
' → logprob: -22.5
    5. '１０' → logprob: -22.875
    6. '```' → logprob: -23.0
    7. '   ' → logprob: -23.625
    8. '१०' → logprob: -23.625
    9. '  ' → logprob: -23.75
    10. '১০' → logprob: -24.125

Token 404: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7012290954589844
    2. ' if' → logprob: -0.7012290954589844
    3. 'if' → logprob: -4.826229095458984
    4. ' )' → logprob: -10.701229095458984
    5. '_' → logprob: -11.951229095458984
    6. ' ' → logprob: -12.951229095458984
    7. '()' → logprob: -14.576229095458984
    8. '   ' → logprob: -14.951229095458984
    9. '_)' → logprob: -15.576229095458984
    10. '[' → logprob: -16.701229095458984

Token 405: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3132648468017578
    2. ' if' → logprob: -1.3132648468017578
    3. ')' → logprob: -13.063264846801758
    4. 'for' → logprob: -15.063264846801758
    5. 's' → logprob: -15.563264846801758
    6. 'or' → logprob: -15.688264846801758
    7. ' ' → logprob: -16.188264846801758
    8. '   ' → logprob: -16.313264846801758
    9. '[i' → logprob: -17.188264846801758
    10. '_' → logprob: -17.563264846801758

Token 406: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002475777640938759
    2. ' s' → logprob: -6.002475738525391
    3. '_s' → logprob: -18.25247573852539
    4. '   ' → logprob: -18.50247573852539
    5. ' ' → logprob: -18.50247573852539
    6. ' isinstance' → logprob: -18.62747573852539
    7. '	s' → logprob: -18.75247573852539
    8. '{s' → logprob: -19.87747573852539
    9. '(s' → logprob: -20.50247573852539
    10. '
' → logprob: -20.50247573852539

Token 407: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5759696364402771
    2. ' is' → logprob: -0.8259696364402771
    3. 'else' → logprob: -10.450969696044922
    4. ' else' → logprob: -14.575969696044922
    5. 's' → logprob: -14.825969696044922
    6. ' ' → logprob: -15.450969696044922
    7. '	is' → logprob: -16.825969696044922
    8. 'not' → logprob: -17.075969696044922
    9. '   ' → logprob: -17.700969696044922
    10. ' not' → logprob: -17.825969696044922

Token 408: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3133332431316376
    2. ' not' → logprob: -1.31333327293396
    3. '```' → logprob: -10.938333511352539
    4. 'n' → logprob: -11.438333511352539
    5. 'int' → logprob: -12.063333511352539
    6. '       ' → logprob: -12.188333511352539
    7. '
' → logprob: -12.563333511352539
    8. '#' → logprob: -12.813333511352539
    9. '           ' → logprob: -12.938333511352539
    10. '!' → logprob: -12.938333511352539

Token 409: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -4.5491004129871726e-05
    2. ' None' → logprob: -10.000045776367188
    3. '=None' → logprob: -17.625045776367188
    4. '_None' → logprob: -19.000045776367188
    5. '0' → logprob: -19.625045776367188
    6. 'none' → logprob: -20.250045776367188
    7. '
' → logprob: -21.000045776367188
    8. '(None' → logprob: -21.625045776367188
    9. '.None' → logprob: -21.750045776367188
    10. '_none' → logprob: -22.375045776367188

Token 410: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.25192928314208984
    2. 'else' → logprob: -1.5019292831420898
    3. ' for' → logprob: -17.001930236816406
    4. ' ' → logprob: -17.126930236816406
    5. '	else' → logprob: -17.751930236816406
    6. '```' → logprob: -18.501930236816406
    7. '
' → logprob: -18.876930236816406
    8. '_else' → logprob: -19.001930236816406
    9. ' ' → logprob: -19.126930236816406
    10. 'for' → logprob: -19.126930236816406

Token 411: ' '_'' (ID: 86115)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03958085551857948
    2. '"' → logprob: -4.039580821990967
    3. ''_' → logprob: -4.164580821990967
    4. ' '_'' → logprob: -5.664580821990967
    5. '_' → logprob: -6.164580821990967
    6. '"_' → logprob: -9.539581298828125
    7. ' "_"' → logprob: -11.039581298828125
    8. '('_' → logprob: -12.414581298828125
    9. '_'' → logprob: -13.164581298828125
    10. ' ' → logprob: -13.664581298828125

Token 412: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02988586015999317
    2. 'for' → logprob: -3.529885768890381
    3. ')' → logprob: -9.029886245727539
    4. '	for' → logprob: -11.404886245727539
    5. '<|end|>' → logprob: -13.404886245727539
    6. ' ' → logprob: -13.654886245727539
    7. '   ' → logprob: -14.404886245727539
    8. '_' → logprob: -14.529886245727539
    9. '       ' → logprob: -15.029886245727539
    10. '  ' → logprob: -16.27988624572754

Token 413: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47408363223075867
    2. ' s' → logprob: -0.974083662033081
    3. 'self' → logprob: -12.34908390045166
    4. ' self' → logprob: -13.72408390045166
    5. '_s' → logprob: -13.97408390045166
    6. '_' → logprob: -15.72408390045166
    7. '	s' → logprob: -16.849082946777344
    8. '`s' → logprob: -17.224082946777344
    9. '   ' → logprob: -17.474082946777344
    10. ' ' → logprob: -17.724082946777344

Token 414: ' in' (ID: 306)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006726026069372892
    2. ' self' → logprob: -5.006725788116455
    3. 's' → logprob: -11.506726264953613
    4. 'se' → logprob: -15.756726264953613
    5. '(self' → logprob: -15.756726264953613
    6. ' s' → logprob: -16.006725311279297
    7. 'range' → logprob: -16.006725311279297
    8. '[self' → logprob: -17.381725311279297
    9. 'sel' → logprob: -17.881725311279297
    10. 'elf' → logprob: -18.131725311279297

Token 415: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003360582049936056
    2. ' self' → logprob: -8.000335693359375
    3. 'range' → logprob: -14.375335693359375
    4. ' range' → logprob: -18.625335693359375
    5. '   ' → logprob: -18.750335693359375
    6. ' ' → logprob: -19.000335693359375
    7. '(self' → logprob: -19.375335693359375
    8. '[self' → logprob: -19.625335693359375
    9. '
' → logprob: -20.125335693359375
    10. '  ' → logprob: -20.375335693359375

Token 416: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -7.815280696377158e-05
    2. 'se' → logprob: -9.500078201293945
    3. '.' → logprob: -12.875078201293945
    4. ')' → logprob: -14.875078201293945
    5. '	se' → logprob: -16.250078201293945
    6. '.s' → logprob: -16.375078201293945
    7. '.Se' → logprob: -16.500078201293945
    8. ' .' → logprob: -16.625078201293945
    9. 's' → logprob: -18.500078201293945
    10. ').' → logprob: -18.500078201293945

Token 417: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -4.251091377227567e-05
    2. 's' → logprob: -11.000042915344238
    3. 'ts' → logprob: -11.375042915344238
    4. 'a' → logprob: -12.500042915344238
    5. 'nts' → logprob: -13.125042915344238
    6. '[' → logprob: -14.125042915344238
    7. 'ates' → logprob: -14.125042915344238
    8. '_' → logprob: -14.250042915344238
    9. '>' → logprob: -14.375042915344238
    10. ')' → logprob: -14.375042915344238

Token 418: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -14.375000953674316
    3. ' )' → logprob: -14.375000953674316
    4. '())' → logprob: -16.250001907348633
    5. '))' → logprob: -17.500001907348633
    6. ')}' → logprob: -17.750001907348633
    7. '<|end|>' → logprob: -17.875001907348633
    8. '   ' → logprob: -18.500001907348633
    9. ')return' → logprob: -18.500001907348633
    10. '}' → logprob: -19.000001907348633

Token 419: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -6.873571692267433e-05
    2. 'import' → logprob: -10.250068664550781
    3. ' class' → logprob: -11.375068664550781
    4. 'def' → logprob: -11.500068664550781
    5. 'from' → logprob: -12.250068664550781
    6. '```' → logprob: -12.250068664550781
    7. '<|end|>' → logprob: -13.375068664550781
    8. '
' → logprob: -15.125068664550781
    9. '<class' → logprob: -15.875068664550781
    10. '"class' → logprob: -16.25006866455078

Token 420: ' Queue' (ID: 35581)
  Prédit: ' Simulator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Simulator' → logprob: -1.0199615955352783
    2. ' Simulation' → logprob: -1.7699615955352783
    3. ' Restaurant' → logprob: -2.3949615955352783
    4. ' Event' → logprob: -2.3949615955352783
    5. 'Simulator' → logprob: -2.7699615955352783
    6. 'Simulation' → logprob: -2.8949615955352783
    7. 'Event' → logprob: -3.3949615955352783
    8. ' Scheduler' → logprob: -3.7699615955352783
    9. 'Restaurant' → logprob: -4.019961357116699
    10. ' Queue' → logprob: -4.144961357116699

Token 421: 'System' (ID: 3320)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006744031794369221
    2. ':
' → logprob: -5.131743907928467
    3. 'Manager' → logprob: -8.006744384765625
    4. 'Queue' → logprob: -8.881744384765625
    5. 'Line' → logprob: -8.881744384765625
    6. 'ing' → logprob: -10.381744384765625
    7. 's' → logprob: -10.881744384765625
    8. '):' → logprob: -11.006744384765625
    9. 'Waiting' → logprob: -11.131744384765625
    10. '():' → logprob: -11.131744384765625

Token 422: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036112358793616295
    2. ':
' → logprob: -5.628611087799072
    3. ' :' → logprob: -12.37861156463623
    4. '<|end|>' → logprob: -13.37861156463623
    5. '):' → logprob: -13.62861156463623
    6. ':

' → logprob: -13.87861156463623
    7. ':def' → logprob: -14.12861156463623
    8. '(object' → logprob: -14.37861156463623
    9. '>:' → logprob: -14.75361156463623
    10. ':**' → logprob: -15.12861156463623

Token 423: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5768490433692932
    2. ' def' → logprob: -0.8268490433692932
    3. 'def' → logprob: -7.076848983764648
    4. ' class' → logprob: -10.326848983764648
    5. '	def' → logprob: -11.826848983764648
    6. 'class' → logprob: -11.826848983764648
    7. ' ' → logprob: -12.201848983764648
    8. '    ' → logprob: -12.576848983764648
    9. '  ' → logprob: -13.576848983764648
    10. ':' → logprob: -13.701848983764648

Token 424: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.21583910286426544
    2. '   ' → logprob: -2.215839147567749
    3. 'def' (adapté à ' def') → logprob: -2.465839147567749
    4. 'import' → logprob: -9.340839385986328
    5. 'class' → logprob: -10.215839385986328
    6. '	def' → logprob: -12.840839385986328
    7. ' ' → logprob: -12.840839385986328
    8. '    ' → logprob: -13.215839385986328
    9. ' import' → logprob: -14.090839385986328
    10. '```' → logprob: -14.340839385986328

Token 425: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2572672963142395
    2. '__' → logprob: -1.5072672367095947
    3. 'init' → logprob: -5.882267475128174
    4. 'def' → logprob: -6.757267475128174
    5. '_init' → logprob: -7.257267475128174
    6. ' def' → logprob: -7.632267475128174
    7. '```' → logprob: -9.382266998291016
    8. ' init' → logprob: -9.632266998291016
    9. ' ' → logprob: -11.507266998291016
    10. '___' → logprob: -12.632266998291016

Token 426: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.754368223482743e-05
    2. '__' → logprob: -10.500067710876465
    3. 'def' → logprob: -11.125067710876465
    4. '```' → logprob: -11.750067710876465
    5. ' init' → logprob: -12.000067710876465
    6. 'class' → logprob: -12.250067710876465
    7. '_init' → logprob: -12.500067710876465
    8. 'int' → logprob: -13.125067710876465
    9. 'iter' → logprob: -15.875067710876465
    10. 'it' → logprob: -15.875067710876465

Token 427: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.20245233178138733
    2. '(self' → logprob: -1.702452301979065
    3. ' (' → logprob: -7.827452182769775
    4. '__' → logprob: -8.702452659606934
    5. 'self' → logprob: -8.952452659606934
    6. '_(' → logprob: -8.952452659606934
    7. '(' → logprob: -9.202452659606934
    8. '__(
' → logprob: -9.952452659606934
    9. '   ' → logprob: -10.452452659606934
    10. 'class' → logprob: -10.827452659606934

Token 428: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019293478690087795
    2. ' self' → logprob: -6.25192928314209
    3. '
' → logprob: -15.12692928314209
    4. '   ' → logprob: -15.62692928314209
    5. '       ' → logprob: -15.75192928314209
    6. ',' → logprob: -16.501930236816406
    7. '(self' → logprob: -17.251930236816406
    8. 'se' → logprob: -17.376930236816406
    9. ')' → logprob: -17.626930236816406
    10. '0' → logprob: -17.876930236816406

Token 429: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07077554613351822
    2. 'self' → logprob: -2.6957755088806152
    3. ' self' → logprob: -7.695775508880615
    4. '(self' → logprob: -8.320775985717773
    5. ' (' → logprob: -9.570775985717773
    6. ' ,' → logprob: -10.570775985717773
    7. '   ' → logprob: -11.445775985717773
    8. ',self' → logprob: -11.570775985717773
    9. '__(' → logprob: -11.695775985717773
    10. '<|end|>' → logprob: -12.570775985717773

Token 430: ' total' (ID: 3609)
  Prédit: ' seats'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' seats' → logprob: -1.1209431886672974
    2. 'se' → logprob: -1.3709431886672974
    3. ' max' → logprob: -2.370943069458008
    4. 'max' → logprob: -2.870943069458008
    5. ' seating' → logprob: -2.870943069458008
    6. '):
' → logprob: -2.995943069458008
    7. 'self' → logprob: -2.995943069458008
    8. ' groups' → logprob: -3.620943069458008
    9. ' self' → logprob: -3.995943069458008
    10. 'groups' → logprob: -4.245943069458008

Token 431: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -0.4921371638774872
    2. '_se' → logprob: -0.9921371936798096
    3. 'se' → logprob: -4.3671369552612305
    4. '_time' → logprob: -5.6171369552612305
    5. 'groups' → logprob: -7.9921369552612305
    6. '=' → logprob: -8.36713695526123
    7. '_people' → logprob: -8.99213695526123
    8. 'time' → logprob: -8.99213695526123
    9. '_' → logprob: -9.11713695526123
    10. '_slots' → logprob: -9.49213695526123

Token 432: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06206202134490013
    2. '=' → logprob: -2.9370620250701904
    3. '):' → logprob: -5.312061786651611
    4. ':int' → logprob: -6.687061786651611
    5. '):
' → logprob: -7.562061786651611
    6. ',' → logprob: -8.18706226348877
    7. '_count' → logprob: -9.06206226348877
    8. ' :' → logprob: -10.06206226348877
    9. ' =' → logprob: -12.81206226348877
    10. ':
' → logprob: -12.93706226348877

Token 433: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.18007682263851166
    2. ' int' → logprob: -1.8050768375396729
    3. '10' → logprob: -9.430076599121094
    4. '20' → logprob: -9.555076599121094
    5. '17' → logprob: -9.680076599121094
    6. '=int' → logprob: -10.180076599121094
    7. ' ' → logprob: -10.805076599121094
    8. '15' → logprob: -11.680076599121094
    9. '16' → logprob: -11.680076599121094
    10. '18' → logprob: -12.055076599121094

Token 434: ' =' (ID: 314)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2420477271080017
    2. '=' → logprob: -2.1170477867126465
    3. '):' → logprob: -2.4920477867126465
    4. ',' → logprob: -4.4920477867126465
    5. ' =' → logprob: -8.617047309875488
    6. '):
' → logprob: -8.742047309875488
    7. ' ):
' → logprob: -9.117047309875488
    8. ':' → logprob: -9.617047309875488
    9. '   ' → logprob: -9.617047309875488
    10. ' ):' → logprob: -9.992047309875488

Token 435: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -0.5517377853393555
    2. '30' → logprob: -2.3017377853393555
    3. '50' → logprob: -2.3017377853393555
    4. '25' → logprob: -3.0517377853393555
    5. '10' → logprob: -3.1767377853393555
    6. '17' → logprob: -3.3017377853393555
    7. '100' → logprob: -3.4267377853393555
    8. '40' → logprob: -3.8017377853393555
    9. '15' → logprob: -4.8017377853393555
    10. '21' → logprob: -5.8017377853393555

Token 436: '100' (ID: 1353)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.6587550044059753
    2. '50' → logprob: -2.15875506401062
    3. '30' → logprob: -2.53375506401062
    4. '25' → logprob: -2.65875506401062
    5. '10' → logprob: -2.65875506401062
    6. '100' → logprob: -3.03375506401062
    7. '17' → logprob: -3.65875506401062
    8. '40' → logprob: -4.283754825592041
    9. '15' → logprob: -4.408754825592041
    10. '21' → logprob: -5.408754825592041

Token 437: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5780085325241089
    2. '):' → logprob: -0.8280085325241089
    3. ',' → logprob: -6.578008651733398
    4. '):
' → logprob: -7.328008651733398
    5. '0' → logprob: -11.953008651733398
    6. '   ' → logprob: -12.328008651733398
    7. '       ' → logprob: -12.328008651733398
    8. ')' → logprob: -13.953008651733398
    9. ' ):' → logprob: -13.953008651733398
    10. '):

' → logprob: -14.078008651733398

Token 438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001795608433894813
    2. '   ' → logprob: -7.251795768737793
    3. '
' → logprob: -7.751795768737793
    4. 'self' → logprob: -7.751795768737793
    5. 'def' → logprob: -9.126795768737793
    6. ',' → logprob: -10.251795768737793
    7. ' self' → logprob: -10.376795768737793
    8. 'import' → logprob: -11.626795768737793
    9. '        
' → logprob: -12.126795768737793
    10. '```' → logprob: -12.126795768737793

Token 439: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.024720098823308945
    2. '       ' → logprob: -3.7747201919555664
    3. ' self' → logprob: -6.524720191955566
    4. '   ' → logprob: -12.149720191955566
    5. '	self' → logprob: -14.649720191955566
    6. 'from' → logprob: -15.149720191955566
    7. '
' → logprob: -15.649720191955566
    8. 'def' → logprob: -15.774720191955566
    9. ' ' → logprob: -15.899720191955566
    10. 'import' → logprob: -16.14971923828125

Token 440: '.groups' (ID: 89749)
  Prédit: '.total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.3337129056453705
    2. '.groups' → logprob: -1.3337129354476929
    3. ' total' → logprob: -5.083713054656982
    4. 'total' → logprob: -5.458713054656982
    5. '.se' → logprob: -5.833713054656982
    6. '.' → logprob: -6.208713054656982
    7. ' groups' → logprob: -6.458713054656982
    8. '.current' → logprob: -7.083713054656982
    9. ' .' → logprob: -7.458713054656982
    10. 'groups' → logprob: -7.833713054656982

Token 441: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602766215801239
    2. '=' → logprob: -1.9102766513824463
    3. ':' → logprob: -10.785276412963867
    4. '   ' → logprob: -11.035276412963867
    5. '=[]' → logprob: -11.535276412963867
    6. ' ' → logprob: -12.535276412963867
    7. '[' → logprob: -14.535276412963867
    8. '  ' → logprob: -14.535276412963867
    9. '    ' → logprob: -15.410276412963867
    10. 's' → logprob: -15.660276412963867

Token 442: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10315915942192078
    2. ' [' → logprob: -2.353159189224243
    3. '[group' → logprob: -5.853158950805664
    4. '[class' → logprob: -10.353158950805664
    5. '[G' → logprob: -11.353158950805664
    6. '[g' → logprob: -11.478158950805664
    7. '[int' → logprob: -12.103158950805664
    8. '[List' → logprob: -12.353158950805664
    9. '[list' → logprob: -13.603158950805664
    10. '[type' → logprob: -13.603158950805664

Token 443: 'Group' (ID: 2748)
  Prédit: 'Group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Group' → logprob: -0.0019288709154352546
    2. ' Group' → logprob: -6.251928806304932
    3. '	Group' → logprob: -15.62692928314209
    4. '       ' → logprob: -16.501928329467773
    5. '   ' → logprob: -18.001928329467773
    6. '<Group' → logprob: -18.126928329467773
    7. 'None' → logprob: -18.376928329467773
    8. '           ' → logprob: -19.001928329467773
    9. '(Group' → logprob: -19.251928329467773
    10. '.Group' → logprob: -19.626928329467773

Token 444: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.849109119386412e-06
    2. '(' → logprob: -11.875009536743164
    3. '(index' → logprob: -13.500009536743164
    4. 'i' → logprob: -13.750009536743164
    5. ' (' → logprob: -15.125009536743164
    6. '(idx' → logprob: -17.125009536743164
    7. ']' → logprob: -17.250009536743164
    8. '](' → logprob: -17.500009536743164
    9. '(k' → logprob: -18.375009536743164
    10. '(n' → logprob: -18.375009536743164

Token 445: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021491888910531998
    2. '+' → logprob: -6.3771491050720215
    3. ' +' → logprob: -8.00214958190918
    4. ' )' → logprob: -9.25214958190918
    5. '=' → logprob: -12.00214958190918
    6. ')
' → logprob: -12.87714958190918
    7. '   ' → logprob: -13.37714958190918
    8. 'i' → logprob: -13.75214958190918
    9. '=i' → logprob: -13.87714958190918
    10. '+i' → logprob: -14.00214958190918

Token 446: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.029796430841088295
    2. 'for' → logprob: -3.5297963619232178
    3. ')' → logprob: -10.154796600341797
    4. '   ' → logprob: -13.279796600341797
    5. '       ' → logprob: -13.279796600341797
    6. '+' → logprob: -13.654796600341797
    7. ' ' → logprob: -14.404796600341797
    8. '	for' → logprob: -14.529796600341797
    9. '        ' → logprob: -15.279796600341797
    10. '```' → logprob: -15.529796600341797

Token 447: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20300976932048798
    2. 'i' → logprob: -2.453009843826294
    3. 'range' → logprob: -2.578009843826294
    4. ' i' → logprob: -3.828009843826294
    5. ' in' → logprob: -11.203009605407715
    6. 'in' → logprob: -12.953009605407715
    7. ' ' → logprob: -14.953009605407715
    8. '(range' → logprob: -15.078009605407715
    9. '	range' → logprob: -15.328009605407715
    10. '   ' → logprob: -15.703009605407715

Token 448: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11989186704158783
    2. 'in' → logprob: -2.369891881942749
    3. 'range' → logprob: -4.11989164352417
    4. ' range' → logprob: -5.74489164352417
    5. 'i' → logprob: -10.494892120361328
    6. ' i' → logprob: -11.619892120361328
    7. ' ' → logprob: -11.869892120361328
    8. '  ' → logprob: -13.744892120361328
    9. '   ' → logprob: -13.869892120361328
    10. 'n' → logprob: -14.744892120361328

Token 449: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06196768581867218
    2. ' range' → logprob: -2.811967611312866
    3. '(range' → logprob: -17.186967849731445
    4. '	range' → logprob: -18.561967849731445
    5. '   ' → logprob: -19.561967849731445
    6. ' ' → logprob: -19.686967849731445
    7. 'Range' → logprob: -20.936967849731445
    8. '  ' → logprob: -21.686967849731445
    9. '1' → logprob: -21.936967849731445
    10. '_range' → logprob: -22.061967849731445

Token 450: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4745902121067047
    2. '(total' → logprob: -0.9745901823043823
    3. '1' → logprob: -7.849590301513672
    4. 'total' → logprob: -9.099590301513672
    5. '(self' → logprob: -11.974590301513672
    6. ' (' → logprob: -12.849590301513672
    7. ' total' → logprob: -13.349590301513672
    8. '(t' → logprob: -15.349590301513672
    9. '   ' → logprob: -15.724590301513672
    10. ' ' → logprob: -16.099590301513672

Token 451: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -0.054487936198711395
    2. '(total' → logprob: -3.429487943649292
    3. '100' → logprob: -4.679487705230713
    4. 'total' → logprob: -5.179487705230713
    5. ')' → logprob: -5.929487705230713
    6. '_total' → logprob: -6.929487705230713
    7. ' total' → logprob: -7.554487705230713
    8. '_' → logprob: -7.804487705230713
    9. ')]' → logprob: -7.804487705230713
    10. '(' → logprob: -8.179488182067871

Token 452: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.416665640543215e-05
    2. ')]
' → logprob: -10.62503433227539
    3. ' )' → logprob: -12.00003433227539
    4. ')' → logprob: -13.12503433227539
    5. '       ' → logprob: -14.00003433227539
    6. ' ]' → logprob: -16.00003433227539
    7. ')]

' → logprob: -16.12503433227539
    8. ']' → logprob: -16.12503433227539
    9. ')]
' → logprob: -16.62503433227539
    10. ')])' → logprob: -16.75003433227539

Token 453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002497537061572075
    2. 'self' → logprob: -6.127497673034668
    3. ' self' → logprob: -8.877497673034668
    4. '
' → logprob: -9.002497673034668
    5. '   ' → logprob: -10.502497673034668
    6. '<|end|>' → logprob: -11.002497673034668
    7. '        
' → logprob: -13.377497673034668
    8. '```' → logprob: -13.502497673034668
    9. '      ' → logprob: -14.377497673034668
    10. ' ' → logprob: -14.502497673034668

Token 454: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0005934244254603982
    2. '       ' → logprob: -7.750593662261963
    3. ' self' → logprob: -8.875593185424805
    4. 'from' → logprob: -11.375593185424805
    5. '   ' → logprob: -12.625593185424805
    6. 'import' → logprob: -13.250593185424805
    7. 'def' → logprob: -13.375593185424805
    8. '
' → logprob: -13.375593185424805
    9. 'class' → logprob: -13.500593185424805
    10. 'for' → logprob: -13.625593185424805

Token 455: '.se' (ID: 5877)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.39971110224723816
    2. ' seating' → logprob: -1.1497111320495605
    3. '.se' → logprob: -4.8997111320495605
    4. 'time' → logprob: -6.6497111320495605
    5. 'waiting' → logprob: -6.6497111320495605
    6. 'current' → logprob: -6.7747111320495605
    7. '_se' → logprob: -8.024710655212402
    8. 'next' → logprob: -8.274710655212402
    9. 'seat' → logprob: -8.399710655212402
    10. ' current' → logprob: -9.024710655212402

Token 456: 'ating' (ID: 1365)
  Prédit: 'ating'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ating' → logprob: -0.475800096988678
    2. 'ats' → logprob: -0.975800096988678
    3. 'atings' → logprob: -6.850800037384033
    4. 'atting' → logprob: -8.225800514221191
    5. 'at' → logprob: -8.350800514221191
    6. 'ated' → logprob: -9.475800514221191
    7. 'ates' → logprob: -11.975800514221191
    8. 'atin' → logprob: -12.100800514221191
    9. 'ATING' → logprob: -12.288300514221191
    10. 'ati' → logprob: -12.350800514221191

Token 457: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0430278517305851
    2. '=' → logprob: -3.168027877807617
    3. 's' → logprob: -10.668027877807617
    4. ' ' → logprob: -12.918027877807617
    5. 'system' → logprob: -14.168027877807617
    6. '  ' → logprob: -14.418027877807617
    7. ' system' → logprob: -14.793027877807617
    8. 'System' → logprob: -14.918027877807617
    9. '_system' → logprob: -15.293027877807617
    10. ')' → logprob: -15.793027877807617

Token 458: ' Seating' (ID: 166017)
  Prédit: ' Seating'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Seating' → logprob: -0.023410622030496597
    2. 'Se' → logprob: -3.7734105587005615
    3. ' seating' → logprob: -8.77341079711914
    4. ' Se' → logprob: -11.77341079711914
    5. 'Seat' → logprob: -13.64841079711914
    6. 'Seats' → logprob: -13.89841079711914
    7. ' Seats' → logprob: -16.27341079711914
    8. ' ' → logprob: -16.27341079711914
    9. 'se' → logprob: -16.39841079711914
    10. 'S' → logprob: -16.39841079711914

Token 459: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1272595226764679
    2. '()
' → logprob: -2.1272594928741455
    3. '(' → logprob: -8.627259254455566
    4. '()

' → logprob: -8.877259254455566
    5. '()
' → logprob: -11.877259254455566
    6. '()\' → logprob: -14.127259254455566
    7. '(total' → logprob: -14.252259254455566
    8. '())' → logprob: -14.377259254455566
    9. '()`' → logprob: -14.502259254455566
    10. ' ()' → logprob: -14.502259254455566

Token 460: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004147376399487257
    2. 'self' → logprob: -5.629147529602051
    3. '
' → logprob: -8.25414752960205
    4. ' self' → logprob: -8.37914752960205
    5. '   ' → logprob: -10.37914752960205
    6. '        
' → logprob: -11.50414752960205
    7. '```' → logprob: -12.37914752960205
    8. '	self' → logprob: -12.50414752960205
    9. 'def' → logprob: -12.75414752960205
    10. '      ' → logprob: -13.62914752960205

Token 461: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00040409780922345817
    2. '       ' → logprob: -8.500404357910156
    3. 'from' → logprob: -9.500404357910156
    4. 'import' → logprob: -9.625404357910156
    5. ' self' → logprob: -9.875404357910156
    6. 'def' → logprob: -13.000404357910156
    7. '
' → logprob: -13.250404357910156
    8. '   ' → logprob: -13.375404357910156
    9. '        
' → logprob: -14.250404357910156
    10. '	self' → logprob: -14.750404357910156

Token 462: '.current' (ID: 8357)
  Prédit: '.time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.time' → logprob: -0.2966870069503784
    2. '.current' → logprob: -2.046687126159668
    3. '.wait' → logprob: -2.796687126159668
    4. 'time' → logprob: -3.671687126159668
    5. '.queue' → logprob: -3.671687126159668
    6. '.events' → logprob: -5.296687126159668
    7. 'waiting' → logprob: -5.921687126159668
    8. '.event' → logprob: -6.421687126159668
    9. '.pending' → logprob: -6.671687126159668
    10. '.arr' → logprob: -6.796687126159668

Token 463: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.000169332604855299
    2. '_' → logprob: -8.75016975402832
    3. ' _' → logprob: -11.87516975402832
    4. '_index' → logprob: -13.50016975402832
    5. 'time' → logprob: -14.12516975402832
    6. '_t' → logprob: -14.50016975402832
    7. '_timer' → logprob: -14.87516975402832
    8. '_group' → logprob: -15.25016975402832
    9. '_token' → logprob: -16.25016975402832
    10. 'Time' → logprob: -16.37516975402832

Token 464: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740777611732483
    2. '=' → logprob: -0.9740777611732483
    3. ' ' → logprob: -14.724078178405762
    4. '0' → logprob: -15.849078178405762
    5. '   ' → logprob: -16.724077224731445
    6. ':' → logprob: -17.099077224731445
    7. ',' → logprob: -17.099077224731445
    8. '    ' → logprob: -17.849077224731445
    9. '<|end|>' → logprob: -18.224077224731445
    10. 's' → logprob: -18.974077224731445

Token 465: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5570885807392187e-05
    2. ' ' → logprob: -11.125015258789062
    3. '-' → logprob: -15.312515258789062
    4. '   ' → logprob: -15.687515258789062
    5. 'self' → logprob: -16.750015258789062
    6. '=' → logprob: -17.062515258789062
    7. '  ' → logprob: -17.312515258789062
    8. '۰' → logprob: -17.687515258789062
    9. '[' → logprob: -17.750015258789062
    10. '5' → logprob: -17.937515258789062

Token 466: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -12.125009536743164
    3. '-' → logprob: -12.750009536743164
    4. 'self' → logprob: -16.000009536743164
    5. '   ' → logprob: -16.125009536743164
    6. '1' → logprob: -16.250009536743164
    7. '5' → logprob: -16.562509536743164
    8. '=' → logprob: -17.000009536743164
    9. '  ' → logprob: -17.187509536743164
    10. '000' → logprob: -17.312509536743164

Token 467: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06282389909029007
    2. '
' → logprob: -2.937824010848999
    3. '<|end|>' → logprob: -5.06282377243042
    4. ',' → logprob: -7.81282377243042
    5. 'self' → logprob: -7.81282377243042
    6. '   ' → logprob: -8.562824249267578
    7. '<|end|>' → logprob: -8.687824249267578
    8. ' self' → logprob: -9.062824249267578
    9. '        
' → logprob: -9.187824249267578
    10. ',
' → logprob: -9.937824249267578

Token 468: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001305118203163147
    2. 'self' → logprob: -7.251305103302002
    3. ' self' → logprob: -7.626305103302002
    4. '<|end|>' → logprob: -10.00130558013916
    5. '	self' → logprob: -10.87630558013916
    6. '   ' → logprob: -11.00130558013916
    7. 'def' → logprob: -12.00130558013916
    8. '```' → logprob: -12.25130558013916
    9. '
' → logprob: -12.62630558013916
    10. '<|end|>' → logprob: -12.87630558013916

Token 469: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0074982475489377975
    2. '       ' → logprob: -5.507498264312744
    3. ' self' → logprob: -6.257498264312744
    4. 'from' → logprob: -6.757498264312744
    5. 'import' → logprob: -8.257497787475586
    6. '
' → logprob: -10.507497787475586
    7. '   ' → logprob: -11.007497787475586
    8. '	self' → logprob: -11.757497787475586
    9. ' from' → logprob: -12.632497787475586
    10. '0' → logprob: -12.632497787475586

Token 470: '.wait' (ID: 29833)
  Prédit: '.wait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.wait' → logprob: -0.21250928938388824
    2. '.queue' → logprob: -2.3375093936920166
    3. '.groups' → logprob: -3.3375093936920166
    4. '.pending' → logprob: -4.0875091552734375
    5. '.arr' → logprob: -4.4625091552734375
    6. 'waiting' → logprob: -4.9625091552734375
    7. '.events' → logprob: -5.0875091552734375
    8. '.se' → logprob: -5.4625091552734375
    9. '.group' → logprob: -6.2125091552734375
    10. '.event' → logprob: -6.4625091552734375

Token 471: '_queue' (ID: 25622)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.09109926968812943
    2. '_queue' → logprob: -2.466099262237549
    3. '_list' → logprob: -6.591099262237549
    4. 'list' → logprob: -7.716099262237549
    5. 'queue' → logprob: -9.216099739074707
    6. 's' → logprob: -9.591099739074707
    7. '_' → logprob: -9.716099739074707
    8. '=' → logprob: -10.841099739074707
    9. 'ers' → logprob: -11.216099739074707
    10. '_groups' → logprob: -11.216099739074707

Token 472: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5780664682388306
    2. '=' → logprob: -0.8280664682388306
    3. '=[]' → logprob: -6.203066349029541
    4. ':' → logprob: -9.5780668258667
    5. '[]' → logprob: -11.2030668258667
    6. '=[]
' → logprob: -12.5780668258667
    7. '   ' → logprob: -12.5780668258667
    8. '  ' → logprob: -13.2030668258667
    9. ' ' → logprob: -13.5780668258667
    10. ',' → logprob: -13.5780668258667

Token 473: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0001261845463886857
    2. ' []' → logprob: -9.000125885009766
    3. '[]}' → logprob: -13.250125885009766
    4. '[' → logprob: -14.375125885009766
    5. '[]
' → logprob: -15.250125885009766
    6. '[]>' → logprob: -16.625125885009766
    7. '[]

' → logprob: -16.750125885009766
    8. 'deque' → logprob: -17.500125885009766
    9. '[],' → logprob: -17.875125885009766
    10. '[])' → logprob: -18.750125885009766

Token 474: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028558509424328804
    2. '<|end|>' → logprob: -4.278558731079102
    3. ' self' → logprob: -4.778558731079102
    4. 'self' → logprob: -5.403558731079102
    5. '   ' → logprob: -7.778558731079102
    6. '<|end|>' → logprob: -8.403558731079102
    7. ',' → logprob: -9.028558731079102
    8. '	self' → logprob: -9.153558731079102
    9. '(self' → logprob: -9.278558731079102
    10. '```' → logprob: -9.528558731079102

Token 475: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.015697753056883812
    2. ' self' → logprob: -4.265697956085205
    3. '       ' → logprob: -7.015697956085205
    4. '[]' → logprob: -8.140697479248047
    5. 'for' → logprob: -8.890697479248047
    6. '   ' → logprob: -9.890697479248047
    7. 'def' → logprob: -10.765697479248047
    8. ' for' → logprob: -11.265697479248047
    9. 'import' → logprob: -11.265697479248047
    10. '	self' → logprob: -11.265697479248047

Token 476: '.' (ID: 13)
  Prédit: '.se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -1.0469181537628174
    2. '.wait' → logprob: -1.6719181537628174
    3. '.completed' → logprob: -1.9219181537628174
    4. '.finished' → logprob: -2.5469181537628174
    5. '.pending' → logprob: -3.6719181537628174
    6. '.' → logprob: -4.046917915344238
    7. '.process' → logprob: -4.296917915344238
    8. '.active' → logprob: -4.296917915344238
    9. '.running' → logprob: -4.546917915344238
    10. '.available' → logprob: -4.546917915344238

Token 477: 'occupied' (ID: 98229)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.9513935446739197
    2. 'se' → logprob: -1.7013936042785645
    3. 'waiting' → logprob: -1.7013936042785645
    4. 'finished' → logprob: -2.4513936042785645
    5. 'event' → logprob: -3.2013936042785645
    6. 'leave' → logprob: -3.4513936042785645
    7. 'le' → logprob: -3.9513936042785645
    8. 'arr' → logprob: -4.2013936042785645
    9. 'wait' → logprob: -5.2013936042785645
    10. 'finish' → logprob: -5.3263936042785645

Token 478: '_groups' (ID: 50609)
  Prédit: '_se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_se' → logprob: -0.659345269203186
    2. ' =' → logprob: -1.409345269203186
    3. '=' → logprob: -2.5343451499938965
    4. '_groups' → logprob: -2.5343451499938965
    5. '=[]' → logprob: -3.4093451499938965
    6. 'se' → logprob: -3.6593451499938965
    7. '_times' → logprob: -4.5343451499938965
    8. '_time' → logprob: -6.7843451499938965
    9. '_inter' → logprob: -6.7843451499938965
    10. 's' → logprob: -6.9093451499938965

Token 479: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17975448071956635
    2. '=' → logprob: -1.8047544956207275
    3. ' ' → logprob: -12.304754257202148
    4. '=set' → logprob: -13.554754257202148
    5. '=[]' → logprob: -13.929754257202148
    6. ']' → logprob: -14.679754257202148
    7. ':' → logprob: -14.679754257202148
    8. ')' → logprob: -14.679754257202148
    9. '   ' → logprob: -15.179754257202148
    10. 's' → logprob: -15.304754257202148

Token 480: ' []
' (ID: 8911)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.26054447889328003
    2. '[]' → logprob: -1.5105445384979248
    3. 'set' → logprob: -4.760544300079346
    4. ' set' → logprob: -12.260544776916504
    5. 'dict' → logprob: -12.385544776916504
    6. ' {}' → logprob: -13.135544776916504
    7. ' []' → logprob: -13.260544776916504
    8. '[]}' → logprob: -13.260544776916504
    9. '[]
' → logprob: -14.010544776916504
    10. '{' → logprob: -14.260544776916504

Token 481: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05645250901579857
    2. 'def' → logprob: -3.556452512741089
    3. '<|end|>' → logprob: -3.931452512741089
    4. ' def' → logprob: -5.30645227432251
    5. '
' → logprob: -7.05645227432251
    6. '<|end|>' → logprob: -7.80645227432251
    7. '	def' → logprob: -8.556452751159668
    8. '    
' → logprob: -9.056452751159668
    9. '```' → logprob: -9.181452751159668
    10. '       ' → logprob: -10.556452751159668

Token 482: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6636924743652344
    2. '   ' → logprob: -0.7886924743652344
    3. '       ' → logprob: -4.038692474365234
    4. 'self' (adapté à ' self') → logprob: -5.038692474365234
    5. ' def' → logprob: -5.913692474365234
    6. '
' → logprob: -6.038692474365234
    7. ')' → logprob: -8.038692474365234
    8. '<|end|>' → logprob: -8.663692474365234
    9. '	def' → logprob: -8.788692474365234
    10. ',' → logprob: -8.913692474365234

Token 483: '.last' (ID: 15748)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08562994748353958
    2. ' .' → logprob: -3.835629940032959
    3. '.wait' → logprob: -3.835629940032959
    4. '.available' → logprob: -4.960629940032959
    5. '.current' → logprob: -5.585629940032959
    6. '.completed' → logprob: -5.835629940032959
    7. '.pending' → logprob: -6.085629940032959
    8. '.free' → logprob: -6.335629940032959
    9. '.queue' → logprob: -6.460629940032959
    10. 'def' → logprob: -6.460629940032959

Token 484: '_arr' (ID: 25121)
  Prédit: '_se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_se' → logprob: -0.837918758392334
    2. '_arr' → logprob: -2.212918758392334
    3. '_leave' → logprob: -2.337918758392334
    4. '_index' → logprob: -2.712918758392334
    5. '_event' → logprob: -3.087918758392334
    6. '_group' → logprob: -3.087918758392334
    7. '_time' → logprob: -3.087918758392334
    8. '_' → logprob: -3.712918758392334
    9. '_depart' → logprob: -4.212918758392334
    10. '_release' → logprob: -4.212918758392334

Token 485: 'ived' (ID: 3276)
  Prédit: 'ival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.12752000987529755
    2. 'ived' → logprob: -2.1275200843811035
    3. '_time' → logprob: -9.377519607543945
    4. '```' → logprob: -9.377519607543945
    5. 'ive' → logprob: -10.002519607543945
    6. 'ivals' → logprob: -10.252519607543945
    7. 'ivel' → logprob: -10.377519607543945
    8. 'val' → logprob: -10.377519607543945
    9. '[' → logprob: -10.627519607543945
    10. '   ' → logprob: -11.002519607543945

Token 486: ' =' (ID: 314)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.17325252294540405
    2. ' =' → logprob: -2.173252582550049
    3. '=' → logprob: -3.173252582550049
    4. '_group' → logprob: -6.048252582550049
    5. '_id' → logprob: -8.17325210571289
    6. 'index' → logprob: -8.29825210571289
    7. '<|end|>' → logprob: -8.54825210571289
    8. '=index' → logprob: -8.92325210571289
    9. 'Index' → logprob: -9.67325210571289
    10. '_idx' → logprob: -10.17325210571289

Token 487: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015583087224513292
    2. '0' → logprob: -6.626558303833008
    3. ' -' → logprob: -8.501558303833008
    4. 'None' → logprob: -10.626558303833008
    5. '-group' → logprob: -13.126558303833008
    6. ' ' → logprob: -14.501558303833008
    7. '-none' → logprob: -15.251558303833008
    8. ' None' → logprob: -15.626558303833008
    9. '-self' → logprob: -15.626558303833008
    10. 'self' → logprob: -15.751558303833008

Token 488: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005784121458418667
    2. '0' → logprob: -7.7505784034729
    3. ' -' → logprob: -9.375578880310059
    4. 'None' → logprob: -9.750578880310059
    5. '-group' → logprob: -13.375578880310059
    6. 'self' → logprob: -14.375578880310059
    7. 'len' → logprob: -14.625578880310059
    8. 'max' → logprob: -15.375578880310059
    9. '-none' → logprob: -15.500578880310059
    10. '{-' → logprob: -15.625578880310059

Token 489: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.303070604801178
    2. '<|end|>' → logprob: -1.5530705451965332
    3. '   ' → logprob: -3.178070545196533
    4. 'def' → logprob: -5.928070545196533
    5. '<|end|>' → logprob: -5.928070545196533
    6. '

' → logprob: -6.928070545196533
    7. '       ' → logprob: -7.053070545196533
    8. ' def' → logprob: -7.928070545196533
    9. ',' → logprob: -8.928071022033691
    10. '    
' → logprob: -9.053071022033691

Token 490: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01840943843126297
    2. '<|end|>' → logprob: -4.768409252166748
    3. '

' → logprob: -5.393409252166748
    4. 'def' → logprob: -5.643409252166748
    5. '   ' → logprob: -7.643409252166748
    6. ' def' → logprob: -7.893409252166748
    7. '
    
' → logprob: -8.518409729003906
    8. '<|end|>' → logprob: -9.143409729003906
    9. '    
' → logprob: -9.268409729003906
    10. '
' → logprob: -9.268409729003906

Token 491: ' index' (ID: 3472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 492: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 493: ' last' (ID: 2174)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8583135008811951
    2. ' last' → logprob: -1.4833135604858398
    3. 'the' → logprob: -1.8583135604858398
    4. 'last' → logprob: -2.48331356048584
    5. ' self' → logprob: -3.10831356048584
    6. 'self' → logprob: -3.10831356048584
    7. ' groups' → logprob: -4.73331356048584
    8. '<|end|>' → logprob: -5.10831356048584
    9. ' next' → logprob: -6.48331356048584
    10. 'groups' → logprob: -6.60831356048584

Token 494: ' group' (ID: 3566)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.1838076412677765
    2. 'arr' → logprob: -2.058807611465454
    3. '_' → logprob: -3.808807611465454
    4. ' arrived' → logprob: -4.308807849884033
    5. ' group' → logprob: -6.183807849884033
    6. ' _' → logprob: -6.558807849884033
    7. '_group' → logprob: -8.308807373046875
    8. '_added' → logprob: -8.308807373046875
    9. ' arriving' → logprob: -8.933807373046875
    10. ' ' → logprob: -9.308807373046875

Token 495: ' arrived' (ID: 18157)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.2028672993183136
    2. 'arr' → logprob: -1.9528672695159912
    3. '_added' → logprob: -3.952867269515991
    4. '+' → logprob: -5.45286750793457
    5. '_processed' → logprob: -5.57786750793457
    6. ' that' → logprob: -5.70286750793457
    7. ' +' → logprob: -5.82786750793457
    8. '   ' → logprob: -6.32786750793457
    9. ' arrived' → logprob: -6.45286750793457
    10. '<|end|>' → logprob: -6.82786750793457

Token 496: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.053801439702510834
    2. '   ' → logprob: -3.4288015365600586
    3. '<|end|>' → logprob: -4.553801536560059
    4. 'def' → logprob: -5.678801536560059
    5. '       ' → logprob: -6.178801536560059
    6. ',' → logprob: -6.803801536560059
    7. '

' → logprob: -6.928801536560059
    8. ' def' → logprob: -7.428801536560059
    9. '<|end|>' → logprob: -8.053801536560059
    10. '    
' → logprob: -8.428801536560059

Token 497: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27980417013168335
    2. '   ' → logprob: -1.6548042297363281
    3. '<|end|>' → logprob: -3.279804229736328
    4. 'def' → logprob: -4.779804229736328
    5. '    
' → logprob: -6.029804229736328
    6. ' def' → logprob: -6.529804229736328
    7. '       ' → logprob: -6.654804229736328
    8. '<|end|>' → logprob: -7.029804229736328
    9. '

' → logprob: -8.654804229736328
    10. '        
' → logprob: -8.779804229736328

Token 498: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36242154240608215
    2. '   ' → logprob: -1.3624215126037598
    3. '
' → logprob: -3.7374215126037598
    4. ' def' → logprob: -4.11242151260376
    5. '       ' → logprob: -5.86242151260376
    6. ')' → logprob: -6.48742151260376
    7. '<|end|>' → logprob: -6.61242151260376
    8. 'self' (adapté à ' self') → logprob: -7.23742151260376
    9. '    
' → logprob: -7.48742151260376
    10. ',' → logprob: -8.737421989440918

Token 499: '.max' (ID: 11883)
  Prédit: '.next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.next' → logprob: -1.7433282136917114
    2. '.arr' → logprob: -2.118328094482422
    3. 'next' → logprob: -2.243328094482422
    4. 'arr' → logprob: -2.743328094482422
    5. 'waiting' → logprob: -2.743328094482422
    6. '.wait' → logprob: -2.868328094482422
    7. 'max' → logprob: -2.993328094482422
    8. 'def' → logprob: -3.243328094482422
    9. 'time' → logprob: -3.618328094482422
    10. 'arrival' → logprob: -3.743328094482422

Token 500: '_group' (ID: 15990)
  Prédit: '_wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_wait' → logprob: -0.01057233102619648
    2. '_queue' → logprob: -5.13557243347168
    3. '_' → logprob: -6.26057243347168
    4. '_size' → logprob: -7.26057243347168
    5. '_group' → logprob: -7.76057243347168
    6. 'wait' → logprob: -7.88557243347168
    7. '_time' → logprob: -8.01057243347168
    8. '_groups' → logprob: -8.76057243347168
    9. '_arr' → logprob: -8.88557243347168
    10. '_se' → logprob: -9.38557243347168

Token 501: '_index' (ID: 7748)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.15627440810203552
    2. '_index' → logprob: -2.2812743186950684
    3. '_' → logprob: -3.2812743186950684
    4. 'size' → logprob: -6.031274318695068
    5. '_wait' → logprob: -6.906274318695068
    6. '_id' → logprob: -7.531274318695068
    7. '_idx' → logprob: -7.906274318695068
    8. '_queue' → logprob: -9.156274795532227
    9. 's' → logprob: -9.406274795532227
    10. '_sizes' → logprob: -9.781274795532227

Token 502: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3490569293498993
    2. '=' → logprob: -1.2240569591522217
    3. '<|end|>' → logprob: -7.474056720733643
    4. ' ' → logprob: -10.9740571975708
    5. '=None' → logprob: -11.5990571975708
    6. '<|end|>' → logprob: -11.8490571975708
    7. ',' → logprob: -12.7240571975708
    8. ' +=' → logprob: -13.7240571975708
    9. '   ' → logprob: -14.3490571975708
    10. ')' → logprob: -14.3490571975708

Token 503: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5776031613349915
    2. ' total' → logprob: -0.8276031613349915
    3. '99' → logprob: -7.327603340148926
    4. '100' → logprob: -7.827603340148926
    5. '   ' → logprob: -8.202603340148926
    6. ' ' → logprob: -9.077603340148926
    7. 'len' → logprob: -9.452603340148926
    8. ' len' → logprob: -9.952603340148926
    9. '0' → logprob: -10.827603340148926
    10. '       ' → logprob: -11.327603340148926

Token 504: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -7.465036105713807e-06
    2. 'groups' → logprob: -12.000007629394531
    3. '100' → logprob: -14.875007629394531
    4. 'Groups' → logprob: -15.000007629394531
    5. '_count' → logprob: -16.00000762939453
    6. 'int' → logprob: -16.87500762939453
    7. '50' → logprob: -16.87500762939453
    8. ' ' → logprob: -17.25000762939453
    9. '10' → logprob: -17.25000762939453
    10. 'roups' → logprob: -17.25000762939453

Token 505: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 506: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003361774142831564
    2. ' ' → logprob: -8.000336647033691
    3. '<|end|>' → logprob: -14.625336647033691
    4. '   ' → logprob: -15.750336647033691
    5. '
' → logprob: -16.250335693359375
    6. '       ' → logprob: -17.375335693359375
    7. '0' → logprob: -18.250335693359375
    8. '  ' → logprob: -18.625335693359375
    9. '    ' → logprob: -18.875335693359375
    10. '```' → logprob: -19.750335693359375

Token 507: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '<|end|>' → logprob: -17.875003814697266
    4. '
' → logprob: -18.625003814697266
    5. '   ' → logprob: -19.000003814697266
    6. '0' → logprob: -19.250003814697266
    7. '```' → logprob: -20.000003814697266
    8. '  ' → logprob: -21.750003814697266
    9. 'from' → logprob: -22.125003814697266
    10. '

' → logprob: -22.250003814697266

Token 508: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16587623953819275
    2. '<|end|>' → logprob: -2.5408761501312256
    3. '   ' → logprob: -2.6658761501312256
    4. '<|end|>' → logprob: -6.415876388549805
    5. '    
' → logprob: -6.790876388549805
    6. 'def' → logprob: -7.415876388549805
    7. '       ' → logprob: -7.665876388549805
    8. '

' → logprob: -8.165876388549805
    9. ' def' → logprob: -9.290876388549805
    10. ',
' → logprob: -9.540876388549805

Token 509: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7291107177734375
    2. '   ' → logprob: -0.7291107177734375
    3. '<|end|>' → logprob: -3.4791107177734375
    4. '    
' → logprob: -6.3541107177734375
    5. 'def' → logprob: -6.6041107177734375
    6. '<|end|>' → logprob: -7.4791107177734375
    7. '       ' → logprob: -7.8541107177734375
    8. '

' → logprob: -8.979110717773438
    9. ' def' → logprob: -9.354110717773438
    10. '        
' → logprob: -9.854110717773438

Token 510: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08596572279930115
    2. '   ' → logprob: -2.960965633392334
    3. ' def' → logprob: -3.585965633392334
    4. '
' → logprob: -5.960965633392334
    5. '	def' → logprob: -8.835966110229492
    6. '<|end|>' → logprob: -9.335966110229492
    7. ')' → logprob: -10.960966110229492
    8. '<|end|>' → logprob: -11.210966110229492
    9. '```' → logprob: -11.335966110229492
    10. '       ' → logprob: -11.585966110229492

Token 511: '.events' (ID: 35407)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8116551041603088
    2. 'waiting' → logprob: -2.186655044555664
    3. 'arrival' → logprob: -3.186655044555664
    4. 'max' → logprob: -3.811655044555664
    5. '.arr' → logprob: -3.811655044555664
    6. 'events' → logprob: -3.936655044555664
    7. ' def' → logprob: -3.936655044555664
    8. '.wait' → logprob: -3.936655044555664
    9. 'group' → logprob: -4.311655044555664
    10. 'finished' → logprob: -4.311655044555664

Token 512: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020615696907043457
    2. '=' → logprob: -3.895615577697754
    3. '=[]' → logprob: -9.895615577697754
    4. '<|end|>' → logprob: -11.895615577697754
    5. ':' → logprob: -12.395615577697754
    6. ' ' → logprob: -12.770615577697754
    7. '_queue' → logprob: -12.895615577697754
    8. '   ' → logprob: -13.645615577697754
    9. '  ' → logprob: -14.270615577697754
    10. '_' → logprob: -14.270615577697754

Token 513: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.003011099761351943
    2. ' []' → logprob: -5.878011226654053
    3. '[]
' → logprob: -9.378010749816895
    4. '{}' → logprob: -9.753010749816895
    5. '[]}' → logprob: -10.128010749816895
    6. '[' → logprob: -11.753010749816895
    7. '[
' → logprob: -12.503010749816895
    8. '[]

' → logprob: -12.753010749816895
    9. '   ' → logprob: -13.253010749816895
    10. '{' → logprob: -13.503010749816895

Token 514: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8988219499588013
    2. '   ' → logprob: -1.1488219499588013
    3. '<|end|>' → logprob: -1.3988219499588013
    4. 'def' → logprob: -4.273821830749512
    5. '<|end|>' → logprob: -5.148821830749512
    6. ' def' → logprob: -5.523821830749512
    7. '

' → logprob: -6.398821830749512
    8. '    
' → logprob: -7.023821830749512
    9. ',' → logprob: -7.148821830749512
    10. '       ' → logprob: -7.648821830749512

Token 515: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 516: ' (' (ID: 350)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.015419808216392994
    2. '[]
' → logprob: -4.390419960021973
    3. ' []' → logprob: -7.390419960021973
    4. '#' → logprob: -7.640419960021973
    5. '[(' → logprob: -7.640419960021973
    6. 'list' → logprob: -8.140419960021973
    7. 'heap' → logprob: -8.265419960021973
    8. '([]' → logprob: -8.640419960021973
    9. '()' → logprob: -9.015419960021973
    10. '[])' → logprob: -9.140419960021973

Token 517: 'time' (ID: 4580)
  Prédit: 'time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.06446653604507446
    2. 'event' → logprob: -3.0644664764404297
    3. 'current' → logprob: -4.93946647644043
    4. 'self' → logprob: -5.06446647644043
    5. ' time' → logprob: -6.68946647644043
    6. 'int' → logprob: -7.93946647644043
    7. 'timestamp' → logprob: -8.93946647644043
    8. ' event' → logprob: -9.06446647644043
    9. 'departure' → logprob: -9.18946647644043
    10. 'next' → logprob: -9.56446647644043

Token 518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7968066206085496e-05
    2. ' ,' → logprob: -11.125027656555176
    3. ',event' → logprob: -12.625027656555176
    4. '<|end|>' → logprob: -12.625027656555176
    5. ',type' → logprob: -13.250027656555176
    6. ',index' → logprob: -13.375027656555176
    7. ',
' → logprob: -14.500027656555176
    8. 'import' → logprob: -14.750027656555176
    9. ',user' → logprob: -15.000027656555176
    10. '<|end|>' → logprob: -15.500027656555176

Token 519: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7279840707778931
    2. 'group' → logprob: -1.227984070777893
    3. ''action' → logprob: -2.6029839515686035
    4. '"group' → logprob: -2.9779839515686035
    5. 'event' → logprob: -3.2279839515686035
    6. 'action' → logprob: -4.1029839515686035
    7. ''s' → logprob: -4.7279839515686035
    8. ' '' → logprob: -4.7279839515686035
    9. 'type' → logprob: -5.1029839515686035
    10. ''type' → logprob: -5.2279839515686035

Token 520: 'arr' (ID: 1614)
  Prédit: 'leave'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leave' → logprob: -0.10693152993917465
    2. 'arr' → logprob: -3.231931447982788
    3. 'seat' → logprob: -3.356931447982788
    4. 'arrival' → logprob: -4.481931686401367
    5. 'event' → logprob: -4.856931686401367
    6. 'eat' → logprob: -6.481931686401367
    7. 'se' → logprob: -6.731931686401367
    8. 'depart' → logprob: -6.856931686401367
    9. 'departure' → logprob: -6.981931686401367
    10. 'end' → logprob: -7.106931686401367

Token 521: 'ive' (ID: 585)
  Prédit: 'ival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.10035299509763718
    2. 'ive' → logprob: -2.3503530025482178
    3. 'IVAL' → logprob: -9.725353240966797
    4. 'ivals' → logprob: -10.350353240966797
    5. 'iv' → logprob: -10.975353240966797
    6. 'val' → logprob: -11.475353240966797
    7. 'ived' → logprob: -11.850353240966797
    8. 'IVE' → logprob: -12.975353240966797
    9. ',' → logprob: -13.225353240966797
    10. ')' → logprob: -13.350353240966797

Token 522: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01731809601187706
    2. '',' → logprob: -5.017318248748779
    3. ','' → logprob: -5.142318248748779
    4. ')' → logprob: -6.017318248748779
    5. '),' → logprob: -7.267318248748779
    6. 'or' → logprob: -7.642318248748779
    7. ' or' → logprob: -8.267317771911621
    8. '')' → logprob: -8.892317771911621
    9. ''' → logprob: -9.017317771911621
    10. ' ,' → logprob: -9.142317771911621

Token 523: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.15720734000205994
    2. ''' → logprob: -2.6572072505950928
    3. 'index' → logprob: -2.7822072505950928
    4. ')' → logprob: -5.157207489013672
    5. '"group' → logprob: -5.907207489013672
    6. ' group' → logprob: -6.282207489013672
    7. 'Group' → logprob: -7.532207489013672
    8. ' '' → logprob: -7.907207489013672
    9. ''action' → logprob: -7.907207489013672
    10. ''g' → logprob: -8.157207489013672

Token 524: '_index' (ID: 7748)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2585917115211487
    2. '_index' → logprob: -1.633591651916504
    3. 'index' → logprob: -4.133591651916504
    4. '),' → logprob: -4.133591651916504
    5. ',' → logprob: -8.258591651916504
    6. '.index' → logprob: -10.133591651916504
    7. ' index' → logprob: -10.258591651916504
    8. ')
' → logprob: -10.258591651916504
    9. '),
' → logprob: -10.508591651916504
    10. '[' → logprob: -10.633591651916504

Token 525: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006783573888242245
    2. '),' → logprob: -5.006783485412598
    3. ')
' → logprob: -10.631783485412598
    4. ',' → logprob: -10.881783485412598
    5. ' )' → logprob: -11.381783485412598
    6. '),
' → logprob: -13.006783485412598
    7. '   ' → logprob: -13.006783485412598
    8. ')

' → logprob: -13.256783485412598
    9. '')' → logprob: -13.631783485412598
    10. '),(' → logprob: -14.131783485412598

Token 526: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6798477172851562
    2. '<|end|>' → logprob: -0.9298477172851562
    3. ',' → logprob: -2.9298477172851562
    4. '   ' → logprob: -3.4298477172851562
    5. '<|end|>' → logprob: -5.304847717285156
    6. ')' → logprob: -5.429847717285156
    7. '
' → logprob: -7.179847717285156
    8. 'self' → logprob: -7.304847717285156
    9. ' and' → logprob: -7.679847717285156
    10. ' or' → logprob: -8.304847717285156

Token 527: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7830237746238708
    2. '('' → logprob: -1.0330238342285156
    3. ' ('' → logprob: -2.0330238342285156
    4. '(time' → logprob: -3.1580238342285156
    5. '(' → logprob: -4.658023834228516
    6. ' '' → logprob: -6.783023834228516
    7. '   ' → logprob: -7.033023834228516
    8. ' ' → logprob: -7.408023834228516
    9. ''t' → logprob: -8.033023834228516
    10. '          ' → logprob: -8.783023834228516

Token 528: 'time' (ID: 4580)
  Prédit: ''t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''t' → logprob: -0.1145419329404831
    2. 'time' → logprob: -2.489542007446289
    3. ''' → logprob: -4.114542007446289
    4. '"time' → logprob: -5.239542007446289
    5. ' '' → logprob: -6.489542007446289
    6. ' time' → logprob: -6.739542007446289
    7. '   ' → logprob: -8.739542007446289
    8. '  ' → logprob: -9.739542007446289
    9. ''d' → logprob: -9.739542007446289
    10. '       ' → logprob: -9.864542007446289

Token 529: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.051066520740278e-05
    2. '<|end|>' → logprob: -9.875060081481934
    3. ',
' → logprob: -12.500060081481934
    4. ' ,' → logprob: -12.750060081481934
    5. '<|end|>' → logprob: -13.750060081481934
    6. ')' → logprob: -14.875060081481934
    7. '‌,' → logprob: -15.500060081481934
    8. '[' → logprob: -15.625060081481934
    9. 's' → logprob: -15.875060081481934
    10. ',\
' → logprob: -17.06256103515625

Token 530: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8127041459083557
    2. ''arrive' → logprob: -0.8127041459083557
    3. ''arr' → logprob: -2.312704086303711
    4. ''instant' → logprob: -4.687704086303711
    5. ' '' → logprob: -6.812704086303711
    6. ''s' → logprob: -7.687704086303711
    7. '   ' → logprob: -7.937704086303711
    8. ''effect' → logprob: -8.437704086303711
    9. ''action' → logprob: -9.062704086303711
    10. ''d' → logprob: -9.062704086303711

Token 531: 'leave' (ID: 47897)
  Prédit: 'leave'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leave' → logprob: -0.0604306235909462
    2. 'depart' → logprob: -3.5604305267333984
    3. ''' → logprob: -4.185430526733398
    4. 'seat' → logprob: -4.560430526733398
    5. 'eat' → logprob: -6.560430526733398
    6. 'departure' → logprob: -7.435430526733398
    7. ''e' → logprob: -7.435430526733398
    8. 'finish' → logprob: -7.810430526733398
    9. 'done' → logprob: -8.185430526733398
    10. 'se' → logprob: -8.560430526733398

Token 532: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11641841381788254
    2. '',' → logprob: -2.2414183616638184
    3. ')' → logprob: -5.866418361663818
    4. '<|end|>' → logprob: -7.991418361663818
    5. ' ,' → logprob: -8.241418838500977
    6. '),' → logprob: -10.116418838500977
    7. '')' → logprob: -10.366418838500977
    8. '_group' → logprob: -11.366418838500977
    9. '<|end|>' → logprob: -11.366418838500977
    10. ','' → logprob: -11.366418838500977

Token 533: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.07910799980163574
    2. ' group' → logprob: -2.5791079998016357
    3. ''' → logprob: -9.329108238220215
    4. '"group' → logprob: -9.579108238220215
    5. ')' → logprob: -10.704108238220215
    6. ' ' → logprob: -11.579108238220215
    7. '   ' → logprob: -12.204108238220215
    8. ' '' → logprob: -12.579108238220215
    9. '[group' → logprob: -12.579108238220215
    10. '  ' → logprob: -12.704108238220215

Token 534: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0028858294244855642
    2. ')' → logprob: -6.127885818481445
    3. 'index' → logprob: -7.377885818481445
    4. ',' → logprob: -10.377885818481445
    5. ')_' → logprob: -10.877885818481445
    6. '_' → logprob: -12.127885818481445
    7. 'Index' → logprob: -12.877885818481445
    8. '),' → logprob: -13.252885818481445
    9. ',index' → logprob: -13.377885818481445
    10. ' index' → logprob: -13.377885818481445

Token 535: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.9054008084349334e-05
    2. ' )' → logprob: -11.125039100646973
    3. '   ' → logprob: -11.375039100646973
    4. ')
' → logprob: -12.250039100646973
    5. ',' → logprob: -13.250039100646973
    6. '),' → logprob: -13.625039100646973
    7. ')]' → logprob: -13.875039100646973
    8. '))' → logprob: -14.000039100646973
    9. '')' → logprob: -14.625039100646973
    10. ' ' → logprob: -14.750039100646973

Token 536: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06974555552005768
    2. 'def' → logprob: -2.8197455406188965
    3. ' def' → logprob: -5.4447455406188965
    4. '<|end|>' → logprob: -6.1947455406188965
    5. '
' → logprob: -7.0697455406188965
    6. ')' → logprob: -8.944746017456055
    7. '    
' → logprob: -8.944746017456055
    8. '<|end|>' → logprob: -9.694746017456055
    9. '       ' → logprob: -9.819746017456055
    10. '```' → logprob: -10.069746017456055

Token 537: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.009782769717276096
    2. ' def' → logprob: -4.884782791137695
    3. '   ' → logprob: -6.134782791137695
    4. '	def' → logprob: -12.134782791137695
    5. '<|end|>' → logprob: -13.634782791137695
    6. '
' → logprob: -14.509782791137695
    7. ' ' → logprob: -15.259782791137695
    8. '```' → logprob: -15.759782791137695
    9. 'import' → logprob: -16.134782791137695
    10. '<|end|>' → logprob: -16.134782791137695

Token 538: ' run' (ID: 2461)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.45516717433929443
    2. ' process' → logprob: -2.080167293548584
    3. 'advance' → logprob: -2.205167293548584
    4. 'simulate' → logprob: -3.955167293548584
    5. 'arr' → logprob: -4.080167293548584
    6. 'add' → logprob: -4.080167293548584
    7. ' advance' → logprob: -4.330167293548584
    8. 'next' → logprob: -4.580167293548584
    9. 'run' → logprob: -4.830167293548584
    10. 'step' → logprob: -4.955167293548584

Token 539: '_until' (ID: 115218)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002118735108524561
    2. '(' → logprob: -6.6271185874938965
    3. '_next' → logprob: -8.252119064331055
    4. '_step' → logprob: -8.377119064331055
    5. ' (' → logprob: -9.002119064331055
    6. '_' → logprob: -9.627119064331055
    7. 'self' → logprob: -10.377119064331055
    8. '   ' → logprob: -10.627119064331055
    9. '():' → logprob: -11.627119064331055
    10. '()' → logprob: -11.752119064331055

Token 540: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.13801570236682892
    2. '(' → logprob: -2.1380157470703125
    3. '(lambda' → logprob: -4.6380157470703125
    4. 'self' → logprob: -7.0130157470703125
    5. 'time' → logprob: -9.138015747070312
    6. 'def' → logprob: -10.013015747070312
    7. '(end' → logprob: -10.263015747070312
    8. '(time' → logprob: -10.388015747070312
    9. '(None' → logprob: -10.513015747070312
    10. '<|end|>' → logprob: -10.638015747070312

Token 541: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0629713237285614
    2. '(self' → logprob: -2.937971353530884
    3. ' (' → logprob: -5.187971115112305
    4. ')' → logprob: -6.562971115112305
    5. '_' → logprob: -8.437971115112305
    6. ' ' → logprob: -9.187971115112305
    7. 'self' → logprob: -9.187971115112305
    8. ',' → logprob: -9.562971115112305
    9. '('' → logprob: -9.562971115112305
    10. '(max' → logprob: -9.687971115112305

Token 542: ' target' (ID: 3783)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.4236883521080017
    2. 'end' → logprob: -1.5486884117126465
    3. 'target' → logprob: -3.1736884117126465
    4. 'self' → logprob: -3.4236884117126465
    5. 'max' → logprob: -3.5486884117126465
    6. ' end' → logprob: -4.1736884117126465
    7. ' time' → logprob: -5.0486884117126465
    8. ' max' → logprob: -6.0486884117126465
    9. 'limit' → logprob: -6.2986884117126465
    10. ' target' → logprob: -6.5486884117126465

Token 543: '_index' (ID: 7748)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00014811802248004824
    2. '_' → logprob: -9.125147819519043
    3. ' _' → logprob: -11.125147819519043
    4. ')' → logprob: -11.375147819519043
    5. ')_' → logprob: -12.375147819519043
    6. 'time' → logprob: -13.875147819519043
    7. '_times' → logprob: -13.875147819519043
    8. '=' → logprob: -14.000147819519043
    9. '):' → logprob: -14.125147819519043
    10. '_token' → logprob: -14.375147819519043

Token 544: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3973644971847534
    2. ':' → logprob: -1.1473644971847534
    3. '):
' → logprob: -5.022364616394043
    4. ')' → logprob: -6.397364616394043
    5. '=' → logprob: -7.022364616394043
    6. '=None' → logprob: -7.397364616394043
    7. ',' → logprob: -8.272364616394043
    8. ' ):' → logprob: -9.147364616394043
    9. '):
' → logprob: -9.272364616394043
    10. '):

' → logprob: -10.147364616394043

Token 545: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4495795965194702
    2. 'self' → logprob: -1.1995795965194702
    3. ')' → logprob: -4.32457971572876
    4. 'target' → logprob: -4.32457971572876
    5. ' self' → logprob: -4.57457971572876
    6. ' int' → logprob: -4.94957971572876
    7. '...' → logprob: -5.19957971572876
    8. 'None' → logprob: -5.69957971572876
    9. '):' → logprob: -6.69957971572876
    10. '-' → logprob: -6.82457971572876

Token 546: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31786125898361206
    2. '):
' → logprob: -1.3178613185882568
    3. ')' → logprob: -6.192861080169678
    4. '):
' → logprob: -6.192861080169678
    5. ',' → logprob: -8.192861557006836
    6. '   ' → logprob: -9.067861557006836
    7. ' ):' → logprob: -10.067861557006836
    8. ':' → logprob: -10.692861557006836
    9. '):

' → logprob: -11.192861557006836
    10. '       ' → logprob: -11.317861557006836

Token 547: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05325724184513092
    2. ' while' → logprob: -3.0532572269439697
    3. 'while' → logprob: -5.553257465362549
    4. '   ' → logprob: -7.303257465362549
    5. ' for' → logprob: -9.67825698852539
    6. ' current' → logprob: -11.05325698852539
    7. '
' → logprob: -11.92825698852539
    8. ',' → logprob: -11.92825698852539
    9. 'for' → logprob: -12.67825698852539
    10. 'current' → logprob: -12.92825698852539

Token 548: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.189961776137352
    2. '       ' → logprob: -1.9399617910385132
    3. ' while' → logprob: -3.5649616718292236
    4. 'group' → logprob: -7.939961910247803
    5. 'self' → logprob: -8.689961433410645
    6. 'for' → logprob: -8.939961433410645
    7. '   ' → logprob: -9.314961433410645
    8. '#' (adapté à ' #') → logprob: -9.439961433410645
    9. 'if' → logprob: -9.689961433410645
    10. 'current' → logprob: -10.314961433410645

Token 549: ' We' (ID: 1416)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.015414168126881123
    2. ' while' → logprob: -4.515414237976074
    3. 'for' → logprob: -6.390414237976074
    4. 'self' → logprob: -7.390414237976074
    5. 'group' → logprob: -7.390414237976074
    6. '#' → logprob: -7.640414237976074
    7. '       ' → logprob: -7.765414237976074
    8. 'import' → logprob: -8.140414237976074
    9. 'current' → logprob: -9.640414237976074
    10. 'if' → logprob: -10.015414237976074

Token 550: ' simulate' (ID: 66687)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47180745005607605
    2. '       ' → logprob: -1.2218074798583984
    3. 'while' → logprob: -3.4718074798583984
    4. 'current' → logprob: -4.346807479858398
    5. 'def' → logprob: -4.471807479858398
    6. 'continue' → logprob: -5.721807479858398
    7. ' while' → logprob: -5.846807479858398
    8. ' current' → logprob: -6.471807479858398
    9. 'for' → logprob: -6.471807479858398
    10. 'import' → logprob: -6.596807479858398

Token 551: ' forward' (ID: 6687)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.35272708535194397
    2. 'until' → logprob: -1.4777270555496216
    3. 'arrival' → logprob: -2.852727174758911
    4. 'self' → logprob: -5.352726936340332
    5. 'the' → logprob: -5.977726936340332
    6. ' until' → logprob: -6.477726936340332
    7. '       ' → logprob: -7.477726936340332
    8. 'time' → logprob: -7.852726936340332
    9. ' while' → logprob: -7.852726936340332
    10. 'for' → logprob: -7.852726936340332

Token 552: ' until' (ID: 4609)
  Prédit: ' until'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' until' → logprob: -0.8227277994155884
    2. 'until' → logprob: -1.0727277994155884
    3. 'while' → logprob: -1.8227277994155884
    4. '       ' → logprob: -3.197727680206299
    5. ' while' → logprob: -4.322727680206299
    6. 'to' → logprob: -7.822727680206299
    7. '   ' → logprob: -7.947727680206299
    8. 'self' → logprob: -8.197728157043457
    9. ' to' → logprob: -8.197728157043457
    10. ',' → logprob: -8.322728157043457

Token 553: ' group' (ID: 3566)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04050305113196373
    2. 'target' → logprob: -3.2905030250549316
    3. ' self' → logprob: -6.165503025054932
    4. 'the' → logprob: -8.79050350189209
    5. ' target' → logprob: -9.16550350189209
    6. '       ' → logprob: -10.04050350189209
    7. 'False' → logprob: -10.66550350189209
    8. '   ' → logprob: -11.16550350189209
    9. 'len' → logprob: -11.54050350189209
    10. ' the' → logprob: -12.91550350189209

Token 554: '[target' (ID: 123448)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7916353940963745
    2. 'self' → logprob: -1.6666353940963745
    3. 'index' → logprob: -1.7916353940963745
    4. 'target' → logprob: -2.291635513305664
    5. '[target' → logprob: -3.666635513305664
    6. '   ' → logprob: -4.166635513305664
    7. '_index' → logprob: -4.291635513305664
    8. 'arr' → logprob: -4.916635513305664
    9. '       ' → logprob: -5.291635513305664
    10. '.' → logprob: -5.541635513305664

Token 555: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -2.3319124011322856e-05
    2. 'index' → logprob: -11.750022888183594
    3. 'Index' → logprob: -11.875022888183594
    4. 's' → logprob: -13.000022888183594
    5. ']' → logprob: -13.125022888183594
    6. '_idx' → logprob: -13.875022888183594
    7. '_' → logprob: -14.000022888183594
    8. ']_' → logprob: -14.250022888183594
    9. '_]' → logprob: -15.375022888183594
    10. '].' → logprob: -15.625022888183594

Token 556: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6918963193893433
    2. '].' → logprob: -0.8168963193893433
    3. ' has' → logprob: -3.441896438598633
    4. ' is' → logprob: -4.566896438598633
    5. '.index' → logprob: -5.191896438598633
    6. ' arrives' → logprob: -5.941896438598633
    7. 'index' → logprob: -6.816896438598633
    8. '   ' → logprob: -7.191896438598633
    9. 'has' → logprob: -7.316896438598633
    10. '.' → logprob: -7.316896438598633

Token 557: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.1077690124511719
    2. ' arrives' → logprob: -1.1077690124511719
    3. ' has' → logprob: -1.7327690124511719
    4. 'arr' → logprob: -3.232769012451172
    5. 'is' → logprob: -3.482769012451172
    6. '.' → logprob: -3.482769012451172
    7. ' can' → logprob: -4.107769012451172
    8. '.arr' → logprob: -4.357769012451172
    9. 'has' → logprob: -4.732769012451172
    10. '   ' → logprob: -5.857769012451172

Token 558: ' seated' (ID: 77168)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.000850605487357825
    2. ' seated' → logprob: -7.500850677490234
    3. '   ' → logprob: -8.875850677490234
    4. 'arr' → logprob: -10.750850677490234
    5. 'e' → logprob: -10.875850677490234
    6. '       ' → logprob: -11.125850677490234
    7. 'fully' → logprob: -11.250850677490234
    8. 'None' → logprob: -11.375850677490234
    9. 'self' → logprob: -11.625850677490234
    10. '           ' → logprob: -11.750850677490234

Token 559: '
' (ID: 198)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.013984257355332375
    2. '       ' → logprob: -4.888984203338623
    3. ' and' → logprob: -5.263984203338623
    4. '.' → logprob: -7.763984203338623
    5. 'or' → logprob: -8.013984680175781
    6. ',' → logprob: -8.763984680175781
    7. '<|end|>' → logprob: -9.138984680175781
    8. '   ' → logprob: -10.138984680175781
    9. 'and' → logprob: -10.263984680175781
    10. '<|end|>' → logprob: -10.638984680175781

Token 560: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056156035512685776
    2. '
' → logprob: -3.9311559200286865
    3. ':' → logprob: -4.806156158447266
    4. ',' → logprob: -5.056156158447266
    5. '.' → logprob: -5.056156158447266
    6. ' and' → logprob: -5.306156158447266
    7. ' or' → logprob: -5.556156158447266
    8. '   ' → logprob: -6.431156158447266
    9. '        
' → logprob: -6.556156158447266
    10. ' while' → logprob: -7.556156158447266

Token 561: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8318215012550354
    2. ' while' → logprob: -1.2068214416503906
    3. '       ' → logprob: -1.3318214416503906
    4. ' group' → logprob: -7.581821441650391
    5. 'group' → logprob: -7.581821441650391
    6. '   ' → logprob: -8.45682144165039
    7. 'current' → logprob: -8.95682144165039
    8. ' current' → logprob: -9.20682144165039
    9. 'target' → logprob: -10.33182144165039
    10. 'import' → logprob: -10.70682144165039

Token 562: ' or' (ID: 503)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.4648776352405548
    2. 'while' → logprob: -1.0898776054382324
    3. '       ' → logprob: -3.4648776054382324
    4. ' group' → logprob: -6.589877605438232
    5. '
' → logprob: -6.839877605438232
    6. 'group' → logprob: -7.464877605438232
    7. ' current' → logprob: -7.714877605438232
    8. 'current' → logprob: -8.46487808227539
    9. '   ' → logprob: -9.08987808227539
    10. ' queue' → logprob: -9.08987808227539

Token 563: ' beyond' (ID: 11615)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07169005274772644
    2. ' self' → logprob: -3.071690082550049
    3. 'False' → logprob: -4.321690082550049
    4. 'target' → logprob: -5.071690082550049
    5. ' False' → logprob: -6.696690082550049
    6. 'not' → logprob: -7.946690082550049
    7. 'len' → logprob: -8.07168960571289
    8. ' not' → logprob: -8.32168960571289
    9. 'group' → logprob: -8.69668960571289
    10. '       ' → logprob: -8.94668960571289

Token 564: ' seating' (ID: 42332)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.47564053535461426
    2. ' while' → logprob: -1.2256405353546143
    3. '.' → logprob: -3.9756405353546143
    4. 'self' → logprob: -4.350640296936035
    5. ' or' → logprob: -4.600640296936035
    6. ':' → logprob: -5.225640296936035
    7. 'def' → logprob: -5.350640296936035
    8. '       ' → logprob: -5.475640296936035
    9. ' if' → logprob: -5.600640296936035
    10. ' until' → logprob: -5.725640296936035

Token 565: ' time' (ID: 1058)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20623141527175903
    2. ' or' → logprob: -2.5812313556671143
    3. '.' → logprob: -2.9562313556671143
    4. ' and' → logprob: -3.4562313556671143
    5. '   ' → logprob: -4.831231594085693
    6. '       ' → logprob: -5.456231594085693
    7. '_' → logprob: -5.831231594085693
    8. ',' → logprob: -6.081231594085693
    9. ':
' → logprob: -6.081231594085693
    10. '_index' → logprob: -6.831231594085693

Token 566: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18790355324745178
    2. ':' → logprob: -2.437903642654419
    3. ' or' → logprob: -3.687903642654419
    4. '.' → logprob: -3.812903642654419
    5. ' and' → logprob: -4.43790340423584
    6. ',' → logprob: -4.81290340423584
    7. '
' → logprob: -5.43790340423584
    8. ':
' → logprob: -5.68790340423584
    9. '        
' → logprob: -6.18790340423584
    10. ' while' → logprob: -6.43790340423584

Token 567: ' all' (ID: 722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5276675224304199
    2. 'target' → logprob: -1.15266752243042
    3. 'group' → logprob: -2.77766752243042
    4. 'the' → logprob: -4.02766752243042
    5. 'that' → logprob: -4.40266752243042
    6. 'groups' → logprob: -7.15266752243042
    7. 'Group' → logprob: -8.027667999267578
    8. ' group' → logprob: -8.402667999267578
    9. ' self' → logprob: -8.527667999267578
    10. ' target' → logprob: -9.152667999267578

Token 568: ' groups' (ID: 8896)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7863759398460388
    2. ' groups' → logprob: -1.2863759994506836
    3. ' self' → logprob: -2.0363759994506836
    4. 'groups' → logprob: -2.2863759994506836
    5. '       ' → logprob: -4.161375999450684
    6. '   ' → logprob: -5.536375999450684
    7. ' the' → logprob: -6.161375999450684
    8. 'the' → logprob: -6.536375999450684
    9. '(self' → logprob: -6.661375999450684
    10. ' group' → logprob: -6.786375999450684

Token 569: ' <=' (ID: 5017)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07896403968334198
    2. '
' → logprob: -3.4539639949798584
    3. '.' → logprob: -4.5789642333984375
    4. ' and' → logprob: -4.7039642333984375
    5. ':' → logprob: -5.0789642333984375
    6. ',' → logprob: -5.4539642333984375
    7. ' while' → logprob: -5.8289642333984375
    8. ' or' → logprob: -5.9539642333984375
    9. '<|end|>' → logprob: -5.9539642333984375
    10. '   ' → logprob: -6.5789642333984375

Token 570: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.00975868571549654
    2. ' target' → logprob: -4.634758472442627
    3. '(target' → logprob: -13.884758949279785
    4. '   ' → logprob: -14.884758949279785
    5. '
' → logprob: -15.134758949279785
    6. '[target' → logprob: -15.384758949279785
    7. '	target' → logprob: -15.384758949279785
    8. '```' → logprob: -15.509758949279785
    9. 'self' → logprob: -16.25975799560547
    10. 'user' → logprob: -16.63475799560547

Token 571: '_index' (ID: 7748)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5684303045272827
    2. '   ' → logprob: -1.1934303045272827
    3. ':' → logprob: -2.8184304237365723
    4. '        
' → logprob: -4.568430423736572
    5. ',' → logprob: -4.943430423736572
    6. ' and' → logprob: -5.068430423736572
    7. '.' → logprob: -5.318430423736572
    8. ' :' → logprob: -5.443430423736572
    9. ':
' → logprob: -5.568430423736572
    10. 'def' → logprob: -5.943430423736572

Token 572: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06293830275535583
    2. '
' → logprob: -3.5629382133483887
    3. '   ' → logprob: -4.312938213348389
    4. ':' → logprob: -5.187938213348389
    5. ' while' → logprob: -5.312938213348389
    6. ',' → logprob: -6.187938213348389
    7. ':
' → logprob: -6.937938213348389
    8. 'while' → logprob: -6.937938213348389
    9. '        
' → logprob: -7.187938213348389
    10. ' and' → logprob: -7.187938213348389

Token 573: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009122888557612896
    2. '
' → logprob: -6.009122848510742
    3. '<|end|>' → logprob: -6.134122848510742
    4. ',' → logprob: -6.884122848510742
    5. ' and' → logprob: -6.884122848510742
    6. ':' → logprob: -7.384122848510742
    7. ' or' → logprob: -7.884122848510742
    8. '   ' → logprob: -7.884122848510742
    9. '        
' → logprob: -8.634122848510742
    10. '.' → logprob: -8.634122848510742

Token 574: ' groups' (ID: 8896)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5945813655853271
    2. ' while' → logprob: -0.8445813655853271
    3. 'while' → logprob: -4.594581604003906
    4. ' current' → logprob: -5.594581604003906
    5. '   ' → logprob: -6.594581604003906
    6. ' pass' → logprob: -7.594581604003906
    7. 'current' → logprob: -7.844581604003906
    8. '
' → logprob: -7.844581604003906
    9. ' for' → logprob: -8.344581604003906
    10. ')' → logprob: -8.719581604003906

Token 575: ' =' (ID: 314)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.5912841558456421
    2. ' =' → logprob: -1.591284155845642
    3. '_arr' → logprob: -1.841284155845642
    4. '_se' → logprob: -3.3412842750549316
    5. 'arr' → logprob: -4.716284275054932
    6. '=' → logprob: -5.091284275054932
    7. '_wait' → logprob: -5.466284275054932
    8. '_up' → logprob: -5.591284275054932
    9. '_in' → logprob: -5.966284275054932
    10. 'to' → logprob: -6.216284275054932

Token 576: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.028610877692699432
    2. ' self' → logprob: -3.778610944747925
    3. '[self' → logprob: -5.278610706329346
    4. ' [' → logprob: -9.278611183166504
    5. '{' → logprob: -9.403611183166504
    6. '   ' → logprob: -10.278611183166504
    7. '[' → logprob: -10.778611183166504
    8. '       ' → logprob: -11.778611183166504
    9. ' {' → logprob: -12.278611183166504
    10. '(self' → logprob: -12.528611183166504

Token 577: '.groups' (ID: 89749)
  Prédit: '.groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.groups' → logprob: -0.0001254693343071267
    2. 'groups' → logprob: -9.000125885009766
    3. 'self' → logprob: -14.375125885009766
    4. '.group' → logprob: -15.125125885009766
    5. ' groups' → logprob: -15.250125885009766
    6. '(groups' → logprob: -15.500125885009766
    7. '   ' → logprob: -15.750125885009766
    8. '.' → logprob: -15.750125885009766
    9. 'roups' → logprob: -16.125125885009766
    10. '.users' → logprob: -16.750125885009766

Token 578: '
' (ID: 198)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.20461252331733704
    2. '
' → logprob: -2.2046124935150146
    3. '<|end|>' → logprob: -3.0796124935150146
    4. '[' → logprob: -4.079612731933594
    5. '       ' → logprob: -4.954612731933594
    6. '<|end|>' → logprob: -6.204612731933594
    7. '[target' → logprob: -6.704612731933594
    8. '[self' → logprob: -7.829612731933594
    9. '        
' → logprob: -8.079612731933594
    10. '[
' → logprob: -8.204612731933594

Token 579: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014023875817656517
    2. ' while' → logprob: -5.139023780822754
    3. 'while' → logprob: -5.389023780822754
    4. '
' → logprob: -6.014023780822754
    5. '<|end|>' → logprob: -7.514023780822754
    6. ',' → logprob: -9.014023780822754
    7. '   ' → logprob: -9.389023780822754
    8. '        
' → logprob: -9.764023780822754
    9. ')' → logprob: -10.264023780822754
    10. ' for' → logprob: -10.389023780822754

Token 580: ' wait' (ID: 5238)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.005627154838293791
    2. '       ' → logprob: -5.630627155303955
    3. ' while' → logprob: -6.880627155303955
    4. 'for' → logprob: -7.755627155303955
    5. 'target' → logprob: -7.880627155303955
    6. 'current' → logprob: -9.630626678466797
    7. 'queue' → logprob: -10.630626678466797
    8. 'from' → logprob: -10.630626678466797
    9. 'import' → logprob: -10.755626678466797
    10. 'group' → logprob: -11.005626678466797

Token 581: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.0002919638354796916
    2. '_' → logprob: -9.12529182434082
    3. ' =' → logprob: -10.00029182434082
    4. '_index' → logprob: -10.25029182434082
    5. 'ing' → logprob: -10.37529182434082
    6. '       ' → logprob: -10.75029182434082
    7. '=' → logprob: -10.87529182434082
    8. '   ' → logprob: -11.87529182434082
    9. '_list' → logprob: -12.00029182434082
    10. '_q' → logprob: -13.00029182434082

Token 582: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.6090825796127319
    2. '.extend' → logprob: -0.9840825796127319
    3. ' =' → logprob: -3.2340826988220215
    4. '<|end|>' → logprob: -3.6090826988220215
    5. '=' → logprob: -4.7340826988220215
    6. ' +=' → logprob: -5.6090826988220215
    7. '.' → logprob: -6.7340826988220215
    8. '+=' → logprob: -7.2340826988220215
    9. '.setdefault' → logprob: -7.3590826988220215
    10. '=[]' → logprob: -8.984082221984863

Token 583: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02013188786804676
    2. '[]' → logprob: -4.145132064819336
    3. ' self' → logprob: -5.520132064819336
    4. ' []' → logprob: -9.895132064819336
    5. '[]
' → logprob: -11.270132064819336
    6. '[self' → logprob: -11.395132064819336
    7. '       ' → logprob: -12.895132064819336
    8. '[' → logprob: -13.395132064819336
    9. '	self' → logprob: -13.770132064819336
    10. '[],' → logprob: -13.895132064819336

Token 584: '.wait' (ID: 29833)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.31330257654190063
    2. '.wait' → logprob: -1.3133025169372559
    3. ' wait' → logprob: -10.438302993774414
    4. '.' → logprob: -12.938302993774414
    5. '_wait' → logprob: -13.063302993774414
    6. '	wait' → logprob: -13.188302993774414
    7. 'waiting' → logprob: -14.063302993774414
    8. '   ' → logprob: -14.688302993774414
    9. 'self' → logprob: -14.813302993774414
    10. '```' → logprob: -14.813302993774414

Token 585: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -14.125000953674316
    3. ' _' → logprob: -16.875
    4. '_QUEUE' → logprob: -17.625
    5. '_list' → logprob: -18.0
    6. 'Queue' → logprob: -18.5
    7. '   ' → logprob: -19.0
    8. 'queue' → logprob: -19.125
    9. '       ' → logprob: -19.25
    10. '
' → logprob: -19.25

Token 586: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1976248025894165
    2. '       ' → logprob: -1.1976248025894165
    3. '<|end|>' → logprob: -1.1976248025894165
    4. ',' → logprob: -3.322624683380127
    5. ' =' → logprob: -3.947624683380127
    6. '<|end|>' → logprob: -4.322624683380127
    7. '        
' → logprob: -4.572624683380127
    8. ' and' → logprob: -5.572624683380127
    9. '=' → logprob: -6.072624683380127
    10. ',
' → logprob: -6.572624683380127

Token 587: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02362709306180477
    2. 'occupied' → logprob: -5.023627281188965
    3. ' while' → logprob: -5.148627281188965
    4. 'while' → logprob: -5.773627281188965
    5. 'events' → logprob: -6.023627281188965
    6. ' events' → logprob: -6.273627281188965
    7. ' occupied' → logprob: -7.273627281188965
    8. 'current' → logprob: -7.523627281188965
    9. ' current' → logprob: -7.648627281188965
    10. ' seated' → logprob: -8.523627281188965

Token 588: ' seating' (ID: 42332)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.8834089040756226
    2. 'self' → logprob: -1.8834089040756226
    3. '       ' → logprob: -2.008409023284912
    4. 'while' → logprob: -2.133409023284912
    5. 'current' → logprob: -3.008409023284912
    6. ' while' → logprob: -3.383409023284912
    7. ' self' → logprob: -3.633409023284912
    8. 'events' → logprob: -3.758409023284912
    9. ' occupied' → logprob: -4.133409023284912
    10. ' current' → logprob: -4.508409023284912

Token 589: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16325686872005463
    2. '=' → logprob: -3.038256883621216
    3. ',' → logprob: -3.663256883621216
    4. '.can' → logprob: -3.913256883621216
    5. '.' → logprob: -4.163256645202637
    6. '
' → logprob: -4.788256645202637
    7. 'def' → logprob: -5.288256645202637
    8. '<|end|>' → logprob: -5.663256645202637
    9. 'import' → logprob: -5.788256645202637
    10. 'while' → logprob: -6.163256645202637

Token 590: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005238140933215618
    2. ' self' → logprob: -5.255238056182861
    3. '       ' → logprob: -12.38023853302002
    4. '   ' → logprob: -16.005237579345703
    5. 'se' → logprob: -16.755237579345703
    6. '(self' → logprob: -17.630237579345703
    7. '           ' → logprob: -18.005237579345703
    8. '	self' → logprob: -18.505237579345703
    9. ' ' → logprob: -19.130237579345703
    10. '        ' → logprob: -19.255237579345703

Token 591: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -0.00033677343162707984
    2. 'se' → logprob: -8.000336647033691
    3. '.' → logprob: -14.125336647033691
    4. '	se' → logprob: -15.250336647033691
    5. 'Se' → logprob: -16.000337600708008
    6. '.s' → logprob: -16.750337600708008
    7. ' Seating' → logprob: -17.125337600708008
    8. ' seating' → logprob: -17.250337600708008
    9. ' .' → logprob: -17.875337600708008
    10. '_se' → logprob: -18.000337600708008

Token 592: 'ating' (ID: 1365)
  Prédit: 'ating'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ating' → logprob: -0.006320389918982983
    2. 'ats' → logprob: -5.131320476531982
    3. 'atings' → logprob: -8.631319999694824
    4. 'at' → logprob: -9.131319999694824
    5. 'atting' → logprob: -9.756319999694824
    6. 'ated' → logprob: -11.631319999694824
    7. 'atin' → logprob: -12.006319999694824
    8. 'ati' → logprob: -12.381319999694824
    9. 'a' → logprob: -12.381319999694824
    10. 'ATING' → logprob: -13.006319999694824

Token 593: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5757235288619995
    2. '
' → logprob: -1.2007235288619995
    3. 'while' → logprob: -2.200723648071289
    4. ' while' → logprob: -3.825723648071289
    5. '        
' → logprob: -6.200723648071289
    6. '```' → logprob: -7.325723648071289
    7. ',' → logprob: -7.450723648071289
    8. 'current' → logprob: -7.450723648071289
    9. '   ' → logprob: -9.700723648071289
    10. ' current' → logprob: -9.825723648071289

Token 594: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0229992363601923
    2. ' while' → logprob: -4.522999286651611
    3. 'while' → logprob: -4.647999286651611
    4. '
' → logprob: -6.397999286651611
    5. '        
' → logprob: -8.522998809814453
    6. ',' → logprob: -9.397998809814453
    7. '<|end|>' → logprob: -9.397998809814453
    8. 'current' → logprob: -9.647998809814453
    9. ' current' → logprob: -9.772998809814453
    10. '```' → logprob: -10.522998809814453

Token 595: ' occupied' (ID: 46186)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.002611451782286167
    2. 'current' → logprob: -6.3776116371154785
    3. 'import' → logprob: -7.8776116371154785
    4. '       ' → logprob: -8.50261116027832
    5. 'for' → logprob: -9.37761116027832
    6. ' while' → logprob: -9.37761116027832
    7. 'events' → logprob: -9.87761116027832
    8. 'time' → logprob: -10.62761116027832
    9. 'occupied' (adapté à ' occupied') → logprob: -10.75261116027832
    10. 'event' → logprob: -11.00261116027832

Token 596: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -0.000353100651409477
    2. '_' → logprob: -8.25035285949707
    3. 'Groups' → logprob: -10.37535285949707
    4. ' =' → logprob: -10.37535285949707
    5. 'groups' → logprob: -12.00035285949707
    6. '=[]' → logprob: -12.37535285949707
    7. 'roups' → logprob: -12.75035285949707
    8. '=' → logprob: -12.87535285949707
    9. '```' → logprob: -13.75035285949707
    10. '<|end|>' → logprob: -13.75035285949707

Token 597: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20813359320163727
    2. '=' → logprob: -1.708133578300476
    3. '=[]' → logprob: -6.208133697509766
    4. '.sort' → logprob: -6.833133697509766
    5. '.append' → logprob: -6.833133697509766
    6. ':' → logprob: -7.333133697509766
    7. '.clear' → logprob: -7.958133697509766
    8. '.' → logprob: -8.208133697509766
    9. '[:]' → logprob: -8.208133697509766
    10. ')' → logprob: -8.458133697509766

Token 598: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00862143188714981
    2. ' self' → logprob: -4.7586212158203125
    3. '       ' → logprob: -12.008621215820312
    4. '[self' → logprob: -15.008621215820312
    5. '[]' → logprob: -15.383621215820312
    6. '           ' → logprob: -16.883621215820312
    7. '	self' → logprob: -17.008621215820312
    8. '[' → logprob: -17.258621215820312
    9. '   ' → logprob: -17.258621215820312
    10. '        ' → logprob: -17.383621215820312

Token 599: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6933586597442627
    2. 'occupied' → logprob: -0.6933586597442627
    3. '.wait' → logprob: -9.943358421325684
    4. 'self' → logprob: -9.943358421325684
    5. '.groups' → logprob: -10.068358421325684
    6. 'occup' → logprob: -10.693358421325684
    7. 'groups' → logprob: -10.693358421325684
    8. 'wait' → logprob: -11.568358421325684
    9. 'se' → logprob: -12.443358421325684
    10. '.se' → logprob: -12.568358421325684

Token 600: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -1.8312570318812504e-05
    2. '[]' → logprob: -11.875018119812012
    3. 'groups' → logprob: -12.375018119812012
    4. 'occup' → logprob: -12.750018119812012
    5. 'wait' → logprob: -13.250018119812012
    6. ' occupied' → logprob: -14.375018119812012
    7. '[]
' → logprob: -14.750018119812012
    8. 'empty' → logprob: -15.000018119812012
    9. '[' → logprob: -16.000019073486328
    10. '...' → logprob: -16.125019073486328

Token 601: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -0.0004915529862046242
    2. 'groups' → logprob: -7.750491619110107
    3. '       ' → logprob: -10.50049114227295
    4. 'roups' → logprob: -12.00049114227295
    5. 'Groups' → logprob: -12.25049114227295
    6. '   ' → logprob: -12.37549114227295
    7. 's' → logprob: -12.87549114227295
    8. '           ' → logprob: -13.00049114227295
    9. '.groups' → logprob: -13.00049114227295
    10. '.append' → logprob: -13.50049114227295

Token 602: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7489814758300781
    2. '       ' → logprob: -0.7489814758300781
    3. 'while' → logprob: -3.248981475830078
    4. ' while' → logprob: -4.748981475830078
    5. '        
' → logprob: -5.248981475830078
    6. '<|end|>' → logprob: -7.373981475830078
    7. ',' → logprob: -7.623981475830078
    8. ',
' → logprob: -9.498981475830078
    9. '```' → logprob: -9.623981475830078
    10. 'import' → logprob: -10.248981475830078

Token 603: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6409580111503601
    2. '       ' → logprob: -0.7659580111503601
    3. '<|end|>' → logprob: -5.515957832336426
    4. '        
' → logprob: -6.765957832336426
    5. 'while' → logprob: -6.765957832336426
    6. ' while' → logprob: -7.015957832336426
    7. ',' → logprob: -8.515957832336426
    8. '<|end|>' → logprob: -8.640957832336426
    9. '   ' → logprob: -8.765957832336426
    10. '```' → logprob: -9.015957832336426

Token 604: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.8312570318812504e-05
    2. '       ' → logprob: -11.750018119812012
    3. 'import' → logprob: -12.000018119812012
    4. ' while' → logprob: -12.750018119812012
    5. 'for' → logprob: -14.750018119812012
    6. 'current' → logprob: -14.875018119812012
    7. 'target' → logprob: -15.375018119812012
    8. 'group' → logprob: -15.625018119812012
    9. 'from' → logprob: -16.250019073486328
    10. '   ' → logprob: -17.375019073486328

Token 605: ' Event' (ID: 6400)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00041756415157578886
    2. 'import' → logprob: -8.500417709350586
    3. 'for' → logprob: -9.875417709350586
    4. ' while' → logprob: -10.000417709350586
    5. '       ' → logprob: -10.125417709350586
    6. '#' → logprob: -10.500417709350586
    7. 'current' → logprob: -10.750417709350586
    8. 'time' → logprob: -11.625417709350586
    9. 'from' → logprob: -12.000417709350586
    10. 'def' → logprob: -12.625417709350586

Token 606: '-driven' (ID: 45932)
  Prédit: '_queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.32207873463630676
    2. 's' → logprob: -1.6970787048339844
    3. '_index' → logprob: -3.0720787048339844
    4. '_idx' → logprob: -4.197078704833984
    5. '_time' → logprob: -4.572078704833984
    6. '_list' → logprob: -4.822078704833984
    7. ' =' → logprob: -4.822078704833984
    8. '_times' → logprob: -6.822078704833984
    9. 'queue' → logprob: -7.447078704833984
    10. '=' → logprob: -7.447078704833984

Token 607: ' approach' (ID: 7139)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.14884358644485474
    2. ' while' → logprob: -2.02384352684021
    3. 'queue' → logprob: -6.023843765258789
    4. ' queue' → logprob: -6.648843765258789
    5. 'events' → logprob: -7.773843765258789
    6. '       ' → logprob: -8.148843765258789
    7. 'import' → logprob: -8.398843765258789
    8. ' events' → logprob: -8.398843765258789
    9. 'time' → logprob: -9.273843765258789
    10. ' loop' → logprob: -9.398843765258789

Token 608: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4146154522895813
    2. ' while' → logprob: -1.6646153926849365
    3. 'while' → logprob: -2.1646153926849365
    4. '<|end|>' → logprob: -3.9146153926849365
    5. '
' → logprob: -4.914615631103516
    6. 'import' → logprob: -5.664615631103516
    7. '<|end|>' → logprob: -6.414615631103516
    8. ',' → logprob: -7.164615631103516
    9. 'current' → logprob: -7.539615631103516
    10. ' current' → logprob: -7.914615631103516

Token 609: ' per' (ID: 777)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.024380555376410484
    2. 'heap' → logprob: -4.024380683898926
    3. 'while' → logprob: -5.524380683898926
    4. 'a' → logprob: -6.649380683898926
    5. 'from' → logprob: -7.149380683898926
    6. ' import' → logprob: -10.149380683898926
    7. 'arrival' → logprob: -10.274380683898926
    8. 'self' → logprob: -10.774380683898926
    9. 'event' → logprob: -11.399380683898926
    10. 'events' → logprob: -11.774380683898926

Token 610: '-minute' (ID: 31291)
  Prédit: 'haps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'haps' → logprob: -0.7004517912864685
    2. 'while' → logprob: -1.4504518508911133
    3. 'time' → logprob: -1.4504518508911133
    4. 'step' → logprob: -4.450451850891113
    5. 'group' → logprob: -5.200451850891113
    6. 'tick' → logprob: -5.575451850891113
    7. 'import' → logprob: -5.700451850891113
    8. ' while' → logprob: -5.950451850891113
    9. 't' → logprob: -6.700451850891113
    10. '-time' → logprob: -6.700451850891113

Token 611: ' increments' (ID: 124105)
  Prédit: 'increments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increments' → logprob: -1.0701466798782349
    2. ' increments' → logprob: -1.1951466798782349
    3. 'simulation' → logprob: -2.1951465606689453
    4. ' simulation' → logprob: -2.5701465606689453
    5. 'updates' → logprob: -2.9451465606689453
    6. 'increment' → logprob: -3.1951465606689453
    7. 'while' → logprob: -3.8201465606689453
    8. 'steps' → logprob: -4.445146560668945
    9. ' updates' → logprob: -4.820146560668945
    10. 'processing' → logprob: -5.695146560668945

Token 612: ' per' (ID: 777)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7169830799102783
    2. '       ' → logprob: -0.9669830799102783
    3. 'while' → logprob: -2.4669830799102783
    4. '
' → logprob: -3.2169830799102783
    5. '<|end|>' → logprob: -5.216982841491699
    6. '<|end|>' → logprob: -7.591982841491699
    7. ',' → logprob: -8.2169828414917
    8. ' for' → logprob: -8.9669828414917
    9. ' and' → logprob: -9.9669828414917
    10. '	while' → logprob: -10.2169828414917

Token 613: ' problem' (ID: 4792)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.5566739439964294
    2. 'minute' → logprob: -2.181674003601074
    3. 'while' → logprob: -2.306674003601074
    4. 'current' → logprob: -2.681674003601074
    5. 'range' → logprob: -3.306674003601074
    6. 'self' → logprob: -3.681674003601074
    7. 'def' → logprob: -3.806674003601074
    8. 'step' → logprob: -4.556674003601074
    9. 'group' → logprob: -4.681674003601074
    10. 'iteration' → logprob: -5.306674003601074

Token 614: ' statement' (ID: 9710)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.785335123538971
    2. '
' → logprob: -1.9103350639343262
    3. ' while' → logprob: -1.9103350639343262
    4. '<|end|>' → logprob: -1.9103350639343262
    5. '<|end|>' → logprob: -3.285335063934326
    6. 'while' → logprob: -3.285335063934326
    7. ':' → logprob: -4.785335063934326
    8. '        
' → logprob: -5.785335063934326
    9. ',' → logprob: -5.785335063934326
    10. ':
' → logprob: -6.160335063934326

Token 615: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2642492651939392
    2. ' while' → logprob: -2.139249324798584
    3. 'while' → logprob: -2.389249324798584
    4. '
' → logprob: -3.889249324798584
    5. '<|end|>' → logprob: -6.389249324798584
    6. ',' → logprob: -8.514248847961426
    7. '<|end|>' → logprob: -9.014248847961426
    8. '        
' → logprob: -9.514248847961426
    9. '   ' → logprob: -9.639248847961426
    10. 'current' → logprob: -10.514248847961426

Token 616: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5374711155891418
    2. ' while' → logprob: -1.162471055984497
    3. 'while' → logprob: -2.412471055984497
    4. '<|end|>' → logprob: -5.287471294403076
    5. ' current' → logprob: -5.537471294403076
    6. 'current' → logprob: -6.412471294403076
    7. '
' → logprob: -6.912471294403076
    8. ' for' → logprob: -7.787471294403076
    9. ' next' → logprob: -8.412470817565918
    10. 'time' → logprob: -8.412470817565918

Token 617: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3879832923412323
    2. ' while' → logprob: -1.1379833221435547
    3. '       ' → logprob: -7.262983322143555
    4. 'for' → logprob: -8.387983322143555
    5. ' for' → logprob: -9.137983322143555
    6. ' current' → logprob: -10.637983322143555
    7. 'current' → logprob: -10.637983322143555
    8. 'import' → logprob: -11.887983322143555
    9. 'time' → logprob: -12.012983322143555
    10. 'from' → logprob: -12.387983322143555

Token 618: ' We' (ID: 1416)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2547382414340973
    2. ' while' → logprob: -1.504738211631775
    3. '       ' → logprob: -5.8797383308410645
    4. 'for' → logprob: -12.504737854003906
    5. 'import' → logprob: -13.379737854003906
    6. ' for' → logprob: -13.879737854003906
    7. '```' → logprob: -14.004737854003906
    8. '   ' → logprob: -14.379737854003906
    9. 'from' → logprob: -14.754737854003906
    10. 'current' → logprob: -14.879737854003906

Token 619: ' will' (ID: 738)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.41848641633987427
    2. ' while' → logprob: -1.7934863567352295
    3. 'def' → logprob: -2.2934863567352295
    4. 'current' → logprob: -3.6684863567352295
    5. '   ' → logprob: -4.418486595153809
    6. ' current' → logprob: -4.793486595153809
    7. 'for' → logprob: -5.043486595153809
    8. '       ' → logprob: -5.293486595153809
    9. ' def' → logprob: -5.668486595153809
    10. ' for' → logprob: -5.918486595153809

Token 620: ' keep' (ID: 3357)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.41148045659065247
    2. 'simulate' → logprob: -1.91148042678833
    3. ' while' → logprob: -2.53648042678833
    4. ' simulate' → logprob: -3.53648042678833
    5. 'process' → logprob: -3.91148042678833
    6. ' use' → logprob: -3.91148042678833
    7. '   ' → logprob: -4.78648042678833
    8. ' process' → logprob: -4.91148042678833
    9. 'use' → logprob: -5.16148042678833
    10. 'advance' → logprob: -5.41148042678833

Token 621: ' track' (ID: 5290)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3485361337661743
    2. 'running' → logprob: -1.9735361337661743
    3. 'adv' → logprob: -2.8485360145568848
    4. 'increment' → logprob: -3.2235360145568848
    5. 'sim' → logprob: -4.223536014556885
    6. ' advancing' → logprob: -4.598536014556885
    7. 'import' → logprob: -4.848536014556885
    8. 'self' → logprob: -4.973536014556885
    9. ' sim' → logprob: -6.348536014556885
    10. 'processing' → logprob: -6.348536014556885

Token 622: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.2484864741563797
    2. '       ' → logprob: -1.8734865188598633
    3. 'of' → logprob: -2.8734865188598633
    4. 'while' → logprob: -5.373486518859863
    5. '   ' → logprob: -6.373486518859863
    6. ' while' → logprob: -7.248486518859863
    7. 'self' → logprob: -7.748486518859863
    8. 'time' → logprob: -8.248486518859863
    9. '    ' → logprob: -8.498486518859863
    10. '_' → logprob: -8.498486518859863

Token 623: ' next' (ID: 2613)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.08450813591480255
    2. 'self' → logprob: -2.709508180618286
    3. 'events' → logprob: -5.084507942199707
    4. 'current' → logprob: -5.584507942199707
    5. ' time' → logprob: -6.834507942199707
    6. 'event' → logprob: -7.084507942199707
    7. 'arr' → logprob: -7.459507942199707
    8. 'while' → logprob: -7.584507942199707
    9. ' self' → logprob: -7.584507942199707
    10. 'next' → logprob: -7.834507942199707

Token 624: ' arrivals' (ID: 126339)
  Prédit: 'arrival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arrival' → logprob: -1.0929814577102661
    2. '_event' → logprob: -1.2179814577102661
    3. 'event' → logprob: -1.8429814577102661
    4. '_arr' → logprob: -2.4679813385009766
    5. 'events' → logprob: -2.5929813385009766
    6. 'arr' → logprob: -4.342981338500977
    7. 'time' → logprob: -4.467981338500977
    8. '_time' → logprob: -4.717981338500977
    9. '_events' → logprob: -5.592981338500977
    10. ' event' → logprob: -5.842981338500977

Token 625: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5439415574073792
    2. 'and' → logprob: -1.7939414978027344
    3. ',' → logprob: -2.1689414978027344
    4. '       ' → logprob: -3.2939414978027344
    5. '<|end|>' → logprob: -3.2939414978027344
    6. '<|end|>' → logprob: -3.4189414978027344
    7. 'while' → logprob: -4.918941497802734
    8. ' =' → logprob: -5.168941497802734
    9. ' or' → logprob: -5.668941497802734
    10. '   ' → logprob: -6.168941497802734

Token 626: ' next' (ID: 2613)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.26546838879585266
    2. 'next' → logprob: -1.7654683589935303
    3. 'depart' → logprob: -3.1404683589935303
    4. 'leave' → logprob: -5.265468597412109
    5. '#' → logprob: -5.640468597412109
    6. ' leaves' → logprob: -5.765468597412109
    7. ' next' → logprob: -6.015468597412109
    8. 'departure' → logprob: -6.390468597412109
    9. ' departures' → logprob: -7.390468597412109
    10. 'for' → logprob: -7.515468597412109

Token 627: ' leaves' (ID: 15657)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.03668052703142166
    2. ' leaves' → logprob: -4.036680698394775
    3. 'depart' → logprob: -4.161680698394775
    4. 'leave' → logprob: -6.411680698394775
    5. ' departures' → logprob: -8.036680221557617
    6. 'departure' → logprob: -8.286680221557617
    7. '#' → logprob: -8.786680221557617
    8. '   ' → logprob: -9.411680221557617
    9. 'de' → logprob: -9.786680221557617
    10. 'next' → logprob: -9.786680221557617

Token 628: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35180479288101196
    2. '<|end|>' → logprob: -2.101804733276367
    3. '
' → logprob: -2.351804733276367
    4. ',' → logprob: -3.976804733276367
    5. '<|end|>' → logprob: -3.976804733276367
    6. ' while' → logprob: -4.226804733276367
    7. '        
' → logprob: -4.726804733276367
    8. 'while' → logprob: -4.851804733276367
    9. ' and' → logprob: -5.976804733276367
    10. '.' → logprob: -6.101804733276367

Token 629: ' time' (ID: 1058)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.1109539270401
    2. 'time' → logprob: -1.4859539270401
    3. 'current' → logprob: -1.8609539270401
    4. 'increment' → logprob: -2.6109538078308105
    5. 'self' → logprob: -2.9859538078308105
    6. 'while' → logprob: -3.6109538078308105
    7. 'checking' → logprob: -3.6109538078308105
    8. 'event' → logprob: -3.9859538078308105
    9. 'heap' → logprob: -4.1109538078308105
    10. 'group' → logprob: -4.7359538078308105

Token 630: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5585278272628784
    2. '
' → logprob: -1.1835278272628784
    3. ' while' → logprob: -3.058527946472168
    4. '<|end|>' → logprob: -3.808527946472168
    5. ',' → logprob: -3.933527946472168
    6. 'while' → logprob: -4.058527946472168
    7. '        
' → logprob: -5.058527946472168
    8. '<|end|>' → logprob: -5.683527946472168
    9. '.' → logprob: -6.308527946472168
    10. ':' → logprob: -6.808527946472168

Token 631: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05218890309333801
    2. '
' → logprob: -3.8021888732910156
    3. '<|end|>' → logprob: -4.302188873291016
    4. ' while' → logprob: -5.177188873291016
    5. 'while' → logprob: -5.677188873291016
    6. ',' → logprob: -6.427188873291016
    7. 'current' → logprob: -7.302188873291016
    8. '        
' → logprob: -7.302188873291016
    9. '<|end|>' → logprob: -7.302188873291016
    10. '   ' → logprob: -8.052188873291016

Token 632: ' last' (ID: 2174)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.70063316822052
    2. '       ' → logprob: -1.32563316822052
    3. ' while' → logprob: -1.45063316822052
    4. 'next' → logprob: -5.9506330490112305
    5. ' next' → logprob: -7.0756330490112305
    6. 'import' → logprob: -9.20063304901123
    7. 'from' → logprob: -10.82563304901123
    8. '   ' → logprob: -10.95063304901123
    9. '	while' → logprob: -11.07563304901123
    10. '```' → logprob: -11.45063304901123

Token 633: '_time' (ID: 6425)
  Prédit: '_arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.031109467148780823
    2. '_time' → logprob: -3.656109571456909
    3. '_group' → logprob: -6.53110933303833
    4. '_event' → logprob: -6.90610933303833
    5. '_index' → logprob: -6.90610933303833
    6. 'arr' → logprob: -7.78110933303833
    7. 'time' → logprob: -8.156109809875488
    8. '=' → logprob: -9.031109809875488
    9. ' =' → logprob: -9.156109809875488
    10. '_' → logprob: -9.406109809875488

Token 634: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4291505813598633
    2. '=' → logprob: -1.0541505813598633
    3. ' +=' → logprob: -9.054150581359863
    4. '+=' → logprob: -9.179150581359863
    5. '   ' → logprob: -9.429150581359863
    6. ',' → logprob: -9.929150581359863
    7. '+' → logprob: -10.054150581359863
    8. '       ' → logprob: -11.179150581359863
    9. 'import' → logprob: -11.679150581359863
    10. ':' → logprob: -12.304150581359863

Token 635: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1719278246164322
    2. 'self' → logprob: -2.6719279289245605
    3. '-' → logprob: -2.7969279289245605
    4. 'max' → logprob: -4.6719279289245605
    5. ' ' → logprob: -4.9219279289245605
    6. ' self' → logprob: -5.1719279289245605
    7. 'groups' → logprob: -5.7969279289245605
    8. ' max' → logprob: -6.9219279289245605
    9. ' -' → logprob: -7.1719279289245605
    10. ' groups' → logprob: -8.046927452087402

Token 636: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5834541320800781
    2. 'self' → logprob: -1.0834541320800781
    3. '-' → logprob: -2.833454132080078
    4. 'max' → logprob: -3.708454132080078
    5. 'groups' → logprob: -3.958454132080078
    6. ' self' → logprob: -8.208454132080078
    7. 'float' → logprob: -8.458454132080078
    8. '100' → logprob: -8.708454132080078
    9. 'se' → logprob: -9.958454132080078
    10. ' ' → logprob: -10.083454132080078

Token 637: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08903783559799194
    2. '
' → logprob: -2.5890378952026367
    3. '<|end|>' → logprob: -4.964037895202637
    4. 'while' → logprob: -6.464037895202637
    5. ' while' → logprob: -7.339037895202637
    6. '<|end|>' → logprob: -7.839037895202637
    7. ',' → logprob: -8.714037895202637
    8. '        
' → logprob: -9.464037895202637
    9. ' for' → logprob: -9.839037895202637
    10. '#' → logprob: -10.214037895202637

Token 638: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1287166327238083
    2. 'while' → logprob: -2.7537167072296143
    3. ' while' → logprob: -2.8787167072296143
    4. '
' → logprob: -8.253716468811035
    5. ' for' → logprob: -8.378716468811035
    6. 'for' → logprob: -9.003716468811035
    7. 'current' → logprob: -9.503716468811035
    8. ' current' → logprob: -9.628716468811035
    9. '<|end|>' → logprob: -10.628716468811035
    10. 'next' → logprob: -10.878716468811035

Token 639: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.10477247089147568
    2. ' while' → logprob: -2.3547725677490234
    3. 'for' → logprob: -5.979772567749023
    4. '       ' → logprob: -6.479772567749023
    5. ' for' → logprob: -7.979772567749023
    6. 'import' → logprob: -9.604772567749023
    7. 'current' → logprob: -10.479772567749023
    8. 'next' → logprob: -10.979772567749023
    9. ' current' → logprob: -11.604772567749023
    10. '
' → logprob: -11.729772567749023

Token 640: ' Prepare' (ID: 49102)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00091050990158692
    2. 'import' → logprob: -7.75091028213501
    3. ' while' → logprob: -8.375910758972168
    4. '       ' → logprob: -9.625910758972168
    5. 'from' → logprob: -9.875910758972168
    6. 'for' → logprob: -9.875910758972168
    7. 'next' → logprob: -10.000910758972168
    8. 'current' → logprob: -10.500910758972168
    9. 'group' → logprob: -12.875910758972168
    10. '   ' → logprob: -13.625910758972168

Token 641: ' tracking' (ID: 20254)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9592509865760803
    2. 'arr' → logprob: -1.3342509269714355
    3. 'arrival' → logprob: -1.3342509269714355
    4. 'next' → logprob: -3.2092509269714355
    5. ' arrivals' → logprob: -4.5842509269714355
    6. 'events' → logprob: -4.7092509269714355
    7. ' import' → logprob: -5.3342509269714355
    8. 'event' → logprob: -5.4592509269714355
    9. 'for' → logprob: -5.4592509269714355
    10. 'up' → logprob: -5.7092509269714355

Token 642: ' structure' (ID: 8866)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.31369125843048096
    2. 'arr' → logprob: -2.4386911392211914
    3. ' next' → logprob: -2.4386911392211914
    4. '       ' → logprob: -3.0636911392211914
    5. 'arrival' → logprob: -4.063691139221191
    6. 'self' → logprob: -4.563691139221191
    7. ' arrivals' → logprob: -4.688691139221191
    8. 'for' → logprob: -5.688691139221191
    9. ' for' → logprob: -5.938691139221191
    10. '   ' → logprob: -6.813691139221191

Token 643: ':' (ID: 25)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.4819388687610626
    2. '       ' → logprob: -2.3569388389587402
    3. 'arr' → logprob: -2.3569388389587402
    4. 'import' → logprob: -2.4819388389587402
    5. 'arrival' → logprob: -3.2319388389587402
    6. 'group' → logprob: -3.3569388389587402
    7. 'self' → logprob: -3.9819388389587402
    8. 'from' → logprob: -5.10693883895874
    9. 'for' → logprob: -5.85693883895874
    10. 'groups' → logprob: -6.35693883895874

Token 644: ' we' (ID: 581)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.48939159512519836
    2. 'arr' → logprob: -1.989391565322876
    3. 'arrival' → logprob: -2.364391565322876
    4. 'import' → logprob: -2.489391565322876
    5. 'leave' → logprob: -3.864391565322876
    6. ' next' → logprob: -3.864391565322876
    7. 'group' → logprob: -4.864391803741455
    8. 'from' → logprob: -5.489391803741455
    9. 'self' → logprob: -5.489391803741455
    10. 'le' → logprob: -5.989391803741455

Token 645: ' need' (ID: 1309)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.07787961512804031
    2. 'arr' → logprob: -4.077879428863525
    3. 'need' → logprob: -4.327879428863525
    4. 'while' → logprob: -5.202879428863525
    5. 'have' → logprob: -5.202879428863525
    6. 'for' → logprob: -5.327879428863525
    7. ' import' → logprob: -5.577879428863525
    8. 'will' → logprob: -5.577879428863525
    9. 'def' → logprob: -5.952879428863525
    10. 'events' → logprob: -6.077879428863525

Token 646: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.0705556869506836
    2. 'import' → logprob: -1.3205556869506836
    3. 'next' → logprob: -2.1955556869506836
    4. 'arrival' → logprob: -2.4455556869506836
    5. 'a' → logprob: -2.6955556869506836
    6. ' to' → logprob: -3.0705556869506836
    7. 'arr' → logprob: -3.5705556869506836
    8. ' import' → logprob: -4.320555686950684
    9. ' next' → logprob: -4.320555686950684
    10. 'while' → logprob: -5.070555686950684

Token 647: ' know' (ID: 1761)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0363142266869545
    2. 'from' → logprob: -4.536314010620117
    3. 'next' → logprob: -4.911314010620117
    4. 'simulate' → logprob: -5.661314010620117
    5. ' import' → logprob: -5.786314010620117
    6. 'arr' → logprob: -6.161314010620117
    7. 'group' → logprob: -6.661314010620117
    8. 'process' → logprob: -6.911314010620117
    9. 'schedule' → logprob: -6.911314010620117
    10. 'min' → logprob: -6.911314010620117

Token 648: ' when' (ID: 1261)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.19182194769382477
    2. ' next' → logprob: -1.8168219327926636
    3. 'for' → logprob: -4.941822052001953
    4. 'arrival' → logprob: -6.691822052001953
    5. 'when' → logprob: -6.816822052001953
    6. ' for' → logprob: -7.441822052001953
    7. 'arr' → logprob: -7.566822052001953
    8. 'the' → logprob: -7.816822052001953
    9. ' when' → logprob: -8.316822052001953
    10. ' arrival' → logprob: -8.691822052001953

Token 649: ' groups' (ID: 8896)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.53534334897995
    2. 'groups' → logprob: -1.0353434085845947
    3. 'next' → logprob: -3.7853434085845947
    4. 'a' → logprob: -4.160343170166016
    5. 'the' → logprob: -4.910343170166016
    6. ' groups' → logprob: -5.535343170166016
    7. ' each' → logprob: -5.910343170166016
    8. 'to' → logprob: -6.035343170166016
    9. 'group' → logprob: -6.160343170166016
    10. 'events' → logprob: -7.785343170166016

Token 650: ' must' (ID: 2804)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.09377626329660416
    2. ' arrive' → logprob: -3.843776226043701
    3. 'leave' → logprob: -3.968776226043701
    4. 'will' → logprob: -4.218776226043701
    5. 'are' → logprob: -4.843776226043701
    6. ' will' → logprob: -5.218776226043701
    7. 'have' → logprob: -5.343776226043701
    8. 'can' → logprob: -5.843776226043701
    9. 'se' → logprob: -5.968776226043701
    10. 'next' → logprob: -6.093776226043701

Token 651: ' arrive' (ID: 18338)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.04982753470540047
    2. 'leave' → logprob: -3.6748275756835938
    3. 'be' → logprob: -4.424827575683594
    4. 'eat' → logprob: -5.424827575683594
    5. 'next' → logprob: -6.049827575683594
    6. 'seat' → logprob: -6.549827575683594
    7. ' arrive' → logprob: -7.174827575683594
    8. 'se' → logprob: -7.674827575683594
    9. 'sit' → logprob: -8.299827575683594
    10. ' be' → logprob: -8.424827575683594

Token 652: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8591976761817932
    2. '<|end|>' → logprob: -1.6091976165771484
    3. ' and' → logprob: -2.1091976165771484
    4. '<|end|>' → logprob: -2.3591976165771484
    5. 'for' → logprob: -2.8591976165771484
    6. 'and' → logprob: -3.4841976165771484
    7. ',' → logprob: -3.7341976165771484
    8. ' for' → logprob: -4.234197616577148
    9. 'next' → logprob: -4.609197616577148
    10. ' or' → logprob: -5.359197616577148

Token 653: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25870802998542786
    2. ' and' → logprob: -2.1337080001831055
    3. 'and' → logprob: -2.6337080001831055
    4. '<|end|>' → logprob: -3.6337080001831055
    5. ',' → logprob: -5.1337080001831055
    6. '<|end|>' → logprob: -6.0087080001831055
    7. 'while' → logprob: -6.7587080001831055
    8. ' while' → logprob: -8.008708000183105
    9. 'for' → logprob: -8.258708000183105
    10. '.' → logprob: -8.633708000183105

Token 654: ' arrivals' (ID: 126339)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4449070990085602
    2. 'next' → logprob: -1.1949070692062378
    3. 'for' → logprob: -3.9449071884155273
    4. ' while' → logprob: -4.069907188415527
    5. '       ' → logprob: -4.694907188415527
    6. ' next' → logprob: -5.194907188415527
    7. 'arrival' → logprob: -6.069907188415527
    8. 'arr' → logprob: -6.194907188415527
    9. ' for' → logprob: -8.069907188415527
    10. 'import' → logprob: -8.444907188415527

Token 655: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011052774265408516
    2. ' =' → logprob: -4.51105260848999
    3. '=[]' → logprob: -13.261053085327148
    4. '   ' → logprob: -14.011053085327148
    5. '=[]
' → logprob: -14.511053085327148
    6. '=[' → logprob: -14.636053085327148
    7. 'from' → logprob: -15.511053085327148
    8. 'for' → logprob: -15.636053085327148
    9. ' ' → logprob: -16.01105308532715
    10. '_idx' → logprob: -16.13605308532715

Token 656: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.43326348066329956
    2. '[(' → logprob: -1.3082635402679443
    3. '[' → logprob: -2.6832635402679443
    4. 'sorted' → logprob: -4.933263301849365
    5. '{i' → logprob: -5.683263301849365
    6. '[i' → logprob: -6.683263301849365
    7. '[group' → logprob: -8.558263778686523
    8. '[min' → logprob: -8.683263778686523
    9. '[((' → logprob: -9.058263778686523
    10. '[{' → logprob: -9.308263778686523

Token 657: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.38924640417099
    2. 'i' → logprob: -1.1392464637756348
    3. 'group' → logprob: -6.764246463775635
    4. 'idx' → logprob: -7.139246463775635
    5. 'grp' → logprob: -8.139245986938477
    6. 'groups' → logprob: -10.014245986938477
    7. 'k' → logprob: -10.389245986938477
    8. 'gi' → logprob: -10.764245986938477
    9. 'index' → logprob: -10.889245986938477
    10. ' g' → logprob: -12.139245986938477

Token 658: '.arr' (ID: 76200)
  Prédit: '.index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.000871082826051861
    2. 'index' → logprob: -8.250870704650879
    3. 'roup' → logprob: -8.500870704650879
    4. '.i' → logprob: -9.375870704650879
    5. 'g' → logprob: -9.500870704650879
    6. 'i' → logprob: -10.250870704650879
    7. ':' → logprob: -10.375870704650879
    8. '.group' → logprob: -10.375870704650879
    9. ':index' → logprob: -10.375870704650879
    10. '[i' → logprob: -11.375870704650879

Token 659: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.00011594036914175376
    2. 'ive' → logprob: -9.125116348266602
    3. 'index' → logprob: -13.125116348266602
    4. 'iv' → logprob: -13.625116348266602
    5. 'val' → logprob: -14.250116348266602
    6. '_index' → logprob: -14.500116348266602
    7. '   ' → logprob: -14.875116348266602
    8. '}' → logprob: -15.125116348266602
    9. 'ived' → logprob: -15.375116348266602
    10. 'ivals' → logprob: -15.375116348266602

Token 660: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11576171219348907
    2. ':g' → logprob: -2.2407617568969727
    3. 'for' → logprob: -6.490761756896973
    4. ' for' → logprob: -7.240761756896973
    5. ' :' → logprob: -7.615761756896973
    6. ':i' → logprob: -8.740761756896973
    7. ':index' → logprob: -10.490761756896973
    8. 'g' → logprob: -11.865761756896973
    9. ':[' → logprob: -12.990761756896973
    10. '   ' → logprob: -13.115761756896973

Token 661: ' []' (ID: 6126)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.05421774834394455
    2. '[]' → logprob: -3.67921781539917
    3. '[g' → logprob: -4.80421781539917
    4. 'i' → logprob: -4.92921781539917
    5. '[' → logprob: -5.17921781539917
    6. '[i' → logprob: -5.42921781539917
    7. '[]}' → logprob: -7.92921781539917
    8. 'arr' → logprob: -8.054217338562012
    9. '[]

' → logprob: -8.304217338562012
    10. 'idx' → logprob: -8.429217338562012

Token 662: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2528631389141083
    2. 'for' → logprob: -1.5028631687164307
    3. '<|end|>' → logprob: -7.377862930297852
    4. '<|end|>' → logprob: -9.502862930297852
    5. ')' → logprob: -10.002862930297852
    6. ',' → logprob: -10.127862930297852
    7. '}' → logprob: -10.377862930297852
    8. '       ' → logprob: -11.002862930297852
    9. ':' → logprob: -11.002862930297852
    10. ' ' → logprob: -11.377862930297852

Token 663: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -7.839121826691553e-05
    2. ' g' → logprob: -10.125078201293945
    3. '<|end|>' → logprob: -11.125078201293945
    4. 'group' → logprob: -11.375078201293945
    5. 'self' → logprob: -12.000078201293945
    6. 'range' → logprob: -13.750078201293945
    7. '	g' → logprob: -14.250078201293945
    8. 'i' → logprob: -14.625078201293945
    9. 'groups' → logprob: -15.250078201293945
    10. 'gjeng' → logprob: -15.312578201293945

Token 664: ' in' (ID: 306)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.00020413640595506877
    2. ' g' → logprob: -8.500204086303711
    3. '<|end|>' → logprob: -15.375204086303711
    4. ' in' → logprob: -16.37520408630371
    5. '_g' → logprob: -16.87520408630371
    6. '	g' → logprob: -17.00020408630371
    7. 'i' → logprob: -17.12520408630371
    8. 'in' → logprob: -17.12520408630371
    9. '<|end|>' → logprob: -17.12520408630371
    10. ' ' → logprob: -17.75020408630371

Token 665: ' groups' (ID: 8896)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13369028270244598
    2. 'groups' → logprob: -2.758690357208252
    3. 'g' → logprob: -3.258690357208252
    4. ' self' → logprob: -4.633690357208252
    5. 'range' → logprob: -4.758690357208252
    6. 'group' → logprob: -5.883690357208252
    7. ' groups' → logprob: -6.633690357208252
    8. ' range' → logprob: -7.883690357208252
    9. ' g' → logprob: -8.133689880371094
    10. ' group' → logprob: -9.633689880371094

Token 666: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.36535319685935974
    2. '}
' → logprob: -1.2403532266616821
    3. '       ' → logprob: -4.240353107452393
    4. ' if' → logprob: -6.615353107452393
    5. 'if' → logprob: -7.865353107452393
    6. '}
' → logprob: -8.74035358428955
    7. 'for' → logprob: -8.99035358428955
    8. '}

' → logprob: -9.49035358428955
    9. '        ' → logprob: -9.61535358428955
    10. ' for' → logprob: -9.86535358428955

Token 667: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2645169198513031
    2. ' for' → logprob: -1.5145169496536255
    3. '       ' → logprob: -4.389516830444336
    4. '<|end|>' → logprob: -9.889516830444336
    5. '```' → logprob: -10.889516830444336
    6. ')' → logprob: -11.264516830444336
    7. 'For' → logprob: -11.889516830444336
    8. '   ' → logprob: -12.389516830444336
    9. '<|end|>' → logprob: -13.264516830444336
    10. ',' → logprob: -13.389516830444336

Token 668: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.11667440831661224
    2. ' for' → logprob: -2.3666744232177734
    3. '       ' → logprob: -4.116674423217773
    4. '<|end|>' → logprob: -11.241674423217773
    5. 'For' → logprob: -11.491674423217773
    6. '	for' → logprob: -12.616674423217773
    7. ')' → logprob: -13.741674423217773
    8. '   ' → logprob: -13.866674423217773
    9. '<|end|>' → logprob: -13.991674423217773
    10. '```' → logprob: -14.241674423217773

Token 669: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.580929347255733e-05
    2. 'group' → logprob: -11.375016212463379
    3. ' g' → logprob: -12.375016212463379
    4. 'i' → logprob: -17.125015258789062
    5. '	g' → logprob: -17.750015258789062
    6. '   ' → logprob: -18.000015258789062
    7. '

' → logprob: -18.125015258789062
    8. 'grp' → logprob: -18.250015258789062
    9. ' ' → logprob: -18.625015258789062
    10. '_g' → logprob: -18.875015258789062

Token 670: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008646713569760323
    2. 'in' → logprob: -4.758646488189697
    3. 'g' → logprob: -11.008646965026855
    4. ' ' → logprob: -11.758646965026855
    5. 'arr' → logprob: -12.633646965026855
    6. ' g' → logprob: -14.008646965026855
    7. '<|end|>' → logprob: -14.383646965026855
    8. '.' → logprob: -14.508646965026855
    9. '<|end|>' → logprob: -15.258646965026855
    10. ' ' → logprob: -15.508646965026855

Token 671: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.00020914296328555793
    2. ' groups' → logprob: -8.750208854675293
    3. 'g' → logprob: -10.375208854675293
    4. 'group' → logprob: -11.750208854675293
    5. 'arr' → logprob: -12.000208854675293
    6. 'self' → logprob: -12.250208854675293
    7. '(groups' → logprob: -15.500208854675293
    8. '   ' → logprob: -16.12520980834961
    9. 'ranges' → logprob: -16.37520980834961
    10. '.groups' → logprob: -16.37520980834961

Token 672: ':
' (ID: 734)
  Prédit: '[arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[arr' → logprob: -0.026541095227003098
    2. ' if' → logprob: -4.901541233062744
    3. ':' → logprob: -5.026541233062744
    4. '[' → logprob: -5.901541233062744
    5. '.arr' → logprob: -5.901541233062744
    6. ':
' → logprob: -6.276541233062744
    7. '           ' → logprob: -6.651541233062744
    8. 'arr' → logprob: -7.026541233062744
    9. ' arrivals' → logprob: -7.651541233062744
    10. '       ' → logprob: -7.901541233062744

Token 673: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03266824036836624
    2. 'arr' → logprob: -3.907668352127075
    3. ' arrivals' → logprob: -4.782668113708496
    4. '       ' → logprob: -5.907668113708496
    5. '	arr' → logprob: -7.782668113708496
    6. '[arr' → logprob: -8.157668113708496
    7. '(arr' → logprob: -9.532668113708496
    8. '	       ' → logprob: -10.032668113708496
    9. '   ' → logprob: -10.407668113708496
    10. ' arr' → logprob: -11.407668113708496

Token 674: ' arrivals' (ID: 126339)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.004796665161848068
    2. '           ' → logprob: -5.879796504974365
    3. ' arrivals' → logprob: -6.254796504974365
    4. 'g' → logprob: -10.754796981811523
    5. '       ' → logprob: -11.004796981811523
    6. '	arr' → logprob: -11.754796981811523
    7. ' arr' → logprob: -12.129796981811523
    8. '   ' → logprob: -12.379796981811523
    9. '               ' → logprob: -12.504796981811523
    10. '[arr' → logprob: -13.004796981811523

Token 675: '[g' (ID: 80396)
  Prédit: '[g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -2.2200749754119897e-06
    2. 'g' → logprob: -13.625001907348633
    3. '[' → logprob: -14.625001907348633
    4. '.setdefault' → logprob: -14.750001907348633
    5. '=g' → logprob: -16.875001907348633
    6. '[group' → logprob: -18.500001907348633
    7. '\[' → logprob: -18.750001907348633
    8. ' [' → logprob: -19.250001907348633
    9. '[G' → logprob: -19.625001907348633
    10. '][' → logprob: -19.750001907348633

Token 676: '.arr' (ID: 76200)
  Prédit: '.arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.arr' → logprob: -0.002755545312538743
    2. '].' → logprob: -6.127755641937256
    3. 'arrival' → logprob: -8.252755165100098
    4. '.index' → logprob: -8.752755165100098
    5. '.' → logprob: -10.002755165100098
    6. '[arr' → logprob: -10.252755165100098
    7. ' .' → logprob: -11.252755165100098
    8. 'arr' → logprob: -11.752755165100098
    9. '```' → logprob: -11.752755165100098
    10. ').' → logprob: -12.252755165100098

Token 677: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.008233819156885147
    2. 'arrival' → logprob: -5.383234024047852
    3. 'val' → logprob: -6.008234024047852
    4. 'al' → logprob: -6.883234024047852
    5. 'index' → logprob: -9.883234024047852
    6. 'arr' → logprob: -11.008234024047852
    7. ' arrival' → logprob: -11.133234024047852
    8. '   ' → logprob: -11.383234024047852
    9. '       ' → logprob: -12.258234024047852
    10. 'iral' → logprob: -12.258234024047852

Token 678: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003217045683413744
    2. '].' → logprob: -5.7532172203063965
    3. '.' → logprob: -10.878216743469238
    4. ').' → logprob: -11.878216743469238
    5. ' .' → logprob: -12.378216743469238
    6. 'append' → logprob: -12.503216743469238
    7. '}.' → logprob: -12.753216743469238
    8. ' ].' → logprob: -13.878216743469238
    9. '.app' → logprob: -14.128216743469238
    10. '.add' → logprob: -15.628216743469238

Token 679: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. ' append' → logprob: -15.5
    3. '.append' → logprob: -15.75
    4. 'appen' → logprob: -18.25
    5. 'app' → logprob: -18.625
    6. '_append' → logprob: -20.375
    7. 'Append' → logprob: -20.5
    8. '	append' → logprob: -20.875
    9. 'add' → logprob: -23.625
    10. ' Append' → logprob: -24.875

Token 680: '(g' (ID: 7791)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0009632694418542087
    2. '(g' → logprob: -7.00096321105957
    3. ' g' → logprob: -9.87596321105957
    4. '   ' → logprob: -15.87596321105957
    5. '	g' → logprob: -16.37596321105957
    6. 'group' → logprob: -17.62596321105957
    7. '[g' → logprob: -18.00096321105957
    8. '#g' → logprob: -18.50096321105957
    9. '_g' → logprob: -18.62596321105957
    10. '(' → logprob: -19.00096321105957

Token 681: ')

' (ID: 1029)
  Prédit: '.index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.007419440895318985
    2. ')' → logprob: -5.257419586181641
    3. 'index' → logprob: -6.132419586181641
    4. '.' → logprob: -13.13241958618164
    5. ')}' → logprob: -13.25741958618164
    6. ' index' → logprob: -13.38241958618164
    7. ')
' → logprob: -13.63241958618164
    8. ' .' → logprob: -13.63241958618164
    9. ' )' → logprob: -14.38241958618164
    10. '#index' → logprob: -14.75741958618164

Token 682: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16023601591587067
    2. ' current' → logprob: -2.660236120223999
    3. 'current' → logprob: -3.285236120223999
    4. ' time' → logprob: -4.66023588180542
    5. '
' → logprob: -4.91023588180542
    6. ' while' → logprob: -5.03523588180542
    7. 'time' → logprob: -5.66023588180542
    8. ' for' → logprob: -5.91023588180542
    9. ' next' → logprob: -5.91023588180542
    10. 'while' → logprob: -5.91023588180542

Token 683: ' #' (ID: 1069)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.5286661386489868
    2. 'current' → logprob: -1.6536661386489868
    3. 'while' → logprob: -1.7786661386489868
    4. 'next' → logprob: -4.028666019439697
    5. '       ' → logprob: -4.403666019439697
    6. ' current' → logprob: -5.028666019439697
    7. ' time' → logprob: -5.278666019439697
    8. ' while' → logprob: -5.528666019439697
    9. 'for' → logprob: -5.653666019439697
    10. ' next' → logprob: -7.528666019439697

Token 684: ' Map' (ID: 7343)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6814641952514648
    2. 'time' → logprob: -0.9314641952514648
    3. 'current' → logprob: -2.931464195251465
    4. 'for' → logprob: -4.056464195251465
    5. 'next' → logprob: -4.431464195251465
    6. 'import' → logprob: -5.306464195251465
    7. 'waiting' → logprob: -5.806464195251465
    8. 'wait' → logprob: -6.431464195251465
    9. 'event' → logprob: -6.431464195251465
    10. ' while' → logprob: -6.431464195251465

Token 685: ' group' (ID: 3566)
  Prédit: 'leave'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leave' → logprob: -0.9206303954124451
    2. ' =' → logprob: -1.6706304550170898
    3. ' leave' → logprob: -2.04563045501709
    4. 'le' → logprob: -2.29563045501709
    5. 'next' → logprob: -3.29563045501709
    6. ' next' → logprob: -3.42063045501709
    7. ' leaves' → logprob: -3.67063045501709
    8. 'from' → logprob: -4.29563045501709
    9. '_leave' → logprob: -4.54563045501709
    10. ' group' → logprob: -4.79563045501709

Token 686: ' index' (ID: 3472)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.8609665632247925
    2. '_indices' → logprob: -1.9859665632247925
    3. '_le' → logprob: -2.235966682434082
    4. '_arr' → logprob: -2.485966682434082
    5. 'index' → logprob: -2.860966682434082
    6. '_leave' → logprob: -3.110966682434082
    7. 'arr' → logprob: -3.860966682434082
    8. 'indices' → logprob: -3.985966682434082
    9. '_to' → logprob: -4.110966682434082
    10. 'le' → logprob: -4.110966682434082

Token 687: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.27228522300720215
    2. '_to' → logprob: -1.5222852230072021
    3. ' to' → logprob: -4.272285461425781
    4. '=' → logprob: -5.897285461425781
    5. ' =' → logprob: -6.772285461425781
    6. 's' → logprob: -7.272285461425781
    7. ':' → logprob: -8.147285461425781
    8. 'for' → logprob: -8.147285461425781
    9. '_time' → logprob: -8.522285461425781
    10. 'arrival' → logprob: -8.772285461425781

Token 688: ' leave' (ID: 7668)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.15185491740703583
    2. 'g' → logprob: -2.026854991912842
    3. 'groups' → logprob: -5.401854991912842
    4. ' group' → logprob: -6.651854991912842
    5. 'arrival' → logprob: -7.401854991912842
    6. 'True' → logprob: -7.651854991912842
    7. 'their' → logprob: -7.776854991912842
    8. 'Group' → logprob: -8.026854515075684
    9. 'the' → logprob: -8.526854515075684
    10. 'None' → logprob: -8.651854515075684

Token 689: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.5416238307952881
    2. 'time' → logprob: -0.9166238307952881
    3. '_times' → logprob: -4.291624069213867
    4. 'times' → logprob: -5.416624069213867
    5. '_events' → logprob: -9.291624069213867
    6. ' time' → logprob: -9.916624069213867
    7. 'Time' → logprob: -11.791624069213867
    8. 's' → logprob: -12.041624069213867
    9. 't' → logprob: -12.041624069213867
    10. 'events' → logprob: -12.166624069213867

Token 690: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03576399385929108
    2. 'le' → logprob: -4.035764217376709
    3. 'leave' → logprob: -4.160764217376709
    4. ' leaves' → logprob: -7.535764217376709
    5. ' =' → logprob: -7.910764217376709
    6. ':' → logprob: -8.28576374053955
    7. ' leave' → logprob: -8.41076374053955
    8. ',' → logprob: -9.03576374053955
    9. '_leave' → logprob: -9.28576374053955
    10. 'times' → logprob: -9.41076374053955

Token 691: ' seated' (ID: 77168)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.028458986431360245
    2. 'group' → logprob: -3.903459072113037
    3. 'groups' → logprob: -5.528459072113037
    4. 'self' → logprob: -5.903459072113037
    5. ' g' → logprob: -7.028459072113037
    6. 'se' → logprob: -8.653458595275879
    7. ' groups' → logprob: -10.403458595275879
    8. 'set' → logprob: -10.778458595275879
    9. ' group' → logprob: -10.903458595275879
    10. ' self' → logprob: -12.028458595275879

Token 692: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27870696783065796
    2. 'leave' → logprob: -1.6537070274353027
    3. 'le' → logprob: -4.153707027435303
    4. ' =' → logprob: -4.153707027435303
    5. ':' → logprob: -4.903707027435303
    6. '=' → logprob: -5.778707027435303
    7. ',' → logprob: -5.778707027435303
    8. ' leave' → logprob: -6.153707027435303
    9. '_leave' → logprob: -6.278707027435303
    10. ' leaves' → logprob: -7.403707027435303

Token 693: ' seated' (ID: 77168)
  Prédit: 'leave'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'leave' → logprob: -0.1371162235736847
    2. '       ' → logprob: -2.3871161937713623
    3. 'le' → logprob: -3.8871161937713623
    4. ' leave' → logprob: -4.262116432189941
    5. ' leaves' → logprob: -7.012116432189941
    6. 'group' → logprob: -8.512116432189941
    7. 'self' → logprob: -8.637116432189941
    8. '   ' → logprob: -9.137116432189941
    9. 'departure' → logprob: -10.137116432189941
    10. '_leave' → logprob: -11.137116432189941

Token 694: '_time' (ID: 6425)
  Prédit: '_times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_times' → logprob: -0.412757933139801
    2. '_time' → logprob: -1.2877578735351562
    3. '_leave' → logprob: -3.2877578735351562
    4. ' =' → logprob: -4.162757873535156
    5. 'times' → logprob: -6.162757873535156
    6. 'time' → logprob: -6.412757873535156
    7. '=' → logprob: -6.537757873535156
    8. '=[]' → logprob: -6.662757873535156
    9. 'leave' → logprob: -7.412757873535156
    10. '_at' → logprob: -7.662757873535156

Token 695: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14181141555309296
    2. ' +' → logprob: -2.1418113708496094
    3. ' is' → logprob: -5.141811370849609
    4. 'is' → logprob: -5.641811370849609
    5. '=' → logprob: -6.016811370849609
    6. 'and' → logprob: -6.516811370849609
    7. 'if' → logprob: -7.516811370849609
    8. ' and' → logprob: -9.14181137084961
    9. ' =' → logprob: -9.14181137084961
    10. 'for' → logprob: -9.39181137084961

Token 696: ' eat' (ID: 11237)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.03582645207643509
    2. 'group' → logprob: -3.7858264446258545
    3. 'groups' → logprob: -4.535826683044434
    4. 'e' → logprob: -7.660826683044434
    5. ' g' → logprob: -7.910826683044434
    6. 'eat' → logprob: -7.910826683044434
    7. 'self' → logprob: -8.910826683044434
    8. ' groups' → logprob: -9.285826683044434
    9. ' group' → logprob: -9.660826683044434
    10. '[' → logprob: -11.410826683044434

Token 697: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0008520359406247735
    2. 'time' → logprob: -7.125852108001709
    3. '       ' → logprob: -11.00085163116455
    4. '   ' → logprob: -11.50085163116455
    5. '_times' → logprob: -11.62585163116455
    6. '           ' → logprob: -13.50085163116455
    7. ' =' → logprob: -13.62585163116455
    8. 't' → logprob: -13.87585163116455
    9. 'Time' → logprob: -13.87585163116455
    10. 'ing' → logprob: -14.00085163116455

Token 698: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29485246539115906
    2. 'leave' → logprob: -1.4198524951934814
    3. 'le' → logprob: -5.044852256774902
    4. ' leave' → logprob: -5.294852256774902
    5. '_leave' → logprob: -7.919852256774902
    6. '   ' → logprob: -8.294852256774902
    7. '
' → logprob: -8.294852256774902
    8. ',' → logprob: -8.544852256774902
    9. '.leave' → logprob: -8.544852256774902
    10. 'times' → logprob: -8.669852256774902

Token 699: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0516885444521904
    2. 'leave' → logprob: -3.1766884326934814
    3. 'le' → logprob: -4.8016886711120605
    4. ' leave' → logprob: -8.551688194274902
    5. ' leaves' → logprob: -9.301688194274902
    6. 'times' → logprob: -10.176688194274902
    7. '   ' → logprob: -10.176688194274902
    8. '_leave' → logprob: -11.301688194274902
    9. '```' → logprob: -11.426688194274902
    10. '        
' → logprob: -11.926688194274902

Token 700: ' #' (ID: 1069)
  Prédit: 'leave'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'leave' → logprob: -0.30468013882637024
    2. 'le' → logprob: -1.4296801090240479
    3. '       ' → logprob: -3.929680109024048
    4. 'while' → logprob: -5.804680347442627
    5. ' leaves' → logprob: -8.679679870605469
    6. ' leave' → logprob: -8.929679870605469
    7. 'group' → logprob: -9.179679870605469
    8. 'next' → logprob: -9.304679870605469
    9. '   ' → logprob: -10.179679870605469
    10. 'import' → logprob: -11.304679870605469

Token 701: ' We' (ID: 1416)
  Prédit: 'leave'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'leave' → logprob: -0.1173141747713089
    2. 'while' → logprob: -2.367314100265503
    3. '       ' → logprob: -4.867314338684082
    4. 'next' → logprob: -5.242314338684082
    5. 'le' → logprob: -6.742314338684082
    6. 'group' → logprob: -6.992314338684082
    7. 'import' → logprob: -7.742314338684082
    8. ' leave' → logprob: -8.242314338684082
    9. 'current' → logprob: -8.492314338684082
    10. 'time' → logprob: -8.617314338684082

Token 702: ' simulate' (ID: 66687)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9990679025650024
    2. 'time' → logprob: -1.3740679025650024
    3. 'while' → logprob: -2.499067783355713
    4. '       ' → logprob: -2.749067783355713
    5. 'le' → logprob: -3.249067783355713
    6. 'leave' → logprob: -3.249067783355713
    7. ' import' → logprob: -3.499067783355713
    8. 'current' → logprob: -3.999067783355713
    9. 'continue' → logprob: -3.999067783355713
    10. 'def' → logprob: -4.374067783355713

Token 703: ' by' (ID: 656)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06186481937766075
    2. ' while' → logprob: -3.8118648529052734
    3. 'time' → logprob: -4.311864852905273
    4. 'current' → logprob: -4.436864852905273
    5. '       ' → logprob: -4.811864852905273
    6. ' current' → logprob: -6.061864852905273
    7. 'self' → logprob: -6.311864852905273
    8. ' time' → logprob: -8.811864852905273
    9. ' self' → logprob: -9.186864852905273
    10. 'for' → logprob: -9.686864852905273

Token 704: ' time' (ID: 1058)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5878375172615051
    2. 'time' → logprob: -1.2128374576568604
    3. 'last' → logprob: -2.4628374576568604
    4. 'while' → logprob: -3.3378374576568604
    5. 'minute' → logprob: -4.2128376960754395
    6. 'minutes' → logprob: -5.8378376960754395
    7. ' current' → logprob: -5.9628376960754395
    8. 't' → logprob: -6.5878376960754395
    9. 'self' → logprob: -6.9628376960754395
    10. 'increment' → logprob: -6.9628376960754395

Token 705: ' starting' (ID: 8601)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7436445951461792
    2. '=' → logprob: -0.9936445951461792
    3. '+=' → logprob: -2.7436447143554688
    4. ' +=' → logprob: -2.9936447143554688
    5. 'while' → logprob: -4.368644714355469
    6. ' in' → logprob: -4.993644714355469
    7. 'step' → logprob: -5.368644714355469
    8. 'from' → logprob: -5.993644714355469
    9. '       ' → logprob: -6.368644714355469
    10. ':' → logprob: -6.493644714355469

Token 706: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.009694593027234077
    2. ' from' → logprob: -5.009694576263428
    3. '=' → logprob: -6.509694576263428
    4. '       ' → logprob: -6.884694576263428
    5. 'at' → logprob: -8.134695053100586
    6. ' at' → logprob: -8.884695053100586
    7. ' =' → logprob: -11.634695053100586
    8. '           ' → logprob: -12.509695053100586
    9. 'current' → logprob: -12.759695053100586
    10. 'while' → logprob: -12.759695053100586

Token 707: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010154680348932743
    2. 'self' → logprob: -4.635154724121094
    3. 'last' → logprob: -7.885154724121094
    4. '   ' → logprob: -12.010154724121094
    5. 'current' → logprob: -12.010154724121094
    6. ' ' → logprob: -12.510154724121094
    7. ' self' → logprob: -13.260154724121094
    8. 'time' → logprob: -13.385154724121094
    9. '       ' → logprob: -14.135154724121094
    10. 'zero' → logprob: -14.260154724121094

Token 708: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01112091913819313
    2. 'self' → logprob: -4.511120796203613
    3. 'last' → logprob: -10.011120796203613
    4. 'current' → logprob: -11.386120796203613
    5. 'time' → logprob: -11.886120796203613
    6. ' ' → logprob: -12.761120796203613
    7. ' self' → logprob: -13.136120796203613
    8. '   ' → logprob: -13.261120796203613
    9. 'min' → logprob: -13.636120796203613
    10. 'zero' → logprob: -14.636120796203613

Token 709: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5970396399497986
    2. '
' → logprob: -1.0970396995544434
    3. ':
' → logprob: -3.2220396995544434
    4. '       ' → logprob: -3.7220396995544434
    5. ' while' → logprob: -3.8470396995544434
    6. 'while' → logprob: -4.097039699554443
    7. ',' → logprob: -5.347039699554443
    8. '   ' → logprob: -5.847039699554443
    9. ' to' → logprob: -6.472039699554443
    10. '\n' → logprob: -7.097039699554443

Token 710: ' increment' (ID: 24032)
  Prédit: 'going'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'going' → logprob: -0.36981332302093506
    2. ' going' → logprob: -1.744813323020935
    3. 'increment' → logprob: -2.2448134422302246
    4. 'while' → logprob: -4.244813442230225
    5. 'continu' → logprob: -5.369813442230225
    6. 'running' → logprob: -5.994813442230225
    7. 'in' → logprob: -6.744813442230225
    8. 'go' → logprob: -7.119813442230225
    9. ' increment' → logprob: -7.119813442230225
    10. ' continuing' → logprob: -7.369813442230225

Token 711: 'ing' (ID: 289)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -1.1875237226486206
    2. '       ' → logprob: -1.3125237226486206
    3. 'ing' → logprob: -1.8125237226486206
    4. 'by' → logprob: -2.18752384185791
    5. '+=' → logprob: -2.93752384185791
    6. '   ' → logprob: -3.18752384185791
    7. '=' → logprob: -3.93752384185791
    8. ' +=' → logprob: -4.06252384185791
    9. '+' → logprob: -4.81252384185791
    10. '1' → logprob: -5.56252384185791

Token 712: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -1.1451761722564697
    2. 'self' → logprob: -1.1451761722564697
    3. 'by' → logprob: -1.8951761722564697
    4. 'while' → logprob: -2.0201761722564697
    5. 'current' → logprob: -3.0201761722564697
    6. ' self' → logprob: -4.395175933837891
    7. ' current' → logprob: -5.020175933837891
    8. ' while' → logprob: -5.395175933837891
    9. '       ' → logprob: -6.020175933837891
    10. '1' → logprob: -6.270175933837891

Token 713: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.696077227592468e-05
    2. ' ' → logprob: -9.500077247619629
    3. '   ' → logprob: -14.125077247619629
    4. 'one' → logprob: -14.125077247619629
    5. ' one' → logprob: -15.500077247619629
    6. '```' → logprob: -16.375076293945312
    7. 'minutes' → logprob: -16.375076293945312
    8. '`' → logprob: -17.375076293945312
    9. '
' → logprob: -17.625076293945312
    10. 'minute' → logprob: -18.375076293945312

Token 714: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '
' → logprob: -18.875
    4. '   ' → logprob: -19.25
    5. '```' → logprob: -19.25
    6. 'one' → logprob: -19.625
    7. 'minutes' → logprob: -20.25
    8. 'time' → logprob: -20.875
    9. '`' → logprob: -21.0
    10. '

' → logprob: -21.375

Token 715: ' until' (ID: 4609)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5201969146728516
    2. '
' → logprob: -1.3951969146728516
    3. ':
' → logprob: -2.3951969146728516
    4. '       ' → logprob: -3.1451969146728516
    5. ',' → logprob: -5.020196914672852
    6. 'while' → logprob: -5.145196914672852
    7. '   ' → logprob: -5.770196914672852
    8. ' while' → logprob: -6.270196914672852
    9. '\n' → logprob: -6.520196914672852
    10. '.' → logprob: -6.645196914672852

Token 716: ' conditions' (ID: 6409)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.8263322710990906
    2. 'self' → logprob: -0.9513322710990906
    3. 'True' → logprob: -2.5763323307037354
    4. 'target' → logprob: -3.4513323307037354
    5. 'any' → logprob: -4.326332092285156
    6. 'group' → logprob: -4.451332092285156
    7. 'False' → logprob: -4.951332092285156
    8. 'last' → logprob: -5.076332092285156
    9. ' groups' → logprob: -5.201332092285156
    10. ' self' → logprob: -5.201332092285156

Token 717: ' met' (ID: 1421)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.645136833190918
    2. ' <=' → logprob: -1.270136833190918
    3. '       ' → logprob: -2.520136833190918
    4. ' are' → logprob: -2.770136833190918
    5. 'are' → logprob: -4.145136833190918
    6. '           ' → logprob: -4.520136833190918
    7. '   ' → logprob: -5.145136833190918
    8. ' allow' → logprob: -5.770136833190918
    9. '=' → logprob: -5.895136833190918
    10. 'while' → logprob: -6.020136833190918

Token 718: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6470874547958374
    2. '       ' → logprob: -0.7720874547958374
    3. ':' → logprob: -5.397087574005127
    4. ' while' → logprob: -5.897087574005127
    5. 'while' → logprob: -5.897087574005127
    6. ':
' → logprob: -6.772087574005127
    7. '        
' → logprob: -7.272087574005127
    8. '   ' → logprob: -7.772087574005127
    9. '
' → logprob: -7.897087574005127
    10. ' or' → logprob: -8.147087097167969

Token 719: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014139533042907715
    2. '
' → logprob: -5.014139652252197
    3. 'while' → logprob: -5.639139652252197
    4. ' while' → logprob: -5.889139652252197
    5. '   ' → logprob: -7.514139652252197
    6. '```' → logprob: -8.264139175415039
    7. ',' → logprob: -9.764139175415039
    8. '        
' → logprob: -10.014139175415039
    9. '           ' → logprob: -10.389139175415039
    10. 'current' → logprob: -10.889139175415039

Token 720: ' time' (ID: 1058)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8844106793403625
    2. ' while' → logprob: -0.8844106793403625
    3. 'while' → logprob: -1.7594106197357178
    4. ' current' → logprob: -7.134410858154297
    5. '```' → logprob: -7.509410858154297
    6. 'current' → logprob: -8.259410858154297
    7. '   ' → logprob: -9.009410858154297
    8. '
' → logprob: -9.884410858154297
    9. ' next' → logprob: -10.259410858154297
    10. ' time' → logprob: -10.259410858154297

Token 721: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36464786529541016
    2. '=' → logprob: -1.3646478652954102
    3. ' +=' → logprob: -3.11464786529541
    4. '+=' → logprob: -5.23964786529541
    5. '+' → logprob: -8.36464786529541
    6. ' +' → logprob: -9.86464786529541
    7. ' ' → logprob: -10.23964786529541
    8. '   ' → logprob: -10.23964786529541
    9. ')' → logprob: -12.23964786529541
    10. ':' → logprob: -12.36464786529541

Token 722: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.8828707804204896e-05
    2. ' ' → logprob: -10.000048637390137
    3. 'last' → logprob: -14.000048637390137
    4. '   ' → logprob: -14.125048637390137
    5. 'self' → logprob: -14.125048637390137
    6. '-' → logprob: -14.500048637390137
    7. '  ' → logprob: -16.250049591064453
    8. 'wait' → logprob: -16.375049591064453
    9. ' -' → logprob: -16.500049591064453
    10. '       ' → logprob: -17.000049591064453

Token 723: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.875001907348633
    3. 'self' → logprob: -15.000001907348633
    4. '   ' → logprob: -15.875001907348633
    5. '       ' → logprob: -17.750001907348633
    6. '           ' → logprob: -18.125001907348633
    7. '1' → logprob: -18.125001907348633
    8. '-' → logprob: -18.625001907348633
    9. '=' → logprob: -19.187501907348633
    10. '  ' → logprob: -19.437501907348633

Token 724: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24919027090072632
    2. '       ' → logprob: -1.874190330505371
    3. ' while' → logprob: -3.624190330505371
    4. 'while' → logprob: -3.749190330505371
    5. ':' → logprob: -5.499190330505371
    6. ':
' → logprob: -5.624190330505371
    7. '        
' → logprob: -5.749190330505371
    8. '<|end|>' → logprob: -5.874190330505371
    9. '\n' → logprob: -7.624190330505371
    10. ' 
' → logprob: -7.624190330505371

Token 725: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6257935166358948
    2. '
' → logprob: -1.37579345703125
    3. ' while' → logprob: -1.87579345703125
    4. 'while' → logprob: -3.12579345703125
    5. '```' → logprob: -5.12579345703125
    6. '   ' → logprob: -5.87579345703125
    7. '<|end|>' → logprob: -6.12579345703125
    8. ':' → logprob: -6.62579345703125
    9. '        
' → logprob: -7.00079345703125
    10. '	while' → logprob: -7.12579345703125

Token 726: ' seated' (ID: 77168)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5034410357475281
    2. '       ' → logprob: -1.5034410953521729
    3. ' while' → logprob: -1.7534410953521729
    4. '   ' → logprob: -12.378440856933594
    5. '	while' → logprob: -12.378440856933594
    6. '```' → logprob: -13.128440856933594
    7. '
' → logprob: -13.753440856933594
    8. '           ' → logprob: -15.253440856933594
    9. 'While' → logprob: -15.503440856933594
    10. 'import' → logprob: -16.128440856933594

Token 727: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -0.2324344962835312
    2. '=' → logprob: -2.3574345111846924
    3. '_indices' → logprob: -3.2324345111846924
    4. ' =' → logprob: -3.7324345111846924
    5. '_times' → logprob: -3.9824345111846924
    6. '_indexes' → logprob: -4.857434272766113
    7. '_count' → logprob: -5.107434272766113
    8. '_time' → logprob: -5.357434272766113
    9. '_set' → logprob: -5.732434272766113
    10. 'groups' → logprob: -6.857434272766113

Token 728: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14446504414081573
    2. '=' → logprob: -2.0194649696350098
    3. '=set' → logprob: -7.14446496963501
    4. '_set' → logprob: -7.89446496963501
    5. '=[]' → logprob: -8.894465446472168
    6. '   ' → logprob: -8.894465446472168
    7. ':' → logprob: -9.019465446472168
    8. '_count' → logprob: -10.019465446472168
    9. ')' → logprob: -10.519465446472168
    10. '_indices' → logprob: -10.644465446472168

Token 729: ' set' (ID: 920)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.5365976095199585
    2. 'set' → logprob: -0.9115976095199585
    3. '{' → logprob: -4.786597728729248
    4. '[]' → logprob: -5.411597728729248
    5. '0' → logprob: -8.28659725189209
    6. ' set' → logprob: -8.78659725189209
    7. '[' → logprob: -9.78659725189209
    8. 'len' → logprob: -10.41159725189209
    9. ' {}' → logprob: -10.91159725189209
    10. '{}
' → logprob: -10.91159725189209

Token 730: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1614033430814743
    2. '()
' → logprob: -1.9114032983779907
    3. '()

' → logprob: -7.536403179168701
    4. '([' → logprob: -7.661403179168701
    5. '(g' → logprob: -9.28640365600586
    6. '(group' → logprob: -10.41140365600586
    7. '(range' → logprob: -10.66140365600586
    8. '()
' → logprob: -11.66140365600586
    9. '()`' → logprob: -12.91140365600586
    10. '();' → logprob: -13.16140365600586

Token 731: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1636766791343689
    2. '
' → logprob: -2.0386767387390137
    3. '<|end|>' → logprob: -4.788676738739014
    4. ' while' → logprob: -5.163676738739014
    5. '```' → logprob: -5.913676738739014
    6. 'while' → logprob: -7.038676738739014
    7. '        
' → logprob: -7.038676738739014
    8. '<|end|>' → logprob: -7.163676738739014
    9. '   ' → logprob: -8.038676261901855
    10. ':' → logprob: -8.163676261901855

Token 732: ' seated' (ID: 77168)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.19129812717437744
    2. '       ' → logprob: -2.441298007965088
    3. ' while' → logprob: -2.441298007965088
    4. '```' → logprob: -11.316298484802246
    5. '	while' → logprob: -12.566298484802246
    6. '   ' → logprob: -13.566298484802246
    7. 'While' → logprob: -14.441298484802246
    8. '           ' → logprob: -15.441298484802246
    9. '
' → logprob: -15.816298484802246
    10. 'for' → logprob: -16.44129753112793

Token 733: '_target' (ID: 24705)
  Prédit: '_groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_groups' → logprob: -0.27813395857810974
    2. ' =' → logprob: -2.2781338691711426
    3. '_times' → logprob: -2.7781338691711426
    4. '_time' → logprob: -4.028133869171143
    5. '_indices' → logprob: -4.153133869171143
    6. '_queue' → logprob: -4.778133869171143
    7. '=' → logprob: -5.028133869171143
    8. '_indexes' → logprob: -5.153133869171143
    9. '_group' → logprob: -5.653133869171143
    10. 'groups' → logprob: -6.153133869171143

Token 734: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24834401905536652
    2. '=' → logprob: -1.99834406375885
    3. '_index' → logprob: -2.8733439445495605
    4. '_group' → logprob: -4.4983439445495605
    5. '_time' → logprob: -5.1233439445495605
    6. '_idx' → logprob: -6.2483439445495605
    7. '_groups' → logprob: -6.6233439445495605
    8. 'index' → logprob: -6.6233439445495605
    9. '   ' → logprob: -7.3733439445495605
    10. '```' → logprob: -7.4983439445495605

Token 735: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.006748178042471409
    2. ' False' → logprob: -5.006748199462891
    3. '(False' → logprob: -11.50674819946289
    4. '   ' → logprob: -12.00674819946289
    5. 'True' → logprob: -12.25674819946289
    6. 'set' → logprob: -12.63174819946289
    7. 'None' → logprob: -12.75674819946289
    8. 'target' → logprob: -12.88174819946289
    9. '  ' → logprob: -14.38174819946289
    10. 'group' → logprob: -14.50674819946289

Token 736: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1878131628036499
    2. '       ' → logprob: -1.81281316280365
    3. ' while' → logprob: -5.3128132820129395
    4. 'while' → logprob: -6.5628132820129395
    5. '        
' → logprob: -7.3128132820129395
    6. '<|end|>' → logprob: -7.6878132820129395
    7. ':' → logprob: -9.437812805175781
    8. '
' → logprob: -9.437812805175781
    9. '```' → logprob: -9.687812805175781
    10. ':
' → logprob: -9.687812805175781

Token 737: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030800290405750275
    2. ' while' → logprob: -6.003079891204834
    3. 'while' → logprob: -7.628079891204834
    4. '
' → logprob: -9.378080368041992
    5. '```' → logprob: -11.128080368041992
    6. '   ' → logprob: -11.378080368041992
    7. '        
' → logprob: -12.753080368041992
    8. '           ' → logprob: -13.378080368041992
    9. '	while' → logprob: -14.253080368041992
    10. '<|end|>' → logprob: -14.878080368041992

Token 738: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.07695263624191284
    2. '       ' → logprob: -3.0769526958465576
    3. ' while' → logprob: -3.5769526958465576
    4. '   ' → logprob: -12.576952934265137
    5. '
' → logprob: -13.701952934265137
    6. '	while' → logprob: -14.201952934265137
    7. '```' → logprob: -14.701952934265137
    8. 'While' → logprob: -16.57695198059082
    9. '           ' → logprob: -16.95195198059082
    10. '        
' → logprob: -17.32695198059082

Token 739: ' True' (ID: 6432)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.0247052907943726
    2. 'time' → logprob: -1.6497052907943726
    3. ' True' → logprob: -1.8997052907943726
    4. 'not' → logprob: -2.024705410003662
    5. ' time' → logprob: -2.149705410003662
    6. 'True' → logprob: -3.024705410003662
    7. '(not' → logprob: -7.274705410003662
    8. 'se' → logprob: -7.399705410003662
    9. '(time' → logprob: -8.399704933166504
    10. '   ' → logprob: -8.524704933166504

Token 740: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2452446073293686
    2. ':
' → logprob: -1.9952446222305298
    3. '           ' → logprob: -2.7452445030212402
    4. '       ' → logprob: -4.99524450302124
    5. '<|end|>' → logprob: -5.99524450302124
    6. '<|end|>' → logprob: -5.99524450302124
    7. ',' → logprob: -6.12024450302124
    8. ' and' → logprob: -6.24524450302124
    9. '   ' → logprob: -8.370244979858398
    10. ' if' → logprob: -8.620244979858398

Token 741: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004389763809740543
    2. '   ' → logprob: -6.004389762878418
    3. '       ' → logprob: -7.129389762878418
    4. '
' → logprob: -7.629389762878418
    5. ' if' → logprob: -7.879389762878418
    6. 'if' → logprob: -9.629389762878418
    7. '            
' → logprob: -9.629389762878418
    8. '```' → logprob: -10.004389762878418
    9. '#' → logprob: -10.504389762878418
    10. '    
' → logprob: -11.754389762878418

Token 742: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.05597390606999397
    2. '           ' → logprob: -3.055974006652832
    3. 'if' → logprob: -5.180974006652832
    4. 'for' → logprob: -7.180974006652832
    5. '   ' → logprob: -7.430974006652832
    6. '       ' → logprob: -8.805974006652832
    7. ' #' → logprob: -8.930974006652832
    8. 'while' → logprob: -9.930974006652832
    9. '
' → logprob: -10.555974006652832
    10. '            
' → logprob: -11.680974006652832

Token 743: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08288175612688065
    2. '           ' → logprob: -2.7078816890716553
    3. 'if' → logprob: -5.332881927490234
    4. 'while' → logprob: -5.582881927490234
    5. 'for' → logprob: -5.582881927490234
    6. '       ' → logprob: -8.957881927490234
    7. 'arr' → logprob: -9.082881927490234
    8. '   ' → logprob: -9.207881927490234
    9. '
' → logprob: -9.957881927490234
    10. ' #' → logprob: -10.082881927490234

Token 744: '1' (ID: 16)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0554678849875927
    2. 'if' → logprob: -3.0554678440093994
    3. 'for' → logprob: -5.3054680824279785
    4. 'arr' → logprob: -6.5554680824279785
    5. 'while' → logprob: -7.9304680824279785
    6. 'groups' → logprob: -10.55546760559082
    7. 'current' → logprob: -10.93046760559082
    8. ' #' → logprob: -11.18046760559082
    9. 'new' → logprob: -11.30546760559082
    10. 'arrival' → logprob: -11.43046760559082

Token 745: '.' (ID: 13)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8067944049835205
    2. ' #' → logprob: -1.3067944049835205
    3. '           ' → logprob: -1.8067944049835205
    4. ')' → logprob: -2.6817944049835205
    5. '.' → logprob: -4.056794166564941
    6. '       ' → logprob: -4.681794166564941
    7. '
' → logprob: -5.056794166564941
    8. '   ' → logprob: -5.056794166564941
    9. ' if' → logprob: -5.931794166564941
    10. ' ' → logprob: -6.556794166564941

Token 746: ' Handle' (ID: 25041)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.122470922768116
    2. 'for' → logprob: -2.4974708557128906
    3. 'while' → logprob: -3.6224708557128906
    4. ' #' → logprob: -6.122470855712891
    5. 'arr' → logprob: -7.122470855712891
    6. 'if' → logprob: -7.247470855712891
    7. 'Process' → logprob: -7.747470855712891
    8. '           ' → logprob: -7.997470855712891
    9. 'Check' → logprob: -7.997470855712891
    10. ' for' → logprob: -8.49747085571289

Token 747: ' leaving' (ID: 15021)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.22811593115329742
    2. ' arrivals' → logprob: -1.8531159162521362
    3. '#' → logprob: -3.228116035461426
    4. ' arriving' → logprob: -5.603116035461426
    5. 'arrival' → logprob: -6.603116035461426
    6. 'new' → logprob: -6.853116035461426
    7. ' new' → logprob: -7.353116035461426
    8. ' #' → logprob: -8.603116035461426
    9. ' group' → logprob: -8.728116035461426
    10. 'all' → logprob: -9.103116035461426

Token 748: ' groups' (ID: 8896)
  Prédit: '_groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -1.201073408126831
    2. ' for' → logprob: -1.451073408126831
    3. 'for' → logprob: -1.576073408126831
    4. 'groups' → logprob: -2.201073408126831
    5. '           ' → logprob: -2.701073408126831
    6. ' groups' → logprob: -2.826073408126831
    7. ' to' → logprob: -5.45107364654541
    8. '       ' → logprob: -5.57607364654541
    9. 'indices' → logprob: -6.32607364654541
    10. 'to' → logprob: -6.57607364654541

Token 749: ' at' (ID: 540)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16366373002529144
    2. ' for' → logprob: -2.038663625717163
    3. 'for' → logprob: -4.038663864135742
    4. '       ' → logprob: -7.288663864135742
    5. ':' → logprob: -8.038663864135742
    6. ',' → logprob: -8.038663864135742
    7. ' to' → logprob: -8.163663864135742
    8. 'le' → logprob: -8.163663864135742
    9. '            
' → logprob: -8.413663864135742
    10. '<|end|>' → logprob: -8.413663864135742

Token 750: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.004770445637404919
    2. ' time' → logprob: -5.379770278930664
    3. 'current' → logprob: -9.004770278930664
    4. ' current' → logprob: -11.379770278930664
    5. 'this' → logprob: -12.129770278930664
    6. 'the' → logprob: -12.254770278930664
    7. '           ' → logprob: -12.879770278930664
    8. ' ' → logprob: -14.254770278930664
    9. '   ' → logprob: -14.254770278930664
    10. ' this' → logprob: -14.879770278930664

Token 751: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4160192608833313
    2. 'time' → logprob: -2.1660192012786865
    3. ' =' → logprob: -2.6660192012786865
    4. ' for' → logprob: -3.1660192012786865
    5. ' time' → logprob: -3.6660192012786865
    6. 'for' → logprob: -3.6660192012786865
    7. '=' → logprob: -4.166019439697266
    8. ':' → logprob: -4.541019439697266
    9. 'le' → logprob: -5.041019439697266
    10. ' in' → logprob: -5.166019439697266

Token 752: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011355629976605996
    2. '       ' → logprob: -9.500113487243652
    3. ' for' → logprob: -11.000113487243652
    4. ',' → logprob: -12.250113487243652
    5. 'for' → logprob: -12.375113487243652
    6. '<|end|>' → logprob: -12.750113487243652
    7. '```' → logprob: -12.750113487243652
    8. '   ' → logprob: -13.375113487243652
    9. '<|end|>' → logprob: -13.500113487243652
    10. '            
' → logprob: -14.250113487243652

Token 753: ' leaving' (ID: 15021)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.49078258872032166
    2. 'for' → logprob: -1.490782618522644
    3. 'to' → logprob: -2.3657824993133545
    4. '           ' → logprob: -3.1157824993133545
    5. 'leave' → logprob: -3.7407824993133545
    6. ' for' → logprob: -8.615782737731934
    7. ' leaving' → logprob: -8.865782737731934
    8. ' to' → logprob: -9.115782737731934
    9. '       ' → logprob: -9.240782737731934
    10. '   ' → logprob: -9.865782737731934

Token 754: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -0.349784791469574
    2. ' =' → logprob: -1.3497848510742188
    3. '_now' → logprob: -3.5997848510742188
    4. '_indices' → logprob: -5.349784851074219
    5. '=' → logprob: -6.599784851074219
    6. '_list' → logprob: -7.349784851074219
    7. '_times' → logprob: -7.599784851074219
    8. '_indexes' → logprob: -7.974784851074219
    9. 'now' → logprob: -8.349784851074219
    10. '   ' → logprob: -8.724784851074219

Token 755: '_now' (ID: 49444)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602339744567871
    2. ' =' → logprob: -1.910233974456787
    3. '=[]' → logprob: -12.285234451293945
    4. '=[' → logprob: -12.535234451293945
    5. ' ' → logprob: -14.785234451293945
    6. '   ' → logprob: -14.910234451293945
    7. ' =[' → logprob: -15.160234451293945
    8. ':' → logprob: -16.160234451293945
    9. '  ' → logprob: -16.285234451293945
    10. '=[]
' → logprob: -16.660234451293945

Token 756: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759585499763489
    2. '=' → logprob: -0.8259585499763489
    3. '=[]' → logprob: -11.450958251953125
    4. '=[' → logprob: -11.950958251953125
    5. ' =[' → logprob: -14.325958251953125
    6. ' ' → logprob: -14.825958251953125
    7. ':' → logprob: -14.825958251953125
    8. '   ' → logprob: -15.200958251953125
    9. '=[]
' → logprob: -15.575958251953125
    10. '  ' → logprob: -17.200958251953125

Token 757: ' [' (ID: 723)
  Prédit: '[g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -0.2911168038845062
    2. '[i' → logprob: -1.5411168336868286
    3. '[' → logprob: -4.041116714477539
    4. '[group' → logprob: -4.541116714477539
    5. '[k' → logprob: -5.291116714477539
    6. '[t' → logprob: -6.166116714477539
    7. ' [' → logprob: -7.541116714477539
    8. '[s' → logprob: -7.666116714477539
    9. '[x' → logprob: -8.416116714477539
    10. '[item' → logprob: -8.541116714477539

Token 758: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0009682760573923588
    2. 'grp' → logprob: -8.000967979431152
    3. 'group' → logprob: -8.000967979431152
    4. 'og' → logprob: -8.625967979431152
    5. '(g' → logprob: -9.250967979431152
    6. 'gr' → logprob: -12.500967979431152
    7. 'gp' → logprob: -12.750967979431152
    8. ' g' → logprob: -12.750967979431152
    9. 'idx' → logprob: -13.000967979431152
    10. '(group' → logprob: -13.375967979431152

Token 759: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.313338041305542
    2. ' for' → logprob: -1.313338041305542
    3. ' ' → logprob: -10.813338279724121
    4. '
' → logprob: -11.063338279724121
    5. '   ' → logprob: -11.438338279724121
    6. 'g' → logprob: -11.688338279724121
    7. 'or' → logprob: -11.938338279724121
    8. '  ' → logprob: -12.563338279724121
    9. 'idx' → logprob: -12.813338279724121
    10. 'in' → logprob: -13.813338279724121

Token 760: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.3612482249736786
    2. 'self' → logprob: -1.611248254776001
    3. 'occupied' → logprob: -2.486248254776001
    4. 'og' → logprob: -4.361248016357422
    5. ' g' → logprob: -5.861248016357422
    6. 'group' → logprob: -6.486248016357422
    7. ' self' → logprob: -6.986248016357422
    8. 'occup' → logprob: -7.611248016357422
    9. 'occ' → logprob: -7.861248016357422
    10. 'se' → logprob: -8.611248016357422

Token 761: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18416179716587067
    2. 'in' → logprob: -1.8091617822647095
    3. 'self' → logprob: -5.55916166305542
    4. 'g' → logprob: -8.059162139892578
    5. ' self' → logprob: -8.684162139892578
    6. ' g' → logprob: -10.809162139892578
    7. 's' → logprob: -11.184162139892578
    8. 'se' → logprob: -12.059162139892578
    9. 'group' → logprob: -12.434162139892578
    10. ' ' → logprob: -12.559162139892578

Token 762: ' occupied' (ID: 46186)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.09362374991178513
    2. 'self' → logprob: -2.468623638153076
    3. 'groups' → logprob: -5.593623638153076
    4. 'occup' → logprob: -7.843623638153076
    5. 'se' → logprob: -8.218624114990234
    6. ' occupied' → logprob: -8.968624114990234
    7. ' self' → logprob: -9.593624114990234
    8. 'group' → logprob: -11.218624114990234
    9. 'occ' → logprob: -11.718624114990234
    10. '   ' → logprob: -12.156124114990234

Token 763: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -2.8087270038668066e-05
    2. '_' → logprob: -11.125027656555176
    3. '
' → logprob: -12.625027656555176
    4. 'groups' → logprob: -12.875027656555176
    5. 'Groups' → logprob: -13.875027656555176
    6. ')' → logprob: -14.000027656555176
    7. 's' → logprob: -14.250027656555176
    8. '```' → logprob: -14.375027656555176
    9. '_group' → logprob: -14.625027656555176
    10. '_g' → logprob: -14.625027656555176

Token 764: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0619952529668808
    2. 'if' → logprob: -2.811995267868042
    3. '           ' → logprob: -10.561995506286621
    4. '   ' → logprob: -14.811995506286621
    5. '               ' → logprob: -15.186995506286621
    6. '       ' → logprob: -15.311995506286621
    7. '          ' → logprob: -15.311995506286621
    8. '            ' → logprob: -15.436995506286621
    9. '	if' → logprob: -15.811995506286621
    10. '    ' → logprob: -16.311994552612305

Token 765: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0002978048287332058
    2. '(g' → logprob: -8.375297546386719
    3. '   ' → logprob: -10.375297546386719
    4. ' g' → logprob: -10.750297546386719
    5. 'time' → logprob: -12.500297546386719
    6. 'self' → logprob: -13.125297546386719
    7. '                   ' → logprob: -13.625297546386719
    8. '           ' → logprob: -13.875297546386719
    9. ' (' → logprob: -14.125297546386719
    10. '(' → logprob: -14.375297546386719

Token 766: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -0.0010407903464511037
    2. 'se' → logprob: -6.876040935516357
    3. '.s' → logprob: -12.8760404586792
    4. '.e' → logprob: -13.3760404586792
    5. '.g' → logprob: -13.6260404586792
    6. '.le' → logprob: -14.0010404586792
    7. '	se' → logprob: -14.3760404586792
    8. 'Se' → logprob: -15.8760404586792
    9. '.group' → logprob: -15.8760404586792
    10. '.' → logprob: -15.8760404586792

Token 767: 'ated' (ID: 780)
  Prédit: 'ated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ated' → logprob: -8.017927029868588e-05
    2. 'at' → logprob: -10.250080108642578
    3. 'atted' → logprob: -11.000080108642578
    4. 'ate' → logprob: -12.750080108642578
    5. 'a' → logprob: -12.875080108642578
    6. 'ATED' → logprob: -13.000080108642578
    7. 'dated' → logprob: -13.000080108642578
    8. 'se' → logprob: -13.250080108642578
    9. '`' → logprob: -13.875080108642578
    10. '```' → logprob: -14.000080108642578

Token 768: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.1398757123970427e-05
    2. 'time' → logprob: -11.750011444091797
    3. '_start' → logprob: -12.750011444091797
    4. '_end' → logprob: -15.750011444091797
    5. '```' → logprob: -16.125011444091797
    6. '_' → logprob: -16.625011444091797
    7. '   ' → logprob: -16.625011444091797
    8. ' _' → logprob: -17.125011444091797
    9. 'Time' → logprob: -17.375011444091797
    10. '==' → logprob: -18.375011444091797

Token 769: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029759511351585388
    2. ' +' → logprob: -3.529759407043457
    3. '!=' → logprob: -13.279759407043457
    4. 'and' → logprob: -13.779759407043457
    5. '==' → logprob: -14.029759407043457
    6. ' is' → logprob: -14.154759407043457
    7. '<=' → logprob: -14.404759407043457
    8. '          ' → logprob: -14.404759407043457
    9. '   ' → logprob: -14.904759407043457
    10. '+
' → logprob: -15.029759407043457

Token 770: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0010330495424568653
    2. ' g' → logprob: -6.876032829284668
    3. '```' → logprob: -16.126033782958984
    4. '   ' → logprob: -16.251033782958984
    5. '           ' → logprob: -17.501033782958984
    6. '
' → logprob: -17.501033782958984
    7. '                   ' → logprob: -17.626033782958984
    8. ' ' → logprob: -17.751033782958984
    9. '	g' → logprob: -17.751033782958984
    10. '    ' → logprob: -18.376033782958984

Token 771: '.e' (ID: 2560)
  Prédit: '.e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.02515392005443573
    2. 'eat' → logprob: -3.775153875350952
    3. '.g' → logprob: -6.775154113769531
    4. 'g' → logprob: -8.275154113769531
    5. ' .' → logprob: -9.025154113769531
    6. '.' → logprob: -9.025154113769531
    7. 'e' → logprob: -9.150154113769531
    8. '```' → logprob: -9.525154113769531
    9. '   ' → logprob: -10.525154113769531
    10. '.leave' → logprob: -11.275154113769531

Token 772: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0001669485354796052
    2. ' at' → logprob: -10.750166893005371
    3. '==' → logprob: -10.875166893005371
    4. '_at' → logprob: -11.000166893005371
    5. 'eat' → logprob: -11.375166893005371
    6. 'att' → logprob: -11.375166893005371
    7. '```' → logprob: -11.562666893005371
    8. '<=' → logprob: -12.125166893005371
    9. '>' → logprob: -12.312666893005371
    10. '       ' → logprob: -12.312666893005371

Token 773: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -5.9153885558771435e-06
    2. '_' → logprob: -13.125005722045898
    3. '_t' → logprob: -13.625005722045898
    4. ' _' → logprob: -14.125005722045898
    5. 'time' → logprob: -14.125005722045898
    6. ')_' → logprob: -15.875005722045898
    7. '   ' → logprob: -15.875005722045898
    8. '       ' → logprob: -16.0000057220459
    9. '           ' → logprob: -16.1250057220459
    10. '_times' → logprob: -16.7500057220459

Token 774: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.038982655853033066
    2. ' ==' → logprob: -3.288982629776001
    3. '<=' → logprob: -7.03898286819458
    4. ' <=' → logprob: -9.788982391357422
    5. ')==' → logprob: -12.663982391357422
    6. ']==' → logprob: -12.788982391357422
    7. '()==' → logprob: -13.663982391357422
    8. '==
' → logprob: -15.288982391357422
    9. ')' → logprob: -16.663982391357422
    10. '           ' → logprob: -16.788982391357422

Token 775: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.029752805829048157
    2. ' time' → logprob: -3.529752731323242
    3. '   ' → logprob: -14.279752731323242
    4. '
' → logprob: -14.529752731323242
    5. ' ' → logprob: -15.029752731323242
    6. 't' → logprob: -15.279752731323242
    7. '	time' → logprob: -15.654752731323242
    8. '"time' → logprob: -15.779752731323242
    9. '(time' → logprob: -16.654752731323242
    10. '=time' → logprob: -16.654752731323242

Token 776: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002505028620362282
    2. ']
' → logprob: -6.002504825592041
    3. '           ' → logprob: -11.2525053024292
    4. ' ]' → logprob: -11.7525053024292
    5. ']

' → logprob: -12.1275053024292
    6. '       ' → logprob: -13.5025053024292
    7. ']
' → logprob: -14.3775053024292
    8. '               ' → logprob: -15.2525053024292
    9. '   ' → logprob: -15.5025053024292
    10. ')' → logprob: -16.127504348754883

Token 777: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00018208740220870823
    2. '<|end|>' → logprob: -9.375182151794434
    3. ' for' → logprob: -9.875182151794434
    4. '       ' → logprob: -11.750182151794434
    5. '
' → logprob: -11.875182151794434
    6. ',' → logprob: -12.125182151794434
    7. '<|end|>' → logprob: -12.125182151794434
    8. 'for' → logprob: -12.500182151794434
    9. '            
' → logprob: -12.750182151794434
    10. '   ' → logprob: -12.750182151794434

Token 778: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028440216556191444
    2. ' for' → logprob: -4.278439998626709
    3. 'for' → logprob: -4.278439998626709
    4. '       ' → logprob: -8.153440475463867
    5. '   ' → logprob: -11.028440475463867
    6. '<|end|>' → logprob: -12.778440475463867
    7. '            
' → logprob: -13.403440475463867
    8. '               ' → logprob: -14.528440475463867
    9. '	       ' → logprob: -14.653440475463867
    10. ' ' → logprob: -15.028440475463867

Token 779: ' leaving' (ID: 15021)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.0028350651264190674
    2. ' leaving' → logprob: -6.127835273742676
    3. 'len' → logprob: -7.377835273742676
    4. '   ' → logprob: -11.877835273742676
    5. ' len' → logprob: -12.127835273742676
    6. '       ' → logprob: -12.877835273742676
    7. ' ' → logprob: -13.002835273742676
    8. '     ' → logprob: -13.252835273742676
    9. '           ' → logprob: -13.502835273742676
    10. '  ' → logprob: -14.252835273742676

Token 780: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -0.0001317871210630983
    2. 'groups' → logprob: -9.500131607055664
    3. '       ' → logprob: -11.625131607055664
    4. '           ' → logprob: -11.750131607055664
    5. '               ' → logprob: -12.125131607055664
    6. '```' → logprob: -12.250131607055664
    7. 'ing' → logprob: -12.500131607055664
    8. '_' → logprob: -12.625131607055664
    9. '                   ' → logprob: -12.625131607055664
    10. '   ' → logprob: -12.750131607055664

Token 781: '_now' (ID: 49444)
  Prédit: '_now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -0.004328402690589428
    2. 'now' → logprob: -5.50432825088501
    3. ':' → logprob: -8.754328727722168
    4. 'Now' → logprob: -10.379328727722168
    5. '   ' → logprob: -11.004328727722168
    6. '_NOW' → logprob: -11.504328727722168
    7. ' now' → logprob: -12.004328727722168
    8. '           ' → logprob: -12.504328727722168
    9. '       ' → logprob: -12.629328727722168
    10. ':
' → logprob: -13.004328727722168

Token 782: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012532602995634079
    2. ':
' → logprob: -4.387532711029053
    3. '):' → logprob: -11.512532234191895
    4. ':
' → logprob: -13.012532234191895
    5. '   ' → logprob: -13.137532234191895
    6. '       ' → logprob: -13.137532234191895
    7. '):
' → logprob: -13.637532234191895
    8. ' :' → logprob: -14.012532234191895
    9. '!=' → logprob: -14.137532234191895
    10. ':

' → logprob: -14.262532234191895

Token 783: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31995689868927
    2. '               ' → logprob: -1.31995689868927
    3. ' for' → logprob: -5.0699567794799805
    4. '
' → logprob: -8.81995677947998
    5. 'for' → logprob: -9.56995677947998
    6. '   ' → logprob: -9.94495677947998
    7. '            
' → logprob: -10.44495677947998
    8. '       ' → logprob: -10.94495677947998
    9. ',' → logprob: -11.19495677947998
    10. '                
' → logprob: -11.44495677947998

Token 784: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10708406567573547
    2. '           ' → logprob: -2.982084035873413
    3. 'for' → logprob: -3.107084035873413
    4. '               ' → logprob: -5.107084274291992
    5. '   ' → logprob: -9.732084274291992
    6. '                   ' → logprob: -11.482084274291992
    7. '       ' → logprob: -12.982084274291992
    8. ' ' → logprob: -13.607084274291992
    9. '```' → logprob: -13.982084274291992
    10. '	for' → logprob: -14.107084274291992

Token 785: ' Groups' (ID: 56440)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16607727110385895
    2. ' for' → logprob: -1.9160772562026978
    3. '           ' → logprob: -5.291077136993408
    4. '               ' → logprob: -7.166077136993408
    5. '   ' → logprob: -11.291077613830566
    6. '                   ' → logprob: -11.291077613830566
    7. '```' → logprob: -13.791077613830566
    8. '       ' → logprob: -14.416077613830566
    9. ' ' → logprob: -14.791077613830566
    10. '	for' → logprob: -15.416077613830566

Token 786: ' leave' (ID: 7668)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.9574134349822998
    2. '.sort' → logprob: -1.8324134349822998
    3. ' leaving' → logprob: -2.3324134349823
    4. 'leave' → logprob: -2.4574134349823
    5. 'to' → logprob: -2.5824134349823
    6. ' to' → logprob: -3.4574134349823
    7. 'sort' → logprob: -3.5824134349823
    8. '_to' → logprob: -3.5824134349823
    9. ' =' → logprob: -3.7074134349823
    10. ' leave' → logprob: -4.207413673400879

Token 787: ' simultaneously' (ID: 38328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16469840705394745
    2. ' for' → logprob: -2.039698362350464
    3. '               ' → logprob: -4.539698600769043
    4. 'for' → logprob: -5.414698600769043
    5. ',' → logprob: -6.039698600769043
    6. ':
' → logprob: -6.414698600769043
    7. '                   ' → logprob: -6.914698600769043
    8. ':' → logprob: -7.289698600769043
    9. '
' → logprob: -7.914698600769043
    10. '.' → logprob: -9.039698600769043

Token 788: ' at' (ID: 540)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06307273358106613
    2. '           ' → logprob: -2.813072681427002
    3. ' for' → logprob: -6.938072681427002
    4. '                   ' → logprob: -10.18807315826416
    5. ',' → logprob: -10.43807315826416
    6. ':' → logprob: -10.81307315826416
    7. '```' → logprob: -11.56307315826416
    8. '       ' → logprob: -12.06307315826416
    9. 'for' → logprob: -12.06307315826416
    10. '
' → logprob: -12.18807315826416

Token 789: ' beginning' (ID: 10526)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.012521425262093544
    2. ' time' → logprob: -5.137521266937256
    3. 'this' → logprob: -5.762521266937256
    4. '           ' → logprob: -6.262521266937256
    5. 'the' → logprob: -7.262521266937256
    6. ')' → logprob: -8.387521743774414
    7. '               ' → logprob: -8.762521743774414
    8. ' this' → logprob: -8.887521743774414
    9. 'for' → logprob: -9.637521743774414
    10. '
' → logprob: -9.762521743774414

Token 790: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7288284301757812
    2. 'of' → logprob: -0.7288284301757812
    3. '           ' → logprob: -3.3538284301757812
    4. '               ' → logprob: -9.603828430175781
    5. '   ' → logprob: -11.478828430175781
    6. '       ' → logprob: -11.978828430175781
    7. '
' → logprob: -12.853828430175781
    8. '```' → logprob: -13.228828430175781
    9. '_of' → logprob: -13.353828430175781
    10. 'ofday' → logprob: -13.478828430175781

Token 791: ' this' (ID: 495)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.23277920484542847
    2. 'the' → logprob: -1.7327792644500732
    3. ' time' → logprob: -3.9827792644500732
    4. ' the' → logprob: -4.982779026031494
    5. 'this' → logprob: -5.982779026031494
    6. 'current' → logprob: -6.607779026031494
    7. 'loop' → logprob: -7.732779026031494
    8. ' this' → logprob: -7.857779026031494
    9. ' loop' → logprob: -8.732779502868652
    10. ' current' → logprob: -8.982779502868652

Token 792: ' minute' (ID: 12434)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.08432484418153763
    2. ' time' → logprob: -2.959324836730957
    3. 'minute' → logprob: -3.584324836730957
    4. ' minute' → logprob: -7.834324836730957
    5. ' timestep' → logprob: -8.834324836730957
    6. '           ' → logprob: -9.209324836730957
    7. 'tick' → logprob: -9.334324836730957
    8. 'step' → logprob: -9.709324836730957
    9. 'iteration' → logprob: -9.709324836730957
    10. '
' → logprob: -9.834324836730957

Token 793: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0760495588183403
    2. ' for' → logprob: -3.201049566268921
    3. '           ' → logprob: -3.451049566268921
    4. 'for' → logprob: -7.701049327850342
    5. '
' → logprob: -8.8260498046875
    6. ',' → logprob: -9.0760498046875
    7. '                   ' → logprob: -10.5760498046875
    8. ':' → logprob: -10.7010498046875
    9. ' and' → logprob: -12.2010498046875
    10. '       ' → logprob: -12.3260498046875

Token 794: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04419141262769699
    2. '           ' → logprob: -3.169191360473633
    3. ' for' → logprob: -6.794191360473633
    4. 'for' → logprob: -10.544191360473633
    5. '```' → logprob: -10.794191360473633
    6. '       ' → logprob: -11.044191360473633
    7. '                   ' → logprob: -12.419191360473633
    8. ',' → logprob: -13.294191360473633
    9. '   ' → logprob: -13.544191360473633
    10. '#' → logprob: -15.044191360473633

Token 795: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.33554965257644653
    2. '           ' → logprob: -1.5855495929718018
    3. ' for' → logprob: -2.5855495929718018
    4. '               ' → logprob: -5.335549831390381
    5. '   ' → logprob: -10.335549354553223
    6. '                   ' → logprob: -11.835549354553223
    7. '       ' → logprob: -12.335549354553223
    8. ' ' → logprob: -13.960549354553223
    9. '          ' → logprob: -14.585549354553223
    10. '	for' → logprob: -14.585549354553223

Token 796: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.116452157497406
    2. 'group' → logprob: -2.241452217102051
    3. 'grp' → logprob: -6.241452217102051
    4. 'lg' → logprob: -6.491452217102051
    5. 'le' → logprob: -9.36645221710205
    6. 'gr' → logprob: -10.36645221710205
    7. 'leave' → logprob: -11.11645221710205
    8. ' g' → logprob: -11.24145221710205
    9. ' group' → logprob: -11.99145221710205
    10. 'Group' → logprob: -13.61645221710205

Token 797: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00409371592104435
    2. 'in' → logprob: -5.504093647003174
    3. 'g' → logprob: -11.754094123840332
    4. ' ' → logprob: -13.004094123840332
    5. '	in' → logprob: -13.754094123840332
    6. '_in' → logprob: -14.004094123840332
    7. ')' → logprob: -15.004094123840332
    8. 'In' → logprob: -15.004094123840332
    9. '   ' → logprob: -15.254094123840332
    10. '  ' → logprob: -15.254094123840332

Token 798: ' leaving' (ID: 15021)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.0002043748099822551
    2. ' leaving' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.875204086303711
    4. 'leave' → logprob: -15.500204086303711
    5. ' le' → logprob: -16.25020408630371
    6. 'Leaving' → logprob: -16.62520408630371
    7. '_le' → logprob: -16.87520408630371
    8. 'occupied' → logprob: -17.12520408630371
    9. '           ' → logprob: -17.37520408630371
    10. 'lett' → logprob: -17.50020408630371

Token 799: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -2.6776029699249193e-05
    2. 'groups' → logprob: -11.50002670288086
    3. 'g' → logprob: -12.75002670288086
    4. 'ing' → logprob: -13.00002670288086
    5. '_group' → logprob: -13.00002670288086
    6. '       ' → logprob: -13.50002670288086
    7. '_' → logprob: -13.50002670288086
    8. '```' → logprob: -13.87502670288086
    9. '`' → logprob: -14.25002670288086
    10. '           ' → logprob: -14.37502670288086

Token 800: '_now' (ID: 49444)
  Prédit: '_now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -0.0010713927913457155
    2. 'now' → logprob: -7.126071453094482
    3. ':' → logprob: -9.126070976257324
    4. '   ' → logprob: -10.376070976257324
    5. ':
' → logprob: -10.626070976257324
    6. '       ' → logprob: -11.501070976257324
    7. '           ' → logprob: -11.751070976257324
    8. '               ' → logprob: -11.751070976257324
    9. '_NOW' → logprob: -11.751070976257324
    10. '):
' → logprob: -11.876070976257324

Token 801: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05936311185359955
    2. ':' → logprob: -2.9343631267547607
    3. '           ' → logprob: -5.809362888336182
    4. '):
' → logprob: -7.059362888336182
    5. '                   ' → logprob: -7.809362888336182
    6. '               ' → logprob: -9.68436336517334
    7. ',' → logprob: -9.93436336517334
    8. ':
' → logprob: -10.80936336517334
    9. 'self' → logprob: -10.93436336517334
    10. '():
' → logprob: -11.05936336517334

Token 802: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0014152349904179573
    2. '           ' → logprob: -6.626415252685547
    3. 'self' → logprob: -10.126415252685547
    4. ' self' → logprob: -11.251415252685547
    5. '   ' → logprob: -11.376415252685547
    6. '               ' → logprob: -11.501415252685547
    7. '       ' → logprob: -12.501415252685547
    8. '		           ' → logprob: -12.501415252685547
    9. '                       ' → logprob: -12.751415252685547
    10. '                  ' → logprob: -13.751415252685547

Token 803: ' seating' (ID: 42332)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05251314118504524
    2. 'se' → logprob: -3.0525131225585938
    3. ' self' → logprob: -6.302513122558594
    4. '                   ' → logprob: -7.427513122558594
    5. ' seating' → logprob: -7.677513122558594
    6. '               ' → logprob: -7.677513122558594
    7. '           ' → logprob: -7.802513122558594
    8. '   ' → logprob: -8.927513122558594
    9. '       ' → logprob: -12.427513122558594
    10. 'seat' → logprob: -12.427513122558594

Token 804: '.leave' (ID: 169567)
  Prédit: '.leave'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.leave' → logprob: -6.749814019713085e-06
    2. '.' → logprob: -12.125006675720215
    3. 'leave' → logprob: -14.250006675720215
    4. '.le' → logprob: -14.375006675720215
    5. '.remove' → logprob: -18.00000762939453
    6. ' .' → logprob: -18.50000762939453
    7. '.release' → logprob: -18.75000762939453
    8. ' leave' → logprob: -20.00000762939453
    9. '   ' → logprob: -20.12500762939453
    10. '```' → logprob: -20.37500762939453

Token 805: '_group' (ID: 15990)
  Prédit: '_group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -0.00023357603640761226
    2. 'group' → logprob: -8.50023365020752
    3. 'Group' → logprob: -10.87523365020752
    4. '(group' → logprob: -11.87523365020752
    5. 'g' → logprob: -13.00023365020752
    6. '(g' → logprob: -14.87523365020752
    7. '"group' → logprob: -15.00023365020752
    8. '```' → logprob: -15.25023365020752
    9. '_Group' → logprob: -15.50023365020752
    10. ' group' → logprob: -15.50023365020752

Token 806: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -5.5577775128767826e-06
    2. '(group' → logprob: -12.125005722045898
    3. '(' → logprob: -16.7500057220459
    4. 'g' → logprob: -17.0000057220459
    5. ' (' → logprob: -17.7500057220459
    6. '(
' → logprob: -19.5000057220459
    7. '[g' → logprob: -19.8750057220459
    8. '(gr' → logprob: -20.0000057220459
    9. '```' → logprob: -20.1250057220459
    10. 'group' → logprob: -20.3750057220459

Token 807: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1410934180021286
    2. ')
' → logprob: -2.2660934925079346
    3. '(g' → logprob: -3.6410934925079346
    4. '                   ' → logprob: -7.3910932540893555
    5. ')
' → logprob: -7.6410932540893555
    6. 'g' → logprob: -7.6410932540893555
    7. ',g' → logprob: -10.891093254089355
    8. ' )' → logprob: -11.766093254089355
    9. ')

' → logprob: -11.891093254089355
    10. '               ' → logprob: -12.141093254089355

Token 808: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.026764893904328346
    2. '               ' → logprob: -3.6517648696899414
    3. '           ' → logprob: -7.776764869689941
    4. '       ' → logprob: -10.526764869689941
    5. '   ' → logprob: -11.276764869689941
    6. 'occupied' → logprob: -12.776764869689941
    7. 'self' → logprob: -13.776764869689941
    8. '                       ' → logprob: -15.151764869689941
    9. '		           ' → logprob: -15.151764869689941
    10. '                  ' → logprob: -15.151764869689941

Token 809: ' for' (ID: 395)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.014362464658915997
    2. '               ' → logprob: -4.264362335205078
    3. '           ' → logprob: -8.889362335205078
    4. '       ' → logprob: -11.264362335205078
    5. '   ' → logprob: -11.389362335205078
    6. '                       ' → logprob: -11.389362335205078
    7. ' for' → logprob: -11.389362335205078
    8. '                    
' → logprob: -12.639362335205078
    9. 'for' (adapté à ' for') → logprob: -12.889362335205078
    10. '                    ' → logprob: -13.514362335205078

Token 810: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.07011305540800095
    2. ' g' → logprob: -2.695112943649292
    3. '                   ' → logprob: -9.070113182067871
    4. '   ' → logprob: -10.195113182067871
    5. '    ' → logprob: -12.070113182067871
    6. '           ' → logprob: -12.195113182067871
    7. ' ' → logprob: -12.820113182067871
    8. '	g' → logprob: -13.070113182067871
    9. '  ' → logprob: -13.195113182067871
    10. '       ' → logprob: -13.570113182067871

Token 811: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003103565191850066
    2. 'in' → logprob: -5.878103733062744
    3. ' g' → logprob: -8.628103256225586
    4. 'g' → logprob: -9.128103256225586
    5. ' ' → logprob: -12.128103256225586
    6. '_in' → logprob: -14.003103256225586
    7. '  ' → logprob: -14.003103256225586
    8. ' ' → logprob: -15.003103256225586
    9. '	in' → logprob: -15.003103256225586
    10. '    ' → logprob: -15.128103256225586

Token 812: ' leaving' (ID: 15021)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.011690753512084484
    2. ' leaving' → logprob: -4.636690616607666
    3. 'occupied' → logprob: -6.636690616607666
    4. '   ' → logprob: -8.511691093444824
    5. 'g' → logprob: -9.386691093444824
    6. ' le' → logprob: -9.511691093444824
    7. 'occup' → logprob: -10.261691093444824
    8. 'leave' → logprob: -10.511691093444824
    9. ' occupied' → logprob: -10.511691093444824
    10. '           ' → logprob: -10.761691093444824

Token 813: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -0.0007939011557027698
    2. 'now' → logprob: -7.625793933868408
    3. '_now' → logprob: -8.62579345703125
    4. 'groups' → logprob: -9.50079345703125
    5. 'Groups' → logprob: -10.37579345703125
    6. '_group' → logprob: -12.12579345703125
    7. '```' → logprob: -13.00079345703125
    8. '       ' → logprob: -13.37579345703125
    9. 'ing' → logprob: -13.87579345703125
    10. '   ' → logprob: -13.87579345703125

Token 814: '_now' (ID: 49444)
  Prédit: '_now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_now' → logprob: -0.00045557913836091757
    2. 'now' → logprob: -7.875455379486084
    3. '           ' → logprob: -11.125455856323242
    4. '               ' → logprob: -11.250455856323242
    5. '   ' → logprob: -11.750455856323242
    6. '                   ' → logprob: -11.750455856323242
    7. '       ' → logprob: -12.125455856323242
    8. 'Now' → logprob: -12.500455856323242
    9. '_NOW' → logprob: -12.500455856323242
    10. ':
' → logprob: -13.375455856323242

Token 815: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.19078396260738373
    2. ':' → logprob: -2.190783977508545
    3. '                   ' → logprob: -2.815783977508545
    4. '):
' → logprob: -7.690783977508545
    5. ' :
' → logprob: -8.065783500671387
    6. '   ' → logprob: -8.565783500671387
    7. ' in' → logprob: -8.565783500671387
    8. '               ' → logprob: -8.940783500671387
    9. ':
' → logprob: -8.940783500671387
    10. '                       ' → logprob: -8.940783500671387

Token 816: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0004757135466206819
    2. '   ' → logprob: -7.875475883483887
    3. '                       ' → logprob: -10.625475883483887
    4. '		           ' → logprob: -11.125475883483887
    5. '	               ' → logprob: -11.250475883483887
    6. '           ' → logprob: -11.750475883483887
    7. '               ' → logprob: -11.750475883483887
    8. 'occupied' → logprob: -12.375475883483887
    9. 'occup' → logprob: -12.625475883483887
    10. '       ' → logprob: -13.000475883483887

Token 817: ' occupied' (ID: 46186)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' (adapté à ' occupied') → logprob: -0.1928814947605133
    2. '   ' → logprob: -2.6928815841674805
    3. '                   ' → logprob: -2.9428815841674805
    4. '                       ' → logprob: -3.4428815841674805
    5. '       ' → logprob: -4.5678815841674805
    6. '               ' → logprob: -5.1928815841674805
    7. 'occup' → logprob: -5.5678815841674805
    8. '           ' → logprob: -6.1928815841674805
    9. ' occupied' → logprob: -7.1928815841674805
    10. 'self' → logprob: -8.06788158416748

Token 818: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -7.896309739408025e-07
    2. 'groups' → logprob: -14.750000953674316
    3. 'Groups' → logprob: -16.625
    4. '       ' → logprob: -17.375
    5. '_group' → logprob: -17.5
    6. '_system' → logprob: -17.5
    7. '_' → logprob: -17.5
    8. 'roups' → logprob: -17.75
    9. 'g' → logprob: -18.0
    10. '           ' → logprob: -18.375

Token 819: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -7.703443770878948e-06
    2. '.' → logprob: -12.000007629394531
    3. 'remove' → logprob: -13.500007629394531
    4. ' remove' → logprob: -16.37500762939453
    5. '.Remove' → logprob: -19.12500762939453
    6. ' .' → logprob: -19.25000762939453
    7. '.pop' → logprob: -19.50000762939453
    8. '	remove' → logprob: -21.37500762939453
    9. '   ' → logprob: -21.62500762939453
    10. '.rem' → logprob: -21.75000762939453

Token 820: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.06197541579604149
    2. 'g' → logprob: -2.8119754791259766
    3. ' g' → logprob: -11.811975479125977
    4. '[g' → logprob: -15.561975479125977
    5. '	g' → logprob: -16.311975479125977
    6. '@g' → logprob: -18.936975479125977
    7. '#g' → logprob: -18.936975479125977
    8. '=g' → logprob: -19.436975479125977
    9. 's' → logprob: -19.811975479125977
    10. '```' → logprob: -20.311975479125977

Token 821: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18030528724193573
    2. '<|end|>' → logprob: -1.8053052425384521
    3. '<|end|>' → logprob: -7.555305480957031
    4. ')
' → logprob: -10.930305480957031
    5. '
' → logprob: -12.430305480957031
    6. ' )' → logprob: -12.555305480957031
    7. '")' → logprob: -13.180305480957031
    8. ')return' → logprob: -13.430305480957031
    9. ').' → logprob: -13.805305480957031
    10. '')' → logprob: -14.055305480957031

Token 822: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0033677080646157265
    2. '
' → logprob: -5.753367900848389
    3. '            
' → logprob: -9.50336742401123
    4. '<|end|>' → logprob: -9.75336742401123
    5. '```' → logprob: -11.00336742401123
    6. '                   ' → logprob: -11.12836742401123
    7. '       ' → logprob: -12.00336742401123
    8. '#' → logprob: -12.00336742401123
    9. '<|end|>' → logprob: -12.87836742401123
    10. '          ' → logprob: -13.00336742401123

Token 823: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19176547229290009
    2. '#' (adapté à ' #') → logprob: -1.8167654275894165
    3. '
' → logprob: -4.441765308380127
    4. '            
' → logprob: -9.441765785217285
    5. '   ' → logprob: -10.316765785217285
    6. ' #' → logprob: -10.441765785217285
    7. '       ' → logprob: -11.066765785217285
    8. '```' → logprob: -11.441765785217285
    9. '+' → logprob: -13.941765785217285
    10. '          ' → logprob: -14.441765785217285

Token 824: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09895513206720352
    2. '           ' → logprob: -2.4739551544189453
    3. '1' → logprob: -4.848955154418945
    4. '2' → logprob: -6.848955154418945
    5. '   ' → logprob: -7.598955154418945
    6. ' #' → logprob: -8.598955154418945
    7. '       ' → logprob: -9.223955154418945
    8. '
' → logprob: -9.348955154418945
    9. 'for' → logprob: -10.098955154418945
    10. 'if' → logprob: -10.098955154418945

Token 825: '2' (ID: 17)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3527686595916748
    2. '2' → logprob: -1.2277686595916748
    3. '           ' → logprob: -5.977768898010254
    4. '1' → logprob: -7.602768898010254
    5. 'arr' → logprob: -7.602768898010254
    6. ' #' → logprob: -7.977768898010254
    7. 'if' → logprob: -8.977768898010254
    8. '
' → logprob: -9.477768898010254
    9. '   ' → logprob: -9.727768898010254
    10. 'for' → logprob: -9.977768898010254

Token 826: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00028135839966125786
    2. '           ' → logprob: -8.37528133392334
    3. '#' → logprob: -10.62528133392334
    4. ' .' → logprob: -11.62528133392334
    5. '   ' → logprob: -11.87528133392334
    6. ':' → logprob: -12.25028133392334
    7. '       ' → logprob: -13.62528133392334
    8. ' ' → logprob: -14.50028133392334
    9. '
' → logprob: -14.75028133392334
    10. '=' → logprob: -15.00028133392334

Token 827: ' Handle' (ID: 25041)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8808555603027344
    2. 'if' → logprob: -1.2558555603027344
    3. 'Handle' → logprob: -1.5058555603027344
    4. 'arr' → logprob: -3.1308555603027344
    5. 'for' → logprob: -4.755855560302734
    6. 'Arr' → logprob: -4.880855560302734
    7. 'handle' → logprob: -5.255855560302734
    8. 'Add' → logprob: -5.880855560302734
    9. ' if' → logprob: -6.255855560302734
    10. '           ' → logprob: -6.255855560302734

Token 828: ' arriving' (ID: 53419)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.11837707459926605
    2. 'arrival' → logprob: -2.9933769702911377
    3. ' arrivals' → logprob: -3.6183769702911377
    4. 'new' → logprob: -4.743377208709717
    5. ' arriving' → logprob: -5.118377208709717
    6. 'groups' → logprob: -5.868377208709717
    7. 'if' → logprob: -5.993377208709717
    8. 'group' → logprob: -6.118377208709717
    9. ' new' → logprob: -6.368377208709717
    10. ' arrival' → logprob: -6.368377208709717

Token 829: ' groups' (ID: 8896)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.38886991143226624
    2. '_groups' → logprob: -1.1388698816299438
    3. ' groups' → logprob: -6.888869762420654
    4. 'if' → logprob: -7.013869762420654
    5. 'arr' → logprob: -10.763870239257812
    6. '
' → logprob: -11.263870239257812
    7. '.groups' → logprob: -11.388870239257812
    8. '(groups' → logprob: -12.013870239257812
    9. '   ' → logprob: -12.263870239257812
    10. '_arr' → logprob: -12.388870239257812

Token 830: ' at' (ID: 540)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3290768563747406
    2. 'if' → logprob: -1.454076886177063
    3. ' if' → logprob: -3.0790767669677734
    4. 'for' → logprob: -8.579076766967773
    5. 'arr' → logprob: -8.579076766967773
    6. 'arrival' → logprob: -9.329076766967773
    7. '            
' → logprob: -9.454076766967773
    8. ',' → logprob: -9.829076766967773
    9. ' arriving' → logprob: -10.204076766967773
    10. ' for' → logprob: -10.329076766967773

Token 831: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.000810340337920934
    2. ' time' → logprob: -7.125810146331787
    3. 'this' → logprob: -12.625810623168945
    4. '
' → logprob: -13.625810623168945
    5. 'the' → logprob: -14.875810623168945
    6. '[' → logprob: -15.000810623168945
    7. '   ' → logprob: -16.125810623168945
    8. 't' → logprob: -16.250810623168945
    9. 'arrival' → logprob: -16.250810623168945
    10. 'times' → logprob: -16.625810623168945

Token 832: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34989291429519653
    2. ' if' → logprob: -1.5998928546905518
    3. 'if' → logprob: -2.5998928546905518
    4. 'arr' → logprob: -4.099893093109131
    5. '            
' → logprob: -7.224893093109131
    6. ' arrivals' → logprob: -7.599893093109131
    7. 'groups' → logprob: -8.724892616271973
    8. ',' → logprob: -8.724892616271973
    9. 'arrival' → logprob: -8.724892616271973
    10. '   ' → logprob: -8.974892616271973

Token 833: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03527238592505455
    2. 'if' → logprob: -3.5352723598480225
    3. ' if' → logprob: -5.285272598266602
    4. 'arrival' → logprob: -9.160272598266602
    5. 'arr' → logprob: -9.285272598266602
    6. 'for' → logprob: -9.410272598266602
    7. '       ' → logprob: -10.285272598266602
    8. '   ' → logprob: -10.285272598266602
    9. ' arrivals' → logprob: -10.785272598266602
    10. '            
' → logprob: -10.785272598266602

Token 834: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.41048648953437805
    2. '           ' → logprob: -1.5354864597320557
    3. 'arr' → logprob: -2.5354864597320557
    4. ' if' → logprob: -3.4104864597320557
    5. 'for' → logprob: -5.285486698150635
    6. ' arriving' → logprob: -5.785486698150635
    7. 'arrival' → logprob: -7.785486698150635
    8. ' for' → logprob: -8.910486221313477
    9. 'incoming' → logprob: -9.410486221313477
    10. '   ' → logprob: -9.785486221313477

Token 835: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.026312021538615227
    2. ' time' → logprob: -3.6513121128082275
    3. '           ' → logprob: -11.776311874389648
    4. '   ' → logprob: -12.901311874389648
    5. ' ' → logprob: -15.151311874389648
    6. '    ' → logprob: -15.151311874389648
    7. '               ' → logprob: -15.276311874389648
    8. '       ' → logprob: -16.27631187438965
    9. '	time' → logprob: -16.27631187438965
    10. '            ' → logprob: -16.65131187438965

Token 836: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931495070457458
    2. ' in' → logprob: -0.6931495070457458
    3. ' ' → logprob: -13.94314956665039
    4. '   ' → logprob: -14.94314956665039
    5. '	in' → logprob: -14.94314956665039
    6. '
' → logprob: -15.81814956665039
    7. ')' → logprob: -17.19314956665039
    8. '[in' → logprob: -17.19314956665039
    9. '  ' → logprob: -17.31814956665039
    10. 'inel' → logprob: -17.44314956665039

Token 837: ' arrivals' (ID: 126339)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -2.451116051815916e-05
    2. ' arrivals' → logprob: -10.625024795532227
    3. 'arrival' → logprob: -15.625024795532227
    4. '[arr' → logprob: -18.375024795532227
    5. '	arr' → logprob: -19.250024795532227
    6. '(arr' → logprob: -19.375024795532227
    7. '   ' → logprob: -19.625024795532227
    8. '
' → logprob: -19.750024795532227
    9. ' arr' → logprob: -19.875024795532227
    10. '_arr' → logprob: -19.875024795532227

Token 838: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10066014528274536
    2. ':
' → logprob: -2.3506600856781006
    3. ' and' → logprob: -8.35066032409668
    4. '           ' → logprob: -8.85066032409668
    5. 'and' → logprob: -10.47566032409668
    6. ':
' → logprob: -11.22566032409668
    7. '):
' → logprob: -11.47566032409668
    8. '):' → logprob: -11.60066032409668
    9. ':

' → logprob: -12.72566032409668
    10. '[' → logprob: -13.35066032409668

Token 839: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4115675091743469
    2. ' for' → logprob: -1.1615674495697021
    3. 'for' → logprob: -3.786567449569702
    4. '           ' → logprob: -6.536567687988281
    5. ',' → logprob: -8.911567687988281
    6. ':' → logprob: -10.661567687988281
    7. '       ' → logprob: -10.786567687988281
    8. '                
' → logprob: -11.161567687988281
    9. ':
' → logprob: -11.286567687988281
    10. '   ' → logprob: -11.536567687988281

Token 840: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.23142629861831665
    2. ' for' → logprob: -1.9814262390136719
    3. '               ' → logprob: -2.731426239013672
    4. 'wait' → logprob: -5.981426239013672
    5. ' wait' → logprob: -7.731426239013672
    6. '           ' → logprob: -7.981426239013672
    7. '   ' → logprob: -9.106426239013672
    8. '                   ' → logprob: -9.106426239013672
    9. 'arr' → logprob: -10.731426239013672
    10. '       ' → logprob: -11.106426239013672

Token 841: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.038643453270196915
    2. ' g' → logprob: -3.2886433601379395
    3. 'group' → logprob: -7.6636433601379395
    4. ' group' → logprob: -9.288643836975098
    5. 'grp' → logprob: -11.413643836975098
    6. '           ' → logprob: -11.663643836975098
    7. 'arr' → logprob: -12.038643836975098
    8. '               ' → logprob: -12.288643836975098
    9. '   ' → logprob: -12.788643836975098
    10. '       ' → logprob: -13.913643836975098

Token 842: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003259234596043825
    2. 'in' → logprob: -5.753259181976318
    3. 'arr' → logprob: -9.753259658813477
    4. ' arrivals' → logprob: -11.753259658813477
    5. 'g' → logprob: -12.128259658813477
    6. 'arrival' → logprob: -12.628259658813477
    7. ' ' → logprob: -12.753259658813477
    8. '_arr' → logprob: -14.378259658813477
    9. '
' → logprob: -14.878259658813477
    10. ' g' → logprob: -15.128259658813477

Token 843: ' arrivals' (ID: 126339)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0013330980436876416
    2. ' arrivals' → logprob: -6.626333236694336
    3. 'arrival' → logprob: -12.626333236694336
    4. '   ' → logprob: -13.501333236694336
    5. ' arr' → logprob: -14.376333236694336
    6. '[arr' → logprob: -15.001333236694336
    7. '           ' → logprob: -15.501333236694336
    8. '
' → logprob: -15.501333236694336
    9. '	arr' → logprob: -15.626333236694336
    10. '$arr' → logprob: -15.751333236694336

Token 844: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.3557529857498594e-05
    2. '[g' → logprob: -11.25002384185791
    3. 'time' → logprob: -11.75002384185791
    4. 'g' → logprob: -13.12502384185791
    5. ' [' → logprob: -14.87502384185791
    6. '   ' → logprob: -15.62502384185791
    7. ' g' → logprob: -17.875022888183594
    8. '(time' → logprob: -18.125022888183594
    9. ',time' → logprob: -18.125022888183594
    10. '[t' → logprob: -18.500022888183594

Token 845: 'time' (ID: 4580)
  Prédit: 'time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.0445127372804563e-05
    2. '[' → logprob: -12.12501049041748
    3. 'g' → logprob: -12.75001049041748
    4. 'arr' → logprob: -14.37501049041748
    5. ']' → logprob: -14.50001049041748
    6. ' time' → logprob: -14.62501049041748
    7. '][' → logprob: -16.250009536743164
    8. '               ' → logprob: -16.375009536743164
    9. '   ' → logprob: -16.500009536743164
    10. '(time' → logprob: -16.750009536743164

Token 846: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.02113722264766693
    2. ']:' → logprob: -3.896137237548828
    3. ']:
' → logprob: -8.271137237548828
    4. ':
' → logprob: -8.896137237548828
    5. ':' → logprob: -9.521137237548828
    6. ']' → logprob: -9.646137237548828
    7. '):
' → logprob: -10.896137237548828
    8. ']:

' → logprob: -11.271137237548828
    9. '():
' → logprob: -11.771137237548828
    10. ' ]' → logprob: -11.896137237548828

Token 847: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00010783452307805419
    2. ' wait' → logprob: -10.000107765197754
    3. '               ' → logprob: -11.125107765197754
    4. 'self' → logprob: -11.250107765197754
    5. '           ' → logprob: -12.000107765197754
    6. ' self' → logprob: -12.000107765197754
    7. '                       ' → logprob: -12.125107765197754
    8. '   ' → logprob: -12.625107765197754
    9. '                  ' → logprob: -12.625107765197754
    10. 'wait' → logprob: -13.250107765197754

Token 848: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2437840700149536
    2. 'wait' → logprob: -1.3687840700149536
    3. '                       ' → logprob: -1.4937840700149536
    4. ' wait' → logprob: -2.243783950805664
    5. 'g' → logprob: -2.743783950805664
    6. ' self' → logprob: -3.118783950805664
    7. 'if' → logprob: -5.118783950805664
    8. '   ' → logprob: -5.618783950805664
    9. ' g' → logprob: -5.868783950805664
    10. '                   ' → logprob: -6.118783950805664

Token 849: ' Decide' (ID: 145367)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.7082886695861816
    2. 'wait' → logprob: -1.5832886695861816
    3. 'self' → logprob: -2.3332886695861816
    4. ' wait' → logprob: -2.5832886695861816
    5. 'if' → logprob: -2.8332886695861816
    6. ' if' → logprob: -3.5832886695861816
    7. ' g' → logprob: -4.083288669586182
    8. ' self' → logprob: -4.458288669586182
    9. '                   ' → logprob: -4.958288669586182
    10. '                       ' → logprob: -5.208288669586182

Token 850: ' to' (ID: 316)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5414511561393738
    2. ' if' → logprob: -1.0414512157440186
    3. ' whether' → logprob: -3.6664512157440186
    4. 'whether' → logprob: -3.7914512157440186
    5. '                   ' → logprob: -4.1664509773254395
    6. '       ' → logprob: -7.7914509773254395
    7. '   ' → logprob: -8.416451454162598
    8. 'g' → logprob: -8.666451454162598
    9. ' to' → logprob: -8.916451454162598
    10. 'wait' → logprob: -8.916451454162598

Token 851: ' seat' (ID: 15512)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.5913136601448059
    2. 'if' → logprob: -1.0913136005401611
    3. 'self' → logprob: -2.216313600540161
    4. ' wait' → logprob: -7.84131383895874
    5. '
' → logprob: -8.341313362121582
    6. ' if' → logprob: -8.591313362121582
    7. 'append' → logprob: -9.091313362121582
    8. 'queue' → logprob: -9.341313362121582
    9. 'import' → logprob: -9.341313362121582
    10. '   ' → logprob: -9.466313362121582

Token 852: ' or' (ID: 503)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.47686079144477844
    2. 'if' → logprob: -1.601860761642456
    3. ' or' → logprob: -2.476860761642456
    4. 'pos' → logprob: -2.976860761642456
    5. 'im' → logprob: -3.726860761642456
    6. 'g' → logprob: -5.226861000061035
    7. ' if' → logprob: -5.601861000061035
    8. 'idx' → logprob: -5.851861000061035
    9. 'now' → logprob: -6.601861000061035
    10. 'position' → logprob: -6.851861000061035

Token 853: ' queue' (ID: 13661)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.0397026427090168
    2. ' wait' → logprob: -4.164702415466309
    3. 'enqueue' → logprob: -4.289702415466309
    4. 'append' → logprob: -4.789702415466309
    5. 'queue' → logprob: -7.664702415466309
    6. '   ' → logprob: -8.414702415466309
    7. 'add' → logprob: -8.414702415466309
    8. 'not' → logprob: -9.039702415466309
    9. ' enqueue' → logprob: -9.164702415466309
    10. 'try' → logprob: -10.039702415466309

Token 854: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07392517477273941
    2. ' if' → logprob: -3.323925256729126
    3. 'if' → logprob: -4.323925018310547
    4. 'pos' → logprob: -4.823925018310547
    5. ' pos' → logprob: -6.073925018310547
    6. '               ' → logprob: -6.198925018310547
    7. '           ' → logprob: -6.198925018310547
    8. '```' → logprob: -6.573925018310547
    9. '
' → logprob: -6.948925018310547
    10. '       ' → logprob: -7.198925018310547

Token 855: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0015794939827173948
    2. ' if' → logprob: -7.501579284667969
    3. '               ' → logprob: -8.126579284667969
    4. 'if' → logprob: -8.376579284667969
    5. '                       ' → logprob: -9.251579284667969
    6. ',' → logprob: -9.501579284667969
    7. '
' → logprob: -9.501579284667969
    8. ' for' → logprob: -10.376579284667969
    9. 'g' → logprob: -10.501579284667969
    10. '           ' → logprob: -10.626579284667969

Token 856: ' if' (ID: 538)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.07162236422300339
    2. 'start' → logprob: -2.821622371673584
    3. ' pos' → logprob: -4.821622371673584
    4. ' start' → logprob: -7.321622371673584
    5. '                   ' → logprob: -7.821622371673584
    6. 'seat' → logprob: -8.321621894836426
    7. 'idx' → logprob: -8.821621894836426
    8. 'position' → logprob: -10.571621894836426
    9. ' seat' → logprob: -10.696621894836426
    10. '       ' → logprob: -11.696621894836426

Token 857: ' not' (ID: 625)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.6191627979278564
    2. '(se' → logprob: -0.8691627979278564
    3. ' seating' → logprob: -3.4941627979278564
    4. ' (' → logprob: -5.744162559509277
    5. 'self' → logprob: -5.994162559509277
    6. 'start' → logprob: -6.369162559509277
    7. '(s' → logprob: -7.119162559509277
    8. '(start' → logprob: -7.244162559509277
    9. '(self' → logprob: -7.244162559509277
    10. '   ' → logprob: -8.119162559509277

Token 858: ' wait' (ID: 5238)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.9669134616851807
    2. '(wait' → logprob: -1.0919134616851807
    3. 'wait' → logprob: -1.5919134616851807
    4. '(se' → logprob: -2.7169134616851807
    5. 'self' → logprob: -5.341913223266602
    6. 'waiting' → logprob: -6.466913223266602
    7. '(' → logprob: -6.841913223266602
    8. '(self' → logprob: -7.216913223266602
    9. 'any' → logprob: -7.341913223266602
    10. 'g' → logprob: -7.341913223266602

Token 859: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -1.3902033970225602e-05
    2. '_' → logprob: -11.375014305114746
    3. 'ing' → logprob: -14.000014305114746
    4. 'queue' → logprob: -15.500014305114746
    5. '_QUEUE' → logprob: -15.625014305114746
    6. ' _' → logprob: -15.625014305114746
    7. '       ' → logprob: -15.875014305114746
    8. '           ' → logprob: -16.12501335144043
    9. '_list' → logprob: -16.25001335144043
    10. 'Queue' → logprob: -16.25001335144043

Token 860: ':' (ID: 25)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.11870381981134415
    2. 'or' → logprob: -2.243703842163086
    3. ' and' → logprob: -5.743703842163086
    4. 'and' → logprob: -6.118703842163086
    5. '                   ' → logprob: -8.368703842163086
    6. ':' → logprob: -8.993703842163086
    7. '               ' → logprob: -10.493703842163086
    8. '                       ' → logprob: -10.743703842163086
    9. '           ' → logprob: -10.868703842163086
    10. '   ' → logprob: -11.493703842163086

Token 861: ' ' (ID: 220)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.11021731048822403
    2. ' start' → logprob: -2.860217332839966
    3. 'start' → logprob: -3.235217332839966
    4. 'pos' → logprob: -6.110217094421387
    5. ' pos' → logprob: -7.110217094421387
    6. '                        
' → logprob: -7.110217094421387
    7. ' position' → logprob: -7.610217094421387
    8. '                   ' → logprob: -7.610217094421387
    9. ' seat' → logprob: -7.735217094421387
    10. 'position' → logprob: -7.860217094421387

Token 862: ' #' (ID: 1069)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.6592594385147095
    2. 'pos' → logprob: -0.7842594385147095
    3. '                       ' → logprob: -4.53425931930542
    4. ' start' → logprob: -5.40925931930542
    5. 'position' → logprob: -5.53425931930542
    6. ' pos' → logprob: -5.90925931930542
    7. '                   ' → logprob: -6.40925931930542
    8. 'seat' → logprob: -7.28425931930542
    9. 'placement' → logprob: -7.65925931930542
    10. 'index' → logprob: -7.90925931930542

Token 863: ' no' (ID: 860)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5819035768508911
    2. 'pos' → logprob: -1.3319035768508911
    3. ' start' → logprob: -1.9569035768508911
    4. ' pos' → logprob: -3.9569034576416016
    5. '                       ' → logprob: -5.956903457641602
    6. ' seat' → logprob: -6.081903457641602
    7. '                   ' → logprob: -6.081903457641602
    8. 'seat' → logprob: -6.206903457641602
    9. '
' → logprob: -6.331903457641602
    10. 'position' → logprob: -6.706903457641602

Token 864: ' queue' (ID: 13661)
  Prédit: ' wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wait' → logprob: -0.273739218711853
    2. 'wait' → logprob: -1.523739218711853
    3. 'se' → logprob: -5.148739337921143
    4. ' queue' → logprob: -5.398739337921143
    5. 'queue' → logprob: -5.773739337921143
    6. '(wait' → logprob: -6.648739337921143
    7. ' groups' → logprob: -6.898739337921143
    8. 'waiting' → logprob: -7.398739337921143
    9. 'groups' → logprob: -7.523739337921143
    10. '_wait' → logprob: -7.648739337921143

Token 865: ' yet' (ID: 5073)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8438364267349243
    2. ':
' → logprob: -1.4688364267349243
    3. ':' → logprob: -1.7188364267349243
    4. '                   ' → logprob: -2.8438363075256348
    5. '                       ' → logprob: -3.0938363075256348
    6. ' or' → logprob: -3.7188363075256348
    7. ',' → logprob: -4.718836307525635
    8. 'and' → logprob: -4.843836307525635
    9. '
' → logprob: -5.468836307525635
    10. '               ' → logprob: -5.593836307525635

Token 866: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.20639145374298096
    2. ' and' → logprob: -2.7063913345336914
    3. ',' → logprob: -3.2063913345336914
    4. '                   ' → logprob: -3.5813913345336914
    5. ':
' → logprob: -3.8313913345336914
    6. ':' → logprob: -4.206391334533691
    7. '
' → logprob: -5.206391334533691
    8. '                        
' → logprob: -5.331391334533691
    9. 'and' → logprob: -6.956391334533691
    10. ',
' → logprob: -7.331391334533691

Token 867: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.001545810722745955
    2. '                   ' → logprob: -7.7515459060668945
    3. ',' → logprob: -8.001545906066895
    4. ' and' → logprob: -8.876545906066895
    5. '                        
' → logprob: -9.001545906066895
    6. ':' → logprob: -9.501545906066895
    7. ' if' → logprob: -9.626545906066895
    8. '               ' → logprob: -9.751545906066895
    9. '
' → logprob: -9.876545906066895
    10. '       ' → logprob: -10.001545906066895

Token 868: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.039942529052495956
    2. 'start' → logprob: -3.539942502975464
    3. ' pos' → logprob: -4.789942741394043
    4. 'seat' → logprob: -6.914942741394043
    5. ' start' → logprob: -7.789942741394043
    6. 'position' → logprob: -8.914942741394043
    7. 'idx' → logprob: -9.164942741394043
    8. ' seat' → logprob: -10.039942741394043
    9. '                   ' → logprob: -10.164942741394043
    10. 'can' → logprob: -11.039942741394043

Token 869: ' Attempt' (ID: 92189)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.04615412652492523
    2. 'start' → logprob: -3.296154022216797
    3. 'seat' → logprob: -5.046154022216797
    4. ' pos' → logprob: -7.546154022216797
    5. 'idx' → logprob: -8.046154022216797
    6. 'position' → logprob: -8.296154022216797
    7. 'can' → logprob: -8.921154022216797
    8. 'spot' → logprob: -9.296154022216797
    9. 'se' → logprob: -9.671154022216797
    10. '                   ' → logprob: -10.046154022216797

Token 870: ' seating' (ID: 42332)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.19376824796199799
    2. 'to' → logprob: -1.8187682628631592
    3. 'pos' → logprob: -5.06876802444458
    4. '                       ' → logprob: -6.31876802444458
    5. 'start' → logprob: -6.31876802444458
    6. 'se' → logprob: -6.94376802444458
    7. 'position' → logprob: -7.44376802444458
    8. '                           ' → logprob: -7.94376802444458
    9. 'ing' → logprob: -8.068768501281738
    10. ' seating' → logprob: -8.068768501281738

Token 871: ' immediately' (ID: 10731)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.12586337327957153
    2. 'start' → logprob: -3.2508633136749268
    3. '                   ' → logprob: -3.6258633136749268
    4. '                       ' → logprob: -4.000863552093506
    5. 'position' → logprob: -4.750863552093506
    6. 'index' → logprob: -5.000863552093506
    7. ' pos' → logprob: -5.125863552093506
    8. ' =' → logprob: -5.875863552093506
    9. ' at' → logprob: -6.375863552093506
    10. ' start' → logprob: -6.500863552093506

Token 872: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.9700496792793274
    2. 'pos' → logprob: -0.9700496792793274
    3. 'start' → logprob: -2.0950496196746826
    4. '                   ' → logprob: -3.2200496196746826
    5. ' pos' → logprob: -3.5950496196746826
    6. ' start' → logprob: -3.8450496196746826
    7. 'position' → logprob: -5.095049858093262
    8. ',' → logprob: -5.220049858093262
    9. 'index' → logprob: -5.345049858093262
    10. '
' → logprob: -6.095049858093262

Token 873: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7636898756027222
    2. 'pos' → logprob: -1.3886898756027222
    3. '                   ' → logprob: -2.0136899948120117
    4. 'start' → logprob: -2.1386899948120117
    5. ' start' → logprob: -4.263689994812012
    6. ' pos' → logprob: -4.763689994812012
    7. 'position' → logprob: -5.513689994812012
    8. 'seat' → logprob: -5.888689994812012
    9. '               ' → logprob: -7.388689994812012
    10. 'index' → logprob: -7.638689994812012

Token 874: ' start' (ID: 1604)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.02526341937482357
    2. 'start' (adapté à ' start') → logprob: -4.02526330947876
    3. ' pos' → logprob: -5.15026330947876
    4. 'seat' → logprob: -7.15026330947876
    5. ' start' → logprob: -8.900263786315918
    6. 'idx' → logprob: -8.900263786315918
    7. 'position' → logprob: -9.275263786315918
    8. '                   ' → logprob: -10.400263786315918
    9. '                       ' → logprob: -10.525263786315918
    10. ' seat' → logprob: -10.900263786315918

Token 875: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00014215784904081374
    2. 'pos' → logprob: -9.250142097473145
    3. '=' → logprob: -10.625142097473145
    4. '_se' → logprob: -12.000142097473145
    5. ' =' → logprob: -12.000142097473145
    6. 'Pos' → logprob: -12.375142097473145
    7. '_idx' → logprob: -12.875142097473145
    8. '=_' → logprob: -14.125142097473145
    9. '_index' → logprob: -14.250142097473145
    10. '_position' → logprob: -15.000142097473145

Token 876: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038048259913921356
    2. ' =' → logprob: -3.288048267364502
    3. '=self' → logprob: -12.038047790527344
    4. '=s' → logprob: -15.413047790527344
    5. '<|end|>' → logprob: -16.288047790527344
    6. ')' → logprob: -16.663047790527344
    7. '=user' → logprob: -16.788047790527344
    8. ',' → logprob: -16.788047790527344
    9. '=session' → logprob: -17.038047790527344
    10. '=}' → logprob: -17.038047790527344

Token 877: ' seating' (ID: 42332)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.3614063858985901
    2. 'self' → logprob: -1.3614063262939453
    3. ' seating' → logprob: -3.4864063262939453
    4. ' self' → logprob: -4.111406326293945
    5. ' se' → logprob: -12.486406326293945
    6. ' Seating' → logprob: -13.861406326293945
    7. 'Se' → logprob: -13.986406326293945
    8. 'seat' → logprob: -14.361406326293945
    9. '	se' → logprob: -14.361406326293945
    10. '_se' → logprob: -14.861406326293945

Token 878: '.can' (ID: 46002)
  Prédit: '.can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.can' → logprob: -3.292907877039397e-06
    2. 'can' → logprob: -12.75000286102295
    3. '_can' → logprob: -14.75000286102295
    4. '	can' → logprob: -17.250003814697266
    5. '.' → logprob: -17.750003814697266
    6. '.Can' → logprob: -17.875003814697266
    7. '(can' → logprob: -18.125003814697266
    8. ' .' → logprob: -18.250003814697266
    9. ' can' → logprob: -18.375003814697266
    10. '_.' → logprob: -19.375003814697266

Token 879: '_se' (ID: 7123)
  Prédit: '_se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_se' → logprob: -0.00100422790274024
    2. 'seat' → logprob: -7.001004219055176
    3. 'se' → logprob: -10.001004219055176
    4. '_can' → logprob: -10.251004219055176
    5. 'can' → logprob: -12.251004219055176
    6. ' seat' → logprob: -12.876004219055176
    7. '_s' → logprob: -14.001004219055176
    8. 'Seat' → logprob: -14.251004219055176
    9. '_' → logprob: -14.376004219055176
    10. '```' → logprob: -14.501004219055176

Token 880: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0030018275137990713
    2. 'seat' → logprob: -5.878001689910889
    3. ' seat' → logprob: -9.503002166748047
    4. 'eat' → logprob: -10.378002166748047
    5. 'Seat' → logprob: -11.815502166748047
    6. '   ' → logprob: -12.065502166748047
    7. 'group' → logprob: -12.065502166748047
    8. '```' → logprob: -12.253002166748047
    9. 'ат' → logprob: -12.315502166748047
    10. 'a' → logprob: -12.378002166748047

Token 881: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.0005589892389252782
    2. '(group' → logprob: -7.625558853149414
    3. '(' → logprob: -9.625558853149414
    4. ' (' → logprob: -12.875558853149414
    5. '(
' → logprob: -13.750558853149414
    6. 'g' → logprob: -14.125558853149414
    7. 'group' → logprob: -15.375558853149414
    8. '(groups' → logprob: -16.250558853149414
    9. ' g' → logprob: -16.375558853149414
    10. '()' → logprob: -17.000558853149414

Token 882: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014414873905479908
    2. ')
' → logprob: -4.7644147872924805
    3. '(g' → logprob: -5.2644147872924805
    4. '(group' → logprob: -7.5144147872924805
    5. ',' → logprob: -10.76441478729248
    6. ')
' → logprob: -11.13941478729248
    7. 'g' → logprob: -11.63941478729248
    8. ' )' → logprob: -12.63941478729248
    9. ')

' → logprob: -12.63941478729248
    10. '   ' → logprob: -13.13941478729248

Token 883: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.005643278360366821
    2. ' if' → logprob: -6.380643367767334
    3. '                   ' → logprob: -6.505643367767334
    4. '                           ' → logprob: -6.880643367767334
    5. '<|end|>' → logprob: -8.005642890930176
    6. '           ' → logprob: -8.380642890930176
    7. '               ' → logprob: -8.380642890930176
    8. '                        
' → logprob: -8.630642890930176
    9. '                        ' → logprob: -9.130642890930176
    10. '
' → logprob: -9.755642890930176

Token 884: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20630493760108948
    2. 'if' (adapté à ' if') → logprob: -1.706304907798767
    3. '                       ' → logprob: -6.956305027008057
    4. '                           ' → logprob: -6.956305027008057
    5. '<|end|>' → logprob: -7.206305027008057
    6. '                               ' → logprob: -7.581305027008057
    7. ' ' → logprob: -7.831305027008057
    8. '                   ' → logprob: -7.956305027008057
    9. '           ' → logprob: -8.581304550170898
    10. ' 
' → logprob: -9.081304550170898

Token 885: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1602243334054947
    2. ' start' → logprob: -1.9102243185043335
    3. '	start' → logprob: -16.91022491455078
    4. '(start' → logprob: -17.16022491455078
    5. '[start' → logprob: -18.66022491455078
    6. ' ' → logprob: -18.78522491455078
    7. '                   ' → logprob: -19.28522491455078
    8. '_start' → logprob: -19.41022491455078
    9. '                       ' → logprob: -19.41022491455078
    10. '   ' → logprob: -19.53522491455078

Token 886: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -3.333223139634356e-05
    2. 'pos' → logprob: -10.375033378601074
    3. 'Pos' → logprob: -14.625033378601074
    4. '=' → logprob: -14.875033378601074
    5. '_token' → logprob: -15.125033378601074
    6. '_start' → logprob: -15.875033378601074
    7. '_' → logprob: -16.250032424926758
    8. 's' → logprob: -16.375032424926758
    9. '   ' → logprob: -16.625032424926758
    10. 'ing' → logprob: -16.750032424926758

Token 887: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.27329087257385254
    2. '!=' → logprob: -1.8982908725738525
    3. '!=-' → logprob: -3.3982908725738525
    4. '>=' → logprob: -3.5232908725738525
    5. ' is' → logprob: -4.398290634155273
    6. ' >=' → logprob: -5.273290634155273
    7. '<|end|>' → logprob: -5.648290634155273
    8. ')' → logprob: -6.273290634155273
    9. '==' → logprob: -6.898290634155273
    10. ' ==' → logprob: -7.023290634155273

Token 888: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002613358374219388
    2. ' -' → logprob: -8.250261306762695
    3. '-
' → logprob: -19.000261306762695
    4. ' ' → logprob: -19.750261306762695
    5. '−' → logprob: -21.375261306762695
    6. '   ' → logprob: -22.000261306762695
    7. '-n' → logprob: -22.125261306762695
    8. '-​' → logprob: -22.625261306762695
    9. '```' → logprob: -22.625261306762695
    10. '
' → logprob: -22.750261306762695

Token 889: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '-' → logprob: -16.250003814697266
    4. '```' → logprob: -16.312503814697266
    5. '   ' → logprob: -17.562503814697266
    6. ',' → logprob: -18.187503814697266
    7. ' -' → logprob: -18.187503814697266
    8. '2' → logprob: -18.312503814697266
    9. '  ' → logprob: -18.875003814697266
    10. 'None' → logprob: -18.937503814697266

Token 890: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3165881335735321
    2. ':' → logprob: -1.3165881633758545
    3. '                           ' → logprob: -5.816587924957275
    4. '           ' → logprob: -8.816588401794434
    5. '                       ' → logprob: -9.941588401794434
    6. '):
' → logprob: -9.941588401794434
    7. '               ' → logprob: -10.691588401794434
    8. '                   ' → logprob: -11.191588401794434
    9. ':

' → logprob: -11.191588401794434
    10. ':
' → logprob: -11.441588401794434

Token 891: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0015814013313502073
    2. 'self' → logprob: -7.876581192016602
    3. ' self' → logprob: -8.126581192016602
    4. '                               ' → logprob: -8.126581192016602
    5. '           ' → logprob: -8.251581192016602
    6. '                       ' → logprob: -9.376581192016602
    7. ' seating' → logprob: -9.501581192016602
    8. '   ' → logprob: -9.751581192016602
    9. '               ' → logprob: -10.001581192016602
    10. '                   ' → logprob: -10.751581192016602

Token 892: ' seating' (ID: 42332)
  Prédit: ' seating'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seating' → logprob: -0.570199191570282
    2. 'self' → logprob: -1.0701992511749268
    3. ' self' → logprob: -2.5701992511749268
    4. 'se' → logprob: -4.195199012756348
    5. '           ' → logprob: -10.945199012756348
    6. 'seat' → logprob: -11.695199012756348
    7. '                   ' → logprob: -11.695199012756348
    8. '               ' → logprob: -12.320199012756348
    9. ' Seating' → logprob: -12.445199012756348
    10. ' seat' → logprob: -12.820199012756348

Token 893: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -3.292907877039397e-06
    2. ' .' → logprob: -13.00000286102295
    3. '.' → logprob: -14.25000286102295
    4. '.s' → logprob: -16.375003814697266
    5. '_se' → logprob: -16.375003814697266
    6. '```' → logprob: -17.125003814697266
    7. 'seat' → logprob: -17.250003814697266
    8. '.Se' → logprob: -18.250003814697266
    9. '_.' → logprob: -18.500003814697266
    10. '   ' → logprob: -18.625003814697266

Token 894: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0016395928105339408
    2. 'seat' → logprob: -6.501639366149902
    3. 'eat' → logprob: -10.501639366149902
    4. ' seat' → logprob: -10.501639366149902
    5. 'group' → logprob: -11.876639366149902
    6. '```' → logprob: -12.001639366149902
    7. 'ат' → logprob: -12.064139366149902
    8. 't' → logprob: -12.064139366149902
    9. '_at' → logprob: -12.376639366149902
    10. ' at' → logprob: -12.439139366149902

Token 895: '_group' (ID: 15990)
  Prédit: '_group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -8.029847231227905e-05
    2. 'group' → logprob: -9.500080108642578
    3. 'Group' → logprob: -13.500080108642578
    4. '(group' → logprob: -13.750080108642578
    5. 'g' → logprob: -13.875080108642578
    6. 'roup' → logprob: -14.500080108642578
    7. '       ' → logprob: -15.250080108642578
    8. '           ' → logprob: -15.500080108642578
    9. '_' → logprob: -15.875080108642578
    10. '_g' → logprob: -16.125080108642578

Token 896: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -1.2664456789934775e-06
    2. '(group' → logprob: -13.750000953674316
    3. '(' → logprob: -16.625001907348633
    4. 'g' → logprob: -17.625001907348633
    5. '(
' → logprob: -18.625001907348633
    6. '(groups' → logprob: -20.750001907348633
    7. '[g' → logprob: -20.875001907348633
    8. '```' → logprob: -20.875001907348633
    9. ' (' → logprob: -21.000001907348633
    10. '@g' → logprob: -21.250001907348633

Token 897: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03010370023548603
    2. ',g' → logprob: -3.7801036834716797
    3. 'g' → logprob: -5.03010368347168
    4. ' ,' → logprob: -8.90510368347168
    5. ' g' → logprob: -9.03010368347168
    6. '(g' → logprob: -10.28010368347168
    7. ')' → logprob: -13.40510368347168
    8. 's' → logprob: -14.03010368347168
    9. '```' → logprob: -14.28010368347168
    10. '	g' → logprob: -14.65510368347168

Token 898: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00317783304490149
    2. ' start' → logprob: -5.753177642822266
    3. 'star' → logprob: -17.253177642822266
    4. ')' → logprob: -17.253177642822266
    5. '[start' → logprob: -17.628177642822266
    6. '	start' → logprob: -18.753177642822266
    7. ' ' → logprob: -18.753177642822266
    8. '(start' → logprob: -19.003177642822266
    9. '=start' → logprob: -19.128177642822266
    10. '_start' → logprob: -19.378177642822266

Token 899: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0004317420825827867
    2. 'pos' → logprob: -7.750431537628174
    3. 'start' → logprob: -14.750432014465332
    4. 'Pos' → logprob: -15.625432014465332
    5. 's' → logprob: -15.875432014465332
    6. '_token' → logprob: -16.125431060791016
    7. '	pos' → logprob: -16.875431060791016
    8. '_start' → logprob: -17.250431060791016
    9. '_position' → logprob: -17.375431060791016
    10. '_positions' → logprob: -17.625431060791016

Token 900: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039385363925248384
    2. ',time' → logprob: -8.000393867492676
    3. ',current' → logprob: -10.750393867492676
    4. ' ,' → logprob: -10.875393867492676
    5. '                           ' → logprob: -11.750393867492676
    6. '=' → logprob: -12.750393867492676
    7. ',g' → logprob: -13.125393867492676
    8. 'time' → logprob: -13.875393867492676
    9. 'g' → logprob: -14.250393867492676
    10. ')' → logprob: -14.750393867492676

Token 901: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0009115827269852161
    2. ' time' → logprob: -7.000911712646484
    3. '
' → logprob: -16.750911712646484
    4. '"time' → logprob: -18.125911712646484
    5. '	time' → logprob: -18.375911712646484
    6. '   ' → logprob: -18.375911712646484
    7. '                   ' → logprob: -18.500911712646484
    8. 'current' → logprob: -19.000911712646484
    9. '           ' → logprob: -19.250911712646484
    10. '               ' → logprob: -19.625911712646484

Token 902: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5801748037338257
    2. ')' → logprob: -0.8301748037338257
    3. '                           ' → logprob: -5.705174922943115
    4. '                       ' → logprob: -7.205174922943115
    5. ')

' → logprob: -9.955174446105957
    6. ')
' → logprob: -10.205174446105957
    7. '):
' → logprob: -10.580174446105957
    8. '                   ' → logprob: -11.455174446105957
    9. '           ' → logprob: -11.955174446105957
    10. ');' → logprob: -12.330174446105957

Token 903: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.31735679507255554
    2. '                       ' → logprob: -1.317356824874878
    3. '                   ' → logprob: -5.692356586456299
    4. '               ' → logprob: -8.442357063293457
    5. 'else' → logprob: -8.567357063293457
    6. '           ' → logprob: -8.817357063293457
    7. '   ' → logprob: -9.317357063293457
    8. '       ' → logprob: -10.692357063293457
    9. ' else' → logprob: -10.817357063293457
    10. '```' → logprob: -11.192357063293457

Token 904: ' occupied' (ID: 46186)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' (adapté à ' occupied') → logprob: -0.0006787192542105913
    2. '                           ' → logprob: -7.750678539276123
    3. 'self' → logprob: -9.750679016113281
    4. '   ' → logprob: -9.750679016113281
    5. 'if' → logprob: -9.875679016113281
    6. '                               ' → logprob: -10.750679016113281
    7. '                   ' → logprob: -11.125679016113281
    8. '                                   ' → logprob: -11.250679016113281
    9. 'occup' → logprob: -11.625679016113281
    10. '           ' → logprob: -12.000679016113281

Token 905: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -1.3856492842023727e-06
    2. 'Groups' → logprob: -14.250000953674316
    3. 'groups' → logprob: -14.375000953674316
    4. 'roups' → logprob: -16.625001907348633
    5. '
' → logprob: -17.500001907348633
    6. 's' → logprob: -17.500001907348633
    7. '```' → logprob: -17.625001907348633
    8. ')_' → logprob: -19.625001907348633
    9. '\' → logprob: -19.750001907348633
    10. '.append' → logprob: -19.875001907348633

Token 906: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.306760805164231e-05
    2. '.' → logprob: -11.25001335144043
    3. 'append' → logprob: -16.87501335144043
    4. '.add' → logprob: -18.50001335144043
    5. '.app' → logprob: -18.87501335144043
    6. ' .' → logprob: -20.25001335144043
    7. '.ap' → logprob: -20.50001335144043
    8. '.Append' → logprob: -21.50001335144043
    9. '.extend' → logprob: -22.37501335144043
    10. '.insert' → logprob: -22.50001335144043

Token 907: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.0005530327325686812
    2. 'g' → logprob: -7.500553131103516
    3. '(' → logprob: -17.750553131103516
    4. '(group' → logprob: -19.250553131103516
    5. '	g' → logprob: -19.375553131103516
    6. '[g' → logprob: -19.500553131103516
    7. '(
' → logprob: -20.375553131103516
    8. ' g' → logprob: -20.625553131103516
    9. 'group' → logprob: -21.500553131103516
    10. ' (' → logprob: -22.000553131103516

Token 908: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47438788414001465
    2. ')' → logprob: -0.9743878841400146
    3. '                           ' → logprob: -8.849388122558594
    4. '                       ' → logprob: -9.099388122558594
    5. ')
' → logprob: -10.974388122558594
    6. '                   ' → logprob: -11.099388122558594
    7. ')

' → logprob: -11.724388122558594
    8. '               ' → logprob: -12.349388122558594
    9. '           ' → logprob: -12.849388122558594
    10. ');' → logprob: -13.724388122558594

Token 909: '                           ' (ID: 1686)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.07642731815576553
    2. '                   ' → logprob: -3.0764272212982178
    3. '                           ' → logprob: -3.7014272212982178
    4. 'else' → logprob: -6.201427459716797
    5. '               ' → logprob: -7.951427459716797
    6. ' else' → logprob: -8.576427459716797
    7. '           ' → logprob: -9.451427459716797
    8. 'continue' → logprob: -9.951427459716797
    9. '       ' → logprob: -10.076427459716797
    10. '   ' → logprob: -11.576427459716797

Token 910: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.007558356039226055
    2. 'se' → logprob: -5.757558345794678
    3. '                           ' → logprob: -5.757558345794678
    4. ' if' → logprob: -7.757558345794678
    5. '                   ' → logprob: -8.257558822631836
    6. '           ' → logprob: -8.507558822631836
    7. '               ' → logprob: -9.257558822631836
    8. 'continue' → logprob: -9.757558822631836
    9. '                               ' → logprob: -10.257558822631836
    10. '                       ' → logprob: -10.382558822631836

Token 911: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -2.0100624169572257e-05
    2. ' g' → logprob: -10.875020027160645
    3. '   ' → logprob: -14.250020027160645
    4. '	g' → logprob: -15.750020027160645
    5. 'group' → logprob: -16.00002098083496
    6. '       ' → logprob: -16.87502098083496
    7. '    ' → logprob: -16.87502098083496
    8. '
' → logprob: -18.12502098083496
    9. '           ' → logprob: -18.25002098083496
    10. '(g' → logprob: -18.37502098083496

Token 912: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.001740031992085278
    2. 'index' → logprob: -6.376739978790283
    3. '.' → logprob: -10.626740455627441
    4. '=index' → logprob: -12.626740455627441
    5. '==' → logprob: -12.876740455627441
    6. '.id' → logprob: -13.126740455627441
    7. ' .' → logprob: -13.376740455627441
    8. '#index' → logprob: -14.126740455627441
    9. ' index' → logprob: -14.376740455627441
    10. '@index' → logprob: -14.501740455627441

Token 913: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.062250327318906784
    2. ' ==' → logprob: -2.8122503757476807
    3. '<=' → logprob: -8.812250137329102
    4. '>=' → logprob: -9.187250137329102
    5. ' <=' → logprob: -11.812250137329102
    6. '()==' → logprob: -11.812250137329102
    7. ' >=' → logprob: -11.937250137329102
    8. '==
' → logprob: -12.312250137329102
    9. ')==' → logprob: -13.312250137329102
    10. ']==' → logprob: -13.687250137329102

Token 914: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -2.935296834039036e-06
    2. ' target' → logprob: -12.75000286102295
    3. '(target' → logprob: -20.875003814697266
    4. '	target' → logprob: -22.125003814697266
    5. '[target' → logprob: -22.750003814697266
    6. '   ' → logprob: -23.750003814697266
    7. '_target' → logprob: -24.750003814697266
    8. ',target' → logprob: -24.875003814697266
    9. '           ' → logprob: -25.125003814697266
    10. '.target' → logprob: -25.375003814697266

Token 915: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0003160393098369241
    2. '_target' → logprob: -8.25031566619873
    3. ')' → logprob: -11.00031566619873
    4. ')_' → logprob: -11.50031566619873
    5. '_' → logprob: -11.62531566619873
    6. '_group' → logprob: -12.12531566619873
    7. ']_' → logprob: -12.62531566619873
    8. 'Index' → logprob: -12.87531566619873
    9. '_idx' → logprob: -13.75031566619873
    10. '}_' → logprob: -13.75031566619873

Token 916: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3998764157295227
    2. ':
' → logprob: -1.149876356124878
    3. '                               ' → logprob: -4.399876594543457
    4. '                           ' → logprob: -7.899876594543457
    5. ' and' → logprob: -8.899876594543457
    6. ':return' → logprob: -10.149876594543457
    7. ':

' → logprob: -10.899876594543457
    8. 'and' → logprob: -11.399876594543457
    9. ':
' → logprob: -11.524876594543457
    10. '                                   ' → logprob: -11.524876594543457

Token 917: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0030542423482984304
    2. 'se' → logprob: -6.253054141998291
    3. '   ' → logprob: -8.12805461883545
    4. '               ' → logprob: -8.37805461883545
    5. '                                   ' → logprob: -8.37805461883545
    6. '                           ' → logprob: -9.00305461883545
    7. '       ' → logprob: -9.75305461883545
    8. 'return' → logprob: -9.87805461883545
    9. '                       ' → logprob: -10.25305461883545
    10. ' ' → logprob: -10.75305461883545

Token 918: ' seated' (ID: 77168)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.02299223653972149
    2. 'return' → logprob: -3.8979921340942383
    3. 'break' → logprob: -6.647992134094238
    4. '                               ' → logprob: -7.897992134094238
    5. ' seated' → logprob: -7.897992134094238
    6. 'seat' → logprob: -9.022992134094238
    7. '                           ' → logprob: -9.272992134094238
    8. '                                   ' → logprob: -9.647992134094238
    9. ' return' → logprob: -9.772992134094238
    10. '                   ' → logprob: -10.272992134094238

Token 919: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.004080062732100487
    2. '_groups' → logprob: -5.754080295562744
    3. 'target' → logprob: -7.629080295562744
    4. '_' → logprob: -7.879080295562744
    5. '_targets' → logprob: -11.629079818725586
    6. 'groups' → logprob: -11.754079818725586
    7. 'Target' → logprob: -11.879079818725586
    8. '_start' → logprob: -12.879079818725586
    9. '[target' → logprob: -13.004079818725586
    10. '_group' → logprob: -13.504079818725586

Token 920: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.090760431718081e-05
    2. '=True' → logprob: -10.000090599060059
    3. ' =' → logprob: -10.000090599060059
    4. '=
' → logprob: -16.750091552734375
    5. '=

' → logprob: -19.625091552734375
    6. '_=' → logprob: -19.875091552734375
    7. '.=' → logprob: -20.250091552734375
    8. '=}' → logprob: -20.625091552734375
    9. '=False' → logprob: -21.125091552734375
    10. ')=' → logprob: -21.625091552734375

Token 921: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0001234428636962548
    2. ' True' → logprob: -9.000123023986816
    3. '(True' → logprob: -18.375123977661133
    4. '=True' → logprob: -20.875123977661133
    5. '   ' → logprob: -21.125123977661133
    6. '1' → logprob: -21.125123977661133
    7. 'true' → logprob: -21.250123977661133
    8. 'Tr' → logprob: -21.375123977661133
    9. 'False' → logprob: -23.875123977661133
    10. ' ' → logprob: -24.250123977661133

Token 922: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3430725336074829
    2. '                       ' → logprob: -1.718072533607483
    3. '                           ' → logprob: -2.4680724143981934
    4. '                               ' → logprob: -4.218072414398193
    5. '               ' → logprob: -5.093072414398193
    6. '           ' → logprob: -6.218072414398193
    7. 'return' → logprob: -6.468072414398193
    8. '
' → logprob: -6.718072414398193
    9. '       ' → logprob: -8.843072891235352
    10. '                                   ' → logprob: -8.968072891235352

Token 923: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.105521321296692
    2. '
' → logprob: -1.855521321296692
    3. '                       ' → logprob: -2.1055212020874023
    4. '           ' → logprob: -2.2305212020874023
    5. '               ' → logprob: -2.2305212020874023
    6. '                           ' → logprob: -2.2305212020874023
    7. 'return' → logprob: -3.8555212020874023
    8. '                               ' → logprob: -4.480521202087402
    9. '<|end|>' → logprob: -4.980521202087402
    10. '       ' → logprob: -5.480521202087402

Token 924: ' else' (ID: 1203)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.24048207700252533
    2. 'else' (adapté à ' else') → logprob: -1.6154820919036865
    3. ' else' → logprob: -4.490481853485107
    4. '                       ' → logprob: -5.990481853485107
    5. '               ' → logprob: -7.240481853485107
    6. '           ' → logprob: -8.615482330322266
    7. '
' → logprob: -9.115482330322266
    8. '				' → logprob: -9.865482330322266
    9. '       ' → logprob: -10.115482330322266
    10. '                           ' → logprob: -10.490482330322266

Token 925: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8147081732749939
    2. '                           ' → logprob: -0.8147081732749939
    3. ':' → logprob: -2.9397082328796387
    4. '                       ' → logprob: -3.1897082328796387
    5. '                   ' → logprob: -4.314708232879639
    6. ' wait' → logprob: -6.189708232879639
    7. '               ' → logprob: -6.314708232879639
    8. '           ' → logprob: -6.564708232879639
    9. '   ' → logprob: -7.439708232879639
    10. 'wait' → logprob: -7.439708232879639

Token 926: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.006104524713009596
    2. '                       ' → logprob: -5.881104469299316
    3. 'wait' → logprob: -6.756104469299316
    4. '   ' → logprob: -7.131104469299316
    5. '                   ' → logprob: -7.631104469299316
    6. 'self' → logprob: -8.256104469299316
    7. '           ' → logprob: -8.381104469299316
    8. '               ' → logprob: -9.006104469299316
    9. ' wait' → logprob: -9.131104469299316
    10. '                               ' → logprob: -9.381104469299316

Token 927: ' #' (ID: 1069)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.16494973003864288
    2. ' wait' → logprob: -1.9149497747421265
    3. 'self' → logprob: -5.539949893951416
    4. ' self' → logprob: -8.164949417114258
    5. '   ' → logprob: -8.789949417114258
    6. '                           ' → logprob: -8.789949417114258
    7. '                   ' → logprob: -9.539949417114258
    8. '                               ' → logprob: -10.039949417114258
    9. '               ' → logprob: -10.414949417114258
    10. '                       ' → logprob: -11.164949417114258

Token 928: ' Queue' (ID: 35581)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.1611025333404541
    2. ' wait' → logprob: -1.911102533340454
    3. 'self' → logprob: -7.161102294921875
    4. ' self' → logprob: -10.536102294921875
    5. '   ' → logprob: -10.786102294921875
    6. '                           ' → logprob: -10.911102294921875
    7. '                   ' → logprob: -11.411102294921875
    8. '                               ' → logprob: -11.661102294921875
    9. ' ' → logprob: -12.661102294921875
    10. '               ' → logprob: -12.786102294921875

Token 929: ' because' (ID: 2236)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.93710636976175e-05
    2. '_queue' → logprob: -9.875099182128906
    3. 'append' → logprob: -11.125099182128906
    4. '.insert' → logprob: -11.625099182128906
    5. '                   ' → logprob: -11.750099182128906
    6. ' .' → logprob: -12.125099182128906
    7. '.' → logprob: -12.875099182128906
    8. '.extend' → logprob: -13.000099182128906
    9. '.enqueue' → logprob: -13.250099182128906
    10. '.wait' → logprob: -13.875099182128906

Token 930: ' no' (ID: 860)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.4916141927242279
    2. 'True' → logprob: -1.4916142225265503
    3. ' True' → logprob: -2.4916141033172607
    4. ' wait' → logprob: -2.7416141033172607
    5. 'g' → logprob: -4.61661434173584
    6. 'len' → logprob: -5.74161434173584
    7. 'not' → logprob: -6.36661434173584
    8. ' not' → logprob: -7.36661434173584
    9. ' g' → logprob: -7.74161434173584
    10. ' len' → logprob: -10.24161434173584

Token 931: ' seat' (ID: 15512)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.9300763607025146
    2. 'space' → logprob: -1.3050763607025146
    3. ' seating' → logprob: -2.3050763607025146
    4. ' seats' → logprob: -2.4300763607025146
    5. ' space' → logprob: -2.9300763607025146
    6. 'seat' → logprob: -2.9300763607025146
    7. ' seat' → logprob: -4.055076599121094
    8. 'available' → logprob: -4.555076599121094
    9. ' available' → logprob: -5.555076599121094
    10. ' free' → logprob: -5.680076599121094

Token 932: '
' (ID: 198)
  Prédit: '_queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_queue' → logprob: -0.1663195788860321
    2. '                           ' → logprob: -2.5413196086883545
    3. 'wait' → logprob: -4.166319370269775
    4. 'available' → logprob: -4.416319370269775
    5. '                       ' → logprob: -4.791319370269775
    6. ' wait' → logprob: -4.916319370269775
    7. '                   ' → logprob: -5.041319370269775
    8. 'queue' → logprob: -5.291319370269775
    9. '           ' → logprob: -5.666319370269775
    10. ' available' → logprob: -6.041319370269775

Token 933: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.018267935141921043
    2. ' wait' → logprob: -4.39326810836792
    3. 'wait' → logprob: -5.89326810836792
    4. '           ' → logprob: -6.89326810836792
    5. '                       ' → logprob: -7.39326810836792
    6. '                               ' → logprob: -7.89326810836792
    7. '                   ' → logprob: -7.89326810836792
    8. '               ' → logprob: -8.268267631530762
    9. 'self' → logprob: -9.143267631530762
    10. '```' → logprob: -9.518267631530762

Token 934: ' wait' (ID: 5238)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' (adapté à ' wait') → logprob: -0.45924854278564453
    2. ' wait' → logprob: -1.4592485427856445
    3. 'self' → logprob: -2.0842485427856445
    4. ' self' → logprob: -4.5842485427856445
    5. '                           ' → logprob: -7.0842485427856445
    6. '                   ' → logprob: -8.959248542785645
    7. '                               ' → logprob: -9.209248542785645
    8. '   ' → logprob: -9.834248542785645
    9. '               ' → logprob: -10.584248542785645
    10. '                       ' → logprob: -10.709248542785645

Token 935: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -1.9361264946837764e-07
    2. '_QUEUE' → logprob: -16.125
    3. 'queue' → logprob: -17.875
    4. 'Queue' → logprob: -18.0
    5. ' _' → logprob: -18.25
    6. '           ' → logprob: -18.5
    7. '```' → logprob: -18.5
    8. '               ' → logprob: -18.625
    9. '_' → logprob: -18.75
    10. '                   ' → logprob: -19.375

Token 936: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.668304245569743e-05
    2. '.' → logprob: -10.000046730041504
    3. 'append' → logprob: -14.250046730041504
    4. ' .' → logprob: -15.375046730041504
    5. '.app' → logprob: -15.750046730041504
    6. '.ap' → logprob: -16.375045776367188
    7. '.extend' → logprob: -16.500045776367188
    8. '.insert' → logprob: -18.625045776367188
    9. '=' → logprob: -19.000045776367188
    10. '.
' → logprob: -19.125045776367188

Token 937: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.008615988306701183
    2. 'g' → logprob: -4.758615970611572
    3. ' g' → logprob: -13.75861644744873
    4. '(' → logprob: -15.13361644744873
    5. ' (' → logprob: -16.758615493774414
    6. '(
' → logprob: -16.758615493774414
    7. '	g' → logprob: -16.758615493774414
    8. '[g' → logprob: -17.133615493774414
    9. '((' → logprob: -19.258615493774414
    10. '(group' → logprob: -19.508615493774414

Token 938: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004243181552737951
    2. ')
' → logprob: -5.50424337387085
    3. '                   ' → logprob: -9.004242897033691
    4. '                       ' → logprob: -11.004242897033691
    5. '                           ' → logprob: -12.004242897033691
    6. ' )' → logprob: -12.129242897033691
    7. ')

' → logprob: -12.754242897033691
    8. '           ' → logprob: -13.379242897033691
    9. '               ' → logprob: -13.379242897033691
    10. ')
' → logprob: -13.379242897033691

Token 939: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.017879724502563477
    2. '               ' → logprob: -4.392879486083984
    3. '           ' → logprob: -5.642879486083984
    4. '
' → logprob: -7.892879486083984
    5. '```' → logprob: -7.892879486083984
    6. 'else' → logprob: -8.142879486083984
    7. '                       ' → logprob: -8.267879486083984
    8. '       ' → logprob: -8.517879486083984
    9. '<|end|>' → logprob: -9.142879486083984
    10. 'elif' → logprob: -9.392879486083984

Token 940: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.15778303146362305
    2. '                   ' → logprob: -2.032783031463623
    3. ' else' → logprob: -4.657783031463623
    4. '               ' → logprob: -5.282783031463623
    5. 'elif' → logprob: -8.532783508300781
    6. '           ' → logprob: -8.907783508300781
    7. '       ' → logprob: -10.282783508300781
    8. '   ' → logprob: -10.282783508300781
    9. '                       ' → logprob: -11.907783508300781
    10. '
' → logprob: -11.907783508300781

Token 941: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7505853176116943
    2. ':
' → logprob: -1.2505853176116943
    3. ':' → logprob: -1.6255853176116943
    4. '                   ' → logprob: -3.1255853176116943
    5. '               ' → logprob: -7.750585556030273
    6. '                           ' → logprob: -9.625585556030273
    7. 'for' → logprob: -10.375585556030273
    8. '{
' → logprob: -10.500585556030273
    9. '                      ' → logprob: -10.500585556030273
    10. ':
' → logprob: -10.625585556030273

Token 942: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.044950034469366074
    2. '                   ' → logprob: -3.669950008392334
    3. 'wait' → logprob: -4.544950008392334
    4. '               ' → logprob: -5.919950008392334
    5. '   ' → logprob: -6.294950008392334
    6. ' wait' → logprob: -6.419950008392334
    7. '       ' → logprob: -7.169950008392334
    8. 'for' → logprob: -8.044950485229492
    9. '           ' → logprob: -8.669950485229492
    10. ' for' → logprob: -8.794950485229492

Token 943: ' #' (ID: 1069)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.846869170665741
    2. ' wait' → logprob: -1.0968692302703857
    3. '                       ' → logprob: -1.7218692302703857
    4. '   ' → logprob: -3.4718692302703857
    5. '                   ' → logprob: -3.9718692302703857
    6. '               ' → logprob: -5.346868991851807
    7. '                           ' → logprob: -5.971868991851807
    8. '           ' → logprob: -7.971868991851807
    9. '	wait' → logprob: -8.346869468688965
    10. '       ' → logprob: -8.596869468688965

Token 944: ' Queue' (ID: 35581)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.03823564574122429
    2. ' wait' → logprob: -3.288235664367676
    3. '                   ' → logprob: -9.288235664367676
    4. '                       ' → logprob: -10.288235664367676
    5. '   ' → logprob: -10.913235664367676
    6. '               ' → logprob: -11.163235664367676
    7. '                           ' → logprob: -11.788235664367676
    8. '#' → logprob: -11.788235664367676
    9. '           ' → logprob: -12.163235664367676
    10. '	wait' → logprob: -12.163235664367676

Token 945: ' always' (ID: 3324)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.32188883423805237
    2. '.append' → logprob: -1.69688880443573
    3. ' wait' → logprob: -2.6968889236450195
    4. '(wait' → logprob: -4.5718889236450195
    5. '.wait' → logprob: -5.3218889236450195
    6. 'append' → logprob: -5.5718889236450195
    7. '                   ' → logprob: -5.6968889236450195
    8. '                           ' → logprob: -7.0718889236450195
    9. '                       ' → logprob: -7.6968889236450195
    10. '               ' → logprob: -8.07188892364502

Token 946: ' because' (ID: 2236)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.43155914545059204
    2. ' wait' → logprob: -1.1815590858459473
    3. '                           ' → logprob: -3.5565590858459473
    4. '                       ' → logprob: -4.931559085845947
    5. '(wait' → logprob: -5.181559085845947
    6. '                   ' → logprob: -7.431559085845947
    7. '                               ' → logprob: -8.056559562683105
    8. '.wait' → logprob: -8.056559562683105
    9. '```' → logprob: -8.056559562683105
    10. '.append' → logprob: -8.556559562683105

Token 947: ' a' (ID: 261)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.4928232729434967
    2. 'True' → logprob: -1.1178232431411743
    3. ' wait' → logprob: -3.742823362350464
    4. 'wait' → logprob: -4.117823123931885
    5. ' there' → logprob: -4.742823123931885
    6. 'there' → logprob: -5.867823123931885
    7. ' no' → logprob: -5.992823123931885
    8. ' seats' → logprob: -6.367823123931885
    9. 'len' → logprob: -6.992823123931885
    10. 'g' → logprob: -7.242823123931885

Token 948: ' queue' (ID: 13661)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.6696167588233948
    2. ' wait' → logprob: -1.91961669921875
    3. 'queue' → logprob: -2.54461669921875
    4. ' queue' → logprob: -2.54461669921875
    5. 'ny' → logprob: -2.91961669921875
    6. ' group' → logprob: -3.54461669921875
    7. 'pp' → logprob: -4.04461669921875
    8. 'll' → logprob: -4.16961669921875
    9. 'n' → logprob: -4.29461669921875
    10. 't' → logprob: -4.41961669921875

Token 949: ' exists' (ID: 13031)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.11099215596914291
    2. '                           ' → logprob: -2.860992193222046
    3. '                       ' → logprob: -3.360992193222046
    4. '.' → logprob: -4.735991954803467
    5. ' is' → logprob: -7.110991954803467
    6. '                               ' → logprob: -7.735991954803467
    7. '   ' → logprob: -7.985991954803467
    8. '                   ' → logprob: -8.110992431640625
    9. 'append' → logprob: -8.235992431640625
    10. ' .' → logprob: -8.360992431640625

Token 950: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3010309338569641
    2. '                           ' → logprob: -1.4260308742523193
    3. '
' → logprob: -4.301031112670898
    4. '                   ' → logprob: -6.801031112670898
    5. '                        
' → logprob: -7.301031112670898
    6. '               ' → logprob: -7.426031112670898
    7. '           ' → logprob: -7.426031112670898
    8. '<|end|>' → logprob: -7.926031112670898
    9. '   ' → logprob: -8.051031112670898
    10. '                        ' → logprob: -8.176031112670898

Token 951: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.057769034057855606
    2. '                           ' → logprob: -2.9327690601348877
    3. '                   ' → logprob: -6.057768821716309
    4. '               ' → logprob: -8.557768821716309
    5. '           ' → logprob: -8.807768821716309
    6. '```' → logprob: -9.557768821716309
    7. '   ' → logprob: -10.182768821716309
    8. '                        ' → logprob: -10.682768821716309
    9. '                               ' → logprob: -10.932768821716309
    10. '       ' → logprob: -11.432768821716309

Token 952: ' wait' (ID: 5238)
  Prédit: ' wait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wait' → logprob: -0.2015010565519333
    2. 'wait' (adapté à ' wait') → logprob: -1.7015010118484497
    3. '                           ' → logprob: -9.95150089263916
    4. '   ' → logprob: -11.45150089263916
    5. '                               ' → logprob: -11.70150089263916
    6. '	wait' → logprob: -11.95150089263916
    7. '                       ' → logprob: -12.32650089263916
    8. ' ' → logprob: -12.82650089263916
    9. '           ' → logprob: -13.45150089263916
    10. '                   ' → logprob: -13.57650089263916

Token 953: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: 0.0
    2. 'queue' → logprob: -18.5
    3. '       ' → logprob: -19.25
    4. '_QUEUE' → logprob: -20.75
    5. 'Queue' → logprob: -20.875
    6. '_group' → logprob: -21.75
    7. '           ' → logprob: -21.75
    8. '   ' → logprob: -22.5
    9. '_wait' → logprob: -22.625
    10. '_' → logprob: -22.875

Token 954: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.3306015716807451e-05
    2. '.' → logprob: -11.25001335144043
    3. ' .' → logprob: -16.00001335144043
    4. '.extend' → logprob: -17.12501335144043
    5. 'append' → logprob: -17.62501335144043
    6. '           ' → logprob: -18.12501335144043
    7. '.app' → logprob: -18.62501335144043
    8. '.add' → logprob: -19.37501335144043
    9. '                       ' → logprob: -20.00001335144043
    10. '.push' → logprob: -20.12501335144043

Token 955: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -12.75000286102295
    3. ' (' → logprob: -18.375003814697266
    4. 'g' → logprob: -19.125003814697266
    5. '(group' → logprob: -19.250003814697266
    6. '(
' → logprob: -21.000003814697266
    7. '((' → logprob: -22.625003814697266
    8. ' g' → logprob: -23.250003814697266
    9. '(G' → logprob: -23.375003814697266
    10. '[g' → logprob: -23.625003814697266

Token 956: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018923594325315207
    2. ')
' → logprob: -9.125188827514648
    3. ' )' → logprob: -10.375188827514648
    4. '                   ' → logprob: -11.250188827514648
    5. '<|end|>' → logprob: -11.750188827514648
    6. ')

' → logprob: -12.125188827514648
    7. '[' → logprob: -12.250188827514648
    8. '               ' → logprob: -12.875188827514648
    9. '                       ' → logprob: -12.875188827514648
    10. ')}' → logprob: -13.375188827514648

Token 957: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17595930397510529
    2. '           ' → logprob: -2.550959348678589
    3. '<|end|>' → logprob: -2.675959348678589
    4. '       ' → logprob: -5.05095911026001
    5. '<|end|>' → logprob: -5.67595911026001
    6. '```' → logprob: -6.92595911026001
    7. '

' → logprob: -7.17595911026001
    8. '        
' → logprob: -7.80095911026001
    9. '​
' → logprob: -8.175959587097168
    10. '            
' → logprob: -8.175959587097168

Token 958: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017865439876914024
    2. '
' → logprob: -4.5178656578063965
    3. '#' (adapté à ' #') → logprob: -5.1428656578063965
    4. '            
' → logprob: -7.6428656578063965
    5. '       ' → logprob: -8.517865180969238
    6. '```' → logprob: -9.267865180969238
    7. 'if' → logprob: -10.017865180969238
    8. 'while' → logprob: -10.392865180969238
    9. '   ' → logprob: -10.517865180969238
    10. '        
' → logprob: -10.642865180969238

Token 959: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08638294786214828
    2. '           ' → logprob: -2.7113828659057617
    3. 'if' → logprob: -4.211382865905762
    4. 'while' → logprob: -7.086382865905762
    5. '   ' → logprob: -8.336382865905762
    6. '       ' → logprob: -8.336382865905762
    7. ' #' → logprob: -9.461382865905762
    8. '3' → logprob: -10.461382865905762
    9. ' if' → logprob: -11.336382865905762
    10. ' ' → logprob: -11.461382865905762

Token 960: '3' (ID: 18)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.32344093918800354
    2. 'if' → logprob: -1.5734409093856812
    3. 'while' → logprob: -2.6984410285949707
    4. '           ' → logprob: -6.573441028594971
    5. '       ' → logprob: -9.073440551757812
    6. '
' → logprob: -9.698440551757812
    7. '   ' → logprob: -10.073440551757812
    8. ' #' → logprob: -10.573440551757812
    9. '            
' → logprob: -11.198440551757812
    10. ' while' → logprob: -11.323440551757812

Token 961: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0019367238273844123
    2. '           ' → logprob: -6.251936912536621
    3. ' .' → logprob: -12.126936912536621
    4. '       ' → logprob: -14.126936912536621
    5. ':' → logprob: -14.251936912536621
    6. '   ' → logprob: -15.001936912536621
    7. '.
' → logprob: -15.126936912536621
    8. '#' → logprob: -15.876936912536621
    9. ' if' → logprob: -16.126935958862305
    10. '          ' → logprob: -16.876935958862305

Token 962: ' Try' (ID: 14720)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9422333240509033
    2. '#' → logprob: -1.0672333240509033
    3. 'if' → logprob: -1.4422333240509033
    4. '           ' → logprob: -4.442233085632324
    5. ' while' → logprob: -4.817233085632324
    6. ' if' → logprob: -5.192233085632324
    7. ' #' → logprob: -5.692233085632324
    8. '       ' → logprob: -7.567233085632324
    9. 'While' → logprob: -8.317233085632324
    10. '
' → logprob: -9.442233085632324

Token 963: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.7458268404006958
    2. ' to' → logprob: -0.8708268404006958
    3. '           ' → logprob: -2.6208267211914062
    4. ':' → logprob: -4.120826721191406
    5. '   ' → logprob: -4.620826721191406
    6. ':
' → logprob: -5.495826721191406
    7. '       ' → logprob: -5.620826721191406
    8. '_to' → logprob: -8.870826721191406
    9. '               ' → logprob: -9.620826721191406
    10. 'ing' → logprob: -9.745826721191406

Token 964: ' seat' (ID: 15512)
  Prédit: 'seat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seat' → logprob: -0.45692068338394165
    2. 'while' → logprob: -1.8319206237792969
    3. 'if' → logprob: -2.081920623779297
    4. 'se' → logprob: -2.831920623779297
    5. ' seat' → logprob: -4.706920623779297
    6. 'fill' → logprob: -5.206920623779297
    7. '       ' → logprob: -6.456920623779297
    8. '
' → logprob: -6.831920623779297
    9. ' while' → logprob: -6.956920623779297
    10. 'sit' → logprob: -7.331920623779297

Token 965: ' from' (ID: 591)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2855577766895294
    2. 'wait' → logprob: -1.785557746887207
    3. '           ' → logprob: -3.410557746887207
    4. 'while' → logprob: -4.035557746887207
    5. ' if' → logprob: -4.285557746887207
    6. '       ' → logprob: -5.035557746887207
    7. 'waiting' → logprob: -5.660557746887207
    8. ' wait' → logprob: -6.035557746887207
    9. '   ' → logprob: -6.660557746887207
    10. '               ' → logprob: -7.410557746887207

Token 966: ' queue' (ID: 13661)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.20163670182228088
    2. ' wait' → logprob: -1.7016366720199585
    3. 'queue' → logprob: -8.82663631439209
    4. 'the' → logprob: -10.70163631439209
    5. 'waiting' → logprob: -11.07663631439209
    6. ' queue' → logprob: -11.32663631439209
    7. ' the' → logprob: -11.45163631439209
    8. '(wait' → logprob: -12.20163631439209
    9. '	wait' → logprob: -12.57663631439209
    10. '_wait' → logprob: -12.82663631439209

Token 967: ' as' (ID: 472)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013971085660159588
    2. 'if' → logprob: -4.763970851898193
    3. ' if' → logprob: -5.263970851898193
    4. 'while' → logprob: -9.263971328735352
    5. '       ' → logprob: -10.888971328735352
    6. ':' → logprob: -11.263971328735352
    7. ',' → logprob: -11.513971328735352
    8. 'for' → logprob: -11.513971328735352
    9. ' while' → logprob: -11.763971328735352
    10. ' at' → logprob: -12.513971328735352

Token 968: ' many' (ID: 1991)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.01695002242922783
    2. 'many' → logprob: -4.2669501304626465
    3. 'much' → logprob: -6.6419501304626465
    4. ' long' → logprob: -7.2669501304626465
    5. 'while' → logprob: -7.7669501304626465
    6. '           ' → logprob: -8.391949653625488
    7. '       ' → logprob: -9.891949653625488
    8. 'well' → logprob: -11.016949653625488
    9. 'True' → logprob: -11.016949653625488
    10. '   ' → logprob: -11.391949653625488

Token 969: ' groups' (ID: 8896)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6447463035583496
    2. 'while' → logprob: -1.6447463035583496
    3. ' as' → logprob: -2.2697463035583496
    4. '           ' → logprob: -3.0197463035583496
    5. 'as' → logprob: -3.5197463035583496
    6. 'tokens' → logprob: -4.14474630355835
    7. ' while' → logprob: -4.26974630355835
    8. '               ' → logprob: -4.76974630355835
    9. '       ' → logprob: -5.01974630355835
    10. 'groups' → logprob: -5.14474630355835

Token 970: ' as' (ID: 472)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.11184998601675034
    2. '           ' → logprob: -2.6118500232696533
    3. ' as' → logprob: -3.4868500232696533
    4. 'if' → logprob: -7.361849784851074
    5. 'while' → logprob: -7.611849784851074
    6. '       ' → logprob: -8.986849784851074
    7. 'possible' → logprob: -8.986849784851074
    8. 'at' → logprob: -9.361849784851074
    9. '   ' → logprob: -9.361849784851074
    10. '#' → logprob: -9.611849784851074

Token 971: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.0007559045334346592
    2. 'len' → logprob: -8.50075626373291
    3. ' possible' → logprob: -8.62575626373291
    4. 'wait' → logprob: -8.87575626373291
    5. 'True' → logprob: -9.00075626373291
    6. '   ' → logprob: -9.75075626373291
    7. '       ' → logprob: -11.12575626373291
    8. '           ' → logprob: -11.37575626373291
    9. 'se' → logprob: -11.62575626373291
    10. '```' → logprob: -12.37575626373291

Token 972: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06220217049121857
    2. 'while' → logprob: -3.062202215194702
    3. ' while' → logprob: -5.312201976776123
    4. '
' → logprob: -5.312201976776123
    5. '       ' → logprob: -6.812201976776123
    6. 'for' → logprob: -6.937201976776123
    7. 'if' → logprob: -7.312201976776123
    8. ' for' → logprob: -8.062202453613281
    9. ' if' → logprob: -8.562202453613281
    10. '            
' → logprob: -9.062202453613281

Token 973: ' order' (ID: 2569)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7510613203048706
    2. 'order' → logprob: -1.1260613203048706
    3. 'this' → logprob: -1.8760613203048706
    4. 'time' → logprob: -4.37606143951416
    5. 'the' → logprob: -4.62606143951416
    6. 'wait' → logprob: -4.62606143951416
    7. 'a' → logprob: -5.00106143951416
    8. 'queue' → logprob: -5.37606143951416
    9. 'range' → logprob: -5.50106143951416
    10. ' order' → logprob: -7.00106143951416

Token 974: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004779811482876539
    2. 'while' → logprob: -6.379779815673828
    3. '
' → logprob: -6.629779815673828
    4. ' while' → logprob: -7.254779815673828
    5. '       ' → logprob: -7.504779815673828
    6. ' if' → logprob: -9.004779815673828
    7. 'if' → logprob: -9.504779815673828
    8. ',' → logprob: -9.629779815673828
    9. 'for' → logprob: -9.879779815673828
    10. ' for' → logprob: -10.004779815673828

Token 975: ' without' (ID: 2935)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6166560053825378
    2. '           ' → logprob: -0.8666560053825378
    3. ' while' → logprob: -4.2416558265686035
    4. 'i' → logprob: -4.4916558265686035
    5. ' i' → logprob: -6.1166558265686035
    6. 'idx' → logprob: -6.1166558265686035
    7. 'if' → logprob: -6.2416558265686035
    8. '   ' → logprob: -6.3666558265686035
    9. 'index' → logprob: -6.3666558265686035
    10. 'for' → logprob: -6.8666558265686035

Token 976: ' skipping' (ID: 89472)
  Prédit: 'breaking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'breaking' → logprob: -0.45458805561065674
    2. 'break' → logprob: -1.0795880556106567
    3. '   ' → logprob: -3.954587936401367
    4. ' breaking' → logprob: -6.329587936401367
    5. 'waiting' → logprob: -6.454587936401367
    6. '       ' → logprob: -7.579587936401367
    7. 'changing' → logprob: -7.579587936401367
    8. ' break' → logprob: -8.079587936401367
    9. 'viol' → logprob: -8.204587936401367
    10. 'interrupt' → logprob: -8.829587936401367

Token 977: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6838073134422302
    2. '           ' → logprob: -0.8088073134422302
    3. 'for' → logprob: -3.558807373046875
    4. ' while' → logprob: -5.058807373046875
    5. ' for' → logprob: -5.558807373046875
    6. '
' → logprob: -5.933807373046875
    7. '               ' → logprob: -6.183807373046875
    8. 'if' → logprob: -6.308807373046875
    9. '       ' → logprob: -6.433807373046875
    10. 'groups' → logprob: -7.183807373046875

Token 978: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00793924368917942
    2. '
' → logprob: -4.882939338684082
    3. 'while' → logprob: -8.632939338684082
    4. ' while' → logprob: -9.757939338684082
    5. '       ' → logprob: -10.257939338684082
    6. '            
' → logprob: -11.007939338684082
    7. '```' → logprob: -11.382939338684082
    8. '   ' → logprob: -11.507939338684082
    9. '               ' → logprob: -12.382939338684082
    10. 'if' → logprob: -12.632939338684082

Token 979: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.051877010613679886
    2. 'while' → logprob: -3.051877021789551
    3. ' while' → logprob: -6.676877021789551
    4. 'idx' → logprob: -7.301877021789551
    5. '       ' → logprob: -7.551877021789551
    6. 'i' → logprob: -8.42687702178955
    7. 'queue' → logprob: -8.92687702178955
    8. 'index' → logprob: -9.30187702178955
    9. '   ' → logprob: -9.30187702178955
    10. 'queued' → logprob: -9.42687702178955

Token 980: ' If' (ID: 1843)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5105761885643005
    2. '           ' → logprob: -1.1355762481689453
    3. ' while' → logprob: -3.2605762481689453
    4. 'idx' → logprob: -4.010576248168945
    5. 'i' → logprob: -4.635576248168945
    6. ' i' → logprob: -5.885576248168945
    7. 'if' → logprob: -6.135576248168945
    8. '       ' → logprob: -6.260576248168945
    9. 'j' → logprob: -6.635576248168945
    10. ' idx' → logprob: -7.135576248168945

Token 981: ' wait' (ID: 5238)
  Prédit: ' wait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wait' → logprob: -0.08037836104631424
    2. 'wait' → logprob: -2.580378293991089
    3. ' self' → logprob: -7.580378532409668
    4. ' not' → logprob: -7.580378532409668
    5. 'self' → logprob: -8.705378532409668
    6. ' len' → logprob: -8.955378532409668
    7. 'len' → logprob: -9.830378532409668
    8. ' time' → logprob: -10.205378532409668
    9. '	wait' → logprob: -10.705378532409668
    10. ' ' → logprob: -11.080378532409668

Token 982: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -5.347765181795694e-05
    2. '_' → logprob: -9.875053405761719
    3. 'ing' → logprob: -13.500053405761719
    4. 'queue' → logprob: -15.750053405761719
    5. '_q' → logprob: -16.12505340576172
    6. '_QUEUE' → logprob: -16.50005340576172
    7. '
' → logprob: -16.87505340576172
    8. '```' → logprob: -17.12505340576172
    9. '__' → logprob: -17.37505340576172
    10. '       ' → logprob: -17.37505340576172

Token 983: ' empty' (ID: 8213)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14060913026332855
    2. ' and' → logprob: -2.5156090259552
    3. 'and' → logprob: -3.0156090259552
    4. ':
' → logprob: -6.890609264373779
    5. 'not' → logprob: -8.765608787536621
    6. ' not' → logprob: -10.265608787536621
    7. ':not' → logprob: -10.765608787536621
    8. '):' → logprob: -10.765608787536621
    9. '```' → logprob: -10.765608787536621
    10. '   ' → logprob: -11.015608787536621

Token 984: ' then' (ID: 1815)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.056472234427928925
    2. ':
' → logprob: -3.6814723014831543
    3. '==' → logprob: -4.181472301483154
    4. ' ==' → logprob: -4.306472301483154
    5. '           ' → logprob: -7.306472301483154
    6. 'if' → logprob: -8.681471824645996
    7. '       ' → logprob: -10.806471824645996
    8. ' if' → logprob: -11.306471824645996
    9. ' or' → logprob: -11.431471824645996
    10. '   ' → logprob: -11.556471824645996

Token 985: ' skip' (ID: 16677)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.3351749181747437
    2. ' False' → logprob: -1.5851749181747437
    3. 'wait' → logprob: -2.085175037384033
    4. ' wait' → logprob: -2.085175037384033
    5. ' not' → logprob: -2.210175037384033
    6. '           ' → logprob: -2.835175037384033
    7. 'not' → logprob: -3.335175037384033
    8. 'len' → logprob: -3.335175037384033
    9. ' len' → logprob: -4.460175037384033
    10. '       ' → logprob: -4.710175037384033

Token 986: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030067142099142075
    2. ' if' → logprob: -4.155066967010498
    3. 'if' → logprob: -4.405066967010498
    4. '
' → logprob: -6.780066967010498
    5. '       ' → logprob: -8.405067443847656
    6. '            
' → logprob: -9.405067443847656
    7. 'while' → logprob: -9.530067443847656
    8. '   ' → logprob: -9.655067443847656
    9. ' while' → logprob: -10.280067443847656
    10. ' for' → logprob: -11.030067443847656

Token 987: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006582272471860051
    2. '
' → logprob: -8.00065803527832
    3. ' if' → logprob: -9.12565803527832
    4. '       ' → logprob: -9.37565803527832
    5. 'if' → logprob: -9.37565803527832
    6. '   ' → logprob: -10.75065803527832
    7. '            
' → logprob: -11.50065803527832
    8. 'while' → logprob: -12.62565803527832
    9. '    
' → logprob: -13.25065803527832
    10. '               ' → logprob: -13.50065803527832

Token 988: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10022187232971191
    2. ' if' → logprob: -2.600221872329712
    3. 'if' (adapté à ' if') → logprob: -4.350221633911133
    4. '       ' → logprob: -5.225221633911133
    5. ' while' → logprob: -6.725221633911133
    6. '   ' → logprob: -7.475221633911133
    7. 'while' → logprob: -7.975221633911133
    8. '
' → logprob: -8.225221633911133
    9. '            
' → logprob: -8.975221633911133
    10. '               ' → logprob: -9.725221633911133

Token 989: ' wait' (ID: 5238)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.5793168544769287
    2. ' wait' → logprob: -0.8293168544769287
    3. 'len' → logprob: -6.329317092895508
    4. ' len' → logprob: -7.204317092895508
    5. 'self' → logprob: -7.579317092895508
    6. ' self' → logprob: -8.204317092895508
    7. '   ' → logprob: -10.829317092895508
    8. '	wait' → logprob: -11.204317092895508
    9. ' ' → logprob: -11.579317092895508
    10. ' not' → logprob: -12.454317092895508

Token 990: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -1.3856492842023727e-06
    2. '_' → logprob: -15.125000953674316
    3. '._' → logprob: -15.625000953674316
    4. 'queue' → logprob: -15.750000953674316
    5. '_q' → logprob: -15.875000953674316
    6. '_wait' → logprob: -16.250001907348633
    7. '```' → logprob: -16.500001907348633
    8. '       ' → logprob: -16.625001907348633
    9. ' _' → logprob: -16.875001907348633
    10. 'e' → logprob: -17.000001907348633

Token 991: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011504109017550945
    2. ':
' → logprob: -4.636504173278809
    3. ' and' → logprob: -6.511504173278809
    4. '[' → logprob: -8.636504173278809
    5. 'and' → logprob: -9.636504173278809
    6. '!=' → logprob: -12.011504173278809
    7. '):' → logprob: -13.136504173278809
    8. '   ' → logprob: -13.261504173278809
    9. '.' → logprob: -13.261504173278809
    10. ' :' → logprob: -13.761504173278809

Token 992: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1372600644826889
    2. '           ' → logprob: -2.1372599601745605
    3. '       ' → logprob: -5.0122599601745605
    4. ' for' → logprob: -6.7622599601745605
    5. '   ' → logprob: -7.0122599601745605
    6. 'while' → logprob: -7.6372599601745605
    7. ' while' → logprob: -8.012260437011719
    8. 'for' → logprob: -8.262260437011719
    9. 'i' → logprob: -9.262260437011719
    10. ',' → logprob: -9.512260437011719

Token 993: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.034469723701477
    2. 'i' → logprob: -1.534469723701477
    3. 'while' → logprob: -1.909469723701477
    4. 'idx' → logprob: -1.909469723701477
    5. '                   ' → logprob: -2.9094696044921875
    6. 'index' → logprob: -4.2844696044921875
    7. 'changed' → logprob: -4.4094696044921875
    8. 'new' → logprob: -4.6594696044921875
    9. ' i' → logprob: -4.6594696044921875
    10. '           ' → logprob: -5.1594696044921875

Token 994: ' We' (ID: 1416)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.034489631652832
    2. 'i' → logprob: -1.409489631652832
    3. 'idx' → logprob: -1.784489631652832
    4. '               ' → logprob: -2.784489631652832
    5. '                   ' → logprob: -2.784489631652832
    6. 'se' → logprob: -3.159489631652832
    7. 'index' → logprob: -4.034489631652832
    8. 'new' → logprob: -4.534489631652832
    9. 'to' → logprob: -4.784489631652832
    10. '   ' → logprob: -5.409489631652832

Token 995: ' try' (ID: 2075)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7856354117393494
    2. '=' → logprob: -1.6606354713439941
    3. '           ' → logprob: -2.285635471343994
    4. 'i' → logprob: -3.160635471343994
    5. '               ' → logprob: -3.285635471343994
    6. 'idx' → logprob: -3.535635471343994
    7. ' for' → logprob: -3.660635471343994
    8. ' =' → logprob: -4.285635471343994
    9. 'while' → logprob: -4.285635471343994
    10. '                   ' → logprob: -4.410635471343994

Token 996: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.7527296543121338
    2. '                   ' → logprob: -1.1277296543121338
    3. ' to' → logprob: -2.002729654312134
    4. ':' → logprob: -3.502729654312134
    5. '   ' → logprob: -3.752729654312134
    6. ':
' → logprob: -4.377729415893555
    7. '_to' → logprob: -6.627729415893555
    8. '               ' → logprob: -7.502729415893555
    9. 'for' → logprob: -7.752729415893555
    10. '           ' → logprob: -8.127729415893555

Token 997: ' seat' (ID: 15512)
  Prédit: 'seat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seat' → logprob: -0.4943699836730957
    2. 'i' → logprob: -1.3693699836730957
    3. 'while' → logprob: -2.4943699836730957
    4. 'for' → logprob: -4.119369983673096
    5. 'se' → logprob: -4.494369983673096
    6. 'new' → logprob: -4.994369983673096
    7. 'idx' → logprob: -5.119369983673096
    8. ' seat' → logprob: -5.869369983673096
    9. 'index' → logprob: -6.244369983673096
    10. 'pos' → logprob: -6.994369983673096

Token 998: ' from' (ID: 591)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8869940638542175
    2. 'the' → logprob: -1.3869941234588623
    3. 'wait' → logprob: -2.5119941234588623
    4. '   ' → logprob: -3.1369941234588623
    5. 'groups' → logprob: -3.3869941234588623
    6. 'while' → logprob: -3.5119941234588623
    7. 'for' → logprob: -3.8869941234588623
    8. '       ' → logprob: -4.011993885040283
    9. ' groups' → logprob: -4.011993885040283
    10. ' wait' → logprob: -4.261993885040283

Token 999: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47857972979545593
    2. 'wait' → logprob: -0.9785797595977783
    3. 'the' → logprob: -5.603579521179199
    4. ' wait' → logprob: -7.728579521179199
    5. 'queue' → logprob: -9.1035795211792
    6. ' ' → logprob: -9.6035795211792
    7. '   ' → logprob: -9.9785795211792
    8. '       ' → logprob: -10.2285795211792
    9. 'index' → logprob: -10.7285795211792
    10. 'front' → logprob: -10.8535795211792

Token 1000: ' first' (ID: 1577)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.039197154343128204
    2. 'wait' → logprob: -3.2891972064971924
    3. 'front' → logprob: -7.414196968078613
    4. 'start' → logprob: -8.539196968078613
    5. 'queue' → logprob: -8.914196968078613
    6. ' wait' → logprob: -9.289196968078613
    7. 'head' → logprob: -9.914196968078613
    8. 'first' → logprob: -11.039196968078613
    9. ' ' → logprob: -11.164196968078613
    10. 'begin' → logprob: -11.414196968078613

Token 1001: ' group' (ID: 3566)
  Prédit: ' group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.831092894077301
    2. 'group' → logprob: -1.5810928344726562
    3. ' wait' → logprob: -1.8310928344726562
    4. 'wait' → logprob: -2.0810928344726562
    5. ' token' → logprob: -4.206092834472656
    6. 'token' → logprob: -4.206092834472656
    7. '0' → logprob: -4.581092834472656
    8. '_wait' → logprob: -4.956092834472656
    9. '       ' → logprob: -5.456092834472656
    10. '(wait' → logprob: -5.831092834472656

Token 1002: ' in' (ID: 306)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8727043271064758
    2. ' =' → logprob: -0.9977043271064758
    3. ' in' → logprob: -1.997704267501831
    4. 'in' → logprob: -3.622704267501831
    5. '=' → logprob: -4.12270450592041
    6. '                   ' → logprob: -4.37270450592041
    7. ':' → logprob: -4.74770450592041
    8. 'token' → logprob: -5.62270450592041
    9. ',' → logprob: -6.87270450592041
    10. '()' → logprob: -6.99770450592041

Token 1003: ' queue' (ID: 13661)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.010727787390351295
    2. 'the' → logprob: -4.760727882385254
    3. ' wait' → logprob: -6.260727882385254
    4. 'queue' → logprob: -8.885727882385254
    5. ' the' → logprob: -9.885727882385254
    6. '       ' → logprob: -12.885727882385254
    7. '   ' → logprob: -13.010727882385254
    8. '           ' → logprob: -13.135727882385254
    9. '0' → logprob: -13.510727882385254
    10. '```' → logprob: -13.760727882385254

Token 1004: ' as' (ID: 472)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5210850238800049
    2. '[' → logprob: -1.2710850238800049
    3. ':' → logprob: -2.646085023880005
    4. '                   ' → logprob: -4.021084785461426
    5. ':
' → logprob: -4.521084785461426
    6. '(' → logprob: -4.896084785461426
    7. ',' → logprob: -5.771084785461426
    8. 'if' → logprob: -6.271084785461426
    9. '           ' → logprob: -6.396084785461426
    10. '0' → logprob: -6.646084785461426

Token 1005: ' many' (ID: 1991)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.08026504516601562
    2. ' long' → logprob: -2.7052650451660156
    3. 'while' → logprob: -4.830265045166016
    4. 'wait' → logprob: -6.955265045166016
    5. 'possible' → logprob: -7.455265045166016
    6. '           ' → logprob: -8.705265045166016
    7. 'much' → logprob: -8.830265045166016
    8. '0' → logprob: -9.205265045166016
    9. 'many' → logprob: -9.205265045166016
    10. ' much' → logprob: -10.830265045166016

Token 1006: ' as' (ID: 472)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.0288821458816528
    2. 'groups' → logprob: -2.4038820266723633
    3. ':' → logprob: -2.7788820266723633
    4. '               ' → logprob: -2.9038820266723633
    5. ' as' → logprob: -2.9038820266723633
    6. 'as' → logprob: -3.1538820266723633
    7. '_wait' → logprob: -3.4038820266723633
    8. 'tokens' → logprob: -3.5288820266723633
    9. '_queue' → logprob: -3.6538820266723633
    10. '           ' → logprob: -4.028882026672363

Token 1007: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.018221816048026085
    2. 'len' → logprob: -4.268221855163574
    3. '1' → logprob: -6.768221855163574
    4. ' possible' → logprob: -7.018221855163574
    5. 'True' → logprob: -7.143221855163574
    6. 'can' → logprob: -8.018221855163574
    7. '   ' → logprob: -8.143221855163574
    8. 'wait' → logprob: -8.393221855163574
    9. '       ' → logprob: -9.393221855163574
    10. 'range' → logprob: -9.893221855163574

Token 1008: ' in' (ID: 306)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10661419481039047
    2. ':' → logprob: -2.731614112854004
    3. 'while' → logprob: -3.731614112854004
    4. ' while' → logprob: -5.356614112854004
    5. ',' → logprob: -6.356614112854004
    6. ' and' → logprob: -6.606614112854004
    7. '                   ' → logprob: -7.106614112854004
    8. ':
' → logprob: -7.606614112854004
    9. 'and' → logprob: -7.731614112854004
    10. ' in' → logprob: -7.981614112854004

Token 1009: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.49123266339302063
    2. 'while' → logprob: -1.2412326335906982
    3. 'range' → logprob: -2.4912326335906982
    4. 'a' → logprob: -4.366232872009277
    5. ' order' → logprob: -6.366232872009277
    6. 'sequence' → logprob: -7.866232872009277
    7. '
' → logprob: -7.991232872009277
    8. 'queue' → logprob: -8.491232872009277
    9. 'the' → logprob: -8.491232872009277
    10. 'wait' → logprob: -8.741232872009277

Token 1010: ',
' (ID: 412)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.030703159049153328
    2. ':' → logprob: -3.780703067779541
    3. ':
' → logprob: -5.780703067779541
    4. '                   ' → logprob: -6.780703067779541
    5. ',' → logprob: -7.155703067779541
    6. 'while' → logprob: -7.155703067779541
    7. 'for' → logprob: -8.1557035446167
    8. ' and' → logprob: -8.4057035446167
    9. '
' → logprob: -8.5307035446167
    10. ' for' → logprob: -8.6557035446167

Token 1011: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03388622775673866
    2. 'while' → logprob: -4.033886432647705
    3. ' while' → logprob: -5.283886432647705
    4. ' i' → logprob: -6.033886432647705
    5. ' but' → logprob: -6.158886432647705
    6. 'i' → logprob: -6.533886432647705
    7. '           ' → logprob: -7.158886432647705
    8. 'for' → logprob: -7.533886432647705
    9. 'but' → logprob: -7.533886432647705
    10. 'index' → logprob: -7.783886432647705

Token 1012: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.16433100402355194
    2. ' while' → logprob: -1.9143309593200684
    3. ' ' → logprob: -7.289330959320068
    4. '0' → logprob: -7.414330959320068
    5. 'not' → logprob: -7.539330959320068
    6. ' not' → logprob: -7.789330959320068
    7. '               ' → logprob: -8.289331436157227
    8. ':' → logprob: -8.289331436157227
    9. '   ' → logprob: -8.414331436157227
    10. 'for' → logprob: -8.539331436157227

Token 1013: ' but' (ID: 889)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.656342089176178
    2. 'i' → logprob: -1.6563420295715332
    3. 'idx' → logprob: -2.031342029571533
    4. 'index' → logprob: -3.281342029571533
    5. 'for' → logprob: -3.531342029571533
    6. '               ' → logprob: -3.906342029571533
    7. ' i' → logprob: -4.031342029571533
    8. '#' → logprob: -4.031342029571533
    9. ' while' → logprob: -4.781342029571533
    10. 'pos' → logprob: -4.781342029571533

Token 1014: ' if' (ID: 538)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -1.3633859157562256
    2. 'while' → logprob: -1.6133859157562256
    3. ' i' → logprob: -2.2383859157562256
    4. ' not' → logprob: -2.3633859157562256
    5. 'i' → logprob: -2.4883859157562256
    6. 'not' → logprob: -2.4883859157562256
    7. ' while' → logprob: -3.2383859157562256
    8. 'True' → logprob: -3.3633859157562256
    9. 'idx' → logprob: -3.4883859157562256
    10. '#' → logprob: -4.363386154174805

Token 1015: ' first' (ID: 1577)
  Prédit: ' wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' wait' → logprob: -0.7892199158668518
    2. 'wait' → logprob: -0.7892199158668518
    3. ' not' → logprob: -3.289219856262207
    4. 'not' → logprob: -3.414219856262207
    5. 'len' → logprob: -5.039219856262207
    6. ' the' → logprob: -5.039219856262207
    7. 'the' → logprob: -5.414219856262207
    8. ' ' → logprob: -7.289219856262207
    9. ' len' → logprob: -7.289219856262207
    10. 'we' → logprob: -7.539219856262207

Token 1016: ' can't' (ID: 8535)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.19462937116622925
    2. ' in' → logprob: -3.069629430770874
    3. 'group' → logprob: -3.319629430770874
    4. '_' → logprob: -3.319629430770874
    5. '_group' → logprob: -3.569629430770874
    6. '_wait' → logprob: -4.694629192352295
    7. ' wait' → logprob: -5.069629192352295
    8. ' ' → logprob: -5.319629192352295
    9. ' _' → logprob: -5.819629192352295
    10. '_queue' → logprob: -6.069629192352295

Token 1017: ' seat' (ID: 15512)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.35462257266044617
    2. ' be' → logprob: -1.2296226024627686
    3. 'se' → logprob: -5.7296223640441895
    4. 'seat' → logprob: -6.1046223640441895
    5. ' seat' → logprob: -8.354622840881348
    6. '_be' → logprob: -8.604622840881348
    7. 'sit' → logprob: -8.979622840881348
    8. '	be' → logprob: -10.354622840881348
    9. '_se' → logprob: -11.229622840881348
    10. '.' → logprob: -11.729622840881348

Token 1018: ' no' (ID: 860)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1584419161081314
    2. ',' → logprob: -2.1584420204162598
    3. ':
' → logprob: -4.28344202041626
    4. '_' → logprob: -4.90844202041626
    5. '():' → logprob: -6.65844202041626
    6. '(group' → logprob: -7.03344202041626
    7. '                   ' → logprob: -7.28344202041626
    8. ' at' → logprob: -7.40844202041626
    9. '               ' → logprob: -7.40844202041626
    10. '_group' → logprob: -7.40844202041626

Token 1019: ' one' (ID: 1001)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0799563005566597
    2. '               ' → logprob: -3.704956293106079
    3. 'n' → logprob: -4.079956531524658
    4. ' ' → logprob: -4.704956531524658
    5. '                   ' → logprob: -4.704956531524658
    6. '<|end|>' → logprob: -5.954956531524658
    7. 'ne' → logprob: -6.079956531524658
    8. '           ' → logprob: -6.204956531524658
    9. '                ' → logprob: -6.704956531524658
    10. '   ' → logprob: -6.704956531524658

Token 1020: ' seats' (ID: 24992)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3560065031051636
    2. ':
' → logprob: -1.7310065031051636
    3. '               ' → logprob: -1.7310065031051636
    4. '                   ' → logprob: -1.8560065031051636
    5. ' else' → logprob: -2.231006622314453
    6. 'else' → logprob: -2.481006622314453
    7. '           ' → logprob: -4.356006622314453
    8. '   ' → logprob: -5.231006622314453
    9. ' in' → logprob: -5.606006622314453
    10. 'in' → logprob: -6.231006622314453

Token 1021: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1561138927936554
    2. '
' → logprob: -2.031113862991333
    3. '           ' → logprob: -5.781114101409912
    4. 'if' → logprob: -6.531114101409912
    5. ':
' → logprob: -6.531114101409912
    6. ' if' → logprob: -6.656114101409912
    7. '                   ' → logprob: -7.156114101409912
    8. '                
' → logprob: -7.281114101409912
    9. 'else' → logprob: -7.406114101409912
    10. ',
' → logprob: -7.531114101409912

Token 1022: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002516681095585227
    2. '           ' → logprob: -7.127516746520996
    3. '                   ' → logprob: -7.377516746520996
    4. ':' → logprob: -8.127516746520996
    5. '
' → logprob: -8.502516746520996
    6. '       ' → logprob: -8.502516746520996
    7. '                
' → logprob: -9.127516746520996
    8. ':
' → logprob: -9.502516746520996
    9. '   ' → logprob: -10.377516746520996
    10. ',' → logprob: -10.752516746520996

Token 1023: ' while' (ID: 2049)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.8044031858444214
    2. '               ' → logprob: -1.3044031858444214
    3. ' group' → logprob: -2.179403305053711
    4. 'first' → logprob: -2.804403305053711
    5. ' if' → logprob: -3.554403305053711
    6. 'group' → logprob: -3.679403305053711
    7. 'if' → logprob: -4.179403305053711
    8. 'pos' → logprob: -4.429403305053711
    9. '   ' → logprob: -5.804403305053711
    10. ' start' → logprob: -6.054403305053711

Token 1024: ' wait' (ID: 5238)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.04263657331466675
    2. 'True' → logprob: -3.7926366329193115
    3. 'len' → logprob: -4.292636394500732
    4. ' wait' → logprob: -5.417636394500732
    5. ' True' → logprob: -7.542636394500732
    6. '       ' → logprob: -8.41763687133789
    7. '   ' → logprob: -8.91763687133789
    8. '           ' → logprob: -9.04263687133789
    9. ' len' → logprob: -10.54263687133789
    10. '(wait' → logprob: -11.04263687133789

Token 1025: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -3.4121114822482923e-06
    2. '       ' → logprob: -14.000003814697266
    3. ' _' → logprob: -14.250003814697266
    4. '_' → logprob: -14.250003814697266
    5. 'queue' → logprob: -15.125003814697266
    6. '
' → logprob: -15.375003814697266
    7. '   ' → logprob: -15.750003814697266
    8. '_QUEUE' → logprob: -16.000003814697266
    9. '```' → logprob: -16.375003814697266
    10. '           ' → logprob: -16.375003814697266

Token 1026: ':
' (ID: 734)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.30027052760124207
    2. ' and' → logprob: -1.4252705574035645
    3. '[' → logprob: -4.6752705574035645
    4. ':
' → logprob: -5.5502705574035645
    5. '   ' → logprob: -5.9252705574035645
    6. ':' → logprob: -6.5502705574035645
    7. '       ' → logprob: -6.9252705574035645
    8. '           ' → logprob: -8.300270080566406
    9. '```' → logprob: -9.550270080566406
    10. '	and' → logprob: -9.675270080566406

Token 1027: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.022060373798012733
    2. '           ' → logprob: -4.272060394287109
    3. '
' → logprob: -5.522060394287109
    4. '   ' → logprob: -6.772060394287109
    5. ' group' → logprob: -7.022060394287109
    6. '```' → logprob: -7.022060394287109
    7. '       ' → logprob: -8.39706039428711
    8. '               ' → logprob: -8.64706039428711
    9. '                    
' → logprob: -9.39706039428711
    10. 'group' → logprob: -9.64706039428711

Token 1028: ' first' (ID: 1577)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.41092827916145325
    2. 'group' → logprob: -1.2859282493591309
    3. 'g' → logprob: -3.785928249359131
    4. '                       ' → logprob: -4.410928249359131
    5. '   ' → logprob: -4.660928249359131
    6. 'first' (adapté à ' first') → logprob: -5.035928249359131
    7. '       ' → logprob: -5.660928249359131
    8. ' group' → logprob: -5.785928249359131
    9. ' first' → logprob: -7.035928249359131
    10. 'next' → logprob: -7.285928249359131

Token 1029: ' =' (ID: 314)
  Prédit: '_group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -0.048724640160799026
    2. ' =' → logprob: -3.42372465133667
    3. '_' → logprob: -5.54872465133667
    4. '[' → logprob: -5.92372465133667
    5. '_token' → logprob: -6.42372465133667
    6. '=' → logprob: -6.54872465133667
    7. '_grp' → logprob: -6.67372465133667
    8. '_space' → logprob: -6.79872465133667
    9. '_pos' → logprob: -7.29872465133667
    10. '_idx' → logprob: -8.048724174499512

Token 1030: ' wait' (ID: 5238)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.029750604182481766
    2. ' wait' → logprob: -3.5297505855560303
    3. '	wait' → logprob: -16.52975082397461
    4. '(wait' → logprob: -17.52975082397461
    5. '_wait' → logprob: -19.52975082397461
    6. 'queue' → logprob: -19.77975082397461
    7. '   ' → logprob: -20.02975082397461
    8. '.wait' → logprob: -20.40475082397461
    9. 'waiting' → logprob: -20.90475082397461
    10. 'Wait' → logprob: -20.90475082397461

Token 1031: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -2.45848218582978e-06
    2. 'queue' → logprob: -13.62500286102295
    3. 'Queue' → logprob: -14.62500286102295
    4. '[' → logprob: -15.25000286102295
    5. ' =' → logprob: -16.625001907348633
    6. '_' → logprob: -16.625001907348633
    7. 'que' → logprob: -16.625001907348633
    8. '_list' → logprob: -16.750001907348633
    9. '_wait' → logprob: -16.750001907348633
    10. '```' → logprob: -17.250001907348633

Token 1032: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5213274309644476e-05
    2. '                   ' → logprob: -11.375015258789062
    3. '   ' → logprob: -14.375015258789062
    4. '.pop' → logprob: -14.625015258789062
    5. '=' → logprob: -14.750015258789062
    6. '                       ' → logprob: -14.750015258789062
    7. '               ' → logprob: -15.125015258789062
    8. '0' → logprob: -15.125015258789062
    9. ' =' → logprob: -15.625015258789062
    10. '```' → logprob: -16.000015258789062

Token 1033: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.375001907348633
    4. ' ' → logprob: -15.875001907348633
    5. '
' → logprob: -16.625001907348633
    6. '       ' → logprob: -18.125001907348633
    7. '           ' → logprob: -18.250001907348633
    8. '```' → logprob: -18.750001907348633
    9. '                   ' → logprob: -19.000001907348633
    10. ':' → logprob: -19.250001907348633

Token 1034: ']
' (ID: 1592)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7913877367973328
    2. ')
' → logprob: -1.2913877964019775
    3. ']
' → logprob: -1.7913877964019775
    4. ')' → logprob: -3.1663877964019775
    5. ']' → logprob: -3.6663877964019775
    6. '
' → logprob: -3.6663877964019775
    7. '                       ' → logprob: -5.791387557983398
    8. '               ' → logprob: -6.541387557983398
    9. '):
' → logprob: -6.541387557983398
    10. ':
' → logprob: -6.666387557983398

Token 1035: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007500672363676131
    2. 'start' → logprob: -7.6257500648498535
    3. '   ' → logprob: -9.250750541687012
    4. '               ' → logprob: -9.875750541687012
    5. '           ' → logprob: -10.375750541687012
    6. '       ' → logprob: -10.875750541687012
    7. ' start' → logprob: -11.125750541687012
    8. '```' → logprob: -11.125750541687012
    9. '
' → logprob: -11.375750541687012
    10. '                       ' → logprob: -11.500750541687012

Token 1036: ' start' (ID: 1604)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10406746715307236
    2. 'start' (adapté à ' start') → logprob: -2.35406756401062
    3. ' start' → logprob: -5.854067325592041
    4. '   ' → logprob: -7.979067325592041
    5. 'pos' → logprob: -8.1040678024292
    6. '       ' → logprob: -8.9790678024292
    7. '               ' → logprob: -9.7290678024292
    8. '           ' → logprob: -9.9790678024292
    9. 'se' → logprob: -10.7290678024292
    10. 'seat' → logprob: -10.7290678024292

Token 1037: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0004305500478949398
    2. '_' → logprob: -7.875430583953857
    3. '_position' → logprob: -11.2504301071167
    4. '=_' → logprob: -11.6254301071167
    5. '=' → logprob: -12.1254301071167
    6. ' =' → logprob: -12.2504301071167
    7. ' _' → logprob: -12.5004301071167
    8. '_token' → logprob: -12.6254301071167
    9. 'Pos' → logprob: -12.7504301071167
    10. '_positions' → logprob: -13.2504301071167

Token 1038: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687655329704285
    2. '=' → logprob: -1.1368765830993652
    3. '=self' → logprob: -12.136876106262207
    4. '=s' → logprob: -16.886877059936523
    5. '==' → logprob: -17.261877059936523
    6. 'se' → logprob: -17.511877059936523
    7. '=
' → logprob: -17.636877059936523
    8. '                   ' → logprob: -18.011877059936523
    9. ' =)' → logprob: -18.011877059936523
    10. '＝' → logprob: -18.136877059936523

Token 1039: ' seating' (ID: 42332)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.10274212062358856
    2. ' seating' → logprob: -2.8527421951293945
    3. 'self' → logprob: -3.2277421951293945
    4. ' self' → logprob: -8.102742195129395
    5. 'seat' → logprob: -13.102742195129395
    6. ' Seating' → logprob: -14.477742195129395
    7. '	se' → logprob: -14.477742195129395
    8. 'Se' → logprob: -14.727742195129395
    9. '_se' → logprob: -15.602742195129395
    10. '(se' → logprob: -15.602742195129395

Token 1040: '.can' (ID: 46002)
  Prédit: '.can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.can' → logprob: -4.320199877838604e-07
    2. '.Can' → logprob: -15.375
    3. '.' → logprob: -15.75
    4. '	can' → logprob: -17.5
    5. '_can' → logprob: -17.625
    6. 'can' → logprob: -17.75
    7. ' .' → logprob: -17.75
    8. '(can' → logprob: -19.75
    9. '   ' → logprob: -20.25
    10. ' can' → logprob: -21.25

Token 1041: '_se' (ID: 7123)
  Prédit: '_se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_se' → logprob: -0.0010669894982129335
    2. '_can' → logprob: -6.876067161560059
    3. '```' → logprob: -11.251067161560059
    4. 'can' → logprob: -11.876067161560059
    5. 'seat' → logprob: -12.001067161560059
    6. 'se' → logprob: -12.626067161560059
    7. '_s' → logprob: -13.501067161560059
    8. ' _' → logprob: -14.626067161560059
    9. '_sat' → logprob: -14.751067161560059
    10. '_space' → logprob: -14.876067161560059

Token 1042: 'at' (ID: 266)
  Prédit: 'seat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seat' → logprob: -0.02800029143691063
    2. '_se' → logprob: -4.028000354766846
    3. 'eat' → logprob: -5.653000354766846
    4. 'se' → logprob: -5.653000354766846
    5. 'at' → logprob: -6.028000354766846
    6. ' seat' → logprob: -8.527999877929688
    7. 'eseat' → logprob: -9.527999877929688
    8. 't' → logprob: -10.652999877929688
    9. 'e' → logprob: -10.902999877929688
    10. '-seat' → logprob: -11.152999877929688

Token 1043: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.0006557276356033981
    2. 'first' → logprob: -7.875655651092529
    3. '(' → logprob: -8.500656127929688
    4. '(wait' → logprob: -9.625656127929688
    5. '(
' → logprob: -13.000656127929688
    6. ' first' → logprob: -13.375656127929688
    7. '[first' → logprob: -14.000656127929688
    8. ' (' → logprob: -14.125656127929688
    9. 'wait' → logprob: -15.625656127929688
    10. '                   ' → logprob: -15.750656127929688

Token 1044: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011205092072486877
    2. ')
' → logprob: -4.511205196380615
    3. '                   ' → logprob: -9.261204719543457
    4. '(first' → logprob: -10.261204719543457
    5. ' )' → logprob: -11.886204719543457
    6. '   ' → logprob: -12.261204719543457
    7. '               ' → logprob: -13.261204719543457
    8. ')
' → logprob: -13.386204719543457
    9. ')

' → logprob: -13.511204719543457
    10. '       ' → logprob: -13.511204719543457

Token 1045: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006479830481112003
    2. '                    
' → logprob: -9.00064754486084
    3. '                    ' → logprob: -9.00064754486084
    4. '                       ' → logprob: -9.37564754486084
    5. '<|end|>' → logprob: -9.87564754486084
    6. '				' → logprob: -10.00064754486084
    7. '               ' → logprob: -10.12564754486084
    8. '           ' → logprob: -10.25064754486084
    9. '       ' → logprob: -11.00064754486084
    10. '		           ' → logprob: -11.25064754486084

Token 1046: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7079266309738159
    2. ' if' → logprob: -0.8329266309738159
    3. '                   ' → logprob: -2.7079267501831055
    4. '                       ' → logprob: -6.4579267501831055
    5. '                    ' → logprob: -6.5829267501831055
    6. ''' → logprob: -7.8329267501831055
    7. '           ' → logprob: -8.207926750183105
    8. '                           ' → logprob: -8.332926750183105
    9. '                    
' → logprob: -8.457926750183105
    10. ')' → logprob: -8.457926750183105

Token 1047: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.07889319956302643
    2. ' start' → logprob: -2.5788931846618652
    3. '-' → logprob: -12.578893661499023
    4. ' -' → logprob: -17.203893661499023
    5. '=start' → logprob: -17.453893661499023
    6. '                   ' → logprob: -17.703893661499023
    7. '(start' → logprob: -18.578893661499023
    8. '
' → logprob: -18.703893661499023
    9. ' ' → logprob: -18.828893661499023
    10. '                       ' → logprob: -18.828893661499023

Token 1048: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -7.896309739408025e-07
    2. 'pos' → logprob: -15.125000953674316
    3. 'Pos' → logprob: -15.375000953674316
    4. '   ' → logprob: -17.0
    5. '!=' → logprob: -17.0
    6. '=' → logprob: -18.25
    7. '_' → logprob: -18.25
    8. '_POS' → logprob: -18.25
    9. '                   ' → logprob: -18.375
    10. '       ' → logprob: -18.625

Token 1049: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.037645481526851654
    2. ' !=' → logprob: -3.5376455783843994
    3. '==' → logprob: -4.91264533996582
    4. '==-' → logprob: -8.66264533996582
    5. '!=' → logprob: -8.78764533996582
    6. '<|end|>' → logprob: -9.66264533996582
    7. ' ' → logprob: -10.03764533996582
    8. ')' → logprob: -10.53764533996582
    9. '!=-' → logprob: -10.66264533996582
    10. '<|end|>' → logprob: -11.78764533996582

Token 1050: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.547789674485102e-05
    2. ' -' → logprob: -10.250035285949707
    3. '0' → logprob: -19.750036239624023
    4. '   ' → logprob: -20.875036239624023
    5. '```' → logprob: -21.000036239624023
    6. 'not' → logprob: -21.875036239624023
    7. ' ' → logprob: -21.875036239624023
    8. '-not' → logprob: -22.000036239624023
    9. '−' → logprob: -22.500036239624023
    10. '                   ' → logprob: -22.750036239624023

Token 1051: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. '-' → logprob: -11.625011444091797
    3. ' ' → logprob: -13.500011444091797
    4. ' -' → logprob: -14.250011444091797
    5. '2' → logprob: -16.125011444091797
    6. '```' → logprob: -16.250011444091797
    7. '   ' → logprob: -16.562511444091797
    8. '0' → logprob: -17.062511444091797
    9. '  ' → logprob: -18.250011444091797
    10. '       ' → logprob: -18.562511444091797

Token 1052: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8320320844650269
    2. ':' → logprob: -1.2070320844650269
    3. '                       ' → logprob: -1.3320320844650269
    4. '                   ' → logprob: -6.707032203674316
    5. '):
' → logprob: -8.582032203674316
    6. '                           ' → logprob: -9.207032203674316
    7. '       ' → logprob: -9.457032203674316
    8. '<|end|>' → logprob: -10.332032203674316
    9. '           ' → logprob: -10.582032203674316
    10. '               ' → logprob: -10.832032203674316

Token 1053: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0007034952868707478
    2. '                           ' → logprob: -8.375703811645508
    3. '                   ' → logprob: -9.000703811645508
    4. ':
' → logprob: -9.000703811645508
    5. ' break' → logprob: -9.750703811645508
    6. ':' → logprob: -10.000703811645508
    7. '                        ' → logprob: -10.375703811645508
    8. '                        
' → logprob: -10.500703811645508
    9. 'break' → logprob: -10.750703811645508
    10. '                     ' → logprob: -11.875703811645508

Token 1054: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.06400851905345917
    2. 'break' → logprob: -2.8140084743499756
    3. '                           ' → logprob: -6.314008712768555
    4. ' break' → logprob: -8.939008712768555
    5. '	break' → logprob: -10.689008712768555
    6. '                   ' → logprob: -10.689008712768555
    7. '               ' → logprob: -11.189008712768555
    8. '   ' → logprob: -11.314008712768555
    9. '                               ' → logprob: -11.439008712768555
    10. '           ' → logprob: -12.564008712768555

Token 1055: ' No' (ID: 3004)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0681358352303505
    2. '                           ' → logprob: -3.3181357383728027
    3. '                       ' → logprob: -3.5681357383728027
    4. ' break' → logprob: -6.818135738372803
    5. '                               ' → logprob: -9.068136215209961
    6. '                   ' → logprob: -9.443136215209961
    7. '   ' → logprob: -9.443136215209961
    8. '               ' → logprob: -10.818136215209961
    9. '	break' → logprob: -10.943136215209961
    10. '           ' → logprob: -10.943136215209961

Token 1056: ' seating' (ID: 42332)
  Prédit: ' more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' more' → logprob: -0.7645902037620544
    2. ' seat' → logprob: -2.014590263366699
    3. ' seats' → logprob: -2.014590263366699
    4. 'se' → logprob: -2.264590263366699
    5. ' seating' → logprob: -2.514590263366699
    6. ' break' → logprob: -3.889590263366699
    7. 'more' → logprob: -4.264590263366699
    8. 'seat' → logprob: -4.389590263366699
    9. ' further' → logprob: -4.639590263366699
    10. ' space' → logprob: -5.014590263366699

Token 1057: ' possible' (ID: 4149)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7436226010322571
    2. 'possible' → logprob: -1.4936225414276123
    3. 'available' → logprob: -2.6186225414276123
    4. '           ' → logprob: -2.9936225414276123
    5. '               ' → logprob: -2.9936225414276123
    6. 'break' → logprob: -3.1186225414276123
    7. ' possible' → logprob: -3.1186225414276123
    8. '                       ' → logprob: -3.9936225414276123
    9. ' available' → logprob: -4.743622779846191
    10. '
' → logprob: -5.493622779846191

Token 1058: ' for' (ID: 395)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0019763342570513487
    2. '                           ' → logprob: -6.251976490020752
    3. ':
' → logprob: -11.126976013183594
    4. '                               ' → logprob: -11.751976013183594
    5. ':' → logprob: -12.376976013183594
    6. ',' → logprob: -12.501976013183594
    7. '                   ' → logprob: -12.501976013183594
    8. '
' → logprob: -12.626976013183594
    9. '                        ' → logprob: -13.001976013183594
    10. 'break' → logprob: -13.126976013183594

Token 1059: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.068075031042099
    2. ' first' → logprob: -3.068074941635132
    3. 'the' → logprob: -4.068075180053711
    4. ' the' → logprob: -6.568075180053711
    5. 'this' → logprob: -7.693075180053711
    6. 'any' → logprob: -9.443075180053711
    7. ' this' → logprob: -9.818075180053711
    8. 'now' → logprob: -9.818075180053711
    9. 'that' → logprob: -10.068075180053711
    10. '```' → logprob: -10.318075180053711

Token 1060: ',' (ID: 11)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3286476135253906
    2. '
' → logprob: -1.8286476135253906
    3. '                           ' → logprob: -3.5786476135253906
    4. ',' → logprob: -3.7036476135253906
    5. '                   ' → logprob: -3.8286476135253906
    6. ' group' → logprob: -4.078647613525391
    7. 'group' → logprob: -4.453647613525391
    8. 'break' → logprob: -5.578647613525391
    9. ',
' → logprob: -5.703647613525391
    10. ' break' → logprob: -6.078647613525391

Token 1061: ' stop' (ID: 5666)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.7639338970184326
    2. 'break' → logprob: -0.7639338970184326
    3. '                       ' → logprob: -3.0139338970184326
    4. '                           ' → logprob: -4.013934135437012
    5. '                               ' → logprob: -7.013934135437012
    6. '	break' → logprob: -8.888934135437012
    7. '                   ' → logprob: -9.888934135437012
    8. '   ' → logprob: -10.138934135437012
    9. '                        ' → logprob: -11.013934135437012
    10. '               ' → logprob: -11.388934135437012

Token 1062: ' seating' (ID: 42332)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0005828189896419644
    2. 'break' → logprob: -7.750582695007324
    3. '                           ' → logprob: -9.000582695007324
    4. '                   ' → logprob: -11.375582695007324
    5. '                        ' → logprob: -12.125582695007324
    6. '                      ' → logprob: -13.125582695007324
    7. '               ' → logprob: -13.250582695007324
    8. ' break' → logprob: -13.375582695007324
    9. '           ' → logprob: -13.500582695007324
    10. '
' → logprob: -13.750582695007324

Token 1063: ' attempts' (ID: 27747)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.44919973611831665
    2. '                       ' → logprob: -1.1991996765136719
    3. '
' → logprob: -4.074199676513672
    4. 'break' → logprob: -4.199199676513672
    5. 'attempt' → logprob: -4.199199676513672
    6. '               ' → logprob: -5.824199676513672
    7. '                    
' → logprob: -6.199199676513672
    8. '                        
' → logprob: -6.199199676513672
    9. 'for' → logprob: -6.949199676513672
    10. 'process' → logprob: -7.324199676513672

Token 1064: ' for' (ID: 395)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -2.951771421066951e-05
    2. '                           ' → logprob: -10.875029563903809
    3. '.' → logprob: -13.250029563903809
    4. '                   ' → logprob: -13.250029563903809
    5. '               ' → logprob: -13.250029563903809
    6. '                        ' → logprob: -13.625029563903809
    7. '
' → logprob: -14.125029563903809
    8. '                        
' → logprob: -14.125029563903809
    9. ',' → logprob: -14.250029563903809
    10. '					' → logprob: -14.500029563903809

Token 1065: ' others' (ID: 5036)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.02762267366051674
    2. ' now' → logprob: -4.152622699737549
    3. 'the' → logprob: -4.902622699737549
    4. 'wait' → logprob: -6.777622699737549
    5. 'this' → logprob: -7.027622699737549
    6. '           ' → logprob: -7.652622699737549
    7. '                   ' → logprob: -7.652622699737549
    8. '               ' → logprob: -8.02762222290039
    9. 'waiting' → logprob: -8.65262222290039
    10. 'time' → logprob: -9.02762222290039

Token 1066: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -1.3782830137643032e-05
    2. '                           ' → logprob: -12.00001335144043
    3. '                   ' → logprob: -12.50001335144043
    4. '               ' → logprob: -14.00001335144043
    5. '                        ' → logprob: -14.12501335144043
    6. '           ' → logprob: -14.75001335144043
    7. '
' → logprob: -15.00001335144043
    8. '                      ' → logprob: -15.12501335144043
    9. '       ' → logprob: -15.25001335144043
    10. '                        
' → logprob: -15.25001335144043

Token 1067: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -3.6789137084269896e-05
    2. '                           ' → logprob: -10.75003719329834
    3. '                   ' → logprob: -12.37503719329834
    4. '       ' → logprob: -12.87503719329834
    5. '                        ' → logprob: -13.00003719329834
    6. '           ' → logprob: -13.25003719329834
    7. '               ' → logprob: -13.37503719329834
    8. '					' → logprob: -14.00003719329834
    9. '                               ' → logprob: -14.37503719329834
    10. '                      ' → logprob: -14.50003719329834

Token 1068: ' break' (ID: 2338)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.021487539634108543
    2. 'break' (adapté à ' break') → logprob: -4.021487712860107
    3. '                           ' → logprob: -5.771487712860107
    4. ' break' → logprob: -9.14648723602295
    5. '	break' → logprob: -10.39648723602295
    6. '                   ' → logprob: -10.77148723602295
    7. '                               ' → logprob: -11.02148723602295
    8. '					' → logprob: -11.27148723602295
    9. '   ' → logprob: -11.27148723602295
    10. '               ' → logprob: -12.02148723602295

Token 1069: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0022702778223901987
    2. '
' → logprob: -6.377270221710205
    3. '                    
' → logprob: -8.502270698547363
    4. 'else' → logprob: -8.877270698547363
    5. ' else' → logprob: -9.377270698547363
    6. '               ' → logprob: -10.252270698547363
    7. '				' → logprob: -11.002270698547363
    8. '                    ' → logprob: -11.127270698547363
    9. '                       ' → logprob: -11.252270698547363
    10. '           ' → logprob: -11.377270698547363

Token 1070: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007910476415418088
    2. '
' → logprob: -7.875791072845459
    3. 'else' → logprob: -8.5007905960083
    4. '               ' → logprob: -9.6257905960083
    5. '				' → logprob: -10.0007905960083
    6. '           ' → logprob: -10.3757905960083
    7. '       ' → logprob: -10.7507905960083
    8. '   ' → logprob: -11.3757905960083
    9. ' else' → logprob: -11.7507905960083
    10. '                       ' → logprob: -12.0007905960083

Token 1071: ' else' (ID: 1203)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04910164326429367
    2. 'se' → logprob: -3.2991015911102295
    3. 'self' → logprob: -5.674101829528809
    4. ' seating' → logprob: -5.674101829528809
    5. '               ' → logprob: -5.924101829528809
    6. 'else' (adapté à ' else') → logprob: -7.799101829528809
    7. '           ' → logprob: -8.049101829528809
    8. '                       ' → logprob: -8.549101829528809
    9. '       ' → logprob: -8.799101829528809
    10. '				' → logprob: -9.799101829528809

Token 1072: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03435789793729782
    2. ':
' → logprob: -3.909357786178589
    3. ':' → logprob: -4.784358024597168
    4. '                   ' → logprob: -6.284358024597168
    5. '                           ' → logprob: -7.284358024597168
    6. '                        
' → logprob: -7.284358024597168
    7. '                        ' → logprob: -7.534358024597168
    8. '       ' → logprob: -7.659358024597168
    9. '               ' → logprob: -8.784358024597168
    10. '           ' → logprob: -8.784358024597168

Token 1073: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.018191147595643997
    2. ' seating' → logprob: -4.143191337585449
    3. 'se' → logprob: -6.518191337585449
    4. '                   ' → logprob: -7.518191337585449
    5. 'self' → logprob: -10.26819133758545
    6. '                           ' → logprob: -10.89319133758545
    7. '               ' → logprob: -10.89319133758545
    8. ' ' → logprob: -11.64319133758545
    9. ' self' → logprob: -11.76819133758545
    10. '                     ' → logprob: -12.01819133758545

Token 1074: ' seating' (ID: 42332)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.2361610233783722
    2. ' seating' → logprob: -1.7361609935760498
    3. 'se' → logprob: -3.73616099357605
    4. 'self' → logprob: -5.361161231994629
    5. '                           ' → logprob: -6.361161231994629
    6. 'group' → logprob: -6.986161231994629
    7. ' self' → logprob: -7.236161231994629
    8. ' group' → logprob: -7.861161231994629
    9. 'waiting' → logprob: -8.236161231994629
    10. 'start' → logprob: -8.361161231994629

Token 1075: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -9.639096970204264e-05
    2. '_se' → logprob: -9.500096321105957
    3. '       ' → logprob: -11.750096321105957
    4. '   ' → logprob: -12.125096321105957
    5. 'seat' → logprob: -13.125096321105957
    6. ' .' → logprob: -13.375096321105957
    7. '           ' → logprob: -13.500096321105957
    8. '.' → logprob: -14.125096321105957
    9. '```' → logprob: -14.250096321105957
    10. '	se' → logprob: -14.750096321105957

Token 1076: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.00019483851792756468
    2. '_group' → logprob: -9.250194549560547
    3. '_at' → logprob: -10.125194549560547
    4. 't' → logprob: -11.500194549560547
    5. 'eat' → logprob: -11.875194549560547
    6. 'seat' → logprob: -12.000194549560547
    7. 'a' → logprob: -12.250194549560547
    8. 'ed' → logprob: -12.375194549560547
    9. '.at' → logprob: -12.625194549560547
    10. 'group' → logprob: -13.437694549560547

Token 1077: '_group' (ID: 15990)
  Prédit: '_group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -1.0280383548888494e-06
    2. '       ' → logprob: -15.125000953674316
    3. '_queue' → logprob: -16.000001907348633
    4. '_system' → logprob: -16.125001907348633
    5. 'group' → logprob: -16.375001907348633
    6. '           ' → logprob: -16.750001907348633
    7. '_groups' → logprob: -16.750001907348633
    8. '                   ' → logprob: -17.000001907348633
    9. '_GROUP' → logprob: -17.250001907348633
    10. '_' → logprob: -17.500001907348633

Token 1078: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.002071633003652096
    2. '(wait' → logprob: -6.252071857452393
    3. '(' → logprob: -9.002071380615234
    4. 'first' → logprob: -11.127071380615234
    5. '[first' → logprob: -13.627071380615234
    6. ' first' → logprob: -13.877071380615234
    7. '                       ' → logprob: -14.002071380615234
    8. '(
' → logprob: -14.127071380615234
    9. '(f' → logprob: -15.127071380615234
    10. '(group' → logprob: -15.377071380615234

Token 1079: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.7888184528565034e-05
    2. 'first' → logprob: -10.2500581741333
    3. ' first' → logprob: -11.6250581741333
    4. '                       ' → logprob: -12.2500581741333
    5. '(first' → logprob: -12.6250581741333
    6. ' ,' → logprob: -12.8750581741333
    7. '[first' → logprob: -14.0000581741333
    8. 'wait' → logprob: -14.6250581741333
    9. '                           ' → logprob: -15.7500581741333
    10. ',f' → logprob: -15.7500581741333

Token 1080: ' start' (ID: 1604)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.2960916757583618
    2. 'start' → logprob: -1.7960916757583618
    3. 'wait' → logprob: -2.5460915565490723
    4. ' first' → logprob: -4.671091556549072
    5. ' wait' → logprob: -6.921091556549072
    6. '0' → logprob: -7.296091556549072
    7. ' start' → logprob: -7.671091556549072
    8. 'se' → logprob: -9.29609203338623
    9. '                               ' → logprob: -9.79609203338623
    10. ')' → logprob: -10.04609203338623

Token 1081: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0003265255654696375
    2. 'wait' → logprob: -8.625326156616211
    3. '_queue' → logprob: -9.625326156616211
    4. 'pos' → logprob: -9.750326156616211
    5. '_wait' → logprob: -11.250326156616211
    6. '(wait' → logprob: -12.500326156616211
    7. 'Pos' → logprob: -12.750326156616211
    8. '0' → logprob: -13.750326156616211
    9. 'queue' → logprob: -14.125326156616211
    10. '(' → logprob: -16.12532615661621

Token 1082: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.5491004129871726e-05
    2. ')' → logprob: -11.500045776367188
    3. '                       ' → logprob: -11.750045776367188
    4. 'wait' → logprob: -12.250045776367188
    5. ' ,' → logprob: -12.500045776367188
    6. '(wait' → logprob: -12.500045776367188
    7. '                   ' → logprob: -12.750045776367188
    8. ',time' → logprob: -13.125045776367188
    9. '                           ' → logprob: -13.250045776367188
    10. '               ' → logprob: -13.375045776367188

Token 1083: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.001170225441455841
    2. ' time' → logprob: -6.7511701583862305
    3. '	time' → logprob: -18.376171112060547
    4. '
' → logprob: -18.501171112060547
    5. '"time' → logprob: -18.751171112060547
    6. '                           ' → logprob: -19.126171112060547
    7. '                               ' → logprob: -19.126171112060547
    8. '                       ' → logprob: -19.376171112060547
    9. '                   ' → logprob: -19.376171112060547
    10. '=time' → logprob: -19.501171112060547

Token 1084: ')
' (ID: 446)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0011412883177399635
    2. ')
' → logprob: -8.251141548156738
    3. '
' → logprob: -8.501141548156738
    4. '           ' → logprob: -8.876141548156738
    5. '                        
' → logprob: -9.126141548156738
    6. ',' → logprob: -9.251141548156738
    7. '               ' → logprob: -9.251141548156738
    8. ')' → logprob: -9.376141548156738
    9. '```' → logprob: -10.501141548156738
    10. '       ' → logprob: -10.501141548156738

Token 1085: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0003103175258729607
    2. '               ' → logprob: -9.125309944152832
    3. '           ' → logprob: -9.500309944152832
    4. '					' → logprob: -9.875309944152832
    5. '                   ' → logprob: -10.375309944152832
    6. 'wait' → logprob: -10.875309944152832
    7. '       ' → logprob: -11.625309944152832
    8. '```' → logprob: -11.750309944152832
    9. '		' → logprob: -13.250309944152832
    10. '                           ' → logprob: -13.625309944152832

Token 1086: ' occupied' (ID: 46186)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' (adapté à ' occupied') → logprob: -0.16843445599079132
    2. '                       ' → logprob: -2.5434343814849854
    3. 'wait' → logprob: -2.9184343814849854
    4. ' occupied' → logprob: -4.5434346199035645
    5. ' wait' → logprob: -5.4184346199035645
    6. '       ' → logprob: -6.0434346199035645
    7. 'waiting' → logprob: -6.4184346199035645
    8. '               ' → logprob: -6.9184346199035645
    9. '                   ' → logprob: -7.2934346199035645
    10. 'occup' → logprob: -7.6684346199035645

Token 1087: '_groups' (ID: 50609)
  Prédit: '_groups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_groups' → logprob: -2.816093228830141e-06
    2. '_system' → logprob: -13.25000286102295
    3. 'Groups' → logprob: -14.12500286102295
    4. '           ' → logprob: -17.000001907348633
    5. '               ' → logprob: -17.125001907348633
    6. 'System' → logprob: -17.750001907348633
    7. '       ' → logprob: -18.000001907348633
    8. 'roups' → logprob: -18.125001907348633
    9. 'groups' → logprob: -18.375001907348633
    10. '                       ' → logprob: -18.625001907348633

Token 1088: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0035795147996395826
    2. '.' → logprob: -5.753579616546631
    3. '.remove' → logprob: -8.128579139709473
    4. '.pop' → logprob: -9.253579139709473
    5. '                           ' → logprob: -12.503579139709473
    6. '                       ' → logprob: -13.253579139709473
    7. '.extend' → logprob: -13.378579139709473
    8. '.add' → logprob: -13.753579139709473
    9. '           ' → logprob: -14.003579139709473
    10. ' .' → logprob: -14.378579139709473

Token 1089: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.40374457836151123
    2. '(wait' → logprob: -1.1537445783615112
    3. 'first' → logprob: -4.153744697570801
    4. 'wait' → logprob: -6.903744697570801
    5. ' first' → logprob: -11.0287446975708
    6. '(' → logprob: -12.4037446975708
    7. ' wait' → logprob: -13.9037446975708
    8. '[first' → logprob: -14.2787446975708
    9. '	first' → logprob: -15.1537446975708
    10. '	wait' → logprob: -16.278743743896484

Token 1090: ')
' (ID: 446)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.10516390204429626
    2. ')
' → logprob: -2.980163812637329
    3. ')' → logprob: -3.230163812637329
    4. '
' → logprob: -5.980164051055908
    5. '<|end|>' → logprob: -6.230164051055908
    6. '                        
' → logprob: -6.480164051055908
    7. '),' → logprob: -7.355164051055908
    8. ',' → logprob: -7.605164051055908
    9. '               ' → logprob: -7.855164051055908
    10. '                   ' → logprob: -7.980164051055908

Token 1091: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03391089290380478
    2. 'wait' → logprob: -4.283910751342773
    3. '```' → logprob: -4.658910751342773
    4. ' wait' → logprob: -5.033910751342773
    5. '               ' → logprob: -6.658910751342773
    6. '                   ' → logprob: -6.783910751342773
    7. '           ' → logprob: -7.908910751342773
    8. '       ' → logprob: -7.908910751342773
    9. '(wait' → logprob: -9.283910751342773
    10. '                           ' → logprob: -9.658910751342773

Token 1092: ' wait' (ID: 5238)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' (adapté à ' wait') → logprob: -0.06298308074474335
    2. ' wait' → logprob: -2.8129830360412598
    3. '                       ' → logprob: -7.18798303604126
    4. '                   ' → logprob: -9.187983512878418
    5. '               ' → logprob: -9.187983512878418
    6. '                               ' → logprob: -11.312983512878418
    7. '                           ' → logprob: -11.562983512878418
    8. 'if' → logprob: -11.687983512878418
    9. '           ' → logprob: -11.937983512878418
    10. '       ' → logprob: -11.937983512878418

Token 1093: '_queue' (ID: 25622)
  Prédit: '_queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queue' → logprob: -7.32654589228332e-05
    2. '_wait' → logprob: -9.750073432922363
    3. 'Queue' → logprob: -11.250073432922363
    4. '_list' → logprob: -14.250073432922363
    5. '       ' → logprob: -14.875073432922363
    6. 'queue' → logprob: -15.375073432922363
    7. '[' → logprob: -16.125072479248047
    8. '```' → logprob: -16.250072479248047
    9. '_index' → logprob: -16.500072479248047
    10. '_' → logprob: -16.875072479248047

Token 1094: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00011999329581158236
    2. '.' → logprob: -9.375120162963867
    3. 'pop' → logprob: -10.875120162963867
    4. '.p' → logprob: -11.250120162963867
    5. '	pop' → logprob: -13.625120162963867
    6. '                       ' → logprob: -14.750120162963867
    7. '.Pop' → logprob: -15.375120162963867
    8. '                        
' → logprob: -15.375120162963867
    9. '_pop' → logprob: -15.500120162963867
    10. '```' → logprob: -15.625120162963867

Token 1095: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023248042911291122
    2. '0' → logprob: -3.7732479572296143
    3. '()' → logprob: -13.273247718811035
    4. '[' → logprob: -14.273247718811035
    5. '(
' → logprob: -16.64824867248535
    6. '()
' → logprob: -17.14824867248535
    7. '   ' → logprob: -17.39824867248535
    8. '```' → logprob: -17.64824867248535
    9. '       ' → logprob: -18.52324867248535
    10. ' (' → logprob: -18.64824867248535

Token 1096: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '(' → logprob: -19.5
    3. ' ' → logprob: -19.875
    4. '```' → logprob: -20.5
    5. '
' → logprob: -20.625
    6. '[' → logprob: -20.75
    7. '   ' → logprob: -21.5
    8. ')' → logprob: -21.5
    9. 'first' → logprob: -21.75
    10. '       ' → logprob: -21.75

Token 1097: ')
' (ID: 446)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1098: '                       ' (ID: 968)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1099: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4831191301345825
    2. '                       ' → logprob: -0.9831191301345825
    3. ' if' → logprob: -4.858119010925293
    4. '                   ' → logprob: -7.108119010925293
    5. '               ' → logprob: -9.233119010925293
    6. '                        ' → logprob: -9.608119010925293
    7. '           ' → logprob: -9.858119010925293
    8. '<|end|>' → logprob: -10.108119010925293
    9. '       ' → logprob: -10.233119010925293
    10. '                      ' → logprob: -10.983119010925293

Token 1100: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.04858953505754471
    2. ' first' → logprob: -3.0485894680023193
    3. '                               ' → logprob: -14.173589706420898
    4. '   ' → logprob: -14.798589706420898
    5. '                       ' → logprob: -15.048589706420898
    6. '	first' → logprob: -15.048589706420898
    7. '                           ' → logprob: -15.673589706420898
    8. '(first' → logprob: -16.5485897064209
    9. '                   ' → logprob: -17.1735897064209
    10. '               ' → logprob: -17.1735897064209

Token 1101: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.000418040988733992
    2. 'index' → logprob: -7.875418186187744
    3. '.' → logprob: -10.750417709350586
    4. '#index' → logprob: -12.500417709350586
    5. '=index' → logprob: -12.875417709350586
    6. '```' → logprob: -13.125417709350586
    7. '   ' → logprob: -13.250417709350586
    8. ' index' → logprob: -13.750417709350586
    9. ' .' → logprob: -14.000417709350586
    10. '@index' → logprob: -14.125417709350586

Token 1102: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10025034844875336
    2. '==' → logprob: -2.350250244140625
    3. '==
' → logprob: -10.850250244140625
    4. ' ==
' → logprob: -11.350250244140625
    5. ')==' → logprob: -11.975250244140625
    6. '<|end|>' → logprob: -13.225250244140625
    7. ')' → logprob: -14.100250244140625
    8. ']==' → logprob: -14.225250244140625
    9. '()==' → logprob: -14.475250244140625
    10. '```' → logprob: -14.850250244140625

Token 1103: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.0015023599844425917
    2. ' target' → logprob: -6.501502513885498
    3. '	target' → logprob: -19.001502990722656
    4. '(target' → logprob: -19.251502990722656
    5. '
' → logprob: -19.751502990722656
    6. '   ' → logprob: -21.251502990722656
    7. '[target' → logprob: -21.376502990722656
    8. 'arget' → logprob: -22.501502990722656
    9. '_target' → logprob: -22.876502990722656
    10. 't' → logprob: -23.126502990722656

Token 1104: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -8.423219696851447e-05
    2. '_' → logprob: -9.625083923339844
    3. '_target' → logprob: -11.000083923339844
    4. ' _' → logprob: -14.000083923339844
    5. '_idx' → logprob: -15.125083923339844
    6. '_
' → logprob: -16.875083923339844
    7. '_ind' → logprob: -17.125083923339844
    8. 'index' → logprob: -17.375083923339844
    9. 'Index' → logprob: -17.375083923339844
    10. '```' → logprob: -17.500083923339844

Token 1105: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.54902583360672
    2. ':' → logprob: -1.0490257740020752
    3. ':
' → logprob: -3.174025774002075
    4. '<|end|>' → logprob: -4.049026012420654
    5. '                               ' → logprob: -5.424026012420654
    6. '                       ' → logprob: -6.049026012420654
    7. '==' → logprob: -6.299026012420654
    8. '):' → logprob: -7.049026012420654
    9. ')' → logprob: -7.049026012420654
    10. '):
' → logprob: -7.174026012420654

Token 1106: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.06830853968858719
    2. '                               ' → logprob: -3.3183085918426514
    3. 'se' → logprob: -3.5683085918426514
    4. '                       ' → logprob: -7.693308353424072
    5. '   ' → logprob: -7.943308353424072
    6. '           ' → logprob: -8.31830883026123
    7. '               ' → logprob: -9.69330883026123
    8. '(se' → logprob: -9.69330883026123
    9. '                            ' → logprob: -9.81830883026123
    10. '                                   ' → logprob: -9.94330883026123

Token 1107: ' seated' (ID: 77168)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.0003921847674064338
    2. '                               ' → logprob: -8.375391960144043
    3. 'True' → logprob: -9.125391960144043
    4. ' seated' → logprob: -10.500391960144043
    5. '                           ' → logprob: -11.250391960144043
    6. ' True' → logprob: -12.125391960144043
    7. '                                   ' → logprob: -13.125391960144043
    8. '(se' → logprob: -13.875391960144043
    9. ' se' → logprob: -13.875391960144043
    10. '               ' → logprob: -14.375391960144043

Token 1108: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.00026205103495158255
    2. 'target' → logprob: -8.250262260437012
    3. 'Target' → logprob: -14.750262260437012
    4. '_' → logprob: -16.375261306762695
    5. 'TARGET' → logprob: -16.375261306762695
    6. '   ' → logprob: -17.625261306762695
    7. '_Target' → logprob: -17.875261306762695
    8. '_TARGET' → logprob: -18.000261306762695
    9. '-target' → logprob: -18.375261306762695
    10. '_token' → logprob: -18.500261306762695

Token 1109: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009571973932906985
    2. ' =' → logprob: -7.000957012176514
    3. '=True' → logprob: -10.000957489013672
    4. '=
' → logprob: -15.500957489013672
    5. '=False' → logprob: -16.625957489013672
    6. '                           ' → logprob: -17.000957489013672
    7. '                               ' → logprob: -17.750957489013672
    8. '=true' → logprob: -18.625957489013672
    9. '=

' → logprob: -19.250957489013672
    10. '==' → logprob: -19.875957489013672

Token 1110: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0004306692280806601
    2. ' True' → logprob: -7.750430583953857
    3. '=True' → logprob: -19.125431060791016
    4. '(True' → logprob: -20.000431060791016
    5. '                           ' → logprob: -22.125431060791016
    6. 'true' → logprob: -22.750431060791016
    7. '                               ' → logprob: -23.375431060791016
    8. '                       ' → logprob: -23.500431060791016
    9. '   ' → logprob: -24.000431060791016
    10. '_true' → logprob: -24.125431060791016

Token 1111: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1112: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007189030759036541
    2. '
' → logprob: -5.00718879699707
    3. '               ' → logprob: -9.00718879699707
    4. '       ' → logprob: -9.00718879699707
    5. '                   ' → logprob: -9.63218879699707
    6. '<|end|>' → logprob: -10.00718879699707
    7. '            
' → logprob: -10.75718879699707
    8. '		' → logprob: -10.75718879699707
    9. '   ' → logprob: -11.00718879699707
    10. '<|end|>' → logprob: -11.25718879699707

Token 1113: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06617467105388641
    2. '
' → logprob: -2.8161747455596924
    3. 'if' → logprob: -6.191174507141113
    4. '            
' → logprob: -6.566174507141113
    5. '       ' → logprob: -7.941174507141113
    6. '<|end|>' → logprob: -9.066174507141113
    7. '<|end|>' → logprob: -9.441174507141113
    8. '   ' → logprob: -9.566174507141113
    9. '    
' → logprob: -10.191174507141113
    10. '        
' → logprob: -10.566174507141113

Token 1114: ' If' (ID: 1843)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.577206015586853
    2. 'if' → logprob: -0.827206015586853
    3. 'time' → logprob: -7.077206134796143
    4. ' if' → logprob: -7.827206134796143
    5. '   ' → logprob: -10.827205657958984
    6. '       ' → logprob: -13.577205657958984
    7. '            
' → logprob: -14.577205657958984
    8. '          ' → logprob: -15.202205657958984
    9. ' time' → logprob: -15.452205657958984
    10. '               ' → logprob: -16.077205657958984

Token 1115: ' we' (ID: 581)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.04315538704395294
    2. ' seated' → logprob: -3.1681554317474365
    3. 'target' → logprob: -10.168155670166016
    4. '(se' → logprob: -10.543155670166016
    5. '   ' → logprob: -10.668155670166016
    6. ' ' → logprob: -11.043155670166016
    7. ' se' → logprob: -11.543155670166016
    8. 'self' → logprob: -11.668155670166016
    9. '	se' → logprob: -11.793155670166016
    10. 'time' → logprob: -12.293155670166016

Token 1116: ' seated' (ID: 77168)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.035823460668325424
    2. '           ' → logprob: -4.160823345184326
    3. '_se' → logprob: -4.535823345184326
    4. '==' → logprob: -5.035823345184326
    5. ' ==' → logprob: -6.785823345184326
    6. '(se' → logprob: -8.285823822021484
    7. ' se' → logprob: -8.535823822021484
    8. 'if' → logprob: -8.535823822021484
    9. ' if' → logprob: -9.535823822021484
    10. '=' → logprob: -9.785823822021484

Token 1117: ' target' (ID: 3783)
  Prédit: '_target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.014223210513591766
    2. 'target' → logprob: -4.264223098754883
    3. 'the' → logprob: -10.014223098754883
    4. ' target' → logprob: -12.639223098754883
    5. '
' → logprob: -12.889223098754883
    6. ' the' → logprob: -13.139223098754883
    7. '_' → logprob: -13.639223098754883
    8. '   ' → logprob: -13.639223098754883
    9. '(target' → logprob: -14.014223098754883
    10. 'Target' → logprob: -14.264223098754883

Token 1118: ' group' (ID: 3566)
  Prédit: '_target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_target' → logprob: -0.5704818367958069
    2. '           ' → logprob: -1.945481777191162
    3. ' ==' → logprob: -1.945481777191162
    4. ':
' → logprob: -2.695481777191162
    5. ':' → logprob: -3.445481777191162
    6. ' and' → logprob: -3.695481777191162
    7. '==' → logprob: -4.820481777191162
    8. ' if' → logprob: -5.195481777191162
    9. 'if' → logprob: -5.445481777191162
    10. '               ' → logprob: -5.820481777191162

Token 1119: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7237920165061951
    2. ' ==' → logprob: -1.2237920761108398
    3. '==' → logprob: -1.9737920761108398
    4. 'if' → logprob: -2.97379207611084
    5. ' if' → logprob: -3.97379207611084
    6. ':' → logprob: -5.47379207611084
    7. ' and' → logprob: -5.72379207611084
    8. ':
' → logprob: -5.97379207611084
    9. 'and' → logprob: -6.84879207611084
    10. '               ' → logprob: -7.72379207611084

Token 1120: ' it' (ID: 480)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.055810779333114624
    2. 'time' → logprob: -3.9308106899261475
    3. 'wait' → logprob: -4.055810928344727
    4. '(se' → logprob: -4.930810928344727
    5. ' seated' → logprob: -5.430810928344727
    6. 'not' → logprob: -6.555810928344727
    7. ' wait' → logprob: -6.805810928344727
    8. '(wait' → logprob: -6.805810928344727
    9. 'target' → logprob: -7.680810928344727
    10. ' time' → logprob: -7.805810928344727

Token 1121: ' has' (ID: 853)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5479586720466614
    2. ' ==' → logprob: -1.6729586124420166
    3. '>=' → logprob: -1.9229586124420166
    4. ' >=' → logprob: -2.9229586124420166
    5. '>' → logprob: -4.797958850860596
    6. 'index' → logprob: -4.922958850860596
    7. '_index' → logprob: -5.297958850860596
    8. 'se' → logprob: -5.797958850860596
    9. '#' → logprob: -6.422958850860596
    10. ' >' → logprob: -6.797958850860596

Token 1122: ' seated' (ID: 77168)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.07512576133012772
    2. '```' → logprob: -3.9501256942749023
    3. 'not' → logprob: -4.075125694274902
    4. 'been' → logprob: -4.325125694274902
    5. 'e' → logprob: -4.575125694274902
    6. 'arr' → logprob: -5.575125694274902
    7. '.e' → logprob: -6.075125694274902
    8. 'left' → logprob: -6.450125694274902
    9. 'eat' → logprob: -6.825125694274902
    10. 'finished' → logprob: -7.075125694274902

Token 1123: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0014961723936721683
    2. ':' → logprob: -7.751496315002441
    3. 'and' → logprob: -7.751496315002441
    4. ' and' → logprob: -7.751496315002441
    5. '_' → logprob: -9.626496315002441
    6. 'time' → logprob: -10.251496315002441
    7. '+' → logprob: -10.501496315002441
    8. ':
' → logprob: -10.751496315002441
    9. '```' → logprob: -10.751496315002441
    10. '   ' → logprob: -11.751496315002441

Token 1124: ' assigned' (ID: 21482)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.48079603910446167
    2. 'is' → logprob: -0.9807960391044617
    3. 'and' → logprob: -5.855795860290527
    4. '+' → logprob: -6.105795860290527
    5. ' and' → logprob: -6.980795860290527
    6. ' +' → logprob: -8.855795860290527
    7. '           ' → logprob: -8.855795860290527
    8. '!=' → logprob: -9.105795860290527
    9. '               ' → logprob: -9.355795860290527
    10. '==' → logprob: -9.980795860290527

Token 1125: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2498474270105362
    2. ' ==' → logprob: -2.749847412109375
    3. '==' → logprob: -2.749847412109375
    4. ' and' → logprob: -2.999847412109375
    5. ':
' → logprob: -3.499847412109375
    6. '           ' → logprob: -4.999847412109375
    7. '               ' → logprob: -6.124847412109375
    8. 'and' → logprob: -6.249847412109375
    9. ',' → logprob: -6.624847412109375
    10. ' is' → logprob: -8.374847412109375

Token 1126: ' we' (ID: 581)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00043937109876424074
    2. 'break' → logprob: -8.000439643859863
    3. ' break' → logprob: -10.375439643859863
    4. '           ' → logprob: -10.500439643859863
    5. 'return' → logprob: -11.000439643859863
    6. '   ' → logprob: -11.500439643859863
    7. 'if' → logprob: -11.875439643859863
    8. '                   ' → logprob: -12.250439643859863
    9. ' if' → logprob: -12.750439643859863
    10. ' return' → logprob: -13.375439643859863

Token 1127: ' can' (ID: 665)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7947988510131836
    2. 'break' → logprob: -0.9197988510131836
    3. 'return' → logprob: -2.0447988510131836
    4. ' break' → logprob: -4.419798851013184
    5. ' return' → logprob: -5.544798851013184
    6. '           ' → logprob: -5.544798851013184
    7. '   ' → logprob: -8.794798851013184
    8. 'if' → logprob: -9.669798851013184
    9. '	break' → logprob: -10.169798851013184
    10. '#' → logprob: -10.169798851013184

Token 1128: ' stop' (ID: 5666)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11489131301641464
    2. 'return' → logprob: -2.489891290664673
    3. 'break' → logprob: -3.864891290664673
    4. ' return' → logprob: -5.614891529083252
    5. ' break' → logprob: -7.239891529083252
    6. '           ' → logprob: -8.489891052246094
    7. '                   ' → logprob: -10.989891052246094
    8. '```' → logprob: -10.989891052246094
    9. '                       ' → logprob: -11.114891052246094
    10. '   ' → logprob: -11.614891052246094

Token 1129: ' next' (ID: 2613)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5333238840103149
    2. '           ' → logprob: -0.9083238840103149
    3. 'if' → logprob: -4.783323764801025
    4. ' if' → logprob: -7.158323764801025
    5. 'and' → logprob: -7.533323764801025
    6. ' and' → logprob: -8.658324241638184
    7. ':' → logprob: -9.158324241638184
    8. '   ' → logprob: -9.658324241638184
    9. ',' → logprob: -10.158324241638184
    10. '                   ' → logprob: -10.783324241638184

Token 1130: ' minute' (ID: 12434)
  Prédit: '_token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_token' → logprob: -0.9593451023101807
    2. 'token' → logprob: -1.0843451023101807
    3. ' token' → logprob: -1.5843451023101807
    4. '
' → logprob: -3.5843451023101807
    5. '   ' → logprob: -4.709344863891602
    6. '\n' → logprob: -5.084344863891602
    7. ' 
' → logprob: -5.334344863891602
    8. 'tokens' → logprob: -5.334344863891602
    9. 'line' → logprob: -6.084344863891602
    10. ':' → logprob: -6.459344863891602

Token 1131: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011834138073027134
    2. '
' → logprob: -4.761834144592285
    3. ' if' → logprob: -6.386834144592285
    4. '   ' → logprob: -7.761834144592285
    5. '            
' → logprob: -8.261834144592285
    6. '.' → logprob: -8.386834144592285
    7. '       ' → logprob: -8.511834144592285
    8. '               ' → logprob: -9.136834144592285
    9. '    
' → logprob: -9.511834144592285
    10. '\n' → logprob: -9.761834144592285

Token 1132: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011486753646750003
    2. ' if' → logprob: -10.125114440917969
    3. '               ' → logprob: -10.250114440917969
    4. '   ' → logprob: -11.000114440917969
    5. 'if' → logprob: -11.000114440917969
    6. '       ' → logprob: -12.750114440917969
    7. '
' → logprob: -13.375114440917969
    8. '```' → logprob: -14.375114440917969
    9. '		' → logprob: -15.250114440917969
    10. '                   ' → logprob: -16.25011444091797

Token 1133: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010912814177572727
    2. 'if' → logprob: -6.876091480255127
    3. ' if' → logprob: -10.376091003417969
    4. '   ' → logprob: -10.876091003417969
    5. '       ' → logprob: -11.876091003417969
    6. '
' → logprob: -13.876091003417969
    7. '               ' → logprob: -14.751091003417969
    8. '            
' → logprob: -16.00109100341797
    9. '		' → logprob: -16.62609100341797
    10. '```' → logprob: -17.25109100341797

Token 1134: ' Wait' (ID: 24305)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008074867073446512
    2. 'if' → logprob: -7.375807285308838
    3. ' if' → logprob: -9.500807762145996
    4. '   ' → logprob: -9.625807762145996
    5. '       ' → logprob: -10.375807762145996
    6. '
' → logprob: -12.000807762145996
    7. '               ' → logprob: -13.875807762145996
    8. '            
' → logprob: -13.875807762145996
    9. '		' → logprob: -15.500807762145996
    10. '          ' → logprob: -16.12580680847168

Token 1135: ' time' (ID: 1058)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.4756160974502563
    2. '+=' → logprob: -1.4756160974502563
    3. '           ' → logprob: -1.7256160974502563
    4. '==' → logprob: -1.8506160974502563
    5. ' if' → logprob: -2.725615978240967
    6. ' ==' → logprob: -2.850615978240967
    7. 'if' → logprob: -3.350615978240967
    8. '   ' → logprob: -3.850615978240967
    9. '=' → logprob: -4.975615978240967
    10. '               ' → logprob: -5.225615978240967

Token 1136: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4143875241279602
    2. ' =' → logprob: -1.4143874645233154
    3. '           ' → logprob: -3.0393874645233154
    4. '               ' → logprob: -4.4143877029418945
    5. '+=' → logprob: -4.4143877029418945
    6. 'if' → logprob: -4.7893877029418945
    7. ' +=' → logprob: -4.9143877029418945
    8. 'for' → logprob: -5.9143877029418945
    9. '                   ' → logprob: -6.6643877029418945
    10. '   ' → logprob: -7.2893877029418945

Token 1137: ' seated' (ID: 77168)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.2246420979499817
    2. 'self' → logprob: -2.474642038345337
    3. 'group' → logprob: -3.349642038345337
    4. 'g' → logprob: -3.599642038345337
    5. 'se' → logprob: -3.849642038345337
    6. ' time' → logprob: -3.974642038345337
    7. ' self' → logprob: -5.849642276763916
    8. '0' → logprob: -6.224642276763916
    9. ' g' → logprob: -6.599642276763916
    10. 'target' → logprob: -6.724642276763916

Token 1138: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.06099073961377144
    2. '           ' → logprob: -4.310990810394287
    3. '+' → logprob: -4.810990810394287
    4. ' +' → logprob: -4.935990810394287
    5. 'if' → logprob: -5.310990810394287
    6. 'time' → logprob: -5.435990810394287
    7. '       ' → logprob: -5.560990810394287
    8. ' +=' → logprob: -5.560990810394287
    9. '_times' → logprob: -6.060990810394287
    10. '+=' → logprob: -6.685990810394287

Token 1139: ' -' (ID: 533)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2711549997329712
    2. ' if' → logprob: -2.1461548805236816
    3. 'if' → logprob: -2.6461548805236816
    4. ' +' → logprob: -4.521154880523682
    5. '
' → logprob: -4.646154880523682
    6. ' ==' → logprob: -4.771154880523682
    7. '+' → logprob: -5.021154880523682
    8. '==' → logprob: -5.771154880523682
    9. '               ' → logprob: -5.896154880523682
    10. '       ' → logprob: -6.021154880523682

Token 1140: ' arrival' (ID: 24861)
  Prédit: 'groups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'groups' → logprob: -0.3145069181919098
    2. 'g' → logprob: -2.189507007598877
    3. 'time' → logprob: -2.314507007598877
    4. 'first' → logprob: -3.814507007598877
    5. 'self' → logprob: -3.939507007598877
    6. '(groups' → logprob: -5.439507007598877
    7. 'target' → logprob: -5.814507007598877
    8. 'arr' → logprob: -6.189507007598877
    9. 'arrival' → logprob: -6.564507007598877
    10. 'wait' → logprob: -6.564507007598877

Token 1141: '_time' (ID: 6425)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017253534868359566
    2. '
' → logprob: -4.642253398895264
    3. ' if' → logprob: -5.517253398895264
    4. '       ' → logprob: -6.642253398895264
    5. ' +' → logprob: -7.517253398895264
    6. 'if' → logprob: -7.517253398895264
    7. '               ' → logprob: -8.517253875732422
    8. ' =' → logprob: -8.642253875732422
    9. '+' → logprob: -8.767253875732422
    10. ' -' → logprob: -9.142253875732422

Token 1142: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.040178462862968445
    2. ' if' → logprob: -3.9151785373687744
    3. 'if' → logprob: -4.040178298950195
    4. '
' → logprob: -6.665178298950195
    5. '       ' → logprob: -7.790178298950195
    6. '   ' → logprob: -10.040178298950195
    7. '            
' → logprob: -10.165178298950195
    8. '               ' → logprob: -10.540178298950195
    9. ',' → logprob: -10.915178298950195
    10. '{
' → logprob: -12.665178298950195

Token 1143: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011174732353538275
    2. 'if' → logprob: -7.501117706298828
    3. '       ' → logprob: -8.376117706298828
    4. ' if' → logprob: -8.501117706298828
    5. '
' → logprob: -9.376117706298828
    6. '   ' → logprob: -10.251117706298828
    7. '               ' → logprob: -12.501117706298828
    8. '            
' → logprob: -13.001117706298828
    9. '          ' → logprob: -13.626117706298828
    10. '```' → logprob: -14.626117706298828

Token 1144: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015968683874234557
    2. 'if' (adapté à ' if') → logprob: -6.501596927642822
    3. ' if' → logprob: -9.876596450805664
    4. '   ' → logprob: -10.751596450805664
    5. '
' → logprob: -11.376596450805664
    6. '       ' → logprob: -11.626596450805664
    7. '               ' → logprob: -14.876596450805664
    8. '```' → logprob: -15.251596450805664
    9. '            
' → logprob: -15.251596450805664
    10. '		' → logprob: -15.501596450805664

Token 1145: ' seated' (ID: 77168)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.0010623442940413952
    2. ' seated' → logprob: -6.876062393188477
    3. '   ' → logprob: -11.376062393188477
    4. 'self' → logprob: -12.251062393188477
    5. '(se' → logprob: -12.376062393188477
    6. ' ' → logprob: -12.626062393188477
    7. '	se' → logprob: -13.126062393188477
    8. 'group' → logprob: -14.251062393188477
    9. '       ' → logprob: -14.251062393188477
    10. '     ' → logprob: -14.876062393188477

Token 1146: '_target' (ID: 24705)
  Prédit: '_target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_target' → logprob: -4.3822154111694545e-05
    2. 'target' → logprob: -10.625043869018555
    3. '_' → logprob: -12.125043869018555
    4. '
' → logprob: -12.375043869018555
    5. ' _' → logprob: -12.500043869018555
    6. '_targets' → logprob: -13.375043869018555
    7. '   ' → logprob: -13.875043869018555
    8. '==' → logprob: -14.125043869018555
    9. '           ' → logprob: -14.125043869018555
    10. ' ==' → logprob: -15.250043869018555

Token 1147: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0542210228741169
    2. 'and' → logprob: -3.0542209148406982
    3. ':' → logprob: -6.304221153259277
    4. ' ==' → logprob: -6.679221153259277
    5. '           ' → logprob: -7.054221153259277
    6. ':
' → logprob: -7.304221153259277
    7. '==' → logprob: -7.429221153259277
    8. '   ' → logprob: -8.554221153259277
    9. '               ' → logprob: -9.429221153259277
    10. '       ' → logprob: -10.304221153259277

Token 1148: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009382586576975882
    2. ' and' → logprob: -7.500938415527344
    3. '           ' → logprob: -8.125938415527344
    4. ':
' → logprob: -10.875938415527344
    5. ' return' → logprob: -11.125938415527344
    6. '                   ' → logprob: -11.375938415527344
    7. ' if' → logprob: -11.625938415527344
    8. '   ' → logprob: -12.250938415527344
    9. 'and' → logprob: -12.500938415527344
    10. ' break' → logprob: -12.500938415527344

Token 1149: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0035531469620764256
    2. '                   ' → logprob: -7.0035529136657715
    3. 'break' (adapté à ' break') → logprob: -7.0035529136657715
    4. ' break' → logprob: -7.3785529136657715
    5. ' if' → logprob: -7.6285529136657715
    6. 'return' → logprob: -8.12855339050293
    7. ' return' → logprob: -8.50355339050293
    8. '           ' → logprob: -9.62855339050293
    9. 'if' → logprob: -10.25355339050293
    10. '                       ' → logprob: -12.00355339050293

Token 1150: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1151: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1152: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12202806770801544
    2. '
' → logprob: -2.497028112411499
    3. '   ' → logprob: -4.24702787399292
    4. 'time' → logprob: -4.62202787399292
    5. '       ' → logprob: -5.24702787399292
    6. ' time' → logprob: -6.49702787399292
    7. '    
' → logprob: -6.99702787399292
    8. '            
' → logprob: -7.74702787399292
    9. '        
' → logprob: -8.997028350830078
    10. '```' → logprob: -10.747028350830078

Token 1153: ' Corner' (ID: 58455)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.00027599421446211636
    2. '           ' → logprob: -8.750275611877441
    3. '   ' → logprob: -9.750275611877441
    4. ' time' → logprob: -10.000275611877441
    5. '       ' → logprob: -11.250275611877441
    6. '
' → logprob: -14.750275611877441
    7. 'if' → logprob: -15.000275611877441
    8. '	time' → logprob: -16.125276565551758
    9. '"time' → logprob: -18.250276565551758
    10. '            
' → logprob: -19.125276565551758

Token 1154: ':' (ID: 25)
  Prédit: '_case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -0.49970129132270813
    2. 'case' → logprob: -0.9997012615203857
    3. ' case' → logprob: -3.7497012615203857
    4. '_cases' → logprob: -6.999701499938965
    5. ' cases' → logprob: -8.249701499938965
    6. '
' → logprob: -8.749701499938965
    7. 'cases' → logprob: -8.999701499938965
    8. '   ' → logprob: -9.124701499938965
    9. '_' → logprob: -9.624701499938965
    10. ':' → logprob: -10.374701499938965

Token 1155: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4061764180660248
    2. ' time' → logprob: -1.7811764478683472
    3. '           ' → logprob: -2.4061763286590576
    4. 'if' → logprob: -3.0311763286590576
    5. 'time' → logprob: -3.6561763286590576
    6. ' #' → logprob: -7.781176567077637
    7. '#' → logprob: -8.031176567077637
    8. '   ' → logprob: -8.906176567077637
    9. '
' → logprob: -9.281176567077637
    10. '            
' → logprob: -10.031176567077637

Token 1156: ' time' (ID: 1058)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.8045707941055298
    2. ' not' → logprob: -1.5545707941055298
    3. 'time' → logprob: -1.5545707941055298
    4. 'len' → logprob: -2.4295706748962402
    5. 'wait' → logprob: -3.6795706748962402
    6. ' time' → logprob: -5.30457067489624
    7. 'se' → logprob: -5.42957067489624
    8. 'self' → logprob: -6.05457067489624
    9. ' wait' → logprob: -6.30457067489624
    10. 'last' → logprob: -6.67957067489624

Token 1157: ' goes' (ID: 8805)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8636497855186462
    2. '==' → logprob: -1.613649845123291
    3. '>' → logprob: -1.988649845123291
    4. ' >=' → logprob: -2.238649845123291
    5. ' >' → logprob: -2.613649845123291
    6. '>=' → logprob: -3.113649845123291
    7. '+' → logprob: -4.613649845123291
    8. ' +' → logprob: -5.988649845123291
    9. ' +=' → logprob: -6.113649845123291
    10. '   ' → logprob: -6.863649845123291

Token 1158: ' beyond' (ID: 11615)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.054231975227594376
    2. ' >' → logprob: -3.054231882095337
    3. '>=' → logprob: -5.804232120513916
    4. ' beyond' → logprob: -6.929232120513916
    5. ' >=' → logprob: -7.554232120513916
    6. '==' → logprob: -8.179231643676758
    7. ' +=' → logprob: -8.304231643676758
    8. '+=' → logprob: -8.429231643676758
    9. '+' → logprob: -9.179231643676758
    10. '=' → logprob: -9.429231643676758

Token 1159: ' some' (ID: 1236)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.06926392763853073
    2. '200' → logprob: -3.6942639350891113
    3. '10' → logprob: -4.069263935089111
    4. '500' → logprob: -4.444263935089111
    5. '300' → logprob: -5.569263935089111
    6. 'self' → logprob: -5.569263935089111
    7. ' ' → logprob: -6.444263935089111
    8. '150' → logprob: -7.069263935089111
    9. '999' → logprob: -7.069263935089111
    10. 'max' → logprob: -7.694263935089111

Token 1160: ' large' (ID: 4410)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.02269172854721546
    2. ' limit' → logprob: -4.39769172668457
    3. ' ' → logprob: -5.02269172668457
    4. 'limit' → logprob: -7.02269172668457
    5. '_limit' → logprob: -8.14769172668457
    6. '           ' → logprob: -8.14769172668457
    7. ' max' → logprob: -8.64769172668457
    8. '   ' → logprob: -8.64769172668457
    9. '500' → logprob: -8.77269172668457
    10. ' reasonable' → logprob: -9.02269172668457

Token 1161: ' limit' (ID: 5967)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0363625288009644
    2. ' _' → logprob: -1.2863625288009644
    3. '0' → logprob: -1.6613625288009644
    4. '_' → logprob: -2.911362648010254
    5. ' +' → logprob: -3.536362648010254
    6. '+' → logprob: -3.911362648010254
    7. '_limit' → logprob: -4.661362648010254
    8. '
' → logprob: -4.786362648010254
    9. '100' → logprob: -4.911362648010254
    10. '1' → logprob: -5.036362648010254

Token 1162: ' we' (ID: 581)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0213885847479105
    2. ' and' → logprob: -4.521388530731201
    3. ':
' → logprob: -5.146388530731201
    4. ':' → logprob: -6.271388530731201
    5. ' ==' → logprob: -7.896388530731201
    6. '               ' → logprob: -8.02138900756836
    7. 'and' → logprob: -8.02138900756836
    8. '+' → logprob: -8.02138900756836
    9. '=' → logprob: -8.39638900756836
    10. ' or' → logprob: -8.52138900756836

Token 1163: ' stop' (ID: 5666)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10777934640645981
    2. '   ' → logprob: -2.8577792644500732
    3. '               ' → logprob: -4.607779502868652
    4. ' break' → logprob: -4.982779502868652
    5. '       ' → logprob: -5.107779502868652
    6. ' +=' → logprob: -5.357779502868652
    7. 'break' → logprob: -5.482779502868652
    8. '==' → logprob: -5.982779502868652
    9. ' ==' → logprob: -6.357779502868652
    10. ' =' → logprob: -6.357779502868652

Token 1164: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007247145287692547
    2. '
' → logprob: -5.007246971130371
    3. '            
' → logprob: -7.882246971130371
    4. '   ' → logprob: -9.882246971130371
    5. 'if' → logprob: -10.757246971130371
    6. ' if' → logprob: -11.132246971130371
    7. '       ' → logprob: -11.257246971130371
    8. '\n' → logprob: -11.382246971130371
    9. '               ' → logprob: -11.507246971130371
    10. 'time' → logprob: -11.757246971130371

Token 1165: ' avoid' (ID: 8397)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.02411201409995556
    2. ' break' → logprob: -4.274112224578857
    3. '       ' → logprob: -5.274112224578857
    4. '           ' → logprob: -5.524112224578857
    5. '   ' → logprob: -8.0241117477417
    6. 'return' → logprob: -8.1491117477417
    7. 'raise' → logprob: -9.7741117477417
    8. '               ' → logprob: -10.2741117477417
    9. '```' → logprob: -11.0241117477417
    10. '
' → logprob: -11.2741117477417

Token 1166: ' infinite' (ID: 48413)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0881132036447525
    2. ' infinite' → logprob: -2.588113307952881
    3. ' an' → logprob: -5.088113307952881
    4. 'an' → logprob: -6.713113307952881
    5. '
' → logprob: -7.588113307952881
    6. '   ' → logprob: -7.963113307952881
    7. ' while' → logprob: -8.088112831115723
    8. '       ' → logprob: -9.213112831115723
    9. 'while' → logprob: -9.213112831115723
    10. ' endless' → logprob: -9.463112831115723

Token 1167: ' loops' (ID: 57130)
  Prédit: '_loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_loop' → logprob: -1.0240180492401123
    2. '
' → logprob: -1.5240180492401123
    3. ' loop' → logprob: -2.1490180492401123
    4. '           ' → logprob: -2.1490180492401123
    5. '```' → logprob: -2.5240180492401123
    6. '   ' → logprob: -3.3990180492401123
    7. ' if' → logprob: -4.274018287658691
    8. '\n' → logprob: -4.524018287658691
    9. ' loops' → logprob: -4.649018287658691
    10. 'loop' → logprob: -4.649018287658691

Token 1168: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004190825391560793
    2. '
' → logprob: -5.504190921783447
    3. '            
' → logprob: -9.379190444946289
    4. '   ' → logprob: -12.379190444946289
    5. ' if' → logprob: -12.504190444946289
    6. '<|end|>' → logprob: -12.754190444946289
    7. 'if' → logprob: -12.879190444946289
    8. ',' → logprob: -12.879190444946289
    9. '       ' → logprob: -13.004190444946289
    10. '```' → logprob: -13.254190444946289

Token 1169: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23434336483478546
    2. '
' → logprob: -1.609343409538269
    3. '            
' → logprob: -5.109343528747559
    4. '    
' → logprob: -6.859343528747559
    5. '   ' → logprob: -6.984343528747559
    6. '\n' → logprob: -8.109343528747559
    7. '       ' → logprob: -8.484343528747559
    8. ' 
' → logprob: -8.984343528747559
    9. '        
' → logprob: -9.609343528747559
    10. '
' → logprob: -9.609343528747559

Token 1170: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06841997802257538
    2. '
' → logprob: -2.818419933319092
    3. '            
' → logprob: -6.193419933319092
    4. ' if' → logprob: -6.693419933319092
    5. 'time' → logprob: -7.068419933319092
    6. '   ' → logprob: -7.318419933319092
    7. 'if' (adapté à ' if') → logprob: -7.318419933319092
    8. ' time' → logprob: -7.443419933319092
    9. ' 
' → logprob: -8.56842041015625
    10. '    
' → logprob: -9.19342041015625

Token 1171: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.20142552256584167
    2. ' time' → logprob: -1.701425552368164
    3. '   ' → logprob: -11.451425552368164
    4. 'self' → logprob: -14.076425552368164
    5. '	time' → logprob: -14.951425552368164
    6. '(time' → logprob: -15.576425552368164
    7. '    ' → logprob: -16.326425552368164
    8. ' self' → logprob: -16.576425552368164
    9. ' ' → logprob: -16.951425552368164
    10. '  ' → logprob: -17.326425552368164

Token 1172: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5821088552474976
    2. ' >=' → logprob: -1.2071088552474976
    3. '>' → logprob: -2.332108974456787
    4. ' ==' → logprob: -3.457108974456787
    5. '>=' → logprob: -4.707108974456787
    6. '==' → logprob: -5.832108974456787
    7. '   ' → logprob: -6.832108974456787
    8. ' +=' → logprob: -8.332108497619629
    9. '+' → logprob: -9.082108497619629
    10. ' +' → logprob: -9.457108497619629

Token 1173: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.008076785132288933
    2. '10' → logprob: -4.8830766677856445
    3. '500' → logprob: -8.258076667785645
    4. '200' → logprob: -8.633076667785645
    5. '300' → logprob: -11.633076667785645
    6. '999' → logprob: -11.883076667785645
    7. ' ' → logprob: -12.008076667785645
    8. '=' → logprob: -12.258076667785645
    9. '   ' → logprob: -13.008076667785645
    10. '1' → logprob: -13.133076667785645

Token 1174: '5' (ID: 20)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.011314715258777142
    2. '10' → logprob: -4.636314868927002
    3. '500' → logprob: -7.136314868927002
    4. '200' → logprob: -7.261314868927002
    5. '999' → logprob: -10.386314392089844
    6. '300' → logprob: -10.886314392089844
    7. ' ' → logprob: -13.261314392089844
    8. '=' → logprob: -13.261314392089844
    9. '600' → logprob: -13.636314392089844
    10. '1' → logprob: -13.636314392089844

Token 1175: ' *' (ID: 425)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.5606915950775146
    2. '000' → logprob: -1.1856915950775146
    3. '*' → logprob: -2.5606915950775146
    4. '0' → logprob: -3.1856915950775146
    5. ' *' → logprob: -6.310691833496094
    6. '99' → logprob: -6.435691833496094
    7. '   ' → logprob: -8.185691833496094
    8. '**' → logprob: -8.310691833496094
    9. '999' → logprob: -8.310691833496094
    10. '
' → logprob: -8.810691833496094

Token 1176: ' self' (ID: 1051)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.1519526094198227
    2. 'self' → logprob: -2.1519525051116943
    3. 'target' → logprob: -4.651952743530273
    4. 'len' → logprob: -4.901952743530273
    5. 'groups' → logprob: -6.276952743530273
    6. '10' → logprob: -6.526952743530273
    7. '200' → logprob: -6.776952743530273
    8. 'max' → logprob: -7.026952743530273
    9. '(' → logprob: -7.526952743530273
    10. '999' → logprob: -7.776952743530273

Token 1177: '.max' (ID: 11883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.274616003036499
    2. 'max' → logprob: -1.649616003036499
    3. '100' → logprob: -4.649616241455078
    4. '10' → logprob: -4.774616241455078
    5. '<|end|>' → logprob: -5.024616241455078
    6. '.max' → logprob: -5.274616241455078
    7. '9' → logprob: -5.274616241455078
    8. 'groups' → logprob: -5.774616241455078
    9. ' self' → logprob: -6.024616241455078
    10. '7' → logprob: -6.399616241455078

Token 1178: '_group' (ID: 15990)
  Prédit: '_group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -0.37978672981262207
    2. '_index' → logprob: -1.504786729812622
    3. '_groups' → logprob: -2.379786729812622
    4. '
' → logprob: -8.254786491394043
    5. 'group' → logprob: -8.504786491394043
    6. 'index' → logprob: -8.629786491394043
    7. '```' → logprob: -8.629786491394043
    8. '_indices' → logprob: -9.004786491394043
    9. '   ' → logprob: -9.379786491394043
    10. '       ' → logprob: -9.629786491394043

Token 1179: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00480758398771286
    2. 'index' → logprob: -5.504807472229004
    3. '+' → logprob: -8.504807472229004
    4. '   ' → logprob: -8.754807472229004
    5. '_count' → logprob: -9.629807472229004
    6. '
' → logprob: -9.754807472229004
    7. 'Index' → logprob: -9.879807472229004
    8. '```' → logprob: -10.379807472229004
    9. '       ' → logprob: -10.504807472229004
    10. '{
' → logprob: -10.879807472229004

Token 1180: ' +' (ID: 659)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8935918211936951
    2. ':' → logprob: -1.2685918807983398
    3. '+' → logprob: -2.01859188079834
    4. ' +' → logprob: -2.39359188079834
    5. '           ' → logprob: -2.89359188079834
    6. ' and' → logprob: -4.01859188079834
    7. '               ' → logprob: -5.01859188079834
    8. '       ' → logprob: -6.39359188079834
    9. '   ' → logprob: -6.51859188079834
    10. 'and' → logprob: -7.39359188079834

Token 1181: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.10955683141946793
    2. '50' → logprob: -2.4845569133758545
    3. '20' → logprob: -4.609556674957275
    4. '60' → logprob: -5.609556674957275
    5. '30' → logprob: -5.859556674957275
    6. '200' → logprob: -5.984556674957275
    7. '500' → logprob: -7.234556674957275
    8. ' ' → logprob: -8.109557151794434
    9. '300' → logprob: -8.859557151794434
    10. '10' → logprob: -9.234557151794434

Token 1182: '500' (ID: 3234)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.13789544999599457
    2. '50' → logprob: -2.137895345687866
    3. '20' → logprob: -4.762895584106445
    4. '30' → logprob: -6.512895584106445
    5. '200' → logprob: -8.012895584106445
    6. '10' → logprob: -8.387895584106445
    7. '500' → logprob: -8.762895584106445
    8. '60' → logprob: -9.012895584106445
    9. '17' → logprob: -11.387895584106445
    10. '300' → logprob: -11.637895584106445

Token 1183: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3248383700847626
    2. ':
' → logprob: -1.449838399887085
    3. '           ' → logprob: -3.199838399887085
    4. '+' → logprob: -7.574838161468506
    5. '               ' → logprob: -7.699838161468506
    6. '   ' → logprob: -8.074838638305664
    7. ' and' → logprob: -8.824838638305664
    8. ':return' → logprob: -9.074838638305664
    9. '          ' → logprob: -9.324838638305664
    10. '       ' → logprob: -9.574838638305664

Token 1184: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07938409596681595
    2. '           ' → logprob: -2.5793840885162354
    3. '                   ' → logprob: -8.579383850097656
    4. '       ' → logprob: -9.829383850097656
    5. '   ' → logprob: -9.954383850097656
    6. 'break' → logprob: -10.079383850097656
    7. '<|end|>' → logprob: -10.454383850097656
    8. '                       ' → logprob: -10.579383850097656
    9. ':
' → logprob: -11.079383850097656
    10. ' break' → logprob: -11.204383850097656

Token 1185: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.043475814163684845
    2. '               ' → logprob: -3.293475866317749
    3. '           ' → logprob: -5.29347562789917
    4. ' break' → logprob: -8.043476104736328
    5. 'return' → logprob: -10.293476104736328
    6. '	break' → logprob: -10.918476104736328
    7. '                   ' → logprob: -10.918476104736328
    8. '```' → logprob: -13.168476104736328
    9. '   ' → logprob: -14.043476104736328
    10. '       ' → logprob: -14.293476104736328

Token 1186: ' Should' (ID: 18057)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.050706006586551666
    2. '               ' → logprob: -3.050705909729004
    3. '           ' → logprob: -6.300705909729004
    4. 'return' → logprob: -8.925705909729004
    5. ' break' → logprob: -8.925705909729004
    6. '	break' → logprob: -11.800705909729004
    7. '                   ' → logprob: -12.550705909729004
    8. '       ' → logprob: -13.425705909729004
    9. '```' → logprob: -14.050705909729004
    10. '   ' → logprob: -14.175705909729004

Token 1187: ' never' (ID: 3779)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.06515814363956451
    2. ' break' → logprob: -3.4401581287384033
    3. '               ' → logprob: -4.065158367156982
    4. '           ' → logprob: -4.440158367156982
    5. '	break' → logprob: -7.065158367156982
    6. '
' → logprob: -7.690158367156982
    7. '                   ' → logprob: -7.815158367156982
    8. '              ' → logprob: -9.815157890319824
    9. '          ' → logprob: -10.065157890319824
    10. '                ' → logprob: -10.065157890319824

Token 1188: ' reach' (ID: 7627)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.04967520758509636
    2. 'break' → logprob: -3.174675226211548
    3. '           ' → logprob: -5.799674987792969
    4. '
' → logprob: -6.049674987792969
    5. '               ' → logprob: -7.049674987792969
    6. '_break' → logprob: -9.799674987792969
    7. '   ' → logprob: -10.049674987792969
    8. '	break' → logprob: -10.174674987792969
    9. ' be' → logprob: -10.424674987792969
    10. ' return' → logprob: -10.424674987792969

Token 1189: ' here' (ID: 2105)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.19920825958251953
    2. ' time' → logprob: -2.6992082595825195
    3. '           ' → logprob: -2.9492082595825195
    4. '               ' → logprob: -3.4492082595825195
    5. 'break' → logprob: -4.1992082595825195
    6. ' break' → logprob: -5.3242082595825195
    7. '                   ' → logprob: -5.4492082595825195
    8. '
' → logprob: -6.0742082595825195
    9. ')' → logprob: -8.19920825958252
    10. '+' → logprob: -8.32420825958252

Token 1190: ' logically' (ID: 153325)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2919754683971405
    2. '                   ' → logprob: -2.041975498199463
    3. '           ' → logprob: -2.291975498199463
    4. ':
' → logprob: -3.916975498199463
    5. 'break' → logprob: -7.416975498199463
    6. '   ' → logprob: -7.916975498199463
    7. '\n' → logprob: -7.916975498199463
    8. ':' → logprob: -7.916975498199463
    9. '
' → logprob: -8.166975021362305
    10. ' break' → logprob: -9.541975021362305

Token 1191: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024473629891872406
    2. '                   ' → logprob: -4.274473667144775
    3. ':
' → logprob: -5.149473667144775
    4. '           ' → logprob: -5.649473667144775
    5. 'break' → logprob: -7.899473667144775
    6. ' break' → logprob: -8.899473190307617
    7. '
' → logprob: -9.024473190307617
    8. ':' → logprob: -9.274473190307617
    9. '   ' → logprob: -9.524473190307617
    10. '):
' → logprob: -9.899473190307617

Token 1192: ' but' (ID: 889)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0475434809923172
    2. '           ' → logprob: -3.547543525695801
    3. '                   ' → logprob: -4.172543525695801
    4. 'break' → logprob: -6.172543525695801
    5. ' break' → logprob: -9.1725435256958
    6. '       ' → logprob: -11.5475435256958
    7. '   ' → logprob: -11.5475435256958
    8. '                       ' → logprob: -11.7975435256958
    9. '	break' → logprob: -13.5475435256958
    10. '                ' → logprob: -13.5475435256958

Token 1193: ' just' (ID: 1327)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.429459810256958
    2. '               ' → logprob: -1.179459810256958
    3. ' break' → logprob: -3.679459810256958
    4. '                   ' → logprob: -4.429459571838379
    5. '           ' → logprob: -5.429459571838379
    6. '   ' → logprob: -9.429459571838379
    7. '       ' → logprob: -10.804459571838379
    8. '	break' → logprob: -10.929459571838379
    9. 'return' → logprob: -11.554459571838379
    10. '                       ' → logprob: -12.054459571838379

Token 1194: ' a' (ID: 261)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6680009961128235
    2. 'break' → logprob: -0.9180009961128235
    3. ' break' → logprob: -2.9180009365081787
    4. '                   ' → logprob: -3.4180009365081787
    5. '           ' → logprob: -7.043001174926758
    6. '   ' → logprob: -9.293001174926758
    7. '       ' → logprob: -10.168001174926758
    8. '
' → logprob: -10.418001174926758
    9. '                       ' → logprob: -10.668001174926758
    10. '              ' → logprob: -10.668001174926758

Token 1195: ' safeguard' (ID: 85204)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.000782826216891408
    2. ' break' → logprob: -7.2507829666137695
    3. '   ' → logprob: -10.25078296661377
    4. '           ' → logprob: -11.37578296661377
    5. 'return' → logprob: -11.75078296661377
    6. '       ' → logprob: -11.87578296661377
    7. 'raise' → logprob: -12.75078296661377
    8. 's' → logprob: -13.00078296661377
    9. 'pass' → logprob: -13.62578296661377
    10. '               ' → logprob: -13.62578296661377

Token 1196: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9486194849014282
    2. '           ' → logprob: -1.1986194849014282
    3. '                   ' → logprob: -1.8236194849014282
    4. ':
' → logprob: -2.0736193656921387
    5. '
' → logprob: -4.323619365692139
    6. '   ' → logprob: -5.698619365692139
    7. '):
' → logprob: -6.198619365692139
    8. ':' → logprob: -6.573619365692139
    9. '\n' → logprob: -6.823619365692139
    10. '            
' → logprob: -7.198619365692139

Token 1197: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34766334295272827
    2. '               ' → logprob: -1.472663402557373
    3. '
' → logprob: -3.472663402557373
    4. '                   ' → logprob: -3.597663402557373
    5. '   ' → logprob: -6.347663402557373
    6. '            
' → logprob: -6.472663402557373
    7. '\n' → logprob: -6.972663402557373
    8. '```' → logprob: -8.347662925720215
    9. 'break' → logprob: -8.472662925720215
    10. ':
' → logprob: -8.722662925720215

Token 1198: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.15374690294265747
    2. '               ' → logprob: -2.6537468433380127
    3. ' break' → logprob: -2.6537468433380127
    4. '           ' → logprob: -6.653747081756592
    5. 'return' → logprob: -7.778747081756592
    6. '	break' → logprob: -11.653746604919434
    7. '                   ' → logprob: -11.653746604919434
    8. '   ' → logprob: -12.403746604919434
    9. ' return' → logprob: -12.903746604919434
    10. '```' → logprob: -13.528746604919434

Token 1199: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40591302514076233
    2. '
' → logprob: -1.28091299533844
    3. '       ' → logprob: -3.9059131145477295
    4. '\n' → logprob: -4.15591287612915
    5. '   ' → logprob: -5.15591287612915
    6. '    
' → logprob: -5.65591287612915
    7. '<|end|>' → logprob: -6.03091287612915
    8. '        
' → logprob: -6.15591287612915
    9. '<|end|>' → logprob: -6.28091287612915
    10. '            
' → logprob: -6.28091287612915

Token 1200: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1020369827747345
    2. '
' → logprob: -2.727036952972412
    3. '       ' → logprob: -3.852036952972412
    4. '   ' → logprob: -4.727036952972412
    5. '\n' → logprob: -7.477036952972412
    6. 'time' → logprob: -7.727036952972412
    7. '    
' → logprob: -8.85203742980957
    8. '            
' → logprob: -9.10203742980957
    9. '        
' → logprob: -9.60203742980957
    10. '```' → logprob: -9.72703742980957

Token 1201: ' time' (ID: 1058)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5167921781539917
    2. 'time' (adapté à ' time') → logprob: -1.1417921781539917
    3. '           ' → logprob: -2.7667922973632812
    4. ' time' → logprob: -4.391792297363281
    5. '   ' → logprob: -5.266792297363281
    6. '    
' → logprob: -7.016792297363281
    7. '\n' → logprob: -7.016792297363281
    8. '       ' → logprob: -7.141792297363281
    9. '            
' → logprob: -7.891792297363281
    10. '	time' → logprob: -8.141792297363281

Token 1202: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008627340197563171
    2. ' +=' → logprob: -4.758627414703369
    3. '+' → logprob: -11.758626937866211
    4. '=' → logprob: -12.258626937866211
    5. ']+=' → logprob: -16.38362693786621
    6. '```' → logprob: -17.25862693786621
    7. '   ' → logprob: -17.63362693786621
    8. '           ' → logprob: -17.75862693786621
    9. '+="' → logprob: -18.13362693786621
    10. '+
' → logprob: -18.13362693786621

Token 1203: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '   ' → logprob: -21.0
    4. '```' → logprob: -22.0
    5. '
' → logprob: -23.0
    6. '+' → logprob: -23.5
    7. '１' → logprob: -24.0
    8. '       ' → logprob: -24.375
    9. '  ' → logprob: -25.25
    10. ' ' → logprob: -25.5

Token 1204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -20.5
    3. '   ' → logprob: -22.875
    4. '```' → logprob: -23.375
    5. '１' → logprob: -24.75
    6. '
' → logprob: -25.0
    7. '0' → logprob: -25.625
    8. '+' → logprob: -25.625
    9. '۱' → logprob: -26.0
    10. '01' → logprob: -26.25

Token 1205: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43529507517814636
    2. 'return' → logprob: -1.3102951049804688
    3. '<|end|>' → logprob: -2.5602951049804688
    4. '
' → logprob: -5.810295104980469
    5. ' return' → logprob: -6.435295104980469
    6. '   ' → logprob: -8.060295104980469
    7. '<|end|>' → logprob: -8.435295104980469
    8. '	return' → logprob: -9.060295104980469
    9. 'self' → logprob: -9.060295104980469
    10. '	' → logprob: -9.435295104980469

Token 1207: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.303928017616272
    2. '<|end|>' → logprob: -1.928928017616272
    3. 'return' → logprob: -2.1789278984069824
    4. ' return' → logprob: -6.428927898406982
    5. '
' → logprob: -7.428927898406982
    6. 'self' → logprob: -7.803927898406982
    7. '   ' → logprob: -8.55392837524414
    8. '<|end|>' → logprob: -8.67892837524414
    9. '```' → logprob: -8.80392837524414
    10. ')return' → logprob: -9.30392837524414

Token 1208: ' Calculate' (ID: 38942)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04993448406457901
    2. '       ' → logprob: -3.0499343872070312
    3. 'wait' → logprob: -7.424934387207031
    4. ' return' → logprob: -7.799934387207031
    5. 'group' → logprob: -9.299934387207031
    6. '   ' → logprob: -9.299934387207031
    7. 'self' → logprob: -9.674934387207031
    8. 'target' → logprob: -9.924934387207031
    9. 'waiting' → logprob: -11.299934387207031
    10. 'result' → logprob: -11.924934387207031

Token 1209: ' wait' (ID: 5238)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -0.13227377831935883
    2. 'se' → logprob: -2.5072736740112305
    3. 'self' → logprob: -4.6322736740112305
    4. '       ' → logprob: -4.7572736740112305
    5. ' wait' → logprob: -5.2572736740112305
    6. 'waiting' → logprob: -5.3822736740112305
    7. '   ' → logprob: -5.5072736740112305
    8. 'target' → logprob: -5.6322736740112305
    9. 'return' → logprob: -6.1322736740112305
    10. 'result' → logprob: -6.5072736740112305

Token 1210: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.029073337092995644
    2. 'time' → logprob: -4.279073238372803
    3. 'ing' → logprob: -4.904073238372803
    4. '       ' → logprob: -5.654073238372803
    5. '_times' → logprob: -6.404073238372803
    6. '_queue' → logprob: -6.904073238372803
    7. '_wait' → logprob: -7.654073238372803
    8. ' =' → logprob: -8.029073715209961
    9. '=' → logprob: -9.029073715209961
    10. '   ' → logprob: -9.404073715209961

Token 1211: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24018800258636475
    2. 'wait' → logprob: -1.8651880025863647
    3. 'return' → logprob: -2.9901881217956543
    4. 'group' → logprob: -4.990188121795654
    5. 'g' → logprob: -7.740188121795654
    6. 'target' → logprob: -7.990188121795654
    7. 'waiting' → logprob: -8.615187644958496
    8. ' wait' → logprob: -8.740187644958496
    9. 'for' → logprob: -8.865187644958496
    10. '   ' → logprob: -9.365187644958496

Token 1212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03518157824873924
    2. 'for' → logprob: -3.7851815223693848
    3. 'return' → logprob: -4.785181522369385
    4. 'wait' → logprob: -6.910181522369385
    5. 'group' → logprob: -7.035181522369385
    6. 'target' → logprob: -7.160181522369385
    7. ' for' → logprob: -7.660181522369385
    8. 'groups' → logprob: -9.410181999206543
    9. '   ' → logprob: -9.785181999206543
    10. 'g' → logprob: -10.035181999206543

Token 1213: ' target' (ID: 3783)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.35134631395339966
    2. 'target' (adapté à ' target') → logprob: -1.3513462543487549
    3. 'group' → logprob: -4.101346492767334
    4. '       ' → logprob: -4.226346492767334
    5. 'wait' → logprob: -5.726346492767334
    6. 'g' → logprob: -6.601346492767334
    7. 'self' → logprob: -6.851346492767334
    8. 'result' → logprob: -8.226346015930176
    9. 'waiting' → logprob: -8.851346015930176
    10. 'for' → logprob: -9.601346015930176

Token 1214: '_group' (ID: 15990)
  Prédit: '_group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -0.39577433466911316
    2. '_time' → logprob: -1.1457743644714355
    3. '_wait' → logprob: -4.8957743644714355
    4. '_' → logprob: -7.7707743644714355
    5. 'group' → logprob: -8.020773887634277
    6. 'time' → logprob: -8.770773887634277
    7. ' =' → logprob: -9.020773887634277
    8. '_g' → logprob: -9.520773887634277
    9. '_target' → logprob: -10.020773887634277
    10. '=' → logprob: -10.020773887634277

Token 1215: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12985023856163025
    2. '=' → logprob: -2.754850149154663
    3. '.wait' → logprob: -3.129850149154663
    4. '.' → logprob: -5.629850387573242
    5. '       ' → logprob: -5.879850387573242
    6. '_wait' → logprob: -5.879850387573242
    7. 'wait' → logprob: -6.629850387573242
    8. '.target' → logprob: -7.379850387573242
    9. '```' → logprob: -7.504850387573242
    10. '[target' → logprob: -8.129850387573242

Token 1216: ' groups' (ID: 8896)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0026295194402337074
    2. ' self' → logprob: -6.12762975692749
    3. 'groups' → logprob: -7.75262975692749
    4. ' groups' → logprob: -11.752629280090332
    5. '       ' → logprob: -12.002629280090332
    6. '   ' → logprob: -14.502629280090332
    7. 'group' → logprob: -16.50263023376465
    8. '	self' → logprob: -17.75263023376465
    9. '(self' → logprob: -17.75263023376465
    10. '`' → logprob: -17.87763023376465

Token 1217: '[target' (ID: 123448)
  Prédit: '[target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[target' → logprob: -2.951771421066951e-05
    2. '[self' → logprob: -10.875029563903809
    3. '[' → logprob: -11.750029563903809
    4. 'target' → logprob: -13.125029563903809
    5. '[token' → logprob: -15.750029563903809
    6. '[next' → logprob: -15.750029563903809
    7. '[
' → logprob: -17.000028610229492
    8. '[t' → logprob: -17.250028610229492
    9. '       ' → logprob: -17.375028610229492
    10. ' [' → logprob: -17.500028610229492

Token 1218: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0003564383659977466
    2. '[target' → logprob: -8.500356674194336
    3. 'index' → logprob: -9.625356674194336
    4. '_target' → logprob: -10.125356674194336
    5. 'target' → logprob: -10.750356674194336
    6. '[' → logprob: -12.250356674194336
    7. '[index' → logprob: -12.250356674194336
    8. '_token' → logprob: -12.625356674194336
    9. '(target' → logprob: -12.750356674194336
    10. ']' → logprob: -12.875356674194336

Token 1219: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.13734744489192963
    2. '       ' → logprob: -3.137347459793091
    3. '[target' → logprob: -3.762347459793091
    4. '].' → logprob: -3.887347459793091
    5. ']' → logprob: -3.887347459793091
    6. '
' → logprob: -4.262347221374512
    7. ')
' → logprob: -5.887347221374512
    8. '][' → logprob: -6.512347221374512
    9. '   ' → logprob: -7.262347221374512
    10. '           ' → logprob: -7.887347221374512

Token 1220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48330360651016235
    2. 'return' → logprob: -0.9833036065101624
    3. ' return' → logprob: -4.733303546905518
    4. 'target' → logprob: -8.233304023742676
    5. 'wait' → logprob: -9.483304023742676
    6. '   ' → logprob: -10.608304023742676
    7. ' wait' → logprob: -12.233304023742676
    8. '
' → logprob: -12.858304023742676
    9. ' target' → logprob: -12.858304023742676
    10. 'self' → logprob: -12.983304023742676

Token 1221: ' wait' (ID: 5238)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01261372584849596
    2. 'target' → logprob: -5.012613773345947
    3. ' return' → logprob: -5.762613773345947
    4. 'wait' (adapté à ' wait') → logprob: -6.262613773345947
    5. '       ' → logprob: -7.137613773345947
    6. ' wait' → logprob: -11.262613296508789
    7. '   ' → logprob: -11.262613296508789
    8. ' target' → logprob: -12.012613296508789
    9. 'result' → logprob: -13.137613296508789
    10. '```' → logprob: -13.512613296508789

Token 1222: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.001038883114233613
    2. 'time' → logprob: -7.376039028167725
    3. '_' → logprob: -8.376038551330566
    4. ' =' → logprob: -9.001038551330566
    5. '=' → logprob: -10.126038551330566
    6. '=_' → logprob: -11.626038551330566
    7. '_times' → logprob: -12.876038551330566
    8. '=time' → logprob: -13.376038551330566
    9. '   ' → logprob: -13.751038551330566
    10. '       ' → logprob: -14.126038551330566

Token 1223: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07031818479299545
    2. '=' → logprob: -2.6953182220458984
    3. '<|end|>' → logprob: -9.070318222045898
    4. '       ' → logprob: -9.195318222045898
    5. ' +=' → logprob: -10.195318222045898
    6. '        ' → logprob: -10.445318222045898
    7. '[' → logprob: -10.570318222045898
    8. '```' → logprob: -10.570318222045898
    9. '<|end|>' → logprob: -11.945318222045898
    10. '=
' → logprob: -12.070318222045898

Token 1224: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.00671584764495492
    2. ' target' → logprob: -5.006715774536133
    3. '(target' → logprob: -14.631715774536133
    4. '   ' → logprob: -18.756715774536133
    5. '	target' → logprob: -20.631715774536133
    6. 'time' → logprob: -20.756715774536133
    7. ' (' → logprob: -20.881715774536133
    8. '       ' → logprob: -21.006715774536133
    9. '
' → logprob: -21.006715774536133
    10. 'max' → logprob: -21.506715774536133

Token 1225: '_group' (ID: 15990)
  Prédit: '_group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -0.03804665803909302
    2. '_time' → logprob: -3.2880465984344482
    3. 'time' → logprob: -13.038046836853027
    4. 'group' → logprob: -13.288046836853027
    5. '_' → logprob: -14.913046836853027
    6. '_groups' → logprob: -15.038046836853027
    7. '```' → logprob: -15.663046836853027
    8. '_target' → logprob: -16.41304588317871
    9. '=' → logprob: -16.53804588317871
    10. '_space' → logprob: -17.16304588317871

Token 1226: '.se' (ID: 5877)
  Prédit: '.se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.se' → logprob: -0.06211881712079048
    2. '.wait' → logprob: -2.8121187686920166
    3. 'wait' → logprob: -9.812118530273438
    4. ' .' → logprob: -10.062118530273438
    5. '.' → logprob: -10.187118530273438
    6. 'se' → logprob: -12.312118530273438
    7. '_wait' → logprob: -13.187118530273438
    8. '```' → logprob: -13.312118530273438
    9. '.s' → logprob: -13.812118530273438
    10. '	se' → logprob: -13.937118530273438

Token 1227: 'ated' (ID: 780)
  Prédit: 'ated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ated' → logprob: -1.0921942703134846e-05
    2. 'atted' → logprob: -12.37501049041748
    3. 'at' → logprob: -12.62501049041748
    4. 'ATED' → logprob: -14.75001049041748
    5. 'a' → logprob: -15.25001049041748
    6. 't' → logprob: -15.37501049041748
    7. 'ed' → logprob: -15.62501049041748
    8. ' at' → logprob: -15.87501049041748
    9. '_at' → logprob: -15.87501049041748
    10. 'ate' → logprob: -16.125011444091797

Token 1228: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.9361264946837764e-07
    2. 'time' → logprob: -16.5
    3. ' _' → logprob: -19.0
    4. '_wait' → logprob: -20.0
    5. 'Time' → logprob: -20.25
    6. '_' → logprob: -20.25
    7. '```' → logprob: -20.25
    8. '_TIME' → logprob: -20.375
    9. '\' → logprob: -20.5
    10. '=_' → logprob: -21.25

Token 1229: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06521498411893845
    2. '-' → logprob: -2.8152148723602295
    3. '<|end|>' → logprob: -5.815215110778809
    4. '[' → logprob: -9.565215110778809
    5. ')' → logprob: -9.690215110778809
    6. '<|end|>' → logprob: -10.315215110778809
    7. '+' → logprob: -11.315215110778809
    8. ' ' → logprob: -11.565215110778809
    9. '
' → logprob: -11.690215110778809
    10. '-
' → logprob: -11.815215110778809

Token 1230: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -7.493430894101039e-05
    2. ' target' → logprob: -9.500075340270996
    3. '(target' → logprob: -18.37507438659668
    4. '	target' → logprob: -18.50007438659668
    5. '[target' → logprob: -19.00007438659668
    6. '   ' → logprob: -20.00007438659668
    7. '       ' → logprob: -20.50007438659668
    8. '_target' → logprob: -20.87507438659668
    9. '.target' → logprob: -21.00007438659668
    10. 'taget' → logprob: -21.25007438659668

Token 1231: '_group' (ID: 15990)
  Prédit: '_group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -0.0006641837535426021
    2. '_time' → logprob: -7.500664234161377
    3. 'group' → logprob: -10.000663757324219
    4. '_target' → logprob: -10.250663757324219
    5. 'target' → logprob: -11.375663757324219
    6. '_index' → logprob: -11.750663757324219
    7. 'arr' → logprob: -12.625663757324219
    8. '_arr' → logprob: -12.625663757324219
    9. 'time' → logprob: -13.500663757324219
    10. 'Group' → logprob: -14.000663757324219

Token 1232: '.arr' (ID: 76200)
  Prédit: '.arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.arr' → logprob: -4.9424725148128346e-05
    2. 'arrival' → logprob: -10.000049591064453
    3. ' .' → logprob: -13.250049591064453
    4. '.wait' → logprob: -14.000049591064453
    5. '.' → logprob: -14.750049591064453
    6. 'arr' → logprob: -15.375049591064453
    7. '_arr' → logprob: -15.375049591064453
    8. '[arr' → logprob: -15.625049591064453
    9. '.Arr' → logprob: -15.750049591064453
    10. '```' → logprob: -16.750049591064453

Token 1233: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -1.0280383548888494e-06
    2. 'IVAL' → logprob: -14.625000953674316
    3. 'ivals' → logprob: -15.125000953674316
    4. 'iva' → logprob: -15.625000953674316
    5. ' ' → logprob: -16.250001907348633
    6. 'iv' → logprob: -17.250001907348633
    7. 'ived' → logprob: -17.875001907348633
    8. 'val' → logprob: -18.250001907348633
    9. 'ivalent' → logprob: -18.875001907348633
    10. 'ivial' → logprob: -19.250001907348633

Token 1234: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5452530384063721
    2. '<|end|>' → logprob: -0.9202530384063721
    3. '
' → logprob: -4.295252799987793
    4. 'return' → logprob: -5.295252799987793
    5. '<|end|>' → logprob: -7.170252799987793
    6. '   ' → logprob: -7.545252799987793
    7. ' return' → logprob: -7.670252799987793
    8. ')' → logprob: -7.795252799987793
    9. '           ' → logprob: -8.420252799987793
    10. '        ' → logprob: -9.045252799987793

Token 1235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017483975738286972
    2. 'return' → logprob: -4.142484188079834
    3. ' return' → logprob: -6.892484188079834
    4. '<|end|>' → logprob: -8.517483711242676
    5. '   ' → logprob: -8.767483711242676
    6. '           ' → logprob: -11.017483711242676
    7. '
' → logprob: -11.267483711242676
    8. '	return' → logprob: -11.642483711242676
    9. '```' → logprob: -12.017483711242676
    10. '{return' → logprob: -12.517483711242676

Token 1236: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25313425064086914
    2. 'return' (adapté à ' return') → logprob: -1.5031342506408691
    3. ' return' → logprob: -6.753134250640869
    4. '   ' → logprob: -10.503133773803711
    5. '	return' → logprob: -12.503133773803711
    6. '{return' → logprob: -13.378133773803711
    7. '           ' → logprob: -13.753133773803711
    8. '	' → logprob: -13.878133773803711
    9. '<|end|>' → logprob: -14.128133773803711
    10. '```' → logprob: -14.878133773803711

Token 1237: ' wait' (ID: 5238)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -9.615255839889869e-05
    2. ' wait' → logprob: -9.250096321105957
    3. '(wait' → logprob: -20.50009536743164
    4. '	wait' → logprob: -21.12509536743164
    5. 'waiting' → logprob: -22.62509536743164
    6. '```' → logprob: -23.00009536743164
    7. 'Wait' → logprob: -23.87509536743164
    8. '_wait' → logprob: -24.12509536743164
    9. 'w' → logprob: -24.25009536743164
    10. 'int' → logprob: -24.62509536743164

Token 1238: '_time' (ID: 6425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1239: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1240: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1241: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4608280658721924
    2. ' test' → logprob: -1.4608280658721924
    3. ' simulate' → logprob: -3.3358280658721924
    4. 'main' → logprob: -3.5858280658721924
    5. 'simulate' → logprob: -3.5858280658721924
    6. ' run' → logprob: -4.210827827453613
    7. 'test' → logprob: -4.460827827453613
    8. ' seating' → logprob: -5.585827827453613
    9. ' example' → logprob: -5.710827827453613
    10. ' solve' → logprob: -6.210827827453613

Token 1242: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0011934408685192466
    2. '():
' → logprob: -6.751193523406982
    3. '()' → logprob: -11.001193046569824
    4. ' ():' → logprob: -12.626193046569824
    5. '():
' → logprob: -13.126193046569824
    6. '().' → logprob: -15.001193046569824
    7. '():

' → logprob: -15.251193046569824
    8. '().__' → logprob: -15.251193046569824
    9. '()>' → logprob: -16.25119400024414
    10. ':' → logprob: -16.37619400024414

Token 1243: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024357879534363747
    2. '```' → logprob: -4.649357795715332
    3. 'import' → logprob: -5.274357795715332
    4. ' groups' → logprob: -5.399357795715332
    5. 'groups' → logprob: -6.524357795715332
    6. 'def' → logprob: -6.524357795715332
    7. ' if' → logprob: -7.649357795715332
    8. '(groups' → logprob: -7.899357795715332
    9. ' for' → logprob: -8.024357795715332
    10. ' import' → logprob: -8.274357795715332

Token 1244: ' import' (ID: 1588)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -1.217186689376831
    2. '   ' → logprob: -1.342186689376831
    3. 'groups' → logprob: -1.717186689376831
    4. 'q' → logprob: -2.467186689376831
    5. 'queue' → logprob: -2.717186689376831
    6. 'import' (adapté à ' import') → logprob: -3.467186689376831
    7. 'system' → logprob: -3.717186689376831
    8. ' groups' → logprob: -3.842186689376831
    9. ' system' → logprob: -4.46718692779541
    10. 'sys' → logprob: -4.71718692779541

Token 1245: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -7.703443770878948e-06
    2. 'random' → logprob: -12.500007629394531
    3. 'heap' → logprob: -13.125007629394531
    4. 'datetime' → logprob: -14.375007629394531
    5. 'time' → logprob: -14.625007629394531
    6. ' sys' → logprob: -14.750007629394531
    7. 'math' → logprob: -14.875007629394531
    8. '=sys' → logprob: -16.25000762939453
    9. 'collections' → logprob: -18.62500762939453
    10. '```' → logprob: -19.75000762939453

Token 1246: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4082808792591095
    2. '   ' → logprob: -1.283280849456787
    3. 'input' → logprob: -3.783280849456787
    4. 'for' → logprob: -4.283280849456787
    5. ' for' → logprob: -4.908280849456787
    6. '    
' → logprob: -5.533280849456787
    7. ' lines' → logprob: -5.908280849456787
    8. ' input' → logprob: -6.158280849456787
    9. 'args' → logprob: -6.908280849456787
    10. 'import' → logprob: -7.158280849456787

Token 1247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24231617152690887
    2. 'input' → logprob: -1.9923161268234253
    3. 'for' → logprob: -3.242316246032715
    4. 'data' → logprob: -4.992316246032715
    5. ' for' → logprob: -4.992316246032715
    6. 'args' → logprob: -5.117316246032715
    7. 'if' → logprob: -5.367316246032715
    8. '
' → logprob: -5.492316246032715
    9. ' input' → logprob: -5.992316246032715
    10. ' lines' → logprob: -6.617316246032715

Token 1248: ' input' (ID: 3422)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.8251904845237732
    2. 'for' → logprob: -1.200190544128418
    3. 'input' (adapté à ' input') → logprob: -2.075190544128418
    4. '   ' → logprob: -2.575190544128418
    5. 'if' → logprob: -3.575190544128418
    6. 'argv' → logprob: -4.825190544128418
    7. 'lines' → logprob: -5.075190544128418
    8. 'n' → logprob: -5.325190544128418
    9. 'groups' → logprob: -5.700190544128418
    10. 'line' → logprob: -6.075190544128418

Token 1249: '_lines' (ID: 42980)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.5991383790969849
    2. '()' → logprob: -0.8491383790969849
    3. '().' → logprob: -4.974138259887695
    4. '.' → logprob: -5.599138259887695
    5. '_' → logprob: -5.724138259887695
    6. '_data' → logprob: -5.724138259887695
    7. '=' → logprob: -6.349138259887695
    8. 'line' → logprob: -6.474138259887695
    9. '.readline' → logprob: -7.349138259887695
    10. ' =' → logprob: -7.474138259887695

Token 1250: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11501244455575943
    2. ' =' → logprob: -2.2400124073028564
    3. '()' → logprob: -6.4900126457214355
    4. '   ' → logprob: -8.115012168884277
    5. '=[]' → logprob: -9.115012168884277
    6. '=[]
' → logprob: -9.865012168884277
    7. '[' → logprob: -10.240012168884277
    8. '(' → logprob: -10.490012168884277
    9. '[]' → logprob: -10.990012168884277
    10. '()
' → logprob: -11.365012168884277

Token 1251: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.003178544342517853
    2. ' sys' → logprob: -5.753178596496582
    3. '[' → logprob: -14.253178596496582
    4. '=sys' → logprob: -16.128177642822266
    5. '(sys' → logprob: -17.503177642822266
    6. '	sys' → logprob: -17.753177642822266
    7. 'list' → logprob: -18.378177642822266
    8. ' [' → logprob: -18.878177642822266
    9. '[]' → logprob: -19.253177642822266
    10. '```' → logprob: -19.753177642822266

Token 1252: '.stdin' (ID: 93480)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6158410310745239
    2. ' =' → logprob: -0.9908410310745239
    3. '.readlines' → logprob: -4.115840911865234
    4. '.stdin' → logprob: -4.490840911865234
    5. '=sys' → logprob: -4.615840911865234
    6. '=' → logprob: -4.865840911865234
    7. '.readline' → logprob: -5.115840911865234
    8. '.read' → logprob: -5.115840911865234
    9. 'ort' → logprob: -5.865840911865234
    10. '(stdin' → logprob: -5.990840911865234

Token 1253: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0709366723895073
    2. 'read' → logprob: -3.070936679840088
    3. '.readlines' → logprob: -4.070936679840088
    4. ' =' → logprob: -6.070936679840088
    5. '().' → logprob: -6.945936679840088
    6. '=' → logprob: -7.320936679840088
    7. '.read' → logprob: -7.320936679840088
    8. '.' → logprob: -8.57093620300293
    9. '()' → logprob: -9.69593620300293
    10. 'lines' → logprob: -9.94593620300293

Token 1254: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0052625760436058044
    2. '()' → logprob: -5.25526237487793
    3. '()
' → logprob: -10.88026237487793
    4. 'lines' → logprob: -12.75526237487793
    5. '_lines' → logprob: -13.38026237487793
    6. 'split' → logprob: -13.50526237487793
    7. '.split' → logprob: -13.75526237487793
    8. '()\' → logprob: -14.13026237487793
    9. '()

' → logprob: -14.38026237487793
    10. '_line' → logprob: -15.13026237487793

Token 1255: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.03389187529683113
    2. 'strip' → logprob: -3.5338919162750244
    3. 'read' → logprob: -5.533891677856445
    4. 'decode' → logprob: -8.783891677856445
    5. 'lines' → logprob: -11.033891677856445
    6. 'rstrip' → logprob: -11.283891677856445
    7. ' split' → logprob: -15.658891677856445
    8. 'replace' → logprob: -16.283891677856445
    9. '(split' → logprob: -17.158891677856445
    10. '```' → logprob: -17.783891677856445

Token 1256: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.0033853515051305e-05
    2. '()' → logprob: -10.125060081481934
    3. '()
' → logprob: -11.750060081481934
    4. '.split' → logprob: -12.250060081481934
    5. 'split' → logprob: -12.750060081481934
    6. '('\' → logprob: -12.875060081481934
    7. '()\' → logprob: -13.625060081481934
    8. 'lines' → logprob: -15.625060081481934
    9. '```' → logprob: -16.000059127807617
    10. '_lines' → logprob: -16.125059127807617

Token 1257: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.0
    3. '(split' → logprob: -17.5
    4. 'lines' → logprob: -20.375
    5. 'spl' → logprob: -20.375
    6. '.split' → logprob: -22.125
    7. '_split' → logprob: -22.5
    8. 's' → logprob: -22.875
    9. '```' → logprob: -23.125
    10. 'plit' → logprob: -23.625

Token 1258: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4356704652309418
    2. '('\' → logprob: -1.0606704950332642
    3. 'lines' → logprob: -6.185670375823975
    4. '()\' → logprob: -6.310670375823975
    5. '(' → logprob: -7.060670375823975
    6. '()[' → logprob: -7.185670375823975
    7. '('' → logprob: -7.310670375823975
    8. '()
' → logprob: -7.810670375823975
    9. '("\' → logprob: -8.435670852661133
    10. '('_' → logprob: -10.310670852661133

Token 1259: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.9875325708417222e-05
    2. '\n' → logprob: -10.625029563903809
    3. 'lines' → logprob: -12.625029563903809
    4. '
' → logprob: -14.125029563903809
    5. ''\' → logprob: -14.125029563903809
    6. 'newline' → logprob: -14.500029563903809
    7. '```' → logprob: -16.750030517578125
    8. 'input' → logprob: -17.000030517578125
    9. '"\' → logprob: -17.875030517578125
    10. 'nl' → logprob: -18.000030517578125

Token 1260: '')
' (ID: 2515)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03856373950839043
    2. 'for' → logprob: -3.4135637283325195
    3. '')
' → logprob: -6.4135637283325195
    4. ')
' → logprob: -6.9135637283325195
    5. '')' → logprob: -7.2885637283325195
    6. ')' → logprob: -7.2885637283325195
    7. 'if' → logprob: -7.9135637283325195
    8. ' for' → logprob: -7.9135637283325195
    9. 'n' → logprob: -10.16356372833252
    10. 'input' → logprob: -10.28856372833252

Token 1261: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09872619062662125
    2. 'n' → logprob: -3.223726272583008
    3. '   ' → logprob: -3.598726272583008
    4. 'q' → logprob: -4.223726272583008
    5. 'queries' → logprob: -4.848726272583008
    6. 'query' → logprob: -6.473726272583008
    7. 't' → logprob: -6.598726272583008
    8. 'Q' → logprob: -7.598726272583008
    9. 'num' → logprob: -8.098726272583008
    10. ' for' → logprob: -8.223726272583008

Token 1262: ' qs' (ID: 75083)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4830544888973236
    2. 'for' → logprob: -1.108054518699646
    3. 't' → logprob: -3.6080543994903564
    4. 'q' → logprob: -4.7330546379089355
    5. 'num' → logprob: -4.9830546379089355
    6. '   ' → logprob: -5.9830546379089355
    7. 'target' → logprob: -6.1080546379089355
    8. 'Q' → logprob: -6.6080546379089355
    9. 'queries' → logprob: -6.9830546379089355
    10. 'T' → logprob: -7.4830546379089355

Token 1263: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01576710119843483
    2. '   ' → logprob: -4.7657670974731445
    3. '=' → logprob: -5.0157670974731445
    4. '       ' → logprob: -8.390767097473145
    5. '_index' → logprob: -9.265767097473145
    6. '_idx' → logprob: -9.515767097473145
    7. 'for' → logprob: -10.140767097473145
    8. 'idx' → logprob: -11.265767097473145
    9. 'u' → logprob: -11.765767097473145
    10. '  ' → logprob: -12.265767097473145

Token 1264: ' Queue' (ID: 35581)
  Prédit: 'Queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Queue' → logprob: -5.836499985889532e-05
    2. ' Queue' → logprob: -9.7500581741333
    3. 'Query' → logprob: -19.000059127807617
    4. 'Que' → logprob: -19.250059127807617
    5. '_queue' → logprob: -19.875059127807617
    6. '.Queue' → logprob: -20.625059127807617
    7. 'queue' → logprob: -21.000059127807617
    8. '   ' → logprob: -21.250059127807617
    9. '_QUEUE' → logprob: -21.375059127807617
    10. 'Q' → logprob: -21.625059127807617

Token 1265: 'System' (ID: 3320)
  Prédit: 'System'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -3.650518920039758e-06
    2. 'Systems' → logprob: -12.875003814697266
    3. '.System' → logprob: -14.875003814697266
    4. '<System' → logprob: -15.000003814697266
    5. 'system' → logprob: -16.250003814697266
    6. '.' → logprob: -16.250003814697266
    7. ' System' → logprob: -17.000003814697266
    8. '_system' → logprob: -17.125003814697266
    9. '(System' → logprob: -17.250003814697266
    10. '   ' → logprob: -17.500003814697266

Token 1266: '()
' (ID: 1234)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0074160173535346985
    2. '   ' → logprob: -5.507416248321533
    3. '
' → logprob: -6.632416248321533
    4. ' for' → logprob: -7.257416248321533
    5. 'n' → logprob: -7.632416248321533
    6. 'target' → logprob: -8.132415771484375
    7. 'idx' → logprob: -8.757415771484375
    8. 'i' → logprob: -9.257415771484375
    9. 'index' → logprob: -9.757415771484375
    10. 'query' → logprob: -10.132415771484375

Token 1267: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006820747163146734
    2. '   ' → logprob: -5.1318206787109375
    3. 'query' → logprob: -8.256820678710938
    4. 'target' → logprob: -8.256820678710938
    5. ' for' → logprob: -8.631820678710938
    6. 'queries' → logprob: -9.756820678710938
    7. 'index' → logprob: -10.131820678710938
    8. 'targets' → logprob: -10.756820678710938
    9. 'n' → logprob: -11.006820678710938
    10. 'i' → logprob: -11.131820678710938

Token 1268: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002303816145285964
    2. 'target' → logprob: -6.252303600311279
    3. 'queries' → logprob: -9.127304077148438
    4. 'query' → logprob: -9.252304077148438
    5. 'q' → logprob: -9.877304077148438
    6. 't' → logprob: -10.127304077148438
    7. 'targets' → logprob: -10.877304077148438
    8. 'n' → logprob: -11.002304077148438
    9. 'k' → logprob: -11.127304077148438
    10. 'idx' → logprob: -11.252304077148438

Token 1269: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.011990342289209366
    2. ' line' → logprob: -4.511990547180176
    3. 'i' → logprob: -7.011990547180176
    4. ' i' → logprob: -10.636990547180176
    5. 'idx' → logprob: -11.886990547180176
    6. 'index' → logprob: -12.011990547180176
    7. 'q' → logprob: -13.636990547180176
    8. ' idx' → logprob: -14.261990547180176
    9. 'query' → logprob: -14.511990547180176
    10. 't' → logprob: -14.886990547180176

Token 1270: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002395748160779476
    2. '       ' → logprob: -6.5023956298828125
    3. 'in' → logprob: -7.3773956298828125
    4. '   ' → logprob: -9.002395629882812
    5. ',' → logprob: -10.752395629882812
    6. ':
' → logprob: -10.752395629882812
    7. '():
' → logprob: -10.752395629882812
    8. ':' → logprob: -11.377395629882812
    9. ' =' → logprob: -11.502395629882812
    10. '_' → logprob: -12.377395629882812

Token 1271: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006728161126375198
    2. ' input' → logprob: -5.006728172302246
    3. 'range' → logprob: -12.006728172302246
    4. 'line' → logprob: -12.381728172302246
    5. 'sys' → logprob: -13.381728172302246
    6. 'in' → logprob: -14.631728172302246
    7. '<input' → logprob: -15.631728172302246
    8. ' range' → logprob: -16.13172721862793
    9. ' sys' → logprob: -16.63172721862793
    10. '(input' → logprob: -16.75672721862793

Token 1272: '_lines' (ID: 42980)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7968190312385559
    2. '().' → logprob: -1.2968189716339111
    3. '_lines' → logprob: -2.171818971633911
    4. '_line' → logprob: -2.921818971633911
    5. '   ' → logprob: -3.546818971633911
    6. '():
' → logprob: -4.04681921005249
    7. 'line' → logprob: -4.04681921005249
    8. 'in' → logprob: -4.54681921005249
    9. '()' → logprob: -4.67181921005249
    10. '.readline' → logprob: -5.04681921005249

Token 1273: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26658758521080017
    2. ':' → logprob: -1.5165876150131226
    3. ':
' → logprob: -4.641587734222412
    4. '   ' → logprob: -6.766587734222412
    5. ' if' → logprob: -7.141587734222412
    6. ',' → logprob: -7.391587734222412
    7. '():
' → logprob: -8.016587257385254
    8. '():' → logprob: -8.141587257385254
    9. ' =' → logprob: -8.391587257385254
    10. '<|end|>' → logprob: -8.516587257385254

Token 1274: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11282805353403091
    2. '   ' → logprob: -2.237828016281128
    3. '```' → logprob: -12.737828254699707
    4. '
' → logprob: -14.612828254699707
    5. ' if' → logprob: -14.862828254699707
    6. '	   ' → logprob: -14.862828254699707
    7. 'tokens' → logprob: -15.112828254699707
    8. 'if' → logprob: -15.362828254699707
    9. ',' → logprob: -15.362828254699707
    10. '           ' → logprob: -15.987828254699707

Token 1275: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3713512420654297
    2. 'if' (adapté à ' if') → logprob: -1.8713512420654297
    3. ' if' → logprob: -1.9963512420654297
    4. 'index' → logprob: -1.9963512420654297
    5. '       ' → logprob: -2.1213512420654297
    6. 'idx' → logprob: -2.6213512420654297
    7. 'target' → logprob: -3.1213512420654297
    8. ' idx' → logprob: -3.7463512420654297
    9. 'i' → logprob: -3.9963512420654297
    10. ' index' → logprob: -4.49635124206543

Token 1276: ' not' (ID: 625)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.012850773520767689
    2. ' line' → logprob: -4.512850761413574
    3. ' not' → logprob: -7.012850761413574
    4. 'not' → logprob: -7.012850761413574
    5. '   ' → logprob: -14.637850761413574
    6. '(line' → logprob: -15.762850761413574
    7. 'len' → logprob: -16.38785171508789
    8. '	line' → logprob: -16.51285171508789
    9. '=line' → logprob: -16.88785171508789
    10. '#line' → logprob: -17.63785171508789

Token 1277: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.20141489803791046
    2. 'line' → logprob: -1.701414942741394
    3. '(line' → logprob: -13.576415061950684
    4. '	line' → logprob: -15.951415061950684
    5. '=line' → logprob: -16.451414108276367
    6. '_line' → logprob: -17.201414108276367
    7. '[line' → logprob: -17.451414108276367
    8. '#line' → logprob: -17.576414108276367
    9. ' ' → logprob: -17.826414108276367
    10. '
' → logprob: -18.076414108276367

Token 1278: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.04878629371523857
    2. ':' → logprob: -3.1737864017486572
    3. ':
' → logprob: -5.673786163330078
    4. '.' → logprob: -6.548786163330078
    5. '.startswith' → logprob: -7.423786163330078
    6. '   ' → logprob: -8.798786163330078
    7. ' or' → logprob: -9.423786163330078
    8. ':return' → logprob: -10.923786163330078
    9. '       ' → logprob: -11.298786163330078
    10. 'strip' → logprob: -11.673786163330078

Token 1279: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9050706028938293
    2. '():
' → logprob: -1.4050705432891846
    3. ':
' → logprob: -1.5300705432891846
    4. '():' → logprob: -2.0300705432891846
    5. ':return' → logprob: -7.030070781707764
    6. '()' → logprob: -7.780070781707764
    7. '==' → logprob: -7.905070781707764
    8. '```' → logprob: -8.905070304870605
    9. ' or' → logprob: -9.280070304870605
    10. '   ' → logprob: -9.405070304870605

Token 1280: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005093818064779043
    2. 'continue' → logprob: -6.255094051361084
    3. ' continue' → logprob: -6.630094051361084
    4. '       ' → logprob: -6.755094051361084
    5. ':' → logprob: -7.630094051361084
    6. ':
' → logprob: -8.755093574523926
    7. ',' → logprob: -11.880093574523926
    8. '```' → logprob: -12.130093574523926
    9. '	       ' → logprob: -12.255093574523926
    10. '               ' → logprob: -12.630093574523926

Token 1281: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1201862022280693
    2. 'continue' (adapté à ' continue') → logprob: -2.2451860904693604
    3. ' continue' → logprob: -5.4951863288879395
    4. 'break' → logprob: -6.2451863288879395
    5. '               ' → logprob: -6.8701863288879395
    6. '       ' → logprob: -8.870185852050781
    7. ' break' → logprob: -9.495185852050781
    8. '   ' → logprob: -10.620185852050781
    9. '	continue' → logprob: -12.745185852050781
    10. '```' → logprob: -12.870185852050781

Token 1282: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006682366947643459
    2. '   ' → logprob: -7.750668048858643
    3. '```' → logprob: -8.7506685256958
    4. 'tokens' → logprob: -10.8756685256958
    5. 'token' → logprob: -11.0006685256958
    6. ' tokens' → logprob: -11.6256685256958
    7. ' for' → logprob: -11.8756685256958
    8. ',' → logprob: -12.1256685256958
    9. '           ' → logprob: -12.3756685256958
    10. ' continue' → logprob: -12.8756685256958

Token 1283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029687879141420126
    2. '   ' → logprob: -5.877968788146973
    3. '```' → logprob: -9.127968788146973
    4. 'token' → logprob: -11.002968788146973
    5. 'tokens' → logprob: -11.377968788146973
    6. '           ' → logprob: -12.252968788146973
    7. 'index' → logprob: -12.502968788146973
    8. ' tokens' → logprob: -12.627968788146973
    9. ' for' → logprob: -12.877968788146973
    10. ' if' → logprob: -13.252968788146973

Token 1284: ' n' (ID: 297)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.5542660355567932
    2. '       ' → logprob: -2.4292659759521484
    3. 'idx' → logprob: -2.4292659759521484
    4. 'index' → logprob: -2.9292659759521484
    5. 'k' → logprob: -3.0542659759521484
    6. '   ' → logprob: -3.5542659759521484
    7. 'i' → logprob: -3.8042659759521484
    8. 'query' → logprob: -3.9292659759521484
    9. ' target' → logprob: -4.054265975952148
    10. 't' → logprob: -4.179265975952148

Token 1285: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3938106596469879
    2. '=' → logprob: -1.1438106298446655
    3. 'um' → logprob: -5.268810749053955
    4. '=int' → logprob: -6.643810749053955
    5. 'umber' → logprob: -8.643810272216797
    6. 'u' → logprob: -9.268810272216797
    7. '   ' → logprob: -9.768810272216797
    8. ',' → logprob: -9.893810272216797
    9. '_' → logprob: -10.893810272216797
    10. ' ' → logprob: -11.393810272216797

Token 1286: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.836499985889532e-05
    2. ' int' → logprob: -9.7500581741333
    3. '=int' → logprob: -17.625059127807617
    4. '[int' → logprob: -18.750059127807617
    5. '(int' → logprob: -20.125059127807617
    6. '   ' → logprob: -21.000059127807617
    7. '<int' → logprob: -22.625059127807617
    8. '	int' → logprob: -22.625059127807617
    9. '
' → logprob: -22.750059127807617
    10. ':int' → logprob: -23.250059127807617

Token 1287: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0002835040504578501
    2. 'line' → logprob: -8.250283241271973
    3. '(' → logprob: -10.750283241271973
    4. ' line' → logprob: -14.500283241271973
    5. '(input' → logprob: -16.25028419494629
    6. '(n' → logprob: -17.00028419494629
    7. ' (' → logprob: -17.50028419494629
    8. '#line' → logprob: -17.50028419494629
    9. '=line' → logprob: -17.50028419494629
    10. '_line' → logprob: -18.12528419494629

Token 1288: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3138156533241272
    2. ')
' → logprob: -1.3138155937194824
    3. ')+' → logprob: -8.18881607055664
    4. '.strip' → logprob: -8.81381607055664
    5. '+' → logprob: -10.31381607055664
    6. '       ' → logprob: -11.06381607055664
    7. '   ' → logprob: -11.31381607055664
    8. ' )
' → logprob: -11.56381607055664
    9. ' )' → logprob: -11.56381607055664
    10. ')
' → logprob: -11.93881607055664

Token 1289: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.408677290892228e-05
    2. '   ' → logprob: -9.8750638961792
    3. '<|end|>' → logprob: -12.3750638961792
    4. 'wait' → logprob: -13.0000638961792
    5. '```' → logprob: -13.6250638961792
    6. '           ' → logprob: -14.0000638961792
    7. ' wait' → logprob: -14.1250638961792
    8. ',' → logprob: -14.2500638961792
    9. '<|end|>' → logprob: -14.2500638961792
    10. '
' → logprob: -15.3750638961792

Token 1290: ' wait' (ID: 5238)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26007282733917236
    2. 'wait' (adapté à ' wait') → logprob: -1.5100728273391724
    3. ' wait' → logprob: -5.135072708129883
    4. 'w' → logprob: -7.760072708129883
    5. 'result' → logprob: -8.010072708129883
    6. 'if' → logprob: -8.135072708129883
    7. '   ' → logprob: -8.510072708129883
    8. '	wait' → logprob: -8.510072708129883
    9. 'print' → logprob: -8.635072708129883
    10. 'wt' → logprob: -8.885072708129883

Token 1291: ' =' (ID: 314)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.016842424869537354
    2. '_' → logprob: -4.641842365264893
    3. '_times' → logprob: -5.016842365264893
    4. 'time' → logprob: -8.89184284210205
    5. '<|end|>' → logprob: -9.39184284210205
    6. 'Time' → logprob: -10.64184284210205
    7. ' _' → logprob: -10.76684284210205
    8. '_t' → logprob: -10.89184284210205
    9. 's' → logprob: -11.14184284210205
    10. '_n' → logprob: -11.39184284210205

Token 1292: ' qs' (ID: 75083)
  Prédit: 'qs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qs' → logprob: -0.011047814972698689
    2. ' qs' → logprob: -4.511047840118408
    3. 'q' → logprob: -17.13604736328125
    4. '   ' → logprob: -18.13604736328125
    5. 'Qs' → logprob: -19.01104736328125
    6. 'QS' → logprob: -20.63604736328125
    7. 'gs' → logprob: -20.76104736328125
    8. 'zs' → logprob: -21.26104736328125
    9. ' ' → logprob: -21.38604736328125
    10. '  ' → logprob: -22.13604736328125

Token 1293: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.08976143598556519
    2. 'run' → logprob: -2.46476149559021
    3. ' run' → logprob: -7.839761257171631
    4. '.wait' → logprob: -8.089761734008789
    5. '.' → logprob: -9.839761734008789
    6. '   ' → logprob: -10.339761734008789
    7. ' .' → logprob: -11.339761734008789
    8. '_run' → logprob: -11.714761734008789
    9. 'wait' → logprob: -11.964761734008789
    10. '	run' → logprob: -13.089761734008789

Token 1294: '_until' (ID: 115218)
  Prédit: '_until'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_until' → logprob: -2.339278580620885e-06
    2. 'until' → logprob: -13.625001907348633
    3. 'Until' → logprob: -14.250001907348633
    4. '_once' → logprob: -15.750001907348633
    5. '_for' → logprob: -15.875001907348633
    6. '_under' → logprob: -17.500001907348633
    7. '_without' → logprob: -17.625001907348633
    8. '_' → logprob: -17.625001907348633
    9. '```' → logprob: -17.625001907348633
    10. '(_' → logprob: -18.125001907348633

Token 1295: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002477796748280525
    2. 'n' → logprob: -6.002477645874023
    3. '(' → logprob: -13.127477645874023
    4. ' n' → logprob: -16.627477645874023
    5. '(
' → logprob: -18.127477645874023
    6. '_n' → logprob: -19.127477645874023
    7. ' (' → logprob: -19.127477645874023
    8. '```' → logprob: -19.877477645874023
    9. '	n' → logprob: -20.252477645874023
    10. '((' → logprob: -20.252477645874023

Token 1296: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001932205050252378
    2. ')
' → logprob: -6.251932144165039
    3. '       ' → logprob: -13.501932144165039
    4. ')`' → logprob: -14.251932144165039
    5. '))' → logprob: -14.501932144165039
    6. '   ' → logprob: -14.501932144165039
    7. ' )' → logprob: -15.376932144165039
    8. ')
' → logprob: -15.626932144165039
    9. '())' → logprob: -15.876932144165039
    10. ')`
' → logprob: -16.62693214416504

Token 1297: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013295256067067385
    2. 'print' → logprob: -6.75132942199707
    3. '   ' → logprob: -8.75132942199707
    4. ' print' → logprob: -14.00132942199707
    5. '```' → logprob: -16.37632942199707
    6. '<|end|>' → logprob: -16.75132942199707
    7. '	print' → logprob: -17.62632942199707
    8. '        
' → logprob: -17.87632942199707
    9. '           ' → logprob: -18.37632942199707
    10. '
' → logprob: -18.37632942199707

Token 1298: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. ' print' → logprob: -17.25
    3. '```' → logprob: -18.125
    4. '       ' → logprob: -18.375
    5. '   ' → logprob: -20.375
    6. '``' → logprob: -21.125
    7. '	print' → logprob: -21.5
    8. '#print' → logprob: -23.125
    9. '
' → logprob: -23.5
    10. '.print' → logprob: -24.125

Token 1299: '(wait' (ID: 127282)
  Prédit: '(wait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(wait' → logprob: -0.0009152670972980559
    2. 'wait' → logprob: -7.000915050506592
    3. '(f' → logprob: -12.50091552734375
    4. ' wait' → logprob: -16.87591552734375
    5. 'f' → logprob: -16.87591552734375
    6. '	wait' → logprob: -17.37591552734375
    7. '(' → logprob: -17.75091552734375
    8. '_wait' → logprob: -19.50091552734375
    9. 'waiting' → logprob: -19.62591552734375
    10. '(w' → logprob: -19.75091552734375

Token 1300: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.522638169466518e-05
    2. '())' → logprob: -11.500024795532227
    3. '   ' → logprob: -12.125024795532227
    4. '`)' → logprob: -12.375024795532227
    5. ')
' → logprob: -13.750024795532227
    6. ')`' → logprob: -13.750024795532227
    7. '")' → logprob: -14.125024795532227
    8. '       ' → logprob: -14.125024795532227
    9. '')' → logprob: -14.375024795532227
    10. '()' → logprob: -14.375024795532227

Token 1301: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002158825984224677
    2. '```' → logprob: -6.7521586418151855
    3. ' if' → logprob: -7.5021586418151855
    4. '<|end|>' → logprob: -7.8771586418151855
    5. '#' → logprob: -10.502159118652344
    6. '
' → logprob: -11.377159118652344
    7. '<|end|>' → logprob: -12.377159118652344
    8. '__' → logprob: -13.002159118652344
    9. '        
' → logprob: -13.752159118652344
    10. 'for' → logprob: -13.752159118652344

Token 1302: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5759502649307251
    2. ' __' → logprob: -0.8259502649307251
    3. 'if' → logprob: -12.700950622558594
    4. '```' → logprob: -12.700950622558594
    5. '_name' → logprob: -13.075950622558594
    6. '___' → logprob: -13.950950622558594
    7. 'name' → logprob: -14.450950622558594
    8. '_' → logprob: -14.825950622558594
    9. '____' → logprob: -14.950950622558594
    10. '.__' → logprob: -16.075950622558594

Token 1303: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.013454437255859375
    2. '==' → logprob: -4.763454437255859
    3. 'name' → logprob: -5.638454437255859
    4. ' ==' → logprob: -6.888454437255859
    5. '=="' → logprob: -9.01345443725586
    6. '```' → logprob: -9.51345443725586
    7. 'if' → logprob: -11.26345443725586
    8. '=='' → logprob: -11.38845443725586
    9. '__.__' → logprob: -12.01345443725586
    10. 'main' → logprob: -12.13845443725586

Token 1304: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00036037206882610917
    2. '==' → logprob: -8.000360488891602
    3. '=="' → logprob: -11.375360488891602
    4. ' ==' → logprob: -11.750360488891602
    5. '__.__' → logprob: -12.625360488891602
    6. '=='' → logprob: -13.625360488891602
    7. '__.' → logprob: -15.375360488891602
    8. '```' → logprob: -15.500360488891602
    9. '__('' → logprob: -15.750360488891602
    10. 'name' → logprob: -16.2503604888916

Token 1305: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.13636469841003418
    2. '__' → logprob: -2.636364698410034
    3. ' ==' → logprob: -3.011364698410034
    4. '=="' → logprob: -5.136364936828613
    5. '=='' → logprob: -7.261364936828613
    6. '__.__' → logprob: -11.136364936828613
    7. '.__' → logprob: -11.386364936828613
    8. '```' → logprob: -12.136364936828613
    9. '===' → logprob: -12.261364936828613
    10. '==
' → logprob: -12.636364936828613

Token 1306: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20142756402492523
    2. ''' → logprob: -1.7014275789260864
    3. '__' → logprob: -11.201427459716797
    4. ' "__' → logprob: -14.701427459716797
    5. ' '__' → logprob: -16.701427459716797
    6. '"name' → logprob: -16.951427459716797
    7. ''m' → logprob: -17.701427459716797
    8. ''name' → logprob: -17.826427459716797
    9. '"user' → logprob: -17.826427459716797
    10. ''post' → logprob: -17.826427459716797

Token 1307: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.33021044731140137
    2. 'main' → logprob: -2.0802104473114014
    3. ''' → logprob: -2.3302104473114014
    4. '"' → logprob: -2.8302104473114014
    5. 'name' → logprob: -11.08021068572998
    6. '('__' → logprob: -12.08021068572998
    7. ''name' → logprob: -12.08021068572998
    8. '___' → logprob: -12.45521068572998
    9. '   ' → logprob: -12.95521068572998
    10. ' '__' → logprob: -13.20521068572998

Token 1308: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.09070806950330734
    2. '__' → logprob: -2.465708017349243
    3. '__':
' → logprob: -6.465708255767822
    4. '__
' → logprob: -9.340707778930664
    5. '.' → logprob: -10.715707778930664
    6. '__["' → logprob: -11.090707778930664
    7. '__.' → logprob: -11.090707778930664
    8. '__.__' → logprob: -11.215707778930664
    9. '==' → logprob: -11.590707778930664
    10. '.__' → logprob: -11.965707778930664

Token 1309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14595478773117065
    2. 'main' → logprob: -2.0209548473358154
    3. '__' → logprob: -6.645954608917236
    4. '```' → logprob: -6.645954608917236
    5. '    
' → logprob: -8.145955085754395
    6. '__":
' → logprob: -9.395955085754395
    7. ' main' → logprob: -9.895955085754395
    8. '
' → logprob: -10.020955085754395
    9. '	main' → logprob: -10.270955085754395
    10. '_main' → logprob: -10.520955085754395

Token 1310: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -9.698698704596609e-05
    2. '   ' → logprob: -9.250097274780273
    3. ' main' → logprob: -14.375097274780273
    4. '	main' → logprob: -15.250097274780273
    5. 'import' → logprob: -18.125097274780273
    6. '_main' → logprob: -19.000097274780273
    7. '(main' → logprob: -20.000097274780273
    8. '.main' → logprob: -20.500097274780273
    9. '```' → logprob: -21.125097274780273
    10. '  ' → logprob: -22.500097274780273

Token 1311: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1309
Tokens correctement prédits (1ère position, stricte): 492
Tokens correctement prédits (1ère position, avec adaptation): 534
Tokens correctement prédits (top 10): 984
Précision stricte (1ère position): 37.59%
Précision adaptée (1ère position): 40.79%
Précision (top 10): 75.17%
================================================================================
