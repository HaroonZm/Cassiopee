================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10000)

def parse_tree(s):
    s = s.strip()
    if s[0] != '(':
        return int(s), None, None, s[len(str(int(s))):].lstrip()
    # parse '(' <left> ' ' <right> ')'
    assert s[0] == '('
    s = s[1:].lstrip()
    left, _, rest = parse_subtree(s)
    rest = rest.lstrip()
    right, _, rest2 = parse_subtree(rest)
    rest2 = rest2.lstrip()
    assert rest2[0] == ')'
    rest2 = rest2[1:]
    return None, left, right, rest2

def parse_subtree(s):
    s = s.lstrip()
    if s[0] == '(':
        node, left, right, rest = parse_tree(s)
        return (node, left, right), True, rest
    else:
        i = 0
        while i < len(s) and s[i].isdigit():
            i += 1
        num = int(s[:i])
        rest = s[i:]
        return (num, None, None), False, rest

def read_tree(line):
    line = line.strip()
    node, left, right, rest = parse_tree(line)
    return node, left, right

def evaluate_all_ways(node, left, right, leaves_sets, memo):
    # node, left, right represent the tree structure
    # leaves_sets is list of sets assigned to leaves by input
    # memo caches results for subtree (node, left, right)

    if node is not None:
        # leaf node: node is int index into leaves_sets (1-based)
        return [leaves_sets[node-1]]

    # internal node
    left_results = evaluate_all_ways(*left, leaves_sets, memo)
    right_results = evaluate_all_ways(*right, leaves_sets, memo)

    results = []
    for lset in left_results:
        for rset in right_results:
            # A: intersection
            a = lset & rset
            results.append(a)
            # O: union
            o = lset | rset
            results.append(o)
            # X: symmetric difference
            x = (lset | rset) - (lset & rset)
            results.append(x)

    return results

def count_ways(node, left, right, leaves_sets, memo):
    if node is not None:
        return {frozenset(leaves_sets[node-1]):1}

    key = (node, left, right)
    if key in memo:
        return memo[key]

    left_dp = count_ways(*left, leaves_sets, memo)
    right_dp = count_ways(*right, leaves_sets, memo)

    dp = {}
    for lset, lcount in left_dp.items():
        for rset, rcount in right_dp.items():
            # A: intersection
            a = lset & rset
            dp[a] = dp.get(a,0) + lcount*rcount
            # O: union
            o = lset | rset
            dp[o] = dp.get(o,0) + lcount*rcount
            # X: symmetric difference
            x = (lset | rset) - (lset & rset)
            dp[x] = dp.get(x,0) + lcount*rcount

    memo[key] = dp
    return dp

def main():
    while True:
        line = sys.stdin.readline()
        if not line:
            break
        line = line.strip()
        if line == "END":
            break
        # read tree
        node, left, right = read_tree(line)
        N = int(sys.stdin.readline())
        leaves_sets = []
        for _ in range(N):
            a,b,c,d = map(int, sys.stdin.readline().split())
            s = set()
            if a==1: s.add('a')
            if b==1: s.add('b')
            if c==1: s.add('c')
            if d==1: s.add('d')
            leaves_sets.append(s)

        memo = {}
        dp = count_ways(node, left, right, leaves_sets, memo)

        full_set = frozenset(['a','b','c','d'])
        print(dp.get(full_set, 0))

if __name__=="__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5936316251754761
    2. '.' → logprob: -0.9686316251754761
    3. 'import' → logprob: -3.8436317443847656
    4. 'newline' → logprob: -4.218631744384766
    5. '\' → logprob: -4.718631744384766
    6. '<|end|>' → logprob: -4.968631744384766
    7. '```' → logprob: -5.343631744384766
    8. '
' → logprob: -5.718631744384766
    9. '<|end|>' → logprob: -6.468631744384766
    10. '' → logprob: -6.468631744384766

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -3.523948907968588e-05
    2. ' .' → logprob: -11.875035285949707
    3. '.import' → logprob: -12.125035285949707
    4. '.user' → logprob: -12.875035285949707
    5. '.readline' → logprob: -12.875035285949707
    6. '.`' → logprob: -13.125035285949707
    7. '.stdout' → logprob: -13.625035285949707
    8. '[' → logprob: -13.625035285949707
    9. '.exit' → logprob: -13.875035285949707
    10. '​.' → logprob: -14.125035285949707

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.6837925910949707
    2. 't' → logprob: -2.3087925910949707
    3. '_' → logprob: -2.4337925910949707
    4. 'default' → logprob: -2.8087925910949707
    5. '_trace' → logprob: -2.8087925910949707
    6. 's' → logprob: -3.1837925910949707
    7. 'sys' → logprob: -3.5587925910949707
    8. '_sys' → logprob: -3.8087925910949707
    9. 'set' → logprob: -4.433792591094971
    10. 'encoding' → logprob: -4.683792591094971

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00037681119283661246
    2. 'ursive' → logprob: -8.37537670135498
    3. 'urs' → logprob: -10.37537670135498
    4. 'limit' → logprob: -10.62537670135498
    5. 'urf' → logprob: -10.62537670135498
    6. 'ur' → logprob: -10.87537670135498
    7. '_limit' → logprob: -11.25037670135498
    8. '_' → logprob: -11.75037670135498
    9. 'ursor' → logprob: -12.37537670135498
    10. 'ursively' → logprob: -12.75037670135498

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.01669425703585148
    2. '_limit' → logprob: -4.266694068908691
    3. 'depth' → logprob: -6.516694068908691
    4. '_depth' → logprob: -7.516694068908691
    5. '(' → logprob: -8.391694068908691
    6. ' limit' → logprob: -9.141694068908691
    7. 'error' → logprob: -10.391694068908691
    8. '(limit' → logprob: -10.641694068908691
    9. 'lim' → logprob: -11.266694068908691
    10. '('' → logprob: -11.391694068908691

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.843177233240567e-05
    2. '(
' → logprob: -11.625018119812012
    3. ' (' → logprob: -12.250018119812012
    4. '(

' → logprob: -13.375018119812012
    5. '(.' → logprob: -14.000018119812012
    6. '("("' → logprob: -14.500018119812012
    7. '((' → logprob: -14.750018119812012
    8. '('' → logprob: -15.000018119812012
    9. '```' → logprob: -15.000018119812012
    10. '(()' → logprob: -15.875018119812012

Token 9: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10026555508375168
    2. '100' → logprob: -2.3502655029296875
    3. ' ' → logprob: -10.100265502929688
    4. '500' → logprob: -11.850265502929688
    5. '300' → logprob: -12.475265502929688
    6. '999' → logprob: -13.100265502929688
    7. '200' → logprob: -13.725265502929688
    8. '  ' → logprob: -13.975265502929688
    9. '1' → logprob: -13.975265502929688
    10. '150' → logprob: -14.100265502929688

Token 10: '00' (ID: 504)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2014244645833969
    2. '00' → logprob: -1.701424479484558
    3. '000' → logprob: -11.576424598693848
    4. ')' → logprob: -13.576424598693848
    5. '1' → logprob: -15.201424598693848
    6. '01' → logprob: -16.57642364501953
    7. '))' → logprob: -16.70142364501953
    8. '48' → logprob: -18.45142364501953
    9. '_' → logprob: -19.32642364501953
    10. '50' → logprob: -19.70142364501953

Token 11: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. '))' → logprob: -14.000001907348633
    3. ' )' → logprob: -15.000001907348633
    4. ')
' → logprob: -15.500001907348633
    5. '')' → logprob: -17.750001907348633
    6. '`)' → logprob: -18.250001907348633
    7. '()' → logprob: -18.500001907348633
    8. '）' → logprob: -18.875001907348633
    9. ')

' → logprob: -19.125001907348633
    10. ' ' → logprob: -19.125001907348633

Token 12: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10865703225135803
    2. '\' → logprob: -2.858657121658325
    3. '```' → logprob: -3.733657121658325
    4. ')' → logprob: -5.108656883239746
    5. '#' → logprob: -5.483656883239746
    6. 'import' → logprob: -5.858656883239746
    7. '
' → logprob: -5.983656883239746
    8. '' → logprob: -6.608656883239746
    9. '(' → logprob: -6.858656883239746
    10. '\n' → logprob: -7.233656883239746

Token 13: ' parse' (ID: 8420)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.19641102850437164
    2. ' ' → logprob: -1.8214110136032104
    3. ' fibonacci' → logprob: -4.3214111328125
    4. ' factor' → logprob: -7.1964111328125
    5. ' dfs' → logprob: -7.4464111328125
    6. ' space' → logprob: -7.9464111328125
    7. ' fib' → logprob: -8.0714111328125
    8. ' foo' → logprob: -8.0714111328125
    9. ' my' → logprob: -8.5714111328125
    10. ' _' → logprob: -8.8214111328125

Token 14: '_tree' (ID: 27118)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1254010945558548
    2. '(' → logprob: -2.500401020050049
    3. '_token' → logprob: -5.500401020050049
    4. '_line' → logprob: -5.750401020050049
    5. '_input' → logprob: -5.750401020050049
    6. '_tree' → logprob: -5.750401020050049
    7. '_expression' → logprob: -6.125401020050049
    8. '_parser' → logprob: -6.250401020050049
    9. '_parse' → logprob: -6.375401020050049
    10. '_args' → logprob: -6.500401020050049

Token 15: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003386479802429676
    2. '(node' → logprob: -6.128386497497559
    3. '(tree' → logprob: -7.753386497497559
    4. '_' → logprob: -8.628386497497559
    5. '_node' → logprob: -9.503386497497559
    6. '_nodes' → logprob: -9.628386497497559
    7. '(root' → logprob: -9.753386497497559
    8. '_tree' → logprob: -9.753386497497559
    9. ':' → logprob: -10.003386497497559
    10. '_token' → logprob: -10.128386497497559

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00247981958091259
    2. ')' → logprob: -6.6274800300598145
    3. ':' → logprob: -7.2524800300598145
    4. ',' → logprob: -7.8774800300598145
    5. '):
' → logprob: -10.627479553222656
    6. ' ):' → logprob: -11.377479553222656
    7. '[' → logprob: -11.377479553222656
    8. 's' → logprob: -12.002479553222656
    9. ' :' → logprob: -13.377479553222656
    10. '   ' → logprob: -13.752479553222656

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09277971088886261
    2. ':' → logprob: -2.8427796363830566
    3. '    ' → logprob: -3.7177796363830566
    4. ' if' → logprob: -5.717779636383057
    5. ' :' → logprob: -6.967779636383057
    6. ' ' → logprob: -7.217779636383057
    7. '(' → logprob: -8.217780113220215
    8. '  ' → logprob: -8.717780113220215
    9. '    
' → logprob: -9.092780113220215
    10. 'if' → logprob: -9.592780113220215

Token 18: ' s' (ID: 265)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.019925186410546303
    2. ' n' → logprob: -5.019925117492676
    3. 'if' → logprob: -5.519925117492676
    4. ' stack' → logprob: -5.644925117492676
    5. ' i' → logprob: -6.269925117492676
    6. '   ' → logprob: -6.894925117492676
    7. '    ' → logprob: -7.269925117492676
    8. ' tokens' → logprob: -7.894925117492676
    9. 'def' → logprob: -8.394925117492676
    10. 'stack' → logprob: -8.519925117492676

Token 19: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.991292417049408
    2. '.' → logprob: -1.1162924766540527
    3. ' =' → logprob: -1.7412924766540527
    4. '=' → logprob: -2.7412924766540527
    5. '.strip' → logprob: -3.9912924766540527
    6. '.startswith' → logprob: -4.366292476654053
    7. ',' → logprob: -4.491292476654053
    8. '.split' → logprob: -4.741292476654053
    9. ' .' → logprob: -5.991292476654053
    10. '   ' → logprob: -6.616292476654053

Token 20: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.11290323734283447
    2. 's' → logprob: -2.237903118133545
    3. ' list' → logprob: -10.362903594970703
    4. 'list' → logprob: -10.862903594970703
    5. ' ' → logprob: -12.112903594970703
    6. ''' → logprob: -12.237903594970703
    7. ' [' → logprob: -12.362903594970703
    8. '[' → logprob: -12.987903594970703
    9. ''s' → logprob: -12.987903594970703
    10. ' '' → logprob: -13.237903594970703

Token 21: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.014831089414656162
    2. '.replace' → logprob: -4.889831066131592
    3. '.' → logprob: -5.139831066131592
    4. '.rstrip' → logprob: -7.514831066131592
    5. '.lower' → logprob: -7.764831066131592
    6. '.split' → logprob: -8.63983154296875
    7. '.l' → logprob: -8.76483154296875
    8. '.trim' → logprob: -11.51483154296875
    9. '[::-' → logprob: -11.76483154296875
    10. ' .' → logprob: -11.76483154296875

Token 22: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.24721091985702515
    2. '(' → logprob: -1.62221097946167
    3. '('' → logprob: -3.87221097946167
    4. '("("' → logprob: -8.622210502624512
    5. '().' → logprob: -8.747210502624512
    6. '("' → logprob: -9.497210502624512
    7. '(`' → logprob: -9.497210502624512
    8. '('.')' → logprob: -9.872210502624512
    9. '()`' → logprob: -10.122210502624512
    10. '())' → logprob: -10.372210502624512

Token 23: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08222799748182297
    2. ':' → logprob: -2.707227945327759
    3. ' if' → logprob: -4.582228183746338
    4. '(' → logprob: -7.332228183746338
    5. 'i' → logprob: -7.457228183746338
    6. '   ' → logprob: -7.957228183746338
    7. ',' → logprob: -9.08222770690918
    8. '[' → logprob: -9.58222770690918
    9. ')' → logprob: -9.70722770690918
    10. ':
' → logprob: -10.58222770690918

Token 24: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0003529814421199262
    2. ' if' → logprob: -8.00035285949707
    3. 'i' → logprob: -11.25035285949707
    4. '```' → logprob: -13.25035285949707
    5. 'return' → logprob: -14.00035285949707
    6. '   ' → logprob: -14.50035285949707
    7. '#' → logprob: -14.50035285949707
    8. 'If' → logprob: -15.00035285949707
    9. 'token' → logprob: -16.00035285949707
    10. 'def' → logprob: -16.25035285949707

Token 25: ' s' (ID: 265)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.01670106127858162
    2. 'not' → logprob: -4.2667012214660645
    3. ' s' → logprob: -6.1417012214660645
    4. 's' → logprob: -8.141700744628906
    5. ' len' → logprob: -10.516700744628906
    6. 'len' → logprob: -10.766700744628906
    7. ' ' → logprob: -11.016700744628906
    8. ''' → logprob: -11.641700744628906
    9. '(not' → logprob: -12.641700744628906
    10. '(' → logprob: -12.766700744628906

Token 26: '[' (ID: 58)
  Prédit: '.startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.6347567439079285
    2. '[' → logprob: -1.1347568035125732
    3. '==' → logprob: -2.3847568035125732
    4. ' ==' → logprob: -2.8847568035125732
    5. 'startswith' → logprob: -8.259757041931152
    6. '[:' → logprob: -9.884757041931152
    7. '.endswith' → logprob: -10.134757041931152
    8. '.' → logprob: -10.759757041931152
    9. '.is' → logprob: -11.509757041931152
    10. '[]' → logprob: -11.634757041931152

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000373950315406546
    2. ']' → logprob: -8.750373840332031
    3. ' ' → logprob: -9.250373840332031
    4. '[' → logprob: -10.250373840332031
    5. '==' → logprob: -10.875373840332031
    6. ':' → logprob: -11.375373840332031
    7. ']==' → logprob: -11.500373840332031
    8. '(' → logprob: -11.625373840332031
    9. '1' → logprob: -12.250373840332031
    10. ':]' → logprob: -12.312873840332031

Token 28: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7448526620864868
    2. '!=' → logprob: -1.1198526620864868
    3. ']' → logprob: -2.6198525428771973
    4. '[' → logprob: -3.1198525428771973
    5. ' ==' → logprob: -3.4948525428771973
    6. ' !=' → logprob: -3.7448525428771973
    7. '(' → logprob: -3.9948525428771973
    8. '=' → logprob: -5.994852542877197
    9. ']==' → logprob: -6.244852542877197
    10. '!='' → logprob: -6.869852542877197

Token 29: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5028666853904724
    2. '==' → logprob: -1.0028667449951172
    3. ' !=' → logprob: -5.377866744995117
    4. '(' → logprob: -5.502866744995117
    5. ' ==' → logprob: -5.627866744995117
    6. '=' → logprob: -5.627866744995117
    7. '[' → logprob: -5.627866744995117
    8. '=='' → logprob: -5.752866744995117
    9. '!='' → logprob: -6.002866744995117
    10. ''' → logprob: -6.002866744995117

Token 30: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03434200957417488
    2. '(' → logprob: -3.534342050552368
    3. '"' → logprob: -5.409341812133789
    4. ''(' → logprob: -10.159341812133789
    5. ' '('' → logprob: -10.784341812133789
    6. '[' → logprob: -10.909341812133789
    7. '')' → logprob: -12.034341812133789
    8. '("("' → logprob: -12.534341812133789
    9. '`' → logprob: -12.909341812133789
    10. '('' → logprob: -13.034341812133789

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.057933516800403595
    2. ' or' → logprob: -3.1829335689544678
    3. ' and' → logprob: -5.432933330535889
    4. '):' → logprob: -5.432933330535889
    5. ')' → logprob: -5.932933330535889
    6. ':
' → logprob: -6.932933330535889
    7. ':return' → logprob: -6.932933330535889
    8. ' :' → logprob: -7.307933330535889
    9. 'or' → logprob: -8.432933807373047
    10. 'and' → logprob: -8.932933807373047

Token 32: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3248629868030548
    2. ' raise' → logprob: -2.4498629570007324
    3. '    ' → logprob: -3.1998629570007324
    4. ')' → logprob: -3.5748629570007324
    5. 'raise' → logprob: -3.6998629570007324
    6. '   ' → logprob: -3.8248629570007324
    7. '       ' → logprob: -3.9498629570007324
    8. 'r' → logprob: -3.9498629570007324
    9. ' return' → logprob: -4.199862957000732
    10. '(' → logprob: -5.074862957000732

Token 33: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06489384919404984
    2. 'r' → logprob: -3.439893960952759
    3. ' return' → logprob: -3.564893960952759
    4. '   ' → logprob: -6.81489372253418
    5. '    ' → logprob: -7.93989372253418
    6. ')' → logprob: -8.31489372253418
    7. '       ' → logprob: -8.56489372253418
    8. ' ' → logprob: -9.18989372253418
    9. 'ret' → logprob: -9.56489372253418
    10. 're' → logprob: -9.81489372253418

Token 34: ' int' (ID: 677)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.2893613874912262
    2. ' None' → logprob: -2.0393614768981934
    3. 's' → logprob: -2.1643614768981934
    4. ' s' → logprob: -5.789361476898193
    5. '(None' → logprob: -6.039361476898193
    6. 'int' → logprob: -7.789361476898193
    7. ''s' → logprob: -8.789361000061035
    8. '(s' → logprob: -9.914361000061035
    9. ''' → logprob: -10.414361000061035
    10. '(' → logprob: -10.539361000061035

Token 35: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.26612746715545654
    2. '(' → logprob: -1.5161274671554565
    3. 's' → logprob: -4.266127586364746
    4. '('' → logprob: -10.516127586364746
    5. '32' → logprob: -11.016127586364746
    6. ')' → logprob: -12.391127586364746
    7. '(
' → logprob: -12.891127586364746
    8. ''' → logprob: -13.141127586364746
    9. ' ' → logprob: -13.516127586364746
    10. ' (' → logprob: -13.641127586364746

Token 36: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001037815964082256
    2. '')' → logprob: -9.750103950500488
    3. ')
' → logprob: -11.375103950500488
    4. '))' → logprob: -11.625103950500488
    5. ' )' → logprob: -11.750103950500488
    6. '`)' → logprob: -12.500103950500488
    7. '),' → logprob: -12.875103950500488
    8. ')`' → logprob: -13.125103950500488
    9. '   ' → logprob: -13.375103950500488
    10. ')))' → logprob: -13.750103950500488

Token 37: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.19428636133670807
    2. 'None' → logprob: -1.9442863464355469
    3. ' []' → logprob: -3.569286346435547
    4. '[]' → logprob: -5.944286346435547
    5. ' ' → logprob: -6.444286346435547
    6. ' ()' → logprob: -8.194286346435547
    7. '<|end|>' → logprob: -8.444286346435547
    8. '()' → logprob: -9.069286346435547
    9. '(None' → logprob: -9.069286346435547
    10. ',None' → logprob: -9.819286346435547

Token 38: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7763272523880005
    2. '<|end|>' → logprob: -1.4013272523880005
    3. ',' → logprob: -1.7763272523880005
    4. ')' → logprob: -2.526327133178711
    5. '
' → logprob: -3.651327133178711
    6. ' ' → logprob: -5.276327133178711
    7. '\' → logprob: -5.651327133178711
    8. 'newline' → logprob: -6.026327133178711
    9. '  
' → logprob: -6.776327133178711
    10. '<|end|>' → logprob: -6.901327133178711

Token 39: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.018228726461529732
    2. ' None' → logprob: -4.018228530883789
    3. '   ' → logprob: -10.643228530883789
    4. ',None' → logprob: -10.643228530883789
    5. '(None' → logprob: -10.768228530883789
    6. '=None' → logprob: -12.518228530883789
    7. '  ' → logprob: -13.018228530883789
    8. '_None' → logprob: -13.268228530883789
    9. '.None' → logprob: -14.018228530883789
    10. '    ' → logprob: -14.518228530883789

Token 40: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7795283198356628
    2. '<|end|>' → logprob: -1.6545283794403076
    3. '   ' → logprob: -2.2795283794403076
    4. '    
' → logprob: -2.5295283794403076
    5. ')' → logprob: -2.7795283794403076
    6. ' ' → logprob: -3.4045283794403076
    7. '  
' → logprob: -4.5295281410217285
    8. '```' → logprob: -4.6545281410217285
    9. ' 
' → logprob: -4.9045281410217285
    10. '  ' → logprob: -5.0295281410217285

Token 41: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5933164358139038
    2. ' 
' → logprob: -1.3433164358139038
    3. ' None' → logprob: -3.4683165550231934
    4. ')' → logprob: -3.5933165550231934
    5. '\n' → logprob: -3.7183165550231934
    6. '<|end|>' → logprob: -3.7183165550231934
    7. '1' → logprob: -4.593316555023193
    8. '
' → logprob: -4.843316555023193
    9. 'None' → logprob: -5.218316555023193
    10. '  
' → logprob: -5.218316555023193

Token 42: '[len' (ID: 57582)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.20326188206672668
    2. '(s' → logprob: -1.7032618522644043
    3. 's' → logprob: -7.078261852264404
    4. 'str' → logprob: -7.453261852264404
    5. ')' → logprob: -8.203262329101562
    6. '(' → logprob: -9.703262329101562
    7. '(int' → logprob: -10.828262329101562
    8. ']' → logprob: -11.828262329101562
    9. ' str' → logprob: -11.828262329101562
    10. '```' → logprob: -11.953262329101562

Token 44: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16704106330871582
    2. '(s' → logprob: -1.9170410633087158
    3. '(' → logprob: -5.167040824890137
    4. 's' → logprob: -7.917040824890137
    5. '(str' → logprob: -8.417040824890137
    6. 'int' → logprob: -8.542040824890137
    7. '(in' → logprob: -9.292040824890137
    8. '(i' → logprob: -9.917040824890137
    9. '(parse' → logprob: -10.167040824890137
    10. ')' → logprob: -10.542040824890137

Token 45: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0008662028703838587
    2. 's' → logprob: -7.125866413116455
    3. '(' → logprob: -10.125865936279297
    4. ')' → logprob: -11.875865936279297
    5. '(int' → logprob: -12.375865936279297
    6. ')s' → logprob: -12.500865936279297
    7. ' s' → logprob: -13.375865936279297
    8. ' (' → logprob: -14.250865936279297
    9. '(str' → logprob: -14.375865936279297
    10. '   ' → logprob: -14.625865936279297

Token 46: '))' (ID: 915)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.09828490763902664
    2. '))' → logprob: -2.598284959793091
    3. 's' → logprob: -4.348284721374512
    4. ')))' → logprob: -6.098284721374512
    5. '(' → logprob: -6.223284721374512
    6. ')):' → logprob: -6.348284721374512
    7. '))+' → logprob: -8.973284721374512
    8. '()))' → logprob: -10.223284721374512
    9. '))-' → logprob: -10.223284721374512
    10. '(str' → logprob: -10.973284721374512

Token 47: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006890485528856516
    2. ')]' → logprob: -5.256890296936035
    3. ')' → logprob: -6.756890296936035
    4. ':' → logprob: -8.006890296936035
    5. ']:' → logprob: -9.631890296936035
    6. ' ):' → logprob: -10.256890296936035
    7. ')])' → logprob: -11.256890296936035
    8. ':)' → logprob: -11.506890296936035
    9. ' ' → logprob: -12.256890296936035
    10. '():' → logprob: -12.506890296936035

Token 48: '].' (ID: 1651)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09157082438468933
    2. ')
' → logprob: -2.4665708541870117
    3. ']' → logprob: -6.966570854187012
    4. '   ' → logprob: -7.716570854187012
    5. ' )' → logprob: -7.841570854187012
    6. '')' → logprob: -8.341570854187012
    7. ' )
' → logprob: -9.466570854187012
    8. ')

' → logprob: -9.466570854187012
    9. '1' → logprob: -9.591570854187012
    10. '0' → logprob: -9.591570854187012

Token 49: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.011545823886990547
    2. 'strip' → logprob: -4.511545658111572
    3. ' l' → logprob: -7.886545658111572
    4. 'rstrip' → logprob: -9.13654613494873
    5. 'startswith' → logprob: -11.26154613494873
    6. '.l' → logprob: -14.13654613494873
    7. ' strip' → logprob: -15.26154613494873
    8. 'rem' → logprob: -16.011545181274414
    9. 'isdigit' → logprob: -16.386545181274414
    10. '```' → logprob: -16.386545181274414

Token 50: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.11532118171453476
    2. 'en' → logprob: -2.240321159362793
    3. 'e' → logprob: -6.115321159362793
    4. 'ist' → logprob: -9.615321159362793
    5. 'eft' → logprob: -9.865321159362793
    6. 'ength' → logprob: -9.865321159362793
    7. '```' → logprob: -10.990321159362793
    8. ' strip' → logprob: -11.115321159362793
    9. 'ower' → logprob: -11.115321159362793
    10. 'trip' → logprob: -11.240321159362793

Token 51: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7165661454200745
    2. '(' → logprob: -1.0915660858154297
    3. '('' → logprob: -1.8415660858154297
    4. ''' → logprob: -4.84156608581543
    5. '()
' → logprob: -4.96656608581543
    6. '(
' → logprob: -6.34156608581543
    7. '("("' → logprob: -8.09156608581543
    8. '()

' → logprob: -9.59156608581543
    9. '(

' → logprob: -9.59156608581543
    10. '"' → logprob: -9.71656608581543

Token 52: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23177693784236908
    2. '(' → logprob: -2.1067769527435303
    3. '   ' → logprob: -2.9817769527435303
    4. ',' → logprob: -3.9817769527435303
    5. '    
' → logprob: -5.606776714324951
    6. '  
' → logprob: -6.356776714324951
    7. '(
' → logprob: -6.481776714324951
    8. ' (' → logprob: -6.606776714324951
    9. ')
' → logprob: -6.606776714324951
    10. ' 
' → logprob: -6.731776714324951

Token 53: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1050005629658699
    2. ')' → logprob: -3.2300004959106445
    3. ' (' → logprob: -4.1050004959106445
    4. '(
' → logprob: -4.2300004959106445
    5. 'if' → logprob: -4.9800004959106445
    6. '   ' → logprob: -5.1050004959106445
    7. ',' → logprob: -5.9800004959106445
    8. 'token' → logprob: -6.2300004959106445
    9. 's' → logprob: -6.4800004959106445
    10. 'def' → logprob: -6.8550004959106445

Token 54: ' parse' (ID: 8420)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9283474087715149
    2. 'idx' → logprob: -1.3033473491668701
    3. 's' → logprob: -2.05334734916687
    4. ')' → logprob: -2.42834734916687
    5. 'pos' → logprob: -3.80334734916687
    6. '#' → logprob: -3.92834734916687
    7. 'def' → logprob: -4.303347587585449
    8. '   ' → logprob: -4.428347587585449
    9. 'index' → logprob: -4.928347587585449
    10. 'stack' → logprob: -5.428347587585449

Token 55: ' '('' (ID: 87284)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0837270021438599
    2. 's' → logprob: -1.8337270021438599
    3. ')' → logprob: -2.5837268829345703
    4. 'left' → logprob: -2.7087268829345703
    5. 'node' → logprob: -2.7087268829345703
    6. '   ' → logprob: -3.2087268829345703
    7. 'sub' → logprob: -3.3337268829345703
    8. 'root' → logprob: -3.5837268829345703
    9. 'children' → logprob: -3.7087268829345703
    10. ' (' → logprob: -4.08372688293457

Token 56: ' <' (ID: 464)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0066934823989868
    2. '   ' → logprob: -1.1316934823989868
    3. '(' → logprob: -2.0066933631896973
    4. ')' → logprob: -3.1316933631896973
    5. '<|end|>' → logprob: -3.3816933631896973
    6. ',' → logprob: -3.7566933631896973
    7. '  ' → logprob: -4.131693363189697
    8. ' s' → logprob: -4.631693363189697
    9. ' ' → logprob: -4.756693363189697
    10. '    ' → logprob: -4.881693363189697

Token 57: 'left' (ID: 4530)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.114323616027832
    2. 'token' → logprob: -1.489323616027832
    3. 'sub' → logprob: -2.239323616027832
    4. 'value' → logprob: -2.614323616027832
    5. '>' → logprob: -3.489323616027832
    6. 'node' → logprob: -3.489323616027832
    7. 'number' → logprob: -3.739323616027832
    8. 's' → logprob: -3.864323616027832
    9. ')' → logprob: -3.864323616027832
    10. 'tree' → logprob: -3.989323616027832

Token 58: '>' (ID: 29)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' '' (ID: 461)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' '' (ID: 461)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' <' (ID: 464)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.05559057742357254
    2. 'left' → logprob: -3.6805906295776367
    3. 'root' → logprob: -4.180590629577637
    4. 'value' → logprob: -5.555590629577637
    5. 'token' → logprob: -6.555590629577637
    6. 'node' → logprob: -6.930590629577637
    7. 'number' → logprob: -6.930590629577637
    8. ')' → logprob: -7.055590629577637
    9. 'operator' → logprob: -7.055590629577637
    10. ' right' → logprob: -7.305590629577637

Token 63: '>' (ID: 29)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9672667980194092
    2. '>' → logprob: -1.3422667980194092
    3. '<|end|>' → logprob: -1.9672667980194092
    4. ')>' → logprob: -2.467266798019409
    5. '<|end|>' → logprob: -2.717266798019409
    6. ''>' → logprob: -4.092267036437988
    7. 's' → logprob: -4.592267036437988
    8. ',' → logprob: -4.967267036437988
    9. ' ' → logprob: -5.092267036437988
    10. ' >' → logprob: -5.342267036437988

Token 64: ' ')' (ID: 35910)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: ''
' (ID: 2207)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: ' assert' (ID: 3696)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9160396456718445
    2. 'left' → logprob: -1.9160397052764893
    3. '(' → logprob: -2.0410397052764893
    4. 'i' → logprob: -2.4160397052764893
    5. ')' → logprob: -2.9160397052764893
    6. '   ' → logprob: -3.2910397052764893
    7. 'idx' → logprob: -3.7910397052764893
    8. 'return' → logprob: -3.9160397052764893
    9. 'token' → logprob: -4.04103946685791
    10. 'pos' → logprob: -4.41603946685791

Token 68: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.4740903675556183
    2. 's' → logprob: -0.9740903377532959
    3. '(s' → logprob: -11.474090576171875
    4. '(' → logprob: -14.224090576171875
    5. ' ' → logprob: -14.724090576171875
    6. '_s' → logprob: -15.099090576171875
    7. '	s' → logprob: -15.349090576171875
    8. '<s' → logprob: -15.349090576171875
    9. '>s' → logprob: -15.911590576171875
    10. ' (' → logprob: -16.036590576171875

Token 69: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3425219549390022e-05
    2. '.startswith' → logprob: -11.25001335144043
    3. '(' → logprob: -15.00001335144043
    4. '0' → logprob: -16.62501335144043
    5. '[
' → logprob: -17.00001335144043
    6. '.' → logprob: -17.25001335144043
    7. 'startswith' → logprob: -17.37501335144043
    8. ' [' → logprob: -18.50001335144043
    9. '```' → logprob: -18.50001335144043
    10. '1' → logprob: -18.87501335144043

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018208740220870823
    2. '[' → logprob: -9.125182151794434
    3. '(' → logprob: -10.250182151794434
    4. ' ' → logprob: -10.375182151794434
    5. '1' → logprob: -12.375182151794434
    6. '   ' → logprob: -14.500182151794434
    7. '
' → logprob: -15.125182151794434
    8. '.startswith' → logprob: -15.625182151794434
    9. '[
' → logprob: -15.625182151794434
    10. ' (' → logprob: -15.875182151794434

Token 71: ']' (ID: 60)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.754338264465332
    2. '==' → logprob: -0.879338264465332
    3. ' ==' → logprob: -2.379338264465332
    4. '[' → logprob: -4.129338264465332
    5. '=' → logprob: -6.254338264465332
    6. '('' → logprob: -6.629338264465332
    7. '=='' → logprob: -7.129338264465332
    8. ' (' → logprob: -8.004338264465332
    9. ''' → logprob: -8.129338264465332
    10. '(
' → logprob: -8.254338264465332

Token 72: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2251700609922409
    2. ' ==' → logprob: -1.9751700162887573
    3. '(' → logprob: -2.850170135498047
    4. '=' → logprob: -6.100170135498047
    5. '=='' → logprob: -6.100170135498047
    6. ''' → logprob: -8.475170135498047
    7. '==(' → logprob: -9.475170135498047
    8. '()==' → logprob: -9.850170135498047
    9. '('' → logprob: -10.100170135498047
    10. '==
' → logprob: -10.225170135498047

Token 73: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.013410679064691067
    2. '(' → logprob: -4.388410568237305
    3. ''(' → logprob: -7.263410568237305
    4. '"' → logprob: -9.138410568237305
    5. ' '('' → logprob: -9.513410568237305
    6. '('' → logprob: -11.138410568237305
    7. ' (' → logprob: -13.763410568237305
    8. '(
' → logprob: -14.138410568237305
    9. '("("' → logprob: -14.388410568237305
    10. '')' → logprob: -14.888410568237305

Token 74: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20210996270179749
    2. 'left' → logprob: -2.7021100521087646
    3. '   ' → logprob: -3.5771100521087646
    4. 'rest' → logprob: -3.9521100521087646
    5. 'i' → logprob: -4.0771098136901855
    6. ',' → logprob: -4.3271098136901855
    7. 'def' → logprob: -4.4521098136901855
    8. '<|end|>' → logprob: -5.3271098136901855
    9. 'token' → logprob: -5.5771098136901855
    10. 'idx' → logprob: -5.9521098136901855

Token 76: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.15019339323043823
    2. 'left' → logprob: -2.025193452835083
    3. 'rest' → logprob: -5.650193214416504
    4. '   ' → logprob: -6.775193214416504
    5. 'i' → logprob: -7.275193214416504
    6. 'def' → logprob: -7.650193214416504
    7. ',' → logprob: -7.775193214416504
    8. 'idx' → logprob: -8.275193214416504
    9. 'l' → logprob: -8.400193214416504
    10. ' left' → logprob: -9.400193214416504

Token 77: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20151595771312714
    2. ' =' → logprob: -1.7015159130096436
    3. ',' → logprob: -10.701516151428223
    4. 's' → logprob: -10.826516151428223
    5. '=
' → logprob: -11.326516151428223
    6. '.pop' → logprob: -11.576516151428223
    7. '[' → logprob: -11.826516151428223
    8. ' ' → logprob: -12.201516151428223
    9. '=

' → logprob: -12.201516151428223
    10. ' =
' → logprob: -12.326516151428223

Token 78: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004085997585207224
    2. ' s' → logprob: -5.504086017608643
    3. '1' → logprob: -12.254085540771484
    4. ' ' → logprob: -13.379085540771484
    5. '(' → logprob: -15.129085540771484
    6. 'parse' → logprob: -15.254085540771484
    7. '(s' → logprob: -15.379085540771484
    8. '_s' → logprob: -16.754085540771484
    9. ''s' → logprob: -16.879085540771484
    10. ' parse' → logprob: -17.004085540771484

Token 79: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008218993316404521
    2. '1' → logprob: -7.125822067260742
    3. '(' → logprob: -11.500822067260742
    4. ' [' → logprob: -13.375822067260742
    5. ' ' → logprob: -14.000822067260742
    6. 'from' → logprob: -14.250822067260742
    7. '[
' → logprob: -14.750822067260742
    8. '```' → logprob: -14.750822067260742
    9. 's' → logprob: -15.125822067260742
    10. '2' → logprob: -15.250822067260742

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004116076452191919
    2. '[' → logprob: -8.125411987304688
    3. '(' → logprob: -10.125411987304688
    4. '
' → logprob: -11.250411987304688
    5. '```' → logprob: -11.625411987304688
    6. ':' → logprob: -11.750411987304688
    7. ' ' → logprob: -11.875411987304688
    8. ')' → logprob: -12.250411987304688
    9. '0' → logprob: -12.312911987304688
    10. '+' → logprob: -12.750411987304688

Token 81: ':].' (ID: 193388)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0015051016816869378
    2. 'strip' → logprob: -6.501504898071289
    3. 'rstrip' → logprob: -13.001504898071289
    4. ' l' → logprob: -14.501504898071289
    5. '	l' → logprob: -19.50150489807129
    6. '_strip' → logprob: -19.62650489807129
    7. 'split' → logprob: -20.75150489807129
    8. '*l' → logprob: -20.87650489807129
    9. ' strip' → logprob: -20.87650489807129
    10. '.l' → logprob: -21.00150489807129

Token 83: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -2.3676733690081164e-05
    2. 'trip' → logprob: -10.75002384185791
    3. 'str' → logprob: -14.00002384185791
    4. '_strip' → logprob: -14.50002384185791
    5. 'st' → logprob: -15.12502384185791
    6. 'stri' → logprob: -15.75002384185791
    7. 'rstrip' → logprob: -15.87502384185791
    8. 's' → logprob: -16.375022888183594
    9. 'stripe' → logprob: -16.500022888183594
    10. ' strip' → logprob: -16.750022888183594

Token 84: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0056176697835326195
    2. '(' → logprob: -5.630617618560791
    3. '<|end|>' → logprob: -6.380617618560791
    4. '()>' → logprob: -9.63061809539795
    5. '   ' → logprob: -10.00561809539795
    6. ')' → logprob: -10.63061809539795
    7. '<|end|>' → logprob: -10.63061809539795
    8. '()
' → logprob: -10.88061809539795
    9. '(),' → logprob: -11.00561809539795
    10. ' ()' → logprob: -11.00561809539795

Token 85: '   ' (ID: 271)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.019251978024840355
    2. 'l' → logprob: -4.394251823425293
    3. 'if' → logprob: -5.269251823425293
    4. 'node' → logprob: -7.519251823425293
    5. 'token' → logprob: -8.519251823425293
    6. ')' → logprob: -9.019251823425293
    7. 'i' → logprob: -9.144251823425293
    8. 'def' → logprob: -9.519251823425293
    9. 'value' → logprob: -9.519251823425293
    10. 'root' → logprob: -9.644251823425293

Token 86: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.0036845204886049032
    2. 'l' → logprob: -5.6286845207214355
    3. 'val' → logprob: -10.378684043884277
    4. ' left' → logprob: -10.628684043884277
    5. 'value' → logprob: -11.003684043884277
    6. 'if' → logprob: -12.628684043884277
    7. 'lv' → logprob: -13.003684043884277
    8. 'v' → logprob: -13.253684043884277
    9. 'root' → logprob: -14.003684043884277
    10. 'node' → logprob: -14.128684043884277

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1124955266714096
    2. '_node' → logprob: -2.7374954223632812
    3. '_tree' → logprob: -3.9874954223632812
    4. '_val' → logprob: -4.362495422363281
    5. '_value' → logprob: -5.112495422363281
    6. ',node' → logprob: -6.612495422363281
    7. ',_' → logprob: -6.987495422363281
    8. '_,' → logprob: -7.362495422363281
    9. '_' → logprob: -7.987495422363281
    10. '_child' → logprob: -8.737495422363281

Token 88: ' _,' (ID: 18042)
  Prédit: '_rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_rest' → logprob: -0.9246042966842651
    2. 'rest' → logprob: -1.0496042966842651
    3. 's' → logprob: -1.9246042966842651
    4. ' s' → logprob: -3.0496044158935547
    5. '<|end|>' → logprob: -3.6746044158935547
    6. ' rest' → logprob: -3.7996044158935547
    7. '_s' → logprob: -6.549604415893555
    8. '*' → logprob: -6.674604415893555
    9. '_next' → logprob: -6.924604415893555
    10. '(rest' → logprob: -7.049604415893555

Token 89: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.36225152015686035
    2. 's' → logprob: -1.3622515201568604
    3. 'right' → logprob: -3.8622515201568604
    4. ' s' → logprob: -4.612251281738281
    5. ' rest' → logprob: -4.737251281738281
    6. ' right' → logprob: -6.612251281738281
    7. 'rem' → logprob: -6.862251281738281
    8. 'res' → logprob: -6.987251281738281
    9. 're' → logprob: -6.987251281738281
    10. 'r' → logprob: -7.112251281738281

Token 90: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43196460604667664
    2. ' =' → logprob: -1.056964635848999
    3. ',' → logprob: -5.80696439743042
    4. 's' → logprob: -8.556964874267578
    5. ')=' → logprob: -11.431964874267578
    6. '<|end|>' → logprob: -11.431964874267578
    7. '=parse' → logprob: -11.931964874267578
    8. ' ,' → logprob: -11.931964874267578
    9. ')' → logprob: -12.056964874267578
    10. '<|end|>' → logprob: -12.806964874267578

Token 91: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.007640702184289694
    2. ' parse' → logprob: -4.882640838623047
    3. '(parse' → logprob: -10.757640838623047
    4. '=parse' → logprob: -11.882640838623047
    5. '	parse' → logprob: -13.382640838623047
    6. '
' → logprob: -13.632640838623047
    7. 's' → logprob: -14.132640838623047
    8. ' ' → logprob: -14.257640838623047
    9. 'par' → logprob: -15.007640838623047
    10. 'next' → logprob: -15.257640838623047

Token 92: '_sub' (ID: 11572)
  Prédit: '_tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tree' → logprob: -4.8828707804204896e-05
    2. '_t' → logprob: -10.250048637390137
    3. '_' → logprob: -11.250048637390137
    4. '_TREE' → logprob: -16.000049591064453
    5. ' _' → logprob: -16.125049591064453
    6. '<Tree' → logprob: -16.250049591064453
    7. 'tree' → logprob: -17.000049591064453
    8. '_
' → logprob: -17.625049591064453
    9. '```' → logprob: -17.750049591064453
    10. '_token' → logprob: -18.000049591064453

Token 93: 'tree' (ID: 19816)
  Prédit: '_tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.07914358377456665
    2. 'tree' → logprob: -2.579143524169922
    3. 'parse' → logprob: -9.704143524169922
    4. '_' → logprob: -10.329143524169922
    5. 'string' → logprob: -10.454143524169922
    6. 'tre' → logprob: -10.829143524169922
    7. ' tree' → logprob: -10.954143524169922
    8. 's' → logprob: -11.329143524169922
    9. '_string' → logprob: -11.454143524169922
    10. 't' → logprob: -11.579143524169922

Token 94: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.07428082078695297
    2. '(' → logprob: -2.9492807388305664
    3. 'tree' → logprob: -4.324280738830566
    4. 's' → logprob: -5.824280738830566
    5. '_tree' → logprob: -6.074280738830566
    6. '('' → logprob: -8.824280738830566
    7. '_' → logprob: -9.574280738830566
    8. 'trees' → logprob: -9.824280738830566
    9. 'Tree' → logprob: -10.199280738830566
    10. ' (' → logprob: -10.199280738830566

Token 95: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006620417116209865
    2. '())' → logprob: -8.625661849975586
    3. ' )' → logprob: -8.875661849975586
    4. '(' → logprob: -9.125661849975586
    5. ')
' → logprob: -9.750661849975586
    6. '()' → logprob: -9.750661849975586
    7. 's' → logprob: -10.875661849975586
    8. '(s' → logprob: -11.250661849975586
    9. '<|end|>' → logprob: -11.250661849975586
    10. ',' → logprob: -11.500661849975586

Token 96: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26112279295921326
    2. '<|end|>' → logprob: -1.6361228227615356
    3. ')' → logprob: -4.136122703552246
    4. 's' → logprob: -5.261122703552246
    5. ',' → logprob: -5.636122703552246
    6. ' def' → logprob: -5.886122703552246
    7. '   ' → logprob: -6.136122703552246
    8. '<|end|>' → logprob: -6.261122703552246
    9. '[' → logprob: -6.761122703552246
    10. '(s' → logprob: -7.511122703552246

Token 97: ' rest' (ID: 2867)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2723310589790344
    2. '<|end|>' → logprob: -1.6473309993743896
    3. ')' → logprob: -3.7723309993743896
    4. ' ,' → logprob: -4.772331237792969
    5. ' ' → logprob: -5.022331237792969
    6. '<|end|>' → logprob: -5.772331237792969
    7. '=' → logprob: -6.272331237792969
    8. ' =' → logprob: -7.022331237792969
    9. 'def' → logprob: -7.772331237792969
    10. ',
' → logprob: -7.897331237792969

Token 99: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.05505627766251564
    2. ' rest' → logprob: -2.93005633354187
    3. '_' → logprob: -10.05505657196045
    4. '_rest' → logprob: -10.30505657196045
    5. '(rest' → logprob: -11.05505657196045
    6. ''' → logprob: -11.30505657196045
    7. '
' → logprob: -11.55505657196045
    8. ' ' → logprob: -11.55505657196045
    9. '"' → logprob: -11.93005657196045
    10. '.rest' → logprob: -11.93005657196045

Token 100: '.l' (ID: 1000)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -2.935296834039036e-06
    2. 'trip' → logprob: -13.00000286102295
    3. 'rstrip' → logprob: -14.87500286102295
    4. '_strip' → logprob: -16.500003814697266
    5. 'str' → logprob: -16.625003814697266
    6. 'stri' → logprob: -16.750003814697266
    7. 'stripe' → logprob: -17.375003814697266
    8. '-strip' → logprob: -17.500003814697266
    9. 'Strip' → logprob: -18.000003814697266
    10. ' strip' → logprob: -18.125003814697266

Token 102: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.273621405242011e-05
    2. '()
' → logprob: -11.625032424926758
    3. '(' → logprob: -12.000032424926758
    4. '`()' → logprob: -12.375032424926758
    5. '()>' → logprob: -12.875032424926758
    6. '>()' → logprob: -13.375032424926758
    7. ' ()' → logprob: -13.375032424926758
    8. '()`' → logprob: -13.500032424926758
    9. '()(' → logprob: -14.250032424926758
    10. '().' → logprob: -14.375032424926758

Token 103: '   ' (ID: 271)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.10521593689918518
    2. '<|end|>' → logprob: -2.6052160263061523
    3. 'def' → logprob: -3.8552160263061523
    4. 'left' → logprob: -6.980216026306152
    5. ')' → logprob: -7.105216026306152
    6. ' right' → logprob: -7.230216026306152
    7. '   ' → logprob: -7.605216026306152
    8. ' ' → logprob: -8.230216026306152
    9. '[right' → logprob: -8.230216026306152
    10. '  ' → logprob: -8.355216026306152

Token 104: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.0003452368837315589
    2. ' right' → logprob: -8.250345230102539
    3. 'if' → logprob: -9.750345230102539
    4. '<|end|>' → logprob: -11.625345230102539
    5. 'def' → logprob: -12.375345230102539
    6. '   ' → logprob: -13.000345230102539
    7. ',right' → logprob: -13.625345230102539
    8. ' ' → logprob: -13.750345230102539
    9. '	right' → logprob: -13.875345230102539
    10. '...' → logprob: -14.000345230102539

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.204720582696609e-05
    2. ' ,' → logprob: -10.375052452087402
    3. '<|end|>' → logprob: -11.125052452087402
    4. '=' → logprob: -13.000052452087402
    5. ',
' → logprob: -13.750052452087402
    6. '<|end|>' → logprob: -14.250052452087402
    7. '‌,' → logprob: -15.250052452087402
    8. 's' → logprob: -15.375052452087402
    9. ',...' → logprob: -15.375052452087402
    10. ' ' → logprob: -15.625052452087402

Token 106: ' _,' (ID: 18042)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ' rest' (ID: 2867)
  Prédit: ' rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.009866466745734215
    2. 'rest' → logprob: -4.634866237640381
    3. '<|end|>' → logprob: -9.259866714477539
    4. '(rest' → logprob: -11.884866714477539
    5. ' s' → logprob: -12.634866714477539
    6. '_rest' → logprob: -13.259866714477539
    7. '<|end|>' → logprob: -13.509866714477539
    8. ' ' → logprob: -14.134866714477539
    9. 's' → logprob: -14.634866714477539
    10. '.rest' → logprob: -14.759866714477539

Token 108: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23045824468135834
    2. '=' → logprob: -1.9804582595825195
    3. ' =' → logprob: -2.9804582595825195
    4. '<|end|>' → logprob: -4.1054582595825195
    5. ' ,' → logprob: -8.48045825958252
    6. '<|end|>' → logprob: -8.60545825958252
    7. ' ' → logprob: -9.23045825958252
    8. '   ' → logprob: -10.60545825958252
    9. ')' → logprob: -11.73045825958252

Token 109: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10325485467910767
    2. ' =' → logprob: -2.603254795074463
    3. ',' → logprob: -3.728254795074463
    4. '<|end|>' → logprob: -11.103255271911621
    5. ' ,' → logprob: -12.103255271911621
    6. ' ' → logprob: -12.103255271911621
    7. ')' → logprob: -12.853255271911621
    8. '[' → logprob: -13.103255271911621
    9. '<|end|>' → logprob: -13.728255271911621
    10. ')=' → logprob: -14.603255271911621

Token 110: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.02975129522383213
    2. ' parse' → logprob: -3.5297513008117676
    3. '(parse' → logprob: -14.52975082397461
    4. '	parse' → logprob: -16.15475082397461
    5. ' ' → logprob: -16.40475082397461
    6. '=parse' → logprob: -16.77975082397461
    7. '.parse' → logprob: -18.77975082397461
    8. '   ' → logprob: -19.15475082397461
    9. '
' → logprob: -20.02975082397461
    10. '  ' → logprob: -20.27975082397461

Token 111: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.22553591430187225
    2. '_tree' → logprob: -1.6005358695983887
    3. 'sub' → logprob: -9.725536346435547
    4. 'tree' → logprob: -10.225536346435547
    5. '_left' → logprob: -11.475536346435547
    6. '_' → logprob: -12.100536346435547
    7. '_right' → logprob: -12.600536346435547
    8. '_s' → logprob: -12.850536346435547
    9. '_t' → logprob: -13.475536346435547
    10. '```' → logprob: -14.725536346435547

Token 112: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.02383512258529663
    2. 't' → logprob: -3.8988351821899414
    3. 'tr' → logprob: -6.773835182189941
    4. 'tre' → logprob: -6.898835182189941
    5. '_tree' → logprob: -7.523835182189941
    6. '_t' → logprob: -8.523835182189941
    7. 'ree' → logprob: -9.523835182189941
    8. 'r' → logprob: -9.773835182189941
    9. 'root' → logprob: -9.773835182189941
    10. '```' → logprob: -9.898835182189941

Token 113: '(rest' (ID: 117922)
  Prédit: '(rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rest' → logprob: -0.0003637097543105483
    2. '(' → logprob: -8.12536334991455
    3. 'rest' → logprob: -9.62536334991455
    4. ' rest' → logprob: -14.62536334991455
    5. ' (' → logprob: -15.12536334991455
    6. '(right' → logprob: -15.50036334991455
    7. '(s' → logprob: -15.62536334991455
    8. '<|end|>' → logprob: -16.500364303588867
    9. '(Rest' → logprob: -16.500364303588867
    10. '(r' → logprob: -16.625364303588867

Token 114: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017803447553887963
    2. ')
' → logprob: -9.250178337097168
    3. '   ' → logprob: -9.750178337097168
    4. '2' → logprob: -11.750178337097168
    5. ' )' → logprob: -12.375178337097168
    6. ' ' → logprob: -13.000178337097168
    7. 's' → logprob: -13.000178337097168
    8. '[' → logprob: -13.625178337097168
    9. '(' → logprob: -14.250178337097168
    10. 'rest' → logprob: -14.500178337097168

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09605571627616882
    2. ')' → logprob: -2.471055746078491
    3. 'rest' → logprob: -5.971055507659912
    4. '<|end|>' → logprob: -6.721055507659912
    5. 'assert' → logprob: -7.096055507659912
    6. 's' → logprob: -7.221055507659912
    7. ' rest' → logprob: -7.846055507659912
    8. 'return' → logprob: -7.971055507659912
    9. '')' → logprob: -8.97105598449707
    10. 'def' → logprob: -9.09605598449707

Token 116: ' rest' (ID: 2867)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09600546211004257
    2. 'rest' (adapté à ' rest') → logprob: -3.346005439758301
    3. '   ' → logprob: -3.846005439758301
    4. 's' → logprob: -4.596005439758301
    5. '<|end|>' → logprob: -4.721005439758301
    6. ' rest' → logprob: -5.346005439758301
    7. 'return' → logprob: -5.596005439758301
    8. ' )' → logprob: -6.721005439758301
    9. ' ' → logprob: -6.721005439758301
    10. ' return' → logprob: -7.471005439758301

Token 117: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7526060938835144
    2. '=' → logprob: -1.5026061534881592
    3. ')' → logprob: -1.6276061534881592
    4. '<|end|>' → logprob: -2.877606153488159
    5. ' =' → logprob: -3.252606153488159
    6. '[' → logprob: -5.75260591506958
    7. ')return' → logprob: -6.00260591506958
    8. ' ' → logprob: -6.12760591506958
    9. '<|end|>' → logprob: -6.12760591506958
    10. ':return' → logprob: -7.12760591506958

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7980624437332153
    2. '=' → logprob: -1.0480624437332153
    3. '<|end|>' → logprob: -2.173062324523926
    4. ')' → logprob: -2.798062324523926
    5. '.strip' → logprob: -4.548062324523926
    6. 's' → logprob: -5.173062324523926
    7. '<|end|>' → logprob: -5.923062324523926
    8. ' ' → logprob: -6.673062324523926
    9. ')=' → logprob: -7.923062324523926
    10. '.rstrip' → logprob: -7.923062324523926

Token 119: ' rest' (ID: 2867)
  Prédit: ' rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.02325270138680935
    2. 'rest' → logprob: -3.7732527256011963
    3. '.rest' → logprob: -12.898252487182617
    4. '(rest' → logprob: -13.023252487182617
    5. ' ' → logprob: -13.773252487182617
    6. 's' → logprob: -14.523252487182617
    7. ')' → logprob: -14.898252487182617
    8. '_rest' → logprob: -15.523252487182617
    9. '<|end|>' → logprob: -15.773252487182617
    10. ' s' → logprob: -16.398252487182617

Token 120: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38034993410110474
    2. '<|end|>' → logprob: -1.88034987449646
    3. ')' → logprob: -2.13034987449646
    4. '2' → logprob: -3.75534987449646
    5. '[len' → logprob: -4.255350112915039
    6. '<|end|>' → logprob: -6.255350112915039
    7. '.strip' → logprob: -6.380350112915039
    8. '   ' → logprob: -7.630350112915039
    9. '.rstrip' → logprob: -8.005350112915039
    10. '[:]' → logprob: -8.005350112915039

Token 121: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.3198065161705017
    2. '[' → logprob: -1.5698065757751465
    3. '.strip' → logprob: -2.8198065757751465
    4. '.rstrip' → logprob: -5.1948065757751465
    5. 'l' → logprob: -9.319806098937988
    6. '.' → logprob: -9.569806098937988
    7. '<|end|>' → logprob: -9.569806098937988
    8. ')' → logprob: -9.819806098937988
    9. 's' → logprob: -10.694806098937988
    10. '   ' → logprob: -10.694806098937988

Token 122: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -4.000763510703109e-05
    2. 'trip' → logprob: -10.500040054321289
    3. 'rstrip' → logprob: -11.500040054321289
    4. 'str' → logprob: -14.000040054321289
    5. '_strip' → logprob: -14.000040054321289
    6. 'stri' → logprob: -15.625040054321289
    7. ' strip' → logprob: -15.750040054321289
    8. 'stripe' → logprob: -16.25004005432129
    9. 'Strip' → logprob: -16.25004005432129
    10. '-strip' → logprob: -16.37504005432129

Token 123: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00020652047533076257
    2. '(' → logprob: -9.00020694732666
    3. '()
' → logprob: -9.75020694732666
    4. '())' → logprob: -11.87520694732666
    5. '()]' → logprob: -12.87520694732666
    6. '(),' → logprob: -13.00020694732666
    7. ')' → logprob: -13.12520694732666
    8. ' ()' → logprob: -13.12520694732666
    9. '()>' → logprob: -13.12520694732666
    10. '()`' → logprob: -14.12520694732666

Token 124: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07795635610818863
    2. 'assert' → logprob: -2.702956438064575
    3. '   ' → logprob: -4.952956199645996
    4. ' assert' → logprob: -8.202956199645996
    5. '')' → logprob: -8.202956199645996
    6. ')
' → logprob: -9.202956199645996
    7. '	assert' → logprob: -10.202956199645996
    8. 'if' → logprob: -10.327956199645996
    9. 'return' → logprob: -10.452956199645996
    10. 'def' → logprob: -10.702956199645996

Token 125: ' assert' (ID: 3696)
  Prédit: 'assert'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assert' (adapté à ' assert') → logprob: -0.02329357899725437
    2. ')' → logprob: -3.7732934951782227
    3. 'return' → logprob: -10.898293495178223
    4. ' assert' → logprob: -11.398293495178223
    5. '	assert' → logprob: -11.898293495178223
    6. 's' → logprob: -12.773293495178223
    7. '   ' → logprob: -12.898293495178223
    8. ')return' → logprob: -13.398293495178223
    9. ')>' → logprob: -13.773293495178223
    10. '.assert' → logprob: -14.023293495178223

Token 126: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.20210576057434082
    2. ' rest' → logprob: -1.7021057605743408
    3. 's' → logprob: -7.452105522155762
    4. ' s' → logprob: -9.452105522155762
    5. '(rest' → logprob: -10.327105522155762
    6. ' ' → logprob: -15.452105522155762
    7. 'Rest' → logprob: -16.452106475830078
    8. '.rest' → logprob: -16.577106475830078
    9. '```' → logprob: -16.702106475830078
    10. 'len' → logprob: -16.952106475830078

Token 127: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0067190444096922874
    2. '[' → logprob: -5.00671911239624
    3. '```' → logprob: -13.256718635559082
    4. ' ' → logprob: -14.131718635559082
    5. ' [' → logprob: -15.631718635559082
    6. '   ' → logprob: -15.756718635559082
    7. 's' → logprob: -16.0067195892334
    8. '`' → logprob: -16.0067195892334
    9. '۲' → logprob: -16.0692195892334
    10. '₂' → logprob: -16.1317195892334

Token 128: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. '[
' → logprob: -14.500000953674316
    3. ' and' → logprob: -15.500000953674316
    4. '.startswith' → logprob: -16.000001907348633
    5. '```' → logprob: -16.500001907348633
    6. 'and' → logprob: -16.875001907348633
    7. '0' → logprob: -17.000001907348633
    8. 'startswith' → logprob: -17.125001907348633
    9. ')' → logprob: -17.250001907348633
    10. ')[' → logprob: -17.625001907348633

Token 129: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.375006675720215
    3. ')' → logprob: -13.375006675720215
    4. '[' → logprob: -15.500006675720215
    5. '')' → logprob: -15.500006675720215
    6. ']' → logprob: -15.625006675720215
    7. '۰' → logprob: -16.2500057220459
    8. '   ' → logprob: -16.6250057220459
    9. '(' → logprob: -17.5000057220459
    10. '
' → logprob: -18.5000057220459

Token 130: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027887849137187004
    2. ']==' → logprob: -3.9028878211975098
    3. '==' → logprob: -5.90288782119751
    4. ')' → logprob: -6.15288782119751
    5. '']' → logprob: -6.52788782119751
    6. ' ==' → logprob: -8.277888298034668
    7. '()]' → logprob: -8.402888298034668
    8. ')==' → logprob: -8.652888298034668
    9. ' ]' → logprob: -9.527888298034668
    10. '()' → logprob: -9.902888298034668

Token 131: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0643514096736908
    2. ')' → logprob: -3.4393513202667236
    3. ' ==' → logprob: -3.6893513202667236
    4. ')==' → logprob: -5.689351558685303
    5. '')' → logprob: -7.064351558685303
    6. ']==' → logprob: -7.439351558685303
    7. ']' → logprob: -8.564351081848145
    8. '=' → logprob: -9.189351081848145
    9. '==
' → logprob: -9.689351081848145
    10. '[' → logprob: -10.814351081848145

Token 132: ' ')' (ID: 35910)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.014190422371029854
    2. ')' → logprob: -4.264190196990967
    3. ' ')'' → logprob: -10.639190673828125
    4. '")' → logprob: -13.014190673828125
    5. '`)' → logprob: -15.264190673828125
    6. '']' → logprob: -16.014190673828125
    7. ')'' → logprob: -16.139190673828125
    8. ''' → logprob: -16.264190673828125
    9. ')`' → logprob: -16.389190673828125
    10. '')"' → logprob: -16.889190673828125

Token 133: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02294144779443741
    2. '   ' → logprob: -4.272941589355469
    3. ')
' → logprob: -5.022941589355469
    4. '<|end|>' → logprob: -6.647941589355469
    5. '')' → logprob: -7.397941589355469
    6. ''' → logprob: -10.147941589355469
    7. '<|end|>' → logprob: -10.147941589355469
    8. ',' → logprob: -10.897941589355469
    9. '')
' → logprob: -10.897941589355469
    10. '
' → logprob: -10.897941589355469

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056962862610816956
    2. ' return' → logprob: -3.0569629669189453
    3. 'return' → logprob: -5.556962966918945
    4. ')' → logprob: -6.431962966918945
    5. '<|end|>' → logprob: -6.681962966918945
    6. '	return' → logprob: -7.681962966918945
    7. ' ' → logprob: -7.931962966918945
    8. '    ' → logprob: -8.306962966918945
    9. ' rest' → logprob: -8.556962966918945
    10. 'rest' → logprob: -9.181962966918945

Token 135: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' (adapté à ' rest') → logprob: -0.8721842765808105
    2. 'return' → logprob: -1.4971842765808105
    3. '   ' → logprob: -1.9971842765808105
    4. ' return' → logprob: -2.2471842765808105
    5. ' rest' → logprob: -2.4971842765808105
    6. ')' → logprob: -3.4971842765808105
    7. '
' → logprob: -6.2471842765808105
    8. '	return' → logprob: -7.6221842765808105
    9. '    ' → logprob: -7.8721842765808105
    10. ')return' → logprob: -7.9971842765808105

Token 136: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3044131398200989
    2. ')' → logprob: -1.929413080215454
    3. '<|end|>' → logprob: -2.429413080215454
    4. ',' → logprob: -4.054413318634033
    5. '2' → logprob: -5.429413318634033
    6. ']' → logprob: -7.179413318634033
    7. ')[' → logprob: -7.304413318634033
    8. '(' → logprob: -7.554413318634033
    9. ' ' → logprob: -7.554413318634033
    10. '=' → logprob: -7.554413318634033

Token 137: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7366349697113037
    2. ' =' → logprob: -1.2366349697113037
    3. '<|end|>' → logprob: -2.1116349697113037
    4. '=' → logprob: -2.6116349697113037
    5. 's' → logprob: -4.736635208129883
    6. 'return' → logprob: -5.236635208129883
    7. '<|end|>' → logprob: -5.236635208129883
    8. ')' → logprob: -5.611635208129883
    9. '
' → logprob: -5.736635208129883
    10. ' ' → logprob: -6.611635208129883

Token 138: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.02975083328783512
    2. ' rest' → logprob: -3.5297508239746094
    3. '(rest' → logprob: -15.02975082397461
    4. 'Rest' → logprob: -18.15475082397461
    5. '.rest' → logprob: -18.15475082397461
    6. ' ' → logprob: -18.40475082397461
    7. '_rest' → logprob: -18.77975082397461
    8. 's' → logprob: -21.90475082397461
    9. '   ' → logprob: -22.02975082397461
    10. 'r' → logprob: -22.15475082397461

Token 139: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016330767422914505
    2. '[' → logprob: -4.141330718994141
    3. '1' → logprob: -8.51633071899414
    4. '(' → logprob: -10.01633071899414
    5. ')' → logprob: -10.64133071899414
    6. 'rest' → logprob: -12.39133071899414
    7. ' ' → logprob: -12.95383071899414
    8. '```' → logprob: -13.07883071899414
    9. ']' → logprob: -13.45383071899414
    10. ')[' → logprob: -13.45383071899414

Token 140: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00014025058771949261
    2. '1' → logprob: -8.875140190124512
    3. 's' → logprob: -16.125141143798828
    4. 'from' → logprob: -16.625141143798828
    5. '```' → logprob: -16.875141143798828
    6. 'def' → logprob: -17.000141143798828
    7. '(' → logprob: -17.250141143798828
    8. ' [' → logprob: -17.625141143798828
    9. '#' → logprob: -17.875141143798828
    10. '
' → logprob: -18.000141143798828

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.875005722045898
    3. '[' → logprob: -13.875005722045898
    4. ':]' → logprob: -14.000005722045898
    5. ']' → logprob: -14.875005722045898
    6. ':' → logprob: -15.875005722045898
    7. '   ' → logprob: -16.0625057220459
    8. '(' → logprob: -16.1250057220459
    9. ':].' → logprob: -16.3750057220459
    10. '```' → logprob: -16.3750057220459

Token 142: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.6958776712417603
    2. ':].' → logprob: -0.6958776712417603
    3. ']' → logprob: -6.070877552032471
    4. '].' → logprob: -9.070878028869629
    5. ' :]' → logprob: -9.195878028869629
    6. ':' → logprob: -9.320878028869629
    7. ':],' → logprob: -10.445878028869629
    8. '.]' → logprob: -10.570878028869629
    9. '()]' → logprob: -10.945878028869629
    10. '.' → logprob: -11.695878028869629

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48493659496307373
    2. ' return' → logprob: -1.4849365949630737
    3. 'return' → logprob: -1.8599365949630737
    4. '	return' → logprob: -6.609936714172363
    5. '    
' → logprob: -8.359936714172363
    6. ':return' → logprob: -8.359936714172363
    7. '
' → logprob: -8.859936714172363
    8. '<|end|>' → logprob: -10.484936714172363
    9. ' 
' → logprob: -11.359936714172363
    10. '  
' → logprob: -11.484936714172363

Token 144: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004464300815016031
    2. ' return' → logprob: -5.504464149475098
    3. '   ' → logprob: -7.879464149475098
    4. '	return' → logprob: -12.254464149475098
    5. '
' → logprob: -14.004464149475098
    6. ':return' → logprob: -14.254464149475098
    7. '    
' → logprob: -15.004464149475098
    8. ')return' → logprob: -15.504464149475098
    9. 'eturn' → logprob: -16.004465103149414
    10. ')' → logprob: -16.379465103149414

Token 145: ' None' (ID: 4662)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.9360784888267517
    2. '(None' → logprob: -1.3110785484313965
    3. 'left' → logprob: -1.5610785484313965
    4. 'None' → logprob: -2.8110785484313965
    5. '(' → logprob: -3.5610785484313965
    6. ' (' → logprob: -3.8110785484313965
    7. ' None' → logprob: -5.3110785484313965
    8. ' left' → logprob: -5.3110785484313965
    9. '(int' → logprob: -6.5610785484313965
    10. '(_,' → logprob: -6.8110785484313965

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010874728672206402
    2. ' ,' → logprob: -4.8858747482299805
    3. ',left' → logprob: -5.8858747482299805
    4. 'left' → logprob: -8.38587474822998
    5. ',None' → logprob: -9.13587474822998
    6. ' left' → logprob: -10.01087474822998
    7. '<|end|>' → logprob: -10.13587474822998
    8. '(left' → logprob: -10.63587474822998
    9. '[left' → logprob: -11.63587474822998
    10. ',
' → logprob: -12.76087474822998

Token 147: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.001332263695076108
    2. ' left' → logprob: -6.6263322830200195
    3. '(left' → logprob: -12.37633228302002
    4. '[left' → logprob: -14.25133228302002
    5. 'None' → logprob: -14.62633228302002
    6. '	left' → logprob: -14.87633228302002
    7. '(' → logprob: -15.25133228302002
    8. '   ' → logprob: -16.251331329345703
    9. '.left' → logprob: -16.751331329345703
    10. '
' → logprob: -16.751331329345703

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010463856160640717
    2. ',right' → logprob: -7.001046180725098
    3. ' ,' → logprob: -9.126046180725098
    4. 'right' → logprob: -11.126046180725098
    5. ' right' → logprob: -11.751046180725098
    6. ',left' → logprob: -13.876046180725098
    7. ',
' → logprob: -14.001046180725098
    8. ',None' → logprob: -14.126046180725098
    9. '   ' → logprob: -15.251046180725098
    10. '<|end|>' → logprob: -16.126047134399414

Token 149: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.014164329506456852
    2. ' right' → logprob: -4.264164447784424
    3. '	right' → logprob: -14.639163970947266
    4. '   ' → logprob: -15.389163970947266
    5. ',right' → logprob: -16.514163970947266
    6. ' ' → logprob: -17.014163970947266
    7. '[right' → logprob: -17.139163970947266
    8. 'Right' → logprob: -17.264163970947266
    9. '(right' → logprob: -18.014163970947266
    10. '  ' → logprob: -18.764163970947266

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05812035873532295
    2. 'rest' → logprob: -3.5581202507019043
    3. ' rest' → logprob: -3.6831202507019043
    4. ' ,' → logprob: -5.933120250701904
    5. '(rest' → logprob: -8.808120727539062
    6. '<|end|>' → logprob: -11.933120727539062
    7. ',s' → logprob: -12.683120727539062
    8. '.rest' → logprob: -12.683120727539062
    9. '_rest' → logprob: -12.933120727539062
    10. ',None' → logprob: -12.933120727539062

Token 151: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.0067156096920371056
    2. ' rest' → logprob: -5.006715774536133
    3. '(rest' → logprob: -15.256715774536133
    4. ' ' → logprob: -18.006715774536133
    5. '.rest' → logprob: -18.881715774536133
    6. '   ' → logprob: -19.006715774536133
    7. 'Rest' → logprob: -19.381715774536133
    8. '```' → logprob: -19.631715774536133
    9. '`' → logprob: -19.881715774536133
    10. ' ' → logprob: -20.256715774536133

Token 152: '2' (ID: 17)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 153: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.45733752846717834
    2. '<|end|>' → logprob: -1.082337498664856
    3. '
' → logprob: -3.7073376178741455
    4. '<|end|>' → logprob: -6.332337379455566
    5. ' def' → logprob: -7.582337379455566
    6. '_' → logprob: -7.957337379455566
    7. ',' → logprob: -8.457337379455566
    8. '

' → logprob: -9.207337379455566
    9. '(' → logprob: -9.332337379455566
    10. ':def' → logprob: -9.332337379455566

Token 154: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18981359899044037
    2. '_' → logprob: -2.3148136138916016
    3. 'd' → logprob: -2.6898136138916016
    4. '(' → logprob: -5.814813613891602
    5. ',' → logprob: -7.314813613891602
    6. ')' → logprob: -7.689813613891602
    7. 'de' → logprob: -7.939813613891602
    8. '_def' → logprob: -7.939813613891602
    9. ':' → logprob: -8.064813613891602
    10. '[' → logprob: -8.564813613891602

Token 155: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.12705819308757782
    2. 'parse' → logprob: -2.127058267593384
    3. '_parse' → logprob: -9.752058029174805
    4. 'def' → logprob: -10.502058029174805
    5. ' def' → logprob: -10.752058029174805
    6. '_' → logprob: -12.627058029174805
    7. '	parse' → logprob: -13.002058029174805
    8. ' parser' → logprob: -13.127058029174805
    9. '(parse' → logprob: -13.127058029174805
    10. 'sub' → logprob: -13.252058029174805

Token 156: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.0002888682356569916
    2. '_' → logprob: -8.250288963317871
    3. '_s' → logprob: -11.000288963317871
    4. '_tree' → logprob: -11.500288963317871
    5. '_t' → logprob: -15.000288963317871
    6. '__' → logprob: -15.625288963317871
    7. '_subplot' → logprob: -16.500288009643555
    8. ' _' → logprob: -16.750288009643555
    9. '_Sub' → logprob: -17.625288009643555
    10. ''_' → logprob: -18.625288009643555

Token 157: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.00010473522706888616
    2. '_tree' → logprob: -9.375104904174805
    3. 'tre' → logprob: -11.250104904174805
    4. 't' → logprob: -13.125104904174805
    5. '(tree' → logprob: -13.375104904174805
    6. 'trees' → logprob: -13.625104904174805
    7. 'tr' → logprob: -14.500104904174805
    8. 'ree' → logprob: -14.500104904174805
    9. 'parse' → logprob: -15.250104904174805
    10. ' tree' → logprob: -15.625104904174805

Token 158: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0001410850090906024
    2. '(' → logprob: -8.875141143798828
    3. ' (' → logprob: -14.250141143798828
    4. 's' → logprob: -14.625141143798828
    5. '(n' → logprob: -17.750141143798828
    6. '(
' → logprob: -18.000141143798828
    7. '("("' → logprob: -18.000141143798828
    8. '(x' → logprob: -18.250141143798828
    9. '(a' → logprob: -18.250141143798828
    10. '(input' → logprob: -18.875141143798828

Token 159: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.038113318383693695
    2. '):
' → logprob: -3.2881133556365967
    3. ')' → logprob: -10.413113594055176
    4. '):

' → logprob: -10.913113594055176
    5. '):
' → logprob: -11.288113594055176
    6. 's' → logprob: -12.288113594055176
    7. ' ):' → logprob: -12.788113594055176
    8. '(s' → logprob: -13.038113594055176
    9. ':' → logprob: -14.163113594055176
    10. '   ' → logprob: -15.913113594055176

Token 160: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4448823034763336
    2. '   ' → logprob: -1.6948822736740112
    3. ' return' → logprob: -2.069882392883301
    4. 'if' → logprob: -3.569882392883301
    5. ' if' → logprob: -3.944882392883301
    6. 'token' → logprob: -7.694882392883301
    7. 'value' → logprob: -8.0698823928833
    8. 'node' → logprob: -8.5698823928833
    9. 'def' → logprob: -9.1948823928833
    10. 'try' → logprob: -9.3198823928833

Token 161: ' s' (ID: 265)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5483047366142273
    2. 'if' → logprob: -1.048304796218872
    3. 'node' → logprob: -3.548304796218872
    4. 'value' → logprob: -3.798304796218872
    5. 'val' → logprob: -4.048304557800293
    6. 'try' → logprob: -6.923304557800293
    7. 'token' → logprob: -6.923304557800293
    8. ' return' → logprob: -7.923304557800293
    9. ' if' → logprob: -9.048304557800293
    10. 'v' → logprob: -9.423304557800293

Token 162: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23952841758728027
    2. ' =' → logprob: -1.6145284175872803
    3. ',' → logprob: -4.489528656005859
    4. ')' → logprob: -6.739528656005859
    5. '.' → logprob: -7.739528656005859
    6. 'def' → logprob: -8.48952865600586
    7. 'token' → logprob: -8.73952865600586
    8. 's' → logprob: -8.98952865600586
    9. '=
' → logprob: -9.48952865600586
    10. '_tokens' → logprob: -9.61452865600586

Token 163: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03366702422499657
    2. ' s' → logprob: -3.4086670875549316
    3. 'parse' → logprob: -11.033666610717773
    4. ' ' → logprob: -13.908666610717773
    5. ' parse' → logprob: -13.908666610717773
    6. '<|end|>' → logprob: -14.408666610717773
    7. 'strip' → logprob: -14.408666610717773
    8. '(s' → logprob: -15.033666610717773
    9. 'sys' → logprob: -15.471166610717773
    10. '>' → logprob: -16.033666610717773

Token 164: '.l' (ID: 1000)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.1035166084766388
    2. '.l' → logprob: -2.3535165786743164
    3. '.rstrip' → logprob: -6.478516578674316
    4. '.' → logprob: -6.478516578674316
    5. 'strip' → logprob: -8.853516578674316
    6. '[' → logprob: -10.603516578674316
    7. '[:]' → logprob: -11.228516578674316
    8. '<|end|>' → logprob: -11.853516578674316
    9. '[::-' → logprob: -12.103516578674316
    10. 's' → logprob: -12.228516578674316

Token 165: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -3.054500666621607e-06
    2. 'trip' → logprob: -12.87500286102295
    3. '_strip' → logprob: -15.25000286102295
    4. 'Strip' → logprob: -17.000003814697266
    5. 'rstrip' → logprob: -17.250003814697266
    6. ' strip' → logprob: -17.250003814697266
    7. '.strip' → logprob: -17.750003814697266
    8. 'trim' → logprob: -18.000003814697266
    9. 'stripe' → logprob: -19.000003814697266
    10. 'str' → logprob: -19.125003814697266

Token 166: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.5760020017623901
    2. '()' → logprob: -0.8260020017623901
    3. '   ' → logprob: -10.20100212097168
    4. '()

' → logprob: -11.70100212097168
    5. '()
' → logprob: -12.32600212097168
    6. ')' → logprob: -12.57600212097168
    7. '(' → logprob: -13.20100212097168
    8. ' ()' → logprob: -13.32600212097168
    9. ' ()
' → logprob: -13.57600212097168
    10. ')
' → logprob: -13.82600212097168

Token 167: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24386857450008392
    2. 'return' → logprob: -1.6188685894012451
    3. 'node' → logprob: -4.868868350982666
    4. 'value' → logprob: -5.368868350982666
    5. 'token' → logprob: -5.368868350982666
    6. 'val' → logprob: -6.993868350982666
    7. ' if' → logprob: -8.993868827819824
    8. 'try' → logprob: -9.743868827819824
    9. 'result' → logprob: -10.368868827819824
    10. ' return' → logprob: -10.618868827819824

Token 168: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.17373348772525787
    2. 'return' → logprob: -1.9237334728240967
    3. 'node' → logprob: -5.048733711242676
    4. 'value' → logprob: -5.798733711242676
    5. 'val' → logprob: -6.048733711242676
    6. 'token' → logprob: -6.673733711242676
    7. 'try' → logprob: -8.798733711242676
    8. ' if' → logprob: -9.798733711242676
    9. 'root' → logprob: -10.423733711242676
    10. 'tree' → logprob: -10.423733711242676

Token 169: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.20516301691532135
    2. 's' → logprob: -1.7051630020141602
    3. ' not' → logprob: -5.70516300201416
    4. ' len' → logprob: -8.58016300201416
    5. 'not' → logprob: -9.20516300201416
    6. 'len' → logprob: -9.45516300201416
    7. '(s' → logprob: -11.08016300201416
    8. ' ' → logprob: -11.95516300201416
    9. '(' → logprob: -11.95516300201416
    10. ')' → logprob: -12.33016300201416

Token 170: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004104877356439829
    2. '==' → logprob: -6.129105091094971
    3. ' and' → logprob: -6.629105091094971
    4. 'and' → logprob: -7.629105091094971
    5. '.startswith' → logprob: -9.504104614257812
    6. ' ==' → logprob: -10.504104614257812
    7. '.' → logprob: -13.504104614257812
    8. '[:' → logprob: -13.754104614257812
    9. 'startswith' → logprob: -13.754104614257812
    10. '=' → logprob: -14.629104614257812

Token 171: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3305996060371399
    2. '0' → logprob: -1.3305995464324951
    3. '[' → logprob: -4.580599784851074
    4. '(' → logprob: -5.830599784851074
    5. '('' → logprob: -6.205599784851074
    6. ''[' → logprob: -7.580599784851074
    7. ' ' → logprob: -7.705599784851074
    8. ' '('' → logprob: -8.080599784851074
    9. ''s' → logprob: -8.830599784851074
    10. 'isdigit' → logprob: -9.580599784851074

Token 172: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.081294484436512
    2. ']==' → logprob: -3.081294536590576
    3. ']=='' → logprob: -4.706294536590576
    4. '==' → logprob: -4.831294536590576
    5. ' ==' → logprob: -5.331294536590576
    6. ']!=' → logprob: -5.456294536590576
    7. 'isdigit' → logprob: -6.456294536590576
    8. ']!='' → logprob: -6.581294536590576
    9. ' !=' → logprob: -6.831294536590576
    10. '!=' → logprob: -6.956294536590576

Token 173: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9341875314712524
    2. '!=' → logprob: -1.5591875314712524
    3. 'isdigit' → logprob: -1.6841875314712524
    4. ' ==' → logprob: -2.559187412261963
    5. '=='' → logprob: -2.684187412261963
    6. ' !=' → logprob: -3.434187412261963
    7. '!='' → logprob: -3.934187412261963
    8. '.is' → logprob: -4.809187412261963
    9. 'is' → logprob: -5.934187412261963
    10. '[' → logprob: -6.684187412261963

Token 174: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -3.03521392197581e-05
    2. '')' → logprob: -11.375030517578125
    3. ' '('' → logprob: -11.625030517578125
    4. '(' → logprob: -12.500030517578125
    5. '"' → logprob: -13.000030517578125
    6. ''(' → logprob: -13.500030517578125
    7. ''-' → logprob: -13.750030517578125
    8. '('' → logprob: -14.750030517578125
    9. ''#' → logprob: -15.500030517578125
    10. ''s' → logprob: -16.125030517578125

Token 175: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17632155120372772
    2. ':
' → logprob: -2.051321506500244
    3. ',' → logprob: -4.551321506500244
    4. '):' → logprob: -4.801321506500244
    5. '       ' → logprob: -5.426321506500244
    6. '):
' → logprob: -5.551321506500244
    7. '   ' → logprob: -5.676321506500244
    8. ')' → logprob: -6.301321506500244
    9. ':return' → logprob: -8.176321983337402
    10. ' or' → logprob: -8.801321983337402

Token 176: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7643957734107971
    2. 'return' → logprob: -1.2643957138061523
    3. '   ' → logprob: -1.6393957138061523
    4. '       ' → logprob: -2.8893957138061523
    5. '	return' → logprob: -7.639395713806152
    6. ' ' → logprob: -7.764395713806152
    7. ',' → logprob: -8.014395713806152
    8. '
' → logprob: -8.264395713806152
    9. ' None' → logprob: -8.764395713806152
    10. '    ' → logprob: -9.264395713806152

Token 177: ' node' (ID: 4596)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00867945421487093
    2. ' return' → logprob: -5.383679389953613
    3. '   ' → logprob: -6.758679389953613
    4. 'None' → logprob: -6.758679389953613
    5. 'node' (adapté à ' node') → logprob: -6.883679389953613
    6. '
' → logprob: -8.883679389953613
    7. 'result' → logprob: -8.883679389953613
    8. ' None' → logprob: -9.508679389953613
    9. 'left' → logprob: -9.758679389953613
    10. 'tree' → logprob: -9.883679389953613

Token 178: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3158503472805023
    2. ',' → logprob: -1.4408503770828247
    3. '=' → logprob: -3.440850257873535
    4. '=None' → logprob: -6.565850257873535
    5. ' ,' → logprob: -9.065850257873535
    6. 's' → logprob: -9.440850257873535
    7. ')' → logprob: -9.815850257873535
    8. '_value' → logprob: -10.065850257873535
    9. '_val' → logprob: -10.190850257873535
    10. '=parse' → logprob: -10.190850257873535

Token 179: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.3935675621032715
    2. 'left' → logprob: -1.1435675621032715
    3. ' l' → logprob: -5.6435675621032715
    4. 'l' → logprob: -5.8935675621032715
    5. '	left' → logprob: -10.26856803894043
    6. ' ' → logprob: -10.39356803894043
    7. '_left' → logprob: -10.39356803894043
    8. ' _' → logprob: -10.64356803894043
    9. 'rest' → logprob: -10.76856803894043
    10. ' rest' → logprob: -11.14356803894043

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017469677550252527
    2. '<|end|>' → logprob: -9.000174522399902
    3. ' ,' → logprob: -10.625174522399902
    4. '<|end|>' → logprob: -10.875174522399902
    5. ',right' → logprob: -12.500174522399902
    6. 'right' → logprob: -13.500174522399902
    7. ',node' → logprob: -13.875174522399902
    8. 's' → logprob: -15.000174522399902
    9. ' ' → logprob: -15.000174522399902
    10. '=' → logprob: -15.375174522399902

Token 181: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.029753733426332474
    2. ' right' → logprob: -3.5297536849975586
    3. '	right' → logprob: -13.279753684997559
    4. '(right' → logprob: -14.529753684997559
    5. ',right' → logprob: -14.779753684997559
    6. '<|end|>' → logprob: -15.779753684997559
    7. '[right' → logprob: -16.154754638671875
    8. ' ' → logprob: -16.279754638671875
    9. 'rest' → logprob: -17.154754638671875
    10. '.right' → logprob: -17.154754638671875

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005065653240308166
    2. '=' → logprob: -7.750506401062012
    3. ' =' → logprob: -10.000506401062012
    4. ' ,' → logprob: -10.750506401062012
    5. '<|end|>' → logprob: -11.875506401062012
    6. 's' → logprob: -13.750506401062012
    7. ' ' → logprob: -15.375506401062012
    8. ',
' → logprob: -16.000507354736328
    9. '<|end|>' → logprob: -16.000507354736328
    10. ')' → logprob: -16.375507354736328

Token 183: ' rest' (ID: 2867)
  Prédit: ' rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.2832663953304291
    2. 'rest' → logprob: -1.4082664251327515
    3. ' s' → logprob: -7.283266544342041
    4. ' remainder' → logprob: -7.408266544342041
    5. 's' → logprob: -8.033266067504883
    6. ' tail' → logprob: -8.283266067504883
    7. ' rem' → logprob: -9.908266067504883
    8. 'tail' → logprob: -10.033266067504883
    9. ' new' → logprob: -10.158266067504883
    10. ' remaining' → logprob: -11.033266067504883

Token 184: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132868707180023
    2. ' =' → logprob: -1.3132869005203247
    3. ',' → logprob: -10.688286781311035
    4. 's' → logprob: -13.938286781311035
    5. ')' → logprob: -14.438286781311035
    6. ' ' → logprob: -15.313286781311035
    7. ')=' → logprob: -15.688286781311035
    8. '=
' → logprob: -15.813286781311035
    9. ' =
' → logprob: -15.938286781311035
    10. '<|end|>' → logprob: -17.06328773498535

Token 185: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.5759550333023071
    2. 'parse' → logprob: -0.8259550333023071
    3. '	parse' → logprob: -11.825955390930176
    4. '(parse' → logprob: -12.200955390930176
    5. '=parse' → logprob: -13.075955390930176
    6. '.parse' → logprob: -14.825955390930176
    7. '_parse' → logprob: -14.825955390930176
    8. ' ' → logprob: -15.950955390930176
    9. '
' → logprob: -16.20095443725586
    10. 'parser' → logprob: -17.70095443725586

Token 186: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.0007202956476248801
    2. '_sub' → logprob: -7.250720500946045
    3. '_t' → logprob: -11.625720024108887
    4. '_' → logprob: -13.875720024108887
    5. 'tree' → logprob: -15.375720024108887
    6. '_TREE' → logprob: -17.125720977783203
    7. '_s' → logprob: -17.250720977783203
    8. ' tree' → logprob: -17.250720977783203
    9. '__' → logprob: -17.375720977783203
    10. '_parse' → logprob: -17.500720977783203

Token 187: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0038904573302716017
    2. 's' → logprob: -5.753890514373779
    3. '(' → logprob: -7.253890514373779
    4. ')' → logprob: -12.753890037536621
    5. '(rest' → logprob: -13.628890037536621
    6. '(
' → logprob: -14.253890037536621
    7. ' (' → logprob: -15.503890037536621
    8. ')s' → logprob: -17.503890991210938
    9. 'rest' → logprob: -17.503890991210938
    10. ')(' → logprob: -18.253890991210938

Token 188: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.047134305234067e-05
    2. ')
' → logprob: -10.750030517578125
    3. ' )' → logprob: -12.125030517578125
    4. '   ' → logprob: -13.625030517578125
    5. ')s' → logprob: -13.750030517578125
    6. ')return' → logprob: -14.625030517578125
    7. '(s' → logprob: -15.625030517578125
    8. '<|end|>' → logprob: -16.125030517578125
    9. ' ' → logprob: -16.250030517578125
    10. ')

' → logprob: -16.375030517578125

Token 189: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3158491253852844
    2. '       ' → logprob: -1.5658490657806396
    3. '	return' → logprob: -3.3158490657806396
    4. ' return' → logprob: -4.190849304199219
    5. '<|end|>' → logprob: -5.690849304199219
    6. '
' → logprob: -6.190849304199219
    7. 'return' → logprob: -6.440849304199219
    8. ':return' → logprob: -7.065849304199219
    9. '	' → logprob: -7.690849304199219
    10. '    
' → logprob: -7.690849304199219

Token 190: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3991488814353943
    2. 'return' (adapté à ' return') → logprob: -1.274148941040039
    3. '	return' → logprob: -4.024148941040039
    4. '       ' → logprob: -4.024148941040039
    5. '   ' → logprob: -4.399148941040039
    6. ':return' → logprob: -7.274148941040039
    7. ' ' → logprob: -8.274148941040039
    8. '
' → logprob: -8.399148941040039
    9. ',' → logprob: -10.024148941040039
    10. '    ' → logprob: -10.774148941040039

Token 191: ' (' (ID: 350)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.44122210144996643
    2. ' node' → logprob: -1.066222071647644
    3. '(node' → logprob: -4.691222190856934
    4. ' None' → logprob: -7.191222190856934
    5. 'None' → logprob: -7.191222190856934
    6. ' (' → logprob: -7.316222190856934
    7. 'left' → logprob: -7.441222190856934
    8. ' left' → logprob: -8.316222190856934
    9. '(None' → logprob: -8.941222190856934
    10. '(left' → logprob: -9.941222190856934

Token 192: 'node' (ID: 7005)
  Prédit: 'node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.07559782266616821
    2. 'left' → logprob: -3.3255977630615234
    3. ' node' → logprob: -3.7005977630615234
    4. '(node' → logprob: -5.075597763061523
    5. 'None' → logprob: -5.825597763061523
    6. ' left' → logprob: -6.825597763061523
    7. '(left' → logprob: -7.575597763061523
    8. ' None' → logprob: -7.700597763061523
    9. ' (' → logprob: -7.950597763061523
    10. '(None' → logprob: -8.575597763061523

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007040363270789385
    2. ' ,' → logprob: -5.007040500640869
    3. ',left' → logprob: -8.632040023803711
    4. ')' → logprob: -10.007040023803711
    5. '),' → logprob: -10.507040023803711
    6. '<|end|>' → logprob: -10.632040023803711
    7. ',None' → logprob: -11.132040023803711
    8. ' ' → logprob: -11.257040023803711
    9. ',right' → logprob: -12.132040023803711
    10. 'left' → logprob: -12.632040023803711

Token 194: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.28408095240592957
    2. ' left' → logprob: -1.409080982208252
    3. '(left' → logprob: -6.659080982208252
    4. ')' → logprob: -6.909080982208252
    5. '[left' → logprob: -8.284080505371094
    6. ' (' → logprob: -9.159080505371094
    7. '	left' → logprob: -10.159080505371094
    8. ' ' → logprob: -10.159080505371094
    9. '(' → logprob: -10.534080505371094
    10. ',left' → logprob: -10.659080505371094

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021331508469302207
    2. ' ,' → logprob: -8.625213623046875
    3. ',right' → logprob: -10.875213623046875
    4. '<|end|>' → logprob: -11.375213623046875
    5. ')' → logprob: -13.625213623046875
    6. ',
' → logprob: -14.375213623046875
    7. '<|end|>' → logprob: -15.000213623046875
    8. '‌,' → logprob: -15.625213623046875
    9. ',)' → logprob: -15.750213623046875
    10. 'right' → logprob: -15.875213623046875

Token 196: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5759521722793579
    2. ' right' → logprob: -0.8259521722793579
    3. '	right' → logprob: -12.450952529907227
    4. ',right' → logprob: -12.450952529907227
    5. '(right' → logprob: -12.950952529907227
    6. '[right' → logprob: -13.950952529907227
    7. ' ' → logprob: -14.325952529907227
    8. '
' → logprob: -15.075952529907227
    9. '.right' → logprob: -15.950952529907227
    10. ')' → logprob: -16.075952529907227

Token 197: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005087109748274088
    2. ')' → logprob: -8.000508308410645
    3. '),' → logprob: -8.875508308410645
    4. ' ,' → logprob: -10.500508308410645
    5. ',)' → logprob: -12.625508308410645
    6. 'rest' → logprob: -14.750508308410645
    7. ',s' → logprob: -15.125508308410645
    8. ',),' → logprob: -15.125508308410645
    9. '(rest' → logprob: -15.250508308410645
    10. '<|end|>' → logprob: -15.250508308410645

Token 198: ' True' (ID: 6432)
  Prédit: ' rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.16023662686347961
    2. 'rest' → logprob: -1.9102365970611572
    3. '(rest' → logprob: -11.410236358642578
    4. ' ' → logprob: -13.660236358642578
    5. '.rest' → logprob: -16.410236358642578
    6. '_rest' → logprob: -16.535236358642578
    7. ' resta' → logprob: -16.535236358642578
    8. ' ' → logprob: -16.910236358642578
    9. '<|end|>' → logprob: -17.285236358642578
    10. ' 
' → logprob: -18.535236358642578

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032922595273703337
    2. ' ,' → logprob: -6.378292083740234
    3. '   ' → logprob: -6.628292083740234
    4. '<|end|>' → logprob: -9.128292083740234
    5. ',
' → logprob: -10.253292083740234
    6. ' else' → logprob: -10.628292083740234
    7. ')' → logprob: -10.628292083740234
    8. 'else' → logprob: -11.003292083740234
    9. ' ' → logprob: -11.628292083740234
    10. '(rest' → logprob: -11.878292083740234

Token 200: ' rest' (ID: 2867)
  Prédit: ' rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rest' → logprob: -0.018152983859181404
    2. 'rest' → logprob: -4.018153190612793
    3. '(rest' → logprob: -12.768153190612793
    4. '.rest' → logprob: -16.643152236938477
    5. ' resta' → logprob: -17.643152236938477
    6. '_rest' → logprob: -17.643152236938477
    7. ' ' → logprob: -17.643152236938477
    8. ' ' → logprob: -18.393152236938477
    9. 'Rest' → logprob: -18.393152236938477
    10. 's' → logprob: -20.518152236938477

Token 201: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1075553148984909
    2. '<|end|>' → logprob: -2.732555389404297
    3. '
' → logprob: -3.857555389404297
    4. '    
' → logprob: -5.357555389404297
    5. '<|end|>' → logprob: -5.857555389404297
    6. 'else' → logprob: -6.732555389404297
    7. ')' → logprob: -6.857555389404297
    8. '(' → logprob: -6.857555389404297
    9. ' else' → logprob: -7.107555389404297
    10. ' ' → logprob: -7.482555389404297

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0070197684690356255
    2. ' else' → logprob: -5.632019996643066
    3. 'else' → logprob: -6.757019996643066
    4. '
' → logprob: -7.757019996643066
    5. '    
' → logprob: -7.757019996643066
    6. '<|end|>' → logprob: -7.757019996643066
    7. '```' → logprob: -8.007019996643066
    8. '	else' → logprob: -8.757019996643066
    9. 'elif' → logprob: -9.632019996643066
    10. '(' → logprob: -10.007019996643066

Token 203: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6248325705528259
    2. 'else' (adapté à ' else') → logprob: -1.1248326301574707
    3. ' else' → logprob: -2.2498326301574707
    4. 'elif' → logprob: -3.8748326301574707
    5. '
' → logprob: -4.749832630157471
    6. ' elif' → logprob: -5.999832630157471
    7. '    
' → logprob: -6.999832630157471
    8. 'if' → logprob: -7.249832630157471
    9. ' ' → logprob: -8.374832153320312
    10. ' if' → logprob: -8.624832153320312

Token 204: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21692465245723724
    2. '       ' → logprob: -2.0919246673583984
    3. 'token' → logprob: -4.091924667358398
    4. 'return' → logprob: -4.216924667358398
    5. 'node' → logprob: -4.841924667358398
    6. ' return' → logprob: -5.091924667358398
    7. ' token' → logprob: -5.466924667358398
    8. ',' → logprob: -5.716924667358398
    9. '
' → logprob: -5.841924667358398
    10. '    
' → logprob: -5.966924667358398

Token 205: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38065245747566223
    2. 'num' → logprob: -1.3806524276733398
    3. 'idx' → logprob: -4.50565242767334
    4. 'token' → logprob: -4.50565242767334
    5. 'number' → logprob: -4.50565242767334
    6. ' num' → logprob: -5.00565242767334
    7. 'return' → logprob: -5.13065242767334
    8. 'index' → logprob: -5.50565242767334
    9. 'node' → logprob: -6.13065242767334
    10. 'value' → logprob: -6.25565242767334

Token 206: ' i' (ID: 575)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.12732785940170288
    2. 'value' → logprob: -3.5023279190063477
    3. 'idx' → logprob: -3.5023279190063477
    4. 'val' → logprob: -4.002327919006348
    5. 'i' (adapté à ' i') → logprob: -4.127327919006348
    6. 'index' → logprob: -5.127327919006348
    7. 'return' → logprob: -5.377327919006348
    8. 'number' → logprob: -5.502327919006348
    9. '#' → logprob: -5.752327919006348
    10. 'node' → logprob: -6.127327919006348

Token 207: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05673458054661751
    2. ' =' → logprob: -2.931734561920166
    3. 'nd' → logprob: -6.431734561920166
    4. 'n' → logprob: -8.681735038757324
    5. 'd' → logprob: -11.556735038757324
    6. ',' → logprob: -11.681735038757324
    7. 'x' → logprob: -11.931735038757324
    8. 's' → logprob: -11.931735038757324
    9. '=end' → logprob: -11.931735038757324
    10. 'nt' → logprob: -12.181735038757324

Token 208: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007610886357724667
    2. ' ' → logprob: -4.88261079788208
    3. '1' → logprob: -13.007611274719238
    4. 'len' → logprob: -13.257611274719238
    5. 's' → logprob: -14.757611274719238
    6. 'next' → logprob: -15.382611274719238
    7. ' next' → logprob: -17.132610321044922
    8. ' len' → logprob: -17.257610321044922
    9. '
' → logprob: -17.507610321044922
    10. ' s' → logprob: -18.632610321044922

Token 209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.141186450899113e-05
    2. ' ' → logprob: -11.500020980834961
    3. '1' → logprob: -11.625020980834961
    4. 'next' → logprob: -13.750020980834961
    5. 'len' → logprob: -13.875020980834961
    6. 's' → logprob: -15.250020980834961
    7. ' next' → logprob: -18.75002098083496
    8. '
' → logprob: -18.75002098083496
    9. '```' → logprob: -19.00002098083496
    10. '   ' → logprob: -19.75002098083496

Token 210: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.213891863822937
    2. ' while' → logprob: -1.838891863822937
    3. '<|end|>' → logprob: -3.5888919830322266
    4. '
' → logprob: -5.838891983032227
    5. '	while' → logprob: -6.588891983032227
    6. '<|end|>' → logprob: -7.463891983032227
    7. ' ' → logprob: -8.213891983032227
    8. 'i' → logprob: -8.213891983032227
    9. 'While' → logprob: -8.463891983032227
    10. '   ' → logprob: -8.713891983032227

Token 211: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03164399415254593
    2. ' while' → logprob: -3.531644105911255
    3. '<|end|>' → logprob: -7.031643867492676
    4. '	while' → logprob: -8.031643867492676
    5. '
' → logprob: -8.156643867492676
    6. '<|end|>' → logprob: -9.156643867492676
    7. 'i' → logprob: -9.281643867492676
    8. '   ' → logprob: -9.406643867492676
    9. 'While' → logprob: -9.656643867492676
    10. '```' → logprob: -11.031643867492676

Token 212: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.02975616231560707
    2. ' while' → logprob: -3.5297560691833496
    3. 'While' → logprob: -12.654756546020508
    4. '	while' → logprob: -13.404756546020508
    5. '<|end|>' → logprob: -14.654756546020508
    6. '
' → logprob: -14.904756546020508
    7. ' While' → logprob: -16.154756546020508
    8. ' ' → logprob: -16.779756546020508
    9. '<|end|>' → logprob: -18.029756546020508
    10. ' 
' → logprob: -18.279756546020508

Token 213: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3490258455276489
    2. ' i' → logprob: -1.224025845527649
    3. 's' → logprob: -8.09902572631836
    4. ' s' → logprob: -8.22402572631836
    5. ' ' → logprob: -12.09902572631836
    6. '	i' → logprob: -13.47402572631836
    7. '(i' → logprob: -13.72402572631836
    8. 'isdigit' → logprob: -15.22402572631836
    9. ' (' → logprob: -15.28652572631836
    10. ' ' → logprob: -15.66152572631836

Token 214: ' <' (ID: 464)
  Prédit: '<len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<len' → logprob: -0.16719338297843933
    2. ' <' → logprob: -2.0421934127807617
    3. '<' → logprob: -3.7921934127807617
    4. 'i' → logprob: -6.667193412780762
    5. 'len' → logprob: -8.417193412780762
    6. '<i' → logprob: -9.667193412780762
    7. ' i' → logprob: -10.417193412780762
    8. '<s' → logprob: -10.417193412780762
    9. 's' → logprob: -11.542193412780762
    10. '[len' → logprob: -11.917193412780762

Token 215: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0004309076175559312
    2. ' len' → logprob: -7.750431060791016
    3. '<len' → logprob: -16.125431060791016
    4. '(len' → logprob: -17.125431060791016
    5. '=len' → logprob: -17.625431060791016
    6. '	len' → logprob: -18.250431060791016
    7. '[len' → logprob: -19.625431060791016
    8. ',len' → logprob: -20.375431060791016
    9. '
' → logprob: -21.000431060791016
    10. '<|end|>' → logprob: -21.750431060791016

Token 216: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1310025155544281
    2. '(s' → logprob: -2.131002426147461
    3. ' s' → logprob: -5.506002426147461
    4. '(' → logprob: -13.256002426147461
    5. ' (' → logprob: -13.881002426147461
    6. ')' → logprob: -15.256002426147461
    7. '<|end|>' → logprob: -15.756002426147461
    8. '<|end|>' → logprob: -16.00600242614746
    9. '_s' → logprob: -16.13100242614746
    10. ' ' → logprob: -16.13100242614746

Token 217: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06690692156553268
    2. 'and' → logprob: -2.8169069290161133
    3. ')' → logprob: -5.316906929016113
    4. ' )' → logprob: -11.191906929016113
    5. ' ' → logprob: -12.441906929016113
    6. '	and' → logprob: -13.941906929016113
    7. '   ' → logprob: -15.941906929016113
    8. '<|end|>' → logprob: -16.441905975341797
    9. ' и' → logprob: -16.566905975341797
    10. '):
' → logprob: -16.941905975341797

Token 218: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04858884960412979
    2. 'and' → logprob: -3.048588752746582
    3. ' ' → logprob: -13.548588752746582
    4. '	and' → logprob: -15.673588752746582
    5. 's' → logprob: -17.1735897064209
    6. '<|end|>' → logprob: -17.7985897064209
    7. ' or' → logprob: -18.0485897064209
    8. '   ' → logprob: -18.1735897064209
    9. '  ' → logprob: -18.6735897064209
    10. ' и' → logprob: -19.0485897064209

Token 219: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.038102999329566956
    2. '(s' → logprob: -3.7881031036376953
    3. ' s' → logprob: -4.288103103637695
    4. ' (' → logprob: -6.913103103637695
    5. 'not' → logprob: -12.538103103637695
    6. '(
' → logprob: -12.538103103637695
    7. 'isdigit' → logprob: -12.663103103637695
    8. '(' → logprob: -13.038103103637695
    9. ' ' → logprob: -13.288103103637695
    10. '   ' → logprob: -13.538103103637695

Token 220: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. 'i' → logprob: -14.625000953674316
    3. '[' → logprob: -15.750000953674316
    4. '[
' → logprob: -16.625
    5. '[I' → logprob: -18.75
    6. ' [' → logprob: -18.875
    7. 'def' → logprob: -19.375
    8. '```' → logprob: -19.75
    9. 'import' → logprob: -20.25
    10. '
' → logprob: -20.5

Token 221: '].' (ID: 1651)
  Prédit: 'isdigit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -0.0074924579821527
    2. '.is' → logprob: -5.507492542266846
    3. ' not' → logprob: -5.882492542266846
    4. ' is' → logprob: -8.132492065429688
    5. 'isal' → logprob: -9.257492065429688
    6. '[' → logprob: -9.632492065429688
    7. '!=' → logprob: -10.382492065429688
    8. 'not' → logprob: -10.382492065429688
    9. ' in' → logprob: -10.632492065429688
    10. '>' → logprob: -11.382492065429688

Token 222: 'isdigit' (ID: 187412)
  Prédit: 'isdigit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -4.008129963040119e-06
    2. 'isal' → logprob: -12.875003814697266
    3. ' is' → logprob: -14.000003814697266
    4. 'iss' → logprob: -14.500003814697266
    5. 'is' → logprob: -17.875003814697266
    6. '012' → logprob: -18.375003814697266
    7. 'isas' → logprob: -18.500003814697266
    8. 'isd' → logprob: -18.750003814697266
    9. '```' → logprob: -19.000003814697266
    10. 'digit' → logprob: -19.375003814697266

Token 223: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6280952095985413
    2. '()' → logprob: -0.8780952095985413
    3. '():
' → logprob: -3.0030951499938965
    4. '()>' → logprob: -7.8780951499938965
    5. '()==' → logprob: -8.128095626831055
    6. '()<' → logprob: -9.753095626831055
    7. '():

' → logprob: -9.878095626831055
    8. '()[' → logprob: -9.878095626831055
    9. 's' → logprob: -10.003095626831055
    10. '()+' → logprob: -10.003095626831055

Token 224: '           ' (ID: 352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8752506971359253
    2. ' i' → logprob: -1.0002506971359253
    3. '       ' → logprob: -1.7502506971359253
    4. '   ' → logprob: -4.000250816345215
    5. '           ' → logprob: -4.000250816345215
    6. ' or' → logprob: -5.750250816345215
    7. '	i' → logprob: -7.250250816345215
    8. '[i' → logprob: -8.500250816345215
    9. ' ' → logprob: -9.000250816345215
    10. '<|end|>' → logprob: -9.250250816345215

Token 225: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.004090627655386925
    2. ' i' → logprob: -5.504090785980225
    3. '   ' → logprob: -11.504090309143066
    4. '
' → logprob: -14.129090309143066
    5. '       ' → logprob: -14.379090309143066
    6. '	i' → logprob: -14.379090309143066
    7. ' ' → logprob: -16.254091262817383
    8. '  ' → logprob: -16.879091262817383
    9. '           ' → logprob: -16.879091262817383
    10. '    ' → logprob: -17.129091262817383

Token 226: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.012149689719080925
    2. ' +=' → logprob: -4.512149810791016
    3. '+' → logprob: -8.012149810791016
    4. '<|end|>' → logprob: -8.137149810791016
    5. 'i' → logprob: -8.387149810791016
    6. '=' → logprob: -9.137149810791016
    7. '<|end|>' → logprob: -10.137149810791016
    8. ']+=' → logprob: -10.262149810791016
    9. '=i' → logprob: -10.637149810791016
    10. '++' → logprob: -10.762149810791016

Token 227: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009114635176956654
    2. ' ' → logprob: -7.000911235809326
    3. '
' → logprob: -19.250911712646484
    4. '   ' → logprob: -20.000911712646484
    5. '```' → logprob: -20.000911712646484
    6. 'i' → logprob: -20.563411712646484
    7. ' ' → logprob: -21.313411712646484
    8. '１' → logprob: -21.375911712646484
    9. '0' → logprob: -21.625911712646484
    10. '۱' → logprob: -21.750911712646484

Token 228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '
' → logprob: -19.000003814697266
    4. '```' → logprob: -20.125003814697266
    5. '   ' → logprob: -21.437503814697266
    6. '１' → logprob: -22.000003814697266
    7. 'i' → logprob: -22.250003814697266
    8. '

' → logprob: -22.375003814697266
    9. '۱' → logprob: -22.375003814697266
    10. '0' → logprob: -22.625003814697266

Token 229: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04351165518164635
    2. ' ' → logprob: -4.043511867523193
    3. '<|end|>' → logprob: -4.418511867523193
    4. ' return' → logprob: -5.793511867523193
    5. '   ' → logprob: -6.168511867523193
    6. ' i' → logprob: -6.543511867523193
    7. ' s' → logprob: -7.043511867523193
    8. '        
' → logprob: -7.168511867523193
    9. ' if' → logprob: -7.668511867523193
    10. ' token' → logprob: -7.793511867523193

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07890113443136215
    2. ' return' → logprob: -3.3289010524749756
    3. 'return' → logprob: -4.703901290893555
    4. 'token' → logprob: -5.078901290893555
    5. ' token' → logprob: -5.328901290893555
    6. ' s' → logprob: -5.453901290893555
    7. '   ' → logprob: -5.453901290893555
    8. ' number' → logprob: -5.703901290893555
    9. ' ' → logprob: -6.328901290893555
    10. ' if' → logprob: -7.203901290893555

Token 231: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.45163673162460327
    2. 'return' → logprob: -1.576636791229248
    3. 'value' → logprob: -2.326636791229248
    4. 'val' → logprob: -3.951636791229248
    5. 'number' → logprob: -4.076636791229248
    6. 'token' → logprob: -4.701636791229248
    7. 'node' → logprob: -5.076636791229248
    8. ' return' → logprob: -5.826636791229248
    9. '       ' → logprob: -6.076636791229248
    10. ' num' → logprob: -6.951636791229248

Token 232: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10038469731807709
    2. '=' → logprob: -2.3503847122192383
    3. ',' → logprob: -9.225384712219238
    4. 's' → logprob: -9.725384712219238
    5. '<|end|>' → logprob: -11.850384712219238
    6. '=int' → logprob: -12.225384712219238
    7. ' ' → logprob: -13.350384712219238
    8. '<|end|>' → logprob: -13.475384712219238
    9. '=
' → logprob: -13.600384712219238
    10. ' =
' → logprob: -13.600384712219238

Token 233: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.17479191720485687
    2. ' int' → logprob: -1.924791932106018
    3. 's' → logprob: -4.5497918128967285
    4. ' s' → logprob: -5.5497918128967285
    5. ' ' → logprob: -13.674792289733887
    6. '[int' → logprob: -13.799792289733887
    7. '(int' → logprob: -14.049792289733887
    8. '	int' → logprob: -15.424792289733887
    9. '=int' → logprob: -15.424792289733887
    10. '```' → logprob: -15.549792289733887

Token 234: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00041172682540491223
    2. 's' → logprob: -8.000411987304688
    3. '(' → logprob: -9.500411987304688
    4. ' s' → logprob: -14.000411987304688
    5. ' (' → logprob: -14.375411987304688
    6. '(
' → logprob: -18.875411987304688
    7. ')' → logprob: -20.000411987304688
    8. ')s' → logprob: -20.000411987304688
    9. '<|end|>' → logprob: -20.000411987304688
    10. '(S' → logprob: -20.625411987304688

Token 235: '[:' (ID: 7808)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.7155990600585938
    2. 's' → logprob: -0.8405990600585938
    3. '[s' → logprob: -2.7155990600585938
    4. ')' → logprob: -5.215599060058594
    5. '[i' → logprob: -5.340599060058594
    6. ' s' → logprob: -6.965599060058594
    7. '[' → logprob: -7.090599060058594
    8. '[num' → logprob: -7.840599060058594
    9. '(' → logprob: -8.090599060058594
    10. ')s' → logprob: -8.215599060058594

Token 236: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.7697225252486533e-06
    2. ' i' → logprob: -12.500003814697266
    3. '	i' → logprob: -20.000003814697266
    4. ' ' → logprob: -20.500003814697266
    5. ')i' → logprob: -20.500003814697266
    6. '   ' → logprob: -21.000003814697266
    7. ')' → logprob: -21.875003814697266
    8. '{i' → logprob: -22.125003814697266
    9. '
' → logprob: -22.375003814697266
    10. '<|end|>' → logprob: -22.750003814697266

Token 237: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00719743175432086
    2. '])
' → logprob: -5.757197380065918
    3. ')' → logprob: -6.257197380065918
    4. ']),' → logprob: -6.757197380065918
    5. '],' → logprob: -7.757197380065918
    6. '),' → logprob: -8.257197380065918
    7. ')
' → logprob: -9.007197380065918
    8. ']' → logprob: -10.007197380065918
    9. ' ])' → logprob: -10.132197380065918
    10. ',' → logprob: -12.382197380065918

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05955507233738899
    2. ' return' → logprob: -2.9345550537109375
    3. 'return' → logprob: -5.8095550537109375
    4. '   ' → logprob: -7.8095550537109375
    5. '	return' → logprob: -8.184555053710938
    6. ',' → logprob: -8.309555053710938
    7. '        
' → logprob: -8.309555053710938
    8. '
' → logprob: -9.184555053710938
    9. ' rest' → logprob: -9.184555053710938
    10. '	' → logprob: -10.434555053710938

Token 239: ' rest' (ID: 2867)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.43796712160110474
    2. 'return' → logprob: -1.06296706199646
    3. ' rest' → logprob: -5.187967300415039
    4. 'rest' (adapté à ' rest') → logprob: -6.187967300415039
    5. '       ' → logprob: -6.812967300415039
    6. '
' → logprob: -8.062967300415039
    7. '	return' → logprob: -10.187967300415039
    8. '        
' → logprob: -10.312967300415039
    9. ' s' → logprob: -10.437967300415039
    10. ' 
' → logprob: -10.687967300415039

Token 240: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47419273853302
    2. '=' → logprob: -0.97419273853302
    3. ',' → logprob: -9.72419261932373
    4. 's' → logprob: -11.22419261932373
    5. '=num' → logprob: -11.59919261932373
    6. '=
' → logprob: -11.72419261932373
    7. '=s' → logprob: -11.84919261932373
    8. ' ' → logprob: -12.47419261932373
    9. '<|end|>' → logprob: -12.47419261932373
    10. 'num' → logprob: -12.84919261932373

Token 241: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47408658266067505
    2. ' s' → logprob: -0.974086582660675
    3. ' ' → logprob: -11.84908676147461
    4. '(s' → logprob: -13.34908676147461
    5. ' ' → logprob: -16.09908676147461
    6. '	s' → logprob: -16.34908676147461
    7. '"' → logprob: -16.59908676147461
    8. 'space' → logprob: -16.72408676147461
    9. '_s' → logprob: -17.09908676147461
    10. ''s' → logprob: -17.09908676147461

Token 242: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.875000953674316
    3. 'i' → logprob: -15.250000953674316
    4. '[len' → logprob: -16.000001907348633
    5. '```' → logprob: -16.125001907348633
    6. ' i' → logprob: -16.500001907348633
    7. ' [' → logprob: -16.625001907348633
    8. ' =' → logprob: -17.000001907348633
    9. '
' → logprob: -17.125001907348633
    10. '=i' → logprob: -17.375001907348633

Token 243: ':]
' (ID: 61598)
  Prédit: '.l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.6045114398002625
    2. '].' → logprob: -1.3545114994049072
    3. ']' → logprob: -1.8545114994049072
    4. '.' → logprob: -4.354511260986328
    5. '<|end|>' → logprob: -4.354511260986328
    6. ':].' → logprob: -5.854511260986328
    7. '<|end|>' → logprob: -5.979511260986328
    8. '().' → logprob: -6.354511260986328
    9. '.strip' → logprob: -6.479511260986328
    10. ' .' → logprob: -7.104511260986328

Token 244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2147843837738037
    2. 'return' → logprob: -1.2147843837738037
    3. ' return' → logprob: -1.2147843837738037
    4. '   ' → logprob: -2.2147843837738037
    5. '	return' → logprob: -7.714784622192383
    6. '
' → logprob: -10.839784622192383
    7. ' ' → logprob: -11.839784622192383
    8. '(' → logprob: -12.089784622192383
    9. '{return' → logprob: -12.089784622192383
    10. ':return' → logprob: -12.464784622192383

Token 245: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0009957717265933752
    2. ' return' → logprob: -7.000995635986328
    3. '   ' → logprob: -9.500995635986328
    4. '       ' → logprob: -11.625995635986328
    5. '
' → logprob: -14.500995635986328
    6. '	return' → logprob: -15.750995635986328
    7. ' ' → logprob: -18.500995635986328
    8. '        
' → logprob: -18.500995635986328
    9. ')return' → logprob: -19.375995635986328
    10. '{return' → logprob: -19.500995635986328

Token 246: ' (' (ID: 350)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.09029927849769592
    2. 'num' → logprob: -2.840299367904663
    3. ' (' → logprob: -3.965299367904663
    4. ' num' → logprob: -4.715299129486084
    5. ',num' → logprob: -12.590299606323242
    6. '[num' → logprob: -12.840299606323242
    7. '<num' → logprob: -13.340299606323242
    8. '((' → logprob: -13.590299606323242
    9. '(int' → logprob: -13.715299606323242
    10. '(number' → logprob: -13.965299606323242

Token 247: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0003657362540252507
    2. ' num' → logprob: -8.0003662109375
    3. '(num' → logprob: -10.5003662109375
    4. '[num' → logprob: -13.8753662109375
    5. '
' → logprob: -14.1253662109375
    6. 'None' → logprob: -15.1253662109375
    7. ')' → logprob: -16.2503662109375
    8. '(' → logprob: -16.3753662109375
    9. 'nu' → logprob: -16.3753662109375
    10. ',num' → logprob: -16.3753662109375

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002690032823011279
    2. ' ,' → logprob: -6.377689838409424
    3. '),' → logprob: -7.002689838409424
    4. 'False' → logprob: -10.377690315246582
    5. ',),' → logprob: -11.252690315246582
    6. ',None' → logprob: -11.877690315246582
    7. 'None' → logprob: -12.127690315246582
    8. ' ),' → logprob: -12.377690315246582
    9. ')' → logprob: -12.377690315246582
    10. ',false' → logprob: -12.877690315246582

Token 249: ' None' (ID: 4662)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.3990042507648468
    2. 'None' → logprob: -1.1490042209625244
    3. ' False' → logprob: -4.8990044593811035
    4. ' None' → logprob: -5.3990044593811035
    5. 'True' → logprob: -9.649003982543945
    6. '(False' → logprob: -12.149003982543945
    7. ',None' → logprob: -12.649003982543945
    8. ',' → logprob: -13.024003982543945
    9. '(None' → logprob: -13.149003982543945
    10. ')' → logprob: -13.524003982543945

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011975488450843841
    2. ',None' → logprob: -9.375120162963867
    3. ' ,' → logprob: -10.375120162963867
    4. '),' → logprob: -13.375120162963867
    5. 'None' → logprob: -13.375120162963867
    6. ')' → logprob: -15.375120162963867
    7. ' None' → logprob: -15.625120162963867
    8. ',null' → logprob: -17.250120162963867
    9. '<|end|>' → logprob: -17.375120162963867
    10. '   ' → logprob: -17.625120162963867

Token 251: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.004079589620232582
    2. ' None' → logprob: -5.504079818725586
    3. ',None' → logprob: -13.879079818725586
    4. '(None' → logprob: -15.504079818725586
    5. '_None' → logprob: -17.004079818725586
    6. '=None' → logprob: -17.879079818725586
    7. '.None' → logprob: -18.254079818725586
    8. '   ' → logprob: -18.254079818725586
    9. ' ' → logprob: -18.629079818725586
    10. '
' → logprob: -19.504079818725586

Token 252: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10097873210906982
    2. '),' → logprob: -2.3509788513183594
    3. ' ,' → logprob: -7.350978851318359
    4. ' ),' → logprob: -9.72597885131836
    5. ')' → logprob: -10.10097885131836
    6. ',),' → logprob: -10.85097885131836
    7. 'rest' → logprob: -12.97597885131836
    8. '   ' → logprob: -13.22597885131836
    9. ' ' → logprob: -13.97597885131836
    10. ' rest' → logprob: -14.10097885131836

Token 253: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.004930362105369568
    2. ' False' → logprob: -5.62993049621582
    3. 'True' → logprob: -6.62993049621582
    4. ' True' → logprob: -11.87993049621582
    5. '(False' → logprob: -13.62993049621582
    6. '0' → logprob: -15.75493049621582
    7. ' ' → logprob: -15.75493049621582
    8. 'i' → logprob: -15.87993049621582
    9. 'None' → logprob: -15.87993049621582
    10. '=False' → logprob: -16.25493049621582

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.047270167618989944
    2. 'rest' → logprob: -3.6722700595855713
    3. ' rest' → logprob: -4.29727029800415
    4. ' ,' → logprob: -5.79727029800415
    5. '(rest' → logprob: -6.04727029800415
    6. '<|end|>' → logprob: -6.54727029800415
    7. ',
' → logprob: -8.922269821166992
    8. ' ' → logprob: -10.172269821166992
    9. '.rest' → logprob: -10.547269821166992
    10. '',' → logprob: -11.172269821166992

Token 255: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.25192946195602417
    2. ' rest' → logprob: -1.501929521560669
    3. '(rest' → logprob: -15.12692928314209
    4. 's' → logprob: -17.751930236816406
    5. ' ' → logprob: -18.001930236816406
    6. '_rest' → logprob: -18.376930236816406
    7. '.rest' → logprob: -18.501930236816406
    8. 'Rest' → logprob: -18.501930236816406
    9. ' ' → logprob: -19.001930236816406
    10. ' s' → logprob: -19.126930236816406

Token 256: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 257: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 258: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.8799485564231873
    2. 'main' → logprob: -2.504948616027832
    3. ' inorder' → logprob: -2.879948616027832
    4. ' parse' → logprob: -3.004948616027832
    5. ' tree' → logprob: -3.129948616027832
    6. 'parse' → logprob: -3.254948616027832
    7. 'evaluate' → logprob: -3.254948616027832
    8. ' sum' → logprob: -3.379948616027832
    9. ' evaluate' → logprob: -3.629948616027832
    10. 'build' → logprob: -3.754948616027832

Token 259: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -1.14301598072052
    2. '_line' → logprob: -1.26801598072052
    3. '()' → logprob: -1.39301598072052
    4. '_input' → logprob: -2.7680158615112305
    5. '_' → logprob: -3.5180158615112305
    6. 's' → logprob: -3.8930158615112305
    7. 'line' → logprob: -4.6430158615112305
    8. '()>' → logprob: -5.6430158615112305
    9. '_lines' → logprob: -5.7680158615112305
    10. '():' → logprob: -5.8930158615112305

Token 260: '(line' (ID: 18178)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.014552926644682884
    2. '()' → logprob: -4.764553070068359
    3. '(s' → logprob: -5.514553070068359
    4. '(' → logprob: -6.639553070068359
    5. '():
' → logprob: -7.764553070068359
    6. ' ():' → logprob: -9.88955307006836
    7. 's' → logprob: -10.26455307006836
    8. '()(' → logprob: -11.13955307006836
    9. ' ()' → logprob: -11.26455307006836
    10. '(input' → logprob: -11.76455307006836

Token 261: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04871579259634018
    2. '):
' → logprob: -3.048715829849243
    3. ')' → logprob: -9.423715591430664
    4. '):
' → logprob: -10.298715591430664
    5. ':' → logprob: -11.923715591430664
    6. '):

' → logprob: -12.923715591430664
    7. 's' → logprob: -13.173715591430664
    8. ' ):' → logprob: -14.048715591430664
    9. '   ' → logprob: -14.548715591430664
    10. '_line' → logprob: -15.048715591430664

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010064927628263831
    2. 'return' → logprob: -7.376006603240967
    3. ' return' → logprob: -8.001006126403809
    4. 'node' → logprob: -11.001006126403809
    5. ' node' → logprob: -11.376006126403809
    6. ' s' → logprob: -12.376006126403809
    7. '   ' → logprob: -12.751006126403809
    8. ',' → logprob: -13.251006126403809
    9. 'tree' → logprob: -13.376006126403809
    10. 's' → logprob: -13.626006126403809

Token 263: ' line' (ID: 2543)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11337176710367203
    2. 'node' → logprob: -2.9883718490600586
    3. ' return' → logprob: -3.3633718490600586
    4. 'tree' → logprob: -4.363371849060059
    5. 'line' (adapté à ' line') → logprob: -5.238371849060059
    6. ' node' → logprob: -6.488371849060059
    7. '   ' → logprob: -7.113371849060059
    8. 'root' → logprob: -7.238371849060059
    9. ' tree' → logprob: -7.988371849060059
    10. 's' → logprob: -8.113371849060059

Token 264: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6334964632987976
    2. ' =' → logprob: -0.7584964632987976
    3. '=line' → logprob: -8.008496284484863
    4. '.strip' → logprob: -8.133496284484863
    5. ')' → logprob: -8.633496284484863
    6. '.' → logprob: -10.008496284484863
    7. ' =
' → logprob: -11.633496284484863
    8. '   ' → logprob: -11.758496284484863
    9. '.=' → logprob: -11.883496284484863
    10. ',' → logprob: -12.633496284484863

Token 265: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.004078758880496025
    2. ' line' → logprob: -5.5040788650512695
    3. '(line' → logprob: -16.254077911376953
    4. '	line' → logprob: -16.379077911376953
    5. '#line' → logprob: -16.754077911376953
    6. '=line' → logprob: -17.254077911376953
    7. '   ' → logprob: -18.629077911376953
    8. '[line' → logprob: -18.629077911376953
    9. ' ' → logprob: -19.004077911376953
    10. 'input' → logprob: -20.379077911376953

Token 266: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.008143364451825619
    2. '.' → logprob: -5.258143424987793
    3. '.rstrip' → logprob: -5.883143424987793
    4. '.l' → logprob: -9.133143424987793
    5. '.readline' → logprob: -12.758143424987793
    6. ' .' → logprob: -13.008143424987793
    7. '().' → logprob: -13.133143424987793
    8. 'strip' → logprob: -13.758143424987793
    9. ').' → logprob: -14.758143424987793
    10. 'rstrip' → logprob: -14.883143424987793

Token 267: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0013435659930109978
    2. '()
' → logprob: -6.626343727111816
    3. '())' → logprob: -11.501343727111816
    4. ')' → logprob: -12.626343727111816
    5. '()`' → logprob: -13.626343727111816
    6. '(),' → logprob: -14.376343727111816
    7. '()\' → logprob: -14.376343727111816
    8. '()
' → logprob: -14.501343727111816
    9. 'def' → logprob: -15.251343727111816
    10. '(' → logprob: -15.751343727111816

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01412084698677063
    2. ',' → logprob: -5.389121055603027
    3. 'return' → logprob: -5.389121055603027
    4. ' return' → logprob: -5.889121055603027
    5. 'node' → logprob: -7.264121055603027
    6. ' node' → logprob: -7.764121055603027
    7. ' if' → logprob: -8.639121055603027
    8. 'root' → logprob: -8.764121055603027
    9. 'if' → logprob: -9.264121055603027
    10. 'def' → logprob: -9.639121055603027

Token 269: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.5155948996543884
    2. 'return' → logprob: -1.0155949592590332
    3. 'if' → logprob: -4.265594959259033
    4. 'root' → logprob: -4.390594959259033
    5. 'tree' → logprob: -4.390594959259033
    6. 'result' → logprob: -7.265594959259033
    7. 'sub' → logprob: -8.265594482421875
    8. 'parsed' → logprob: -8.765594482421875
    9. 'left' → logprob: -9.140594482421875
    10. '(node' → logprob: -9.265594482421875

Token 270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0065733809024095535
    2. '=' → logprob: -5.75657320022583
    3. ' =' → logprob: -5.75657320022583
    4. ' ,' → logprob: -8.881573677062988
    5. ')' → logprob: -10.756573677062988
    6. 's' → logprob: -11.006573677062988
    7. 'token' → logprob: -11.381573677062988
    8. '<|end|>' → logprob: -12.256573677062988
    9. ' ' → logprob: -12.381573677062988
    10. ',
' → logprob: -12.381573677062988

Token 271: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.3981669247150421
    2. 'left' → logprob: -1.1481668949127197
    3. '_,' → logprob: -4.773167133331299
    4. ' _,' → logprob: -6.648167133331299
    5. '_' → logprob: -7.273167133331299
    6. ',' → logprob: -8.39816665649414
    7. '_left' → logprob: -9.39816665649414
    8. ',left' → logprob: -9.39816665649414
    9. 'rest' → logprob: -9.64816665649414
    10. ' _' → logprob: -9.64816665649414

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7014437364414334e-05
    2. '=' → logprob: -11.00002670288086
    3. ' =' → logprob: -12.37502670288086
    4. ' ,' → logprob: -13.12502670288086
    5. '<|end|>' → logprob: -13.25002670288086
    6. ',node' → logprob: -14.37502670288086
    7. '<|end|>' → logprob: -15.50002670288086
    8. ',right' → logprob: -15.50002670288086
    9. '=None' → logprob: -15.87502670288086
    10. ',
' → logprob: -16.43752670288086

Token 273: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.026304133236408234
    2. ' right' → logprob: -3.651304244995117
    3. ',right' → logprob: -13.151304244995117
    4. ',' → logprob: -14.901304244995117
    5. '	right' → logprob: -15.151304244995117
    6. ' ' → logprob: -15.401304244995117
    7. '(right' → logprob: -15.401304244995117
    8. '_,' → logprob: -15.651304244995117
    9. '...' → logprob: -15.776304244995117
    10. '[right' → logprob: -16.401304244995117

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.037183742970228195
    2. '=' → logprob: -3.5371837615966797
    3. ' =' → logprob: -4.91218376159668
    4. ' ,' → logprob: -10.03718376159668
    5. ' ' → logprob: -14.03718376159668
    6. '<|end|>' → logprob: -14.16218376159668
    7. ')' → logprob: -14.28718376159668
    8. '_,' → logprob: -14.91218376159668
    9. ',_' → logprob: -15.03718376159668
    10. ',node' → logprob: -15.28718376159668

Token 275: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.16213831305503845
    2. ' rest' → logprob: -1.9121383428573608
    3. '_' → logprob: -6.53713846206665
    4. '_rest' → logprob: -8.287137985229492
    5. ' _' → logprob: -8.912137985229492
    6. 'line' → logprob: -10.912137985229492
    7. ' line' → logprob: -11.037137985229492
    8. ' remainder' → logprob: -11.537137985229492
    9. '_=' → logprob: -11.912137985229492
    10. 'remaining' → logprob: -12.662137985229492

Token 276: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269947737455368
    2. ' =' → logprob: -2.1269948482513428
    3. ',' → logprob: -9.626995086669922
    4. ')' → logprob: -15.501995086669922
    5. '=
' → logprob: -15.501995086669922
    6. ' =
' → logprob: -16.501995086669922
    7. ' ' → logprob: -16.501995086669922
    8. '   ' → logprob: -16.751995086669922
    9. ')=' → logprob: -17.126995086669922
    10. '=

' → logprob: -17.751995086669922

Token 277: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.1269386112689972
    2. ' parse' → logprob: -2.126938581466675
    3. '(parse' → logprob: -12.251938819885254
    4. '   ' → logprob: -12.376938819885254
    5. '=parse' → logprob: -13.876938819885254
    6. '	parse' → logprob: -15.251938819885254
    7. '_parse' → logprob: -15.626938819885254
    8. '.parse' → logprob: -16.501937866210938
    9. ' ' → logprob: -16.501937866210938
    10. 'parser' → logprob: -17.126937866210938

Token 278: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -1.5048530030981055e-06
    2. '_' → logprob: -14.125001907348633
    3. '_line' → logprob: -15.375001907348633
    4. 'tree' → logprob: -15.500001907348633
    5. '_sub' → logprob: -16.000001907348633
    6. '_t' → logprob: -16.125001907348633
    7. '_TREE' → logprob: -17.250001907348633
    8. '_
' → logprob: -17.750001907348633
    9. '<Tree' → logprob: -17.875001907348633
    10. '
' → logprob: -18.125001907348633

Token 279: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.375
    3. '[line' → logprob: -16.625
    4. '=line' → logprob: -17.5
    5. '(lines' → logprob: -18.0
    6. ' line' → logprob: -18.0
    7. ',line' → logprob: -18.625
    8. 'line' → logprob: -19.25
    9. '(Line' → logprob: -19.5
    10. ' (' → logprob: -20.25

Token 280: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011841575615108013
    2. ')
' → logprob: -6.751183986663818
    3. ')return' → logprob: -11.501184463500977
    4. '   ' → logprob: -13.251184463500977
    5. ' )' → logprob: -14.126184463500977
    6. ')

' → logprob: -14.751184463500977
    7. ')
' → logprob: -15.251184463500977
    8. '())' → logprob: -16.251184463500977
    9. ')`' → logprob: -16.751184463500977
    10. '<|end|>' → logprob: -16.751184463500977

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07086604833602905
    2. ' return' → logprob: -2.820866107940674
    3. '
' → logprob: -5.570866107940674
    4. 'return' → logprob: -6.070866107940674
    5. '	return' → logprob: -6.445866107940674
    6. ' ' → logprob: -7.945866107940674
    7. '<|end|>' → logprob: -8.820865631103516
    8. ',' → logprob: -8.945865631103516
    9. '    
' → logprob: -9.195865631103516
    10. ')' → logprob: -9.445865631103516

Token 282: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16262738406658173
    2. ' return' → logprob: -1.9126273393630981
    3. '   ' → logprob: -6.037627220153809
    4. '	return' → logprob: -12.162627220153809
    5. '
' → logprob: -13.037627220153809
    6. ' ' → logprob: -13.037627220153809
    7. 'eturn' → logprob: -14.537627220153809
    8. 'def' → logprob: -14.787627220153809
    9. ')' → logprob: -15.037627220153809
    10. 'if' → logprob: -15.037627220153809

Token 283: ' node' (ID: 4596)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.2121703177690506
    2. ' (' → logprob: -2.087170362472534
    3. 'node' → logprob: -2.962170362472534
    4. ' node' → logprob: -4.212170124053955
    5. '(' → logprob: -7.712170124053955
    6. '[node' → logprob: -9.337170600891113
    7. '(None' → logprob: -10.212170600891113
    8. '((' → logprob: -12.212170600891113
    9. 'None' → logprob: -12.337170600891113
    10. ' ' → logprob: -12.462170600891113

Token 284: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 285: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.25193631649017334
    2. ' left' → logprob: -1.5019363164901733
    3. '(left' → logprob: -12.501935958862305
    4. '[left' → logprob: -13.376935958862305
    5. ' ' → logprob: -14.376935958862305
    6. '	left' → logprob: -14.751935958862305
    7. '   ' → logprob: -15.001935958862305
    8. '.left' → logprob: -16.126935958862305
    9. ',left' → logprob: -16.376935958862305
    10. ',' → logprob: -16.876935958862305

Token 286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.6696149840718135e-05
    2. ' ,' → logprob: -10.375056266784668
    3. ',right' → logprob: -10.875056266784668
    4. ',
' → logprob: -13.250056266784668
    5. '<|end|>' → logprob: -13.375056266784668
    6. 'def' → logprob: -13.625056266784668
    7. 'right' → logprob: -14.625056266784668
    8. ',node' → logprob: -14.875056266784668
    9. '```' → logprob: -15.375056266784668
    10. 'import' → logprob: -15.500056266784668

Token 287: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.06196802109479904
    2. ' right' → logprob: -2.8119680881500244
    3. '	right' → logprob: -15.936967849731445
    4. ',right' → logprob: -16.436967849731445
    5. '   ' → logprob: -16.811967849731445
    6. '(right' → logprob: -16.936967849731445
    7. '[right' → logprob: -17.936967849731445
    8. ' ' → logprob: -18.061967849731445
    9. 'left' → logprob: -18.811967849731445
    10. 'Right' → logprob: -19.561967849731445

Token 288: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 289: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 290: ' evaluate' (ID: 21646)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3219105303287506
    2. ' main' → logprob: -2.0719106197357178
    3. 'in' → logprob: -3.6969106197357178
    4. 'is' → logprob: -4.196910381317139
    5. 'count' → logprob: -4.446910381317139
    6. 'build' → logprob: -4.571910381317139
    7. 'max' → logprob: -4.696910381317139
    8. 'parse' → logprob: -4.696910381317139
    9. 'tree' → logprob: -4.696910381317139
    10. 'sum' → logprob: -4.696910381317139

Token 291: '_all' (ID: 13305)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.37199127674102783
    2. ' (' → logprob: -1.2469912767410278
    3. '(' → logprob: -4.246991157531738
    4. '(tree' → logprob: -5.121991157531738
    5. '(root' → logprob: -6.246991157531738
    6. '_tree' → logprob: -7.246991157531738
    7. '_' → logprob: -9.621991157531738
    8. '(Node' → logprob: -9.871991157531738
    9. '_node' → logprob: -9.996991157531738
    10. ' ' → logprob: -10.246991157531738

Token 292: '_' (ID: 62)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.0041290996596217155
    2. '(root' → logprob: -6.004128932952881
    3. '(' → logprob: -6.879128932952881
    4. '(tree' → logprob: -8.129129409790039
    5. ' (' → logprob: -8.629129409790039
    6. '(nodes' → logprob: -9.754129409790039
    7. '(n' → logprob: -10.129129409790039
    8. '(s' → logprob: -11.504129409790039
    9. '(Node' → logprob: -11.879129409790039
    10. '(depth' → logprob: -12.379129409790039

Token 293: 'ways' (ID: 2771)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.5893785953521729
    2. '(node' → logprob: -1.4643785953521729
    3. 'tree' → logprob: -2.339378595352173
    4. 'trees' → logprob: -2.589378595352173
    5. 'node' → logprob: -3.464378595352173
    6. '(root' → logprob: -6.089378356933594
    7. '(tree' → logprob: -6.339378356933594
    8. 'sub' → logprob: -6.339378356933594
    9. '(nodes' → logprob: -6.589378356933594
    10. '_nodes' → logprob: -7.089378356933594

Token 294: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.306959867477417
    2. '(' → logprob: -1.431959867477417
    3. '(root' → logprob: -4.431960105895996
    4. '(s' → logprob: -5.056960105895996
    5. '(tree' → logprob: -5.431960105895996
    6. ' (' → logprob: -6.306960105895996
    7. '(n' → logprob: -7.681960105895996
    8. '(nodes' → logprob: -8.681960105895996
    9. '(parent' → logprob: -9.556960105895996
    10. '(def' → logprob: -10.556960105895996

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03202701359987259
    2. '):' → logprob: -3.532027006149292
    3. ',node' → logprob: -6.782027244567871
    4. ')' → logprob: -7.532027244567871
    5. '):
' → logprob: -8.157027244567871
    6. ' ,' → logprob: -8.907027244567871
    7. '   ' → logprob: -9.657027244567871
    8. '(node' → logprob: -10.282027244567871
    9. ' ):' → logprob: -11.282027244567871
    10. '<|end|>' → logprob: -11.407027244567871

Token 296: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.3839932978153229
    2. ' left' → logprob: -1.5089932680130005
    3. ' memo' → logprob: -3.13399338722229
    4. 'memo' → logprob: -3.38399338722229
    5. 'cache' → logprob: -5.383993148803711
    6. 'visited' → logprob: -5.383993148803711
    7. ' cache' → logprob: -6.883993148803711
    8. 'path' → logprob: -7.008993148803711
    9. ' visited' → logprob: -7.133993148803711
    10. 'node' → logprob: -7.258993148803711

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021045419271104038
    2. ',right' → logprob: -9.000210762023926
    3. ' ,' → logprob: -10.500210762023926
    4. ')' → logprob: -11.000210762023926
    5. '):' → logprob: -11.125210762023926
    6. ',
' → logprob: -11.625210762023926
    7. ',left' → logprob: -11.875210762023926
    8. '   ' → logprob: -12.500210762023926
    9. ',node' → logprob: -12.875210762023926
    10. '):
' → logprob: -13.125210762023926

Token 298: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.061970822513103485
    2. ' right' → logprob: -2.8119707107543945
    3. ' ' → logprob: -13.436970710754395
    4. '   ' → logprob: -13.686970710754395
    5. '	right' → logprob: -15.186970710754395
    6. '  ' → logprob: -16.06197166442871
    7. 'Right' → logprob: -16.56197166442871
    8. ',right' → logprob: -16.68697166442871
    9. '    ' → logprob: -17.68697166442871
    10. '[right' → logprob: -18.06197166442871

Token 299: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010589201003313065
    2. '):
' → logprob: -4.760589122772217
    3. ',' → logprob: -6.260589122772217
    4. ')' → logprob: -10.010589599609375
    5. ' ):' → logprob: -11.760589599609375
    6. '   ' → logprob: -12.510589599609375
    7. '):

' → logprob: -13.010589599609375
    8. '):
' → logprob: -13.385589599609375
    9. ':' → logprob: -13.510589599609375
    10. ',
' → logprob: -15.760589599609375

Token 300: ' leaves' (ID: 15657)
  Prédit: ' memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' memo' → logprob: -0.6213482022285461
    2. 'memo' → logprob: -0.8713482022285461
    3. 'cache' → logprob: -4.4963483810424805
    4. 'results' → logprob: -4.9963483810424805
    5. 'values' → logprob: -5.1213483810424805
    6. ' cache' → logprob: -5.6213483810424805
    7. 'dp' → logprob: -5.8713483810424805
    8. 'target' → logprob: -6.3713483810424805
    9. ' ways' → logprob: -6.4963483810424805
    10. ' results' → logprob: -6.7463483810424805

Token 301: '_sets' (ID: 56707)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012799453921616077
    2. '):
' → logprob: -4.387799263000488
    3. ',' → logprob: -8.637799263000488
    4. ')' → logprob: -9.387799263000488
    5. ' ):' → logprob: -11.137799263000488
    6. '):

' → logprob: -12.137799263000488
    7. ':' → logprob: -12.512799263000488
    8. '):
' → logprob: -12.887799263000488
    9. '=' → logprob: -14.012799263000488
    10. '   ' → logprob: -14.387799263000488

Token 302: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019973674789071083
    2. '):
' → logprob: -4.1449737548828125
    3. ',' → logprob: -5.6449737548828125
    4. ')' → logprob: -7.8949737548828125
    5. '):

' → logprob: -11.769973754882812
    6. ' ):' → logprob: -11.894973754882812
    7. '):
' → logprob: -12.019973754882812
    8. ':' → logprob: -14.144973754882812
    9. '=' → logprob: -14.394973754882812
    10. '   ' → logprob: -14.644973754882812

Token 303: ' memo' (ID: 46393)
  Prédit: ' memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' memo' → logprob: -0.6374812126159668
    2. 'memo' → logprob: -1.6374812126159668
    3. 'visited' → logprob: -3.137481212615967
    4. 'ops' → logprob: -3.637481212615967
    5. 'results' → logprob: -3.637481212615967
    6. 'cache' → logprob: -3.887481212615967
    7. ' cache' → logprob: -4.262481212615967
    8. ' visited' → logprob: -4.512481212615967
    9. 'op' → logprob: -4.512481212615967
    10. ' results' → logprob: -4.637481212615967

Token 304: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4409390687942505
    2. '):' → logprob: -1.0659390687942505
    3. ',' → logprob: -4.440938949584961
    4. '):

' → logprob: -8.565938949584961
    5. '):
' → logprob: -9.315938949584961
    6. ')' → logprob: -10.565938949584961
    7. '=' → logprob: -10.690938949584961
    8. '   ' → logprob: -10.815938949584961
    9. ')=' → logprob: -12.315938949584961
    10. ' ):' → logprob: -12.315938949584961

Token 305: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024919884279370308
    2. '():' → logprob: -4.8999199867248535
    3. '(' → logprob: -5.0249199867248535
    4. '   ' → logprob: -5.5249199867248535
    5. '<|end|>' → logprob: -6.2749199867248535
    6. '):' → logprob: -6.5249199867248535
    7. ':
' → logprob: -6.7749199867248535
    8. ' :' → logprob: -7.5249199867248535
    9. '{' → logprob: -8.399919509887695
    10. ',' → logprob: -8.649919509887695

Token 306: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2975023686885834
    2. '   ' → logprob: -1.7975023984909058
    3. 'if' → logprob: -2.547502279281616
    4. ' key' → logprob: -5.422502517700195
    5. ' ' → logprob: -5.547502517700195
    6. 'key' → logprob: -7.047502517700195
    7. '(' → logprob: -7.297502517700195
    8. 'token' → logprob: -7.422502517700195
    9. ' (' → logprob: -7.797502517700195
    10. '    ' → logprob: -7.797502517700195

Token 307: ' node' (ID: 4596)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03478985279798508
    2. ' if' → logprob: -3.409789800643921
    3. '   ' → logprob: -6.9097900390625
    4. 'key' → logprob: -9.1597900390625
    5. 'indent' → logprob: -11.2847900390625
    6. ' key' → logprob: -11.9097900390625
    7. 'token' → logprob: -12.0347900390625
    8. '```' → logprob: -12.4097900390625
    9. 'def' → logprob: -12.6597900390625
    10. ')' → logprob: -13.2847900390625

Token 308: ',' (ID: 11)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2038232386112213
    2. ' =' → logprob: -3.0788233280181885
    3. ',' → logprob: -3.7038233280181885
    4. ' ==' → logprob: -3.7038233280181885
    5. '<|end|>' → logprob: -3.7038233280181885
    6. 'is' → logprob: -4.078823089599609
    7. '==' → logprob: -4.328823089599609
    8. ' if' → logprob: -4.453823089599609
    9. 'if' → logprob: -4.828823089599609
    10. '=' → logprob: -4.953823089599609

Token 309: ' left' (ID: 3561)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.003983974456787
    2. 'if' → logprob: -1.378983974456787
    3. 'left' → logprob: -1.378983974456787
    4. ')' → logprob: -3.128983974456787
    5. ' left' → logprob: -3.628983974456787
    6. '<|end|>' → logprob: -4.003983974456787
    7. ' ' → logprob: -4.253983974456787
    8. ' None' → logprob: -5.753983974456787
    9. 'key' → logprob: -5.878983974456787
    10. '   ' → logprob: -5.878983974456787

Token 310: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043342504650354385
    2. '<|end|>' → logprob: -3.6683425903320312
    3. ' =' → logprob: -5.668342590332031
    4. ' is' → logprob: -5.918342590332031
    5. '=' → logprob: -6.168342590332031
    6. ')' → logprob: -6.293342590332031
    7. ' ,' → logprob: -6.668342590332031
    8. ':' → logprob: -7.043342590332031
    9. ',
' → logprob: -7.168342590332031
    10. '):
' → logprob: -7.418342590332031

Token 311: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.1428866982460022
    2. ' right' → logprob: -2.0178866386413574
    3. ' ' → logprob: -9.642887115478516
    4. 'rights' → logprob: -10.767887115478516
    5. '   ' → logprob: -10.892887115478516
    6. ',right' → logprob: -11.267887115478516
    7. '    
' → logprob: -11.392887115478516
    8. '	right' → logprob: -11.517887115478516
    9. ',' → logprob: -11.642887115478516
    10. '    ' → logprob: -11.892887115478516

Token 312: ' represent' (ID: 5188)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7808042764663696
    2. '<|end|>' → logprob: -1.4058042764663696
    3. ' =' → logprob: -2.15580415725708
    4. ',' → logprob: -2.78080415725708
    5. '   ' → logprob: -3.03080415725708
    6. ' if' → logprob: -3.90580415725708
    7. '=' → logprob: -4.15580415725708
    8. ')' → logprob: -4.53080415725708
    9. '):' → logprob: -5.28080415725708
    10. ' ' → logprob: -5.28080415725708

Token 313: ' the' (ID: 290)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -1.1160660982131958
    2. 'None' → logprob: -1.6160660982131958
    3. ')' → logprob: -1.7410660982131958
    4. '[]' → logprob: -2.2410659790039062
    5. '(node' → logprob: -2.7410659790039062
    6. '(' → logprob: -3.1160659790039062
    7. '[' → logprob: -4.616065979003906
    8. '[node' → logprob: -4.741065979003906
    9. ' None' → logprob: -4.866065979003906
    10. ''' → logprob: -5.116065979003906

Token 314: ' tree' (ID: 8165)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6295268535614014
    2. ' if' → logprob: -2.5045268535614014
    3. 'token' → logprob: -2.8795268535614014
    4. 'node' → logprob: -3.2545268535614014
    5. 'result' → logprob: -3.5045268535614014
    6. 'value' → logprob: -3.6295268535614014
    7. 'return' → logprob: -3.8795268535614014
    8. ' value' → logprob: -3.8795268535614014
    9. 'None' → logprob: -3.8795268535614014
    10. ' node' → logprob: -4.0045270919799805

Token 315: ' structure' (ID: 8866)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1792253851890564
    2. '   ' → logprob: -2.304225444793701
    3. '<|end|>' → logprob: -3.804225444793701
    4. ',' → logprob: -4.679225444793701
    5. ':
' → logprob: -5.304225444793701
    6. '[' → logprob: -5.429225444793701
    7. ' ' → logprob: -5.429225444793701
    8. ' if' → logprob: -5.429225444793701
    9. '):' → logprob: -5.679225444793701
    10. ')' → logprob: -5.804225444793701

Token 316: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6886610388755798
    2. '   ' → logprob: -1.4386610984802246
    3. '<|end|>' → logprob: -1.5636610984802246
    4. ',' → logprob: -4.188661098480225
    5. ')' → logprob: -4.563661098480225
    6. ' ' → logprob: -4.688661098480225
    7. '):' → logprob: -5.688661098480225
    8. '    ' → logprob: -6.313661098480225
    9. '[' → logprob: -6.438661098480225
    10. '<|end|>' → logprob: -6.563661098480225

Token 317: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8988642692565918
    2. ' ' → logprob: -1.7738642692565918
    3. '   ' → logprob: -1.7738642692565918
    4. '<|end|>' → logprob: -1.7738642692565918
    5. ',' → logprob: -4.023864269256592
    6. '    ' → logprob: -4.148864269256592
    7. ' if' → logprob: -4.648864269256592
    8. '[' → logprob: -4.773864269256592
    9. ')' → logprob: -4.773864269256592
    10. ' :' → logprob: -5.273864269256592

Token 318: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03052060306072235
    2. '   ' → logprob: -4.155520439147949
    3. ' if' → logprob: -4.655520439147949
    4. '    ' → logprob: -6.405520439147949
    5. ' 
' → logprob: -7.280520439147949
    6. '  ' → logprob: -7.530520439147949
    7. ')' → logprob: -8.28052043914795
    8. ' ,' → logprob: -8.40552043914795
    9. ' )' → logprob: -8.40552043914795
    10. '<|end|>' → logprob: -8.40552043914795

Token 319: ' leaves' (ID: 15657)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6634151339530945
    2. ' if' → logprob: -0.9134151339530945
    3. 'key' → logprob: -3.1634151935577393
    4. '   ' → logprob: -3.6634151935577393
    5. 'token' → logprob: -5.16341495513916
    6. ' key' → logprob: -5.16341495513916
    7. ' ' → logprob: -7.03841495513916
    8. '<|end|>' → logprob: -7.66341495513916
    9. 'result' → logprob: -7.91341495513916
    10. '    ' → logprob: -8.03841495513916

Token 320: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -0.12693513929843903
    2. ' =' → logprob: -3.3769352436065674
    3. '_' → logprob: -3.5019352436065674
    4. ',' → logprob: -3.7519352436065674
    5. ')' → logprob: -4.001935005187988
    6. '=' → logprob: -6.126935005187988
    7. 'sets' → logprob: -6.626935005187988
    8. '<|end|>' → logprob: -6.876935005187988
    9. '.setdefault' → logprob: -6.876935005187988
    10. '_set' → logprob: -7.126935005187988

Token 321: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05418183282017708
    2. '=' → logprob: -3.5541818141937256
    3. '<|end|>' → logprob: -4.304182052612305
    4. ' ' → logprob: -5.679182052612305
    5. ',' → logprob: -6.429182052612305
    6. '.setdefault' → logprob: -6.679182052612305
    7. ')' → logprob: -7.179182052612305
    8. '   ' → logprob: -7.304182052612305
    9. '<|end|>' → logprob: -7.429182052612305
    10. '[' → logprob: -7.554182052612305

Token 322: ' list' (ID: 1562)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.00316489115357399
    2. ' {}' → logprob: -6.378164768218994
    3. '{' → logprob: -7.253164768218994
    4. '[]' → logprob: -7.628164768218994
    5. 'a' → logprob: -10.003165245056152
    6. ' a' → logprob: -10.128165245056152
    7. ' defaultdict' → logprob: -10.378165245056152
    8. '...' → logprob: -11.003165245056152
    9. '{},' → logprob: -11.128165245056152
    10. '{})' → logprob: -11.253165245056152

Token 323: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 324: ' sets' (ID: 11982)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -1.438331127166748
    2. '[]' → logprob: -1.938331127166748
    3. '{' → logprob: -2.438331127166748
    4. '[' → logprob: -2.688331127166748
    5. ')' → logprob: -2.813331127166748
    6. '[node' → logprob: -2.813331127166748
    7. '{}' → logprob: -2.938331127166748
    8. 'left' → logprob: -2.938331127166748
    9. '[
' → logprob: -3.063331127166748
    10. 'le' → logprob: -3.813331127166748

Token 325: ' assigned' (ID: 21482)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0782437324523926
    2. '   ' → logprob: -1.0782437324523926
    3. '<|end|>' → logprob: -2.0782437324523926
    4. ':' → logprob: -2.5782437324523926
    5. '[' → logprob: -3.0782437324523926
    6. ')' → logprob: -4.203243732452393
    7. '(' → logprob: -4.953243732452393
    8. '<|end|>' → logprob: -5.203243732452393
    9. ' ,' → logprob: -5.328243732452393
    10. '[
' → logprob: -5.328243732452393

Token 326: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6843354105949402
    2. '   ' → logprob: -1.434335470199585
    3. '<|end|>' → logprob: -1.809335470199585
    4. ' =' → logprob: -4.059335231781006
    5. ')' → logprob: -4.059335231781006
    6. '=' → logprob: -4.434335231781006
    7. '_' → logprob: -4.684335231781006
    8. ' ,' → logprob: -4.934335231781006
    9. '<|end|>' → logprob: -5.059335231781006
    10. ' of' → logprob: -5.684335231781006

Token 327: ' leaves' (ID: 15657)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.2055145651102066
    2. ' node' → logprob: -2.205514669418335
    3. 'the' → logprob: -3.580514669418335
    4. 'each' → logprob: -4.330514430999756
    5. 'nodes' → logprob: -4.705514430999756
    6. ' the' → logprob: -4.705514430999756
    7. ')' → logprob: -6.080514430999756
    8. ' leaves' → logprob: -6.080514430999756
    9. ' nodes' → logprob: -6.205514430999756
    10. ' each' → logprob: -6.205514430999756

Token 328: ' by' (ID: 656)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13779781758785248
    2. '   ' → logprob: -3.1377978324890137
    3. ':
' → logprob: -3.7627978324890137
    4. '(' → logprob: -4.262797832489014
    5. '):' → logprob: -4.387797832489014
    6. ',' → logprob: -4.762797832489014
    7. ')' → logprob: -5.387797832489014
    8. '[' → logprob: -5.637797832489014
    9. '{' → logprob: -6.012797832489014
    10. ' if' → logprob: -6.137797832489014

Token 329: ' input' (ID: 3422)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8474579453468323
    2. 'def' → logprob: -1.9724578857421875
    3. 'node' → logprob: -2.3474578857421875
    4. ' the' → logprob: -2.5974578857421875
    5. 'each' → logprob: -2.5974578857421875
    6. ')' → logprob: -2.8474578857421875
    7. '   ' → logprob: -4.0974578857421875
    8. 'if' → logprob: -4.7224578857421875
    9. 'le' → logprob: -4.7224578857421875
    10. 'nodes' → logprob: -4.8474578857421875

Token 330: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24368098378181458
    2. '   ' → logprob: -1.7436809539794922
    3. '):' → logprob: -4.993680953979492
    4. '<|end|>' → logprob: -4.993680953979492
    5. ',' → logprob: -5.118680953979492
    6. ')' → logprob: -5.243680953979492
    7. '(' → logprob: -5.368680953979492
    8. '[' → logprob: -5.868680953979492
    9. 'def' → logprob: -6.118680953979492
    10. ':
' → logprob: -6.993680953979492

Token 331: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4022264778614044
    2. '   ' → logprob: -1.527226448059082
    3. ',' → logprob: -2.652226448059082
    4. ')' → logprob: -4.527226448059082
    5. '):' → logprob: -4.527226448059082
    6. '[' → logprob: -4.777226448059082
    7. '<|end|>' → logprob: -5.402226448059082
    8. 'def' → logprob: -6.652226448059082
    9. '
' → logprob: -6.652226448059082
    10. ':
' → logprob: -6.902226448059082

Token 332: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10554670542478561
    2. ' if' → logprob: -2.730546712875366
    3. 'if' → logprob: -3.980546712875366
    4. 'token' → logprob: -5.605546474456787
    5. ' ' → logprob: -5.730546474456787
    6. ')' → logprob: -5.730546474456787
    7. '  ' → logprob: -6.980546474456787
    8. '    ' → logprob: -7.355546474456787
    9. '<|end|>' → logprob: -7.355546474456787
    10. '(' → logprob: -7.605546474456787

Token 333: ' memo' (ID: 46393)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14808499813079834
    2. ' if' → logprob: -2.023085117340088
    3. '   ' → logprob: -5.523085117340088
    4. 'key' → logprob: -7.148085117340088
    5. 'token' → logprob: -7.898085117340088
    6. ' key' → logprob: -9.39808464050293
    7. 'tokens' → logprob: -9.64808464050293
    8. ')' → logprob: -10.52308464050293
    9. 'pass' → logprob: -11.39808464050293
    10. 'result' → logprob: -11.64808464050293

Token 334: ' caches' (ID: 118890)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3573082983493805
    2. '=' → logprob: -1.357308268547058
    3. '.setdefault' → logprob: -3.4823083877563477
    4. '[' → logprob: -5.732308387756348
    5. '[(' → logprob: -6.232308387756348
    6. ' ' → logprob: -6.232308387756348
    7. ':' → logprob: -6.982308387756348
    8. '_key' → logprob: -7.107308387756348
    9. ')' → logprob: -7.232308387756348
    10. '.' → logprob: -7.357308387756348

Token 335: ' results' (ID: 4376)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.7383245229721069
    2. '(' → logprob: -1.363324522972107
    3. ' (' → logprob: -2.2383246421813965
    4. '(node' → logprob: -2.8633246421813965
    5. '(
' → logprob: -3.8633246421813965
    6. '   ' → logprob: -3.8633246421813965
    7. ' {' → logprob: -4.3633246421813965
    8. ' {(' → logprob: -4.6133246421813965
    9. ')' → logprob: -4.7383246421813965
    10. ' ' → logprob: -5.3633246421813965

Token 336: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6603925228118896
    2. ':' → logprob: -0.9103925228118896
    3. ',' → logprob: -4.160392761230469
    4. '<|end|>' → logprob: -4.285392761230469
    5. ':
' → logprob: -4.660392761230469
    6. 'def' → logprob: -4.785392761230469
    7. '(' → logprob: -5.035392761230469
    8. '):' → logprob: -5.410392761230469
    9. '{' → logprob: -5.785392761230469
    10. ')' → logprob: -5.910392761230469

Token 337: ' subtree' (ID: 126158)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.12876127660274506
    2. ' (' → logprob: -2.2537612915039062
    3. 'node' → logprob: -4.503761291503906
    4. ' node' → logprob: -5.628761291503906
    5. '(' → logprob: -7.878761291503906
    6. 'the' → logprob: -8.878761291503906
    7. '[node' → logprob: -8.878761291503906
    8. ')' → logprob: -9.128761291503906
    9. ' the' → logprob: -9.878761291503906
    10. 'nodes' → logprob: -10.003761291503906

Token 338: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2965918183326721
    2. '):' → logprob: -2.9215917587280273
    3. '   ' → logprob: -3.0465917587280273
    4. ',' → logprob: -3.1715917587280273
    5. ')' → logprob: -3.4215917587280273
    6. '<|end|>' → logprob: -3.6715917587280273
    7. '[token' → logprob: -4.796591758728027
    8. '{' → logprob: -5.046591758728027
    9. '[' → logprob: -5.046591758728027
    10. 'def' → logprob: -5.421591758728027

Token 339: 'node' (ID: 7005)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.03929227963089943
    2. 'node' → logprob: -4.414292335510254
    3. ')' → logprob: -4.664292335510254
    4. ' (' → logprob: -4.789292335510254
    5. ' node' → logprob: -5.289292335510254
    6. ',node' → logprob: -6.789292335510254
    7. '(' → logprob: -6.914292335510254
    8. '   ' → logprob: -7.789292335510254
    9. '[node' → logprob: -8.539292335510254
    10. '(
' → logprob: -8.914292335510254

Token 340: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4384297728538513
    2. ')' → logprob: -1.063429832458496
    3. '):' → logprob: -5.063429832458496
    4. ',)' → logprob: -7.188429832458496
    5. ',node' → logprob: -7.188429832458496
    6. '):
' → logprob: -7.938429832458496
    7. ',
' → logprob: -8.188429832458496
    8. ' )' → logprob: -8.563429832458496
    9. ' ,' → logprob: -8.688429832458496
    10. ')
' → logprob: -8.813429832458496

Token 341: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.3606977164745331
    2. ' left' → logprob: -1.2356977462768555
    3. ' leaves' → logprob: -4.8606977462768555
    4. 'le' → logprob: -6.2356977462768555
    5. ')' → logprob: -6.3606977462768555
    6. 'leaf' → logprob: -8.360697746276855
    7. 'fro' → logprob: -8.735697746276855
    8. ' fro' → logprob: -9.610697746276855
    9. ' leaf' → logprob: -9.985697746276855
    10. ' tuple' → logprob: -10.235697746276855

Token 342: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005039729177951813
    2. ')' → logprob: -5.505039691925049
    3. ',right' → logprob: -7.255039691925049
    4. ',node' → logprob: -9.130040168762207
    5. ',left' → logprob: -9.880040168762207
    6. ',key' → logprob: -10.255040168762207
    7. ' ,' → logprob: -11.505040168762207
    8. ',None' → logprob: -11.630040168762207
    9. '),' → logprob: -11.630040168762207
    10. '<|end|>' → logprob: -12.130040168762207

Token 343: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.2519359588623047
    2. ' right' → logprob: -1.5019359588623047
    3. ')' → logprob: -13.376935958862305
    4. ' ' → logprob: -13.626935958862305
    5. '	right' → logprob: -14.126935958862305
    6. ',right' → logprob: -14.126935958862305
    7. '(right' → logprob: -14.501935958862305
    8. '   ' → logprob: -14.876935958862305
    9. '    ' → logprob: -15.126935958862305
    10. '[right' → logprob: -15.251935958862305

Token 344: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01540256105363369
    2. '):' → logprob: -4.390402793884277
    3. ')
' → logprob: -6.515402793884277
    4. '):
' → logprob: -7.015402793884277
    5. ',' → logprob: -7.890402793884277
    6. '   ' → logprob: -9.390402793884277
    7. '),' → logprob: -11.515402793884277
    8. ' )' → logprob: -11.765402793884277
    9. '):

' → logprob: -12.390402793884277
    10. ')_' → logprob: -12.515402793884277

Token 345: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12391196191310883
    2. '(' → logprob: -2.8739118576049805
    3. '   ' → logprob: -3.7489118576049805
    4. '[' → logprob: -4.4989118576049805
    5. '(
' → logprob: -5.1239118576049805
    6. ')' → logprob: -5.4989118576049805
    7. ',' → logprob: -5.8739118576049805
    8. ':
' → logprob: -6.3739118576049805
    9. '<|end|>' → logprob: -6.3739118576049805
    10. ' :' → logprob: -6.6239118576049805

Token 346: ' if' (ID: 538)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.10172218829393387
    2. 'if' (adapté à ' if') → logprob: -2.851722240447998
    3. ' key' → logprob: -3.351722240447998
    4. ' if' → logprob: -5.851722240447998
    5. '   ' → logprob: -6.851722240447998
    6. 'token' → logprob: -12.35172176361084
    7. '    
' → logprob: -12.47672176361084
    8. ' ' → logprob: -12.60172176361084
    9. ')' → logprob: -13.97672176361084
    10. '    ' → logprob: -14.10172176361084

Token 347: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.3178277611732483
    2. ' (' → logprob: -1.8178277015686035
    3. '(node' → logprob: -2.3178277015686035
    4. 'node' → logprob: -4.5678277015686035
    5. '(' → logprob: -7.4428277015686035
    6. ' not' → logprob: -8.942828178405762
    7. ' ' → logprob: -9.192828178405762
    8. ' left' → logprob: -10.192828178405762
    9. '(left' → logprob: -10.630328178405762
    10. ' memo' → logprob: -10.755328178405762

Token 348: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.014411116018891335
    2. 'is' → logprob: -4.264410972595215
    3. '==' → logprob: -8.514410972595215
    4. '[' → logprob: -11.014410972595215
    5. ' ==' → logprob: -11.139410972595215
    6. ')' → logprob: -11.889410972595215
    7. '<|end|>' → logprob: -12.639410972595215
    8. ' ' → logprob: -13.389410972595215
    9. ',' → logprob: -14.139410972595215
    10. '=' → logprob: -14.514410972595215

Token 349: ' not' (ID: 625)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.016507362946867943
    2. 'not' → logprob: -4.266507148742676
    3. ' None' → logprob: -6.266507148742676
    4. ' not' → logprob: -7.766507148742676
    5. '(None' → logprob: -12.016507148742676
    6. 'Not' → logprob: -12.516507148742676
    7. 'none' → logprob: -13.016507148742676
    8. '_None' → logprob: -13.016507148742676
    9. '0' → logprob: -13.391507148742676
    10. '=None' → logprob: -13.766507148742676

Token 350: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0006289214943535626
    2. ' None' → logprob: -7.37562894821167
    3. '0' → logprob: -14.125628471374512
    4. '(None' → logprob: -14.500628471374512
    5. 'not' → logprob: -14.750628471374512
    6. '=None' → logprob: -15.625628471374512
    7. '_None' → logprob: -15.625628471374512
    8. 'int' → logprob: -15.875628471374512
    9. 'none' → logprob: -16.500629425048828
    10. '
' → logprob: -17.125629425048828

Token 351: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02412189356982708
    2. ':
' → logprob: -4.0241217613220215
    3. ' and' → logprob: -5.5241217613220215
    4. '   ' → logprob: -6.5241217613220215
    5. ' :' → logprob: -8.77412223815918
    6. 'and' → logprob: -9.39912223815918
    7. ':return' → logprob: -9.77412223815918
    8. ',' → logprob: -10.02412223815918
    9. '==' → logprob: -10.39912223815918
    10. ' ==' → logprob: -10.39912223815918

Token 352: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5494339466094971
    2. '       ' → logprob: -1.049433946609497
    3. ' if' → logprob: -3.549433946609497
    4. 'return' → logprob: -4.049433708190918
    5. 'if' → logprob: -4.424433708190918
    6. ' return' → logprob: -5.299433708190918
    7. ' key' → logprob: -5.549433708190918
    8. 'key' → logprob: -6.549433708190918
    9. 'token' → logprob: -7.674433708190918
    10. ' leaves' → logprob: -7.924433708190918

Token 353: ' #' (ID: 1069)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.29125338792800903
    2. 'return' → logprob: -2.1662533283233643
    3. 'if' → logprob: -2.7912533283233643
    4. 'leaf' → logprob: -3.1662533283233643
    5. 'le' → logprob: -3.6662533283233643
    6. '   ' → logprob: -5.666253566741943
    7. ' key' → logprob: -5.791253566741943
    8. '#' (adapté à ' #') → logprob: -6.916253566741943
    9. 'sets' → logprob: -8.166253089904785
    10. '       ' → logprob: -8.166253089904785

Token 354: ' leaf' (ID: 25882)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.2318897247314453
    2. 'if' → logprob: -2.4818897247314453
    3. 'le' → logprob: -2.9818897247314453
    4. 'leaf' → logprob: -2.9818897247314453
    5. ' key' → logprob: -4.356889724731445
    6. 'return' → logprob: -5.356889724731445
    7. '   ' → logprob: -6.731889724731445
    8. '#' → logprob: -7.356889724731445
    9. 'sets' → logprob: -7.481889724731445
    10. ' if' → logprob: -7.606889724731445

Token 355: ' node' (ID: 4596)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1862720102071762
    2. '<|end|>' → logprob: -2.686271905899048
    3. ',' → logprob: -3.936271905899048
    4. '   ' → logprob: -4.186272144317627
    5. ')' → logprob: -4.311272144317627
    6. ':return' → logprob: -4.561272144317627
    7. ' if' → logprob: -4.811272144317627
    8. '
' → logprob: -5.311272144317627
    9. ':
' → logprob: -5.936272144317627
    10. '_token' → logprob: -6.061272144317627

Token 356: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.33340322971344
    2. '       ' → logprob: -1.33340322971344
    3. '<|end|>' → logprob: -1.33340322971344
    4. ':' → logprob: -2.0834031105041504
    5. '
' → logprob: -3.3334031105041504
    6. ',' → logprob: -4.83340311050415
    7. ' if' → logprob: -4.83340311050415
    8. '<|end|>' → logprob: -4.83340311050415
    9. ' sets' → logprob: -5.33340311050415
    10. '    
' → logprob: -6.08340311050415

Token 357: ' node' (ID: 4596)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.3207857608795166
    2. 'key' → logprob: -1.9457857608795166
    3. 'return' → logprob: -3.3207857608795166
    4. ' return' → logprob: -3.9457857608795166
    5. ' leaves' → logprob: -4.1957855224609375
    6. 'leaf' → logprob: -4.3207855224609375
    7. ' leaf' → logprob: -4.4457855224609375
    8. 'le' → logprob: -4.5707855224609375
    9. '   ' → logprob: -4.6957855224609375
    10. 'if' → logprob: -5.1957855224609375

Token 358: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.5598969459533691
    2. ' =' → logprob: -2.059896945953369
    3. '_sets' → logprob: -2.184896945953369
    4. '_set' → logprob: -2.309896945953369
    5. ' if' → logprob: -2.809896945953369
    6. ' is' → logprob: -2.934896945953369
    7. ',' → logprob: -3.184896945953369
    8. ')' → logprob: -3.559896945953369
    9. '_value' → logprob: -3.559896945953369
    10. 'le' → logprob: -3.809896945953369

Token 359: ' int' (ID: 677)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.3314917981624603
    2. ' an' → logprob: -1.5814918279647827
    3. 'int' → logprob: -3.206491708755493
    4. 'a' → logprob: -3.581491708755493
    5. ' a' → logprob: -5.456491947174072
    6. 'the' → logprob: -7.206491947174072
    7. ' int' → logprob: -7.331491947174072
    8. ' the' → logprob: -7.706491947174072
    9. 'not' → logprob: -7.831491947174072
    10. ' not' → logprob: -7.956491947174072

Token 360: ' index' (ID: 3472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1829918920993805
    2. '   ' → logprob: -2.4329919815063477
    3. '
' → logprob: -3.5579919815063477
    4. ',' → logprob: -3.8079919815063477
    5. ' if' → logprob: -4.807991981506348
    6. ' return' → logprob: -5.432991981506348
    7. '    
' → logprob: -5.807991981506348
    8. '        
' → logprob: -5.932991981506348
    9. '<|end|>' → logprob: -5.932991981506348
    10. ')' → logprob: -7.057991981506348

Token 361: ' into' (ID: 1511)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4781050980091095
    2. '<|end|>' → logprob: -1.603105068206787
    3. '   ' → logprob: -2.228105068206787
    4. ',' → logprob: -3.228105068206787
    5. '
' → logprob: -4.603105068206787
    6. ')' → logprob: -5.478105068206787
    7. ':' → logprob: -5.603105068206787
    8. ' if' → logprob: -5.853105068206787
    9. '<|end|>' → logprob: -5.853105068206787
    10. '        
' → logprob: -6.853105068206787

Token 362: ' leaves' (ID: 15657)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.001930301426909864
    2. ' leaves' → logprob: -6.251930236816406
    3. 'leaf' → logprob: -13.376930236816406
    4. '(le' → logprob: -16.626930236816406
    5. 'memo' → logprob: -17.626930236816406
    6. ' le' → logprob: -18.501930236816406
    7. '_le' → logprob: -19.126930236816406
    8. 'the' → logprob: -19.126930236816406
    9. '```' → logprob: -19.501930236816406
    10. 'Leaves' → logprob: -19.626930236816406

Token 363: '_sets' (ID: 56707)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0781141519546509
    2. '_sets' → logprob: -1.7031141519546509
    3. ',' → logprob: -2.0781140327453613
    4. ')' → logprob: -2.4531140327453613
    5. '_set' → logprob: -3.0781140327453613
    6. '
' → logprob: -3.0781140327453613
    7. '       ' → logprob: -3.7031140327453613
    8. '<|end|>' → logprob: -3.8281140327453613
    9. 's' → logprob: -4.328114032745361
    10. ' ' → logprob: -4.328114032745361

Token 364: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14767536520957947
    2. '   ' → logprob: -3.3976752758026123
    3. '    
' → logprob: -3.7726752758026123
    4. ',' → logprob: -4.147675514221191
    5. '\n' → logprob: -4.397675514221191
    6. '       ' → logprob: -4.647675514221191
    7. '  
' → logprob: -4.772675514221191
    8. '<|end|>' → logprob: -4.772675514221191
    9. ')' → logprob: -5.397675514221191
    10. '[' → logprob: -5.397675514221191

Token 365: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1385631114244461
    2. 'return' → logprob: -2.6385631561279297
    3. ' leaves' → logprob: -4.13856315612793
    4. ' return' → logprob: -4.26356315612793
    5. ')
' → logprob: -4.38856315612793
    6. 'le' → logprob: -5.01356315612793
    7. ')return' → logprob: -5.26356315612793
    8. ' )' → logprob: -6.88856315612793
    9. 'if' → logprob: -7.13856315612793
    10. '   ' → logprob: -7.51356315612793

Token 366: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.8821414709091187
    2. ')' → logprob: -1.3821414709091187
    3. ' -' → logprob: -1.7571414709091187
    4. '-' → logprob: -1.8821414709091187
    5. ')-' → logprob: -6.257141590118408
    6. ' )' → logprob: -6.382141590118408
    7. '-)' → logprob: -6.507141590118408
    8. '-index' → logprob: -6.882141590118408
    9. 'based' → logprob: -7.382141590118408
    10. ' <=' → logprob: -7.507141590118408

Token 367: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002765644807368517
    2. ')
' → logprob: -6.002765655517578
    3. ' )' → logprob: -8.627765655517578
    4. '):' → logprob: -10.627765655517578
    5. '),' → logprob: -10.627765655517578
    6. '):
' → logprob: -11.627765655517578
    7. '   ' → logprob: -11.627765655517578
    8. ')

' → logprob: -11.752765655517578
    9. ',' → logprob: -11.877765655517578
    10. ' ' → logprob: -12.502765655517578

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25425395369529724
    2. '   ' → logprob: -2.12925386428833
    3. ')' → logprob: -3.62925386428833
    4. ',' → logprob: -3.75425386428833
    5. ':' → logprob: -4.12925386428833
    6. '<|end|>' → logprob: -4.37925386428833
    7. '
' → logprob: -5.12925386428833
    8. ' ' → logprob: -5.87925386428833
    9. '[' → logprob: -6.00425386428833
    10. '    
' → logprob: -6.37925386428833

Token 369: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4471570551395416
    2. 'key' → logprob: -2.322157144546509
    3. ' key' → logprob: -2.697157144546509
    4. ' return' → logprob: -2.947157144546509
    5. 'index' → logprob: -3.072157144546509
    6. 'leaf' → logprob: -3.447157144546509
    7. 'if' → logprob: -3.572157144546509
    8. 'le' → logprob: -4.32215690612793
    9. 'idx' → logprob: -5.07215690612793
    10. '   ' → logprob: -5.94715690612793

Token 370: ' [' (ID: 723)
  Prédit: ' leaves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' leaves' → logprob: -0.4786966145038605
    2. 'le' → logprob: -0.9786965847015381
    3. ' set' → logprob: -6.103696823120117
    4. '{' → logprob: -7.103696823120117
    5. 'set' → logprob: -7.103696823120117
    6. 'leaf' → logprob: -8.728696823120117
    7. 'fro' → logprob: -8.728696823120117
    8. ' {' → logprob: -9.353696823120117
    9. ' fro' → logprob: -9.603696823120117
    10. ' ' → logprob: -10.541196823120117

Token 371: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.01766354590654373
    2. 'fro' → logprob: -4.767663478851318
    3. ' leaves' → logprob: -5.142663478851318
    4. 'set' → logprob: -6.642663478851318
    5. '{' → logprob: -6.642663478851318
    6. '(le' → logprob: -8.642663955688477
    7. 'leaf' → logprob: -9.517663955688477
    8. '(' → logprob: -10.017663955688477
    9. '(set' → logprob: -10.392663955688477
    10. ' set' → logprob: -10.392663955688477

Token 372: 'aves' (ID: 6808)
  Prédit: 'aves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aves' → logprob: -0.19118045270442963
    2. 'af' → logprob: -1.8161804676055908
    3. 'a' → logprob: -4.816180229187012
    4. 'afs' → logprob: -5.941180229187012
    5. 'av' → logprob: -8.691180229187012
    6. 'f' → logprob: -9.441180229187012
    7. '[' → logprob: -10.066180229187012
    8. 'aft' → logprob: -10.066180229187012
    9. 'ave' → logprob: -10.441180229187012
    10. 'ft' → logprob: -10.691180229187012

Token 373: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -3.5716304410016164e-05
    2. '_s' → logprob: -11.375035285949707
    3. '_set' → logprob: -11.375035285949707
    4. 's' → logprob: -12.125035285949707
    5. '_' → logprob: -12.250035285949707
    6. ' _' → logprob: -14.500035285949707
    7. ''_' → logprob: -15.125035285949707
    8. '[_' → logprob: -15.250035285949707
    9. '```' → logprob: -15.250035285949707
    10. 'sets' → logprob: -15.875035285949707

Token 374: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -7.896309739408025e-07
    2. '(node' → logprob: -14.500000953674316
    3. '[' → logprob: -16.375
    4. ' [' → logprob: -16.75
    5. '[
' → logprob: -17.375
    6. '][' → logprob: -18.5
    7. ']' → logprob: -18.5
    8. 'node' → logprob: -18.5
    9. '[token' → logprob: -19.0
    10. '[int' → logprob: -19.25

Token 375: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.049779217690229416
    2. ' -' → logprob: -3.174779176712036
    3. '[node' → logprob: -5.299779415130615
    4. ']]' → logprob: -7.174779415130615
    5. ']' → logprob: -7.799779415130615
    6. '[' → logprob: -8.049778938293457
    7. '])' → logprob: -8.924778938293457
    8. '])]' → logprob: -10.174778938293457
    9. ')]' → logprob: -10.674778938293457
    10. ']],' → logprob: -10.799778938293457

Token 376: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. ']' → logprob: -16.8750057220459
    4. '
' → logprob: -19.1250057220459
    5. '   ' → logprob: -19.2500057220459
    6. ')' → logprob: -19.3750057220459
    7. '  ' → logprob: -19.5000057220459
    8. '１' → logprob: -20.0000057220459
    9. '۱' → logprob: -20.1250057220459
    10. '

' → logprob: -20.2500057220459

Token 377: ']]

' (ID: 84024)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02483500726521015
    2. ']]' → logprob: -3.8998351097106934
    3. ')]' → logprob: -5.649835109710693
    4. ']
' → logprob: -8.024834632873535
    5. '],' → logprob: -8.649834632873535
    6. '()]' → logprob: -9.649834632873535
    7. '])' → logprob: -9.899834632873535
    8. ']]
' → logprob: -10.149834632873535
    9. '])]' → logprob: -10.524834632873535
    10. ' ]' → logprob: -10.649834632873535

Token 378: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7689525485038757
    2. '    
' → logprob: -1.0189526081085205
    3. '   ' → logprob: -2.0189526081085205
    4. '  
' → logprob: -4.393952369689941
    5. '<|end|>' → logprob: -4.893952369689941
    6. ')' → logprob: -5.268952369689941
    7. '[' → logprob: -5.643952369689941
    8. ',' → logprob: -5.643952369689941
    9. '\n' → logprob: -5.893952369689941
    10. '```' → logprob: -6.893952369689941

Token 379: ' #' (ID: 1069)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.40547290444374084
    2. 'if' → logprob: -1.6554728746414185
    3. 'key' → logprob: -2.780472993850708
    4. 'res' → logprob: -2.905472993850708
    5. 'result' → logprob: -4.655472755432129
    6. 'all' → logprob: -5.030472755432129
    7. 'left' → logprob: -6.030472755432129
    8. 'right' → logprob: -6.280472755432129
    9. '   ' → logprob: -6.530472755432129
    10. '#' (adapté à ' #') → logprob: -7.030472755432129

Token 380: ' internal' (ID: 8812)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.04423611983656883
    2. 'left' → logprob: -3.419236183166504
    3. 'results' → logprob: -5.544236183166504
    4. 'res' → logprob: -5.794236183166504
    5. 'if' → logprob: -6.294236183166504
    6. '   ' → logprob: -7.919236183166504
    7. 'result' → logprob: -8.169236183166504
    8. ' key' → logprob: -8.169236183166504
    9. 'all' → logprob: -8.294236183166504
    10. 'ways' → logprob: -8.794236183166504

Token 381: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.8122234344482422
    2. ' node' → logprob: -1.0622234344482422
    3. '   ' → logprob: -2.687223434448242
    4. ' if' → logprob: -2.687223434448242
    5. 'if' → logprob: -3.437223434448242
    6. ',' → logprob: -4.437223434448242
    7. 'sets' → logprob: -5.187223434448242
    8. 'token' → logprob: -5.812223434448242
    9. 'nodes' → logprob: -5.812223434448242
    10. ' sets' → logprob: -5.937223434448242

Token 382: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6595988869667053
    2. 'results' → logprob: -1.0345988273620605
    3. 'result' → logprob: -3.4095988273620605
    4. 'ways' → logprob: -3.9095988273620605
    5. ' =' → logprob: -4.0345988273620605
    6. ' results' → logprob: -4.1595988273620605
    7. 'all' → logprob: -4.4095988273620605
    8. ' all' → logprob: -5.1595988273620605
    9. ' ways' → logprob: -5.5345988273620605
    10. 'left' → logprob: -5.6595988273620605

Token 383: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09594925493001938
    2. 'left' → logprob: -3.345949172973633
    3. 'results' → logprob: -3.595949172973633
    4. 'result' → logprob: -4.095949172973633
    5. 'res' → logprob: -5.595949172973633
    6. 'all' → logprob: -6.345949172973633
    7. ' left' → logprob: -6.720949172973633
    8. 'ways' → logprob: -6.845949172973633
    9. ' results' → logprob: -7.095949172973633
    10. 'key' → logprob: -7.345949172973633

Token 384: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.011155226267874241
    2. '   ' → logprob: -5.011155128479004
    3. 'results' → logprob: -6.261155128479004
    4. 'res' → logprob: -6.761155128479004
    5. ' left' → logprob: -7.386155128479004
    6. 'right' → logprob: -8.761155128479004
    7. 'all' → logprob: -8.886155128479004
    8. 'ways' → logprob: -9.136155128479004
    9. 'l' → logprob: -9.136155128479004
    10. 'result' → logprob: -9.261155128479004

Token 385: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -0.571829080581665
    2. 'results' → logprob: -1.821829080581665
    3. '_sets' → logprob: -2.321829080581665
    4. '_key' → logprob: -2.571829080581665
    5. 'sets' → logprob: -3.321829080581665
    6. 'key' → logprob: -3.571829080581665
    7. 'res' → logprob: -4.571828842163086
    8. '_result' → logprob: -5.321828842163086
    9. '_values' → logprob: -5.821828842163086
    10. '_res' → logprob: -5.821828842163086

Token 386: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31447833776474
    2. ' =' → logprob: -1.3144783973693848
    3. ',' → logprob: -6.939478397369385
    4. ' ' → logprob: -9.064477920532227
    5. '   ' → logprob: -9.814477920532227
    6. '=[]' → logprob: -10.439477920532227
    7. ')' → logprob: -11.439477920532227
    8. 's' → logprob: -11.939477920532227
    9. '[' → logprob: -12.064477920532227
    10. ' ,' → logprob: -12.564477920532227

Token 387: ' evaluate' (ID: 21646)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -0.000758288602810353
    2. ' evaluate' → logprob: -7.375758171081543
    3. '[]
' → logprob: -9.125758171081543
    4. '[' → logprob: -12.250758171081543
    5. '[]' → logprob: -12.250758171081543
    6. '   ' → logprob: -12.625758171081543
    7. 'memo' → logprob: -12.625758171081543
    8. 'eval' → logprob: -13.750758171081543
    9. '{' → logprob: -14.000758171081543
    10. '[e' → logprob: -14.125758171081543

Token 388: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -1.1472419600977446e-06
    2. 'all' → logprob: -14.125000953674316
    3. 'All' → logprob: -15.875000953674316
    4. ' _' → logprob: -16.125001907348633
    5. '_ALL' → logprob: -17.375001907348633
    6. '   ' → logprob: -17.625001907348633
    7. ' ' → logprob: -17.875001907348633
    8. '_' → logprob: -17.875001907348633
    9. '(_' → logprob: -18.500001907348633
    10. ')_' → logprob: -18.750001907348633

Token 389: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.020545978099107742
    2. '_all' → logprob: -3.8955459594726562
    3. ' _' → logprob: -13.395545959472656
    4. '```' → logprob: -15.020545959472656
    5. '_way' → logprob: -15.270545959472656
    6. 'all' → logprob: -15.395545959472656
    7. '(_' → logprob: -15.770545959472656
    8. ')_' → logprob: -15.770545959472656
    9. '\' → logprob: -15.895545959472656
    10. '_left' → logprob: -15.895545959472656

Token 390: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.0002755174064077437
    2. 'all' → logprob: -8.375275611877441
    3. '_' → logprob: -10.750275611877441
    4. 'Ways' → logprob: -11.875275611877441
    5. 'WAYS' → logprob: -12.500275611877441
    6. ' ways' → logprob: -12.750275611877441
    7. 'way' → logprob: -12.750275611877441
    8. '(' → logprob: -13.625275611877441
    9. 'left' → logprob: -13.750275611877441
    10. 'ays' → logprob: -14.250275611877441

Token 391: '(*' (ID: 9000)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.0439421683549881
    2. '(node' → logprob: -3.4189422130584717
    3. '(*' → logprob: -4.668941974639893
    4. '(' → logprob: -7.168941974639893
    5. '(right' → logprob: -10.29394245147705
    6. ' (' → logprob: -11.16894245147705
    7. 'left' → logprob: -11.16894245147705
    8. '(*(' → logprob: -11.66894245147705
    9. '(
' → logprob: -12.04394245147705
    10. '(None' → logprob: -12.91894245147705

Token 392: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00025442568585276604
    2. ' left' → logprob: -8.37525463104248
    3. '(left' → logprob: -10.75025463104248
    4. '[left' → logprob: -13.50025463104248
    5. '   ' → logprob: -14.12525463104248
    6. ' ' → logprob: -16.250253677368164
    7. '	left' → logprob: -16.625253677368164
    8. '(' → logprob: -16.625253677368164
    9. '
' → logprob: -17.000253677368164
    10. 'lef' → logprob: -17.250253677368164

Token 393: ',' (ID: 11)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.05395890399813652
    2. ',' → logprob: -3.1789588928222656
    3. ')' → logprob: -4.553958892822266
    4. '   ' → logprob: -8.678958892822266
    5. ')
' → logprob: -9.303958892822266
    6. ',)
' → logprob: -9.928958892822266
    7. ' )
' → logprob: -10.553958892822266
    8. ' ,' → logprob: -11.053958892822266
    9. ' ' → logprob: -11.553958892822266
    10. '  ' → logprob: -12.428958892822266

Token 394: ' leaves' (ID: 15657)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.3561892807483673
    2. ' leaves' → logprob: -1.231189250946045
    3. 'memo' → logprob: -5.481189250946045
    4. ' memo' → logprob: -5.856189250946045
    5. '   ' → logprob: -8.231189727783203
    6. 'leaf' → logprob: -8.856189727783203
    7. '  ' → logprob: -9.731189727783203
    8. 'left' → logprob: -10.106189727783203
    9. ' ' → logprob: -10.356189727783203
    10. ')' → logprob: -10.356189727783203

Token 395: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -0.000692420348059386
    2. '_results' → logprob: -7.625692367553711
    3. ',' → logprob: -9.000692367553711
    4. 'sets' → logprob: -10.375692367553711
    5. '_set' → logprob: -10.875692367553711
    6. '   ' → logprob: -11.250692367553711
    7. ')' → logprob: -11.750692367553711
    8. '_' → logprob: -13.250692367553711
    9. '),' → logprob: -13.625692367553711
    10. '       ' → logprob: -14.000692367553711

Token 396: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003977800370194018
    2. ' ,' → logprob: -7.875397682189941
    3. ',m' → logprob: -11.125397682189941
    4. ')' → logprob: -13.750397682189941
    5. ',
' → logprob: -14.000397682189941
    6. '   ' → logprob: -15.125397682189941
    7. '),' → logprob: -15.375397682189941
    8. ')
' → logprob: -15.625397682189941
    9. '  ' → logprob: -16.500398635864258
    10. ' ' → logprob: -16.625398635864258

Token 397: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.07892978191375732
    2. ' memo' → logprob: -2.578929901123047
    3. '   ' → logprob: -11.328929901123047
    4. ' ' → logprob: -11.703929901123047
    5. '    ' → logprob: -12.453929901123047
    6. ')' → logprob: -12.828929901123047
    7. '  ' → logprob: -12.953929901123047
    8. 'm' → logprob: -12.953929901123047
    9. '     ' → logprob: -13.203929901123047
    10. 'mem' → logprob: -13.203929901123047

Token 398: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.14695078134536743
    2. ')' → logprob: -2.0219507217407227
    3. ',' → logprob: -5.521950721740723
    4. ')
' → logprob: -8.646950721740723
    5. '   ' → logprob: -10.271950721740723
    6. ')

' → logprob: -10.896950721740723
    7. ' )
' → logprob: -11.771950721740723
    8. ',right' → logprob: -11.771950721740723
    9. ',)
' → logprob: -11.896950721740723
    10. 'right' → logprob: -12.396950721740723

Token 399: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6503008008003235
    2. 'right' → logprob: -1.5253007411956787
    3. ' right' → logprob: -1.6503007411956787
    4. '
' → logprob: -3.6503007411956787
    5. ' +' → logprob: -4.025300979614258
    6. '+' → logprob: -5.650300979614258
    7. 'token' → logprob: -6.025300979614258
    8. 'results' → logprob: -6.025300979614258
    9. '[right' → logprob: -6.150300979614258
    10. ',right' → logprob: -6.150300979614258

Token 400: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.043019283562898636
    2. ' right' → logprob: -3.1680192947387695
    3. '   ' → logprob: -11.54301929473877
    4. '	right' → logprob: -12.41801929473877
    5. '[right' → logprob: -13.66801929473877
    6. 'Right' → logprob: -14.04301929473877
    7. '_right' → logprob: -14.29301929473877
    8. ' ' → logprob: -14.54301929473877
    9. '
' → logprob: -14.66801929473877
    10. 'rights' → logprob: -14.91801929473877

Token 401: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -1.981667537620524e-06
    2. 'results' → logprob: -14.000001907348633
    3. '_' → logprob: -15.625001907348633
    4. '_res' → logprob: -16.375001907348633
    5. '```' → logprob: -16.375001907348633
    6. '_values' → logprob: -16.500001907348633
    7. 'Results' → logprob: -16.625001907348633
    8. ')_' → logprob: -16.625001907348633
    9. '_RESULTS' → logprob: -16.750001907348633
    10. '[' → logprob: -16.750001907348633

Token 402: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326258778572083
    2. ' =' → logprob: -0.7576258778572083
    3. ',' → logprob: -11.007625579833984
    4. ')' → logprob: -12.007625579833984
    5. ' ' → logprob: -14.132625579833984
    6. '   ' → logprob: -14.382625579833984
    7. ' +=' → logprob: -14.507625579833984
    8. '+=' → logprob: -14.632625579833984
    9. 's' → logprob: -15.257625579833984
    10. '_' → logprob: -15.382625579833984

Token 403: ' evaluate' (ID: 21646)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -0.005235529970377684
    2. ' evaluate' → logprob: -5.25523567199707
    3. '.evaluate' → logprob: -14.88023567199707
    4. ' ' → logprob: -14.88023567199707
    5. '[e' → logprob: -14.88023567199707
    6. '   ' → logprob: -15.13023567199707
    7. '  ' → logprob: -15.50523567199707
    8. '[' → logprob: -15.88023567199707
    9. 'valuate' → logprob: -17.13023567199707
    10. 'e' → logprob: -17.13023567199707

Token 404: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -1.5048530030981055e-06
    2. 'All' → logprob: -14.125001907348633
    3. '_' → logprob: -15.750001907348633
    4. 'all' → logprob: -15.750001907348633
    5. ' _' → logprob: -16.125001907348633
    6. '(_' → logprob: -17.125001907348633
    7. '_right' → logprob: -17.125001907348633
    8. '_ALL' → logprob: -17.500001907348633
    9. '```' → logprob: -17.500001907348633
    10. '[_' → logprob: -18.000001907348633

Token 405: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00047416388406418264
    2. '_all' → logprob: -8.250473976135254
    3. 'all' → logprob: -9.125473976135254
    4. 'ways' → logprob: -9.625473976135254
    5. '*' → logprob: -11.750473976135254
    6. '_results' → logprob: -12.250473976135254
    7. '_sets' → logprob: -12.375473976135254
    8. '_way' → logprob: -12.375473976135254
    9. 'Ways' → logprob: -12.875473976135254
    10. 'way' → logprob: -13.375473976135254

Token 406: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.0001439459010725841
    2. 'all' → logprob: -9.625144004821777
    3. 'right' → logprob: -10.625144004821777
    4. 'way' → logprob: -11.125144004821777
    5. 'memo' → logprob: -11.625144004821777
    6. ' ways' → logprob: -11.750144004821777
    7. 'rights' → logprob: -11.750144004821777
    8. 'WAYS' → logprob: -12.500144004821777
    9. 'Ways' → logprob: -12.875144004821777
    10. '_' → logprob: -13.375144004821777

Token 407: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.000553151941858232
    2. '*' → logprob: -7.500553131103516
    3. '(' → logprob: -16.125553131103516
    4. '
' → logprob: -16.625553131103516
    5. ' (*' → logprob: -16.875553131103516
    6. '   ' → logprob: -18.250553131103516
    7. '*(' → logprob: -19.500553131103516
    8. '

' → logprob: -19.625553131103516
    9. '```' → logprob: -19.625553131103516
    10. '(*(' → logprob: -19.625553131103516

Token 408: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -4.894790981779806e-05
    2. ' right' → logprob: -10.000048637390137
    3. '(right' → logprob: -12.625048637390137
    4. '[right' → logprob: -17.375049591064453
    5. 'left' → logprob: -17.875049591064453
    6. '(*' → logprob: -17.875049591064453
    7. '	right' → logprob: -18.375049591064453
    8. '*' → logprob: -18.500049591064453
    9. '   ' → logprob: -18.875049591064453
    10. ',right' → logprob: -19.000049591064453

Token 409: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008243953343480825
    2. ' ,' → logprob: -7.125824451446533
    3. '   ' → logprob: -11.250823974609375
    4. ')' → logprob: -12.625823974609375
    5. ' ' → logprob: -14.000823974609375
    6. '),' → logprob: -14.250823974609375
    7. 'le' → logprob: -14.750823974609375
    8. ',
' → logprob: -15.000823974609375
    9. ',left' → logprob: -15.000823974609375
    10. '  ' → logprob: -15.625823974609375

Token 410: ' leaves' (ID: 15657)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.1798032969236374
    2. ' leaves' → logprob: -1.8048032522201538
    3. 'leaf' → logprob: -10.054802894592285
    4. '(le' → logprob: -12.179802894592285
    5. 'left' → logprob: -12.554802894592285
    6. ' ' → logprob: -13.554802894592285
    7. '_le' → logprob: -13.554802894592285
    8. '   ' → logprob: -13.804802894592285
    9. 'Leaves' → logprob: -14.179802894592285
    10. '*' → logprob: -14.929802894592285

Token 411: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -0.00177323492243886
    2. '_results' → logprob: -6.876773357391357
    3. ',' → logprob: -7.251773357391357
    4. 'sets' → logprob: -10.8767728805542
    5. '_,' → logprob: -13.0017728805542
    6. '_set' → logprob: -13.0017728805542
    7. 'Sets' → logprob: -13.1267728805542
    8. 's' → logprob: -13.6267728805542
    9. 'results' → logprob: -14.0017728805542
    10. '_s' → logprob: -14.8767728805542

Token 412: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031985383247956634
    2. ',m' → logprob: -8.375319480895996
    3. ' ,' → logprob: -9.375319480895996
    4. ',
' → logprob: -13.375319480895996
    5. '   ' → logprob: -14.000319480895996
    6. 'memo' → logprob: -14.250319480895996
    7. ')' → logprob: -14.500319480895996
    8. 'm' → logprob: -15.500319480895996
    9. '),' → logprob: -15.500319480895996
    10. ' memo' → logprob: -15.625319480895996

Token 413: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.07891743630170822
    2. ' memo' → logprob: -2.5789175033569336
    3. ' ' → logprob: -11.578917503356934
    4. 'm' → logprob: -11.578917503356934
    5. '   ' → logprob: -12.578917503356934
    6. 'mem' → logprob: -13.203917503356934
    7. '     ' → logprob: -14.078917503356934
    8. ')' → logprob: -14.578917503356934
    9. '    ' → logprob: -15.078917503356934
    10. '  ' → logprob: -15.578917503356934

Token 414: ')

' (ID: 1029)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4991999864578247
    2. ')' → logprob: -0.9991999864578247
    3. ',' → logprob: -3.874199867248535
    4. ')
' → logprob: -5.749199867248535
    5. '
' → logprob: -7.749199867248535
    6. ',
' → logprob: -8.999199867248535
    7. '[' → logprob: -9.874199867248535
    8. ' )' → logprob: -9.999199867248535
    9. '    
' → logprob: -10.124199867248535
    10. ' ,' → logprob: -10.374199867248535

Token 415: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46291497349739075
    2. 'results' → logprob: -2.0879149436950684
    3. 'result' → logprob: -2.4629149436950684
    4. ' results' → logprob: -2.4629149436950684
    5. 'res' → logprob: -3.5879149436950684
    6. ' res' → logprob: -3.7129149436950684
    7. ' result' → logprob: -3.9629149436950684
    8. ' combined' → logprob: -6.837914943695068
    9. 'all' → logprob: -7.212914943695068
    10. ' all' → logprob: -7.837914943695068

Token 416: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.380953848361969
    2. 'result' → logprob: -1.3809537887573242
    3. 'res' → logprob: -3.255953788757324
    4. ' results' → logprob: -4.130953788757324
    5. '   ' → logprob: -5.380953788757324
    6. 'all' → logprob: -6.130953788757324
    7. ' result' → logprob: -6.255953788757324
    8. ' res' → logprob: -7.380953788757324
    9. 'out' → logprob: -7.755953788757324
    10. 'combined' → logprob: -8.005953788757324

Token 417: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.179778590798378
    2. '=' → logprob: -1.8047785758972168
    3. '=[]' → logprob: -10.679779052734375
    4. ' ' → logprob: -13.179779052734375
    5. '   ' → logprob: -13.429779052734375
    6. ',' → logprob: -13.554779052734375
    7. '[' → logprob: -14.054779052734375
    8. ')' → logprob: -14.054779052734375
    9. '[]' → logprob: -14.179779052734375
    10. 's' → logprob: -14.179779052734375

Token 418: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0412771962583065
    2. '[]
' → logprob: -3.2912771701812744
    3. 'set' → logprob: -5.7912774085998535
    4. ' []' → logprob: -9.041276931762695
    5. ' set' → logprob: -10.166276931762695
    6. ' []
' → logprob: -11.916276931762695
    7. '[]

' → logprob: -12.041276931762695
    8. '{}' → logprob: -12.416276931762695
    9. '[' → logprob: -13.041276931762695
    10. '[]}' → logprob: -14.916276931762695

Token 419: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3975123465061188
    2. ' for' → logprob: -1.1475123167037964
    3. 'for' → logprob: -5.022512435913086
    4. '<|end|>' → logprob: -5.772512435913086
    5. ',' → logprob: -8.522512435913086
    6. ' ' → logprob: -8.647512435913086
    7. '    
' → logprob: -9.022512435913086
    8. '[' → logprob: -9.397512435913086
    9. ')' → logprob: -9.397512435913086
    10. '	for' → logprob: -9.647512435913086

Token 420: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.29885342717170715
    2. ' for' → logprob: -1.4238533973693848
    3. '   ' → logprob: -4.048853397369385
    4. '    
' → logprob: -10.423853874206543
    5. '	for' → logprob: -10.673853874206543
    6. '
' → logprob: -10.798853874206543
    7. ' ' → logprob: -11.673853874206543
    8. ' 
' → logprob: -11.798853874206543
    9. '[' → logprob: -13.173853874206543
    10. '  ' → logprob: -13.298853874206543

Token 421: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.14877815544605255
    2. 'L' → logprob: -3.023778200149536
    3. 'left' → logprob: -3.148778200149536
    4. 'ls' → logprob: -3.273778200149536
    5. 'lr' → logprob: -5.398777961730957
    6. ' l' → logprob: -6.648777961730957
    7. 'lhs' → logprob: -7.398777961730957
    8. 'set' → logprob: -7.648777961730957
    9. ' left' → logprob: -8.023777961730957
    10. 'lv' → logprob: -8.023777961730957

Token 422: 'set' (ID: 977)
  Prédit: '_set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.14443503320217133
    2. '_result' → logprob: -2.269434928894043
    3. '_res' → logprob: -3.894434928894043
    4. 'set' → logprob: -5.519434928894043
    5. '_results' → logprob: -6.269434928894043
    6. '_' → logprob: -6.769434928894043
    7. 's' → logprob: -6.894434928894043
    8. ' in' → logprob: -7.269434928894043
    9. 'es' → logprob: -7.519434928894043
    10. '_subset' → logprob: -7.769434928894043

Token 423: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6689571142196655
    2. ',' → logprob: -0.7939571142196655
    3. ' ,' → logprob: -3.668957233428955
    4. 'in' → logprob: -4.668957233428955
    5. ' ' → logprob: -8.043956756591797
    6. ',in' → logprob: -8.668956756591797
    7. 's' → logprob: -9.293956756591797
    8. '_' → logprob: -10.043956756591797
    9. '_set' → logprob: -10.293956756591797
    10. '_in' → logprob: -10.793956756591797

Token 424: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.000553151941858232
    2. ' left' → logprob: -7.500553131103516
    3. '[left' → logprob: -16.250553131103516
    4. 'right' → logprob: -19.000553131103516
    5. 'l' → logprob: -19.250553131103516
    6. '_left' → logprob: -20.250553131103516
    7. 'lef' → logprob: -20.250553131103516
    8. '(left' → logprob: -20.375553131103516
    9. ' ' → logprob: -20.375553131103516
    10. 'leaf' → logprob: -21.375553131103516

Token 425: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -0.0032913058530539274
    2. '_result' → logprob: -6.503291130065918
    3. '_set' → logprob: -6.878291130065918
    4. '_' → logprob: -8.128291130065918
    5. 'results' → logprob: -9.253291130065918
    6. '   ' → logprob: -9.253291130065918
    7. '_sets' → logprob: -9.503291130065918
    8. ' _' → logprob: -10.378291130065918
    9. '_res' → logprob: -10.628291130065918
    10. '_
' → logprob: -10.753291130065918

Token 426: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43726179003715515
    2. ':
' → logprob: -1.0622618198394775
    3. ' for' → logprob: -5.812261581420898
    4. '   ' → logprob: -5.937261581420898
    5. ' :' → logprob: -6.937261581420898
    6. ' :
' → logprob: -7.187261581420898
    7. ',' → logprob: -7.312261581420898
    8. ' in' → logprob: -8.812261581420898
    9. 'for' → logprob: -9.562261581420898
    10. ':
' → logprob: -9.562261581420898

Token 427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16200409829616547
    2. ' for' → logprob: -2.037003993988037
    3. '   ' → logprob: -4.662003993988037
    4. '    ' → logprob: -5.037003993988037
    5. '[' → logprob: -6.662003993988037
    6. ',' → logprob: -7.912003993988037
    7. ' ' → logprob: -8.537004470825195
    8. 'for' → logprob: -8.662004470825195
    9. '        
' → logprob: -9.037004470825195
    10. ' in' → logprob: -9.287004470825195

Token 428: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.005306689068675041
    2. '       ' → logprob: -5.380306720733643
    3. 'for' (adapté à ' for') → logprob: -7.380306720733643
    4. '   ' → logprob: -9.880306243896484
    5. ' ' → logprob: -12.380306243896484
    6. '	for' → logprob: -12.505306243896484
    7. ' ' → logprob: -13.880306243896484
    8. '        
' → logprob: -14.005306243896484
    9. ' 
' → logprob: -14.880306243896484
    10. '    ' → logprob: -15.130306243896484

Token 429: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.31342849135398865
    2. ' r' → logprob: -1.313428521156311
    3. '	r' → logprob: -9.68842887878418
    4. '_r' → logprob: -9.93842887878418
    5. ' ' → logprob: -10.31342887878418
    6. '       ' → logprob: -11.56342887878418
    7. '   ' → logprob: -12.43842887878418
    8. '  ' → logprob: -12.93842887878418
    9. '```' → logprob: -13.56342887878418
    10. '[r' → logprob: -13.68842887878418

Token 430: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -8.7689099018462e-05
    2. ' set' → logprob: -9.75008773803711
    3. 's' → logprob: -11.25008773803711
    4. '_set' → logprob: -12.12508773803711
    5. 'et' → logprob: -12.50008773803711
    6. ' ' → logprob: -13.37508773803711
    7. ')set' → logprob: -14.00008773803711
    8. '   ' → logprob: -14.12508773803711
    9. 'erset' → logprob: -14.37508773803711
    10. 'sets' → logprob: -14.50008773803711

Token 431: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009816888719797134
    2. 'in' → logprob: -4.634817123413086
    3. ',' → logprob: -10.759817123413086
    4. ')' → logprob: -11.509817123413086
    5. ' ' → logprob: -11.884817123413086
    6. 's' → logprob: -12.634817123413086
    7. '_in' → logprob: -12.634817123413086
    8. '	in' → logprob: -12.634817123413086
    9. '_' → logprob: -12.759817123413086
    10. '[' → logprob: -13.134817123413086

Token 432: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.05488848686218262
    2. ' right' → logprob: -2.9298884868621826
    3. '[right' → logprob: -12.929888725280762
    4. '(right' → logprob: -14.054888725280762
    5. '	right' → logprob: -14.179888725280762
    6. '[' → logprob: -14.304888725280762
    7. 'left' → logprob: -15.054888725280762
    8. '   ' → logprob: -15.054888725280762
    9. ' ' → logprob: -15.054888725280762
    10. 'r' → logprob: -15.054888725280762

Token 433: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -0.0011815387988463044
    2. 'results' → logprob: -7.001181602478027
    3. 's' → logprob: -9.001181602478027
    4. '_' → logprob: -10.001181602478027
    5. '_sets' → logprob: -10.251181602478027
    6. 'set' → logprob: -11.251181602478027
    7. '_RESULTS' → logprob: -11.501181602478027
    8. '   ' → logprob: -11.876181602478027
    9. 'Results' → logprob: -11.876181602478027
    10. ' results' → logprob: -12.751181602478027

Token 434: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.25549426674842834
    2. ':' → logprob: -1.505494236946106
    3. '           ' → logprob: -6.130494117736816
    4. ',' → logprob: -7.255494117736816
    5. '[' → logprob: -8.505494117736816
    6. '):
' → logprob: -8.880494117736816
    7. ':
' → logprob: -9.380494117736816
    8. ':

' → logprob: -9.755494117736816
    9. '       ' → logprob: -10.005494117736816
    10. ',
' → logprob: -10.130494117736816

Token 435: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20659615099430084
    2. '       ' → logprob: -2.0815961360931396
    3. ' results' → logprob: -2.8315961360931396
    4. 'results' → logprob: -7.706596374511719
    5. ' for' → logprob: -7.956596374511719
    6. ',' → logprob: -8.331596374511719
    7. '[' → logprob: -8.331596374511719
    8. ' #' → logprob: -8.331596374511719
    9. ' if' → logprob: -8.456596374511719
    10. '#' → logprob: -8.581596374511719

Token 436: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6511898636817932
    2. ' results' → logprob: -0.7761898636817932
    3. 'results' → logprob: -4.151189804077148
    4. ' if' → logprob: -6.776189804077148
    5. '               ' → logprob: -7.901189804077148
    6. ' combined' → logprob: -8.151189804077148
    7. '       ' → logprob: -8.651189804077148
    8. ' for' → logprob: -8.776189804077148
    9. ' {
' → logprob: -9.151189804077148
    10. '{
' → logprob: -9.776189804077148

Token 437: ' A' (ID: 355)
  Prédit: ' results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.4115312993526459
    2. 'results' → logprob: -1.4115313291549683
    3. '           ' → logprob: -3.1615312099456787
    4. ' combined' → logprob: -3.1615312099456787
    5. 'combined' → logprob: -5.161531448364258
    6. ' if' → logprob: -7.036531448364258
    7. ' new' → logprob: -7.536531448364258
    8. 'result' → logprob: -8.036531448364258
    9. 'if' → logprob: -8.036531448364258
    10. ' for' → logprob: -8.786531448364258

Token 438: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8980511426925659
    2. ' =' → logprob: -1.523051142692566
    3. 'results' → logprob: -2.3980512619018555
    4. ' combined' → logprob: -2.5230512619018555
    5. ' results' → logprob: -3.0230512619018555
    6. 'pp' → logprob: -3.2730512619018555
    7. 'combined' → logprob: -3.6480512619018555
    8. '   ' → logprob: -3.8980512619018555
    9. '.append' → logprob: -5.0230512619018555
    10. '       ' → logprob: -5.1480512619018555

Token 439: ' intersection' (ID: 42002)
  Prédit: ' results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.1592952460050583
    2. 'results' → logprob: -2.6592953205108643
    3. ' combined' → logprob: -2.9092953205108643
    4. '           ' → logprob: -4.159295082092285
    5. 'combined' → logprob: -6.284295082092285
    6. ' result' → logprob: -6.659295082092285
    7. 'result' → logprob: -6.784295082092285
    8. ' if' → logprob: -7.409295082092285
    9. ' new' → logprob: -7.409295082092285
    10. ' merged' → logprob: -7.659295082092285

Token 440: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013563579879701138
    2. '           ' → logprob: -4.888563632965088
    3. '=' → logprob: -5.638563632965088
    4. '               ' → logprob: -6.763563632965088
    5. ',' → logprob: -7.513563632965088
    6. '_set' → logprob: -8.76356315612793
    7. 's' → logprob: -9.88856315612793
    8. ',
' → logprob: -10.01356315612793
    9. '                   ' → logprob: -10.01356315612793
    10. '   ' → logprob: -10.13856315612793

Token 441: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002413703827187419
    2. ',' → logprob: -6.502413749694824
    3. ' results' → logprob: -8.752413749694824
    4. ' =' → logprob: -8.877413749694824
    5. '               ' → logprob: -9.002413749694824
    6. 'results' → logprob: -9.127413749694824
    7. 'result' → logprob: -9.627413749694824
    8. ' combined' → logprob: -10.127413749694824
    9. ',
' → logprob: -10.502413749694824
    10. '
' → logprob: -10.627413749694824

Token 442: ' a' (ID: 261)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.3246869146823883
    2. 'combined' → logprob: -2.0746870040893555
    3. '           ' → logprob: -2.8246870040893555
    4. 'res' → logprob: -3.4496870040893555
    5. ' results' → logprob: -3.9496870040893555
    6. ' combined' → logprob: -4.0746870040893555
    7. 'inter' → logprob: -4.4496870040893555
    8. 'result' → logprob: -5.3246870040893555
    9. 'new' → logprob: -5.4496870040893555
    10. ' res' → logprob: -6.9496870040893555

Token 443: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06641275435686111
    2. '_set' → logprob: -2.8164126873016357
    3. '=' → logprob: -5.566412925720215
    4. 's' → logprob: -8.191412925720215
    5. '=set' → logprob: -9.191412925720215
    6. 'nd' → logprob: -9.316412925720215
    7. 'set' → logprob: -10.316412925720215
    8. '_s' → logprob: -10.691412925720215
    9. ' &=' → logprob: -11.566412925720215
    10. '&' → logprob: -11.691412925720215

Token 444: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0012351145269349217
    2. ' l' → logprob: -6.876235008239746
    3. '{' → logprob: -8.876235008239746
    4. 'fro' → logprob: -10.501235008239746
    5. 'tuple' → logprob: -11.251235008239746
    6. 'set' → logprob: -11.251235008239746
    7. '[l' → logprob: -12.751235008239746
    8. '	l' → logprob: -14.001235008239746
    9. '(l' → logprob: -14.001235008239746
    10. '{}' → logprob: -14.501235008239746

Token 445: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00034273360506631434
    2. 's' → logprob: -8.12534236907959
    3. 'l' → logprob: -10.50034236907959
    4. '_set' → logprob: -12.12534236907959
    5. 'r' → logprob: -13.12534236907959
    6. '
' → logprob: -13.25034236907959
    7. 'sets' → logprob: -13.37534236907959
    8. ' set' → logprob: -13.75034236907959
    9. 'se' → logprob: -14.00034236907959
    10. 'et' → logprob: -14.12534236907959

Token 446: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.23716041445732117
    2. '&' → logprob: -1.7371604442596436
    3. '.inter' → logprob: -3.3621604442596436
    4. '&a' → logprob: -9.112160682678223
    5. '&amp' → logprob: -9.362160682678223
    6. '&r' → logprob: -9.362160682678223
    7. '&A' → logprob: -9.862160682678223
    8. '&s' → logprob: -10.612160682678223
    9. '&I' → logprob: -10.862160682678223
    10. 'intersection' → logprob: -11.612160682678223

Token 447: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00407923199236393
    2. ' r' → logprob: -5.504079341888428
    3. ' ' → logprob: -15.50407886505127
    4. '
' → logprob: -15.75407886505127
    5. '   ' → logprob: -16.129079818725586
    6. '

' → logprob: -16.629079818725586
    7. '           ' → logprob: -17.004079818725586
    8. '	r' → logprob: -17.129079818725586
    9. '  ' → logprob: -17.316579818725586
    10. ' ' → logprob: -17.379079818725586

Token 448: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00015920029545668513
    2. 's' → logprob: -9.37515926361084
    3. 'r' → logprob: -10.12515926361084
    4. 'et' → logprob: -10.50015926361084
    5. 'sets' → logprob: -12.25015926361084
    6. '_set' → logprob: -14.75015926361084
    7. 'se' → logprob: -15.37515926361084
    8. ' set' → logprob: -15.37515926361084
    9. '   ' → logprob: -15.50015926361084
    10. 'erset' → logprob: -15.87515926361084

Token 449: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010474895127117634
    2. '            
' → logprob: -5.260474681854248
    3. '
' → logprob: -5.885474681854248
    4. ',
' → logprob: -6.885474681854248
    5. '<|end|>' → logprob: -7.385474681854248
    6. ',' → logprob: -7.635474681854248
    7. '  
' → logprob: -9.760475158691406
    8. '		' → logprob: -10.260475158691406
    9. '           
' → logprob: -10.510475158691406
    10. '               ' → logprob: -10.760475158691406

Token 450: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005077687092125416
    2. '
' → logprob: -5.880077838897705
    3. '            
' → logprob: -6.505077838897705
    4. ',
' → logprob: -8.755077362060547
    5. ',' → logprob: -8.880077362060547
    6. ' 
' → logprob: -9.505077362060547
    7. '  
' → logprob: -9.630077362060547
    8. '\n' → logprob: -9.755077362060547
    9. ' results' → logprob: -10.130077362060547
    10. '<|end|>' → logprob: -10.130077362060547

Token 451: ' results' (ID: 4376)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23558883368968964
    2. 'results' (adapté à ' results') → logprob: -1.860588788986206
    3. ' results' → logprob: -2.985588788986206
    4. '
' → logprob: -6.485589027404785
    5. '            
' → logprob: -6.735589027404785
    6. ',' → logprob: -8.360589027404785
    7. '(results' → logprob: -9.110589027404785
    8. ',
' → logprob: -9.360589027404785
    9. '```' → logprob: -9.610589027404785
    10. '[' → logprob: -9.735589027404785

Token 452: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0067484090104699135
    2. '.' → logprob: -5.006748199462891
    3. ' .' → logprob: -11.13174819946289
    4. '.extend' → logprob: -11.13174819946289
    5. '.app' → logprob: -13.13174819946289
    6. '.ap' → logprob: -14.25674819946289
    7. 'append' → logprob: -14.38174819946289
    8. ').' → logprob: -16.00674819946289
    9. '.add' → logprob: -16.25674819946289
    10. '_append' → logprob: -16.75674819946289

Token 453: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -8.180258191714529e-06
    2. 'a' → logprob: -12.000008583068848
    3. '(' → logprob: -13.375008583068848
    4. '((' → logprob: -15.750008583068848
    5. '(A' → logprob: -16.00000762939453
    6. '(
' → logprob: -17.37500762939453
    7. ' (' → logprob: -17.50000762939453
    8. '(tuple' → logprob: -17.87500762939453
    9. '(('' → logprob: -18.12500762939453
    10. '('' → logprob: -18.25000762939453

Token 454: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014058287488296628
    2. ')
' → logprob: -6.876405715942383
    3. ' )' → logprob: -8.001405715942383
    4. '   ' → logprob: -11.626405715942383
    5. '<|end|>' → logprob: -11.876405715942383
    6. '           ' → logprob: -12.126405715942383
    7. '
' → logprob: -12.126405715942383
    8. ' )
' → logprob: -13.001405715942383
    9. '       ' → logprob: -13.376405715942383
    10. ')return' → logprob: -13.876405715942383

Token 455: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23985502123832703
    2. '           ' → logprob: -1.8648550510406494
    3. '   ' → logprob: -3.2398550510406494
    4. '    
' → logprob: -5.23985481262207
    5. ' return' → logprob: -5.23985481262207
    6. ',' → logprob: -6.11485481262207
    7. 'return' → logprob: -6.36485481262207
    8. '  
' → logprob: -7.11485481262207
    9. '<|end|>' → logprob: -7.11485481262207
    10. '       ' → logprob: -7.36485481262207

Token 456: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11910125613212585
    2. '
' → logprob: -2.8691012859344482
    3. ' results' → logprob: -3.2441012859344482
    4. 'results' → logprob: -4.869101047515869
    5. '            
' → logprob: -5.494101047515869
    6. '       ' → logprob: -6.744101047515869
    7. ' 
' → logprob: -7.119101047515869
    8. '   ' → logprob: -7.494101047515869
    9. '  
' → logprob: -7.869101047515869
    10. '    
' → logprob: -7.994101047515869

Token 457: ' O' (ID: 532)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.035800687968730927
    2. ' b' → logprob: -4.785800457000732
    3. 'u' → logprob: -4.910800457000732
    4. '   ' → logprob: -5.035800457000732
    5. 'results' → logprob: -5.785800457000732
    6. '#' → logprob: -5.910800457000732
    7. '           ' → logprob: -6.035800457000732
    8. 'r' → logprob: -7.035800457000732
    9. '       ' → logprob: -7.285800457000732
    10. ' ' → logprob: -7.285800457000732

Token 458: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25232937932014465
    2. '=' → logprob: -2.2523293495178223
    3. 'r' → logprob: -2.6273293495178223
    4. 'p' → logprob: -3.6273293495178223
    5. '_union' → logprob: -5.002329349517822
    6. '.append' → logprob: -5.752329349517822
    7. ':' → logprob: -5.752329349517822
    8. '.union' → logprob: -6.627329349517822
    9. '   ' → logprob: -6.877329349517822
    10. 'union' → logprob: -6.877329349517822

Token 459: ' union' (ID: 22208)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.3145197927951813
    2. 'l' → logprob: -1.3145197629928589
    3. '(l' → logprob: -7.189519882202148
    4. ' (' → logprob: -7.939519882202148
    5. '(' → logprob: -9.939519882202148
    6. ' ' → logprob: -10.939519882202148
    7. 'b' → logprob: -11.439519882202148
    8. '   ' → logprob: -11.564519882202148
    9. '	l' → logprob: -11.689519882202148
    10. 'a' → logprob: -11.939519882202148

Token 460: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03905545175075531
    2. 'r' → logprob: -4.164055347442627
    3. ' =' → logprob: -5.289055347442627
    4. ',' → logprob: -5.539055347442627
    5. '.append' → logprob: -5.664055347442627
    6. '
' → logprob: -5.789055347442627
    7. ',
' → logprob: -6.039055347442627
    8. '=' → logprob: -6.789055347442627
    9. '            
' → logprob: -6.789055347442627
    10. ' l' → logprob: -7.914055347442627

Token 461: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0032852557487785816
    2. 'results' → logprob: -6.5032854080200195
    3. ' results' → logprob: -7.5032854080200195
    4. '            
' → logprob: -7.8782854080200195
    5. '<|end|>' → logprob: -8.62828540802002
    6. '[' → logprob: -8.75328540802002
    7. '(results' → logprob: -9.00328540802002
    8. '
' → logprob: -9.50328540802002
    9. ',' → logprob: -9.50328540802002
    10. '[
' → logprob: -9.87828540802002

Token 462: ' o' (ID: 293)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.6763083934783936
    2. ' results' → logprob: -0.8013083934783936
    3. '           ' → logprob: -3.3013083934783936
    4. '            
' → logprob: -6.551308631896973
    5. '(results' → logprob: -7.301308631896973
    6. ' 
' → logprob: -7.301308631896973
    7. '[' → logprob: -7.551308631896973
    8. ' r' → logprob: -7.676308631896973
    9. 'r' → logprob: -7.926308631896973
    10. '[]
' → logprob: -8.551308631896973

Token 463: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759459733963013
    2. '=' → logprob: -0.8259459733963013
    3. ' ' → logprob: -12.450945854187012
    4. 'p' → logprob: -14.200945854187012
    5. 'f' → logprob: -14.700945854187012
    6. '   ' → logprob: -14.950945854187012
    7. 'r' → logprob: -15.575945854187012
    8. 's' → logprob: -15.700945854187012
    9. '  ' → logprob: -15.700945854187012
    10. 'b' → logprob: -16.075946807861328

Token 464: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.004079112783074379
    2. ' l' → logprob: -5.504079341888428
    3. '	l' → logprob: -14.25407886505127
    4. '(l' → logprob: -18.254079818725586
    5. '   ' → logprob: -18.629079818725586
    6. '_l' → logprob: -19.004079818725586
    7. '           ' → logprob: -19.129079818725586
    8. '
' → logprob: -19.629079818725586
    9. 'a' → logprob: -19.879079818725586
    10. '```' → logprob: -20.004079818725586

Token 465: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.318681188422488e-05
    2. 's' → logprob: -12.75001335144043
    3. 'et' → logprob: -13.12501335144043
    4. 'sets' → logprob: -13.12501335144043
    5. ' set' → logprob: -13.25001335144043
    6. '   ' → logprob: -13.25001335144043
    7. 'r' → logprob: -14.25001335144043
    8. ' l' → logprob: -15.12501335144043
    9. '(set' → logprob: -15.37501335144043
    10. '       ' → logprob: -15.37501335144043

Token 466: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.6931543946266174
    2. ' |' → logprob: -0.6931543946266174
    3. '.union' → logprob: -12.193154335021973
    4. ' ' → logprob: -14.318154335021973
    5. 'union' → logprob: -14.568154335021973
    6. ' ' → logprob: -14.943154335021973
    7. '|
' → logprob: -15.318154335021973
    8. ' |
' → logprob: -16.06815528869629
    9. ' union' → logprob: -16.44315528869629
    10. '_' → logprob: -17.19315528869629

Token 467: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.17974601686000824
    2. ' r' → logprob: -1.8047460317611694
    3. '(r' → logprob: -14.8047456741333
    4. '	r' → logprob: -14.9297456741333
    5. ' ' → logprob: -15.3047456741333
    6. '_r' → logprob: -15.5547456741333
    7. '[r' → logprob: -17.054746627807617
    8. '   ' → logprob: -17.054746627807617
    9. ',r' → logprob: -17.492246627807617
    10. '<|end|>' → logprob: -17.492246627807617

Token 468: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -9.710618905955926e-05
    2. 'et' → logprob: -10.250097274780273
    3. 'r' → logprob: -10.375097274780273
    4. 's' → logprob: -10.750097274780273
    5. 'sets' → logprob: -12.500097274780273
    6. '_set' → logprob: -13.875097274780273
    7. ' set' → logprob: -14.250097274780273
    8. ' ' → logprob: -14.250097274780273
    9. 'se' → logprob: -14.625097274780273
    10. ' r' → logprob: -15.000097274780273

Token 469: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.702754474943504e-05
    2. '<|end|>' → logprob: -11.75003719329834
    3. 'results' → logprob: -11.87503719329834
    4. '          ' → logprob: -12.37503719329834
    5. ',' → logprob: -12.62503719329834
    6. ' results' → logprob: -12.75003719329834
    7. '            
' → logprob: -12.87503719329834
    8. '       ' → logprob: -13.75003719329834
    9. '
' → logprob: -13.87503719329834
    10. '               ' → logprob: -13.87503719329834

Token 470: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.255023956531659e-05
    2. 'results' → logprob: -10.250072479248047
    3. ' results' → logprob: -11.250072479248047
    4. '            
' → logprob: -12.000072479248047
    5. '<|end|>' → logprob: -12.375072479248047
    6. ',' → logprob: -12.625072479248047
    7. '       ' → logprob: -13.125072479248047
    8. '
' → logprob: -13.375072479248047
    9. '(results' → logprob: -13.875072479248047
    10. '          ' → logprob: -13.875072479248047

Token 471: ' results' (ID: 4376)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8625274896621704
    2. 'results' (adapté à ' results') → logprob: -0.8625274896621704
    3. ' results' → logprob: -1.8625274896621704
    4. '            
' → logprob: -8.237527847290039
    5. '(results' → logprob: -8.737527847290039
    6. '	results' → logprob: -10.112527847290039
    7. '.results' → logprob: -10.487527847290039
    8. '          ' → logprob: -12.237527847290039
    9. ' 
' → logprob: -12.237527847290039
    10. '_results' → logprob: -12.362527847290039

Token 472: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.3451433409936726e-05
    2. '.' → logprob: -10.375033378601074
    3. ' .' → logprob: -14.000033378601074
    4. '           ' → logprob: -14.375033378601074
    5. '.extend' → logprob: -14.875033378601074
    6. '.app' → logprob: -15.500033378601074
    7. 'append' → logprob: -15.625033378601074
    8. ').' → logprob: -17.75003433227539
    9. '_append' → logprob: -19.00003433227539
    10. 'appen' → logprob: -19.37503433227539

Token 473: '(o' (ID: 18928)
  Prédit: '(o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(o' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.125001907348633
    3. ' (' → logprob: -17.500001907348633
    4. 'o' → logprob: -18.375001907348633
    5. '	o' → logprob: -20.500001907348633
    6. '(
' → logprob: -20.500001907348633
    7. '()' → logprob: -22.750001907348633
    8. '(e' → logprob: -23.250001907348633
    9. '=o' → logprob: -23.375001907348633
    10. '(u' → logprob: -23.500001907348633

Token 474: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011755822924897075
    2. ')
' → logprob: -7.251175403594971
    3. '           ' → logprob: -7.751175403594971
    4. '<|end|>' → logprob: -11.001175880432129
    5. '       ' → logprob: -11.626175880432129
    6. ' )' → logprob: -12.751175880432129
    7. '   ' → logprob: -13.001175880432129
    8. '
' → logprob: -14.376175880432129
    9. '               ' → logprob: -14.626175880432129
    10. ']' → logprob: -15.001175880432129

Token 475: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008541285991668701
    2. 'return' → logprob: -5.508541107177734
    3. '
' → logprob: -6.258541107177734
    4. ' return' → logprob: -6.633541107177734
    5. '    
' → logprob: -7.758541107177734
    6. '	return' → logprob: -8.008541107177734
    7. '           ' → logprob: -8.258541107177734
    8. '       ' → logprob: -9.883541107177734
    9. '<|end|>' → logprob: -9.883541107177734
    10. '  
' → logprob: -10.383541107177734

Token 476: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4209838807582855
    2. '
' → logprob: -1.420983910560608
    3. ' return' → logprob: -3.2959837913513184
    4. 'return' → logprob: -3.2959837913513184
    5. ' ' → logprob: -5.045983791351318
    6. '           ' → logprob: -5.045983791351318
    7. '	return' → logprob: -5.295983791351318
    8. '<|end|>' → logprob: -5.920983791351318
    9. '    
' → logprob: -6.295983791351318
    10. '       ' → logprob: -6.295983791351318

Token 477: ' X' (ID: 2127)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9582974910736084
    2. '^' → logprob: -1.7082974910736084
    3. 'a' → logprob: -2.0832974910736084
    4. '#' → logprob: -2.7082974910736084
    5. 'd' → logprob: -2.8332974910736084
    6. '-' → logprob: -3.3332974910736084
    7. 'X' → logprob: -3.4582974910736084
    8. 'l' → logprob: -3.9582974910736084
    9. 'x' → logprob: -3.9582974910736084
    10. 'o' → logprob: -4.0832977294921875

Token 478: ':' (ID: 25)
  Prédit: ' ^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ^' → logprob: -1.0281516313552856
    2. 'or' → logprob: -1.5281516313552856
    3. '=' → logprob: -1.7781516313552856
    4. '^' → logprob: -1.7781516313552856
    5. ' =' → logprob: -3.278151512145996
    6. 'o' → logprob: -3.653151512145996
    7. ' ' → logprob: -4.528151512145996
    8. ' ^=' → logprob: -5.778151512145996
    9. 'OR' → logprob: -5.903151512145996
    10. '_' → logprob: -7.028151512145996

Token 479: ' symmetric' (ID: 123676)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.2025236040353775
    2. 'l' → logprob: -1.8275235891342163
    3. ' (' → logprob: -4.452523708343506
    4. '(l' → logprob: -4.702523708343506
    5. '(' → logprob: -6.702523708343506
    6. 's' → logprob: -8.577523231506348
    7. ' symmetric' → logprob: -8.952523231506348
    8. 'a' → logprob: -9.827523231506348
    9. 'sym' → logprob: -10.202523231506348
    10. '((' → logprob: -10.827523231506348

Token 480: ' difference' (ID: 9809)
  Prédit: '_difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.0710025280714035
    2. 'difference' → logprob: -2.69600248336792
    3. '^' → logprob: -7.19600248336792
    4. ' difference' → logprob: -8.696002960205078
    5. '_diff' → logprob: -10.571002960205078
    6. '_x' → logprob: -10.571002960205078
    7. '_^' → logprob: -11.071002960205078
    8. '_' → logprob: -11.071002960205078
    9. '_d' → logprob: -11.321002960205078
    10. ' ^' → logprob: -11.321002960205078

Token 481: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.046589311212301254
    2. '(l' → logprob: -3.6715893745422363
    3. ' l' → logprob: -4.671589374542236
    4. ' (' → logprob: -5.171589374542236
    5. 'l' → logprob: -6.546589374542236
    6. ' =' → logprob: -6.921589374542236
    7. '
' → logprob: -8.046588897705078
    8. '^' → logprob: -8.046588897705078
    9. ' ^' → logprob: -8.171588897705078
    10. '(' → logprob: -8.421588897705078

Token 482: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020839301869273186
    2. 'x' → logprob: -4.270839214324951
    3. ' x' → logprob: -5.395839214324951
    4. '            
' → logprob: -7.020839214324951
    5. '(x' → logprob: -7.895839214324951
    6. '
' → logprob: -8.39583969116211
    7. ' (' → logprob: -8.64583969116211
    8. '   ' → logprob: -9.52083969116211
    9. '          ' → logprob: -10.27083969116211
    10. '^' → logprob: -10.27083969116211

Token 483: ' x' (ID: 1215)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.40711966156959534
    2. ' l' → logprob: -1.282119631767273
    3. 'x' (adapté à ' x') → logprob: -3.2821197509765625
    4. ' x' → logprob: -5.1571197509765625
    5. '(l' → logprob: -5.2821197509765625
    6. 's' → logprob: -5.5321197509765625
    7. 'a' → logprob: -6.2821197509765625
    8. ' s' → logprob: -7.2821197509765625
    9. ' (' → logprob: -7.2821197509765625
    10. 'xor' → logprob: -7.7821197509765625

Token 484: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4287053346633911
    2. '=' → logprob: -1.0537053346633911
    3. ' ' → logprob: -12.928705215454102
    4. 's' → logprob: -14.053705215454102
    5. 'x' → logprob: -14.553705215454102
    6. 'o' → logprob: -16.0537052154541
    7. ' ' → logprob: -16.4287052154541
    8. 'a' → logprob: -16.5537052154541
    9. ',' → logprob: -16.6787052154541
    10. ')' → logprob: -16.7412052154541

Token 485: ' (' (ID: 350)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.038576241582632065
    2. ' l' → logprob: -3.913576126098633
    3. '(l' → logprob: -4.038576126098633
    4. ' (' → logprob: -8.413576126098633
    5. '(' → logprob: -11.413576126098633
    6. '	l' → logprob: -11.538576126098633
    7. '_l' → logprob: -13.288576126098633
    8. ' ' → logprob: -13.913576126098633
    9. '(s' → logprob: -13.913576126098633
    10. '((' → logprob: -14.351076126098633

Token 486: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -7.32654589228332e-05
    2. ' l' → logprob: -9.875073432922363
    3. '(l' → logprob: -10.750073432922363
    4. ' (' → logprob: -16.250072479248047
    5. '	l' → logprob: -16.250072479248047
    6. '_l' → logprob: -17.125072479248047
    7. '(' → logprob: -17.250072479248047
    8. ''l' → logprob: -19.625072479248047
    9. 's' → logprob: -20.000072479248047
    10. 'ls' → logprob: -20.250072479248047

Token 487: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -3.7146746763028204e-05
    2. 's' → logprob: -11.00003719329834
    3. 'l' → logprob: -11.62503719329834
    4. 'et' → logprob: -12.12503719329834
    5. ' l' → logprob: -13.25003719329834
    6. '(l' → logprob: -14.00003719329834
    7. 'Set' → logprob: -14.50003719329834
    8. 'sets' → logprob: -14.50003719329834
    9. ' set' → logprob: -15.00003719329834
    10. '_set' → logprob: -15.12503719329834

Token 488: ' |' (ID: 1022)
  Prédit: ' ^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.31337717175483704
    2. '^' → logprob: -1.3133771419525146
    3. ' ' → logprob: -9.688377380371094
    4. '-' → logprob: -10.938377380371094
    5. ' -' → logprob: -11.813377380371094
    6. ')' → logprob: -11.813377380371094
    7. '|' → logprob: -12.563377380371094
    8. ' ^
' → logprob: -12.563377380371094
    9. ' ' → logprob: -12.688377380371094
    10. ' x' → logprob: -13.063377380371094

Token 489: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0004071971052326262
    2. ' r' → logprob: -7.8754072189331055
    3. '(r' → logprob: -10.625407218933105
    4. 'l' → logprob: -13.375407218933105
    5. '(' → logprob: -15.000407218933105
    6. ' (' → logprob: -15.250407218933105
    7. 'right' → logprob: -16.00040626525879
    8. 's' → logprob: -16.25040626525879
    9. ')' → logprob: -16.62540626525879
    10. '_r' → logprob: -16.75040626525879

Token 490: 'set' (ID: 977)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6346243023872375
    2. 'set' → logprob: -0.7596243023872375
    3. ' r' → logprob: -6.634624481201172
    4. 's' → logprob: -7.384624481201172
    5. 'sets' → logprob: -10.884624481201172
    6. '(r' → logprob: -11.009624481201172
    7. '   ' → logprob: -11.884624481201172
    8. 'right' → logprob: -12.259624481201172
    9. 'ight' → logprob: -12.384624481201172
    10. '_r' → logprob: -12.384624481201172

Token 491: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.7159857786027715e-05
    2. ' )' → logprob: -10.000046730041504
    3. ')
' → logprob: -13.750046730041504
    4. ')-' → logprob: -15.250046730041504
    5. ')\' → logprob: -16.75004768371582
    6. '-' → logprob: -16.87504768371582
    7. '")' → logprob: -17.00004768371582
    8. '   ' → logprob: -17.37504768371582
    9. 'x' → logprob: -17.62504768371582
    10. ' -' → logprob: -17.75004768371582

Token 492: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20151089131832123
    2. '-' → logprob: -1.7015109062194824
    3. ')' → logprob: -10.201510429382324
    4. ' ' → logprob: -10.576510429382324
    5. '-x' → logprob: -10.701510429382324
    6. '   ' → logprob: -12.951510429382324
    7. ' ^' → logprob: -13.201510429382324
    8. '-
' → logprob: -13.576510429382324
    9. '&' → logprob: -13.826510429382324
    10. '
' → logprob: -14.201510429382324

Token 493: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.001967650605365634
    2. '(' → logprob: -6.251967430114746
    3. ' (' → logprob: -10.251967430114746
    4. '(ls' → logprob: -13.001967430114746
    5. '((' → logprob: -14.376967430114746
    6. '(a' → logprob: -15.126967430114746
    7. ' ' → logprob: -16.001968383789062
    8. '(lst' → logprob: -16.126968383789062
    9. '(L' → logprob: -16.376968383789062
    10. '   ' → logprob: -16.376968383789062

Token 494: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.007089480757713318
    2. ' l' → logprob: -5.507089614868164
    3. '(l' → logprob: -5.882089614868164
    4. '	l' → logprob: -8.882089614868164
    5. ' ' → logprob: -10.507089614868164
    6. ' (' → logprob: -10.507089614868164
    7. '(' → logprob: -11.007089614868164
    8. '   ' → logprob: -13.257089614868164
    9. '  ' → logprob: -13.382089614868164
    10. '_l' → logprob: -13.507089614868164

Token 495: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -2.1008713702030946e-06
    2. '(set' → logprob: -13.625001907348633
    3. 's' → logprob: -15.625001907348633
    4. 'Set' → logprob: -15.625001907348633
    5. 'sets' → logprob: -15.625001907348633
    6. '(s' → logprob: -16.375001907348633
    7. '_set' → logprob: -17.125001907348633
    8. '{' → logprob: -17.125001907348633
    9. '(' → logprob: -17.375001907348633
    10. ' (' → logprob: -17.500001907348633

Token 496: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.005378067959100008
    2. ' &' → logprob: -5.255378246307373
    3. '&amp' → logprob: -9.005377769470215
    4. '&s' → logprob: -11.255377769470215
    5. '&i' → logprob: -13.005377769470215
    6. '&a' → logprob: -13.380377769470215
    7. '&r' → logprob: -13.755377769470215
    8. '&nbsp' → logprob: -13.880377769470215
    9. '&t' → logprob: -14.005377769470215
    10. ' ' → logprob: -14.380377769470215

Token 497: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005233763717114925
    2. ' r' → logprob: -5.2552337646484375
    3. ' ' → logprob: -18.630233764648438
    4. '	r' → logprob: -19.255233764648438
    5. '_r' → logprob: -19.630233764648438
    6. '   ' → logprob: -20.380233764648438
    7. 's' → logprob: -21.255233764648438
    8. 'rs' → logprob: -21.755233764648438
    9. 'set' → logprob: -22.255233764648438
    10. '(r' → logprob: -22.630233764648438

Token 498: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.02988007292151451
    2. 'r' → logprob: -3.5298800468444824
    3. ' r' → logprob: -9.15488052368164
    4. 's' → logprob: -11.52988052368164
    5. '   ' → logprob: -12.90488052368164
    6. ' set' → logprob: -13.40488052368164
    7. '{' → logprob: -13.40488052368164
    8. 'ser' → logprob: -14.02988052368164
    9. 'sets' → logprob: -14.02988052368164
    10. '[r' → logprob: -14.02988052368164

Token 499: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015570069663226604
    2. ')
' → logprob: -4.265570163726807
    3. '           ' → logprob: -6.640570163726807
    4. ')
' → logprob: -9.515569686889648
    5. ' )' → logprob: -11.390569686889648
    6. '       ' → logprob: -12.390569686889648
    7. '   ' → logprob: -13.515569686889648
    8. '')' → logprob: -13.515569686889648
    9. '))' → logprob: -13.765569686889648
    10. ' )
' → logprob: -14.015569686889648

Token 500: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004411366768181324
    2. 'results' → logprob: -5.629411220550537
    3. ' results' → logprob: -7.254411220550537
    4. '(results' → logprob: -10.254411697387695
    5. '		' → logprob: -11.004411697387695
    6. '<|end|>' → logprob: -11.504411697387695
    7. '            
' → logprob: -11.629411697387695
    8. '.results' → logprob: -11.879411697387695
    9. '	results' → logprob: -12.004411697387695
    10. 'Results' → logprob: -12.379411697387695

Token 501: ' results' (ID: 4376)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.504694938659668
    2. 'results' (adapté à ' results') → logprob: -1.004694938659668
    3. ' results' → logprob: -3.504694938659668
    4. '(results' → logprob: -10.129694938659668
    5. '	results' → logprob: -10.629694938659668
    6. '          ' → logprob: -11.254694938659668
    7. '.results' → logprob: -12.254694938659668
    8. '            
' → logprob: -12.504694938659668
    9. '       ' → logprob: -12.879694938659668
    10. '   ' → logprob: -13.004694938659668

Token 502: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.38698890805244446
    2. '.append' → logprob: -1.136988878250122
    3. '.add' → logprob: -9.636988639831543
    4. 'append' → logprob: -10.511988639831543
    5. '.extend' → logprob: -11.386988639831543
    6. ' .' → logprob: -12.011988639831543
    7. '.app' → logprob: -12.761988639831543
    8. '.
' → logprob: -13.761988639831543
    9. '.Append' → logprob: -14.136988639831543
    10. '.=' → logprob: -14.261988639831543

Token 503: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00010950337309623137
    2. 'x' → logprob: -9.125109672546387
    3. '(' → logprob: -14.500109672546387
    4. '(
' → logprob: -17.25010871887207
    5. '{x' → logprob: -18.12510871887207
    6. ' x' → logprob: -18.62510871887207
    7. '	x' → logprob: -19.62510871887207
    8. '((' → logprob: -19.62510871887207
    9. ' (' → logprob: -20.25010871887207
    10. '<x' → logprob: -20.25010871887207

Token 504: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004411591507960111
    2. ')
' → logprob: -8.250441551208496
    3. '           ' → logprob: -8.875441551208496
    4. '<|end|>' → logprob: -11.250441551208496
    5. '       ' → logprob: -11.625441551208496
    6. '   ' → logprob: -11.750441551208496
    7. ')return' → logprob: -12.500441551208496
    8. ' )' → logprob: -13.875441551208496
    9. ')}' → logprob: -14.375441551208496
    10. '
' → logprob: -14.625441551208496

Token 505: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016367359086871147
    2. 'return' → logprob: -4.516367435455322
    3. '
' → logprob: -5.891367435455322
    4. ' return' → logprob: -6.016367435455322
    5. '    
' → logprob: -10.266366958618164
    6. '	return' → logprob: -10.516366958618164
    7. '           ' → logprob: -11.266366958618164
    8. '       ' → logprob: -11.391366958618164
    9. '```' → logprob: -12.016366958618164
    10. ' ' → logprob: -13.391366958618164

Token 506: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4855135381221771
    2. '   ' → logprob: -0.9855135679244995
    3. ' return' → logprob: -4.485513687133789
    4. '
' → logprob: -9.985513687133789
    5. '	return' → logprob: -10.110513687133789
    6. '    
' → logprob: -11.985513687133789
    7. ':return' → logprob: -13.360513687133789
    8. ' ' → logprob: -13.485513687133789
    9. '```' → logprob: -13.610513687133789
    10. '  ' → logprob: -14.485513687133789

Token 507: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.000741134281270206
    2. 'list' → logprob: -7.250741004943848
    3. ' results' → logprob: -10.750741004943848
    4. '[' → logprob: -11.750741004943848
    5. 'set' → logprob: -14.250741004943848
    6. '(results' → logprob: -14.875741004943848
    7. 'memo' → logprob: -15.000741004943848
    8. 'result' → logprob: -15.500741004943848
    9. '[list' → logprob: -16.125741958618164
    10. 'tuple' → logprob: -16.375741958618164

Token 508: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 509: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 510: ' count' (ID: 3605)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.9414204359054565
    2. 'combine' → logprob: -1.8164204359054565
    3. ' combine' → logprob: -2.316420555114746
    4. ' find' → logprob: -2.566420555114746
    5. ' count' → logprob: -3.191420555114746
    6. 'main' → logprob: -3.316420555114746
    7. 'count' → logprob: -3.816420555114746
    8. ' evaluate' → logprob: -4.066420555114746
    9. ' collect' → logprob: -4.066420555114746
    10. ' solve' → logprob: -4.066420555114746

Token 511: '_' (ID: 62)
  Prédit: '_all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.20653922855854034
    2. '_' → logprob: -2.3315391540527344
    3. '_unique' → logprob: -2.8315391540527344
    4. '_sets' → logprob: -3.8315391540527344
    5. '_sub' → logprob: -5.956539154052734
    6. '(' → logprob: -6.206539154052734
    7. '_set' → logprob: -7.706539154052734
    8. '_results' → logprob: -7.831539154052734
    9. '_subset' → logprob: -7.831539154052734
    10. '_dist' → logprob: -7.956539154052734

Token 512: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.9876427054405212
    2. 'all' → logprob: -1.112642765045166
    3. 'valid' → logprob: -1.987642765045166
    4. 'distinct' → logprob: -3.362642765045166
    5. 'unique' → logprob: -3.487642765045166
    6. 'possible' → logprob: -3.862642765045166
    7. 'sub' → logprob: -3.862642765045166
    8. 'sets' → logprob: -3.987642765045166
    9. 'results' → logprob: -4.987642765045166
    10. 'trees' → logprob: -5.612642765045166

Token 513: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.029790183529257774
    2. '(' → logprob: -3.529790163040161
    3. '(tree' → logprob: -11.529789924621582
    4. '(nodes' → logprob: -12.029789924621582
    5. '(line' → logprob: -12.154789924621582
    6. ' (' → logprob: -12.279789924621582
    7. '(root' → logprob: -12.404789924621582
    8. '(Node' → logprob: -12.904789924621582
    9. '(def' → logprob: -13.279789924621582
    10. '(parent' → logprob: -13.654789924621582

Token 514: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1054253011243418e-05
    2. ',left' → logprob: -11.250020980834961
    3. ' ,' → logprob: -11.875020980834961
    4. ',node' → logprob: -14.125020980834961
    5. '‌,' → logprob: -15.750020980834961
    6. ',right' → logprob: -15.875020980834961
    7. ',line' → logprob: -18.00002098083496
    8. '   ' → logprob: -18.25002098083496
    9. 'left' → logprob: -18.62502098083496
    10. ',
' → logprob: -18.75002098083496

Token 515: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.17976772785186768
    2. ' left' → logprob: -1.8047677278518677
    3. 'leaf' → logprob: -12.179767608642578
    4. 'le' → logprob: -12.554767608642578
    5. 'node' → logprob: -12.554767608642578
    6. ' ' → logprob: -13.054767608642578
    7. ' leaves' → logprob: -13.179767608642578
    8. '	left' → logprob: -13.554767608642578
    9. '   ' → logprob: -13.679767608642578
    10. ' node' → logprob: -13.929767608642578

Token 516: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.531315314830863e-06
    2. ',right' → logprob: -13.125003814697266
    3. ' ,' → logprob: -13.500003814697266
    4. ',
' → logprob: -17.750003814697266
    5. ',left' → logprob: -18.500003814697266
    6. 'def' → logprob: -18.875003814697266
    7. '_,' → logprob: -19.625003814697266
    8. ',count' → logprob: -19.625003814697266
    9. ')' → logprob: -20.125003814697266
    10. '=' → logprob: -20.375003814697266

Token 517: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.014163863845169544
    2. ' right' → logprob: -4.264163970947266
    3. '	right' → logprob: -16.014163970947266
    4. ',right' → logprob: -16.139163970947266
    5. 'r' → logprob: -17.139163970947266
    6. 'count' → logprob: -17.264163970947266
    7. ' ' → logprob: -17.389163970947266
    8. '[right' → logprob: -17.389163970947266
    9. 'rights' → logprob: -18.264163970947266
    10. '(right' → logprob: -18.264163970947266

Token 518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015181333583313972
    2. '):' → logprob: -9.000151634216309
    3. '   ' → logprob: -11.250151634216309
    4. ',node' → logprob: -11.625151634216309
    5. ' ,' → logprob: -13.000151634216309
    6. '):
' → logprob: -13.625151634216309
    7. ',left' → logprob: -14.375151634216309
    8. ')' → logprob: -14.500151634216309
    9. ',
' → logprob: -14.750151634216309
    10. '‌,' → logprob: -15.500151634216309

Token 519: ' leaves' (ID: 15657)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.10089963674545288
    2. ' leaves' → logprob: -2.3508996963500977
    3. 'leaf' → logprob: -8.475899696350098
    4. 'target' → logprob: -8.850899696350098
    5. 'desired' → logprob: -10.225899696350098
    6. 'memo' → logprob: -10.225899696350098
    7. ' target' → logprob: -10.225899696350098
    8. '   ' → logprob: -10.350899696350098
    9. ' memo' → logprob: -10.475899696350098
    10. ' ' → logprob: -10.725899696350098

Token 520: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -0.0003115095605608076
    2. ',' → logprob: -8.250311851501465
    3. 'sets' → logprob: -10.750311851501465
    4. ',_' → logprob: -11.250311851501465
    5. '_set' → logprob: -12.500311851501465
    6. 's' → logprob: -13.250311851501465
    7. 'Sets' → logprob: -13.750311851501465
    8. '```' → logprob: -13.750311851501465
    9. ')' → logprob: -14.000311851501465
    10. '_,' → logprob: -14.000311851501465

Token 521: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023810577113181353
    2. ',m' → logprob: -8.375238418579102
    3. '   ' → logprob: -12.500238418579102
    4. '):' → logprob: -13.375238418579102
    5. ' ,' → logprob: -13.750238418579102
    6. '):
' → logprob: -14.875238418579102
    7. ',
' → logprob: -15.000238418579102
    8. ' memo' → logprob: -15.750238418579102
    9. 'memo' → logprob: -15.875238418579102
    10. ')' → logprob: -17.1252384185791

Token 522: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.02977120317518711
    2. ' memo' → logprob: -3.529771089553833
    3. ' ' → logprob: -11.779770851135254
    4. '   ' → logprob: -12.404770851135254
    5. '     ' → logprob: -12.779770851135254
    6. 'mem' → logprob: -13.404770851135254
    7. '    ' → logprob: -14.404770851135254
    8. '         ' → logprob: -14.404770851135254
    9. '       ' → logprob: -14.529770851135254
    10. 'm' → logprob: -14.529770851135254

Token 523: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014493478462100029
    2. '):' → logprob: -4.264493465423584
    3. ',node' → logprob: -8.639493942260742
    4. '):
' → logprob: -9.139493942260742
    5. '   ' → logprob: -10.389493942260742
    6. ',n' → logprob: -12.514493942260742
    7. ')' → logprob: -13.264493942260742
    8. '):
' → logprob: -13.389493942260742
    9. ',p' → logprob: -14.389493942260742
    10. ',
' → logprob: -14.389493942260742

Token 524: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027686692774295807
    2. '    ' → logprob: -4.527686595916748
    3. ' if' → logprob: -4.902686595916748
    4. '[' → logprob: -5.527686595916748
    5. ' ' → logprob: -6.527686595916748
    6. '(' → logprob: -7.402686595916748
    7. '    
' → logprob: -7.527686595916748
    8. ' 
' → logprob: -7.902686595916748
    9. '     
' → logprob: -8.277687072753906
    10. '  ' → logprob: -8.402687072753906

Token 525: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18189996480941772
    2. 'key' → logprob: -2.1819000244140625
    3. 'if' (adapté à ' if') → logprob: -3.0569000244140625
    4. ' if' → logprob: -5.6819000244140625
    5. ' key' → logprob: -5.8069000244140625
    6. '    
' → logprob: -11.806900024414062
    7. '```' → logprob: -12.306900024414062
    8. 'indent' → logprob: -12.431900024414062
    9. '    ' → logprob: -12.556900024414062
    10. '	key' → logprob: -12.931900024414062

Token 526: ' node' (ID: 4596)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.2949650287628174
    2. ' (' → logprob: -2.0449650287628174
    3. 'node' → logprob: -2.6699650287628174
    4. ' node' → logprob: -2.9199650287628174
    5. '(' → logprob: -6.669964790344238
    6. ' ' → logprob: -7.169964790344238
    7. '   ' → logprob: -8.044964790344238
    8. 'memo' → logprob: -9.044964790344238
    9. '(n' → logprob: -9.169964790344238
    10. ' not' → logprob: -9.794964790344238

Token 527: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0015409269835799932
    2. 'is' → logprob: -6.5015411376953125
    3. '[' → logprob: -11.751541137695312
    4. ' not' → logprob: -11.751541137695312
    5. ' ' → logprob: -12.126541137695312
    6. '==' → logprob: -12.251541137695312
    7. ' ==' → logprob: -12.501541137695312
    8. ' in' → logprob: -13.376541137695312
    9. 'not' → logprob: -13.376541137695312
    10. '	is' → logprob: -14.251541137695312

Token 528: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.46768879890441895
    2. ' not' → logprob: -1.467688798904419
    3. 'None' → logprob: -1.967688798904419
    4. ' None' → logprob: -5.71768856048584
    5. '(None' → logprob: -11.21768856048584
    6. 'Not' → logprob: -12.21768856048584
    7. 'n' → logprob: -13.21768856048584
    8. '   ' → logprob: -13.59268856048584
    9. 'none' → logprob: -13.84268856048584
    10. '=None' → logprob: -14.21768856048584

Token 529: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.01996012032032013
    2. 'not' → logprob: -4.019959926605225
    3. ' None' → logprob: -6.519959926605225
    4. ' not' → logprob: -8.019960403442383
    5. '_None' → logprob: -12.769960403442383
    6. 'Not' → logprob: -13.644960403442383
    7. '(None' → logprob: -14.019960403442383
    8. 'none' → logprob: -14.769960403442383
    9. '=None' → logprob: -15.519960403442383
    10. '1' → logprob: -16.269960403442383

Token 530: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024702653288841248
    2. ':
' → logprob: -4.149702548980713
    3. '       ' → logprob: -5.649702548980713
    4. '   ' → logprob: -5.899702548980713
    5. ' and' → logprob: -6.899702548980713
    6. ' ==' → logprob: -7.774702548980713
    7. '==' → logprob: -8.274703025817871
    8. ',' → logprob: -8.774703025817871
    9. 'and' → logprob: -8.899703025817871
    10. '<|end|>' → logprob: -8.899703025817871

Token 531: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00017672323156148195
    2. '       ' → logprob: -8.875176429748535
    3. 'if' → logprob: -11.500176429748535
    4. ' if' → logprob: -11.500176429748535
    5. '   ' → logprob: -12.250176429748535
    6. '    
' → logprob: -12.625176429748535
    7. 'return' → logprob: -12.875176429748535
    8. '<|end|>' → logprob: -13.125176429748535
    9. '```' → logprob: -14.125176429748535
    10. '    ' → logprob: -14.750176429748535

Token 532: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003541621146723628
    2. '       ' → logprob: -5.753541469573975
    3. 'index' → logprob: -9.378541946411133
    4. '   ' → logprob: -9.503541946411133
    5. 'key' → logprob: -9.628541946411133
    6. ' return' → logprob: -9.753541946411133
    7. 'count' → logprob: -11.003541946411133
    8. 'leaf' → logprob: -11.128541946411133
    9. 'if' → logprob: -11.253541946411133
    10. 'idx' → logprob: -11.378541946411133

Token 533: ' {' (ID: 354)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6506475210189819
    2. 'memo' → logprob: -1.525647521018982
    3. 'le' → logprob: -1.650647521018982
    4. '{' → logprob: -3.2756476402282715
    5. 'len' → logprob: -3.9006476402282715
    6. '[' → logprob: -5.4006476402282715
    7. '(' → logprob: -6.7756476402282715
    8. ' memo' → logprob: -6.9006476402282715
    9. ' ' → logprob: -6.9006476402282715
    10. ' leaves' → logprob: -7.0256476402282715

Token 534: 'fro' (ID: 143163)
  Prédit: 'fro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fro' → logprob: -0.009414037689566612
    2. 'node' → logprob: -5.384414196014404
    3. 'tuple' → logprob: -5.759414196014404
    4. '1' → logprob: -7.134414196014404
    5. 'le' → logprob: -8.259413719177246
    6. '(' → logprob: -8.884413719177246
    7. ' fro' → logprob: -8.884413719177246
    8. 'leaf' → logprob: -9.634413719177246
    9. '(f' → logprob: -10.134413719177246
    10. '(node' → logprob: -10.634413719177246

Token 535: 'zens' (ID: 33107)
  Prédit: 'zens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zens' → logprob: -0.20208638906478882
    2. 'zes' → logprob: -1.7020864486694336
    3. 'ze' → logprob: -7.577086448669434
    4. 'sets' → logprob: -10.577086448669434
    5. 'zen' → logprob: -10.577086448669434
    6. 'z' → logprob: -10.827086448669434
    7. 'set' → logprob: -10.952086448669434
    8. 'es' → logprob: -11.327086448669434
    9. 'zet' → logprob: -11.577086448669434
    10. 'oz' → logprob: -11.702086448669434

Token 536: 'et' (ID: 292)
  Prédit: 'et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.0014922460541129112
    2. 'set' → logprob: -7.001492023468018
    3. '{' → logprob: -8.751492500305176
    4. 'e' → logprob: -9.751492500305176
    5. 't' → logprob: -10.126492500305176
    6. 'zens' → logprob: -10.126492500305176
    7. '(set' → logprob: -10.251492500305176
    8. 'um' → logprob: -10.376492500305176
    9. 's' → logprob: -10.751492500305176
    10. 'ze' → logprob: -10.751492500305176

Token 537: '(le' (ID: 135521)
  Prédit: '(le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(le' → logprob: -0.00026538874953985214
    2. 'le' → logprob: -8.250265121459961
    3. '(' → logprob: -13.750265121459961
    4. ' (' → logprob: -14.250265121459961
    5. '()' → logprob: -14.750265121459961
    6. '()}' → logprob: -15.000265121459961
    7. '}' → logprob: -15.125265121459961
    8. '():' → logprob: -15.250265121459961
    9. '((' → logprob: -15.625265121459961
    10. '({' → logprob: -15.875265121459961

Token 538: 'aves' (ID: 6808)
  Prédit: 'aves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aves' → logprob: -0.004676711279898882
    2. 'af' → logprob: -5.379676818847656
    3. 'a' → logprob: -10.504676818847656
    4. 'av' → logprob: -11.504676818847656
    5. '[' → logprob: -12.504676818847656
    6. '(' → logprob: -12.629676818847656
    7. 'afs' → logprob: -13.004676818847656
    8. 'ave' → logprob: -13.379676818847656
    9. '{' → logprob: -14.254676818847656
    10. 'aft' → logprob: -14.754676818847656

Token 539: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -0.0003013809327967465
    2. '_' → logprob: -9.125301361083984
    3. '_set' → logprob: -10.125301361083984
    4. 'ets' → logprob: -10.250301361083984
    5. '_s' → logprob: -11.250301361083984
    6. ')' → logprob: -11.250301361083984
    7. '[_' → logprob: -11.375301361083984
    8. ')_' → logprob: -11.500301361083984
    9. '[node' → logprob: -11.625301361083984
    10. 's' → logprob: -11.750301361083984

Token 540: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -8.895480277715251e-06
    2. ')[' → logprob: -13.000008583068848
    3. '(node' → logprob: -13.500008583068848
    4. '[
' → logprob: -13.625008583068848
    5. ')' → logprob: -13.750008583068848
    6. 'node' → logprob: -14.375008583068848
    7. '[' → logprob: -14.500008583068848
    8. '[(' → logprob: -15.125008583068848
    9. '
' → logprob: -15.500008583068848
    10. ' [' → logprob: -15.500008583068848

Token 541: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005978313274681568
    2. '[' → logprob: -7.750597953796387
    3. ' -' → logprob: -8.750597953796387
    4. '[node' → logprob: -13.500597953796387
    5. ']' → logprob: -13.875597953796387
    6. '   ' → logprob: -14.000597953796387
    7. '1' → logprob: -14.000597953796387
    8. ']-' → logprob: -14.250597953796387
    9. '])' → logprob: -14.625597953796387
    10. ' ' → logprob: -14.750597953796387

Token 542: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -12.000008583068848
    3. '2' → logprob: -15.125008583068848
    4. '```' → logprob: -15.250008583068848
    5. '[' → logprob: -15.437508583068848
    6. '0' → logprob: -15.562508583068848
    7. '   ' → logprob: -15.625008583068848
    8. 'node' → logprob: -15.812508583068848
    9. '{' → logprob: -16.18750762939453
    10. '-' → logprob: -16.25000762939453

Token 543: ']):' (ID: 60705)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.8969748616218567
    2. ']):' → logprob: -1.646974802017212
    3. '):' → logprob: -1.896974802017212
    4. '])' → logprob: -2.146974802017212
    5. ']}' → logprob: -2.521974802017212
    6. ')]' → logprob: -3.396974802017212
    7. ')' → logprob: -4.396975040435791
    8. ')}}' → logprob: -5.771975040435791
    9. ']:' → logprob: -6.521975040435791
    10. ']' → logprob: -6.521975040435791

Token 544: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2127087504486553e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -14.375021934509277
    4. '
' → logprob: -17.125022888183594
    5. '       ' → logprob: -17.750022888183594
    6. ' ' → logprob: -18.125022888183594
    7. 'True' → logprob: -18.250022888183594
    8. '{' → logprob: -18.750022888183594
    9. '[' → logprob: -18.750022888183594
    10. '    ' → logprob: -19.000022888183594

Token 545: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.01563696376979351
    2. '}
' → logprob: -4.515636920928955
    3. '   ' → logprob: -5.390636920928955
    4. '}

' → logprob: -11.140637397766113
    5. ',' → logprob: -13.390637397766113
    6. '
' → logprob: -13.640637397766113
    7. '}
' → logprob: -13.765637397766113
    8. '}\' → logprob: -15.140637397766113
    9. ' }' → logprob: -15.265637397766113
    10. ')' → logprob: -15.265637397766113

Token 546: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011032730340957642
    2. '    
' → logprob: -4.636032581329346
    3. '   ' → logprob: -7.636032581329346
    4. '  
' → logprob: -8.136033058166504
    5. '

' → logprob: -8.386033058166504
    6. '```' → logprob: -9.261033058166504
    7. '	
' → logprob: -9.636033058166504
    8. '   
' → logprob: -10.636033058166504
    9. ' 
' → logprob: -10.886033058166504
    10. '<|end|>' → logprob: -11.011033058166504

Token 547: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' (adapté à ' key') → logprob: -0.034663088619709015
    2. 'if' → logprob: -4.034663200378418
    3. 'left' → logprob: -4.159663200378418
    4. '   ' → logprob: -8.784663200378418
    5. 'res' → logprob: -8.909663200378418
    6. ' key' → logprob: -9.034663200378418
    7. 'l' → logprob: -9.159663200378418
    8. 'memo' → logprob: -9.784663200378418
    9. 'count' → logprob: -10.409663200378418
    10. 'counts' → logprob: -10.534663200378418

Token 548: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931514739990234
    2. ' =' → logprob: -0.6931514739990234
    3. '=(' → logprob: -12.943151473999023
    4. ' =(' → logprob: -13.943151473999023
    5. ',' → logprob: -14.693151473999023
    6. '=
' → logprob: -15.443151473999023
    7. '=node' → logprob: -15.568151473999023
    8. '(' → logprob: -16.693151473999023
    9. '=

' → logprob: -16.943151473999023
    10. ' (' → logprob: -17.068151473999023

Token 549: ' (' (ID: 350)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.003171294927597046
    2. ' (' → logprob: -6.003171443939209
    3. '(' → logprob: -8.37817096710205
    4. '(None' → logprob: -8.50317096710205
    5. '(n' → logprob: -9.25317096710205
    6. '((' → logprob: -9.50317096710205
    7. '(str' → logprob: -9.75317096710205
    8. '(id' → logprob: -11.12817096710205
    9. '(json' → logprob: -12.87817096710205
    10. '   ' → logprob: -12.87817096710205

Token 550: 'node' (ID: 7005)
  Prédit: 'node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0021676288451999426
    2. '(node' → logprob: -6.752167701721191
    3. 'id' → logprob: -8.002167701721191
    4. 'None' → logprob: -8.002167701721191
    5. ' node' → logprob: -8.127167701721191
    6. '(None' → logprob: -11.377167701721191
    7. '(' → logprob: -12.252167701721191
    8. ' None' → logprob: -12.377167701721191
    9. ' (' → logprob: -13.377167701721191
    10. 'fro' → logprob: -13.752167701721191

Token 551: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1271650642156601
    2. ',left' → logprob: -2.1271650791168213
    3. ',right' → logprob: -9.377164840698242
    4. ' ,' → logprob: -10.002164840698242
    5. 'left' → logprob: -10.377164840698242
    6. ',
' → logprob: -10.752164840698242
    7. ',node' → logprob: -11.252164840698242
    8. 'if' → logprob: -12.002164840698242
    9. '(left' → logprob: -12.127164840698242
    10. ' if' → logprob: -12.752164840698242

Token 552: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.20131614804267883
    2. 'id' → logprob: -1.8263161182403564
    3. '(left' → logprob: -4.3263163566589355
    4. 'tuple' → logprob: -5.7013163566589355
    5. '(id' → logprob: -5.9513163566589355
    6. '(' → logprob: -7.8263163566589355
    7. 'repr' → logprob: -8.076315879821777
    8. ' id' → logprob: -8.201315879821777
    9. 'fro' → logprob: -8.201315879821777
    10. ' left' → logprob: -8.576315879821777

Token 553: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.253090865968261e-06
    2. ' ,' → logprob: -12.250009536743164
    3. ',right' → logprob: -12.875009536743164
    4. ',left' → logprob: -14.375009536743164
    5. 'if' → logprob: -14.750009536743164
    6. ',key' → logprob: -15.250009536743164
    7. ' if' → logprob: -16.250009536743164
    8. ',
' → logprob: -16.500009536743164
    9. ',count' → logprob: -16.500009536743164
    10. ',node' → logprob: -16.625009536743164

Token 554: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.008618712425231934
    2. ' right' → logprob: -4.7586188316345215
    3. ' ' → logprob: -13.758618354797363
    4. '(right' → logprob: -13.883618354797363
    5. '   ' → logprob: -14.508618354797363
    6. 'tuple' → logprob: -15.383618354797363
    7. '           ' → logprob: -15.883618354797363
    8. '	right' → logprob: -15.883618354797363
    9. '       ' → logprob: -16.13361930847168
    10. 'ight' → logprob: -16.25861930847168

Token 555: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009802130982279778
    2. ')
' → logprob: -4.634802341461182
    3. ',' → logprob: -10.259801864624023
    4. '   ' → logprob: -12.259801864624023
    5. ')

' → logprob: -13.134801864624023
    6. ' )' → logprob: -13.384801864624023
    7. ')#' → logprob: -13.634801864624023
    8. ')
' → logprob: -14.134801864624023
    9. ',)' → logprob: -15.759801864624023
    10. ')`' → logprob: -16.259801864624023

Token 556: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08443200588226318
    2. 'if' → logprob: -3.2094321250915527
    3. ' if' → logprob: -3.2094321250915527
    4. ',' → logprob: -9.834431648254395
    5. '	if' → logprob: -9.834431648254395
    6. '
' → logprob: -10.209431648254395
    7. '    
' → logprob: -10.709431648254395
    8. ')' → logprob: -11.084431648254395
    9. '<|end|>' → logprob: -11.834431648254395
    10. '```' → logprob: -12.709431648254395

Token 557: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11666667461395264
    2. ' if' → logprob: -2.366666793823242
    3. '   ' → logprob: -4.116666793823242
    4. '	if' → logprob: -10.866666793823242
    5. '<|end|>' → logprob: -12.116666793823242
    6. '    
' → logprob: -14.741666793823242
    7. ',' → logprob: -14.866666793823242
    8. '
' → logprob: -15.491666793823242
    9. 'If' → logprob: -15.616666793823242
    10. ')' → logprob: -15.616666793823242

Token 558: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.005233763717114925
    2. ' key' → logprob: -5.2552337646484375
    3. '   ' → logprob: -17.880233764648438
    4. '_key' → logprob: -19.380233764648438
    5. '(key' → logprob: -19.755233764648438
    6. 'Key' → logprob: -20.005233764648438
    7. '	key' → logprob: -20.255233764648438
    8. ' ' → logprob: -20.505233764648438
    9. '
' → logprob: -21.505233764648438
    10. '[key' → logprob: -22.130233764648438

Token 559: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38689494132995605
    2. 'in' → logprob: -1.136894941329956
    3. ' not' → logprob: -12.261895179748535
    4. ' ' → logprob: -12.261895179748535
    5. '	in' → logprob: -12.761895179748535
    6. ')' → logprob: -13.136895179748535
    7. '[in' → logprob: -13.136895179748535
    8. 'In' → logprob: -13.261895179748535
    9. '<|end|>' → logprob: -13.261895179748535
    10. 'not' → logprob: -13.636895179748535

Token 560: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.0003357006062287837
    2. ' memo' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.875335693359375
    4. 'm' → logprob: -16.500335693359375
    5. 'mem' → logprob: -17.500335693359375
    6. '```' → logprob: -18.125335693359375
    7. ' ' → logprob: -19.125335693359375
    8. '`' → logprob: -19.375335693359375
    9. 'memory' → logprob: -19.375335693359375
    10. 'mutex' → logprob: -19.625335693359375

Token 561: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013000803999602795
    2. ':
' → logprob: -4.388000965118408
    3. ':return' → logprob: -7.888000965118408
    4. '):' → logprob: -10.38800048828125
    5. '):
' → logprob: -10.38800048828125
    6. '   ' → logprob: -10.63800048828125
    7. '<|end|>' → logprob: -11.63800048828125
    8. ' :' → logprob: -12.13800048828125
    9. '       ' → logprob: -12.51300048828125
    10. '():
' → logprob: -12.76300048828125

Token 562: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00822956021875143
    2. '   ' → logprob: -5.008229732513428
    3. 'return' → logprob: -6.508229732513428
    4. ' return' → logprob: -11.25822925567627
    5. ':return' → logprob: -12.63322925567627
    6. '{return' → logprob: -13.25822925567627
    7. '{
' → logprob: -13.63322925567627
    8. '	return' → logprob: -13.75822925567627
    9. '```' → logprob: -14.13322925567627
    10. '	' → logprob: -15.13322925567627

Token 563: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05370711535215378
    2. '   ' → logprob: -3.0537071228027344
    3. ' return' → logprob: -5.303707122802734
    4. '	return' → logprob: -9.053707122802734
    5. '       ' → logprob: -11.303707122802734
    6. ':return' → logprob: -13.678707122802734
    7. '{return' → logprob: -13.928707122802734
    8. '```' → logprob: -14.053707122802734
    9. '   ' → logprob: -14.928707122802734
    10. '
' → logprob: -14.928707122802734

Token 564: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.003178306156769395
    2. ' memo' → logprob: -5.753178119659424
    3. 'm' → logprob: -14.878178596496582
    4. 'mem' → logprob: -15.503178596496582
    5. '[m' → logprob: -16.628177642822266
    6. '.memo' → logprob: -18.003177642822266
    7. '<m' → logprob: -18.378177642822266
    8. '
' → logprob: -18.503177642822266
    9. '   ' → logprob: -18.753177642822266
    10. '	m' → logprob: -19.003177642822266

Token 565: '[key' (ID: 16401)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9283784627914429
    2. '<|end|>' → logprob: -1.5533784627914429
    3. '

' → logprob: -1.6783784627914429
    4. '   ' → logprob: -2.3033785820007324
    5. '    
' → logprob: -2.6783785820007324
    6. '  
' → logprob: -4.678378582000732
    7. '[' → logprob: -5.053378582000732
    8. '<|end|>' → logprob: -5.178378582000732
    9. '```' → logprob: -5.553378582000732
    10. 'def' → logprob: -6.303378582000732

Token 566: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02387237548828125
    2. ']

' → logprob: -3.7738723754882812
    3. ']
' → logprob: -8.273872375488281
    4. '   ' → logprob: -8.398872375488281
    5. ')' → logprob: -8.898872375488281
    6. ' ]' → logprob: -12.273872375488281
    7. '}' → logprob: -13.398872375488281
    8. ']

' → logprob: -14.023872375488281
    9. ')

' → logprob: -14.523872375488281
    10. ']


' → logprob: -14.648872375488281

Token 567: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8559542894363403
    2. '    
' → logprob: -1.1059542894363403
    3. '   ' → logprob: -1.4809542894363403
    4. '```' → logprob: -4.855954170227051
    5. ' 
' → logprob: -6.230954170227051
    6. '  
' → logprob: -6.605954170227051
    7. 'memo' → logprob: -6.605954170227051
    8. '   
' → logprob: -6.730954170227051
    9. '        
' → logprob: -7.230954170227051
    10. 'count' → logprob: -7.355954170227051

Token 568: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.00013393278641160578
    2. '   ' → logprob: -9.000133514404297
    3. ' left' → logprob: -12.250133514404297
    4. 'l' → logprob: -13.125133514404297
    5. 'count' → logprob: -13.500133514404297
    6. 'memo' → logprob: -14.000133514404297
    7. '    
' → logprob: -14.375133514404297
    8. 'counts' → logprob: -14.500133514404297
    9. '#' → logprob: -16.250133514404297
    10. 'result' → logprob: -16.375133514404297

Token 569: '_dp' (ID: 133252)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.7272675037384033
    2. '_' → logprob: -0.9772675037384033
    3. '_results' → logprob: -1.9772675037384033
    4. '_result' → logprob: -7.102267265319824
    5. '_count' → logprob: -7.352267265319824
    6. 'results' → logprob: -9.102267265319824
    7. '_res' → logprob: -9.352267265319824
    8. '_dict' → logprob: -9.602267265319824
    9. '_counter' → logprob: -9.852267265319824
    10. '_map' → logprob: -10.227267265319824

Token 570: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22550024092197418
    2. ' =' → logprob: -1.600500226020813
    3. ',' → logprob: -10.100500106811523
    4. 'results' → logprob: -10.850500106811523
    5. '   ' → logprob: -11.725500106811523
    6. 's' → logprob: -12.225500106811523
    7. '_results' → logprob: -12.225500106811523
    8. ' ' → logprob: -12.725500106811523
    9. 'result' → logprob: -13.225500106811523
    10. '_result' → logprob: -14.725500106811523

Token 571: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0005530327325686812
    2. ' count' → logprob: -7.500553131103516
    3. '   ' → logprob: -19.250553131103516
    4. 'counter' → logprob: -19.625553131103516
    5. '	count' → logprob: -20.125553131103516
    6. '(count' → logprob: -20.125553131103516
    7. ' ' → logprob: -20.750553131103516
    8. '{' → logprob: -21.125553131103516
    9. 'counts' → logprob: -22.000553131103516
    10. '{}' → logprob: -22.500553131103516

Token 572: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0028303153812885284
    2. 'ways' → logprob: -5.877830505371094
    3. 'Ways' → logprob: -11.127830505371094
    4. ' ways' → logprob: -12.752830505371094
    5. 'WAYS' → logprob: -13.877830505371094
    6. '```' → logprob: -13.877830505371094
    7. '(node' → logprob: -14.127830505371094
    8. '\' → logprob: -14.502830505371094
    9. 'left' → logprob: -14.502830505371094
    10. '(key' → logprob: -14.502830505371094

Token 573: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.004726783838123083
    2. '_' → logprob: -5.379726886749268
    3. 'count' → logprob: -10.00472640991211
    4. 'way' → logprob: -10.87972640991211
    5. 'Ways' → logprob: -11.00472640991211
    6. ' ways' → logprob: -11.62972640991211
    7. 'all' → logprob: -11.75472640991211
    8. 'WAYS' → logprob: -12.25472640991211
    9. '\' → logprob: -14.62972640991211
    10. '```' → logprob: -14.87972640991211

Token 574: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.14307847619056702
    2. '(node' → logprob: -2.018078565597534
    3. '(left' → logprob: -8.643078804016113
    4. 'node' → logprob: -9.143078804016113
    5. '*' → logprob: -9.393078804016113
    6. '(' → logprob: -11.018078804016113
    7. '(*(' → logprob: -12.518078804016113
    8. '   ' → logprob: -12.768078804016113
    9. 'left' → logprob: -13.393078804016113
    10. '=' → logprob: -13.393078804016113

Token 575: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -9.088346359931165e-07
    2. ' left' → logprob: -14.500000953674316
    3. '(left' → logprob: -15.625000953674316
    4. '   ' → logprob: -16.375
    5. '[left' → logprob: -17.75
    6. ' ' → logprob: -18.5
    7. 'list' → logprob: -18.625
    8. 'right' → logprob: -19.875
    9. '(*' → logprob: -20.25
    10. '	left' → logprob: -20.25

Token 576: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.682846287731081e-05
    2. ' ,' → logprob: -9.750066757202148
    3. 'le' → logprob: -11.875066757202148
    4. '   ' → logprob: -13.750066757202148
    5. '(le' → logprob: -15.750066757202148
    6. ')' → logprob: -16.25006675720215
    7. ',
' → logprob: -17.00006675720215
    8. '  ' → logprob: -18.12506675720215
    9. '),' → logprob: -18.25006675720215
    10. '           ' → logprob: -18.37506675720215

Token 577: ' leaves' (ID: 15657)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.005870013497769833
    2. ' leaves' → logprob: -5.2558698654174805
    3. 'left' → logprob: -7.8808698654174805
    4. '   ' → logprob: -8.50586986541748
    5. '    ' → logprob: -10.75586986541748
    6. 'leaf' → logprob: -11.75586986541748
    7. '     ' → logprob: -12.38086986541748
    8. '       ' → logprob: -12.50586986541748
    9. '  ' → logprob: -12.63086986541748
    10. '(le' → logprob: -13.00586986541748

Token 578: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -4.394135612528771e-05
    2. 'sets' → logprob: -10.250043869018555
    3. ',' → logprob: -12.125043869018555
    4. '_set' → logprob: -14.250043869018555
    5. 'Sets' → logprob: -14.750043869018555
    6. '   ' → logprob: -14.875043869018555
    7. '```' → logprob: -14.875043869018555
    8. '_lists' → logprob: -15.375043869018555
    9. '_keys' → logprob: -15.750043869018555
    10. '       ' → logprob: -16.000043869018555

Token 579: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014219328761100769
    2. ',m' → logprob: -4.264219284057617
    3. ' ,' → logprob: -10.139219284057617
    4. '   ' → logprob: -11.139219284057617
    5. ',right' → logprob: -14.639219284057617
    6. ',
' → logprob: -15.014219284057617
    7. ',left' → logprob: -15.514219284057617
    8. 'm' → logprob: -15.889219284057617
    9. 'memo' → logprob: -15.889219284057617
    10. ',y' → logprob: -16.514219284057617

Token 580: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.0009122979827225208
    2. ' memo' → logprob: -7.000912189483643
    3. ' ' → logprob: -14.8759126663208
    4. '   ' → logprob: -15.3759126663208
    5. 'mem' → logprob: -16.875911712646484
    6. 'm' → logprob: -17.000911712646484
    7. '  ' → logprob: -17.500911712646484
    8. 'memory' → logprob: -17.750911712646484
    9. '     ' → logprob: -17.875911712646484
    10. '    ' → logprob: -17.875911712646484

Token 581: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.000354769523255527
    2. ')' → logprob: -8.250354766845703
    3. '   ' → logprob: -9.375354766845703
    4. ')
' → logprob: -12.000354766845703
    5. ',' → logprob: -13.375354766845703
    6. ' )
' → logprob: -14.875354766845703
    7. ',)
' → logprob: -15.000354766845703
    8. ')

' → logprob: -15.750354766845703
    9. ' ' → logprob: -16.750354766845703
    10. '  ' → logprob: -17.625354766845703

Token 582: '   ' (ID: 271)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.009666013531386852
    2. ' right' → logprob: -4.7596659660339355
    3. '   ' → logprob: -6.8846659660339355
    4. '
' → logprob: -10.884666442871094
    5. '```' → logprob: -12.509666442871094
    6. ',right' → logprob: -13.384666442871094
    7. '[right' → logprob: -13.759666442871094
    8. 'Right' → logprob: -14.259666442871094
    9. '	right' → logprob: -14.384666442871094
    10. '.right' → logprob: -14.759666442871094

Token 583: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -9.615255839889869e-05
    2. ' right' → logprob: -9.250096321105957
    3. '   ' → logprob: -19.00009536743164
    4. 'Right' → logprob: -20.87509536743164
    5. '	right' → logprob: -21.25009536743164
    6. '[right' → logprob: -22.75009536743164
    7. '.right' → logprob: -23.12509536743164
    8. ',right' → logprob: -23.87509536743164
    9. '_right' → logprob: -24.12509536743164
    10. ' ' → logprob: -24.25009536743164

Token 584: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -9.088346359931165e-07
    2. 'dp' → logprob: -14.125000953674316
    3. '_' → logprob: -17.75
    4. '_dc' → logprob: -17.875
    5. '_DP' → logprob: -18.125
    6. '```' → logprob: -18.25
    7. '_counts' → logprob: -18.625
    8. '_ds' → logprob: -18.75
    9. '_dx' → logprob: -18.75
    10. '_dm' → logprob: -18.875

Token 585: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326186656951904
    2. ' =' → logprob: -1.313261866569519
    3. '   ' → logprob: -16.313261032104492
    4. ' ' → logprob: -17.938261032104492
    5. '=
' → logprob: -18.313261032104492
    6. '=count' → logprob: -18.688261032104492
    7. ',' → logprob: -19.188261032104492
    8. ')' → logprob: -19.813261032104492
    9. '={' → logprob: -20.188261032104492
    10. '=

' → logprob: -20.188261032104492

Token 586: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0005530327325686812
    2. ' count' → logprob: -7.500553131103516
    3. '(count' → logprob: -18.375553131103516
    4. '   ' → logprob: -19.875553131103516
    5. '	count' → logprob: -20.375553131103516
    6. ' ' → logprob: -21.250553131103516
    7. '.count' → logprob: -21.500553131103516
    8. '(*' → logprob: -21.625553131103516
    9. '_count' → logprob: -22.000553131103516
    10. '$count' → logprob: -22.125553131103516

Token 587: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00020330198458395898
    2. 'ways' → logprob: -8.750203132629395
    3. '*' → logprob: -10.625203132629395
    4. '(*' → logprob: -11.375203132629395
    5. 'Ways' → logprob: -12.750203132629395
    6. '*_' → logprob: -13.000203132629395
    7. '_way' → logprob: -14.375203132629395
    8. '```' → logprob: -14.750203132629395
    9. '\' → logprob: -14.875203132629395
    10. 'count' → logprob: -15.125203132629395

Token 588: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.4794161021709442
    2. 'count' → logprob: -0.9794161319732666
    3. 'Ways' → logprob: -5.3544158935546875
    4. 'right' → logprob: -7.9794158935546875
    5. '(count' → logprob: -9.729415893554688
    6. 'WAYS' → logprob: -9.854415893554688
    7. '(*' → logprob: -10.604415893554688
    8. 'rights' → logprob: -10.729415893554688
    9. '*' → logprob: -10.854415893554688
    10. '_' → logprob: -11.229415893554688

Token 589: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.04859134554862976
    2. '*' → logprob: -3.048591375350952
    3. '   ' → logprob: -14.798591613769531
    4. '*f' → logprob: -14.923591613769531
    5. '*v' → logprob: -14.923591613769531
    6. '
' → logprob: -15.048591613769531
    7. '*h' → logprob: -15.298591613769531
    8. '*r' → logprob: -15.298591613769531
    9. '*s' → logprob: -15.548591613769531
    10. '*k' → logprob: -15.673591613769531

Token 590: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -1.7432603272027336e-06
    2. ' right' → logprob: -13.375001907348633
    3. '*' → logprob: -16.000001907348633
    4. '(right' → logprob: -17.625001907348633
    5. '	right' → logprob: -17.875001907348633
    6. '[right' → logprob: -18.500001907348633
    7. ':right' → logprob: -19.250001907348633
    8. '_right' → logprob: -19.625001907348633
    9. '*r' → logprob: -19.875001907348633
    10. ',right' → logprob: -19.875001907348633

Token 591: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5332478142227046e-05
    2. 'le' → logprob: -11.875015258789062
    3. '(*' → logprob: -12.875015258789062
    4. ' ,' → logprob: -13.125015258789062
    5. ',*' → logprob: -13.375015258789062
    6. '   ' → logprob: -14.375015258789062
    7. '*' → logprob: -14.500015258789062
    8. ' ' → logprob: -15.250015258789062
    9. '*,' → logprob: -15.500015258789062
    10. '```' → logprob: -15.750015258789062

Token 592: ' leaves' (ID: 15657)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.001182607957161963
    2. ' leaves' → logprob: -6.751182556152344
    3. '(le' → logprob: -11.501182556152344
    4. 'left' → logprob: -13.626182556152344
    5. 'leaf' → logprob: -14.876182556152344
    6. '   ' → logprob: -15.001182556152344
    7. ' ' → logprob: -15.626182556152344
    8. '_le' → logprob: -16.001182556152344
    9. ' le' → logprob: -17.251182556152344
    10. 'sets' → logprob: -17.501182556152344

Token 593: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -0.03244127705693245
    2. ',' → logprob: -3.5324413776397705
    3. 'sets' → logprob: -6.282441139221191
    4. 'right' → logprob: -8.782441139221191
    5. ',right' → logprob: -8.782441139221191
    6. '   ' → logprob: -8.907441139221191
    7. '```' → logprob: -9.032441139221191
    8. '_set' → logprob: -9.532441139221191
    9. 'Sets' → logprob: -9.657441139221191
    10. 'left' → logprob: -10.907441139221191

Token 594: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0040956162847578526
    2. ',m' → logprob: -5.504095554351807
    3. '   ' → logprob: -11.754096031188965
    4. ' ,' → logprob: -12.129096031188965
    5. 'memo' → logprob: -12.879096031188965
    6. 'm' → logprob: -14.504096031188965
    7. ')' → logprob: -14.879096031188965
    8. '[m' → logprob: -15.879096031188965
    9. '```' → logprob: -16.25409507751465
    10. ',
' → logprob: -16.37909507751465

Token 595: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.00674142362549901
    2. ' memo' → logprob: -5.006741523742676
    3. 'le' → logprob: -11.131741523742676
    4. 'mem' → logprob: -11.881741523742676
    5. ' ' → logprob: -13.256741523742676
    6. 'm' → logprob: -14.006741523742676
    7. ' leaves' → logprob: -14.006741523742676
    8. '   ' → logprob: -14.631741523742676
    9. 'left' → logprob: -15.631741523742676
    10. 'leaf' → logprob: -16.13174057006836

Token 596: ')

' (ID: 1029)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09768623113632202
    2. ')' → logprob: -2.597686290740967
    3. ')
' → logprob: -4.597686290740967
    4. '
' → logprob: -4.847686290740967
    5. '```' → logprob: -8.597685813903809
    6. 'for' → logprob: -8.722685813903809
    7. ',' → logprob: -8.722685813903809
    8. '#' → logprob: -9.972685813903809
    9. '    
' → logprob: -10.347685813903809
    10. 'def' → logprob: -10.722685813903809

Token 597: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4372498393058777
    2. '   ' → logprob: -1.1872498989105225
    3. 'res' → logprob: -3.4372498989105225
    4. 'dp' → logprob: -4.187249660491943
    5. 'results' → logprob: -7.312249660491943
    6. '```' → logprob: -7.687249660491943
    7. 'combined' → logprob: -7.812249660491943
    8. 'counts' → logprob: -9.437250137329102
    9. 'ways' → logprob: -9.812250137329102
    10. 'count' → logprob: -10.062250137329102

Token 598: ' dp' (ID: 21546)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.539508044719696
    2. 'dp' (adapté à ' dp') → logprob: -1.2895081043243408
    3. 'res' → logprob: -2.039508104324341
    4. '   ' → logprob: -4.789507865905762
    5. 'from' → logprob: -6.289507865905762
    6. 'counter' → logprob: -7.289507865905762
    7. 'results' → logprob: -8.414507865905762
    8. 'combined' → logprob: -8.789507865905762
    9. 'memo' → logprob: -9.289507865905762
    10. 'counts' → logprob: -9.914507865905762

Token 599: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575985848903656
    2. ' =' → logprob: -0.825985848903656
    3. '={}' → logprob: -10.2009859085083
    4. '   ' → logprob: -11.9509859085083
    5. '={}
' → logprob: -13.3259859085083
    6. '={' → logprob: -14.4509859085083
    7. ' ' → logprob: -14.7009859085083
    8. '{}' → logprob: -16.075984954833984
    9. ' ={' → logprob: -16.950984954833984
    10. 's' → logprob: -18.075984954833984

Token 600: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -4.3464544432936236e-05
    2. '{}
' → logprob: -10.750043869018555
    3. '{}

' → logprob: -11.500043869018555
    4. 'dict' → logprob: -11.500043869018555
    5. 'default' → logprob: -13.500043869018555
    6. '{' → logprob: -15.375043869018555
    7. '{})' → logprob: -16.750043869018555
    8. 'collections' → logprob: -18.125043869018555
    9. '{}\' → logprob: -19.250043869018555
    10. '{},' → logprob: -20.250043869018555

Token 601: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17803335189819336
    2. 'for' → logprob: -1.9280333518981934
    3. ' for' → logprob: -4.053033351898193
    4. '	for' → logprob: -8.553033828735352
    5. '
' → logprob: -10.428033828735352
    6. '```' → logprob: -10.803033828735352
    7. '       ' → logprob: -10.928033828735352
    8. '    
' → logprob: -11.428033828735352
    9. ' ' → logprob: -12.428033828735352
    10. '           ' → logprob: -13.428033828735352

Token 602: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.314625690924004e-05
    2. '   ' → logprob: -10.000073432922363
    3. ' for' → logprob: -10.500073432922363
    4. '```' → logprob: -15.500073432922363
    5. '	for' → logprob: -20.375072479248047
    6. 'from' → logprob: -20.625072479248047
    7. '``' → logprob: -20.625072479248047
    8. '
' → logprob: -21.000072479248047
    9. ' ' → logprob: -21.500072479248047
    10. '       ' → logprob: -21.750072479248047

Token 603: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0005126410396769643
    2. ' l' → logprob: -7.625512599945068
    3. 'lf' → logprob: -11.125513076782227
    4. 'ls' → logprob: -12.750513076782227
    5. '   ' → logprob: -13.125513076782227
    6. '(l' → logprob: -13.125513076782227
    7. '	l' → logprob: -14.000513076782227
    8. 'lk' → logprob: -14.250513076782227
    9. 'll' → logprob: -15.625513076782227
    10. '_l' → logprob: -15.625513076782227

Token 604: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.2092548608779907
    2. 'key' → logprob: -1.4592548608779907
    3. '_dp' → logprob: -1.5842548608779907
    4. '_key' → logprob: -1.8342548608779907
    5. '_set' → logprob: -2.959254741668701
    6. 'dp' → logprob: -3.584254741668701
    7. 'in' → logprob: -5.334254741668701
    8. 'fro' → logprob: -5.334254741668701
    9. ' in' → logprob: -5.584254741668701
    10. 's' → logprob: -6.209254741668701

Token 605: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055424243211746216
    2. ',' → logprob: -3.430424213409424
    3. 'in' → logprob: -3.930424213409424
    4. 'fro' → logprob: -7.305424213409424
    5. ',f' → logprob: -7.930424213409424
    6. 'set' → logprob: -8.430424690246582
    7. 's' → logprob: -8.930424690246582
    8. '   ' → logprob: -9.180424690246582
    9. ',in' → logprob: -9.430424690246582
    10. '_in' → logprob: -9.555424690246582

Token 606: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.003043196862563491
    2. 'lc' → logprob: -6.253043174743652
    3. ' l' → logprob: -7.003043174743652
    4. 'ln' → logprob: -9.753043174743652
    5. 'lv' → logprob: -10.003043174743652
    6. 'lt' → logprob: -10.003043174743652
    7. '	l' → logprob: -10.878043174743652
    8. 'left' → logprob: -11.753043174743652
    9. 'lf' → logprob: -12.753043174743652
    10. 'll' → logprob: -12.878043174743652

Token 607: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.01834191009402275
    2. '_count' → logprob: -4.143342018127441
    3. 'cnt' → logprob: -6.393342018127441
    4. 'ways' → logprob: -8.643342018127441
    5. 'c' → logprob: -8.768342018127441
    6. '_cnt' → logprob: -9.018342018127441
    7. 'ct' → logprob: -9.018342018127441
    8. ' count' → logprob: -10.643342018127441
    9. '_ct' → logprob: -11.643342018127441
    10. 'freq' → logprob: -12.143342018127441

Token 608: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1269349306821823
    2. 'in' → logprob: -2.1269350051879883
    3. '	in' → logprob: -12.501935005187988
    4. ' ' → logprob: -13.876935005187988
    5. 'count' → logprob: -14.126935005187988
    6. '   ' → logprob: -14.751935005187988
    7. ',' → logprob: -15.501935005187988
    8. 'to' → logprob: -15.751935005187988
    9. '    ' → logprob: -16.376934051513672
    10. '       ' → logprob: -16.501934051513672

Token 609: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.20141363143920898
    2. ' left' → logprob: -1.701413631439209
    3. '[left' → logprob: -16.076414108276367
    4. '   ' → logprob: -16.201414108276367
    5. '_left' → logprob: -16.826414108276367
    6. '	left' → logprob: -17.451414108276367
    7. 'l' → logprob: -17.576414108276367
    8. '(left' → logprob: -18.076414108276367
    9. ':left' → logprob: -18.326414108276367
    10. ' ' → logprob: -18.701414108276367

Token 610: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.019362231716513634
    2. '_count' → logprob: -4.019362449645996
    3. '_counts' → logprob: -7.894362449645996
    4. '_' → logprob: -8.519362449645996
    5. ' in' → logprob: -9.144362449645996
    6. 'count' → logprob: -9.269362449645996
    7. '_items' → logprob: -9.269362449645996
    8. '_set' → logprob: -10.019362449645996
    9. 'dp' → logprob: -10.269362449645996
    10. ',' → logprob: -10.269362449645996

Token 611: '.items' (ID: 19607)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3051559031009674
    2. '.items' → logprob: -1.805155873298645
    3. ',' → logprob: -2.4301559925079346
    4. '   ' → logprob: -5.5551557540893555
    5. 'items' → logprob: -5.5551557540893555
    6. ' items' → logprob: -7.4301557540893555
    7. '_items' → logprob: -7.5551557540893555
    8. '.' → logprob: -7.9301557540893555
    9. ':' → logprob: -8.055155754089355
    10. '       ' → logprob: -8.180155754089355

Token 612: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.1603224277496338
    2. '():' → logprob: -1.9103224277496338
    3. '()' → logprob: -9.785322189331055
    4. '():
' → logprob: -10.160322189331055
    5. '():

' → logprob: -13.285322189331055
    6. '(),' → logprob: -14.035322189331055
    7. '()):
' → logprob: -15.410322189331055
    8. ':' → logprob: -15.535322189331055
    9. '(' → logprob: -16.160322189331055
    10. '   ' → logprob: -16.535322189331055

Token 613: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03574236482381821
    2. ' for' → logprob: -3.4107422828674316
    3. '   ' → logprob: -6.410742282867432
    4. 'for' → logprob: -7.785742282867432
    5. '```' → logprob: -10.66074275970459
    6. '           ' → logprob: -12.91074275970459
    7. '    ' → logprob: -13.16074275970459
    8. '     ' → logprob: -13.16074275970459
    9. '	for' → logprob: -13.66074275970459
    10. ' ' → logprob: -13.66074275970459

Token 614: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6506514549255371
    2. ' for' → logprob: -0.9006514549255371
    3. 'for' (adapté à ' for') → logprob: -2.650651454925537
    4. '   ' → logprob: -6.775651454925537
    5. '	for' → logprob: -8.525651931762695
    6. '```' → logprob: -10.650651931762695
    7. '           ' → logprob: -11.650651931762695
    8. '	' → logprob: -12.650651931762695
    9. '	   ' → logprob: -12.650651931762695
    10. ' ' → logprob: -13.650651931762695

Token 615: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.190178904333152e-05
    2. ' r' → logprob: -10.750031471252441
    3. '	r' → logprob: -12.250031471252441
    4. '       ' → logprob: -13.375031471252441
    5. '   ' → logprob: -13.750031471252441
    6. '_r' → logprob: -14.000031471252441
    7. ' ' → logprob: -14.375031471252441
    8. '(r' → logprob: -14.875031471252441
    9. '```' → logprob: -15.125031471252441
    10. '[r' → logprob: -15.375031471252441

Token 616: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0008860878297127783
    2. ',' → logprob: -7.375885963439941
    3. 's' → logprob: -8.500885963439941
    4. '_set' → logprob: -10.750885963439941
    5. 'et' → logprob: -11.250885963439941
    6. ',set' → logprob: -11.625885963439941
    7. 'r' → logprob: -12.500885963439941
    8. '_,' → logprob: -13.500885963439941
    9. '```' → logprob: -13.500885963439941
    10. 'for' → logprob: -14.125885963439941

Token 617: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.043078898685053e-05
    2. ' ,' → logprob: -10.125090599060059
    3. ',r' → logprob: -10.125090599060059
    4. '`,' → logprob: -13.500090599060059
    5. ',
' → logprob: -13.750090599060059
    6. ' in' → logprob: -14.000090599060059
    7. ',k' → logprob: -14.250090599060059
    8. ',l' → logprob: -14.375090599060059
    9. '   ' → logprob: -14.500090599060059
    10. ',x' → logprob: -14.625090599060059

Token 618: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11289077997207642
    2. ' r' → logprob: -2.2378907203674316
    3. 'rc' → logprob: -9.73789119720459
    4. 'rcode' → logprob: -12.86289119720459
    5. ' rc' → logprob: -13.61289119720459
    6. ' ' → logprob: -13.73789119720459
    7. 'rch' → logprob: -13.73789119720459
    8. '       ' → logprob: -13.86289119720459
    9. '   ' → logprob: -14.48789119720459
    10. '    ' → logprob: -15.11289119720459

Token 619: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -3.173704271830502e-06
    2. '_count' → logprob: -13.37500286102295
    3. ' count' → logprob: -13.62500286102295
    4. 'set' → logprob: -16.250003814697266
    5. 'cnt' → logprob: -16.625003814697266
    6. 'counts' → logprob: -16.875003814697266
    7. 'c' → logprob: -17.375003814697266
    8. 'cout' → logprob: -17.500003814697266
    9. ' in' → logprob: -17.625003814697266
    10. '$count' → logprob: -17.750003814697266

Token 620: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0047222767025232315
    2. 'in' → logprob: -5.3797221183776855
    3. ',' → logprob: -9.254722595214844
    4. '	in' → logprob: -12.879722595214844
    5. '       ' → logprob: -14.004722595214844
    6. ' ' → logprob: -14.254722595214844
    7. '   ' → logprob: -14.629722595214844
    8. 'In' → logprob: -15.004722595214844
    9. '<|end|>' → logprob: -15.754722595214844
    10. 's' → logprob: -15.879722595214844

Token 621: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.16022828221321106
    2. ' right' → logprob: -1.9102282524108887
    3. '[right' → logprob: -12.535228729248047
    4. '(right' → logprob: -15.160228729248047
    5. '	right' → logprob: -16.160228729248047
    6. 'Right' → logprob: -16.660228729248047
    7. '_right' → logprob: -17.285228729248047
    8. ':right' → logprob: -17.410228729248047
    9. ',right' → logprob: -17.785228729248047
    10. '.right' → logprob: -17.785228729248047

Token 622: '_dp' (ID: 133252)
  Prédit: '_dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.1663072109222412
    2. '.items' → logprob: -1.4163072109222412
    3. 'items' → logprob: -1.5413072109222412
    4. 'sets' → logprob: -2.041307210922241
    5. 'set' → logprob: -2.666307210922241
    6. 'dp' → logprob: -4.04130744934082
    7. 'count' → logprob: -5.16630744934082
    8. 'ways' → logprob: -5.79130744934082
    9. '_set' → logprob: -6.54130744934082
    10. 'counts' → logprob: -6.66630744934082

Token 623: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.004130168817937374
    2. 'items' → logprob: -5.5041303634643555
    3. '.' → logprob: -10.129130363464355
    4. ' items' → logprob: -12.004130363464355
    5. ' .' → logprob: -12.879130363464355
    6. '.iteritems' → logprob: -13.879130363464355
    7. '	items' → logprob: -14.004130363464355
    8. '_items' → logprob: -14.254130363464355
    9. '```' → logprob: -15.629130363464355
    10. '   ' → logprob: -16.12912940979004

Token 624: '():
' (ID: 8595)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2921038269996643
    2. ':' → logprob: -1.5421037673950195
    3. '           ' → logprob: -3.4171037673950195
    4. '():
' → logprob: -5.5421037673950195
    5. ',' → logprob: -6.5421037673950195
    6. '):
' → logprob: -7.6671037673950195
    7. '       ' → logprob: -7.9171037673950195
    8. '               ' → logprob: -9.66710376739502
    9. '<|end|>' → logprob: -9.91710376739502
    10. '<|end|>' → logprob: -10.04210376739502

Token 625: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05592508986592293
    2. '       ' → logprob: -3.555925130844116
    3. '```' → logprob: -3.930925130844116
    4. '               ' → logprob: -5.305924892425537
    5. ' for' → logprob: -6.930924892425537
    6. 'for' → logprob: -8.930925369262695
    7. '   ' → logprob: -10.180925369262695
    8. '                   ' → logprob: -10.430925369262695
    9. '``' → logprob: -10.680925369262695
    10. '<|end|>' → logprob: -11.805925369262695

Token 626: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004903789144009352
    2. 'a' → logprob: -6.129903793334961
    3. '#' (adapté à ' #') → logprob: -6.629903793334961
    4. 'key' → logprob: -8.004903793334961
    5. 'for' → logprob: -8.254903793334961
    6. 's' → logprob: -8.504903793334961
    7. '```' → logprob: -8.504903793334961
    8. '{
' → logprob: -9.754903793334961
    9. 'combined' → logprob: -9.879903793334961
    10. '               ' → logprob: -9.879903793334961

Token 627: ' A' (ID: 355)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10882128030061722
    2. '           ' → logprob: -3.608821392059326
    3. 'a' → logprob: -4.233821392059326
    4. '#' → logprob: -4.233821392059326
    5. 'keys' → logprob: -4.858821392059326
    6. 'ops' → logprob: -4.858821392059326
    7. 's' → logprob: -4.858821392059326
    8. 'op' → logprob: -5.358821392059326
    9. 'key' → logprob: -5.358821392059326
    10. 'inter' → logprob: -5.983821392059326

Token 628: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4448067843914032
    2. '_key' → logprob: -1.4448068141937256
    3. '_set' → logprob: -2.3198068141937256
    4. 'key' → logprob: -4.6948065757751465
    5. '           ' → logprob: -5.1948065757751465
    6. '=' → logprob: -6.1948065757751465
    7. '=set' → logprob: -6.1948065757751465
    8. 'set' → logprob: -6.4448065757751465
    9. 's' → logprob: -7.1948065757751465
    10. ':' → logprob: -7.3198065757751465

Token 629: ' intersection' (ID: 42002)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.6070043444633484
    2. 'inter' → logprob: -2.232004404067993
    3. 'union' → logprob: -3.232004404067993
    4. 'subset' → logprob: -3.232004404067993
    5. 'new' → logprob: -3.482004404067993
    6. 'res' → logprob: -3.482004404067993
    7. 'intersection' → logprob: -3.482004404067993
    8. 's' → logprob: -3.482004404067993
    9. ' key' → logprob: -3.607004404067993
    10. 'result' → logprob: -3.607004404067993

Token 630: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00316489115357399
    2. '{
' → logprob: -7.253164768218994
    3. 'key' → logprob: -7.503164768218994
    4. 'result' → logprob: -7.628164768218994
    5. '```' → logprob: -7.628164768218994
    6. 's' → logprob: -8.128165245056152
    7. '
' → logprob: -9.253165245056152
    8. '{' → logprob: -9.378165245056152
    9. ',' → logprob: -9.503165245056152
    10. ' key' → logprob: -10.128165245056152

Token 631: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017226649215444922
    2. 'key' → logprob: -7.001722812652588
    3. 's' → logprob: -8.62672233581543
    4. '```' → logprob: -8.87672233581543
    5. ' key' → logprob: -9.12672233581543
    6. 'result' → logprob: -9.25172233581543
    7. '
' → logprob: -9.37672233581543
    8. '{
' → logprob: -10.12672233581543
    9. '               ' → logprob: -10.62672233581543
    10. 'a' → logprob: -10.62672233581543

Token 632: ' a' (ID: 261)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.19163890182971954
    2. '           ' → logprob: -3.066638946533203
    3. 'new' → logprob: -3.816638946533203
    4. 's' → logprob: -4.066638946533203
    5. 'res' → logprob: -4.191638946533203
    6. 'a' (adapté à ' a') → logprob: -4.191638946533203
    7. ' key' → logprob: -4.441638946533203
    8. 'result' → logprob: -4.566638946533203
    9. 'subset' → logprob: -4.566638946533203
    10. 'inter' → logprob: -4.941638946533203

Token 633: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18060556054115295
    2. '=' → logprob: -1.8056055307388306
    3. 'key' → logprob: -8.4306058883667
    4. '=f' → logprob: -8.8056058883667
    5. 'set' → logprob: -8.8056058883667
    6. '_key' → logprob: -9.3056058883667
    7. 'fro' → logprob: -9.5556058883667
    8. 's' → logprob: -9.8056058883667
    9. '_set' → logprob: -10.1806058883667
    10. '           ' → logprob: -10.5556058883667

Token 634: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.14303745329380035
    2. 'fro' → logprob: -2.0180375576019287
    3. ' l' → logprob: -8.768037796020508
    4. ' fro' → logprob: -9.393037796020508
    5. '   ' → logprob: -10.268037796020508
    6. '           ' → logprob: -10.893037796020508
    7. '       ' → logprob: -10.893037796020508
    8. 'f' → logprob: -11.143037796020508
    9. '	l' → logprob: -12.268037796020508
    10. 'lf' → logprob: -12.393037796020508

Token 635: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -2.935296834039036e-06
    2. 'l' → logprob: -14.62500286102295
    3. '   ' → logprob: -14.87500286102295
    4. 's' → logprob: -14.87500286102295
    5. '(l' → logprob: -15.12500286102295
    6. 'fro' → logprob: -15.12500286102295
    7. 'sets' → logprob: -15.12500286102295
    8. '(set' → logprob: -15.50000286102295
    9. '_set' → logprob: -16.000003814697266
    10. '       ' → logprob: -16.000003814697266

Token 636: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.6968114972114563
    2. ' &' → logprob: -0.6968114972114563
    3. '&a' → logprob: -6.821811676025391
    4. '.inter' → logprob: -7.196811676025391
    5. '&amp' → logprob: -7.196811676025391
    6. '&p' → logprob: -8.19681167602539
    7. '&r' → logprob: -8.32181167602539
    8. '&nbsp' → logprob: -8.94681167602539
    9. '&s' → logprob: -9.19681167602539
    10. '&i' → logprob: -9.32181167602539

Token 637: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0004307884373702109
    2. ' r' → logprob: -7.750430583953857
    3. 'fro' → logprob: -17.625431060791016
    4. ' ' → logprob: -20.375431060791016
    5. '	r' → logprob: -21.000431060791016
    6. '   ' → logprob: -21.000431060791016
    7. ' fro' → logprob: -21.625431060791016
    8. '           ' → logprob: -21.875431060791016
    9. 'f' → logprob: -22.125431060791016
    10. 'b' → logprob: -22.875431060791016

Token 638: 'set' (ID: 977)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1605696678161621
    2. 'set' → logprob: -1.910569667816162
    3. ' r' → logprob: -8.53557014465332
    4. 'sets' → logprob: -9.91057014465332
    5. 's' → logprob: -10.41057014465332
    6. 'f' → logprob: -10.66057014465332
    7. '   ' → logprob: -11.16057014465332
    8. '```' → logprob: -11.66057014465332
    9. 'erset' → logprob: -11.91057014465332
    10. 'fro' → logprob: -12.66057014465332

Token 639: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006085919216275215
    2. '
' → logprob: -6.0060858726501465
    3. '<|end|>' → logprob: -6.3810858726501465
    4. '            
' → logprob: -7.3810858726501465
    5. ',' → logprob: -7.6310858726501465
    6. ',
' → logprob: -8.506086349487305
    7. '		' → logprob: -9.256086349487305
    8. '<|end|>' → logprob: -9.381086349487305
    9. '```' → logprob: -9.631086349487305
    10. '               ' → logprob: -9.631086349487305

Token 640: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001921014511026442
    2. '
' → logprob: -6.6269211769104
    3. 'count' → logprob: -8.751920700073242
    4. ',' → logprob: -9.001920700073242
    5. '<|end|>' → logprob: -9.626920700073242
    6. '            
' → logprob: -10.126920700073242
    7. '       ' → logprob: -10.126920700073242
    8. 'token' → logprob: -10.251920700073242
    9. '```' → logprob: -10.376920700073242
    10. '               ' → logprob: -10.876920700073242

Token 641: ' dp' (ID: 21546)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10910969972610474
    2. 'for' → logprob: -3.23410964012146
    3. ' for' → logprob: -3.60910964012146
    4. 'token' → logprob: -4.359109878540039
    5. 'count' → logprob: -4.609109878540039
    6. '<|end|>' → logprob: -5.609109878540039
    7. '{
' → logprob: -6.484109878540039
    8. 'key' → logprob: -6.984109878540039
    9. '{' → logprob: -6.984109878540039
    10. '```' → logprob: -7.109109878540039

Token 642: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.012981853447854519
    2. '[f' → logprob: -4.38798189163208
    3. '[(' → logprob: -8.387981414794922
    4. '[' → logprob: -9.137981414794922
    5. '           ' → logprob: -9.512981414794922
    6. '.setdefault' → logprob: -10.512981414794922
    7. 'a' → logprob: -10.887981414794922
    8. '[
' → logprob: -12.512981414794922
    9. ' [' → logprob: -13.137981414794922
    10. '_key' → logprob: -13.262981414794922

Token 643: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0699872374534607
    2. ']+=' → logprob: -3.0699872970581055
    3. ']=' → logprob: -4.0699872970581055
    4. '=' → logprob: -5.5699872970581055
    5. '+=' → logprob: -8.694987297058105
    6. ' ]' → logprob: -10.569987297058105
    7. '           ' → logprob: -11.069987297058105
    8. ' =' → logprob: -11.069987297058105
    9. ']=(' → logprob: -11.194987297058105
    10. ']+' → logprob: -11.444987297058105

Token 644: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00010521204239921644
    2. ' =' → logprob: -9.250104904174805
    3. '+=' → logprob: -11.625104904174805
    4. 'dp' → logprob: -17.250104904174805
    5. '           ' → logprob: -17.750104904174805
    6. '[' → logprob: -17.875104904174805
    7. '=
' → logprob: -18.500104904174805
    8. ']=' → logprob: -18.500104904174805
    9. '=

' → logprob: -19.500104904174805
    10. ' +=' → logprob: -19.625104904174805

Token 645: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -9.13388703338569e-06
    2. ' dp' → logprob: -11.625009536743164
    3. '	dp' → logprob: -16.375009536743164
    4. '(dp' → logprob: -17.375009536743164
    5. 'd' → logprob: -17.750009536743164
    6. '_dp' → logprob: -18.875009536743164
    7. '   ' → logprob: -19.250009536743164
    8. '```' → logprob: -19.750009536743164
    9. 'dpi' → logprob: -20.250009536743164
    10. ' ' → logprob: -21.000009536743164

Token 646: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -3.531315314830863e-06
    2. 'get' → logprob: -13.250003814697266
    3. '.' → logprob: -13.750003814697266
    4. 'a' → logprob: -14.875003814697266
    5. ' .' → logprob: -16.250003814697266
    6. '.setdefault' → logprob: -16.500003814697266
    7. 'dp' → logprob: -17.125003814697266
    8. '[a' → logprob: -18.750003814697266
    9. '```' → logprob: -20.000003814697266
    10. '   ' → logprob: -21.125003814697266

Token 647: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.002476016292348504
    2. 'a' → logprob: -6.002476215362549
    3. '[a' → logprob: -16.37747573852539
    4. '```' → logprob: -16.87747573852539
    5. ' a' → logprob: -17.00247573852539
    6. '(' → logprob: -17.50247573852539
    7. ')a' → logprob: -19.00247573852539
    8. '(
' → logprob: -19.25247573852539
    9. ' (' → logprob: -19.25247573852539
    10. '/a' → logprob: -19.50247573852539

Token 648: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005424311850219965
    2. ',a' → logprob: -5.255424499511719
    3. 'a' → logprob: -8.755424499511719
    4. ' ,' → logprob: -11.005424499511719
    5. ')' → logprob: -12.130424499511719
    6. ',None' → logprob: -12.505424499511719
    7. '(a' → logprob: -12.755424499511719
    8. '0' → logprob: -14.130424499511719
    9. ')a' → logprob: -14.130424499511719
    10. ''a' → logprob: -14.505424499511719

Token 649: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. ')' → logprob: -22.000001907348633
    4. '۰' → logprob: -22.625001907348633
    5. '   ' → logprob: -22.750001907348633
    6. '           ' → logprob: -23.250001907348633
    7. '```' → logprob: -23.750001907348633
    8. ' ' → logprob: -24.625001907348633
    9. '  ' → logprob: -25.125001907348633
    10. '       ' → logprob: -25.500001907348633

Token 650: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002244227332994342
    2. ')+' → logprob: -6.127243995666504
    3. '+' → logprob: -10.002243995666504
    4. ' )' → logprob: -11.752243995666504
    5. ']' → logprob: -12.752243995666504
    6. '+)' → logprob: -14.377243995666504
    7. ']+' → logprob: -14.377243995666504
    8. '```' → logprob: -14.627243995666504
    9. ' +' → logprob: -14.877243995666504
    10. '}' → logprob: -15.127243995666504

Token 651: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04860689491033554
    2. ' +' → logprob: -3.0486068725585938
    3. '+l' → logprob: -11.173606872558594
    4. '+d' → logprob: -12.923606872558594
    5. '+a' → logprob: -13.798606872558594
    6. '+x' → logprob: -14.798606872558594
    7. '+p' → logprob: -15.173606872558594
    8. '+=' → logprob: -15.298606872558594
    9. '+c' → logprob: -15.423606872558594
    10. '+
' → logprob: -16.173606872558594

Token 652: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -5.371605948312208e-05
    2. ' l' → logprob: -9.875053405761719
    3. '   ' → logprob: -13.500053405761719
    4. 'lc' → logprob: -15.000053405761719
    5. '           ' → logprob: -16.00005340576172
    6. '       ' → logprob: -16.62505340576172
    7. ' ' → logprob: -16.62505340576172
    8. '	l' → logprob: -17.25005340576172
    9. '    ' → logprob: -17.62505340576172
    10. '     ' → logprob: -17.62505340576172

Token 653: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: 0.0
    2. '_count' → logprob: -17.125
    3. ' count' → logprob: -18.5
    4. 'set' → logprob: -18.625
    5. '[count' → logprob: -18.75
    6. '   ' → logprob: -19.0
    7. 'l' → logprob: -19.5
    8. '```' → logprob: -19.75
    9. 'ount' → logprob: -20.0
    10. ' ' → logprob: -20.5

Token 654: '*' (ID: 9)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.14293630421161652
    2. '*' → logprob: -2.0179362297058105
    3. '           ' → logprob: -9.642936706542969
    4. '+' → logprob: -9.767936706542969
    5. '*r' → logprob: -9.892936706542969
    6. ' +' → logprob: -10.767936706542969
    7. '       ' → logprob: -11.392936706542969
    8. '*l' → logprob: -11.642936706542969
    9. '*w' → logprob: -11.767936706542969
    10. '*(' → logprob: -12.392936706542969

Token 655: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -1.9361264946837764e-07
    2. ' rc' → logprob: -16.875
    3. 'rcode' → logprob: -16.875
    4. ' r' → logprob: -17.0
    5. '	rc' → logprob: -17.375
    6. '_rc' → logprob: -18.625
    7. '(rc' → logprob: -19.25
    8. 'r' → logprob: -19.375
    9. '.rc' → logprob: -22.25
    10. '   ' → logprob: -22.75

Token 656: 'ount' (ID: 807)
  Prédit: 'ount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.00012725738633889705
    2. 'count' → logprob: -9.000126838684082
    3. 'unt' → logprob: -13.000126838684082
    4. '   ' → logprob: -15.250126838684082
    5. 'ont' → logprob: -15.625126838684082
    6. ' ' → logprob: -15.625126838684082
    7. 'nt' → logprob: -15.625126838684082
    8. 'o' → logprob: -15.625126838684082
    9. 'out' → logprob: -16.2501277923584
    10. 'Count' → logprob: -17.0001277923584

Token 657: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003701616544276476
    2. '
' → logprob: -5.628701686859131
    3. '            
' → logprob: -10.253701210021973
    4. '       ' → logprob: -10.628701210021973
    5. '          ' → logprob: -11.378701210021973
    6. '		' → logprob: -11.753701210021973
    7. '   ' → logprob: -12.128701210021973
    8. '
' → logprob: -12.628701210021973
    9. '               ' → logprob: -12.878701210021973
    10. '  
' → logprob: -13.253701210021973

Token 658: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004718364682048559
    2. '
' → logprob: -5.87971830368042
    3. '       ' → logprob: -7.37971830368042
    4. '            
' → logprob: -7.87971830368042
    5. '          ' → logprob: -8.504718780517578
    6. '```' → logprob: -8.754718780517578
    7. '   ' → logprob: -9.129718780517578
    8. '  
' → logprob: -9.254718780517578
    9. ' ' → logprob: -9.754718780517578
    10. '     ' → logprob: -10.629718780517578

Token 659: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027848199009895325
    2. '#' (adapté à ' #') → logprob: -4.402848243713379
    3. '
' → logprob: -4.402848243713379
    4. '       ' → logprob: -7.027848243713379
    5. ' #' → logprob: -7.027848243713379
    6. '   ' → logprob: -7.527848243713379
    7. ' ' → logprob: -7.902848243713379
    8. '          ' → logprob: -9.902848243713379
    9. '  ' → logprob: -10.027848243713379
    10. 'o' → logprob: -10.402848243713379

Token 660: ' O' (ID: 532)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5177600979804993
    2. 'o' → logprob: -1.3927600383758545
    3. '           ' → logprob: -1.8927600383758545
    4. ' #' → logprob: -5.892760276794434
    5. 'O' → logprob: -6.767760276794434
    6. '   ' → logprob: -7.767760276794434
    7. ' o' → logprob: -7.892760276794434
    8. '       ' → logprob: -8.142760276794434
    9. ' ' → logprob: -10.767760276794434
    10. ' O' → logprob: -10.767760276794434

Token 661: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17041173577308655
    2. ' =' → logprob: -1.9204117059707642
    3. '=' → logprob: -4.920411586761475
    4. ' :' → logprob: -6.170411586761475
    5. ' union' → logprob: -9.295412063598633
    6. '[o' → logprob: -9.545412063598633
    7. 'o' → logprob: -9.670412063598633
    8. '[a' → logprob: -9.670412063598633
    9. 'union' → logprob: -10.045412063598633
    10. '   ' → logprob: -10.045412063598633

Token 662: ' union' (ID: 22208)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.0297479629516602
    2. '(l' → logprob: -1.0297479629516602
    3. 'l' → logprob: -2.40474796295166
    4. ' (' → logprob: -3.02974796295166
    5. 'union' → logprob: -3.40474796295166
    6. 'dp' → logprob: -3.52974796295166
    7. ' l' → logprob: -3.77974796295166
    8. 'a' → logprob: -4.27974796295166
    9. '(o' → logprob: -4.52974796295166
    10. '(a' → logprob: -4.65474796295166

Token 663: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005712636047974229
    2. '
' → logprob: -7.875571250915527
    3. '```' → logprob: -9.125571250915527
    4. '       ' → logprob: -10.625571250915527
    5. '          ' → logprob: -10.875571250915527
    6. '   ' → logprob: -11.500571250915527
    7. '               ' → logprob: -12.000571250915527
    8. ',' → logprob: -12.500571250915527
    9. 'a' → logprob: -12.625571250915527
    10. '            
' → logprob: -13.125571250915527

Token 664: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001191298826597631
    2. '
' → logprob: -7.626191139221191
    3. 'dp' → logprob: -7.626191139221191
    4. '```' → logprob: -9.126191139221191
    5. '   ' → logprob: -10.251191139221191
    6. '          ' → logprob: -10.626191139221191
    7. '       ' → logprob: -11.001191139221191
    8. ' dp' → logprob: -12.376191139221191
    9. '         ' → logprob: -12.876191139221191
    10. '(dp' → logprob: -12.876191139221191

Token 665: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' (adapté à ' o') → logprob: -0.5133314728736877
    2. ' o' → logprob: -1.263331413269043
    3. '           ' → logprob: -2.138331413269043
    4. '   ' → logprob: -7.763331413269043
    5. '```' → logprob: -8.388331413269043
    6. '	o' → logprob: -9.513331413269043
    7. '[o' → logprob: -9.763331413269043
    8. ' ' → logprob: -10.263331413269043
    9. '{o' → logprob: -10.513331413269043
    10. '(o' → logprob: -10.638331413269043

Token 666: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132626414299011
    2. ' =' → logprob: -1.313262701034546
    3. '=o' → logprob: -15.188262939453125
    4. ']' → logprob: -15.563262939453125
    5. 'dp' → logprob: -15.813262939453125
    6. ')' → logprob: -16.063262939453125
    7. '   ' → logprob: -16.313262939453125
    8. '=
' → logprob: -16.813262939453125
    9. '           ' → logprob: -16.938262939453125
    10. ' ' → logprob: -17.188262939453125

Token 667: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.005235887598246336
    2. ' l' → logprob: -5.25523567199707
    3. 'fro' → logprob: -14.00523567199707
    4. '   ' → logprob: -14.88023567199707
    5. '           ' → logprob: -15.50523567199707
    6. '	l' → logprob: -15.63023567199707
    7. '(l' → logprob: -16.00523567199707
    8. 'a' → logprob: -16.50523567199707
    9. '    ' → logprob: -16.88023567199707
    10. '       ' → logprob: -17.00523567199707

Token 668: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -3.2378600735682994e-05
    2. 's' → logprob: -10.875032424926758
    3. 'get' → logprob: -12.000032424926758
    4. '   ' → logprob: -13.500032424926758
    5. '[' → logprob: -13.750032424926758
    6. '[a' → logprob: -13.750032424926758
    7. 'a' → logprob: -14.750032424926758
    8. '.set' → logprob: -14.875032424926758
    9. 'sets' → logprob: -15.125032424926758
    10. '```' → logprob: -15.250032424926758

Token 669: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0024762547109276056
    2. ' |' → logprob: -6.002476215362549
    3. '|get' → logprob: -14.752476692199707
    4. '.union' → logprob: -15.377476692199707
    5. '|
' → logprob: -17.62747573852539
    6. 'union' → logprob: -18.12747573852539
    7. '|'' → logprob: -19.62747573852539
    8. 'a' → logprob: -19.75247573852539
    9. '|(' → logprob: -19.75247573852539
    10. ' ' → logprob: -19.75247573852539

Token 670: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0001238004770129919
    2. ' r' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.625123977661133
    4. '(r' → logprob: -16.625123977661133
    5. '           ' → logprob: -17.375123977661133
    6. ' ' → logprob: -17.625123977661133
    7. '	r' → logprob: -17.750123977661133
    8. '       ' → logprob: -18.375123977661133
    9. '[r' → logprob: -18.375123977661133
    10. '```' → logprob: -18.875123977661133

Token 671: 'set' (ID: 977)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001375591498799622
    2. 'set' → logprob: -6.876375675201416
    3. ' r' → logprob: -8.126375198364258
    4. '[r' → logprob: -10.501375198364258
    5. '(r' → logprob: -11.751375198364258
    6. '   ' → logprob: -13.251375198364258
    7. 's' → logprob: -13.501375198364258
    8. 'erset' → logprob: -13.876375198364258
    9. '	r' → logprob: -14.251375198364258
    10. 'et' → logprob: -14.251375198364258

Token 672: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00032390307751484215
    2. '```' → logprob: -9.125324249267578
    3. '          ' → logprob: -9.500324249267578
    4. 'dp' → logprob: -9.750324249267578
    5. '=' → logprob: -10.500324249267578
    6. '       ' → logprob: -10.875324249267578
    7. '(dp' → logprob: -12.125324249267578
    8. ' =' → logprob: -12.125324249267578
    9. '         ' → logprob: -12.250324249267578
    10. '               ' → logprob: -12.625324249267578

Token 673: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006997507996857166
    2. 'dp' → logprob: -5.006997585296631
    3. '```' → logprob: -8.506997108459473
    4. ' dp' → logprob: -10.006997108459473
    5. '(dp' → logprob: -11.506997108459473
    6. '          ' → logprob: -11.631997108459473
    7. '
' → logprob: -11.756997108459473
    8. '	dp' → logprob: -13.006997108459473
    9. '_dp' → logprob: -13.131997108459473
    10. '		' → logprob: -14.006997108459473

Token 674: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.003889030311256647
    2. '           ' → logprob: -5.753889083862305
    3. ' dp' → logprob: -7.253889083862305
    4. '```' → logprob: -13.253889083862305
    5. '
' → logprob: -14.003889083862305
    6. '	dp' → logprob: -15.128889083862305
    7. '(dp' → logprob: -15.503889083862305
    8. '               ' → logprob: -15.753889083862305
    9. '_dp' → logprob: -15.878889083862305
    10. '``' → logprob: -16.128889083862305

Token 675: '[o' (ID: 112563)
  Prédit: '[o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[o' → logprob: -2.816093228830141e-06
    2. 'o' → logprob: -12.87500286102295
    3. '=o' → logprob: -16.875001907348633
    4. '[' → logprob: -18.000001907348633
    5. '(o' → logprob: -18.250001907348633
    6. '{o' → logprob: -18.750001907348633
    7. '	o' → logprob: -19.125001907348633
    8. '   ' → logprob: -20.000001907348633
    9. '```' → logprob: -20.375001907348633
    10. ' [' → logprob: -21.375001907348633

Token 676: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7013950347900391
    2. ']' → logprob: -0.7013950347900391
    3. ']=' → logprob: -5.326395034790039
    4. ' =' → logprob: -5.701395034790039
    5. ')' → logprob: -12.326395034790039
    6. ']+=' → logprob: -12.451395034790039
    7. '[' → logprob: -14.326395034790039
    8. ' ]' → logprob: -14.326395034790039
    9. ')=' → logprob: -14.826395034790039
    10. '```' → logprob: -15.451395034790039

Token 677: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078401252627373
    2. ' =' → logprob: -5.504078388214111
    3. '+=' → logprob: -19.129077911376953
    4. 'dp' → logprob: -19.879077911376953
    5. ']' → logprob: -20.129077911376953
    6. ']=' → logprob: -20.254077911376953
    7. '[' → logprob: -20.379077911376953
    8. '=
' → logprob: -20.754077911376953
    9. '   ' → logprob: -21.629077911376953
    10. ' ' → logprob: -21.754077911376953

Token 678: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.018150296062231064
    2. ' dp' → logprob: -4.018150329589844
    3. '(dp' → logprob: -15.518150329589844
    4. '	dp' → logprob: -15.893150329589844
    5. 'd' → logprob: -17.268150329589844
    6. '_dp' → logprob: -18.143150329589844
    7. ' ' → logprob: -18.518150329589844
    8. '   ' → logprob: -18.768150329589844
    9. '```' → logprob: -18.893150329589844
    10. 'db' → logprob: -19.768150329589844

Token 679: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -2.1008713702030946e-06
    2. 'get' → logprob: -13.625001907348633
    3. '.' → logprob: -14.250001907348633
    4. ' .' → logprob: -16.000001907348633
    5. '_get' → logprob: -20.000001907348633
    6. 'o' → logprob: -20.500001907348633
    7. '.o' → logprob: -20.500001907348633
    8. 'dp' → logprob: -21.500001907348633
    9. '```' → logprob: -21.625001907348633
    10. '   ' → logprob: -22.000001907348633

Token 680: '(o' (ID: 18928)
  Prédit: '(o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(o' → logprob: -4.870950215263292e-05
    2. '[o' → logprob: -10.125048637390137
    3. 'o' → logprob: -11.750048637390137
    4. ''o' → logprob: -15.625048637390137
    5. '	o' → logprob: -15.875048637390137
    6. '{o' → logprob: -16.250049591064453
    7. '(' → logprob: -17.125049591064453
    8. '```' → logprob: -17.250049591064453
    9. ' o' → logprob: -17.875049591064453
    10. '=o' → logprob: -17.875049591064453

Token 681: ',' (ID: 11)
  Prédit: '[o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[o' → logprob: -0.9905923008918762
    2. 'o' → logprob: -1.1155922412872314
    3. '(o' → logprob: -1.2405922412872314
    4. ',' → logprob: -5.2405924797058105
    5. ',o' → logprob: -5.7405924797058105
    6. ''o' → logprob: -6.1155924797058105
    7. '{o' → logprob: -7.6155924797058105
    8. '=o' → logprob: -9.115592002868652
    9. '	o' → logprob: -9.365592002868652
    10. '$o' → logprob: -9.365592002868652

Token 682: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0432814285159111
    2. 'o' → logprob: -3.418281316757202
    3. 'dp' → logprob: -4.668281555175781
    4. ' ' → logprob: -9.168281555175781
    5. ' dp' → logprob: -10.043281555175781
    6. ' o' → logprob: -10.293281555175781
    7. 'a' → logprob: -12.918281555175781
    8. '[o' → logprob: -13.043281555175781
    9. '(dp' → logprob: -13.043281555175781
    10. '(o' → logprob: -13.668281555175781

Token 683: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007332229521125555
    2. '+' → logprob: -5.8823323249816895
    3. ',' → logprob: -6.0073323249816895
    4. ')+' → logprob: -6.2573323249816895
    5. ']' → logprob: -9.382331848144531
    6. ' +' → logprob: -10.882331848144531
    7. ']+' → logprob: -11.132331848144531
    8. '+)' → logprob: -11.757331848144531
    9. '}' → logprob: -12.882331848144531
    10. ' )' → logprob: -13.132331848144531

Token 684: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5760748386383057
    2. ' +' → logprob: -0.8260748386383057
    3. ']' → logprob: -10.451074600219727
    4. ']+' → logprob: -10.576074600219727
    5. 'dp' → logprob: -10.826074600219727
    6. ')' → logprob: -11.201074600219727
    7. ' ' → logprob: -11.576074600219727
    8. '0' → logprob: -11.701074600219727
    9. 'o' → logprob: -12.076074600219727
    10. '           ' → logprob: -12.451074600219727

Token 685: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.004638149403035641
    2. ' l' → logprob: -5.379638195037842
    3. '           ' → logprob: -12.129637718200684
    4. 'lc' → logprob: -12.504637718200684
    5. '   ' → logprob: -12.629637718200684
    6. '+' → logprob: -13.504637718200684
    7. '(l' → logprob: -14.004637718200684
    8. '       ' → logprob: -14.254637718200684
    9. '+l' → logprob: -15.129637718200684
    10. '         ' → logprob: -15.254637718200684

Token 686: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.9361264946837764e-07
    2. 'l' → logprob: -15.875
    3. '_count' → logprob: -18.625
    4. 'ount' → logprob: -18.625
    5. 'c' → logprob: -19.875
    6. ' count' → logprob: -20.25
    7. 'cc' → logprob: -21.25
    8. 'cnt' → logprob: -21.5
    9. '[count' → logprob: -21.875
    10. '   ' → logprob: -22.125

Token 687: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.000972921319771558
    2. ' *' → logprob: -7.000972747802734
    3. '[' → logprob: -9.750972747802734
    4. 'import' → logprob: -14.250972747802734
    5. '*[' → logprob: -14.250972747802734
    6. '```' → logprob: -14.250972747802734
    7. '#' → logprob: -15.125972747802734
    8. '   ' → logprob: -15.750972747802734
    9. '*r' → logprob: -16.250972747802734
    10. '`' → logprob: -16.375972747802734

Token 688: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: 0.0
    2. '_rc' → logprob: -17.625
    3. ' r' → logprob: -18.0
    4. ' rc' → logprob: -18.625
    5. 'rcode' → logprob: -18.75
    6. '	rc' → logprob: -19.625
    7. '(rc' → logprob: -19.625
    8. '.rc' → logprob: -22.0
    9. 'RC' → logprob: -22.0
    10. '```' → logprob: -23.125

Token 689: 'ount' (ID: 807)
  Prédit: 'ount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.0025133544113487005
    2. 'count' → logprob: -6.252513408660889
    3. 'ont' → logprob: -7.627513408660889
    4. 'unt' → logprob: -9.37751293182373
    5. 'out' → logprob: -12.00251293182373
    6. 'nt' → logprob: -13.25251293182373
    7. ' ' → logprob: -13.75251293182373
    8. '[' → logprob: -13.87751293182373
    9. 'ost' → logprob: -14.37751293182373
    10. '   ' → logprob: -14.50251293182373

Token 690: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.73052782076411e-05
    2. '       ' → logprob: -10.125067710876465
    3. '          ' → logprob: -11.125067710876465
    4. '         ' → logprob: -12.625067710876465
    5. '   ' → logprob: -13.000067710876465
    6. '
' → logprob: -13.375067710876465
    7. '               ' → logprob: -13.750067710876465
    8. '```' → logprob: -13.875067710876465
    9. '		' → logprob: -14.125067710876465
    10. '            ' → logprob: -14.500067710876465

Token 691: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007587654399685562
    2. '```' → logprob: -7.375758647918701
    3. '       ' → logprob: -9.87575912475586
    4. '#' → logprob: -9.87575912475586
    5. '          ' → logprob: -11.37575912475586
    6. '
' → logprob: -12.37575912475586
    7. '               ' → logprob: -12.37575912475586
    8. '   ' → logprob: -12.87575912475586
    9. '         ' → logprob: -13.25075912475586
    10. '            ' → logprob: -13.50075912475586

Token 692: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00043126524542458355
    2. '#' (adapté à ' #') → logprob: -7.875431060791016
    3. '          ' → logprob: -10.625431060791016
    4. '       ' → logprob: -11.500431060791016
    5. '         ' → logprob: -12.250431060791016
    6. ' #' → logprob: -12.500431060791016
    7. '```' → logprob: -13.000431060791016
    8. '            ' → logprob: -13.250431060791016
    9. '               ' → logprob: -14.000431060791016
    10. '		' → logprob: -14.375431060791016

Token 693: ' X' (ID: 2127)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10374540835618973
    2. '#' → logprob: -2.353745460510254
    3. '           ' → logprob: -6.228745460510254
    4. ' x' → logprob: -6.603745460510254
    5. ' #' → logprob: -8.853745460510254
    6. '   ' → logprob: -10.853745460510254
    7. '```' → logprob: -11.228745460510254
    8. '
' → logprob: -11.478745460510254
    9. '       ' → logprob: -12.478745460510254
    10. ' ' → logprob: -12.603745460510254

Token 694: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43110963702201843
    2. '=' → logprob: -1.0561096668243408
    3. 'x' → logprob: -6.306109428405762
    4. 's' → logprob: -8.431109428405762
    5. ':' → logprob: -9.681109428405762
    6. ' ' → logprob: -9.806109428405762
    7. ' x' → logprob: -10.056109428405762
    8. 'sym' → logprob: -10.306109428405762
    9. '   ' → logprob: -10.681109428405762
    10. '#' → logprob: -10.806109428405762

Token 695: ' symmetric' (ID: 123676)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.44979652762413025
    2. ' x' → logprob: -1.5747965574264526
    3. '(l' → logprob: -3.074796438217163
    4. ' (' → logprob: -3.324796438217163
    5. 'a' → logprob: -4.199796676635742
    6. ' l' → logprob: -4.324796676635742
    7. 'l' → logprob: -4.449796676635742
    8. '(a' → logprob: -4.574796676635742
    9. ' a' → logprob: -4.699796676635742
    10. '(x' → logprob: -4.949796676635742

Token 696: ' difference' (ID: 9809)
  Prédit: '_difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.3164050877094269
    2. 'difference' → logprob: -1.4414050579071045
    3. 'd' → logprob: -3.4414050579071045
    4. '_d' → logprob: -7.316405296325684
    5. 'o' → logprob: -7.441405296325684
    6. '   ' → logprob: -7.566405296325684
    7. 'x' → logprob: -8.191405296325684
    8. 'set' → logprob: -8.941405296325684
    9. ' difference' → logprob: -9.066405296325684
    10. 's' → logprob: -9.441405296325684

Token 697: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19588656723499298
    2. '
' → logprob: -2.3208866119384766
    3. ' =' → logprob: -3.3208866119384766
    4. ' x' → logprob: -3.5708866119384766
    5. 'x' → logprob: -4.570886611938477
    6. '=' → logprob: -5.820886611938477
    7. '```' → logprob: -7.320886611938477
    8. '            
' → logprob: -8.570886611938477
    9. '
' → logprob: -8.820886611938477
    10. '       ' → logprob: -8.945886611938477

Token 698: '           ' (ID: 352)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.043455734848976135
    2. '           ' → logprob: -3.7934558391571045
    3. ' x' → logprob: -3.9184558391571045
    4. '```' → logprob: -9.543456077575684
    5. '
' → logprob: -10.293456077575684
    6. '   ' → logprob: -11.418456077575684
    7. '       ' → logprob: -11.918456077575684
    8. '(x' → logprob: -13.168456077575684
    9. '         ' → logprob: -13.168456077575684
    10. '               ' → logprob: -13.293456077575684

Token 699: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.005289492197334766
    2. ' x' → logprob: -5.255289554595947
    3. '           ' → logprob: -9.880289077758789
    4. '```' → logprob: -12.380289077758789
    5. '   ' → logprob: -15.630289077758789
    6. '       ' → logprob: -16.50528907775879
    7. '	x' → logprob: -16.88028907775879
    8. ' ' → logprob: -17.13028907775879
    9. '``' → logprob: -17.38028907775879
    10. '`' → logprob: -17.50528907775879

Token 700: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759415626525879
    2. '=' → logprob: -0.8259415626525879
    3. 'x' → logprob: -13.57594108581543
    4. 's' → logprob: -14.95094108581543
    5. ' ' → logprob: -16.20094108581543
    6. ' x' → logprob: -16.57594108581543
    7. ' =(' → logprob: -16.95094108581543
    8. '=
' → logprob: -17.07594108581543
    9. '=x' → logprob: -17.20094108581543
    10. 'f' → logprob: -17.32594108581543

Token 701: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.692660391330719
    2. 'l' → logprob: -1.6926603317260742
    3. ' l' → logprob: -1.6926603317260742
    4. ' (' → logprob: -2.067660331726074
    5. 'fro' → logprob: -5.942660331726074
    6. '(f' → logprob: -6.692660331726074
    7. ' fro' → logprob: -6.817660331726074
    8. '(' → logprob: -9.192660331726074
    9. 'f' → logprob: -10.317660331726074
    10. '	l' → logprob: -10.942660331726074

Token 702: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0003370118502061814
    2. ' l' → logprob: -8.000336647033691
    3. '(l' → logprob: -13.750336647033691
    4. 'fro' → logprob: -15.375336647033691
    5. '	l' → logprob: -16.250337600708008
    6. ' (' → logprob: -16.750337600708008
    7. '   ' → logprob: -16.875337600708008
    8. '           ' → logprob: -17.875337600708008
    9. '_l' → logprob: -18.625337600708008
    10. '    ' → logprob: -18.625337600708008

Token 703: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.2701377868652344
    2. 'l' → logprob: -1.6451377868652344
    3. 's' → logprob: -3.1451377868652344
    4. ' l' → logprob: -8.395137786865234
    5. '(l' → logprob: -8.645137786865234
    6. 'sets' → logprob: -9.395137786865234
    7. '(s' → logprob: -9.520137786865234
    8. '(set' → logprob: -10.020137786865234
    9. '   ' → logprob: -11.020137786865234
    10. '```' → logprob: -11.895137786865234

Token 704: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.2868361473083496
    2. ' ^' → logprob: -2.1618361473083496
    3. ' |' → logprob: -2.5368361473083496
    4. '^' → logprob: -2.9118361473083496
    5. ' x' → logprob: -7.91183614730835
    6. ' ' → logprob: -8.786836624145508
    7. 'x' → logprob: -8.911836624145508
    8. ' ' → logprob: -10.286836624145508
    9. 's' → logprob: -10.411836624145508
    10. ' sym' → logprob: -12.286836624145508

Token 705: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00020425561524461955
    2. ' r' → logprob: -8.500204086303711
    3. 'x' → logprob: -15.125204086303711
    4. '(r' → logprob: -15.500204086303711
    5. '   ' → logprob: -16.12520408630371
    6. '{' → logprob: -17.12520408630371
    7. ' ' → logprob: -17.50020408630371
    8. '```' → logprob: -18.25020408630371
    9. '(' → logprob: -18.75020408630371
    10. '	r' → logprob: -19.00020408630371

Token 706: 'set' (ID: 977)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01912824437022209
    2. 'set' → logprob: -4.144128322601318
    3. '(r' → logprob: -6.644128322601318
    4. ' r' → logprob: -6.769128322601318
    5. 'et' → logprob: -7.644128322601318
    6. '[r' → logprob: -9.76912784576416
    7. 's' → logprob: -10.14412784576416
    8. 'erset' → logprob: -11.01912784576416
    9. '   ' → logprob: -11.39412784576416
    10. 'x' → logprob: -12.51912784576416

Token 707: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27152612805366516
    2. 'x' → logprob: -2.3965260982513428
    3. '-' → logprob: -2.5215260982513428
    4. ' -' → logprob: -3.2715260982513428
    5. ' x' → logprob: -3.8965260982513428
    6. '(x' → logprob: -6.146526336669922
    7. '^' → logprob: -6.396526336669922
    8. ' ^' → logprob: -6.771526336669922
    9. ')x' → logprob: -6.896526336669922
    10. ')^' → logprob: -7.771526336669922

Token 708: ' -' (ID: 533)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.33780038356781006
    2. '-' → logprob: -1.33780038356781
    3. '^' → logprob: -4.4628005027771
    4. ' -' → logprob: -4.7128005027771
    5. ' x' → logprob: -5.9628005027771
    6. ' ^' → logprob: -7.7128005027771
    7. '-x' → logprob: -8.962800025939941
    8. ')' → logprob: -9.212800025939941
    9. '(x' → logprob: -9.337800025939941
    10. '           ' → logprob: -9.837800025939941

Token 709: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -7.465036105713807e-06
    2. '(' → logprob: -12.625007629394531
    3. 'a' → logprob: -13.250007629394531
    4. ' (' → logprob: -13.375007629394531
    5. '(a' → logprob: -14.500007629394531
    6. 'l' → logprob: -16.37500762939453
    7. '((' → logprob: -16.62500762939453
    8. '	l' → logprob: -17.12500762939453
    9. '   ' → logprob: -17.37500762939453
    10. '(L' → logprob: -18.00000762939453

Token 710: 'l' (ID: 75)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.00010008628305513412
    2. '(' → logprob: -9.875100135803223
    3. 'a' → logprob: -10.375100135803223
    4. 'l' → logprob: -11.750100135803223
    5. '((' → logprob: -12.375100135803223
    6. 'x' → logprob: -13.000100135803223
    7. ' (' → logprob: -13.750100135803223
    8. '(ls' → logprob: -14.500100135803223
    9. '(
' → logprob: -14.750100135803223
    10. '(a' → logprob: -14.875100135803223

Token 711: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0018590340623632073
    2. '(l' → logprob: -7.251859188079834
    3. '(s' → logprob: -7.501859188079834
    4. '(a' → logprob: -8.501858711242676
    5. 's' → logprob: -8.751858711242676
    6. 'a' → logprob: -9.376858711242676
    7. 'sets' → logprob: -10.001858711242676
    8. '(set' → logprob: -10.751858711242676
    9. '(r' → logprob: -10.876858711242676
    10. ' (' → logprob: -10.876858711242676

Token 712: ' &' (ID: 827)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.01278697606176138
    2. '(a' → logprob: -5.262786865234375
    3. '(s' → logprob: -5.762786865234375
    4. '(' → logprob: -6.387786865234375
    5. 'a' → logprob: -6.887786865234375
    6. 'x' → logprob: -7.387786865234375
    7. '(r' → logprob: -7.762786865234375
    8. '(
' → logprob: -7.887786865234375
    9. ' (' → logprob: -9.137786865234375
    10. 'r' → logprob: -10.762786865234375

Token 713: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001756575657054782
    2. 'l' → logprob: -6.75175666809082
    3. ' r' → logprob: -7.50175666809082
    4. ' l' → logprob: -10.50175666809082
    5. 's' → logprob: -12.62675666809082
    6. '(r' → logprob: -13.50175666809082
    7. 'a' → logprob: -15.00175666809082
    8. '(l' → logprob: -15.00175666809082
    9. 'rs' → logprob: -15.12675666809082
    10. '(s' → logprob: -15.37675666809082

Token 714: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.08901035040616989
    2. 'r' → logprob: -2.464010238647461
    3. 's' → logprob: -10.339010238647461
    4. ' r' → logprob: -10.839010238647461
    5. '(r' → logprob: -12.214010238647461
    6. 'et' → logprob: -12.464010238647461
    7. '   ' → logprob: -13.589010238647461
    8. 'ret' → logprob: -13.714010238647461
    9. '_r' → logprob: -13.964010238647461
    10. '[r' → logprob: -14.089010238647461

Token 715: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0043449061922729015
    2. 's' → logprob: -6.379344940185547
    3. 'r' → logprob: -6.379344940185547
    4. ')
' → logprob: -7.879344940185547
    5. 'x' → logprob: -8.879344940185547
    6. ')s' → logprob: -9.629344940185547
    7. 'a' → logprob: -9.754344940185547
    8. ']' → logprob: -10.004344940185547
    9. 'f' → logprob: -10.254344940185547
    10. ')set' → logprob: -10.629344940185547

Token 716: '           ' (ID: 352)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5878778696060181
    2. '           ' → logprob: -0.8378778696060181
    3. ' dp' → logprob: -4.4628777503967285
    4. '=' → logprob: -9.462878227233887
    5. '
' → logprob: -9.837878227233887
    6. '```' → logprob: -9.837878227233887
    7. '       ' → logprob: -10.462878227233887
    8. '          ' → logprob: -10.587878227233887
    9. '(dp' → logprob: -10.712878227233887
    10. '	dp' → logprob: -10.712878227233887

Token 717: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.04421433433890343
    2. ' dp' → logprob: -3.6692142486572266
    3. '=' → logprob: -4.419214248657227
    4. '           ' → logprob: -5.919214248657227
    5. 'x' → logprob: -6.294214248657227
    6. ' =' → logprob: -7.794214248657227
    7. '_dp' → logprob: -9.169214248657227
    8. '=
' → logprob: -9.294214248657227
    9. '[' → logprob: -9.419214248657227
    10. '
' → logprob: -9.544214248657227

Token 718: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0003896815178450197
    2. 'x' → logprob: -7.875389575958252
    3. '=x' → logprob: -12.75039005279541
    4. '```' → logprob: -13.37539005279541
    5. '=' → logprob: -13.75039005279541
    6. '_x' → logprob: -14.00039005279541
    7. ' =' → logprob: -14.12539005279541
    8. '[' → logprob: -14.25039005279541
    9. '
' → logprob: -14.50039005279541
    10. ' [' → logprob: -15.75039005279541

Token 719: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007624491583555937
    2. ']=' → logprob: -5.007624626159668
    3. '=' → logprob: -7.007624626159668
    4. ')' → logprob: -13.007624626159668
    5. ' ]' → logprob: -14.132624626159668
    6. ')=' → logprob: -15.382624626159668
    7. ']+=' → logprob: -15.882624626159668
    8. 'd' → logprob: -16.25762367248535
    9. ' =' → logprob: -16.38262367248535
    10. ')]' → logprob: -16.50762367248535

Token 720: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.248469718324486e-05
    2. ' =' → logprob: -10.750022888183594
    3. ']=' → logprob: -14.500022888183594
    4. ']' → logprob: -14.500022888183594
    5. '=d' → logprob: -17.000022888183594
    6. '=
' → logprob: -18.250022888183594
    7. 'dp' → logprob: -18.375022888183594
    8. ')' → logprob: -19.125022888183594
    9. '=df' → logprob: -19.125022888183594
    10. ')=' → logprob: -19.125022888183594

Token 721: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.014163747429847717
    2. ' dp' → logprob: -4.264163970947266
    3. '	dp' → logprob: -16.014163970947266
    4. '(dp' → logprob: -16.639163970947266
    5. '
' → logprob: -17.264163970947266
    6. ' ' → logprob: -17.764163970947266
    7. 'd' → logprob: -17.764163970947266
    8. '   ' → logprob: -18.014163970947266
    9. 'dx' → logprob: -18.264163970947266
    10. 'df' → logprob: -18.889163970947266

Token 722: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0001645644661039114
    2. 'get' → logprob: -8.875164985656738
    3. 'dp' → logprob: -10.625164985656738
    4. '.' → logprob: -16.125164031982422
    5. 'x' → logprob: -16.375164031982422
    6. '.dp' → logprob: -16.625164031982422
    7. '[x' → logprob: -16.750164031982422
    8. '_get' → logprob: -17.000164031982422
    9. '.setdefault' → logprob: -17.125164031982422
    10. ' .' → logprob: -17.250164031982422

Token 723: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.001953018014319241
    2. 'x' → logprob: -6.376953125
    3. '(dp' → logprob: -9.251953125
    4. '[x' → logprob: -9.376953125
    5. 'dp' → logprob: -9.626953125
    6. '(dx' → logprob: -13.501953125
    7. '(' → logprob: -14.376953125
    8. ' x' → logprob: -14.376953125
    9. 'dx' → logprob: -14.626953125
    10. '(
' → logprob: -14.626953125

Token 724: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2698594927787781
    2. ',' → logprob: -2.019859552383423
    3. ',x' → logprob: -2.269859552383423
    4. '[x' → logprob: -8.269859313964844
    5. 'dp' → logprob: -9.769859313964844
    6. '(x' → logprob: -9.894859313964844
    7. 'dx' → logprob: -10.644859313964844
    8. ']' → logprob: -10.769859313964844
    9. '```' → logprob: -11.144859313964844
    10. ' ,' → logprob: -11.394859313964844

Token 725: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.779520092299208e-05
    2. ' ' → logprob: -10.125078201293945
    3. 'x' → logprob: -10.500078201293945
    4. 'dp' → logprob: -11.625078201293945
    5. '   ' → logprob: -15.625078201293945
    6. 'o' → logprob: -15.750078201293945
    7. ')' → logprob: -16.250078201293945
    8. '+' → logprob: -16.500078201293945
    9. '1' → logprob: -16.875078201293945
    10. '       ' → logprob: -17.125078201293945

Token 726: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39885684847831726
    2. ')' → logprob: -1.1488568782806396
    3. ']' → logprob: -4.5238566398620605
    4. ',x' → logprob: -7.8988566398620605
    5. ']+' → logprob: -8.273857116699219
    6. '+' → logprob: -8.648857116699219
    7. ')+' → logprob: -8.898857116699219
    8. ' ,' → logprob: -10.773857116699219
    9. 'x' → logprob: -10.898857116699219
    10. ',None' → logprob: -11.023857116699219

Token 727: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1603105366230011
    2. ' +' → logprob: -1.9103105068206787
    3. ')' → logprob: -10.660310745239258
    4. '+x' → logprob: -10.660310745239258
    5. ' ' → logprob: -11.410310745239258
    6. ']' → logprob: -11.410310745239258
    7. ',' → logprob: -12.410310745239258
    8. ']+' → logprob: -12.785310745239258
    9. ')+' → logprob: -13.410310745239258
    10. '       ' → logprob: -13.660310745239258

Token 728: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.12694816291332245
    2. ' l' → logprob: -2.126948118209839
    3. '           ' → logprob: -11.876948356628418
    4. 'lc' → logprob: -12.751948356628418
    5. '   ' → logprob: -13.126948356628418
    6. '(l' → logprob: -13.501948356628418
    7. ' ' → logprob: -13.626948356628418
    8. '+' → logprob: -14.376948356628418
    9. '       ' → logprob: -14.501948356628418
    10. '    ' → logprob: -14.501948356628418

Token 729: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -4.320199877838604e-07
    2. 'l' → logprob: -15.375
    3. 'set' → logprob: -16.625
    4. ' count' → logprob: -18.25
    5. '_count' → logprob: -18.375
    6. 'c' → logprob: -18.625
    7. '(count' → logprob: -19.125
    8. 'ount' → logprob: -19.625
    9. 'cnt' → logprob: -19.625
    10. '.count' → logprob: -19.875

Token 730: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -6.659005157416686e-05
    2. ' *' → logprob: -9.625066757202148
    3. '```' → logprob: -15.250066757202148
    4. '   ' → logprob: -16.25006675720215
    5. '**' → logprob: -17.00006675720215
    6. '[' → logprob: -17.12506675720215
    7. '       ' → logprob: -18.37506675720215
    8. '*object' → logprob: -18.50006675720215
    9. 'import' → logprob: -18.75006675720215
    10. '*[' → logprob: -18.75006675720215

Token 731: 'rc' (ID: 2366)
  Prédit: 'rc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rc' → logprob: -1.9361264946837764e-07
    2. ' rc' → logprob: -16.125
    3. '(rc' → logprob: -17.125
    4. ' r' → logprob: -18.0
    5. '	rc' → logprob: -19.0
    6. '_rc' → logprob: -19.125
    7. 'rcode' → logprob: -19.125
    8. 'r' → logprob: -19.75
    9. '   ' → logprob: -21.25
    10. 'l' → logprob: -21.375

Token 732: 'ount' (ID: 807)
  Prédit: 'ount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.0792480930685997
    2. 'count' → logprob: -2.5792481899261475
    3. 'ont' → logprob: -8.204248428344727
    4. 'unt' → logprob: -10.204248428344727
    5. 'nt' → logprob: -11.079248428344727
    6. 'out' → logprob: -11.829248428344727
    7. 'ound' → logprob: -12.454248428344727
    8. 'c' → logprob: -12.579248428344727
    9. 'cnt' → logprob: -12.579248428344727
    10. 'set' → logprob: -12.829248428344727

Token 733: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02501440793275833
    2. '+' → logprob: -4.525014400482178
    3. ' +' → logprob: -5.025014400482178
    4. '   ' → logprob: -5.650014400482178
    5. '       ' → logprob: -6.900014400482178
    6. '
' → logprob: -7.150014400482178
    7. '               ' → logprob: -8.025014877319336
    8. '```' → logprob: -8.025014877319336
    9. '+
' → logprob: -8.150014877319336
    10. '          ' → logprob: -8.775014877319336

Token 734: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002738900948315859
    2. '
' → logprob: -6.377738952636719
    3. '```' → logprob: -7.002738952636719
    4. 'memo' → logprob: -9.627738952636719
    5. ' memo' → logprob: -10.377738952636719
    6. '    
' → logprob: -11.127738952636719
    7. '``' → logprob: -11.627738952636719
    8. ' ' → logprob: -13.377738952636719
    9. '
' → logprob: -13.752738952636719
    10. '`' → logprob: -14.377738952636719

Token 735: ' memo' (ID: 46393)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02133677899837494
    2. 'memo' (adapté à ' memo') → logprob: -4.396336555480957
    3. ' memo' → logprob: -5.021336555480957
    4. '
' → logprob: -6.271336555480957
    5. '```' → logprob: -8.271336555480957
    6. '    
' → logprob: -11.146336555480957
    7. 'm' → logprob: -11.396336555480957
    8. ' ' → logprob: -12.021336555480957
    9. '``' → logprob: -12.146336555480957
    10. '[m' → logprob: -13.396336555480957

Token 736: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.0023316475562751293
    2. '[' → logprob: -6.252331733703613
    3. '=' → logprob: -7.877331733703613
    4. '[...]' → logprob: -10.877331733703613
    5. '\[' → logprob: -12.877331733703613
    6. '[
' → logprob: -14.002331733703613
    7. '[k' → logprob: -15.002331733703613
    8. '```' → logprob: -15.127331733703613
    9. '[token' → logprob: -16.127330780029297
    10. '[]=' → logprob: -16.502330780029297

Token 737: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16607466340065002
    2. '=' → logprob: -1.9160746335983276
    3. ']=' → logprob: -5.166074752807617
    4. ' =' → logprob: -9.041074752807617
    5. ')' → logprob: -12.416074752807617
    6. '[' → logprob: -13.041074752807617
    7. ' ]' → logprob: -14.291074752807617
    8. ')=' → logprob: -14.666074752807617
    9. '=
' → logprob: -15.416074752807617
    10. '[key' → logprob: -16.166074752807617

Token 738: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008614808320999146
    2. ' =' → logprob: -4.758615016937256
    3. '=
' → logprob: -15.008614540100098
    4. '=m' → logprob: -17.383615493774414
    5. '=}' → logprob: -18.383615493774414
    6. '=

' → logprob: -18.508615493774414
    7. '＝' → logprob: -18.758615493774414
    8. '.=' → logprob: -19.258615493774414
    9. '=k' → logprob: -20.133615493774414
    10. '_=' → logprob: -20.258615493774414

Token 739: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.2729995988775045e-06
    2. ' dp' → logprob: -12.000006675720215
    3. '	dp' → logprob: -21.3750057220459
    4. '(dp' → logprob: -21.3750057220459
    5. '_dp' → logprob: -23.1250057220459
    6. 'dpi' → logprob: -25.1250057220459
    7. 'd' → logprob: -25.5000057220459
    8. '{' → logprob: -25.6250057220459
    9. 'dict' → logprob: -25.7500057220459
    10. 'DP' → logprob: -25.8750057220459

Token 740: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001971577061340213
    2. 'return' → logprob: -6.37697172164917
    3. ' return' → logprob: -9.001971244812012
    4. '
' → logprob: -9.626971244812012
    5. '    
' → logprob: -10.251971244812012
    6. '<|end|>' → logprob: -11.751971244812012
    7. ':return' → logprob: -11.751971244812012
    8. ')' → logprob: -11.876971244812012
    9. '```' → logprob: -12.251971244812012
    10. '.' → logprob: -12.751971244812012

Token 741: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013360745506361127
    2. 'return' → logprob: -6.626336097717285
    3. ' return' → logprob: -12.376336097717285
    4. '<|end|>' → logprob: -13.251336097717285
    5. '    
' → logprob: -13.376336097717285
    6. '	return' → logprob: -14.001336097717285
    7. '
' → logprob: -14.876336097717285
    8. '```' → logprob: -15.001336097717285
    9. ':return' → logprob: -15.126336097717285
    10. '       ' → logprob: -15.251336097717285

Token 742: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014251415617763996
    2. 'return' (adapté à ' return') → logprob: -4.264251232147217
    3. ' return' → logprob: -9.389251708984375
    4. '	return' → logprob: -13.264251708984375
    5. ':return' → logprob: -13.889251708984375
    6. '       ' → logprob: -14.264251708984375
    7. '  ' → logprob: -15.389251708984375
    8. '{return' → logprob: -15.639251708984375
    9. '    
' → logprob: -15.639251708984375
    10. '```' → logprob: -15.889251708984375

Token 743: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0005530327325686812
    2. ' dp' → logprob: -7.500553131103516
    3. 'memo' → logprob: -17.125553131103516
    4. '(dp' → logprob: -17.375553131103516
    5. '	dp' → logprob: -19.250553131103516
    6. 'd' → logprob: -21.250553131103516
    7. '_dp' → logprob: -21.625553131103516
    8. 'DP' → logprob: -22.250553131103516
    9. 'dm' → logprob: -22.375553131103516
    10. 'dpi' → logprob: -22.500553131103516

Token 744: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 745: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6404496431350708
    2. '<|end|>' → logprob: -0.8904496431350708
    3. '#' → logprob: -3.2654495239257812
    4. '```' → logprob: -5.015449523925781
    5. '<|end|>' → logprob: -5.140449523925781
    6. ')' → logprob: -5.390449523925781
    7. 'for' → logprob: -6.015449523925781
    8. 'print' → logprob: -6.515449523925781
    9. 'import' → logprob: -6.890449523925781
    10. 'token' → logprob: -8.015449523925781

Token 746: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.14840209484100342
    2. 'main' → logprob: -2.148402214050293
    3. ' count' → logprob: -5.023402214050293
    4. ' solve' → logprob: -5.023402214050293
    5. 'count' → logprob: -5.773402214050293
    6. 'solve' → logprob: -6.273402214050293
    7. ' find' → logprob: -6.523402214050293
    8. 'combine' → logprob: -8.648402214050293
    9. 'process' → logprob: -8.773402214050293
    10. ' process' → logprob: -8.773402214050293

Token 747: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002263046189909801
    2. '():
' → logprob: -8.500226020812988
    3. ' ():' → logprob: -11.250226020812988
    4. '(' → logprob: -11.875226020812988
    5. '()' → logprob: -13.250226020812988
    6. '():

' → logprob: -15.375226020812988
    7. '():
' → logprob: -15.500226020812988
    8. '(argv' → logprob: -15.625226020812988
    9. '()>' → logprob: -15.875226020812988
    10. ':' → logprob: -16.750226974487305

Token 748: '   ' (ID: 271)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.7792522311210632
    2. 'import' → logprob: -1.529252290725708
    3. '   ' → logprob: -1.779252290725708
    4. ' n' → logprob: -2.029252290725708
    5. 'n' → logprob: -3.779252290725708
    6. ' line' → logprob: -7.279252052307129
    7. ' input' → logprob: -8.654252052307129
    8. ' t' → logprob: -8.904252052307129
    9. 't' → logprob: -9.029252052307129
    10. ' T' → logprob: -9.154252052307129

Token 749: ' while' (ID: 2049)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0642303228378296
    2. 'T' → logprob: -1.3142303228378296
    3. '   ' → logprob: -1.9392303228378296
    4. 'import' → logprob: -2.064230442047119
    5. 'n' → logprob: -2.189230442047119
    6. ' t' → logprob: -6.564230442047119
    7. ' T' → logprob: -7.064230442047119
    8. ' import' → logprob: -7.564230442047119
    9. ' n' → logprob: -8.189229965209961
    10. 'num' → logprob: -8.314229965209961

Token 750: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.02324722334742546
    2. 'True' → logprob: -3.773247241973877
    3. '(True' → logprob: -13.398246765136719
    4. '1' → logprob: -15.773246765136719
    5. ' ' → logprob: -17.77324676513672
    6. '=True' → logprob: -18.02324676513672
    7. ' Tru' → logprob: -20.02324676513672
    8. ' ' → logprob: -20.52324676513672
    9. 'true' → logprob: -21.39824676513672
    10. ' true' → logprob: -21.64824676513672

Token 751: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008142653852701187
    2. '   ' → logprob: -5.758142471313477
    3. ':
' → logprob: -6.133142471313477
    4. ',' → logprob: -6.383142471313477
    5. ' :' → logprob: -8.133142471313477
    6. '(line' → logprob: -8.383142471313477
    7. '():' → logprob: -8.383142471313477
    8. ' line' → logprob: -9.008142471313477
    9. '(' → logprob: -9.883142471313477
    10. '():
' → logprob: -10.883142471313477

Token 752: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14706182479858398
    2. 'try' → logprob: -2.147061824798584
    3. ' try' → logprob: -4.147061824798584
    4. 'line' → logprob: -6.022061824798584
    5. ' line' → logprob: -6.397061824798584
    6. '	try' → logprob: -11.522062301635742
    7. '	line' → logprob: -11.772062301635742
    8. '   ' → logprob: -12.147062301635742
    9. '```' → logprob: -12.647062301635742
    10. 't' → logprob: -13.397062301635742

Token 753: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.10046825557947159
    2. 'try' → logprob: -2.350468158721924
    3. ' line' → logprob: -8.725468635559082
    4. ' try' → logprob: -9.350468635559082
    5. 'n' → logprob: -11.725468635559082
    6. 'l' → logprob: -13.100468635559082
    7. 't' → logprob: -13.975468635559082
    8. '```' → logprob: -14.225468635559082
    9. '   ' → logprob: -14.850468635559082
    10. '	line' → logprob: -15.850468635559082

Token 754: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048589076846838
    2. ' =' → logprob: -3.048588991165161
    3. '=line' → logprob: -13.423588752746582
    4. '=sys' → logprob: -16.4235897064209
    5. '=
' → logprob: -18.0485897064209
    6. '=input' → logprob: -18.4235897064209
    7. 'line' → logprob: -18.7985897064209
    8. '＝' → logprob: -18.7985897064209
    9. '=

' → logprob: -19.5485897064209
    10. '.=' → logprob: -19.6735897064209

Token 755: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.12833650410175323
    2. 'input' → logprob: -2.1283364295959473
    3. ' sys' → logprob: -6.628336429595947
    4. ' input' → logprob: -9.378336906433105
    5. '(sys' → logprob: -14.753336906433105
    6. '=sys' → logprob: -15.378336906433105
    7. '	sys' → logprob: -19.37833595275879
    8. 'import' → logprob: -19.75333595275879
    9. 'stdin' → logprob: -19.75333595275879
    10. '=input' → logprob: -20.25333595275879

Token 756: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00014609156642109156
    2. '.' → logprob: -9.50014591217041
    3. '.readline' → logprob: -9.75014591217041
    4. '.stdout' → logprob: -12.00014591217041
    5. 'stdin' → logprob: -12.25014591217041
    6. '.std' → logprob: -14.00014591217041
    7. '(stdin' → logprob: -14.75014591217041
    8. '.
' → logprob: -15.25014591217041
    9. '.argv' → logprob: -15.37514591217041
    10. ' stdin' → logprob: -16.500146865844727

Token 757: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -5.5577775128767826e-06
    2. '.' → logprob: -12.250005722045898
    3. ' readline' → logprob: -15.375005722045898
    4. 'read' → logprob: -15.875005722045898
    5. '.read' → logprob: -16.2500057220459
    6. '=' → logprob: -16.5000057220459
    7. ' =' → logprob: -16.8750057220459
    8. '```' → logprob: -16.8750057220459
    9. '().' → logprob: -17.2500057220459
    10. 'line' → logprob: -18.1250057220459

Token 758: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06100901961326599
    2. 'if' → logprob: -3.686008930206299
    3. '.strip' → logprob: -3.686008930206299
    4. ' if' → logprob: -6.061008930206299
    5. '.rstrip' → logprob: -6.186008930206299
    6. '   ' → logprob: -6.686008930206299
    7. '
' → logprob: -7.436008930206299
    8. ',' → logprob: -8.061009407043457
    9. 'strip' → logprob: -8.061009407043457
    10. '=' → logprob: -8.061009407043457

Token 759: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39278489351272583
    2. ' if' → logprob: -1.642784833908081
    3. 'if' → logprob: -2.392784833908081
    4. '.strip' → logprob: -3.642784833908081
    5. '   ' → logprob: -5.26778507232666
    6. '.rstrip' → logprob: -5.39278507232666
    7. 'rstrip' → logprob: -7.26778507232666
    8. '<|end|>' → logprob: -7.39278507232666
    9. '	if' → logprob: -7.76778507232666
    10. ',' → logprob: -7.89278507232666

Token 760: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2519417703151703
    2. ' if' → logprob: -1.5019418001174927
    3. '
' → logprob: -12.251941680908203
    4. 'If' → logprob: -13.001941680908203
    5. '	if' → logprob: -13.001941680908203
    6. ';if' → logprob: -13.626941680908203
    7. 'strip' → logprob: -14.501941680908203
    8. 'break' → logprob: -15.001941680908203
    9. '.strip' → logprob: -15.376941680908203
    10. '=line' → logprob: -15.751941680908203

Token 761: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07975917309522629
    2. 'not' → logprob: -2.579759120941162
    3. ' line' → logprob: -7.329759120941162
    4. 'line' → logprob: -8.45475959777832
    5. '#line' → logprob: -15.07975959777832
    6. '	not' → logprob: -16.95475959777832
    7. '[line' → logprob: -17.07975959777832
    8. '=line' → logprob: -17.45475959777832
    9. ' ' → logprob: -17.82975959777832
    10. '(line' → logprob: -18.32975959777832

Token 762: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.01416350994259119
    2. ' line' → logprob: -4.264163494110107
    3. '#line' → logprob: -18.264163970947266
    4. '	line' → logprob: -20.014163970947266
    5. '(line' → logprob: -20.264163970947266
    6. '[line' → logprob: -20.264163970947266
    7. '=line' → logprob: -21.264163970947266
    8. '
' → logprob: -21.389163970947266
    9. ' ' → logprob: -22.264163970947266
    10. 'Line' → logprob: -22.889163970947266

Token 763: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17105111479759216
    2. '.strip' → logprob: -2.296051025390625
    3. ':
' → logprob: -2.921051025390625
    4. '.' → logprob: -6.796051025390625
    5. ':return' → logprob: -6.921051025390625
    6. ' or' → logprob: -8.171051025390625
    7. '.rstrip' → logprob: -9.171051025390625
    8. '.readline' → logprob: -9.921051025390625
    9. '.startswith' → logprob: -10.671051025390625
    10. '<|end|>' → logprob: -11.046051025390625

Token 764: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3739936053752899
    2. '           ' → logprob: -1.2489936351776123
    3. '   ' → logprob: -3.7489936351776123
    4. '     ' → logprob: -7.873993396759033
    5. ' ' → logprob: -8.123993873596191
    6. ',' → logprob: -8.498993873596191
    7. '<|end|>' → logprob: -8.748993873596191
    8. '    ' → logprob: -9.123993873596191
    9. ' break' → logprob: -9.373993873596191
    10. ':' → logprob: -9.498993873596191

Token 765: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.056051105260849
    2. ' break' → logprob: -3.056051015853882
    3. 'return' → logprob: -4.931051254272461
    4. '	break' → logprob: -9.431051254272461
    5. ' return' → logprob: -9.431051254272461
    6. '       ' → logprob: -10.681051254272461
    7. '           ' → logprob: -11.056051254272461
    8. '   ' → logprob: -11.181051254272461
    9. '```' → logprob: -13.556051254272461
    10. '
' → logprob: -14.181051254272461

Token 766: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004088373854756355
    2. '        
' → logprob: -5.879088401794434
    3. '
' → logprob: -7.379088401794434
    4. '   ' → logprob: -8.629088401794434
    5. '<|end|>' → logprob: -8.629088401794434
    6. ',' → logprob: -8.879088401794434
    7. '    
' → logprob: -10.129088401794434
    8. '  
' → logprob: -10.629088401794434
    9. '```' → logprob: -11.254088401794434
    10. '		
' → logprob: -11.629088401794434

Token 767: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004557342268526554
    2. '   ' → logprob: -7.129557132720947
    3. '        
' → logprob: -7.129557132720947
    4. ' leaves' → logprob: -7.129557132720947
    5. 'line' → logprob: -7.379557132720947
    6. ' line' → logprob: -8.004557609558105
    7. '```' → logprob: -8.629557609558105
    8. 'n' → logprob: -8.754557609558105
    9. 'le' → logprob: -8.879557609558105
    10. ',' → logprob: -9.004557609558105

Token 768: ' line' (ID: 2543)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2692220211029053
    2. ' line' → logprob: -1.5192220211029053
    3. ' leaves' → logprob: -1.7692220211029053
    4. 'line' (adapté à ' line') → logprob: -1.8942220211029053
    5. ' n' → logprob: -2.1442220211029053
    6. '   ' → logprob: -3.7692220211029053
    7. 'le' → logprob: -4.394222259521484
    8. 'num' → logprob: -5.019222259521484
    9. 'k' → logprob: -5.144222259521484
    10. '       ' → logprob: -5.394222259521484

Token 769: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05167993903160095
    2. ' =' → logprob: -3.301679849624634
    3. '=line' → logprob: -4.301680088043213
    4. 'line' → logprob: -16.426679611206055
    5. '=
' → logprob: -17.301679611206055
    6. '[line' → logprob: -17.426679611206055
    7. '＝' → logprob: -17.676679611206055
    8. '(line' → logprob: -17.926679611206055
    9. '=

' → logprob: -18.676679611206055
    10. '   ' → logprob: -18.801679611206055

Token 770: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.023245595395565033
    2. ' line' → logprob: -3.7732455730438232
    3. '=line' → logprob: -16.898244857788086
    4. '	line' → logprob: -17.398244857788086
    5. '#line' → logprob: -18.273244857788086
    6. '(line' → logprob: -19.273244857788086
    7. ' ' → logprob: -20.273244857788086
    8. '[line' → logprob: -20.398244857788086
    9. 'Line' → logprob: -20.898244857788086
    10. '_line' → logprob: -21.398244857788086

Token 771: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0038986308500170708
    2. '.rstrip' → logprob: -6.253898620605469
    3. '=' → logprob: -6.628898620605469
    4. '.' → logprob: -7.878898620605469
    5. 'strip' → logprob: -8.503898620605469
    6. 'rstrip' → logprob: -10.253898620605469
    7. ' =' → logprob: -11.128898620605469
    8. '_strip' → logprob: -12.253898620605469
    9. '=line' → logprob: -12.878898620605469
    10. '.readline' → logprob: -13.253898620605469

Token 772: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.061995141208171844
    2. '()
' → logprob: -2.811995029449463
    3. '()
' → logprob: -11.811995506286621
    4. '()==' → logprob: -11.936995506286621
    5. '())' → logprob: -12.686995506286621
    6. '       ' → logprob: -12.936995506286621
    7. '()\' → logprob: -13.061995506286621
    8. '()`' → logprob: -13.561995506286621
    9. '()<' → logprob: -13.561995506286621
    10. '())
' → logprob: -14.311995506286621

Token 773: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004390832968056202
    2. 'if' → logprob: -6.254390716552734
    3. ' if' → logprob: -6.379390716552734
    4. '   ' → logprob: -7.879390716552734
    5. '<|end|>' → logprob: -8.254390716552734
    6. '	' → logprob: -9.629390716552734
    7. '```' → logprob: -11.004390716552734
    8. '	if' → logprob: -11.004390716552734
    9. '<|end|>' → logprob: -12.129390716552734
    10. '           ' → logprob: -12.254390716552734

Token 774: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -3.5954712075181305e-05
    2. 'n' → logprob: -11.250036239624023
    3. '       ' → logprob: -11.625036239624023
    4. ' if' → logprob: -11.750036239624023
    5. '   ' → logprob: -12.125036239624023
    6. 'le' → logprob: -15.250036239624023
    7. '```' → logprob: -15.375036239624023
    8. 'k' → logprob: -16.625036239624023
    9. '#' → logprob: -16.750036239624023
    10. '           ' → logprob: -17.000036239624023

Token 775: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.16584846377372742
    2. ' line' → logprob: -2.04084849357605
    3. 'line' → logprob: -4.165848255157471
    4. 'not' → logprob: -4.915848255157471
    5. ' len' → logprob: -10.290848731994629
    6. 'len' → logprob: -11.415848731994629
    7. ' ' → logprob: -12.165848731994629
    8. '#line' → logprob: -12.165848731994629
    9. '=line' → logprob: -13.290848731994629
    10. '[line' → logprob: -13.540848731994629

Token 776: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16045960783958435
    2. ' ==' → logprob: -1.9104596376419067
    3. '()==' → logprob: -8.535459518432617
    4. '==
' → logprob: -11.285459518432617
    5. '=' → logprob: -12.035459518432617
    6. '=='' → logprob: -12.285459518432617
    7. ')==' → logprob: -12.535459518432617
    8. '===' → logprob: -12.660459518432617
    9. '=="' → logprob: -12.660459518432617
    10. ']==' → logprob: -12.910459518432617

Token 777: ' "' (ID: 392)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.05490123853087425
    2. '""' → logprob: -3.054901123046875
    3. '"' → logprob: -5.929901123046875
    4. ''' → logprob: -6.054901123046875
    5. '"":' → logprob: -7.054901123046875
    6. ''#' → logprob: -7.929901123046875
    7. '"#' → logprob: -10.429901123046875
    8. ''end' → logprob: -11.179901123046875
    9. ''ex' → logprob: -12.304901123046875
    10. ''q' → logprob: -12.679901123046875

Token 778: 'END' (ID: 7671)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -1.2913614511489868
    2. 'END' → logprob: -1.2913614511489868
    3. '"' → logprob: -1.7913614511489868
    4. '0' → logprob: -2.4163613319396973
    5. '#' → logprob: -2.4163613319396973
    6. '":
' → logprob: -3.1663613319396973
    7. '""' → logprob: -3.9163613319396973
    8. '"#' → logprob: -4.166361331939697
    9. '"":' → logprob: -5.166361331939697
    10. 'DONE' → logprob: -5.291361331939697

Token 779: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.04905874282121658
    2. '":' → logprob: -3.049058675765991
    3. '"' → logprob: -8.17405891418457
    4. '":
' → logprob: -9.04905891418457
    5. '__":
' → logprob: -10.17405891418457
    6. '"):
' → logprob: -10.92405891418457
    7. ':' → logprob: -12.67405891418457
    8. '():
' → logprob: -12.67405891418457
    9. ':
' → logprob: -13.04905891418457
    10. '":

' → logprob: -13.04905891418457

Token 780: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1645168960094452
    2. '           ' → logprob: -2.5395169258117676
    3. ':' → logprob: -2.6645169258117676
    4. '   ' → logprob: -6.164516925811768
    5. ':
' → logprob: -7.664516925811768
    6. '	' → logprob: -8.78951644897461
    7. '	   ' → logprob: -9.16451644897461
    8. '<|end|>' → logprob: -9.53951644897461
    9. '	break' → logprob: -10.28951644897461
    10. '		' → logprob: -10.53951644897461

Token 781: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.030398031696677208
    2. '           ' → logprob: -4.280397891998291
    3. ' break' → logprob: -4.280397891998291
    4. 'return' → logprob: -6.155397891998291
    5. '	break' → logprob: -9.28039836883545
    6. '               ' → logprob: -10.53039836883545
    7. '       ' → logprob: -11.40539836883545
    8. ' return' → logprob: -12.40539836883545
    9. '		' → logprob: -12.90539836883545
    10. '	       ' → logprob: -13.03039836883545

Token 782: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025428354740142822
    2. '<|end|>' → logprob: -4.150428295135498
    3. '        
' → logprob: -5.025428295135498
    4. '
' → logprob: -6.150428295135498
    5. ',' → logprob: -8.650428771972656
    6. '		
' → logprob: -9.275428771972656
    7. '	' → logprob: -9.400428771972656
    8. '<|end|>' → logprob: -9.525428771972656
    9. '```' → logprob: -9.775428771972656
    10. '   ' → logprob: -10.150428771972656

Token 783: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023990783374756575
    2. '<|end|>' → logprob: -6.75239896774292
    3. '        
' → logprob: -7.00239896774292
    4. '   ' → logprob: -9.252399444580078
    5. '
' → logprob: -9.377399444580078
    6. '```' → logprob: -10.002399444580078
    7. '	' → logprob: -10.752399444580078
    8. ',' → logprob: -11.252399444580078
    9. '		
' → logprob: -11.627399444580078
    10. '<|end|>' → logprob: -11.877399444580078

Token 784: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12504979968070984
    2. 'num' → logprob: -2.5000498294830322
    3. ' n' → logprob: -4.000049591064453
    4. 'k' → logprob: -4.750049591064453
    5. '       ' → logprob: -5.625049591064453
    6. 'le' → logprob: -6.625049591064453
    7. ' num' → logprob: -7.250049591064453
    8. 'm' → logprob: -7.375049591064453
    9. 'N' → logprob: -7.375049591064453
    10. ' leaves' → logprob: -7.625049591064453

Token 785: ' read' (ID: 1729)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09692858904600143
    2. 'N' → logprob: -3.221928596496582
    3. 'num' → logprob: -3.346928596496582
    4. 'k' → logprob: -4.971928596496582
    5. ' n' → logprob: -6.096928596496582
    6. 'le' → logprob: -6.221928596496582
    7. 'parts' → logprob: -6.221928596496582
    8. 'm' → logprob: -6.596928596496582
    9. 'L' → logprob: -7.596928596496582
    10. '#' → logprob: -7.721928596496582

Token 786: ' tree' (ID: 8165)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4434867799282074
    2. 'le' → logprob: -2.0684866905212402
    3. ' n' → logprob: -2.4434866905212402
    4. 'k' → logprob: -2.9434866905212402
    5. 'num' → logprob: -2.9434866905212402
    6. ' leaves' → logprob: -4.44348669052124
    7. ' k' → logprob: -5.44348669052124
    8. 'parts' → logprob: -5.81848669052124
    9. '   ' → logprob: -5.94348669052124
    10. 'leaf' → logprob: -5.94348669052124

Token 787: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3305743634700775
    2. ',' → logprob: -1.5805743932724
    3. 'le' → logprob: -3.9555742740631104
    4. ' leaves' → logprob: -4.0805745124816895
    5. ',node' → logprob: -5.0805745124816895
    6. 'node' → logprob: -5.3305745124816895
    7. 'line' → logprob: -5.5805745124816895
    8. 'nodes' → logprob: -5.5805745124816895
    9. '
' → logprob: -5.7055745124816895
    10. '(line' → logprob: -5.8305745124816895

Token 788: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17156988382339478
    2. ' n' → logprob: -2.17156982421875
    3. '       ' → logprob: -3.67156982421875
    4. 'k' → logprob: -4.79656982421875
    5. ' k' → logprob: -5.54656982421875
    6. 'num' → logprob: -5.54656982421875
    7. 'm' → logprob: -7.29656982421875
    8. ' num' → logprob: -7.67156982421875
    9. ' leaves' → logprob: -8.17156982421875
    10. 'N' → logprob: -8.92156982421875

Token 789: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.8648157715797424
    2. 'le' → logprob: -1.6148157119750977
    3. 'num' → logprob: -1.9898157119750977
    4. 'n' → logprob: -2.2398157119750977
    5. 'line' → logprob: -2.7398157119750977
    6. 'leaf' → logprob: -3.6148157119750977
    7. '   ' → logprob: -4.489815711975098
    8. 'k' → logprob: -4.864815711975098
    9. 'nodes' → logprob: -5.364815711975098
    10. ' node' → logprob: -5.614815711975098

Token 790: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.15441757265944e-05
    2. '<|end|>' → logprob: -11.500031471252441
    3. ',line' → logprob: -12.000031471252441
    4. '=' → logprob: -12.000031471252441
    5. ',node' → logprob: -13.125031471252441
    6. ' ,' → logprob: -13.500031471252441
    7. ',left' → logprob: -13.750031471252441
    8. '<|end|>' → logprob: -13.875031471252441
    9. 's' → logprob: -14.125031471252441
    10. ',
' → logprob: -15.000031471252441

Token 791: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.07889056205749512
    2. ' left' → logprob: -2.578890562057495
    3. '	left' → logprob: -14.828890800476074
    4. ',left' → logprob: -16.078889846801758
    5. 'leaf' → logprob: -16.703889846801758
    6. 'le' → logprob: -16.703889846801758
    7. ' ' → logprob: -17.953889846801758
    8. '(left' → logprob: -17.953889846801758
    9. '[left' → logprob: -18.203889846801758
    10. '_left' → logprob: -18.328889846801758

Token 792: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.9888433093437925e-05
    2. '=' → logprob: -10.375040054321289
    3. ' ,' → logprob: -12.125040054321289
    4. ',right' → logprob: -13.375040054321289
    5. ' =' → logprob: -13.625040054321289
    6. '<|end|>' → logprob: -15.750040054321289
    7. ',
' → logprob: -16.50004005432129
    8. '_,' → logprob: -17.37504005432129
    9. ',left' → logprob: -17.87504005432129
    10. ',user' → logprob: -18.12504005432129

Token 793: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.03804183006286621
    2. ' right' → logprob: -3.288041830062866
    3. '	right' → logprob: -15.538042068481445
    4. ',right' → logprob: -16.413042068481445
    5. '   ' → logprob: -17.788042068481445
    6. ' ' → logprob: -17.788042068481445
    7. 'rights' → logprob: -17.913042068481445
    8. '(right' → logprob: -18.163042068481445
    9. '[right' → logprob: -18.413042068481445
    10. 'root' → logprob: -18.663042068481445

Token 794: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6240179538726807
    2. ',' → logprob: -0.9990179538726807
    3. ' =' → logprob: -2.3740179538726807
    4. '=line' → logprob: -6.999017715454102
    5. '<|end|>' → logprob: -7.374017715454102
    6. ',line' → logprob: -7.874017715454102
    7. '        ' → logprob: -8.624017715454102
    8. '		' → logprob: -9.124017715454102
    9. '       ' → logprob: -9.124017715454102
    10. '<|end|>' → logprob: -9.624017715454102

Token 795: ' read' (ID: 1729)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -1.036596655845642
    2. 'read' → logprob: -1.536596655845642
    3. ' read' → logprob: -1.536596655845642
    4. ' parse' → logprob: -1.536596655845642
    5. '=parse' → logprob: -13.161596298217773
    6. '(parse' → logprob: -13.536596298217773
    7. '(read' → logprob: -15.036596298217773
    8. '	read' → logprob: -15.286596298217773
    9. ' ' → logprob: -15.411596298217773
    10. '	parse' → logprob: -15.661596298217773

Token 796: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -2.618001053633634e-05
    2. 'tree' → logprob: -10.750025749206543
    3. '_line' → logprob: -12.750025749206543
    4. '```' → logprob: -15.000025749206543
    5. '(tree' → logprob: -15.250025749206543
    6. '_t' → logprob: -15.375025749206543
    7. '_TREE' → logprob: -15.375025749206543
    8. '
' → logprob: -15.500025749206543
    9. '<Tree' → logprob: -15.875025749206543
    10. 'Tree' → logprob: -16.37502670288086

Token 797: '(line' (ID: 18178)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2967156171798706
    2. 'n' → logprob: -1.6717156171798706
    3. 'num' → logprob: -3.04671573638916
    4. ' n' → logprob: -5.29671573638916
    5. '        
' → logprob: -5.42171573638916
    6. 'line' → logprob: -5.79671573638916
    7. '
' → logprob: -6.29671573638916
    8. ',' → logprob: -6.92171573638916
    9. 'count' → logprob: -7.17171573638916
    10. 'k' → logprob: -7.54671573638916

Token 798: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0382821261882782
    2. '
' → logprob: -3.7882821559906006
    3. '        
' → logprob: -4.2882819175720215
    4. '		
' → logprob: -8.03828239440918
    5. '<|end|>' → logprob: -8.53828239440918
    6. ',' → logprob: -9.16328239440918
    7. '	' → logprob: -9.28828239440918
    8. ')' → logprob: -9.41328239440918
    9. '    
' → logprob: -9.66328239440918
    10. '  
' → logprob: -10.03828239440918

Token 799: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34269213676452637
    2. 'n' → logprob: -1.7176921367645264
    3. '```' → logprob: -2.5926921367645264
    4. 'num' → logprob: -3.7176921367645264
    5. 'k' → logprob: -5.2176923751831055
    6. 'le' → logprob: -6.5926923751831055
    7. ' n' → logprob: -6.5926923751831055
    8. ' leaves' → logprob: -7.3426923751831055
    9. 'count' → logprob: -7.5926923751831055
    10. 'leaf' → logprob: -7.9676923751831055

Token 800: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.030762575566768646
    2. 'k' → logprob: -4.280762672424316
    3. ' n' → logprob: -5.155762672424316
    4. 'N' (adapté à ' N') → logprob: -5.530762672424316
    5. 'num' → logprob: -5.530762672424316
    6. '       ' → logprob: -6.280762672424316
    7. 'm' → logprob: -7.405762672424316
    8. 'K' → logprob: -9.905762672424316
    9. ' k' → logprob: -9.905762672424316
    10. 'q' → logprob: -10.155762672424316

Token 801: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03427242860198021
    2. ' =' → logprob: -3.4092724323272705
    3. '=int' → logprob: -7.409272193908691
    4. '=
' → logprob: -11.909272193908691
    5. '_' → logprob: -13.284272193908691
    6. ',' → logprob: -13.284272193908691
    7. '=line' → logprob: -13.534272193908691
    8. ' =
' → logprob: -13.909272193908691
    9. '=sys' → logprob: -13.909272193908691
    10. '=len' → logprob: -13.909272193908691

Token 802: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.054500666621607e-06
    2. ' int' → logprob: -12.75000286102295
    3. 'len' → logprob: -16.500003814697266
    4. '[int' → logprob: -18.500003814697266
    5. '	int' → logprob: -18.750003814697266
    6. '<int' → logprob: -19.750003814697266
    7. '   ' → logprob: -20.125003814697266
    8. '0' → logprob: -20.125003814697266
    9. '(int' → logprob: -20.125003814697266
    10. '10' → logprob: -20.375003814697266

Token 803: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.000341541541274637
    2. 'sys' → logprob: -8.000341415405273
    3. '(input' → logprob: -12.750341415405273
    4. ' sys' → logprob: -13.000341415405273
    5. '(' → logprob: -15.125341415405273
    6. 'input' → logprob: -15.125341415405273
    7. '	sys' → logprob: -15.750341415405273
    8. '=sys' → logprob: -15.750341415405273
    9. '(
' → logprob: -18.750341415405273
    10. '(line' → logprob: -18.750341415405273

Token 804: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -9.372294698550832e-06
    2. '(stdin' → logprob: -12.625009536743164
    3. 'stdin' → logprob: -12.750009536743164
    4. '.readline' → logprob: -13.750009536743164
    5. '.' → logprob: -14.000009536743164
    6. '.stdout' → logprob: -14.625009536743164
    7. '.argv' → logprob: -14.875009536743164
    8. '.max' → logprob: -15.375009536743164
    9. '```' → logprob: -16.750009536743164
    10. '.std' → logprob: -17.000009536743164

Token 805: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.004135868512094021
    2. '.stdin' → logprob: -5.754136085510254
    3. '.' → logprob: -7.004136085510254
    4. '().' → logprob: -10.254136085510254
    5. '(stdin' → logprob: -11.754136085510254
    6. ' .' → logprob: -13.504136085510254
    7. '()' → logprob: -13.879136085510254
    8. '.stdout' → logprob: -14.129136085510254
    9. 'stdin' → logprob: -14.379136085510254
    10. '()
' → logprob: -14.629136085510254

Token 806: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.129766583442688
    2. '().' → logprob: -2.1297664642333984
    3. '()' → logprob: -5.879766464233398
    4. '())
' → logprob: -10.254766464233398
    5. '()
' → logprob: -13.504766464233398
    6. ')' → logprob: -13.879766464233398
    7. ' ())' → logprob: -14.379766464233398
    8. '();)' → logprob: -14.879766464233398
    9. '())

' → logprob: -15.629766464233398
    10. '()>' → logprob: -16.6297664642334

Token 807: '       ' (ID: 309)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.2589806616306305
    2. '       ' → logprob: -1.508980631828308
    3. ' leaves' → logprob: -5.133980751037598
    4. '(le' → logprob: -7.508980751037598
    5. '_le' → logprob: -9.133980751037598
    6. '	' → logprob: -9.258980751037598
    7. '        
' → logprob: -9.383980751037598
    8. ' le' → logprob: -9.883980751037598
    9. '<|end|>' → logprob: -9.883980751037598
    10. '.le' → logprob: -10.133980751037598

Token 808: ' leaves' (ID: 15657)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.009214084595441818
    2. ' leaves' → logprob: -4.759213924407959
    3. '       ' → logprob: -7.509213924407959
    4. 'leaf' → logprob: -10.509214401245117
    5. '   ' → logprob: -11.259214401245117
    6. '
' → logprob: -12.384214401245117
    7. ' le' → logprob: -13.509214401245117
    8. '_le' → logprob: -13.759214401245117
    9. '        
' → logprob: -13.884214401245117
    10. 'Leaves' → logprob: -14.134214401245117

Token 809: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -5.796184723294573e-06
    2. '_' → logprob: -13.250005722045898
    3. ' =' → logprob: -13.375005722045898
    4. '_s' → logprob: -14.500005722045898
    5. '=' → logprob: -14.875005722045898
    6. '_lines' → logprob: -15.250005722045898
    7. '_sizes' → logprob: -15.625005722045898
    8. '_lists' → logprob: -15.625005722045898
    9. '=_' → logprob: -15.750005722045898
    10. '=[]' → logprob: -15.875005722045898

Token 810: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47413772344589233
    2. '=' → logprob: -0.9741377234458923
    3. '=[]' → logprob: -9.724137306213379
    4. '[]' → logprob: -15.099137306213379
    5. '=[]
' → logprob: -15.599137306213379
    6. '[' → logprob: -15.849137306213379
    7. '=[' → logprob: -16.724138259887695
    8. '	' → logprob: -16.724138259887695
    9. ' =[' → logprob: -16.724138259887695
    10. '＝' → logprob: -16.849138259887695

Token 811: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.06843768060207367
    2. '[]
' → logprob: -2.8184375762939453
    3. '[' → logprob: -5.068437576293945
    4. '[int' → logprob: -10.068437576293945
    5. '[n' → logprob: -10.818437576293945
    6. '[str' → logprob: -10.943437576293945
    7. '[]

' → logprob: -11.568437576293945
    8. '[user' → logprob: -11.693437576293945
    9. '[s' → logprob: -12.068437576293945
    10. '[new' → logprob: -12.193437576293945

Token 812: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32732921838760376
    2. '	for' → logprob: -2.202329158782959
    3. 'for' → logprob: -2.202329158782959
    4. '       ' → logprob: -3.577329158782959
    5. '<|end|>' → logprob: -3.577329158782959
    6. '	' → logprob: -7.952329158782959
    7. '<|end|>' → logprob: -7.952329158782959
    8. '	   ' → logprob: -8.077329635620117
    9. '	       ' → logprob: -8.577329635620117
    10. '   ' → logprob: -8.702329635620117

Token 813: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0013351208763197064
    2. ' for' → logprob: -6.751335144042969
    3. '       ' → logprob: -8.751335144042969
    4. '	for' → logprob: -12.001335144042969
    5. '   ' → logprob: -15.001335144042969
    6. '
' → logprob: -16.00133514404297
    7. '	' → logprob: -17.12633514404297
    8. '```' → logprob: -17.75133514404297
    9. ' ' → logprob: -19.12633514404297
    10. '	   ' → logprob: -20.37633514404297

Token 814: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.56233171664644e-05
    2. ' _' → logprob: -10.000055313110352
    3. '_i' → logprob: -11.500055313110352
    4. '_in' → logprob: -17.87505531311035
    5. '_index' → logprob: -18.37505531311035
    6. '_=' → logprob: -18.75005531311035
    7. '_range' → logprob: -18.87505531311035
    8. '_
' → logprob: -19.00005531311035
    9. '_j' → logprob: -19.50005531311035
    10. '_

' → logprob: -20.00005531311035

Token 815: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004495277069509029
    2. 'range' → logprob: -5.629495143890381
    3. ' in' → logprob: -7.504495143890381
    4. 'in' → logprob: -8.629495620727539
    5. ' range' → logprob: -8.754495620727539
    6. 'i' → logprob: -12.754495620727539
    7. '_range' → logprob: -13.129495620727539
    8. ' _' → logprob: -14.629495620727539
    9. '0' → logprob: -14.879495620727539
    10. '_=' → logprob: -14.879495620727539

Token 816: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.842555426876061e-06
    2. ' range' → logprob: -12.250004768371582
    3. '	range' → logprob: -21.3750057220459
    4. '(range' → logprob: -21.8750057220459
    5. 'sys' → logprob: -22.8750057220459
    6. 'rang' → logprob: -23.2500057220459
    7. '   ' → logprob: -23.3750057220459
    8. '  ' → logprob: -23.8750057220459
    9. '
' → logprob: -24.0000057220459
    10. 'r' → logprob: -24.0000057220459

Token 817: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.03810012713074684
    2. 'N' → logprob: -3.288100242614746
    3. ' N' → logprob: -9.788100242614746
    4. '(' → logprob: -13.788100242614746
    5. '	N' → logprob: -14.538100242614746
    6. ' (' → logprob: -15.038100242614746
    7. 'range' → logprob: -15.038100242614746
    8. '   ' → logprob: -15.913100242614746
    9. ' range' → logprob: -16.66309928894043
    10. '(
' → logprob: -16.78809928894043

Token 818: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3309871256351471
    2. '):' → logprob: -1.4559870958328247
    3. ':' → logprob: -3.8309872150421143
    4. ':
' → logprob: -4.330986976623535
    5. '():
' → logprob: -4.455986976623535
    6. ')' → logprob: -7.205986976623535
    7. '():' → logprob: -7.330986976623535
    8. '):
' → logprob: -8.830986976623535
    9. '   ' → logprob: -9.205986976623535
    10. ',' → logprob: -9.330986976623535

Token 819: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024515850469470024
    2. ' line' → logprob: -4.274515628814697
    3. ' s' → logprob: -5.399515628814697
    4. '   ' → logprob: -5.774515628814697
    5. '
' → logprob: -7.274515628814697
    6. ' lines' → logprob: -7.399515628814697
    7. ' sets' → logprob: -8.649516105651855
    8. 'line' → logprob: -8.774516105651855
    9. 's' → logprob: -8.774516105651855
    10. '```' → logprob: -8.899516105651855

Token 820: ' a' (ID: 261)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.1848697662353516
    2. ' parts' → logprob: -1.4348697662353516
    3. ' line' → logprob: -1.5598697662353516
    4. 'parts' → logprob: -2.3098697662353516
    5. ' elems' → logprob: -2.6848697662353516
    6. 's' → logprob: -3.9348697662353516
    7. 'vals' → logprob: -4.309869766235352
    8. 'le' → logprob: -4.809869766235352
    9. ' s' → logprob: -5.559869766235352
    10. 'arr' → logprob: -5.684869766235352

Token 821: ',b' (ID: 17568)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7133787870407104
    2. ' =' → logprob: -0.7133787870407104
    3. '=set' → logprob: -4.96337890625
    4. '=line' → logprob: -4.96337890625
    5. 'line' → logprob: -5.83837890625
    6. '_line' → logprob: -7.08837890625
    7. 's' → logprob: -7.96337890625
    8. '=int' → logprob: -8.08837890625
    9. '=list' → logprob: -8.08837890625
    10. 'set' → logprob: -8.21337890625

Token 822: ',c' (ID: 22261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10034404695034027
    2. ' =' → logprob: -2.350343942642212
    3. ',' → logprob: -9.975343704223633
    4. '=input' → logprob: -10.100343704223633
    5. '=line' → logprob: -10.350343704223633
    6. '=list' → logprob: -12.350343704223633
    7. '=set' → logprob: -12.600343704223633
    8. ' ' → logprob: -13.475343704223633
    9. '=int' → logprob: -13.850343704223633
    10. '=sys' → logprob: -13.850343704223633

Token 823: ',d' (ID: 26159)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16172060370445251
    2. ' =' → logprob: -2.1617205142974854
    3. ',d' → logprob: -4.1617207527160645
    4. '=line' → logprob: -4.2867207527160645
    5. ',' → logprob: -6.0367207527160645
    6. ',line' → logprob: -7.2867207527160645
    7. '=input' → logprob: -7.4117207527160645
    8. 'd' → logprob: -7.4117207527160645
    9. ',input' → logprob: -9.661720275878906
    10. '=set' → logprob: -9.661720275878906

Token 824: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1428598314523697
    2. ' =' → logprob: -2.017859935760498
    3. '=line' → logprob: -9.14285945892334
    4. '=sys' → logprob: -10.76785945892334
    5. ',' → logprob: -11.14285945892334
    6. ',e' → logprob: -11.51785945892334
    7. ' ' → logprob: -11.76785945892334
    8. '=list' → logprob: -12.01785945892334
    9. '=input' → logprob: -12.39285945892334
    10. 'e' → logprob: -13.14285945892334

Token 825: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.00044795009307563305
    2. ' map' → logprob: -7.750447750091553
    3. 'sys' → logprob: -11.000448226928711
    4. '[' → logprob: -15.000448226928711
    5. ' sys' → logprob: -16.12544822692871
    6. '(map' → logprob: -16.25044822692871
    7. '	map' → logprob: -17.50044822692871
    8. 'list' → logprob: -17.50044822692871
    9. '   ' → logprob: -19.12544822692871
    10. '
' → logprob: -19.50044822692871

Token 826: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -9.698698704596609e-05
    2. 'int' → logprob: -9.250097274780273
    3. '(str' → logprob: -14.750097274780273
    4. '(float' → logprob: -15.250097274780273
    5. '(lambda' → logprob: -16.500097274780273
    6. '=int' → logprob: -16.875097274780273
    7. ' int' → logprob: -17.125097274780273
    8. '(' → logprob: -17.250097274780273
    9. '[int' → logprob: -18.125097274780273
    10. '<int' → logprob: -18.250097274780273

Token 827: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.03758165240287781
    2. ',' → logprob: -3.4125816822052
    3. 'sys' → logprob: -6.662581443786621
    4. ')' → logprob: -6.912581443786621
    5. '=sys' → logprob: -7.037581443786621
    6. ' sys' → logprob: -7.912581443786621
    7. '(),' → logprob: -8.662581443786621
    8. '	sys' → logprob: -9.287581443786621
    9. ')(' → logprob: -10.287581443786621
    10. '
' → logprob: -10.662581443786621

Token 828: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -3.5597102396423e-05
    2. ' sys' → logprob: -10.250035285949707
    3. 'map' → logprob: -17.250036239624023
    4. '(sys' → logprob: -17.750036239624023
    5. '=sys' → logprob: -18.500036239624023
    6. 'input' → logprob: -19.000036239624023
    7. '	sys' → logprob: -19.125036239624023
    8. '
' → logprob: -20.125036239624023
    9. '   ' → logprob: -21.375036239624023
    10. ')' → logprob: -21.750036239624023

Token 829: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.848420551046729e-05
    2. 'stdin' → logprob: -10.1250581741333
    3. '(stdin' → logprob: -11.8750581741333
    4. '.stdout' → logprob: -12.0000581741333
    5. '.readline' → logprob: -12.3750581741333
    6. '.' → logprob: -15.0000581741333
    7. '=sys' → logprob: -16.000059127807617
    8. '().' → logprob: -16.125059127807617
    9. 'sys' → logprob: -16.250059127807617
    10. '.argv' → logprob: -16.375059127807617

Token 830: '.readline' (ID: 74673)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.9827952980995178
    2. '.readline' → logprob: -1.232795238494873
    3. 'sys' → logprob: -1.857795238494873
    4. '=sys' → logprob: -2.107795238494873
    5. '.sys' → logprob: -3.482795238494873
    6. '().' → logprob: -4.607795238494873
    7. '.stdin' → logprob: -4.732795238494873
    8. '.' → logprob: -5.232795238494873
    9. '	sys' → logprob: -6.857795238494873
    10. ' sys' → logprob: -7.482795238494873

Token 831: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.583550642360933e-05
    2. '()' → logprob: -10.250036239624023
    3. ' ().' → logprob: -15.375036239624023
    4. '())' → logprob: -16.125036239624023
    5. '   ' → logprob: -18.375036239624023
    6. '()
' → logprob: -18.500036239624023
    7. '.strip' → logprob: -18.750036239624023
    8. '.' → logprob: -18.750036239624023
    9. ')' → logprob: -18.875036239624023
    10. '.split' → logprob: -19.000036239624023

Token 832: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.6953616738319397
    2. 'strip' → logprob: -0.6953616738319397
    3. 'read' → logprob: -6.195361614227295
    4. 'rstrip' → logprob: -8.695362091064453
    5. 'decode' → logprob: -13.195362091064453
    6. ' strip' → logprob: -13.320362091064453
    7. '().' → logprob: -14.195362091064453
    8. ' split' → logprob: -14.445362091064453
    9. '.readline' → logprob: -14.570362091064453
    10. 'sys' → logprob: -15.695362091064453

Token 833: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2621210813522339
    2. '())
' → logprob: -1.5121210813522339
    3. ')' → logprob: -4.762121200561523
    4. ')
' → logprob: -6.762121200561523
    5. '()' → logprob: -7.887121200561523
    6. '(' → logprob: -11.012121200561523
    7. '()
' → logprob: -11.012121200561523
    8. '())
' → logprob: -11.262121200561523
    9. ' ())' → logprob: -12.387121200561523
    10. '())

' → logprob: -12.512121200561523

Token 834: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00028183520771563053
    2. '       ' → logprob: -9.500282287597656
    3. '<|end|>' → logprob: -9.875282287597656
    4. '   ' → logprob: -10.000282287597656
    5. 'le' → logprob: -10.625282287597656
    6. '
' → logprob: -10.750282287597656
    7. '            
' → logprob: -11.125282287597656
    8. ',' → logprob: -11.250282287597656
    9. ' leaves' → logprob: -11.625282287597656
    10. '	       ' → logprob: -11.625282287597656

Token 835: ' s' (ID: 265)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.20171670615673065
    2. ' leaves' → logprob: -2.201716661453247
    3. '           ' → logprob: -2.701716661453247
    4. 's' (adapté à ' s') → logprob: -5.951716899871826
    5. '   ' → logprob: -6.826716899871826
    6. 'leaf' → logprob: -7.451716899871826
    7. ' le' → logprob: -8.576716423034668
    8. '       ' → logprob: -8.701716423034668
    9. ' s' → logprob: -9.576716423034668
    10. 'se' → logprob: -9.576716423034668

Token 836: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2485297918319702
    2. 'et' → logprob: -1.3735297918319702
    3. '=' → logprob: -1.4985297918319702
    4. '=set' → logprob: -2.1235299110412598
    5. 'ets' → logprob: -2.3735299110412598
    6. 's' → logprob: -4.74852991104126
    7. '_set' → logprob: -4.87352991104126
    8. 'set' → logprob: -5.37352991104126
    9. '_sets' → logprob: -6.99852991104126
    10. '_=' → logprob: -7.49852991104126

Token 837: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.14580705761909485
    2. '{' → logprob: -2.0208070278167725
    3. ' set' → logprob: -6.020807266235352
    4. ' {' → logprob: -7.520807266235352
    5. '{s' → logprob: -9.645807266235352
    6. 'fro' → logprob: -10.895807266235352
    7. '   ' → logprob: -11.270807266235352
    8. ' ' → logprob: -11.520807266235352
    9. '{
' → logprob: -11.895807266235352
    10. '=set' → logprob: -11.895807266235352

Token 838: '()
' (ID: 1234)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.3359108567237854
    2. '(range' → logprob: -1.9609107971191406
    3. '()
' → logprob: -2.2109107971191406
    4. '(i' → logprob: -4.460910797119141
    5. '()' → logprob: -4.585910797119141
    6. '((' → logprob: -5.210910797119141
    7. '(x' → logprob: -5.585910797119141
    8. '(filter' → logprob: -6.085910797119141
    9. '()

' → logprob: -7.460910797119141
    10. '([(' → logprob: -7.960910797119141

Token 839: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21290545165538788
    2. '       ' → logprob: -2.9629054069519043
    3. ' if' → logprob: -2.9629054069519043
    4. '<|end|>' → logprob: -3.5879054069519043
    5. ' for' → logprob: -4.587905406951904
    6. ' ' → logprob: -4.712905406951904
    7. '{' → logprob: -5.087905406951904
    8. 'if' → logprob: -5.337905406951904
    9. '	       ' → logprob: -5.587905406951904
    10. '(s' → logprob: -5.837905406951904

Token 840: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.23991213738918304
    2. ' if' → logprob: -2.2399120330810547
    3. 'for' → logprob: -2.7399120330810547
    4. '           ' → logprob: -3.3649120330810547
    5. ' for' → logprob: -4.989912033081055
    6. 's' → logprob: -7.614912033081055
    7. '
' → logprob: -8.864912033081055
    8. '	if' → logprob: -9.614912033081055
    9. '       ' → logprob: -10.114912033081055
    10. ' s' → logprob: -10.489912033081055

Token 841: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.464347173576243e-05
    2. ' a' → logprob: -10.37503433227539
    3. '(a' → logprob: -13.62503433227539
    4. 'c' → logprob: -14.00003433227539
    5. 'b' → logprob: -14.37503433227539
    6. '1' → logprob: -15.50003433227539
    7. '	a' → logprob: -16.00003433227539
    8. '0' → logprob: -16.12503433227539
    9. 'd' → logprob: -16.37503433227539
    10. '   ' → logprob: -16.87503433227539

Token 842: '==' (ID: 560)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3598838150501251
    2. ':' → logprob: -1.6098837852478027
    3. '==' → logprob: -2.8598837852478027
    4. ' >' → logprob: -4.234883785247803
    5. ' ==' → logprob: -4.484883785247803
    6. ':
' → logprob: -4.609883785247803
    7. '!=' → logprob: -5.234883785247803
    8. ' !=' → logprob: -5.984883785247803
    9. '   ' → logprob: -8.359884262084961
    10. '1' → logprob: -8.609884262084961

Token 843: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015456913970410824
    2. ' ' → logprob: -6.5015459060668945
    3. '0' → logprob: -10.376545906066895
    4. '   ' → logprob: -11.751545906066895
    5. '
' → logprob: -14.064045906066895
    6. '=' → logprob: -14.189045906066895
    7. '2' → logprob: -14.876545906066895
    8. '(' → logprob: -14.876545906066895
    9. '>' → logprob: -15.376545906066895
    10. '```' → logprob: -15.814045906066895

Token 844: ':' (ID: 25)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4751525819301605
    2. ':' → logprob: -0.9751526117324829
    3. ' s' → logprob: -7.600152492523193
    4. ':s' → logprob: -7.725152492523193
    5. '       ' → logprob: -9.975152969360352
    6. ' and' → logprob: -10.975152969360352
    7. '{s' → logprob: -11.100152969360352
    8. 's' → logprob: -11.350152969360352
    9. ':
' → logprob: -11.975152969360352
    10. '           ' → logprob: -11.975152969360352

Token 845: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.11283199489116669
    2. 's' → logprob: -2.2378320693969727
    3. '<|end|>' → logprob: -12.987832069396973
    4. ' ' → logprob: -13.487832069396973
    5. ' ' → logprob: -13.862832069396973
    6. '               ' → logprob: -14.112832069396973
    7. '
' → logprob: -14.112832069396973
    8. '{s' → logprob: -14.237832069396973
    9. '0' → logprob: -14.362832069396973
    10. '	s' → logprob: -14.612832069396973

Token 846: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00034142236108891666
    2. '.' → logprob: -8.000341415405273
    3. ' .' → logprob: -12.250341415405273
    4. 'add' → logprob: -14.000341415405273
    5. '.update' → logprob: -15.250341415405273
    6. '
' → logprob: -17.875341415405273
    7. '.insert' → logprob: -18.500341415405273
    8. '.
' → logprob: -18.500341415405273
    9. ')add' → logprob: -18.750341415405273
    10. '   ' → logprob: -18.875341415405273

Token 847: '('' (ID: 706)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05825160816311836
    2. '0' → logprob: -2.9332516193389893
    3. '(' → logprob: -6.30825138092041
    4. ''' → logprob: -6.68325138092041
    5. ''a' → logprob: -9.43325138092041
    6. '('' → logprob: -10.05825138092041
    7. '"' → logprob: -10.30825138092041
    8. ' ' → logprob: -10.43325138092041
    9. 'a' → logprob: -10.55825138092041
    10. '4' → logprob: -11.05825138092041

Token 848: 'a' (ID: 64)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.45520830154418945
    2. ''a' → logprob: -1.2052083015441895
    3. 'A' → logprob: -3.3302083015441895
    4. '1' → logprob: -4.7052083015441895
    5. 'a' → logprob: -4.9552083015441895
    6. ''' → logprob: -4.9552083015441895
    7. '"A' → logprob: -6.0802083015441895
    8. '0' → logprob: -6.7052083015441895
    9. ''w' → logprob: -7.7052083015441895
    10. ''M' → logprob: -7.9552083015441895

Token 849: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.26613539457321167
    2. '')
' → logprob: -1.6411354541778564
    3. 'a' → logprob: -3.3911354541778564
    4. 'A' → logprob: -6.266135215759277
    5. '1' → logprob: -6.891135215759277
    6. '')
' → logprob: -7.141135215759277
    7. '0' → logprob: -7.266135215759277
    8. '');' → logprob: -7.391135215759277
    9. ''a' → logprob: -8.141135215759277
    10. 'b' → logprob: -8.516135215759277

Token 850: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23511278629302979
    2. '       ' → logprob: -2.2351126670837402
    3. 'if' → logprob: -2.4851126670837402
    4. '
' → logprob: -4.48511266708374
    5. '   ' → logprob: -6.11011266708374
    6. '<|end|>' → logprob: -6.48511266708374
    7. '           ' → logprob: -6.86011266708374
    8. ' 
' → logprob: -7.11011266708374
    9. '        
' → logprob: -7.61011266708374
    10. '        ' → logprob: -8.485113143920898

Token 851: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.038548946380615234
    2. 'if' (adapté à ' if') → logprob: -3.2885489463806152
    3. ' ' → logprob: -7.788548946380615
    4. ' 
' → logprob: -10.038549423217773
    5. '           ' → logprob: -10.538549423217773
    6. ' ' → logprob: -12.288549423217773
    7. '            ' → logprob: -12.538549423217773
    8. '       ' → logprob: -13.163549423217773
    9. '<|end|>' → logprob: -13.288549423217773
    10. ' i' → logprob: -13.288549423217773

Token 852: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.34847328066825867
    2. 'b' → logprob: -1.223473310470581
    3. ' c' → logprob: -11.84847354888916
    4. 'c' → logprob: -12.22347354888916
    5. ' d' → logprob: -12.47347354888916
    6. 'd' → logprob: -12.72347354888916
    7. ' ' → logprob: -13.22347354888916
    8. 'a' → logprob: -13.72347354888916
    9. '	b' → logprob: -13.72347354888916
    10. ' ' → logprob: -13.84847354888916

Token 853: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08895517885684967
    2. ' ==' → logprob: -2.4639551639556885
    3. '=' → logprob: -11.46395492553711
    4. '[' → logprob: -13.46395492553711
    5. ')==' → logprob: -13.58895492553711
    6. ' ' → logprob: -14.71395492553711
    7. '==
' → logprob: -14.71395492553711
    8. '=='' → logprob: -14.96395492553711
    9. ')' → logprob: -15.21395492553711
    10. ' ' → logprob: -15.46395492553711

Token 854: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.746380237629637e-05
    2. ' ' → logprob: -9.250097274780273
    3. ''' → logprob: -14.375097274780273
    4. ''s' → logprob: -15.500097274780273
    5. ''b' → logprob: -15.875097274780273
    6. '2' → logprob: -16.125097274780273
    7. ''a' → logprob: -16.500097274780273
    8. ' '' → logprob: -17.000097274780273
    9. 'True' → logprob: -17.500097274780273
    10. ' True' → logprob: -17.750097274780273

Token 855: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013713110238313675
    2. ' s' → logprob: -6.876371383666992
    3. ' :' → logprob: -8.501371383666992
    4. ':
' → logprob: -9.876371383666992
    5. 's' → logprob: -10.501371383666992
    6. ':s' → logprob: -10.501371383666992
    7. ' a' → logprob: -12.251371383666992
    8. ''s' → logprob: -12.751371383666992
    9. ' ' → logprob: -13.251371383666992
    10. '==' → logprob: -13.251371383666992

Token 856: ' s' (ID: 265)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.1229307651519775
    2. ''s' → logprob: -1.2479307651519775
    3. ' s' → logprob: -1.4979307651519775
    4. ' '' → logprob: -2.4979307651519775
    5. ''a' → logprob: -2.7479307651519775
    6. 's' → logprob: -4.372930526733398
    7. ''b' → logprob: -5.497930526733398
    8. ' a' → logprob: -8.247930526733398
    9. 'a' → logprob: -8.247930526733398
    10. ' ' → logprob: -8.372930526733398

Token 857: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.023332830518484116
    2. '.' → logprob: -3.7733328342437744
    3. ' .' → logprob: -9.398332595825195
    4. 'add' → logprob: -12.523332595825195
    5. '           ' → logprob: -15.648332595825195
    6. ' add' → logprob: -16.023332595825195
    7. '   ' → logprob: -16.148332595825195
    8. '.Add' → logprob: -16.273332595825195
    9. '.
' → logprob: -16.523332595825195
    10. ':add' → logprob: -16.898332595825195

Token 858: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.009807559661567211
    2. '(' → logprob: -4.634807586669922
    3. ' ('' → logprob: -10.634807586669922
    4. ''' → logprob: -11.259807586669922
    5. '(
' → logprob: -11.759807586669922
    6. ' (' → logprob: -12.759807586669922
    7. ''s' → logprob: -13.509807586669922
    8. ' '' → logprob: -13.634807586669922
    9. '(('' → logprob: -14.259807586669922
    10. '("' → logprob: -15.009807586669922

Token 859: 'b' (ID: 65)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''b' → logprob: -0.0005452881450764835
    2. ' '' → logprob: -8.000545501708984
    3. ''' → logprob: -9.000545501708984
    4. 'b' → logprob: -9.625545501708984
    5. ''a' → logprob: -12.125545501708984
    6. ''d' → logprob: -12.500545501708984
    7. ''s' → logprob: -12.500545501708984
    8. ''e' → logprob: -13.000545501708984
    9. ''o' → logprob: -13.875545501708984
    10. '('' → logprob: -14.375545501708984

Token 860: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.07998061925172806
    2. '')' → logprob: -2.5799806118011475
    3. ')
' → logprob: -7.454980850219727
    4. '           ' → logprob: -8.454980850219727
    5. ' ')
' → logprob: -8.579980850219727
    6. ')' → logprob: -9.454980850219727
    7. ''' → logprob: -11.579980850219727
    8. '       ' → logprob: -11.579980850219727
    9. '')
' → logprob: -12.204980850219727
    10. ''
' → logprob: -13.204980850219727

Token 861: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006969464011490345
    2. '       ' → logprob: -7.875697135925293
    3. '          ' → logprob: -9.000697135925293
    4. ' if' → logprob: -9.875697135925293
    5. '		' → logprob: -10.250697135925293
    6. 'if' → logprob: -11.000697135925293
    7. '        ' → logprob: -11.125697135925293
    8. '
' → logprob: -11.250697135925293
    9. '            ' → logprob: -11.250697135925293
    10. '         ' → logprob: -11.500697135925293

Token 862: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5401294231414795
    2. ' if' → logprob: -1.0401294231414795
    3. 'if' (adapté à ' if') → logprob: -2.7901294231414795
    4. '       ' → logprob: -6.040129661560059
    5. '   ' → logprob: -10.290129661560059
    6. '		' → logprob: -10.790129661560059
    7. '          ' → logprob: -11.415129661560059
    8. '	if' → logprob: -11.415129661560059
    9. ' ' → logprob: -11.540129661560059
    10. ' ' → logprob: -11.790129661560059

Token 863: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.22542232275009155
    2. 'c' → logprob: -1.6004223823547363
    3. '	c' → logprob: -12.850421905517578
    4. '   ' → logprob: -12.975421905517578
    5. '(c' → logprob: -13.475421905517578
    6. ' ' → logprob: -13.975421905517578
    7. ')c' → logprob: -14.100421905517578
    8. 'd' → logprob: -15.600421905517578
    9. '  ' → logprob: -15.600421905517578
    10. '1' → logprob: -15.600421905517578

Token 864: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00018113377154804766
    2. ' ==' → logprob: -8.750181198120117
    3. '=' → logprob: -10.875181198120117
    4. ')==' → logprob: -14.000181198120117
    5. '==
' → logprob: -14.125181198120117
    6. '=='' → logprob: -14.250181198120117
    7. ']==' → logprob: -14.875181198120117
    8. '[' → logprob: -15.125181198120117
    9. '===' → logprob: -15.375181198120117
    10. '```' → logprob: -15.625181198120117

Token 865: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.125005722045898
    3. 'c' → logprob: -15.625005722045898
    4. '0' → logprob: -16.5000057220459
    5. '```' → logprob: -16.6250057220459
    6. '   ' → logprob: -17.7500057220459
    7. 'True' → logprob: -18.3125057220459
    8. '==' → logprob: -18.5625057220459
    9. 'x' → logprob: -18.6875057220459
    10. '
' → logprob: -18.7500057220459

Token 866: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010083634406328201
    2. ' s' → logprob: -4.8850836753845215
    3. ' if' → logprob: -6.5100836753845215
    4. 'if' → logprob: -8.010083198547363
    5. '):' → logprob: -8.260083198547363
    6. ':
' → logprob: -9.135083198547363
    7. ' :' → logprob: -9.510083198547363
    8. ')' → logprob: -9.885083198547363
    9. ':s' → logprob: -10.260083198547363
    10. '   ' → logprob: -10.385083198547363

Token 867: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.12794554233551025
    2. 's' → logprob: -2.1279454231262207
    3. 'if' → logprob: -7.752945423126221
    4. 'c' → logprob: -8.127945899963379
    5. ' if' → logprob: -9.127945899963379
    6. ' c' → logprob: -9.502945899963379
    7. '1' → logprob: -10.627945899963379
    8. '   ' → logprob: -11.127945899963379
    9. '       ' → logprob: -11.127945899963379
    10. '           ' → logprob: -11.377945899963379

Token 868: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0010306654730811715
    2. 'add' → logprob: -7.751030445098877
    3. '.' → logprob: -7.876030445098877
    4. '==' → logprob: -9.126030921936035
    5. ':' → logprob: -9.626030921936035
    6. ':add' → logprob: -11.001030921936035
    7. ' .' → logprob: -11.626030921936035
    8. '=' → logprob: -12.751030921936035
    9. 'if' → logprob: -12.751030921936035
    10. '           ' → logprob: -12.876030921936035

Token 869: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.09501577168703079
    2. ''' → logprob: -2.72001576423645
    3. ''s' → logprob: -3.72001576423645
    4. '(' → logprob: -8.595015525817871
    5. ''d' → logprob: -9.220015525817871
    6. ''x' → logprob: -9.845015525817871
    7. '1' → logprob: -9.970015525817871
    8. 'c' → logprob: -10.345015525817871
    9. ''C' → logprob: -10.345015525817871
    10. ' ' → logprob: -10.845015525817871

Token 870: 'c' (ID: 66)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.17999267578125
    2. 'c' → logprob: -1.80499267578125
    3. ''s' → logprob: -10.17999267578125
    4. ''d' → logprob: -10.17999267578125
    5. ' '' → logprob: -10.55499267578125
    6. ')c' → logprob: -10.80499267578125
    7. ' c' → logprob: -10.92999267578125
    8. ''b' → logprob: -11.05499267578125
    9. ' ' → logprob: -11.17999267578125
    10. '   ' → logprob: -11.30499267578125

Token 871: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.01798229105770588
    2. '')' → logprob: -4.267982482910156
    3. '           ' → logprob: -5.642982482910156
    4. ')
' → logprob: -8.767982482910156
    5. ' ')
' → logprob: -10.017982482910156
    6. '       ' → logprob: -11.142982482910156
    7. '')
' → logprob: -11.142982482910156
    8. '   ' → logprob: -11.392982482910156
    9. 'if' → logprob: -11.642982482910156
    10. ''' → logprob: -11.767982482910156

Token 872: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022325708996504545
    2. ' if' → logprob: -6.877232551574707
    3. '       ' → logprob: -7.752232551574707
    4. 'if' → logprob: -8.002232551574707
    5. '		' → logprob: -8.502232551574707
    6. '```' → logprob: -10.127232551574707
    7. '
' → logprob: -10.252232551574707
    8. '   ' → logprob: -10.377232551574707
    9. '          ' → logprob: -10.377232551574707
    10. '	       ' → logprob: -10.752232551574707

Token 873: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5832715034484863
    2. ' if' → logprob: -0.8332715034484863
    3. '           ' → logprob: -4.958271503448486
    4. '       ' → logprob: -8.583271026611328
    5. '	if' → logprob: -10.458271026611328
    6. '
' → logprob: -10.458271026611328
    7. '		' → logprob: -11.333271026611328
    8. '   ' → logprob: -11.583271026611328
    9. ' ' → logprob: -12.583271026611328
    10. 'd' → logprob: -12.833271026611328

Token 874: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.029750604182481766
    2. ' d' → logprob: -3.5297505855560303
    3. '   ' → logprob: -16.40475082397461
    4. '	d' → logprob: -16.77975082397461
    5. '(d' → logprob: -18.27975082397461
    6. ' ' → logprob: -18.27975082397461
    7. '
' → logprob: -18.40475082397461
    8. '  ' → logprob: -19.52975082397461
    9. '       ' → logprob: -19.77975082397461
    10. ')d' → logprob: -19.90475082397461

Token 875: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -2.0219828002154827e-05
    2. ' ==' → logprob: -11.125020027160645
    3. '=' → logprob: -12.500020027160645
    4. '==
' → logprob: -14.500020027160645
    5. ']==' → logprob: -14.750020027160645
    6. ')==' → logprob: -14.875020027160645
    7. '()==' → logprob: -15.375020027160645
    8. '```' → logprob: -17.12502098083496
    9. '===' → logprob: -17.25002098083496
    10. '=='' → logprob: -17.75002098083496

Token 876: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2127087504486553e-05
    2. ' ' → logprob: -10.875021934509277
    3. '==' → logprob: -13.000021934509277
    4. '0' → logprob: -15.625021934509277
    5. '```' → logprob: -15.625021934509277
    6. 'd' → logprob: -15.750021934509277
    7. '   ' → logprob: -16.250022888183594
    8. '(' → logprob: -16.500022888183594
    9. '
' → logprob: -16.625022888183594
    10. ' ==' → logprob: -17.062522888183594

Token 877: ':' (ID: 25)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01283664908260107
    2. ' ==' → logprob: -4.387836456298828
    3. ':' → logprob: -8.262836456298828
    4. '1' → logprob: -10.512836456298828
    5. '=' → logprob: -11.637836456298828
    6. ')==' → logprob: -11.637836456298828
    7. '   ' → logprob: -12.387836456298828
    8. 'if' → logprob: -12.637836456298828
    9. '()==' → logprob: -12.762836456298828
    10. '(' → logprob: -13.012836456298828

Token 878: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09343266487121582
    2. ' s' → logprob: -2.968432664871216
    3. 'd' → logprob: -3.343432664871216
    4. ' d' → logprob: -6.218432426452637
    5. '       ' → logprob: -8.218432426452637
    6. '   ' → logprob: -9.468432426452637
    7. '           ' → logprob: -9.593432426452637
    8. '1' → logprob: -10.218432426452637
    9. ''s' → logprob: -10.843432426452637
    10. ' ' → logprob: -11.968432426452637

Token 879: '.add' (ID: 1950)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.030423244461417198
    2. '.add' → logprob: -3.530423164367676
    3. ' ==' → logprob: -7.905423164367676
    4. 'add' → logprob: -8.280423164367676
    5. '=' → logprob: -10.530423164367676
    6. '```' → logprob: -11.905423164367676
    7. '           ' → logprob: -12.905423164367676
    8. '   ' → logprob: -13.655423164367676
    9. '.' → logprob: -13.655423164367676
    10. '.append' → logprob: -13.780423164367676

Token 880: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.6501656770706177
    2. '(' → logprob: -0.7751656770706177
    3. '==' → logprob: -4.650165557861328
    4. '1' → logprob: -4.900165557861328
    5. '=' → logprob: -8.150165557861328
    6. '#' → logprob: -10.900165557861328
    7. ' ==' → logprob: -11.025165557861328
    8. ''' → logprob: -11.150165557861328
    9. '
' → logprob: -11.275165557861328
    10. 'd' → logprob: -11.650165557861328

Token 881: 'd' (ID: 67)
  Prédit: ''d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''d' → logprob: -0.16699224710464478
    2. 'd' → logprob: -1.9169921875
    3. '1' → logprob: -5.0419921875
    4. ')d' → logprob: -9.4169921875
    5. ''' → logprob: -9.6669921875
    6. ' d' → logprob: -10.2919921875
    7. '"d' → logprob: -10.4169921875
    8. '')' → logprob: -11.2919921875
    9. '
' → logprob: -11.5419921875
    10. '`' → logprob: -11.9169921875

Token 882: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3537077009677887
    2. ')
' → logprob: -1.3537076711654663
    3. '')
' → logprob: -4.228707790374756
    4. '           ' → logprob: -4.478707790374756
    5. '')' → logprob: -4.603707790374756
    6. '       ' → logprob: -5.728707790374756
    7. ')')
' → logprob: -8.728707313537598
    8. '   ' → logprob: -8.853707313537598
    9. ')'
' → logprob: -10.728707313537598
    10. '```' → logprob: -11.228707313537598

Token 883: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.728507936000824
    2. 'le' → logprob: -1.3535079956054688
    3. '           ' → logprob: -1.3535079956054688
    4. '   ' → logprob: -7.603507995605469
    5. '
' → logprob: -9.603507995605469
    6. '(le' → logprob: -10.603507995605469
    7. ' leaves' → logprob: -11.228507995605469
    8. '               ' → logprob: -11.478507995605469
    9. '         ' → logprob: -11.603507995605469
    10. '	' → logprob: -11.853507995605469

Token 884: ' leaves' (ID: 15657)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.07318777590990067
    2. '           ' → logprob: -2.698187828063965
    3. ' leaves' → logprob: -6.073187828063965
    4. '       ' → logprob: -7.323187828063965
    5. '   ' → logprob: -8.823187828063965
    6. 'leaf' → logprob: -9.823187828063965
    7. ' le' → logprob: -10.448187828063965
    8. '               ' → logprob: -11.448187828063965
    9. '(le' → logprob: -11.448187828063965
    10. '          ' → logprob: -11.823187828063965

Token 885: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -2.935296834039036e-06
    2. 's' → logprob: -13.25000286102295
    3. '_' → logprob: -15.00000286102295
    4. '_s' → logprob: -15.12500286102295
    5. '_lists' → logprob: -16.625003814697266
    6. '.append' → logprob: -16.625003814697266
    7. ' _' → logprob: -16.750003814697266
    8. '_set' → logprob: -16.750003814697266
    9. 'sets' → logprob: -17.125003814697266
    10. '_se' → logprob: -17.750003814697266

Token 886: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.4378848391061183e-05
    2. '.' → logprob: -11.375014305114746
    3. '.ap' → logprob: -13.375014305114746
    4. '.app' → logprob: -13.875014305114746
    5. ' .' → logprob: -15.500014305114746
    6. '.push' → logprob: -17.250015258789062
    7. 'append' → logprob: -17.500015258789062
    8. '.add' → logprob: -17.625015258789062
    9. '​.' → logprob: -17.875015258789062
    10. ').' → logprob: -18.125015258789062

Token 887: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0002120038407156244
    2. 's' → logprob: -8.500211715698242
    3. '(' → logprob: -11.750211715698242
    4. '(
' → logprob: -14.500211715698242
    5. ' s' → logprob: -16.875211715698242
    6. ' (' → logprob: -17.500211715698242
    7. '{s' → logprob: -18.375211715698242
    8. '((' → logprob: -20.000211715698242
    9. ')s' → logprob: -20.500211715698242
    10. ')' → logprob: -20.500211715698242

Token 888: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00501327496021986
    2. ')
' → logprob: -5.630013465881348
    3. '       ' → logprob: -6.630013465881348
    4. '<|end|>' → logprob: -9.880013465881348
    5. '
' → logprob: -11.130013465881348
    6. '   ' → logprob: -12.380013465881348
    7. ')return' → logprob: -12.380013465881348
    8. '')' → logprob: -12.505013465881348
    9. '<|end|>' → logprob: -12.630013465881348
    10. '")' → logprob: -13.255013465881348

Token 889: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06926625967025757
    2. '   ' → logprob: -2.8192663192749023
    3. 'memo' → logprob: -5.569266319274902
    4. '
' → logprob: -6.194266319274902
    5. 'dp' → logprob: -7.194266319274902
    6. '```' → logprob: -8.319266319274902
    7. 'count' → logprob: -9.069266319274902
    8. 'mem' → logprob: -9.694266319274902
    9. '        
' → logprob: -10.069266319274902
    10. ' memo' → logprob: -10.194266319274902

Token 890: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' (adapté à ' memo') → logprob: -0.001932205050252378
    2. '       ' → logprob: -6.751932144165039
    3. '   ' → logprob: -7.626932144165039
    4. 'dp' → logprob: -9.251932144165039
    5. ' memo' → logprob: -9.376932144165039
    6. 'mem' → logprob: -9.876932144165039
    7. 'result' → logprob: -10.876932144165039
    8. 'counts' → logprob: -12.126932144165039
    9. '
' → logprob: -12.501932144165039
    10. '```' → logprob: -12.626932144165039

Token 891: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7388497591018677
    2. ' =' → logprob: -0.7388497591018677
    3. '={}' → logprob: -3.113849639892578
    4. '={' → logprob: -8.613849639892578
    5. '={}
' → logprob: -9.988849639892578
    6. ' ={' → logprob: -11.988849639892578
    7. '={},' → logprob: -12.738849639892578
    8. '{}' → logprob: -12.863849639892578
    9. '=[]' → logprob: -13.363849639892578
    10. '   ' → logprob: -13.488849639892578

Token 892: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -1.9361264946837764e-07
    2. '{}
' → logprob: -15.75
    3. '{}

' → logprob: -18.5
    4. '{})' → logprob: -18.75
    5. 'dict' → logprob: -19.625
    6. '={}' → logprob: -20.25
    7. ' {}' → logprob: -21.375
    8. '{}\' → logprob: -22.25
    9. '{},' → logprob: -22.375
    10. '{' → logprob: -22.75

Token 893: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14417117834091187
    2. 'dp' → logprob: -2.1441712379455566
    3. '   ' → logprob: -4.269171237945557
    4. 'count' → logprob: -6.894171237945557
    5. ' dp' → logprob: -6.894171237945557
    6. 'result' → logprob: -8.019170761108398
    7. '	dp' → logprob: -8.269170761108398
    8. 'counts' → logprob: -9.019170761108398
    9. '```' → logprob: -9.269170761108398
    10. '_dp' → logprob: -10.019170761108398

Token 894: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.000622845720499754
    2. 'count' → logprob: -8.125622749328613
    3. 'result' → logprob: -8.750622749328613
    4. 'counts' → logprob: -9.250622749328613
    5. 'res' → logprob: -10.500622749328613
    6. 'counter' → logprob: -11.125622749328613
    7. 'ways' → logprob: -11.375622749328613
    8. ' dp' → logprob: -12.000622749328613
    9. 'cnt' → logprob: -12.000622749328613
    10. '   ' → logprob: -13.250622749328613

Token 895: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407880425453186
    2. '=' → logprob: -0.9740787744522095
    3. '=count' → logprob: -13.474079132080078
    4. ' =
' → logprob: -16.474079132080078
    5. '=
' → logprob: -16.849079132080078
    6. '＝' → logprob: -17.099079132080078
    7. ' ' → logprob: -17.474079132080078
    8. '=create' → logprob: -17.849079132080078
    9. ' =)' → logprob: -18.349079132080078
    10. '=}' → logprob: -18.599079132080078

Token 896: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0002613358374219388
    2. ' count' → logprob: -8.250261306762695
    3. '(count' → logprob: -22.375261306762695
    4. '   ' → logprob: -22.875261306762695
    5. '	count' → logprob: -24.000261306762695
    6. 'counts' → logprob: -24.250261306762695
    7. 'counter' → logprob: -24.500261306762695
    8. '.count' → logprob: -24.750261306762695
    9. '=count' → logprob: -24.875261306762695
    10. '[count' → logprob: -25.000261306762695

Token 897: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.9361264946837764e-07
    2. 'ways' → logprob: -16.5
    3. '\' → logprob: -18.125
    4. '_count' → logprob: -18.75
    5. 'Ways' → logprob: -19.125
    6. '```' → logprob: -20.375
    7. 'count' → logprob: -20.625
    8. '_way' → logprob: -20.625
    9. ' ways' → logprob: -20.875
    10. '_
' → logprob: -21.875

Token 898: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.000897885300219059
    2. '_' → logprob: -7.1258978843688965
    3. 'Ways' → logprob: -10.000898361206055
    4. 'count' → logprob: -10.375898361206055
    5. 'WAYS' → logprob: -11.500898361206055
    6. ' ways' → logprob: -12.750898361206055
    7. 'way' → logprob: -13.750898361206055
    8. '```' → logprob: -13.875898361206055
    9. 'dp' → logprob: -14.125898361206055
    10. '-' → logprob: -15.250898361206055

Token 899: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -1.8670179997570813e-05
    2. '(' → logprob: -11.125019073486328
    3. 'ways' → logprob: -13.625019073486328
    4. 'node' → logprob: -14.000019073486328
    5. 'count' → logprob: -14.375019073486328
    6. '(n' → logprob: -14.625019073486328
    7. ' (' → logprob: -14.875019073486328
    8. '=node' → logprob: -16.125019073486328
    9. '[node' → logprob: -16.500019073486328
    10. '(count' → logprob: -16.750019073486328

Token 900: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002495991066098213
    2. ',left' → logprob: -6.002495765686035
    3. ' ,' → logprob: -11.377495765686035
    4. 'left' → logprob: -12.127495765686035
    5. '(left' → logprob: -13.752495765686035
    6. ',right' → logprob: -13.752495765686035
    7. ' left' → logprob: -14.627495765686035
    8. '   ' → logprob: -15.502495765686035
    9. ')' → logprob: -15.752495765686035
    10. ',node' → logprob: -16.37749671936035

Token 901: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.061969365924596786
    2. ' left' → logprob: -2.81196928024292
    3. '(left' → logprob: -14.561969757080078
    4. '   ' → logprob: -14.686969757080078
    5. '[left' → logprob: -15.436969757080078
    6. '	left' → logprob: -15.811969757080078
    7. '    ' → logprob: -16.186969757080078
    8. ',left' → logprob: -16.311969757080078
    9. '           ' → logprob: -16.811969757080078
    10. '       ' → logprob: -16.811969757080078

Token 902: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002997120900545269
    2. ',right' → logprob: -8.125299453735352
    3. ' ,' → logprob: -12.625299453735352
    4. 'right' → logprob: -14.750299453735352
    5. '[right' → logprob: -18.00029945373535
    6. ',
' → logprob: -18.12529945373535
    7. ',r' → logprob: -18.75029945373535
    8. ' right' → logprob: -18.87529945373535
    9. '```' → logprob: -18.87529945373535
    10. '   ' → logprob: -19.12529945373535

Token 903: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.008615988306701183
    2. ' right' → logprob: -4.758615970611572
    3. '   ' → logprob: -15.00861644744873
    4. '	right' → logprob: -15.25861644744873
    5. '[right' → logprob: -15.50861644744873
    6. ' ' → logprob: -15.63361644744873
    7. ',right' → logprob: -15.88361644744873
    8. '       ' → logprob: -16.008615493774414
    9. '(right' → logprob: -16.133615493774414
    10. '           ' → logprob: -17.258615493774414

Token 904: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4418171455617994e-05
    2. 'le' → logprob: -10.250044822692871
    3. ' ,' → logprob: -11.875044822692871
    4. '(le' → logprob: -13.500044822692871
    5. '       ' → logprob: -15.125044822692871
    6. ',
' → logprob: -16.375043869018555
    7. ',m' → logprob: -17.125043869018555
    8. ',l' → logprob: -17.125043869018555
    9. '   ' → logprob: -17.375043869018555
    10. ',n' → logprob: -17.500043869018555

Token 905: ' leaves' (ID: 15657)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.020556017756462097
    2. ' leaves' → logprob: -3.8955559730529785
    3. 'leaf' → logprob: -11.895556449890137
    4. 'memo' → logprob: -12.145556449890137
    5. '(le' → logprob: -14.770556449890137
    6. '   ' → logprob: -15.020556449890137
    7. 'Leaves' → logprob: -15.645556449890137
    8. '_le' → logprob: -15.770556449890137
    9. '```' → logprob: -15.770556449890137
    10. '       ' → logprob: -16.14555549621582

Token 906: '_sets' (ID: 56707)
  Prédit: '_sets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sets' → logprob: -5.512236498361744e-07
    2. 'sets' → logprob: -15.250000953674316
    3. '_' → logprob: -16.75
    4. 'ets' → logprob: -16.75
    5. '_set' → logprob: -17.0
    6. 's' → logprob: -17.25
    7. '_lists' → logprob: -17.25
    8. '```' → logprob: -17.5
    9. ' sets' → logprob: -17.875
    10. 'Sets' → logprob: -18.5

Token 907: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005243002902716398
    2. ',m' → logprob: -5.255242824554443
    3. ' ,' → logprob: -11.630243301391602
    4. ',
' → logprob: -16.8802433013916
    5. ',s' → logprob: -17.3802433013916
    6. ',module' → logprob: -17.3802433013916
    7. ',n' → logprob: -17.5052433013916
    8. 'm' → logprob: -17.6302433013916
    9. '   ' → logprob: -17.6302433013916
    10. ',p' → logprob: -17.8802433013916

Token 908: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.005234475247561932
    2. ' memo' → logprob: -5.255234241485596
    3. 'mem' → logprob: -14.630234718322754
    4. 'm' → logprob: -15.755234718322754
    5. ' ' → logprob: -18.005233764648438
    6. 'memory' → logprob: -18.380233764648438
    7. ')' → logprob: -18.505233764648438
    8. '.memo' → logprob: -19.130233764648438
    9. 'Memo' → logprob: -19.505233764648438
    10. '   ' → logprob: -19.630233764648438

Token 909: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39110124111175537
    2. ')
' → logprob: -1.1411012411117554
    3. '       ' → logprob: -5.891101360321045
    4. '   ' → logprob: -6.766101360321045
    5. ')
' → logprob: -9.141100883483887
    6. '
' → logprob: -9.141100883483887
    7. ')

' → logprob: -10.641100883483887
    8. ',' → logprob: -10.891100883483887
    9. '    
' → logprob: -12.266100883483887
    10. '        
' → logprob: -12.266100883483887

Token 910: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009816419333219528
    2. 'result' → logprob: -5.259816646575928
    3. '```' → logprob: -6.259816646575928
    4. 'target' → logprob: -7.509816646575928
    5. 'output' → logprob: -8.13481616973877
    6. 'total' → logprob: -8.25981616973877
    7. ',' → logprob: -8.63481616973877
    8. 'next' → logprob: -8.63481616973877
    9. 'tokens' → logprob: -8.88481616973877
    10. 'print' → logprob: -8.88481616973877

Token 911: ' full' (ID: 3149)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6597802042961121
    2. 'max' → logprob: -1.7847802639007568
    3. 'print' → logprob: -1.9097802639007568
    4. 'result' → logprob: -2.409780263900757
    5. 'answer' → logprob: -3.909780263900757
    6. 'count' → logprob: -4.409780025482178
    7. 'all' → logprob: -4.534780025482178
    8. 'ans' → logprob: -4.659780025482178
    9. 'res' → logprob: -4.784780025482178
    10. 'counts' → logprob: -5.909780025482178

Token 912: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.4340498447418213
    2. '_sets' → logprob: -1.5590498447418213
    3. '_count' → logprob: -2.6840498447418213
    4. ' =' → logprob: -3.5590498447418213
    5. 'set' → logprob: -3.6840498447418213
    6. '_counts' → logprob: -4.559049606323242
    7. 'sets' → logprob: -5.934049606323242
    8. '_line' → logprob: -6.559049606323242
    9. '_result' → logprob: -6.684049606323242
    10. '_results' → logprob: -7.059049606323242

Token 913: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1271369308233261
    2. ' =' → logprob: -2.1271369457244873
    3. '=set' → logprob: -8.502137184143066
    4. '=f' → logprob: -12.877137184143066
    5. '={'' → logprob: -13.502137184143066
    6. '={' → logprob: -14.627137184143066
    7. 'fro' → logprob: -15.002137184143066
    8. 's' → logprob: -15.127137184143066
    9. 'set' → logprob: -15.502137184143066
    10. '=s' → logprob: -15.752137184143066

Token 914: ' fro' (ID: 16956)
  Prédit: 'fro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fro' → logprob: -0.0006938508013263345
    2. '{'' → logprob: -7.6256937980651855
    3. ' fro' → logprob: -8.500694274902344
    4. '{' → logprob: -14.000694274902344
    5. '{"' → logprob: -14.375694274902344
    6. ' {'' → logprob: -14.500694274902344
    7. 'set' → logprob: -14.750694274902344
    8. 'f' → logprob: -17.125694274902344
    9. 'fr' → logprob: -17.750694274902344
    10. 'fo' → logprob: -17.875694274902344

Token 915: 'zens' (ID: 33107)
  Prédit: 'zens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zens' → logprob: -0.0016166195273399353
    2. 'zes' → logprob: -6.751616477966309
    3. 'set' → logprob: -7.751616477966309
    4. 'zen' → logprob: -12.251616477966309
    5. 'sets' → logprob: -12.501616477966309
    6. 'es' → logprob: -13.376616477966309
    7. 'sz' → logprob: -14.001616477966309
    8. 'setz' → logprob: -14.001616477966309
    9. 'zent' → logprob: -14.126616477966309
    10. 'ens' → logprob: -14.251616477966309

Token 916: 'et' (ID: 292)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.3869718909263611
    2. 'et' → logprob: -1.1369719505310059
    3. 'erset' → logprob: -10.511971473693848
    4. 'es' → logprob: -10.761971473693848
    5. '{' → logprob: -11.636971473693848
    6. 'Set' → logprob: -11.761971473693848
    7. 's' → logprob: -11.761971473693848
    8. ' set' → logprob: -12.136971473693848
    9. 'est' → logprob: -12.386971473693848
    10. 'zet' → logprob: -12.511971473693848

Token 917: '(['' (ID: 14113)
  Prédit: '({''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({'' → logprob: -0.0015159345930442214
    2. '(['' → logprob: -6.501515865325928
    3. '(('' → logprob: -11.751516342163086
    4. '('' → logprob: -12.626516342163086
    5. '{'' → logprob: -13.001516342163086
    6. '({' → logprob: -15.751516342163086
    7. '(' → logprob: -16.501516342163086
    8. '(set' → logprob: -18.001516342163086
    9. '['' → logprob: -19.626516342163086
    10. '([' → logprob: -20.376516342163086

Token 918: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.2200749754119897e-06
    2. ''a' → logprob: -13.250001907348633
    3. 'abcd' → logprob: -15.000001907348633
    4. ' a' → logprob: -16.750001907348633
    5. '{'' → logprob: -17.375001907348633
    6. '	a' → logprob: -20.000001907348633
    7. 'а' → logprob: -20.750001907348633
    8. '{' → logprob: -20.875001907348633
    9. 'ab' → logprob: -20.875001907348633
    10. ''' → logprob: -21.000001907348633

Token 919: '','' (ID: 4074)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.7144067883491516
    2. '','' → logprob: -0.7144067883491516
    3. ',' → logprob: -4.214406967163086
    4. ',b' → logprob: -5.339406967163086
    5. ','' → logprob: -6.839406967163086
    6. 'b' → logprob: -8.589406967163086
    7. ''' → logprob: -8.714406967163086
    8. ''b' → logprob: -10.964406967163086
    9. '',"' → logprob: -11.839406967163086
    10. '',
' → logprob: -13.589406967163086

Token 920: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.320199877838604e-07
    2. ''b' → logprob: -15.0
    3. ''' → logprob: -17.625
    4. ' b' → logprob: -19.125
    5. ',b' → logprob: -23.125
    6. '
' → logprob: -23.75
    7. '<b' → logprob: -24.25
    8. '	b' → logprob: -24.25
    9. '>b' → logprob: -24.625
    10. '"' → logprob: -24.75

Token 921: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.0014928421005606651
    2. '',' → logprob: -6.751492977142334
    3. ','' → logprob: -8.251492500305176
    4. ''' → logprob: -10.001492500305176
    5. 'b' → logprob: -11.876492500305176
    6. ''b' → logprob: -12.376492500305176
    7. ',' → logprob: -12.626492500305176
    8. ',b' → logprob: -13.876492500305176
    9. '',"' → logprob: -14.501492500305176
    10. '",'' → logprob: -15.626492500305176

Token 922: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.040939003229141235
    2. ''' → logprob: -3.2909390926361084
    3. 'b' → logprob: -5.915938854217529
    4. ''b' → logprob: -8.790939331054688
    5. ''s' → logprob: -10.540939331054688
    6. ''d' → logprob: -11.415939331054688
    7. 'd' → logprob: -12.915939331054688
    8. ''t' → logprob: -14.165939331054688
    9. ''x' → logprob: -14.665939331054688
    10. '')' → logprob: -14.915939331054688

Token 923: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.003825848689302802
    2. '',' → logprob: -5.628825664520264
    3. 'd' → logprob: -8.753826141357422
    4. ''d' → logprob: -10.253826141357422
    5. ''' → logprob: -11.003826141357422
    6. ',d' → logprob: -11.628826141357422
    7. '',
' → logprob: -13.128826141357422
    8. ','' → logprob: -13.253826141357422
    9. '',"' → logprob: -13.378826141357422
    10. '","' → logprob: -14.628826141357422

Token 924: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3306015716807451e-05
    2. ''d' → logprob: -11.25001335144043
    3. ' d' → logprob: -15.37501335144043
    4. ''])' → logprob: -18.75001335144043
    5. '
' → logprob: -19.25001335144043
    6. ''' → logprob: -19.25001335144043
    7. '']' → logprob: -19.62501335144043
    8. '	d' → logprob: -20.37501335144043
    9. '_d' → logprob: -22.25001335144043
    10. ')d' → logprob: -22.87501335144043

Token 925: ''])
' (ID: 16733)
  Prédit: ''])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''])' → logprob: -0.125038743019104
    2. ''])
' → logprob: -2.2500386238098145
    3. '])' → logprob: -4.5000386238098145
    4. '])
' → logprob: -7.1250386238098145
    5. ''])

' → logprob: -9.375039100646973
    6. ')' → logprob: -10.000039100646973
    7. '']' → logprob: -10.500039100646973
    8. '"])' → logprob: -10.750039100646973
    9. ''])
' → logprob: -10.875039100646973
    10. '')' → logprob: -11.750039100646973

Token 926: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.250070720911026
    2. 'count' → logprob: -2.250070810317993
    3. 'print' → logprob: -3.000070810317993
    4. 'total' → logprob: -3.625070810317993
    5. '
' → logprob: -3.750070810317993
    6. 'result' → logprob: -4.875070571899414
    7. ',' → logprob: -6.250070571899414
    8. 'for' → logprob: -6.500070571899414
    9. 'counts' → logprob: -7.375070571899414
    10. '   ' → logprob: -7.500070571899414

Token 927: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.02796192280948162
    2. '       ' → logprob: -4.527961730957031
    3. 'count' → logprob: -4.527961730957031
    4. 'total' → logprob: -5.527961730957031
    5. 'if' → logprob: -7.152961730957031
    6. 'result' → logprob: -7.902961730957031
    7. 'answer' → logprob: -8.402961730957031
    8. ' print' → logprob: -8.527961730957031
    9. 'ways' → logprob: -8.652961730957031
    10. 'max' → logprob: -9.652961730957031

Token 928: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.20232157409191132
    2. 'dp' → logprob: -1.7023215293884277
    3. 'sum' → logprob: -7.952321529388428
    4. '(sum' → logprob: -8.077322006225586
    5. ' dp' → logprob: -8.577322006225586
    6. '(' → logprob: -9.952322006225586
    7. '(m' → logprob: -12.077322006225586
    8. '(len' → logprob: -13.827322006225586
    9. '	dp' → logprob: -14.452322006225586
    10. ' sum' → logprob: -14.952322006225586

Token 929: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.1270233392715454
    2. '[' → logprob: -2.127023220062256
    3. ').' → logprob: -9.752023696899414
    4. '.' → logprob: -11.502023696899414
    5. '(full' → logprob: -11.752023696899414
    6. ' .' → logprob: -12.127023696899414
    7. '].' → logprob: -13.002023696899414
    8. ')[' → logprob: -13.127023696899414
    9. ')' → logprob: -13.377023696899414
    10. '```' → logprob: -13.502023696899414

Token 930: '(full' (ID: 59745)
  Prédit: '(full'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(full' → logprob: -4.320199877838604e-07
    2. 'full' → logprob: -15.75
    3. '(f' → logprob: -15.875
    4. '(' → logprob: -16.125
    5. ' (' → logprob: -17.875
    6. ')(' → logprob: -18.375
    7. ' full' → logprob: -18.625
    8. ')' → logprob: -18.625
    9. '	full' → logprob: -19.25
    10. '(final' → logprob: -19.875

Token 931: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.023262249305844307
    2. 'set' → logprob: -3.7732622623443604
    3. 'full' → logprob: -11.898262023925781
    4. 'fro' → logprob: -12.023262023925781
    5. 'erset' → logprob: -14.148262023925781
    6. ')set' → logprob: -14.273262023925781
    7. 's' → logprob: -14.648262023925781
    8. 'Set' → logprob: -14.773262023925781
    9. 'et' → logprob: -15.398262023925781
    10. '_sets' → logprob: -15.398262023925781

Token 932: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1888679839321412e-05
    2. ' ,' → logprob: -11.500021934509277
    3. '(),' → logprob: -11.625021934509277
    4. '),' → logprob: -13.375021934509277
    5. '0' → logprob: -14.000021934509277
    6. '},' → logprob: -15.875021934509277
    7. ')' → logprob: -17.00002098083496
    8. ',None' → logprob: -17.00002098083496
    9. '(' → logprob: -17.12502098083496
    10. ',
' → logprob: -17.25002098083496

Token 933: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. ')' → logprob: -20.125003814697266
    4. '   ' → logprob: -20.500003814697266
    5. ' ' → logprob: -22.250003814697266
    6. '       ' → logprob: -22.375003814697266
    7. '00' → logprob: -22.625003814697266
    8. '۰' → logprob: -23.250003814697266
    9. '  ' → logprob: -23.500003814697266
    10. '           ' → logprob: -23.750003814697266

Token 934: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. ')' → logprob: -16.000001907348633
    4. '"' → logprob: -17.625001907348633
    5. '   ' → logprob: -17.750001907348633
    6. '00' → logprob: -18.250001907348633
    7. '       ' → logprob: -19.125001907348633
    8. ''' → logprob: -19.250001907348633
    9. '1' → logprob: -19.250001907348633
    10. '-' → logprob: -19.500001907348633

Token 935: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04860871285200119
    2. '))' → logprob: -3.0486087799072266
    3. ' )' → logprob: -11.173608779907227
    4. '})' → logprob: -13.048608779907227
    5. '())' → logprob: -13.048608779907227
    6. ')))' → logprob: -14.173608779907227
    7. ')}' → logprob: -14.298608779907227
    8. ' ))' → logprob: -14.423608779907227
    9. ')
' → logprob: -14.923608779907227
    10. '))
' → logprob: -15.173608779907227

Token 936: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 937: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.16022889316082
    2. '__' → logprob: -1.9102288484573364
    3. '_' → logprob: -12.410228729248047
    4. '_name' → logprob: -15.035228729248047
    5. '___' → logprob: -15.910228729248047
    6. '/__' → logprob: -16.410228729248047
    7. 'name' → logprob: -16.910228729248047
    8. '.__' → logprob: -17.035228729248047
    9. ' ' → logprob: -17.035228729248047
    10. ' _' → logprob: -17.160228729248047

Token 938: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07590096443891525
    2. '[' → logprob: -3.7009010314941406
    3. '==' → logprob: -4.450901031494141
    4. '.' → logprob: -4.450901031494141
    5. '.__' → logprob: -4.450901031494141
    6. ' ==' → logprob: -5.325901031494141
    7. '__.__' → logprob: -5.950901031494141
    8. '_' → logprob: -6.200901031494141
    9. '__.' → logprob: -6.450901031494141
    10. '__[' → logprob: -7.700901031494141

Token 939: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.45848218582978e-06
    2. '==' → logprob: -13.50000286102295
    3. '__.__' → logprob: -14.12500286102295
    4. '____' → logprob: -16.250001907348633
    5. '__
' → logprob: -16.375001907348633
    6. '___' → logprob: -16.875001907348633
    7. '__.' → logprob: -17.750001907348633
    8. 'name' → logprob: -17.875001907348633
    9. ' ==' → logprob: -18.375001907348633
    10. '```' → logprob: -18.500001907348633

Token 940: '=="' (ID: 24027)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.21382947266101837
    2. '__' → logprob: -1.963829517364502
    3. '=="' → logprob: -3.588829517364502
    4. ' ==' → logprob: -3.838829517364502
    5. '=='' → logprob: -5.838829517364502
    6. '==
' → logprob: -9.588829040527344
    7. '=' → logprob: -10.338829040527344
    8. '===' → logprob: -11.588829040527344
    9. '_' → logprob: -12.213829040527344
    10. '[' → logprob: -12.588829040527344

Token 941: '__' (ID: 771)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.18006636202335358
    2. ''' → logprob: -1.9300663471221924
    3. '__' → logprob: -3.9300663471221924
    4. ' "__' → logprob: -12.680066108703613
    5. 'main' → logprob: -14.305066108703613
    6. ' '__' → logprob: -16.18006706237793
    7. '/__' → logprob: -16.55506706237793
    8. ' __' → logprob: -16.68006706237793
    9. '"name' → logprob: -16.93006706237793
    10. '.__' → logprob: -17.30506706237793

Token 942: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.5048530030981055e-06
    2. 'name' → logprob: -13.500001907348633
    3. 'built' → logprob: -17.375001907348633
    4. '_main' → logprob: -17.375001907348633
    5. ' main' → logprob: -17.625001907348633
    6. '(main' → logprob: -19.375001907348633
    7. 'm' → logprob: -20.875001907348633
    8. '.main' → logprob: -20.875001907348633
    9. 'builtin' → logprob: -20.875001907348633
    10. '	main' → logprob: -21.125001907348633

Token 943: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.20426231622695923
    2. '__' → logprob: -1.7042622566223145
    3. '__':
' → logprob: -6.2042622566223145
    4. '__["' → logprob: -8.329262733459473
    5. '```' → logprob: -8.829262733459473
    6. '__.__' → logprob: -9.579262733459473
    7. '__
' → logprob: -9.579262733459473
    8. '.__' → logprob: -10.079262733459473
    9. '.' → logprob: -10.329262733459473
    10. '<|end|>' → logprob: -10.579262733459473

Token 944: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.6193707585334778
    2. '	main' → logprob: -1.119370698928833
    3. '   ' → logprob: -2.119370698928833
    4. ' main' → logprob: -4.244370937347412
    5. '_main' → logprob: -7.869370937347412
    6. '	Main' → logprob: -9.369370460510254
    7. '(main' → logprob: -9.869370460510254
    8. '<|end|>' → logprob: -10.119370460510254
    9. '
' → logprob: -10.369370460510254
    10. '    
' → logprob: -10.494370460510254

Token 945: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.0
    3. '	main' → logprob: -18.75
    4. '   ' → logprob: -22.125
    5. '_main' → logprob: -23.5
    6. '(main' → logprob: -23.625
    7. '
' → logprob: -23.75
    8. '.main' → logprob: -24.5
    9. 'import' → logprob: -24.5
    10. 'ma' → logprob: -25.125

Token 946: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 944
Tokens correctement prédits (1ère position, stricte): 372
Tokens correctement prédits (1ère position, avec adaptation): 417
Tokens correctement prédits (top 10): 792
Précision stricte (1ère position): 39.41%
Précision adaptée (1ère position): 44.17%
Précision (top 10): 83.90%
================================================================================
