================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
def modinv(a, m):
    # Extended Euclidean Algorithm for modular inverse
    g, x, y = 1, 0, 1
    r0, r1 = m, a
    s0, s1 = 1, 0
    while r1 != 0:
        q = r0 // r1
        r0, r1 = r1, r0 - q * r1
        s0, s1 = s1, s0 - q * s1
    if r0 != 1:
        return None
    return s0 % m

def decrypt(text, a, b):
    a_inv = modinv(a, 26)
    res = []
    for c in text:
        if 'a' <= c <= 'z':
            val = ord(c) - ord('a')
            orig = (a_inv * (val - b)) % 26
            res.append(chr(orig + ord('a')))
        else:
            res.append(c)
    return ''.join(res)

def contains_keyword(s):
    return 'that' in s or 'this' in s

n = int(sys.stdin.readline())
lines = [sys.stdin.readline().rstrip('\n') for _ in range(n)]

# Possible alpha values coprime with 26
alphas = [a for a in range(1, 26) if a % 2 != 0 and a % 13 != 0]

for line in lines:
    for a in alphas:
        for b in range(26):
            dec = decrypt(line, a, b)
            if contains_keyword(dec):
                print(dec)
                break
        else:
            continue
        break
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' mod' (ID: 1812)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014825213700532913
    2. ' process' → logprob: -4.889825344085693
    3. ' ' → logprob: -6.014825344085693
    4. ' main' → logprob: -7.264825344085693
    5. ' func' → logprob: -7.264825344085693
    6. ' space' → logprob: -7.264825344085693
    7. ' my' → logprob: -8.139824867248535
    8. ' read' → logprob: -8.264824867248535
    9. ' function' → logprob: -8.514824867248535
    10. ' foo' → logprob: -8.764824867248535

Token 5: 'inv' (ID: 31086)
  Prédit: 'ule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.16014480590820312
    2. 'el' → logprob: -2.535144805908203
    3. '_' → logprob: -3.035144805908203
    4. ' ule' → logprob: -4.910144805908203
    5. ' ' → logprob: -5.410144805908203
    6. 'ul' → logprob: -6.160144805908203
    7. 'uel' → logprob: -6.785144805908203
    8. 'u' → logprob: -6.910144805908203
    9. 'e' → logprob: -7.535144805908203
    10. '(' → logprob: -7.535144805908203

Token 6: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013965214602649212
    2. '_' → logprob: -4.388965129852295
    3. ' (' → logprob: -7.138965129852295
    4. '(a' → logprob: -8.138965606689453
    5. '(x' → logprob: -9.888965606689453
    6. '(token' → logprob: -10.138965606689453
    7. '(_' → logprob: -10.388965606689453
    8. '_(' → logprob: -10.513965606689453
    9. '```' → logprob: -10.513965606689453
    10. '(s' → logprob: -10.638965606689453

Token 7: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002624086628202349
    2. ' ,' → logprob: -8.500262260437012
    3. ',a' → logprob: -10.500262260437012
    4. ')' → logprob: -10.625262260437012
    5. ',b' → logprob: -12.750262260437012
    6. ',n' → logprob: -13.875262260437012
    7. ',
' → logprob: -14.375262260437012
    8. ',

' → logprob: -14.375262260437012
    9. ',)' → logprob: -14.750262260437012
    10. '‌,' → logprob: -15.500262260437012

Token 8: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.25216785073280334
    2. ' m' → logprob: -1.502167820930481
    3. 'b' → logprob: -8.752167701721191
    4. ' b' → logprob: -9.752167701721191
    5. 'n' → logprob: -12.252167701721191
    6. '```' → logprob: -12.252167701721191
    7. 'mod' → logprob: -12.502167701721191
    8. ' ' → logprob: -13.002167701721191
    9. ' mod' → logprob: -13.127167701721191
    10. ' n' → logprob: -13.502167701721191

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.054941076785326004
    2. ')' → logprob: -2.929941177368164
    3. '):
' → logprob: -10.179941177368164
    4. ':' → logprob: -11.804941177368164
    5. ' ):' → logprob: -13.054941177368164
    6. ''):' → logprob: -13.179941177368164
    7. ')：' → logprob: -13.554941177368164
    8. ')=' → logprob: -13.804941177368164
    9. '```' → logprob: -13.804941177368164
    10. '*' → logprob: -14.179941177368164

Token 10: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3090788424015045
    2. '   ' → logprob: -1.4340788125991821
    3. '):' → logprob: -4.684078693389893
    4. ' :' → logprob: -4.684078693389893
    5. '```' → logprob: -6.309078693389893
    6. ':return' → logprob: -7.059078693389893
    7. ' return' → logprob: -7.184078693389893
    8. ',' → logprob: -7.184078693389893
    9. ':
' → logprob: -7.684078693389893
    10. '    ' → logprob: -7.809078693389893

Token 11: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018704519607126713
    2. ' for' → logprob: -7.251870632171631
    3. '       ' → logprob: -8.001870155334473
    4. 'try' → logprob: -8.626870155334473
    5. '```' → logprob: -8.876870155334473
    6. '    ' → logprob: -9.001870155334473
    7. ' try' → logprob: -9.501870155334473
    8. '``' → logprob: -10.251870155334473
    9. ' ' → logprob: -10.376870155334473
    10. '`' → logprob: -10.501870155334473

Token 12: ' Extended' (ID: 63995)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0718389749526978
    2. ' return' → logprob: -1.4468389749526978
    3. ' def' → logprob: -2.196838855743408
    4. ' a' → logprob: -2.196838855743408
    5. ' for' → logprob: -2.571838855743408
    6. ' try' → logprob: -3.696838855743408
    7. 'def' → logprob: -4.196838855743408
    8. ' pass' → logprob: -4.196838855743408
    9. ' """' → logprob: -4.446838855743408
    10. '    ' → logprob: -4.571838855743408

Token 13: ' Eu' (ID: 10237)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1824859380722046
    2. '_' → logprob: -1.6824859380722046
    3. 'def' → logprob: -2.057486057281494
    4. ' def' → logprob: -2.182486057281494
    5. ' _' → logprob: -2.557486057281494
    6. '   ' → logprob: -2.682486057281494
    7. 'Euler' → logprob: -3.307486057281494
    8. ' Eu' → logprob: -3.932486057281494
    9. 'Eu' → logprob: -4.182486057281494
    10. '```' → logprob: -5.182486057281494

Token 14: 'clidean' (ID: 116188)
  Prédit: 'clid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clid' → logprob: -0.3934885561466217
    2. 'clidean' → logprob: -1.2684885263442993
    3. 'cl' → logprob: -3.268488645553589
    4. 'l' → logprob: -6.64348840713501
    5. '   ' → logprob: -6.64348840713501
    6. 's' → logprob: -6.89348840713501
    7. ' cl' → logprob: -7.14348840713501
    8. '```' → logprob: -7.89348840713501
    9. 'c' → logprob: -8.143488883972168
    10. '  ' → logprob: -8.393488883972168

Token 15: ' Algorithm' (ID: 78719)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1258276253938675
    2. 'Algorithm' → logprob: -2.6258275508880615
    3. ' Algorithm' → logprob: -3.7508275508880615
    4. '_algorithm' → logprob: -4.625827789306641
    5. ' algorithm' → logprob: -5.500827789306641
    6. '<|end|>' → logprob: -5.750827789306641
    7. '  ' → logprob: -6.500827789306641
    8. '_' → logprob: -7.500827789306641
    9. '<|end|>' → logprob: -7.750827789306641
    10. '  

' → logprob: -7.875827789306641

Token 16: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7243684530258179
    2. ':' → logprob: -1.3493684530258179
    3. '```' → logprob: -2.7243685722351074
    4. '   ' → logprob: -3.0993685722351074
    5. ' ' → logprob: -3.3493685722351074
    6. '  
' → logprob: -3.5993685722351074
    7. '``' → logprob: -4.474368572235107
    8. '\' → logprob: -4.599368572235107
    9. 'def' → logprob: -4.599368572235107
    10. ' :' → logprob: -4.599368572235107

Token 17: ' modular' (ID: 61198)
  Prédit: ' computing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' computing' → logprob: -0.464539110660553
    2. ' finding' → logprob: -1.8395390510559082
    3. ' calculating' → logprob: -2.464539051055908
    4. '   ' → logprob: -2.964539051055908
    5. ' modular' → logprob: -3.589539051055908
    6. ' gcd' → logprob: -4.339539051055908
    7. ' x' → logprob: -4.339539051055908
    8. ' ' → logprob: -4.589539051055908
    9. '    ' → logprob: -5.839539051055908
    10. ' mod' → logprob: -5.964539051055908

Token 18: ' inverse' (ID: 53743)
  Prédit: '_inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -0.2763996124267578
    2. ' inverse' → logprob: -1.5263996124267578
    3. '_' → logprob: -4.276399612426758
    4. 'inverse' → logprob: -4.776399612426758
    5. '_inv' → logprob: -7.651399612426758
    6. '_in' → logprob: -7.651399612426758
    7. ' _' → logprob: -7.901399612426758
    8. ' inversion' → logprob: -8.651399612426758
    9. ' ' → logprob: -9.026399612426758
    10. '   ' → logprob: -9.526399612426758

Token 19: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0037922859191895
    2. '   ' → logprob: -1.1287922859191895
    3. ':' → logprob: -2.2537922859191895
    4. '  
' → logprob: -3.3787922859191895
    5. '```' → logprob: -3.8787922859191895
    6. '\n' → logprob: -4.0037922859191895
    7. '\' → logprob: -4.0037922859191895
    8. ' 
' → logprob: -4.0037922859191895
    9. 'def' → logprob: -4.2537922859191895
    10. ' ' → logprob: -4.2537922859191895

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7342292070388794
    2. '
' → logprob: -1.4842292070388794
    3. ':' → logprob: -1.7342292070388794
    4. ' ' → logprob: -4.10922908782959
    5. ' 
' → logprob: -4.23422908782959
    6. '\n' → logprob: -4.23422908782959
    7. '\' → logprob: -4.48422908782959
    8. '  
' → logprob: -4.48422908782959
    9. ' :' → logprob: -4.85922908782959
    10. '```' → logprob: -4.85922908782959

Token 21: ' g' (ID: 329)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041703201830387115
    2. '    ' → logprob: -3.791703224182129
    3. '
' → logprob: -5.041703224182129
    4. '```' → logprob: -5.541703224182129
    5. '     
' → logprob: -6.916703224182129
    6. ' ' → logprob: -6.916703224182129
    7. 'def' → logprob: -7.291703224182129
    8. '    
' → logprob: -7.291703224182129
    9. ' 
' → logprob: -7.416703224182129
    10. ' if' → logprob: -7.666703224182129

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039289999403990805
    2. ' ,' → logprob: -7.875392913818359
    3. 't' → logprob: -12.37539291381836
    4. 'a' → logprob: -12.87539291381836
    5. ',a' → logprob: -13.62539291381836
    6. ',g' → logprob: -13.75039291381836
    7. ',t' → logprob: -14.12539291381836
    8. 'e' → logprob: -15.00039291381836
    9. ' ' → logprob: -15.00039291381836
    10. '_,' → logprob: -15.12539291381836

Token 23: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10022003948688507
    2. ' x' → logprob: -2.350219964981079
    3. '	x' → logprob: -12.2252197265625
    4. ' ' → logprob: -12.2252197265625
    5. '   ' → logprob: -12.9752197265625
    6. '_x' → logprob: -14.8502197265625
    7. '```' → logprob: -15.4752197265625
    8. '  ' → logprob: -15.6002197265625
    9. '"x' → logprob: -16.2252197265625
    10. ',x' → logprob: -16.3502197265625

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018910301150754094
    2. ' ,' → logprob: -6.376891136169434
    3. '=' → logprob: -9.001891136169434
    4. ' =' → logprob: -10.501891136169434
    5. ',y' → logprob: -10.626891136169434
    6. ' ' → logprob: -12.251891136169434
    7. ',b' → logprob: -13.501891136169434
    8. ',g' → logprob: -14.001891136169434
    9. '<|end|>' → logprob: -14.251891136169434
    10. '```' → logprob: -14.751891136169434

Token 25: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.023251652717590332
    2. ' y' → logprob: -3.773251533508301
    3. ',y' → logprob: -13.0232515335083
    4. ' ' → logprob: -13.6482515335083
    5. ',' → logprob: -13.8982515335083
    6. '	y' → logprob: -14.5232515335083
    7. 'm' → logprob: -14.8982515335083
    8. 'b' → logprob: -15.0232515335083
    9. '=' → logprob: -15.3982515335083
    10. '   ' → logprob: -16.148252487182617

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018167732283473015
    2. '=' → logprob: -4.018167495727539
    3. ',' → logprob: -11.018167495727539
    4. ' ' → logprob: -15.268167495727539
    5. '<|end|>' → logprob: -15.268167495727539
    6. ' ,' → logprob: -15.518167495727539
    7. ')' → logprob: -15.643167495727539
    8. ' =)' → logprob: -15.768167495727539
    9. ' =
' → logprob: -16.26816749572754
    10. ' =",' → logprob: -17.14316749572754

Token 27: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5492170453071594
    2. ' ' → logprob: -1.5492169857025146
    3. '1' → logprob: -2.9242169857025146
    4. 'extended' → logprob: -3.4242169857025146
    5. 'eg' → logprob: -3.6742169857025146
    6. ' extended' → logprob: -4.049217224121094
    7. 'pow' → logprob: -4.049217224121094
    8. 'mod' → logprob: -4.174217224121094
    9. ' eg' → logprob: -4.674217224121094
    10. ' a' → logprob: -4.924217224121094

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9206402897834778
    2. '0' → logprob: -1.295640230178833
    3. 'a' → logprob: -1.670640230178833
    4. 'm' → logprob: -3.170640230178833
    5. 'pow' → logprob: -3.170640230178833
    6. 'mod' → logprob: -3.545640230178833
    7. 'eg' → logprob: -4.920640468597412
    8. 'extended' → logprob: -5.295640468597412
    9. '(a' → logprob: -5.670640468597412
    10. 'g' → logprob: -6.170640468597412

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024426160380244255
    2. ' ,' → logprob: -3.774426221847534
    3. ' ' → logprob: -7.649425983428955
    4. '<|end|>' → logprob: -7.649425983428955
    5. '0' → logprob: -9.524426460266113
    6. '  ' → logprob: -10.774426460266113
    7. '<|end|>' → logprob: -10.774426460266113
    8. ',,,' → logprob: -10.899426460266113
    9. ',None' → logprob: -11.649426460266113
    10. ',...' → logprob: -11.836926460266113

Token 30: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028048718813806772
    2. ' ' → logprob: -5.877804756164551
    3. '1' → logprob: -16.877805709838867
    4. 'a' → logprob: -17.752805709838867
    5. '۰' → logprob: -17.752805709838867
    6. '<|end|>' → logprob: -18.127805709838867
    7. '```' → logprob: -19.377805709838867
    8. '    ' → logprob: -19.502805709838867
    9. ',' → logprob: -19.752805709838867
    10. '  ' → logprob: -20.002805709838867

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. '1' → logprob: -13.750001907348633
    3. 'a' → logprob: -15.375001907348633
    4. ' ' → logprob: -15.875001907348633
    5. '۰' → logprob: -18.125001907348633
    6. '```' → logprob: -18.625001907348633
    7. 'b' → logprob: -19.812501907348633
    8. '-' → logprob: -20.062501907348633
    9. 'x' → logprob: -20.062501907348633
    10. '[' → logprob: -20.125001907348633

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4301176369190216
    2. '<|end|>' → logprob: -1.3051176071166992
    3. ' ' → logprob: -3.305117607116699
    4. '<|end|>' → logprob: -3.805117607116699
    5. ' ,' → logprob: -5.180117607116699
    6. '0' → logprob: -5.930117607116699
    7. 'def' → logprob: -5.930117607116699
    8. ')' → logprob: -6.180117607116699
    9. '    ' → logprob: -6.805117607116699
    10. '1' → logprob: -7.055117607116699

Token 33: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.25001335144043
    3. '0' → logprob: -14.75001335144043
    4. '<|end|>' → logprob: -19.50001335144043
    5. '  ' → logprob: -20.50001335144043
    6. '۱' → logprob: -20.62501335144043
    7. '```' → logprob: -21.12501335144043
    8. '   ' → logprob: -21.43751335144043
    9. '`' → logprob: -22.12501335144043
    10. '১' → logprob: -22.18751335144043

Token 34: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '0' → logprob: -15.5
    3. ' ' → logprob: -16.625
    4. '۱' → logprob: -19.625
    5. '```' → logprob: -19.625
    6. '' → logprob: -21.0
    7. '१' → logprob: -21.125
    8. '১' → logprob: -21.1875
    9. '``' → logprob: -22.0625
    10. '`' → logprob: -22.25

Token 35: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.7213094234466553
    2. ' while' → logprob: -1.9713094234466553
    3. '   ' → logprob: -2.0963094234466553
    4. ',' → logprob: -2.3463094234466553
    5. 'def' → logprob: -2.5963094234466553
    6. ' if' → logprob: -2.7213094234466553
    7. 'while' → logprob: -2.7213094234466553
    8. 'g' → logprob: -2.9713094234466553
    9. ' =' → logprob: -3.3463094234466553
    10. '=' → logprob: -3.5963094234466553

Token 37: ' r' (ID: 428)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2311382293701172
    2. 'g' → logprob: -1.7311382293701172
    3. 'a' → logprob: -1.8561382293701172
    4. '   ' → logprob: -2.106138229370117
    5. '<|end|>' → logprob: -2.106138229370117
    6. 'x' → logprob: -3.356138229370117
    7. ' a' → logprob: -4.731138229370117
    8. '<|end|>' → logprob: -4.731138229370117
    9. '=' → logprob: -5.106138229370117
    10. ')' → logprob: -5.231138229370117

Token 38: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10212073475122452
    2. 'e' → logprob: -3.1021206378936768
    3. ' =' → logprob: -3.7271206378936768
    4. '=' → logprob: -4.352120876312256
    5. 'a' → logprob: -5.352120876312256
    6. 's' → logprob: -5.477120876312256
    7. ' ,' → logprob: -5.727120876312256
    8. ' ' → logprob: -7.352120876312256
    9. '0' → logprob: -7.477120876312256
    10. 'u' → logprob: -7.727120876312256

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019372286275029182
    2. ' ,' → logprob: -4.019372463226318
    3. ' =' → logprob: -6.894372463226318
    4. '=' → logprob: -8.89437198638916
    5. ' ' → logprob: -10.39437198638916
    6. ',r' → logprob: -10.64437198638916
    7. 's' → logprob: -12.51937198638916
    8. ',s' → logprob: -12.64437198638916
    9. '<|end|>' → logprob: -13.76937198638916
    10. 'e' → logprob: -14.01937198638916

Token 40: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.04241139441728592
    2. 'r' → logprob: -3.2924113273620605
    3. '<|end|>' → logprob: -5.7924113273620605
    4. ' ' → logprob: -7.5424113273620605
    5. '<|end|>' → logprob: -8.167411804199219
    6. ' a' → logprob: -8.917411804199219
    7. ' ' → logprob: -8.917411804199219
    8. '    ' → logprob: -10.042411804199219
    9. 'a' → logprob: -10.167411804199219
    10. '=r' → logprob: -10.292411804199219

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004688692279160023
    2. ' ' → logprob: -6.129688739776611
    3. ' =' → logprob: -6.754688739776611
    4. ',' → logprob: -8.004688262939453
    5. 'a' → logprob: -8.504688262939453
    6. '0' → logprob: -8.629688262939453
    7. '_' → logprob: -8.629688262939453
    8. '=' → logprob: -9.129688262939453
    9. '```' → logprob: -9.129688262939453
    10. '  ' → logprob: -10.254688262939453

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004267865791916847
    2. '=' → logprob: -5.504267692565918
    3. ',' → logprob: -8.754267692565918
    4. ' ' → logprob: -10.504267692565918
    5. ' ,' → logprob: -12.504267692565918
    6. ' ' → logprob: -15.629267692565918
    7. ' =
' → logprob: -15.754267692565918
    8. '  ' → logprob: -16.754268646240234
    9. ' =",' → logprob: -17.379268646240234
    10. ' =
' → logprob: -17.504268646240234

Token 43: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.18934492766857147
    2. ' m' → logprob: -1.814344882965088
    3. 'a' → logprob: -4.689344882965088
    4. ' a' → logprob: -8.064345359802246
    5. '<|end|>' → logprob: -10.439345359802246
    6. '	m' → logprob: -12.189345359802246
    7. ' ' → logprob: -12.439345359802246
    8. '<|end|>' → logprob: -12.689345359802246
    9. ' м' → logprob: -13.064345359802246
    10. ' ' → logprob: -14.564345359802246

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16044986248016357
    2. ' ,' → logprob: -1.9104498624801636
    3. ',
' → logprob: -9.285449981689453
    4. ' ,
' → logprob: -10.160449981689453
    5. ' ' → logprob: -10.285449981689453
    6. ',a' → logprob: -11.535449981689453
    7. ',r' → logprob: -11.535449981689453
    8. '<|end|>' → logprob: -11.660449981689453
    9. ',

' → logprob: -12.160449981689453
    10. ',n' → logprob: -12.410449981689453

Token 45: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07479651272296906
    2. 'a' → logprob: -3.324796438217163
    3. ' ' → logprob: -3.324796438217163
    4. ' ' → logprob: -9.199796676635742
    5. '	a' → logprob: -13.449796676635742
    6. '0' → logprob: -14.199796676635742
    7. '`' → logprob: -14.324796676635742
    8. ' а' → logprob: -14.449796676635742
    9. '```' → logprob: -14.574796676635742
    10. '  ' → logprob: -14.699796676635742

Token 46: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2766021490097046
    2. 'while' → logprob: -2.651602268218994
    3. '   ' → logprob: -2.776602268218994
    4. ' while' → logprob: -3.151602268218994
    5. '    
' → logprob: -3.651602268218994
    6. ' 
' → logprob: -3.901602268218994
    7. '   
' → logprob: -5.526602268218994
    8. ',
' → logprob: -5.776602268218994
    9. 'r' → logprob: -5.901602268218994
    10. '  
' → logprob: -5.901602268218994

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5718227624893188
    2. '
' → logprob: -1.1968227624893188
    3. 'while' → logprob: -2.8218226432800293
    4. ' while' → logprob: -2.9468226432800293
    5. '\n' → logprob: -5.071822643280029
    6. '    
' → logprob: -5.321822643280029
    7. '	while' → logprob: -5.946822643280029
    8. ',' → logprob: -6.571822643280029
    9. 'r' → logprob: -7.196822643280029
    10. ',
' → logprob: -7.196822643280029

Token 48: ' s' (ID: 265)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6725733280181885
    2. ' 
' → logprob: -1.0475733280181885
    3. 'while' → logprob: -2.9225733280181885
    4. ' while' → logprob: -3.1725733280181885
    5. '    
' → logprob: -4.547573089599609
    6. '   ' → logprob: -4.797573089599609
    7. '\n' → logprob: -5.172573089599609
    8. '  
' → logprob: -5.172573089599609
    9. 'r' → logprob: -6.172573089599609
    10. '   
' → logprob: -6.297573089599609

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3160463273525238
    2. ',' → logprob: -1.5660463571548462
    3. ' ,' → logprob: -2.8160462379455566
    4. ' ' → logprob: -6.691046237945557
    5. ' =' → logprob: -7.191046237945557
    6. '1' → logprob: -8.691046714782715
    7. '_,' → logprob: -10.691046714782715
    8. '=' → logprob: -11.066046714782715
    9. '   ' → logprob: -11.816046714782715
    10. 'r' → logprob: -11.941046714782715

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.046087756752967834
    2. ' =' → logprob: -3.7960877418518066
    3. ' ,' → logprob: -3.9210877418518066
    4. '=' → logprob: -5.921087741851807
    5. ' ' → logprob: -9.921088218688965
    6. ',s' → logprob: -10.796088218688965
    7. ' s' → logprob: -12.296088218688965
    8. 's' → logprob: -12.921088218688965
    9. '0' → logprob: -14.046088218688965
    10. '<|end|>' → logprob: -14.421088218688965

Token 51: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01857362873852253
    2. ' s' → logprob: -4.018573760986328
    3. '1' → logprob: -8.143573760986328
    4. ' ' → logprob: -9.143573760986328
    5. '<|end|>' → logprob: -10.893573760986328
    6. '0' → logprob: -13.268573760986328
    7. '  ' → logprob: -13.768573760986328
    8. 't' → logprob: -14.018573760986328
    9. '   ' → logprob: -14.143573760986328
    10. '<|end|>' → logprob: -14.518573760986328

Token 52: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006894043181091547
    2. '1' → logprob: -5.006894111633301
    3. ' =' → logprob: -9.5068941116333
    4. ',' → logprob: -9.8818941116333
    5. '=' → logprob: -9.8818941116333
    6. ' ' → logprob: -14.5068941116333
    7. '<|end|>' → logprob: -14.7568941116333
    8. '_' → logprob: -15.2568941116333
    9. '۰' → logprob: -15.7568941116333
    10. '=None' → logprob: -16.256893157958984

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2573765218257904
    2. '=' → logprob: -2.0073764324188232
    3. ',' → logprob: -2.3823764324188232
    4. ' ,' → logprob: -8.382376670837402
    5. ' ' → logprob: -11.132376670837402
    6. '<|end|>' → logprob: -13.007376670837402
    7. ' =
' → logprob: -14.507376670837402
    8. '.' → logprob: -14.632376670837402
    9. 's' → logprob: -14.632376670837402
    10. ')' → logprob: -14.632376670837402

Token 54: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003243666607886553
    2. '0' → logprob: -5.753243446350098
    3. ' ' → logprob: -9.628243446350098
    4. '01' → logprob: -17.378244400024414
    5. '```' → logprob: -17.378244400024414
    6. '   ' → logprob: -17.628244400024414
    7. '۱' → logprob: -17.815744400024414
    8. '    ' → logprob: -18.565744400024414
    9. '  ' → logprob: -18.628244400024414
    10. '`' → logprob: -18.753244400024414

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11282410472631454
    2. '0' → logprob: -2.2378242015838623
    3. ' ' → logprob: -13.487824440002441
    4. '01' → logprob: -15.987824440002441
    5. '```' → logprob: -16.612823486328125
    6. '۱' → logprob: -16.925323486328125
    7. '۰' → logprob: -16.987823486328125
    8. '   ' → logprob: -17.987823486328125
    9. '' → logprob: -17.987823486328125
    10. '１' → logprob: -18.050323486328125

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01458264421671629
    2. ' ,' → logprob: -4.264582633972168
    3. ',s' → logprob: -8.639582633972168
    4. '   ' → logprob: -9.014582633972168
    5. ' s' → logprob: -10.389582633972168
    6. ',
' → logprob: -10.514582633972168
    7. '<|end|>' → logprob: -11.139582633972168
    8. ' ' → logprob: -11.389582633972168
    9. 's' → logprob: -11.639582633972168
    10. '<|end|>' → logprob: -12.389582633972168

Token 57: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5231727361679077
    2. ' ' → logprob: -0.8981727361679077
    3. '-' → logprob: -10.398172378540039
    4. '1' → logprob: -11.648172378540039
    5. ' -' → logprob: -11.773172378540039
    6. '<|end|>' → logprob: -13.273172378540039
    7. '```' → logprob: -15.023172378540039
    8. 'a' → logprob: -15.773172378540039
    9. '  ' → logprob: -15.898172378540039
    10. ' a' → logprob: -17.14817237854004

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.375000953674316
    3. '-' → logprob: -15.625000953674316
    4. '1' → logprob: -16.75
    5. '۰' → logprob: -17.375
    6. '```' → logprob: -19.5
    7. '０' → logprob: -20.125
    8. '٠' → logprob: -20.1875
    9. '   ' → logprob: -20.375
    10. ' -' → logprob: -20.75

Token 59: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18871022760868073
    2. '
' → logprob: -2.5637102127075195
    3. '<|end|>' → logprob: -3.0637102127075195
    4. ',' → logprob: -4.5637102127075195
    5. '\n' → logprob: -5.1887102127075195
    6. '    
' → logprob: -5.3137102127075195
    7. '	while' → logprob: -5.3137102127075195
    8. ' while' → logprob: -5.3137102127075195
    9. ' ' → logprob: -5.9387102127075195
    10. ' 
' → logprob: -6.0637102127075195

Token 60: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37070003151893616
    2. '   ' → logprob: -1.7457000017166138
    3. '\n' → logprob: -2.8707001209259033
    4. ' 
' → logprob: -4.120699882507324
    5. '  
' → logprob: -4.495699882507324
    6. ' while' → logprob: -4.620699882507324
    7. '	while' → logprob: -4.620699882507324
    8. '    
' → logprob: -5.245699882507324
    9. ' ' → logprob: -5.245699882507324
    10. '	
' → logprob: -5.495699882507324

Token 61: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.647257924079895
    2. ' while' → logprob: -0.897257924079895
    3. '   ' → logprob: -3.6472578048706055
    4. '<|end|>' → logprob: -4.1472578048706055
    5. ' ' → logprob: -4.5222578048706055
    6. 'r' → logprob: -5.0222578048706055
    7. '	while' → logprob: -5.7722578048706055
    8. 's' → logprob: -6.2722578048706055
    9. '    ' → logprob: -7.3972578048706055
    10. 't' → logprob: -7.7722578048706055

Token 62: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.0036070786882191896
    2. 'r' → logprob: -5.628607273101807
    3. ' ' → logprob: -12.128606796264648
    4. ' ' → logprob: -14.128606796264648
    5. '	r' → logprob: -15.628606796264648
    6. '```' → logprob: -16.25360679626465
    7. ' s' → logprob: -16.37860679626465
    8. '(r' → logprob: -16.37860679626465
    9. 's' → logprob: -16.81610679626465
    10. ' (' → logprob: -16.87860679626465

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006392885115928948
    2. '0' → logprob: -7.37563943862915
    3. '_' → logprob: -11.750638961791992
    4. ' ' → logprob: -13.250638961791992
    5. '>' → logprob: -13.375638961791992
    6. 'r' → logprob: -15.000638961791992
    7. '```' → logprob: -15.125638961791992
    8. 's' → logprob: -15.750638961791992
    9. ' >' → logprob: -15.813138961791992
    10. '' → logprob: -16.250638961791992

Token 64: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.05796130746603012
    2. ' >' → logprob: -3.1829612255096436
    3. '!=' → logprob: -5.057961463928223
    4. '>' → logprob: -5.432961463928223
    5. ' ' → logprob: -5.807961463928223
    6. ':' → logprob: -7.057961463928223
    7. ' and' → logprob: -9.557961463928223
    8. ' not' → logprob: -10.307961463928223
    9. ' :' → logprob: -10.307961463928223
    10. '0' → logprob: -10.932961463928223

Token 65: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07889033854007721
    2. '0' → logprob: -2.578890323638916
    3. ' ' → logprob: -14.328890800476074
    4. '  ' → logprob: -18.328889846801758
    5. '```' → logprob: -18.453889846801758
    6. ' ' → logprob: -18.828889846801758
    7. '	' → logprob: -18.953889846801758
    8. '۰' → logprob: -19.141389846801758
    9. 'r' → logprob: -19.891389846801758
    10. 'space' → logprob: -20.203889846801758

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '  ' → logprob: -18.375261306762695
    4. '۰' → logprob: -18.625261306762695
    5. ' ' → logprob: -18.812761306762695
    6. '   ' → logprob: -18.875261306762695
    7. ' ' → logprob: -19.000261306762695
    8. '```' → logprob: -19.500261306762695
    9. '000' → logprob: -19.625261306762695
    10. '00' → logprob: -20.000261306762695

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002752790169324726
    2. ':
' → logprob: -8.250275611877441
    3. ' :' → logprob: -12.500275611877441
    4. ',' → logprob: -12.875275611877441
    5. '):' → logprob: -13.375275611877441
    6. '<|end|>' → logprob: -13.375275611877441
    7. ':**' → logprob: -13.875275611877441
    8. '   ' → logprob: -14.125275611877441
    9. ':

' → logprob: -14.250275611877441
    10. '<|end|>' → logprob: -14.500275611877441

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03811688721179962
    2. '```' → logprob: -3.663116931915283
    3. '    ' → logprob: -5.663116931915283
    4. '   ' → logprob: -5.913116931915283
    5. '\n' → logprob: -6.538116931915283
    6. '        
' → logprob: -6.913116931915283
    7. '     ' → logprob: -7.788116931915283
    8. ' 
' → logprob: -7.913116931915283
    9. '``' → logprob: -8.038116455078125
    10. '
' → logprob: -8.163116455078125

Token 69: ' q' (ID: 2335)
  Prédit: '        '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '        ' → logprob: -0.3391364812850952
    2. '       ' → logprob: -2.0891366004943848
    3. ' ' → logprob: -2.9641366004943848
    4. '        
' → logprob: -3.2141366004943848
    5. '         
' → logprob: -3.5891366004943848
    6. '    ' → logprob: -3.9641366004943848
    7. ' 
' → logprob: -4.339136600494385
    8. '     
' → logprob: -5.839136600494385
    9. ' r' → logprob: -6.589136600494385
    10. '```' → logprob: -6.589136600494385

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038497667759656906
    2. ' ' → logprob: -3.5384976863861084
    3. '=' → logprob: -4.788497447967529
    4. ',' → logprob: -8.288497924804688
    5. ' ,' → logprob: -9.788497924804688
    6. '  ' → logprob: -10.538497924804688
    7. 's' → logprob: -11.413497924804688
    8. '<|end|>' → logprob: -11.663497924804688
    9. '=r' → logprob: -11.913497924804688
    10. ' =
' → logprob: -12.038497924804688

Token 71: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.033652957528829575
    2. 'r' → logprob: -3.4086530208587646
    3. ' ' → logprob: -12.533653259277344
    4. ' ' → logprob: -13.658653259277344
    5. ' s' → logprob: -13.658653259277344
    6. 's' → logprob: -13.908653259277344
    7. '	r' → logprob: -16.783653259277344
    8. '"' → logprob: -16.908653259277344
    9. '```' → logprob: -17.096153259277344
    10. '`' → logprob: -17.408653259277344

Token 72: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.750009536743164
    3. 's' → logprob: -15.000009536743164
    4. 'r' → logprob: -15.250009536743164
    5. '_' → logprob: -15.750009536743164
    6. '1' → logprob: -16.000009536743164
    7. '`' → logprob: -16.125009536743164
    8. '[' → logprob: -16.250009536743164
    9. '   ' → logprob: -16.250009536743164
    10. ' r' → logprob: -16.812509536743164

Token 73: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.0017602674197405577
    2. '//' → logprob: -6.376760482788086
    3. ' ' → logprob: -9.876760482788086
    4. '`' → logprob: -13.376760482788086
    5. 'div' → logprob: -13.876760482788086
    6. ' #' → logprob: -13.876760482788086
    7. ' `' → logprob: -14.251760482788086
    8. ' ' → logprob: -14.501760482788086
    9. '```' → logprob: -14.751760482788086
    10. ' /' → logprob: -15.251760482788086

Token 74: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2519300878047943
    2. ' r' → logprob: -1.5019301176071167
    3. '	r' → logprob: -14.501930236816406
    4. '<|end|>' → logprob: -15.376930236816406
    5. '<|end|>' → logprob: -16.501930236816406
    6. ' ' → logprob: -16.751930236816406
    7. ' ' → logprob: -16.876930236816406
    8. 's' → logprob: -17.251930236816406
    9. ' р' → logprob: -17.626930236816406
    10. 'space' → logprob: -17.626930236816406

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.248469718324486e-05
    2. ' ' → logprob: -10.750022888183594
    3. '-' → logprob: -15.000022888183594
    4. '0' → logprob: -15.250022888183594
    5. 'r' → logprob: -16.625022888183594
    6. '`' → logprob: -17.125022888183594
    7. '```' → logprob: -17.125022888183594
    8. '_' → logprob: -18.125022888183594
    9. '   ' → logprob: -18.250022888183594
    10. '' → logprob: -18.312522888183594

Token 76: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.019443495199084282
    2. '<|end|>' → logprob: -4.769443511962891
    3. 'r' → logprob: -5.894443511962891
    4. '<|end|>' → logprob: -6.144443511962891
    5. '
' → logprob: -7.019443511962891
    6. 'newline' → logprob: -7.019443511962891
    7. '  
' → logprob: -7.269443511962891
    8. '       ' → logprob: -7.269443511962891
    9. '        
' → logprob: -7.394443511962891
    10. '\n' → logprob: -7.519443511962891

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3963666260242462
    2. '
' → logprob: -1.5213665962219238
    3. 'r' → logprob: -2.646366596221924
    4. ' r' → logprob: -4.146366596221924
    5. '        
' → logprob: -4.896366596221924
    6. ' 
' → logprob: -5.396366596221924
    7. '\n' → logprob: -6.146366596221924
    8. '```' → logprob: -6.271366596221924
    9. '  
' → logprob: -6.396366596221924
    10. '<|end|>' → logprob: -6.771366596221924

Token 78: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.2027130424976349
    2. ' r' → logprob: -1.7027130126953125
    3. '       ' → logprob: -7.5777130126953125
    4. 't' → logprob: -7.7027130126953125
    5. ' t' → logprob: -8.327713012695312
    6. 's' → logprob: -10.452713012695312
    7. ' s' → logprob: -10.952713012695312
    8. '   ' → logprob: -11.077713012695312
    9. 'tmp' → logprob: -11.452713012695312
    10. '```' → logprob: -11.702713012695312

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.60414821645827e-06
    2. '1' → logprob: -12.625004768371582
    3. ',' → logprob: -13.625004768371582
    4. '2' → logprob: -17.250003814697266
    5. '```' → logprob: -17.875003814697266
    6. 'o' → logprob: -18.375003814697266
    7. ',r' → logprob: -18.875003814697266
    8. 'r' → logprob: -19.125003814697266
    9. ' ' → logprob: -19.250003814697266
    10. '_' → logprob: -19.500003814697266

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03862430155277252
    2. ' ,' → logprob: -3.2886242866516113
    3. '=' → logprob: -8.78862476348877
    4. ' %=' → logprob: -9.03862476348877
    5. '%' → logprob: -9.41362476348877
    6. ',r' → logprob: -9.91362476348877
    7. ' %' → logprob: -10.41362476348877
    8. ' r' → logprob: -10.53862476348877
    9. ' -=' → logprob: -10.66362476348877
    10. ' =' → logprob: -10.91362476348877

Token 81: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.04308208450675011
    2. 'r' → logprob: -3.1680819988250732
    3. 's' → logprob: -10.168082237243652
    4. ' ' → logprob: -10.668082237243652
    5. ' ' → logprob: -11.793082237243652
    6. '<|end|>' → logprob: -11.918082237243652
    7. '"' → logprob: -13.418082237243652
    8. ' rs' → logprob: -14.168082237243652
    9. ''' → logprob: -14.293082237243652
    10. ' s' → logprob: -14.293082237243652

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1054253011243418e-05
    2. 's' → logprob: -11.500020980834961
    3. '0' → logprob: -12.750020980834961
    4. ' ' → logprob: -13.000020980834961
    5. '	' → logprob: -13.125020980834961
    6. '_' → logprob: -13.500020980834961
    7. '' → logprob: -14.875020980834961
    8. 'r' → logprob: -14.875020980834961
    9. '```' → logprob: -15.250020980834961
    10. '=' → logprob: -15.375020980834961

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02631562203168869
    2. '=' → logprob: -3.651315689086914
    3. ',' → logprob: -11.401315689086914
    4. ' ' → logprob: -13.151315689086914
    5. ' ,' → logprob: -13.276315689086914
    6. ' -=' → logprob: -15.901315689086914
    7. ' =
' → logprob: -16.026315689086914
    8. ' +=' → logprob: -16.276315689086914
    9. ' =",' → logprob: -17.401315689086914
    10. ' |=' → logprob: -18.026315689086914

Token 84: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.11285744607448578
    2. 'r' → logprob: -2.2378573417663574
    3. ' ' → logprob: -10.612857818603516
    4. ' ' → logprob: -12.362857818603516
    5. ' s' → logprob: -12.987857818603516
    6. 's' → logprob: -13.237857818603516
    7. ' (' → logprob: -14.737857818603516
    8. '```' → logprob: -15.112857818603516
    9. '(r' → logprob: -15.425357818603516
    10. ' 
' → logprob: -15.487857818603516

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '0' → logprob: -14.375000953674316
    3. ' ' → logprob: -14.500000953674316
    4. 'r' → logprob: -16.375001907348633
    5. '' → logprob: -16.500001907348633
    6. 's' → logprob: -17.250001907348633
    7. ' r' → logprob: -17.312501907348633
    8. ',' → logprob: -18.312501907348633
    9. '4' → logprob: -19.062501907348633
    10. '   ' → logprob: -19.062501907348633

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.88418151892256e-05
    2. ' ,' → logprob: -10.000059127807617
    3. ',
' → logprob: -12.375059127807617
    4. ',r' → logprob: -12.375059127807617
    5. 'r' → logprob: -12.625059127807617
    6. '<|end|>' → logprob: -14.000059127807617
    7. ',

' → logprob: -15.000059127807617
    8. ' ' → logprob: -15.750059127807617
    9. '<|end|>' → logprob: -16.500059127807617
    10. ' r' → logprob: -16.625059127807617

Token 87: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.023260269314050674
    2. 'r' → logprob: -3.7732603549957275
    3. ' ' → logprob: -11.398260116577148
    4. ' ' → logprob: -13.148260116577148
    5. '0' → logprob: -14.773260116577148
    6. ' 
' → logprob: -15.773260116577148
    7. ' `' → logprob: -16.02326011657715
    8. '(r' → logprob: -16.02326011657715
    9. ' (' → logprob: -16.27326011657715
    10. '_r' → logprob: -16.27326011657715

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. 'o' → logprob: -17.5
    3. '۰' → logprob: -19.125
    4. '```' → logprob: -19.4375
    5. 'O' → logprob: -19.5625
    6. '1' → logprob: -19.625
    7. '00' → logprob: -20.1875
    8. '2' → logprob: -20.25
    9. '０' → logprob: -20.5625
    10. '%' → logprob: -21.0

Token 89: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06488166749477386
    2. ' %' → logprob: -3.1898815631866455
    3. '-' → logprob: -4.189881801605225
    4. '%' → logprob: -5.064881801605225
    5. ' ' → logprob: -9.064881324768066
    6. '`' → logprob: -10.814881324768066
    7. ')' → logprob: -11.939881324768066
    8. ',' → logprob: -12.189881324768066
    9. ' q' → logprob: -12.439881324768066
    10. '0' → logprob: -13.002381324768066

Token 90: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.003195535857230425
    2. 'q' → logprob: -5.753195762634277
    3. '	q' → logprob: -11.628195762634277
    4. ' ' → logprob: -11.753195762634277
    5. ' ' → logprob: -13.878195762634277
    6. ' space' → logprob: -17.62819480895996
    7. ' ‌' → logprob: -18.12819480895996
    8. ''q' → logprob: -18.12819480895996
    9. 'space' → logprob: -18.50319480895996
    10. ' ▁' → logprob: -18.62819480895996

Token 91: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08174850046634674
    2. '*' → logprob: -2.5817484855651855
    3. '*r' → logprob: -6.0817484855651855
    4. ' ' → logprob: -7.8317484855651855
    5. '*q' → logprob: -9.581748962402344
    6. ' r' → logprob: -9.706748962402344
    7. 'r' → logprob: -10.706748962402344
    8. ' ' → logprob: -11.581748962402344
    9. '	' → logprob: -12.831748962402344
    10. '`' → logprob: -13.956748962402344

Token 92: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1269284337759018
    2. ' r' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.376928329467773
    4. '	r' → logprob: -15.501928329467773
    5. 's' → logprob: -17.126928329467773
    6. ' ' → logprob: -18.751928329467773
    7. '_r' → logprob: -19.376928329467773
    8. '```' → logprob: -19.814428329467773
    9. ''r' → logprob: -19.876928329467773
    10. 'space' → logprob: -19.876928329467773

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -15.25
    3. '１' → logprob: -20.875
    4. '۱' → logprob: -20.875
    5. ' ' → logprob: -21.125
    6. '১' → logprob: -21.375
    7. 's' → logprob: -21.375
    8. '१' → logprob: -21.375
    9. 'r' → logprob: -21.5
    10. '' → logprob: -21.625

Token 94: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.3602389991283417
    2. '
' → logprob: -1.860239028930664
    3. '       ' → logprob: -3.110239028930664
    4. '  
' → logprob: -3.610239028930664
    5. '\n' → logprob: -3.610239028930664
    6. 's' → logprob: -4.235239028930664
    7. '        
' → logprob: -4.610239028930664
    8. '    
' → logprob: -4.860239028930664
    9. '<|end|>' → logprob: -5.735239028930664
    10. ' ' → logprob: -5.860239028930664

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.536753237247467
    2. '
' → logprob: -2.2867531776428223
    3. ' 
' → logprob: -2.2867531776428223
    4. '  
' → logprob: -3.0367531776428223
    5. '        
' → logprob: -3.0367531776428223
    6. 's' → logprob: -3.2867531776428223
    7. ' ' → logprob: -3.7867531776428223
    8. 'x' → logprob: -4.536753177642822
    9. '\n' → logprob: -4.536753177642822
    10. '    
' → logprob: -5.161753177642822

Token 96: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.00987118761986494
    2. ' s' → logprob: -4.634871006011963
    3. 'x' → logprob: -9.509871482849121
    4. '	s' → logprob: -11.259871482849121
    5. '   ' → logprob: -11.509871482849121
    6. '    ' → logprob: -11.759871482849121
    7. '       ' → logprob: -12.509871482849121
    8. ' ' → logprob: -12.884871482849121
    9. ' x' → logprob: -13.009871482849121
    10. '     ' → logprob: -14.134871482849121

Token 97: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.583550642360933e-05
    2. '1' → logprob: -10.250036239624023
    3. '۰' → logprob: -15.625036239624023
    4. ',' → logprob: -16.250036239624023
    5. 's' → logprob: -17.125036239624023
    6. '０' → logprob: -17.187536239624023
    7. ' ' → logprob: -17.625036239624023
    8. '```' → logprob: -17.937536239624023
    9. '_' → logprob: -18.250036239624023
    10. ' ,' → logprob: -18.375036239624023

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000282431225059554
    2. ' ,' → logprob: -8.375282287597656
    3. ',s' → logprob: -10.250282287597656
    4. 's' → logprob: -11.875282287597656
    5. ',
' → logprob: -12.250282287597656
    6. ' ' → logprob: -13.375282287597656
    7. ' s' → logprob: -14.125282287597656
    8. '=' → logprob: -14.250282287597656
    9. ',q' → logprob: -15.500282287597656
    10. '<|end|>' → logprob: -15.875282287597656

Token 99: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.38694682717323303
    2. 's' → logprob: -1.1369467973709106
    3. '<|end|>' → logprob: -10.136946678161621
    4. ' ' → logprob: -10.261946678161621
    5. ' ' → logprob: -14.386946678161621
    6. '	s' → logprob: -14.886946678161621
    7. '_s' → logprob: -16.761947631835938
    8. '(s' → logprob: -16.761947631835938
    9. '<|end|>' → logprob: -17.136947631835938
    10. '`s' → logprob: -17.261947631835938

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001028523431159556
    2. '_' → logprob: -7.251028537750244
    3. 's' → logprob: -8.501028060913086
    4. '0' → logprob: -9.626028060913086
    5. '	' → logprob: -11.126028060913086
    6. ' s' → logprob: -11.626028060913086
    7. '_s' → logprob: -12.001028060913086
    8. ' ' → logprob: -12.126028060913086
    9. ',' → logprob: -12.501028060913086
    10. '' → logprob: -13.126028060913086

Token 101: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09427379816770554
    2. '=' → logprob: -2.594273805618286
    3. ' =' → logprob: -4.219273567199707
    4. ' ,' → logprob: -8.094273567199707
    5. 's' → logprob: -8.594273567199707
    6. ' s' → logprob: -10.469273567199707
    7. ',s' → logprob: -10.969273567199707
    8. ' ' → logprob: -11.594273567199707
    9. '=s' → logprob: -12.344273567199707
    10. '<|end|>' → logprob: -12.719273567199707

Token 102: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029753733426332474
    2. ' s' → logprob: -3.5297536849975586
    3. '   ' → logprob: -13.404753684997559
    4. '  ' → logprob: -14.404753684997559
    5. ' ' → logprob: -15.029753684997559
    6. '(s' → logprob: -15.279753684997559
    7. '	s' → logprob: -15.529753684997559
    8. '0' → logprob: -16.029754638671875
    9. '    ' → logprob: -16.279754638671875
    10. '_s' → logprob: -16.654754638671875

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. '0' → logprob: -10.875027656555176
    3. '' → logprob: -12.125027656555176
    4. 's' → logprob: -14.187527656555176
    5. ' ' → logprob: -14.312527656555176
    6. ',' → logprob: -15.125027656555176
    7. ' ' → logprob: -15.375027656555176
    8. '[' → logprob: -15.625027656555176
    9. '_' → logprob: -15.812527656555176
    10. ' s' → logprob: -16.000028610229492

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001347672223346308
    2. ',s' → logprob: -9.500134468078613
    3. ' ,' → logprob: -10.000134468078613
    4. 's' → logprob: -11.250134468078613
    5. ' s' → logprob: -14.250134468078613
    6. ',
' → logprob: -14.375134468078613
    7. ' ' → logprob: -15.750134468078613
    8. '0' → logprob: -17.12513542175293
    9. ',\
' → logprob: -17.37513542175293
    10. ',n' → logprob: -17.75013542175293

Token 105: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16022878885269165
    2. ' s' → logprob: -1.9102287292480469
    3. ' ' → logprob: -13.285228729248047
    4. '(s' → logprob: -13.535228729248047
    5. '(' → logprob: -14.285228729248047
    6. ' (' → logprob: -15.410228729248047
    7. '_s' → logprob: -15.535228729248047
    8. '  ' → logprob: -15.535228729248047
    9. '   ' → logprob: -16.285228729248047
    10. '`s' → logprob: -16.285228729248047

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.939851037808694e-05
    2. ' ' → logprob: -11.375029563903809
    3. '-' → logprob: -12.000029563903809
    4. '1' → logprob: -12.625029563903809
    5. '_' → logprob: -13.812529563903809
    6. '۰' → logprob: -13.875029563903809
    7. 'o' → logprob: -14.000029563903809
    8. ' -' → logprob: -14.125029563903809
    9. 's' → logprob: -15.125029563903809
    10. '```' → logprob: -15.125029563903809

Token 107: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.011097457259893417
    2. '-' → logprob: -4.511097431182861
    3. ' ' → logprob: -10.26109790802002
    4. 's' → logprob: -11.51109790802002
    5. ',' → logprob: -12.51109790802002
    6. ' -
' → logprob: -15.63609790802002
    7. ' ,' → logprob: -16.261096954345703
    8. ' ' → logprob: -16.261096954345703
    9. '   ' → logprob: -16.636096954345703
    10. '  ' → logprob: -16.761096954345703

Token 108: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.2014218121767044
    2. 'q' → logprob: -1.701421856880188
    3. '	q' → logprob: -11.826421737670898
    4. ' ' → logprob: -14.201421737670898
    5. ' ' → logprob: -14.576421737670898
    6. 'qx' → logprob: -17.7014217376709
    7. ''q' → logprob: -17.8264217376709
    8. '‌' → logprob: -18.0764217376709
    9. '[q' → logprob: -18.2014217376709
    10. '?q' → logprob: -18.5764217376709

Token 109: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.308974951505661
    2. ' ' → logprob: -2.1839749813079834
    3. ' s' → logprob: -2.8089749813079834
    4. '*' → logprob: -2.8089749813079834
    5. 's' → logprob: -3.4339749813079834
    6. '*s' → logprob: -8.308975219726562
    7. ' ' → logprob: -9.683975219726562
    8. '	s' → logprob: -10.058975219726562
    9. '	' → logprob: -11.058975219726562
    10. ''s' → logprob: -11.308975219726562

Token 110: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00861456897109747
    2. ' s' → logprob: -4.758614540100098
    3. ' ' → logprob: -17.633615493774414
    4. '	s' → logprob: -17.633615493774414
    5. '   ' → logprob: -20.008615493774414
    6. '<|end|>' → logprob: -20.383615493774414
    7. '_s' → logprob: -20.633615493774414
    8. '  ' → logprob: -20.883615493774414
    9. ''s' → logprob: -21.383615493774414
    10. ' ' → logprob: -21.758615493774414

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 's' → logprob: -17.5
    3. ' ' → logprob: -19.375
    4. '_' → logprob: -20.125
    5. '' → logprob: -20.125
    6. '0' → logprob: -20.75
    7. '۱' → logprob: -21.125
    8. 'i' → logprob: -21.25
    9. '१' → logprob: -21.75
    10. ' s' → logprob: -22.0

Token 112: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6626847386360168
    2. '
' → logprob: -0.7876847386360168
    3. '   ' → logprob: -4.287684917449951
    4. ' ' → logprob: -5.287684917449951
    5. ' 
' → logprob: -5.662684917449951
    6. ' x' → logprob: -7.412684917449951
    7. 'x' → logprob: -7.662684917449951
    8. ',' → logprob: -7.662684917449951
    9. '        
' → logprob: -7.662684917449951
    10. '  
' → logprob: -7.662684917449951

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7733466029167175
    2. 'x' → logprob: -1.6483466625213623
    3. '
' → logprob: -1.8983466625213623
    4. '       ' → logprob: -2.2733466625213623
    5. ' x' → logprob: -3.2733466625213623
    6. ' ' → logprob: -3.3983466625213623
    7. 't' → logprob: -5.398346424102783
    8. ' t' → logprob: -5.648346424102783
    9. ' 
' → logprob: -5.773346424102783
    10. ' y' → logprob: -6.023346424102783

Token 114: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25429731607437134
    2. ' if' → logprob: -1.5042972564697266
    3. 'if' (adapté à ' if') → logprob: -6.754297256469727
    4. ' ' → logprob: -6.879297256469727
    5. ' x' → logprob: -9.879297256469727
    6. '	if' → logprob: -10.629297256469727
    7. '    ' → logprob: -11.254297256469727
    8. '
' → logprob: -11.254297256469727
    9. '       ' → logprob: -11.379297256469727
    10. ' 
' → logprob: -11.629297256469727

Token 115: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.0046326881274580956
    2. 'r' → logprob: -5.379632472991943
    3. ' g' → logprob: -11.504632949829102
    4. ' ' → logprob: -13.754632949829102
    5. ' s' → logprob: -14.629632949829102
    6. '	r' → logprob: -14.754632949829102
    7. 'g' → logprob: -14.879632949829102
    8. ' ' → logprob: -16.8796329498291
    9. 's' → logprob: -17.8171329498291
    10. ' р' → logprob: -17.8171329498291

Token 116: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.125000953674316
    3. '_' → logprob: -15.250000953674316
    4. '۰' → logprob: -17.375
    5. '```' → logprob: -18.375
    6. 'o' → logprob: -18.4375
    7. '[' → logprob: -18.625
    8. '０' → logprob: -18.75
    9. '>' → logprob: -19.5
    10. ' ' → logprob: -19.5625

Token 117: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.15122148394584656
    2. '!=' → logprob: -2.026221513748169
    3. '==' → logprob: -5.40122127532959
    4. ' ==' → logprob: -5.52622127532959
    5. '>' → logprob: -11.77622127532959
    6. '=' → logprob: -12.15122127532959
    7. ')!=' → logprob: -13.40122127532959
    8. ' >' → logprob: -13.52622127532959
    9. '```' → logprob: -14.27622127532959
    10. ' ' → logprob: -14.52622127532959

Token 118: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6931493282318115
    2. ' ' → logprob: -0.6931493282318115
    3. ' ' → logprob: -13.19314956665039
    4. '  ' → logprob: -15.69314956665039
    5. '```' → logprob: -16.69314956665039
    6. '=' → logprob: -16.81814956665039
    7. '   ' → logprob: -17.19314956665039
    8. '0' → logprob: -17.44314956665039
    9. ' ' → logprob: -17.81814956665039
    10. '    ' → logprob: -18.25564956665039

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010950337309623137
    2. ' ' → logprob: -9.125109672546387
    3. '   ' → logprob: -15.375109672546387
    4. '  ' → logprob: -15.875109672546387
    5. '```' → logprob: -16.68760871887207
    6. ' ' → logprob: -16.93760871887207
    7. '    ' → logprob: -17.12510871887207
    8. '１' → logprob: -17.56260871887207
    9. '۱' → logprob: -18.06260871887207
    10. '

' → logprob: -18.56260871887207

Token 120: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00374402548186481
    2. ':
' → logprob: -5.628744125366211
    3. ':return' → logprob: -8.878744125366211
    4. ' :' → logprob: -13.503744125366211
    5. '   ' → logprob: -14.003744125366211
    6. '       ' → logprob: -14.128744125366211
    7. ' or' → logprob: -14.503744125366211
    8. ':

' → logprob: -15.128744125366211
    9. ':
' → logprob: -15.128744125366211
    10. ' and' → logprob: -15.878744125366211

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017968006432056427
    2. '   ' → logprob: -7.126796722412109
    3. '
' → logprob: -7.751796722412109
    4. ' return' → logprob: -8.12679672241211
    5. '<|end|>' → logprob: -9.62679672241211
    6. ':return' → logprob: -10.12679672241211
    7. '    ' → logprob: -10.62679672241211
    8. ':' → logprob: -10.62679672241211
    9. ' ' → logprob: -10.75179672241211
    10. 'return' → logprob: -11.12679672241211

Token 122: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.09801971167325974
    2. ' ' → logprob: -3.473019599914551
    3. ' 
' → logprob: -3.598019599914551
    4. ' raise' → logprob: -4.348019599914551
    5. 'return' (adapté à ' return') → logprob: -5.098019599914551
    6. '       ' → logprob: -5.348019599914551
    7. '
' → logprob: -5.473019599914551
    8. '    ' → logprob: -5.973019599914551
    9. '   ' → logprob: -6.098019599914551
    10. ' None' → logprob: -6.598019599914551

Token 123: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.04859338700771332
    2. 'None' → logprob: -3.048593282699585
    3. ' ' → logprob: -13.048593521118164
    4. ' 
' → logprob: -13.798593521118164
    5. ' ' → logprob: -14.298593521118164
    6. ' N' → logprob: -14.673593521118164
    7. '_None' → logprob: -15.173593521118164
    8. ',None' → logprob: -15.173593521118164
    9. 'N' → logprob: -15.298593521118164
    10. '(None' → logprob: -15.423593521118164

Token 124: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6340406537055969
    2. '
' → logprob: -0.7590406537055969
    3. '    
' → logprob: -7.009040832519531
    4. ' 
' → logprob: -8.509040832519531
    5. '  
' → logprob: -9.384040832519531
    6. '<|end|>' → logprob: -9.384040832519531
    7. '       ' → logprob: -10.759040832519531
    8. ',' → logprob: -10.759040832519531
    9. ' ' → logprob: -10.759040832519531
    10. ' return' → logprob: -11.009040832519531

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005390638019889593
    2. '
' → logprob: -5.880390644073486
    3. '    
' → logprob: -6.255390644073486
    4. '       ' → logprob: -9.005390167236328
    5. '<|end|>' → logprob: -9.005390167236328
    6. ' 
' → logprob: -9.255390167236328
    7. ',' → logprob: -9.880390167236328
    8. '  
' → logprob: -10.005390167236328
    9. '	return' → logprob: -10.130390167236328
    10. ' ' → logprob: -10.255390167236328

Token 126: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04987550899386406
    2. ' 
' → logprob: -3.424875497817993
    3. '
' → logprob: -5.174875736236572
    4. ' ' → logprob: -5.924875736236572
    5. '    
' → logprob: -6.049875736236572
    6. ' return' → logprob: -6.299875736236572
    7. ' x' → logprob: -6.424875736236572
    8. '  
' → logprob: -7.549875736236572
    9. '   
' → logprob: -7.674875736236572
    10. ' else' → logprob: -8.799875259399414

Token 127: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20440061390399933
    2. ' s' → logprob: -1.704400658607483
    3. 'x' → logprob: -6.204400539398193
    4. ' x' → logprob: -6.954400539398193
    5. '(s' → logprob: -12.579401016235352
    6. ' (' → logprob: -12.954401016235352
    7. ' ' → logprob: -13.954401016235352
    8. '	s' → logprob: -14.329401016235352
    9. '(x' → logprob: -15.954401016235352
    10. 'mod' → logprob: -16.20440101623535

Token 128: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '۰' → logprob: -16.375
    4. '０' → logprob: -18.3125
    5. '1' → logprob: -18.75
    6. 'o' → logprob: -18.875
    7. '٠' → logprob: -18.9375
    8. '%' → logprob: -19.125
    9. ' ' → logprob: -19.25
    10. '```' → logprob: -19.3125

Token 129: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 130: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.0011703446507453918
    2. 'm' → logprob: -6.7511701583862305
    3. ' ' → logprob: -16.251171112060547
    4. ' ' → logprob: -16.876171112060547
    5. ' м' → logprob: -16.876171112060547
    6. '	m' → logprob: -17.251171112060547
    7. '(m' → logprob: -21.001171112060547
    8. '```' → logprob: -21.126171112060547
    9. '_m' → logprob: -21.751171112060547
    10. ' ' → logprob: -21.876171112060547

Token 131: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3982563018798828
    2. ' ' → logprob: -1.7732563018798828
    3. '
' → logprob: -1.8982563018798828
    4. 'def' → logprob: -2.148256301879883
    5. ':' → logprob: -2.398256301879883
    6. '(' → logprob: -2.523256301879883
    7. '\n' → logprob: -3.398256301879883
    8. '\' → logprob: -4.023256301879883
    9. '```' → logprob: -4.273256301879883
    10. ')' → logprob: -4.523256301879883

Token 133: ' decrypt' (ID: 81444)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.008996127173304558
    2. ' mod' → logprob: -5.50899600982666
    3. ' solve' → logprob: -6.25899600982666
    4. ' gcd' → logprob: -7.00899600982666
    5. ' encrypt' → logprob: -7.75899600982666
    6. ' rsa' → logprob: -7.88399600982666
    7. ' modular' → logprob: -8.13399600982666
    8. ' pow' → logprob: -8.63399600982666
    9. ' fast' → logprob: -9.25899600982666
    10. ' compute' → logprob: -9.25899600982666

Token 134: '(text' (ID: 13414)
  Prédit: '(cipher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cipher' → logprob: -0.3378601670265198
    2. '(' → logprob: -1.587860107421875
    3. '(message' → logprob: -3.587860107421875
    4. '(data' → logprob: -3.587860107421875
    5. '_cipher' → logprob: -4.712860107421875
    6. ' (' → logprob: -4.837860107421875
    7. '(ct' → logprob: -5.587860107421875
    8. ' ciphertext' → logprob: -6.712860107421875
    9. '(text' → logprob: -6.962860107421875
    10. '(en' → logprob: -7.462860107421875

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023366952314972878
    2. '):' → logprob: -3.773366928100586
    3. ')' → logprob: -9.273366928100586
    4. ' ,' → logprob: -11.648366928100586
    5. ':' → logprob: -12.148366928100586
    6. '):
' → logprob: -12.523366928100586
    7. ' ):' → logprob: -12.648366928100586
    8. 's' → logprob: -13.773366928100586
    9. ',s' → logprob: -14.773366928100586
    10. '[' → logprob: -14.773366928100586

Token 136: ' a' (ID: 261)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.25771716237068176
    2. 'key' → logprob: -1.8827171325683594
    3. 'a' → logprob: -3.0077171325683594
    4. ' a' → logprob: -3.8827171325683594
    5. ' e' → logprob: -6.507717132568359
    6. 'k' → logprob: -6.507717132568359
    7. 'e' → logprob: -7.132717132568359
    8. ' k' → logprob: -8.00771713256836
    9. ' n' → logprob: -8.13271713256836
    10. 'n' → logprob: -9.00771713256836

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.750436007976532e-05
    2. ' ,' → logprob: -10.62503719329834
    3. ',b' → logprob: -12.25003719329834
    4. '):' → logprob: -12.87503719329834
    5. ',a' → logprob: -13.00003719329834
    6. ',key' → logprob: -14.12503719329834
    7. '_,' → logprob: -14.37503719329834
    8. ',c' → logprob: -14.87503719329834
    9. '‌,' → logprob: -15.25003719329834
    10. ',
' → logprob: -15.37503719329834

Token 138: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.523147702217102
    2. 'b' → logprob: -0.898147702217102
    3. ' ' → logprob: -11.898147583007812
    4. ')' → logprob: -12.648147583007812
    5. '<|end|>' → logprob: -12.773147583007812
    6. 'text' → logprob: -12.898147583007812
    7. ')b' → logprob: -13.398147583007812
    8. ' text' → logprob: -13.398147583007812
    9. 'n' → logprob: -13.898147583007812
    10. '```' → logprob: -14.148147583007812

Token 139: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -8.625866030342877e-05
    2. ')' → logprob: -9.500085830688477
    3. ',' → logprob: -12.125085830688477
    4. '):
' → logprob: -12.500085830688477
    5. ':' → logprob: -13.500085830688477
    6. ' ):' → logprob: -14.375085830688477
    7. '):
' → logprob: -15.750085830688477
    8. '):

' → logprob: -16.750085830688477
    9. '**' → logprob: -17.500085830688477
    10. ''):' → logprob: -18.000085830688477

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006857485859654844
    2. '    
' → logprob: -7.375685691833496
    3. '    ' → logprob: -10.375685691833496
    4. ' return' → logprob: -12.750685691833496
    5. ' 
' → logprob: -12.875685691833496
    6. '
' → logprob: -12.875685691833496
    7. ' ' → logprob: -13.000685691833496
    8. '   ' → logprob: -13.250685691833496
    9. '  
' → logprob: -13.250685691833496
    10. 'n' → logprob: -13.500685691833496

Token 141: ' a' (ID: 261)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.25242331624031067
    2. ' result' → logprob: -1.5024232864379883
    3. 'de' → logprob: -8.252423286437988
    4. ' decrypted' → logprob: -9.002423286437988
    5. '   ' → logprob: -10.002423286437988
    6. 'res' → logprob: -10.252423286437988
    7. 'plaintext' → logprob: -10.877423286437988
    8. ' res' → logprob: -12.377423286437988
    9. ' plaintext' → logprob: -13.377423286437988
    10. 'output' → logprob: -13.502423286437988

Token 142: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.22273682057857513
    2. '=' → logprob: -2.3477368354797363
    3. ' =' → logprob: -3.0977368354797363
    4. '_inverse' → logprob: -3.3477368354797363
    5. 'inv' → logprob: -4.597736835479736
    6. ',' → logprob: -5.347736835479736
    7. 'inverse' → logprob: -5.847736835479736
    8. 'def' → logprob: -6.222736835479736
    9. '_mod' → logprob: -6.722736835479736
    10. ' inverse' → logprob: -7.472736835479736

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011065390892326832
    2. '=' → logprob: -4.511065483093262
    3. ' ' → logprob: -11.136065483093262
    4. ' =
' → logprob: -13.886065483093262
    5. '  ' → logprob: -14.261065483093262
    6. '	' → logprob: -15.011065483093262
    7. ')' → logprob: -15.261065483093262
    8. ',' → logprob: -15.636065483093262
    9. '   ' → logprob: -15.886065483093262
    10. '<|end|>' → logprob: -16.136064529418945

Token 144: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.12692853808403015
    2. ' mod' → logprob: -2.1269285678863525
    3. '	mod' → logprob: -14.626928329467773
    4. '(mod' → logprob: -17.251928329467773
    5. '_mod' → logprob: -18.126928329467773
    6. ' ' → logprob: -19.626928329467773
    7. '   ' → logprob: -19.751928329467773
    8. ' мод' → logprob: -20.251928329467773
    9. 'm' → logprob: -20.376928329467773
    10. '.mod' → logprob: -21.376928329467773

Token 145: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -2.45848218582978e-06
    2. 'a' → logprob: -13.87500286102295
    3. ' inv' → logprob: -14.25000286102295
    4. '(inv' → logprob: -15.00000286102295
    5. 'in' → logprob: -15.62500286102295
    6. '_inv' → logprob: -16.000001907348633
    7. 'invert' → logprob: -17.250001907348633
    8. 'int' → logprob: -17.250001907348633
    9. 'iv' → logprob: -17.375001907348633
    10. '(' → logprob: -17.500001907348633

Token 146: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0788925439119339
    2. '(' → logprob: -2.578892469406128
    3. 'a' → logprob: -13.953892707824707
    4. '(
' → logprob: -14.203892707824707
    5. '<|end|>' → logprob: -14.828892707824707
    6. '(ai' → logprob: -15.328892707824707
    7. ' (' → logprob: -15.578892707824707
    8. '(A' → logprob: -16.70389175415039
    9. '(abs' → logprob: -16.82889175415039
    10. '(an' → logprob: -16.82889175415039

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.304016228066757e-05
    2. ' ,' → logprob: -10.125082969665527
    3. ',m' → logprob: -10.375082969665527
    4. ')' → logprob: -11.875082969665527
    5. 'a' → logprob: -13.750082969665527
    6. ',
' → logprob: -14.125082969665527
    7. ',a' → logprob: -14.125082969665527
    8. '   ' → logprob: -14.250082969665527
    9. '(' → logprob: -14.500082969665527
    10. 'm' → logprob: -14.750082969665527

Token 148: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.22542308270931244
    2. ' ' → logprob: -1.6004230976104736
    3. '256' → logprob: -12.350422859191895
    4. '27' → logprob: -13.600422859191895
    5. ' ' → logprob: -13.725422859191895
    6. '   ' → logprob: -14.225422859191895
    7. ')' → logprob: -14.662922859191895
    8. '```' → logprob: -14.850422859191895
    9. '
' → logprob: -15.287922859191895
    10. 'b' → logprob: -15.412922859191895

Token 149: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.003178782993927598
    2. ' ' → logprob: -5.753178596496582
    3. '256' → logprob: -14.253178596496582
    4. '27' → logprob: -16.5031795501709
    5. '   ' → logprob: -16.7531795501709
    6. '2' → logprob: -17.2531795501709
    7. 'm' → logprob: -17.5031795501709
    8. '```' → logprob: -17.5656795501709
    9. '25' → logprob: -17.9406795501709
    10. 'b' → logprob: -17.9406795501709

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.843177233240567e-05
    2. ')
' → logprob: -11.000018119812012
    3. ' )' → logprob: -13.500018119812012
    4. ')

' → logprob: -16.125019073486328
    5. '   ' → logprob: -17.375019073486328
    6. ')
' → logprob: -17.500019073486328
    7. ')#' → logprob: -17.875019073486328
    8. '),' → logprob: -18.125019073486328
    9. ' ' → logprob: -18.500019073486328
    10. ')a' → logprob: -18.625019073486328

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33432745933532715
    2. '
' → logprob: -1.3343274593353271
    3. '<|end|>' → logprob: -4.334327697753906
    4. ' if' → logprob: -5.084327697753906
    5. '    
' → logprob: -7.459327697753906
    6. '	if' → logprob: -8.584327697753906
    7. ' ' → logprob: -8.834327697753906
    8. '\n' → logprob: -9.209327697753906
    9. ' 
' → logprob: -9.584327697753906
    10. 'if' → logprob: -9.709327697753906

Token 152: ' res' (ID: 694)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1730564385652542
    2. 'result' → logprob: -3.0480563640594482
    3. ' result' → logprob: -3.1730563640594482
    4. 'if' → logprob: -3.1730563640594482
    5. ' decrypted' → logprob: -4.423056602478027
    6. 'de' → logprob: -5.173056602478027
    7. ' plaintext' → logprob: -5.548056602478027
    8. 'plaintext' → logprob: -5.548056602478027
    9. '   ' → logprob: -6.798056602478027
    10. 'res' (adapté à ' res') → logprob: -8.298056602478027

Token 153: ' =' (ID: 314)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.08519937098026276
    2. ' =' → logprob: -2.5851993560791016
    3. '=' → logprob: -5.585199356079102
    4. 'u' → logprob: -6.585199356079102
    5. ' ' → logprob: -7.085199356079102
    6. 'ults' → logprob: -9.710199356079102
    7. 'ul' → logprob: -9.960199356079102
    8. 'ULT' → logprob: -9.960199356079102
    9. 't' → logprob: -10.085199356079102
    10. 'ultat' → logprob: -10.210199356079102

Token 154: ' []
' (ID: 8911)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.04895918816328049
    2. '''' → logprob: -3.048959255218506
    3. '"' → logprob: -8.048958778381348
    4. ' ""' → logprob: -10.048958778381348
    5. '[]' → logprob: -11.923958778381348
    6. ''' → logprob: -13.548958778381348
    7. ' ''' → logprob: -13.923958778381348
    8. ' []' → logprob: -17.048959732055664
    9. '"",' → logprob: -17.423959732055664
    10. '"":' → logprob: -17.673959732055664

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.736728310585022
    2. ' for' → logprob: -1.111728310585022
    3. ' ' → logprob: -2.7367281913757324
    4. ' 
' → logprob: -3.2367281913757324
    5. '    
' → logprob: -3.7367281913757324
    6. '
' → logprob: -3.7367281913757324
    7. '  
' → logprob: -4.361728191375732
    8. '\n' → logprob: -4.736728191375732
    9. 'for' → logprob: -4.861728191375732
    10. '\' → logprob: -5.861728191375732

Token 156: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06258530169725418
    2. 'for' (adapté à ' for') → logprob: -2.8125853538513184
    3. '   ' → logprob: -8.06258487701416
    4. ' ' → logprob: -8.68758487701416
    5. '	for' → logprob: -9.06258487701416
    6. ' 
' → logprob: -11.56258487701416
    7. '
' → logprob: -12.18758487701416
    8. '\n' → logprob: -14.06258487701416
    9. ' ' → logprob: -14.43758487701416
    10. '    
' → logprob: -14.56258487701416

Token 157: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.024687645956873894
    2. 'c' → logprob: -4.149687767028809
    3. ' ' → logprob: -5.024687767028809
    4. ' char' → logprob: -6.649687767028809
    5. 'char' → logprob: -7.399687767028809
    6. ' ch' → logprob: -9.399687767028809
    7. 'ch' → logprob: -10.274687767028809
    8. '	c' → logprob: -11.774687767028809
    9. ' i' → logprob: -12.274687767028809
    10. ' t' → logprob: -13.274687767028809

Token 158: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004582973197102547
    2. 'in' → logprob: -5.50458288192749
    3. ' ' → logprob: -7.75458288192749
    4. 'n' → logprob: -10.754583358764648
    5. '	in' → logprob: -10.879583358764648
    6. ' i' → logprob: -11.004583358764648
    7. '  ' → logprob: -12.129583358764648
    8. '   ' → logprob: -13.129583358764648
    9. 'i' → logprob: -13.379583358764648
    10. 's' → logprob: -13.692083358764648

Token 159: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.07889022678136826
    2. ' text' → logprob: -2.578890323638916
    3. 'range' → logprob: -16.328889846801758
    4. '	text' → logprob: -16.328889846801758
    5. ' range' → logprob: -16.453889846801758
    6. '(text' → logprob: -16.453889846801758
    7. '_text' → logprob: -16.828889846801758
    8. ' ' → logprob: -16.828889846801758
    9. '{text' → logprob: -17.203889846801758
    10. '"text' → logprob: -17.328889846801758

Token 160: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003934967797249556
    2. ' :' → logprob: -5.753934860229492
    3. ':
' → logprob: -7.378934860229492
    4. '):' → logprob: -9.753934860229492
    5. ',' → logprob: -10.378934860229492
    6. ' in' → logprob: -11.753934860229492
    7. '):
' → logprob: -11.753934860229492
    8. ' :
' → logprob: -11.878934860229492
    9. '=' → logprob: -12.128934860229492
    10. ')' → logprob: -12.378934860229492

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08156304806470871
    2. ' ' → logprob: -3.4565629959106445
    3. '    ' → logprob: -4.0815629959106445
    4. '<|end|>' → logprob: -4.4565629959106445
    5. ' if' → logprob: -4.8315629959106445
    6. '        ' → logprob: -5.9565629959106445
    7. '   ' → logprob: -6.0815629959106445
    8. '        
' → logprob: -6.5815629959106445
    9. ' 
' → logprob: -6.7065629959106445
    10. 'if' → logprob: -7.7065629959106445

Token 162: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5663987398147583
    2. ' if' → logprob: -0.9413987398147583
    3. 'if' (adapté à ' if') → logprob: -3.8163986206054688
    4. '        ' → logprob: -4.941398620605469
    5. '       ' → logprob: -5.316398620605469
    6. ' 
' → logprob: -5.941398620605469
    7. '<|end|>' → logprob: -5.941398620605469
    8. '    ' → logprob: -6.566398620605469
    9. ' i' → logprob: -7.191398620605469
    10. '        
' → logprob: -8.691398620605469

Token 163: ' '' (ID: 461)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.054582975804805756
    2. ' '' → logprob: -3.3045830726623535
    3. ''' → logprob: -4.3045830726623535
    4. 'c' → logprob: -6.5545830726623535
    5. ' ' → logprob: -6.5545830726623535
    6. ' not' → logprob: -11.929582595825195
    7. ' ord' → logprob: -11.929582595825195
    8. '"' → logprob: -12.179582595825195
    9. '	c' → logprob: -12.179582595825195
    10. ' ' → logprob: -12.179582595825195

Token 164: 'a' (ID: 64)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0006386925233528018
    2. 'a' → logprob: -7.625638484954834
    3. ' A' → logprob: -8.875638961791992
    4. ''A' → logprob: -11.500638961791992
    5. ' '' → logprob: -14.375638961791992
    6. ''' → logprob: -15.750638961791992
    7. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -16.125638961791992
    8. ''a' → logprob: -16.750638961791992
    9. '_A' → logprob: -17.000638961791992
    10. ' a' → logprob: -17.000638961791992

Token 165: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -2.463036435074173e-05
    2. '<=' → logprob: -11.375024795532227
    3. ' <=' → logprob: -12.500024795532227
    4. ''<' → logprob: -13.000024795532227
    5. ''z' → logprob: -13.375024795532227
    6. ''''' → logprob: -13.875024795532227
    7. ''>' → logprob: -14.375024795532227
    8. ''s' → logprob: -14.375024795532227
    9. '"' → logprob: -14.500024795532227
    10. ' '' → logprob: -14.625024795532227

Token 166: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.029899397864937782
    2. '<=' → logprob: -3.5298993587493896
    3. ''' → logprob: -9.029899597167969
    4. ' ' → logprob: -11.279899597167969
    5. '[' → logprob: -13.029899597167969
    6. ')' → logprob: -13.154899597167969
    7. '"' → logprob: -13.279899597167969
    8. ' <' → logprob: -13.279899597167969
    9. '=' → logprob: -13.654899597167969
    10. 'ord' → logprob: -13.904899597167969

Token 167: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0015023599844425917
    2. ' c' → logprob: -6.501502513885498
    3. '	c' → logprob: -17.501502990722656
    4. ')c' → logprob: -17.876502990722656
    5. '_c' → logprob: -19.376502990722656
    6. ' ' → logprob: -19.626502990722656
    7. '%c' → logprob: -19.626502990722656
    8. '
' → logprob: -19.876502990722656
    9. ':c' → logprob: -20.251502990722656
    10. '<c' → logprob: -20.251502990722656

Token 168: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0338430181145668
    2. '<=' → logprob: -3.4088430404663086
    3. ' and' → logprob: -8.783843040466309
    4. 'and' → logprob: -10.783843040466309
    5. '<|end|>' → logprob: -12.033843040466309
    6. ' ' → logprob: -12.408843040466309
    7. ':' → logprob: -13.033843040466309
    8. '[' → logprob: -13.658843040466309
    9. '   ' → logprob: -13.658843040466309
    10. '<|end|>' → logprob: -13.783843040466309

Token 169: ' '' (ID: 461)
  Prédit: ''z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''z' → logprob: -0.0004690418136306107
    2. ' '' → logprob: -8.125469207763672
    3. 'z' → logprob: -9.000469207763672
    4. '‘z' → logprob: -10.625469207763672
    5. ' z' → logprob: -11.500469207763672
    6. ' ' → logprob: -12.125469207763672
    7. ''y' → logprob: -12.125469207763672
    8. ''' → logprob: -13.375469207763672
    9. '’z' → logprob: -13.625469207763672
    10. '	z' → logprob: -14.625469207763672

Token 170: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.023257939144968987
    2. ''z' → logprob: -3.7732579708099365
    3. ' z' → logprob: -11.523258209228516
    4. ''' → logprob: -13.898258209228516
    5. '	z' → logprob: -13.898258209228516
    6. '‘z' → logprob: -14.648258209228516
    7. 'y' → logprob: -16.648258209228516
    8. '_z' → logprob: -17.023258209228516
    9. ''y' → logprob: -17.273258209228516
    10. ''s' → logprob: -17.773258209228516

Token 171: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.27358072996139526
    2. ':' → logprob: -2.02358078956604
    3. '':
' → logprob: -2.27358078956604
    4. ':
' → logprob: -5.898580551147461
    5. ''' → logprob: -6.648580551147461
    6. ' ':' → logprob: -9.898580551147461
    7. ' :' → logprob: -10.273580551147461
    8. '):
' → logprob: -10.773580551147461
    9. '':
' → logprob: -10.773580551147461
    10. '       ' → logprob: -11.148580551147461

Token 172: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3625258207321167
    2. ' ' → logprob: -2.3625259399414062
    3. '           ' → logprob: -2.4875259399414062
    4. '        ' → logprob: -2.6125259399414062
    5. '        
' → logprob: -3.8625259399414062
    6. ' 
' → logprob: -3.9875259399414062
    7. '   ' → logprob: -5.862525939941406
    8. '<|end|>' → logprob: -5.987525939941406
    9. '
' → logprob: -6.987525939941406
    10. '    ' → logprob: -7.237525939941406

Token 173: ' val' (ID: 1459)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2735016345977783
    2. 'x' → logprob: -2.1485016345977783
    3. '           ' → logprob: -3.6485016345977783
    4. '        ' → logprob: -4.023501396179199
    5. ' t' → logprob: -4.023501396179199
    6. ' y' → logprob: -4.523501396179199
    7. ' n' → logprob: -4.898501396179199
    8. '       ' → logprob: -5.023501396179199
    9. ' ' → logprob: -5.273501396179199
    10. ' num' → logprob: -5.273501396179199

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048592709004879
    2. '=' → logprob: -3.0485928058624268
    3. ' ' → logprob: -12.298592567443848
    4. '    ' → logprob: -15.798592567443848
    5. '        ' → logprob: -16.048593521118164
    6. ' =(' → logprob: -16.048593521118164
    7. ' =
' → logprob: -16.173593521118164
    8. '_' → logprob: -16.423593521118164
    9. ')' → logprob: -16.548593521118164
    10. '           ' → logprob: -16.673593521118164

Token 175: ' ord' (ID: 6608)
  Prédit: '(ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.1117461547255516
    2. ' (' → logprob: -2.486746072769165
    3. ' ord' → logprob: -4.736746311187744
    4. '(c' → logprob: -4.861746311187744
    5. 'ord' → logprob: -5.486746311187744
    6. '((' → logprob: -6.861746311187744
    7. '(chr' → logprob: -7.361746311187744
    8. 'c' → logprob: -9.486745834350586
    9. '(' → logprob: -9.736745834350586
    10. '(a' → logprob: -10.986745834350586

Token 176: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.005245733540505171
    2. '(' → logprob: -5.255245685577393
    3. 'c' → logprob: -11.75524616241455
    4. ' (' → logprob: -13.00524616241455
    5. '('' → logprob: -13.38024616241455
    6. '(
' → logprob: -16.255245208740234
    7. '((' → logprob: -16.380245208740234
    8. ')c' → logprob: -16.880245208740234
    9. '	c' → logprob: -17.630245208740234
    10. ' c' → logprob: -17.880245208740234

Token 177: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005855439696460962
    2. ' )' → logprob: -5.880855560302734
    3. ' -' → logprob: -5.880855560302734
    4. '-' → logprob: -8.630855560302734
    5. ' ' → logprob: -11.005855560302734
    6. '-)' → logprob: -11.380855560302734
    7. ')-' → logprob: -11.380855560302734
    8. '   ' → logprob: -11.505855560302734
    9. '           ' → logprob: -11.630855560302734
    10. '')' → logprob: -12.005855560302734

Token 178: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04015589877963066
    2. '-' → logprob: -3.2901558876037598
    3. ' ' → logprob: -6.91515588760376
    4. ')' → logprob: -6.91515588760376
    5. '(' → logprob: -10.040156364440918
    6. '   ' → logprob: -10.540156364440918
    7. '           ' → logprob: -11.540156364440918
    8. '       ' → logprob: -11.540156364440918
    9. ' )' → logprob: -11.665156364440918
    10. '  ' → logprob: -12.540156364440918

Token 179: ' ord' (ID: 6608)
  Prédit: '97'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -0.27011340856552124
    2. ''a' → logprob: -2.395113468170166
    3. ' ord' → logprob: -2.395113468170166
    4. ''' → logprob: -3.395113468170166
    5. 'ord' → logprob: -4.395113468170166
    6. 'a' → logprob: -5.395113468170166
    7. ' ' → logprob: -5.770113468170166
    8. '96' → logprob: -8.270112991333008
    9. ' a' → logprob: -8.645112991333008
    10. ' '' → logprob: -8.770112991333008

Token 180: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00033713103039190173
    2. '(' → logprob: -9.000337600708008
    3. 'a' → logprob: -9.000337600708008
    4. ''a' → logprob: -9.375337600708008
    5. '(a' → logprob: -12.375337600708008
    6. ''' → logprob: -14.125337600708008
    7. ' ('' → logprob: -15.125337600708008
    8. '("' → logprob: -16.125337600708008
    9. ''s' → logprob: -16.375337600708008
    10. ''z' → logprob: -18.000337600708008

Token 181: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.320199877838604e-07
    2. ''a' → logprob: -15.0
    3. 'abcdefghijklmnopqrstuvwxyz' → logprob: -19.125
    4. ' a' → logprob: -20.25
    5. ''' → logprob: -21.375
    6. '`' → logprob: -21.375
    7. '```' → logprob: -21.375
    8. 'а' → logprob: -21.5
    9. '	a' → logprob: -23.375
    10. '')' → logprob: -24.25

Token 182: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09002859890460968
    2. '')' → logprob: -2.7150285243988037
    3. ')
' → logprob: -4.090028762817383
    4. '')
' → logprob: -5.840028762817383
    5. ' )' → logprob: -8.965028762817383
    6. ')
' → logprob: -10.340028762817383
    7. '       ' → logprob: -10.965028762817383
    8. '")' → logprob: -11.465028762817383
    9. ' )
' → logprob: -11.465028762817383
    10. '           ' → logprob: -11.590028762817383

Token 183: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0074310386553406715
    2. '            
' → logprob: -5.8824310302734375
    3. ' 
' → logprob: -6.6324310302734375
    4. '
' → logprob: -7.0074310302734375
    5. ')' → logprob: -7.2574310302734375
    6. '            ' → logprob: -7.3824310302734375
    7. '           
' → logprob: -8.507431030273438
    8. ' ' → logprob: -9.257431030273438
    9. '             
' → logprob: -9.257431030273438
    10. '       ' → logprob: -9.382431030273438

Token 184: ' orig' (ID: 17481)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6913394927978516
    2. 'x' → logprob: -1.1913394927978516
    3. 'd' → logprob: -2.5663394927978516
    4. ' d' → logprob: -4.316339492797852
    5. ' new' → logprob: -4.316339492797852
    6. '           ' → logprob: -4.316339492797852
    7. 'decoded' → logprob: -4.316339492797852
    8. ' y' → logprob: -4.566339492797852
    9. ' decrypted' → logprob: -4.816339492797852
    10. ' decoded' → logprob: -4.941339492797852

Token 185: ' =' (ID: 314)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.03662973642349243
    2. ' =' → logprob: -3.9116296768188477
    3. 'val' → logprob: -4.286629676818848
    4. '=' → logprob: -6.286629676818848
    5. 'al' → logprob: -9.036629676818848
    6. 'Val' → logprob: -9.661629676818848
    7. '	val' → logprob: -10.286629676818848
    8. 'inal' → logprob: -10.286629676818848
    9. '_' → logprob: -10.661629676818848
    10. ' ' → logprob: -10.786629676818848

Token 186: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.11521336436271667
    2. ' (' → logprob: -2.240213394165039
    3. '((' → logprob: -6.615213394165039
    4. '(' → logprob: -7.240213394165039
    5. 'a' → logprob: -8.365213394165039
    6. ' ((' → logprob: -9.990213394165039
    7. ' a' → logprob: -10.865213394165039
    8. '   ' → logprob: -10.990213394165039
    9. '(A' → logprob: -12.615213394165039
    10. '(((' → logprob: -12.865213394165039

Token 187: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.003503492334857583
    2. ' a' → logprob: -5.753503322601318
    3. '(a' → logprob: -8.253503799438477
    4. ' (' → logprob: -10.128503799438477
    5. '(' → logprob: -11.003503799438477
    6. '   ' → logprob: -11.878503799438477
    7. 'val' → logprob: -14.503503799438477
    8. '	a' → logprob: -15.003503799438477
    9. ')a' → logprob: -15.128503799438477
    10. ')' → logprob: -15.503503799438477

Token 188: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -2.3319124011322856e-05
    2. 'inv' → logprob: -11.125022888183594
    3. '_val' → logprob: -12.125022888183594
    4. '_inverse' → logprob: -12.875022888183594
    5. '_INV' → logprob: -15.500022888183594
    6. '_in' → logprob: -16.250022888183594
    7. '_' → logprob: -16.500022888183594
    8. 'Inv' → logprob: -17.750022888183594
    9. '*' → logprob: -17.875022888183594
    10. '^{-' → logprob: -18.000022888183594

Token 189: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.008635961450636387
    2. '*' → logprob: -5.008635997772217
    3. '*(' → logprob: -6.258635997772217
    4. ' ' → logprob: -13.383635520935059
    5. '<|end|>' → logprob: -13.883635520935059
    6. ' *(' → logprob: -14.133635520935059
    7. ')' → logprob: -14.758635520935059
    8. ' (' → logprob: -15.133635520935059
    9. '(' → logprob: -15.258635520935059
    10. '*((' → logprob: -15.633635520935059

Token 190: ' (' (ID: 350)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.20296424627304077
    2. ' (' → logprob: -1.7029643058776855
    3. '(' → logprob: -6.7029643058776855
    4. '(value' → logprob: -8.827963829040527
    5. '[val' → logprob: -9.577963829040527
    6. '<|end|>' → logprob: -9.827963829040527
    7. '((' → logprob: -11.202963829040527
    8. '(res' → logprob: -12.202963829040527
    9. '(ord' → logprob: -12.577963829040527
    10. '(rest' → logprob: -12.702963829040527

Token 191: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.05660853534936905
    2. '(val' → logprob: -3.4316084384918213
    3. ' val' → logprob: -3.8066084384918213
    4. '[val' → logprob: -8.306608200073242
    5. ' (' → logprob: -8.556608200073242
    6. '	val' → logprob: -10.931608200073242
    7. ',val' → logprob: -12.431608200073242
    8. '_val' → logprob: -12.431608200073242
    9. '   ' → logprob: -12.806608200073242
    10. 'Val' → logprob: -13.056608200073242

Token 192: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.000958031858317554
    2. '-' → logprob: -7.00095796585083
    3. ' ' → logprob: -10.000958442687988
    4. '<|end|>' → logprob: -14.375958442687988
    5. '-b' → logprob: -15.500958442687988
    6. ' ' → logprob: -16.375957489013672
    7. ' –' → logprob: -16.375957489013672
    8. 'b' → logprob: -16.625957489013672
    9. ' (' → logprob: -17.250957489013672
    10. '   ' → logprob: -18.000957489013672

Token 193: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3132636249065399
    2. ' b' → logprob: -1.3132636547088623
    3. ')b' → logprob: -13.938263893127441
    4. '	b' → logprob: -14.563263893127441
    5. '<|end|>' → logprob: -15.813263893127441
    6. ' б' → logprob: -15.938263893127441
    7. '(b' → logprob: -16.938262939453125
    8. ' ' → logprob: -16.938262939453125
    9. '_b' → logprob: -17.438262939453125
    10. '>b' → logprob: -18.188262939453125

Token 194: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03851395845413208
    2. ' ))' → logprob: -3.9135138988494873
    3. ')' → logprob: -4.038514137268066
    4. ' )' → logprob: -8.913514137268066
    5. ' ' → logprob: -10.788514137268066
    6. '    ' → logprob: -11.663514137268066
    7. '   ' → logprob: -11.788514137268066
    8. ' +' → logprob: -12.413514137268066
    9. '%' → logprob: -12.538514137268066
    10. '+' → logprob: -12.913514137268066

Token 195: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5193016529083252
    2. ')' → logprob: -1.0193016529083252
    3. '%' → logprob: -3.269301652908325
    4. ' )' → logprob: -5.269301414489746
    5. ')%' → logprob: -7.269301414489746
    6. ' ' → logprob: -8.019301414489746
    7. ' ' → logprob: -11.894301414489746
    8. ' %)' → logprob: -13.394301414489746
    9. '```' → logprob: -14.519301414489746
    10. '   ' → logprob: -14.769301414489746

Token 196: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.5231292247772217
    2. ' ' → logprob: -0.8981292247772217
    3. '"' → logprob: -13.2731294631958
    4. ''' → logprob: -13.7731294631958
    5. ' ' → logprob: -14.0231294631958
    6. '  ' → logprob: -14.5231294631958
    7. ' 
' → logprob: -14.6481294631958
    8. '`' → logprob: -15.0856294631958
    9. '```' → logprob: -15.4606294631958
    10. '	' → logprob: -15.9606294631958

Token 197: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '```' → logprob: -17.25010871887207
    4. '`' → logprob: -18.37510871887207
    5. '   ' → logprob: -18.75010871887207
    6. '"' → logprob: -19.56260871887207
    7. '``' → logprob: -19.68760871887207
    8. '{' → logprob: -20.00010871887207
    9. '
' → logprob: -20.37510871887207
    10. '  ' → logprob: -20.56260871887207

Token 198: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00041386886732652783
    2. '
' → logprob: -8.00041389465332
    3. ')' → logprob: -10.25041389465332
    4. '            
' → logprob: -11.62541389465332
    5. ',' → logprob: -11.75041389465332
    6. '          ' → logprob: -11.87541389465332
    7. '<|end|>' → logprob: -12.37541389465332
    8. '       ' → logprob: -12.62541389465332
    9. '            ' → logprob: -12.87541389465332
    10. '
' → logprob: -13.00041389465332

Token 199: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007541201775893569
    2. '
' → logprob: -7.250754356384277
    3. '            
' → logprob: -11.000754356384277
    4. '       ' → logprob: -12.000754356384277
    5. '\n' → logprob: -12.000754356384277
    6. ' 
' → logprob: -13.000754356384277
    7. '
' → logprob: -13.125754356384277
    8. '          ' → logprob: -13.375754356384277
    9. '               ' → logprob: -13.375754356384277
    10. '<|end|>' → logprob: -14.000754356384277

Token 200: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.254024475812912
    2. ' res' → logprob: -1.5040245056152344
    3. '           ' → logprob: -6.254024505615234
    4. '       ' → logprob: -9.129024505615234
    5. '
' → logprob: -10.004024505615234
    6. '	res' → logprob: -12.004024505615234
    7. '   ' → logprob: -12.504024505615234
    8. '               ' → logprob: -14.004024505615234
    9. '$res' → logprob: -14.004024505615234
    10. '_res' → logprob: -14.254024505615234

Token 201: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0040807779878377914
    2. '.' → logprob: -5.504080772399902
    3. '.app' → logprob: -14.004080772399902
    4. '.extend' → logprob: -14.004080772399902
    5. ' .' → logprob: -15.254080772399902
    6. 'append' → logprob: -15.504080772399902
    7. '.ap' → logprob: -15.754080772399902
    8. '.Append' → logprob: -16.87908172607422
    9. '.a' → logprob: -18.12908172607422
    10. '.push' → logprob: -18.25408172607422

Token 202: '(chr' (ID: 185847)
  Prédit: '(chr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chr' → logprob: -1.9981420336989686e-05
    2. 'chr' → logprob: -11.000020027160645
    3. '(' → logprob: -12.750020027160645
    4. ' chr' → logprob: -15.250020027160645
    5. ' (' → logprob: -16.875019073486328
    6. '(ch' → logprob: -18.000019073486328
    7. '_chr' → logprob: -19.500019073486328
    8. '(
' → logprob: -20.750019073486328
    9. '(ord' → logprob: -21.000019073486328
    10. '(chars' → logprob: -21.375019073486328

Token 203: '(orig' (ID: 112169)
  Prédit: '(orig'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(orig' → logprob: -0.0025217996444553137
    2. '(ord' → logprob: -6.002521991729736
    3. '(' → logprob: -10.877521514892578
    4. 'orig' → logprob: -11.127521514892578
    5. ' (' → logprob: -11.502521514892578
    6. '(or' → logprob: -14.252521514892578
    7. '(org' → logprob: -14.502521514892578
    8. ' orig' → logprob: -14.627521514892578
    9. '(original' → logprob: -14.877521514892578
    10. '(origin' → logprob: -14.877521514892578

Token 204: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12697693705558777
    2. '+' → logprob: -2.12697696685791
    3. '(ord' → logprob: -10.25197696685791
    4. ' ' → logprob: -11.50197696685791
    5. 'ord' → logprob: -13.62697696685791
    6. ')' → logprob: -14.12697696685791
    7. '   ' → logprob: -14.50197696685791
    8. '(' → logprob: -15.00197696685791
    9. '  ' → logprob: -15.62697696685791
    10. ' ord' → logprob: -16.126976013183594

Token 205: ' ord' (ID: 6608)
  Prédit: ' ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.12983693182468414
    2. '97' → logprob: -2.6298370361328125
    3. 'ord' → logprob: -3.0048370361328125
    4. '(ord' → logprob: -10.004837036132812
    5. 'a' → logprob: -10.629837036132812
    6. ' ' → logprob: -10.629837036132812
    7. '96' → logprob: -11.504837036132812
    8. '32' → logprob: -11.879837036132812
    9. ' a' → logprob: -12.129837036132812
    10. '98' → logprob: -12.629837036132812

Token 206: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00013166792632546276
    2. '(' → logprob: -9.125131607055664
    3. 'a' → logprob: -11.250131607055664
    4. ''a' → logprob: -12.000131607055664
    5. ' ('' → logprob: -13.000131607055664
    6. '(a' → logprob: -14.375131607055664
    7. '("' → logprob: -15.625131607055664
    8. ' (' → logprob: -15.750131607055664
    9. ''' → logprob: -15.875131607055664
    10. '(('' → logprob: -16.000131607055664

Token 207: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.981667537620524e-06
    2. ''a' → logprob: -13.250001907348633
    3. ''' → logprob: -16.500001907348633
    4. ' a' → logprob: -17.500001907348633
    5. 'а' → logprob: -18.000001907348633
    6. '`' → logprob: -18.875001907348633
    7. '')' → logprob: -19.125001907348633
    8. 'abcdefghijklmnopqrstuvwxyz' → logprob: -20.000001907348633
    9. '```' → logprob: -20.250001907348633
    10. '	a' → logprob: -20.750001907348633

Token 208: '')))
' (ID: 114539)
  Prédit: '')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')))' → logprob: -0.10225225239992142
    2. ')))' → logprob: -2.602252244949341
    3. ')' → logprob: -3.852252244949341
    4. ''))' → logprob: -6.35225248336792
    5. '')' → logprob: -9.977252006530762
    6. '')))
' → logprob: -10.602252006530762
    7. '))' → logprob: -10.852252006530762
    8. '")))' → logprob: -11.102252006530762
    9. ''' → logprob: -11.602252006530762
    10. ')))
' → logprob: -14.477252006530762

Token 209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056301526725292206
    2. '   ' → logprob: -3.4313015937805176
    3. ' else' → logprob: -4.431301593780518
    4. '
' → logprob: -5.306301593780518
    5. ' return' → logprob: -6.431301593780518
    6. 'else' → logprob: -6.681301593780518
    7. '    
' → logprob: -7.556301593780518
    8. ' 
' → logprob: -7.556301593780518
    9. ' ' → logprob: -7.931301593780518
    10. 'return' → logprob: -8.43130111694336

Token 210: ' else' (ID: 1203)
  Prédit: ' elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.7229293584823608
    2. 'elif' → logprob: -1.0979293584823608
    3. ' else' → logprob: -1.9729293584823608
    4. 'else' (adapté à ' else') → logprob: -3.8479294776916504
    5. '       ' → logprob: -3.9729294776916504
    6. '   ' → logprob: -6.59792947769165
    7. '	elif' → logprob: -7.84792947769165
    8. '    ' → logprob: -9.347929000854492
    9. ' ' → logprob: -10.097929000854492
    10. '	else' → logprob: -11.097929000854492

Token 211: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16878995299339294
    2. ':' → logprob: -1.9187899827957153
    3. ':
' → logprob: -5.293789863586426
    4. '       ' → logprob: -5.918789863586426
    5. '        ' → logprob: -8.293789863586426
    6. ' :' → logprob: -9.293789863586426
    7. '<|end|>' → logprob: -9.293789863586426
    8. '          ' → logprob: -9.418789863586426
    9. '            ' → logprob: -9.418789863586426
    10. '   ' → logprob: -9.793789863586426

Token 212: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1709984689950943
    2. '       ' → logprob: -2.2959985733032227
    3. 'res' → logprob: -3.5459985733032227
    4. ' res' → logprob: -3.6709985733032227
    5. '   ' → logprob: -6.420998573303223
    6. '        ' → logprob: -8.795998573303223
    7. ' ' → logprob: -9.420998573303223
    8. '
' → logprob: -9.670998573303223
    9. '    ' → logprob: -9.920998573303223
    10. ' ' → logprob: -10.295998573303223

Token 213: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.029753148555755615
    2. ' res' → logprob: -3.5297532081604004
    3. '   ' → logprob: -13.529752731323242
    4. 're' → logprob: -14.529752731323242
    5. 'r' → logprob: -14.904752731323242
    6. '	res' → logprob: -15.904752731323242
    7. '           ' → logprob: -16.779752731323242
    8. 'ress' → logprob: -16.904752731323242
    9. '
' → logprob: -17.154752731323242
    10. 'resi' → logprob: -17.529752731323242

Token 214: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002556638326495886
    2. '.' → logprob: -6.002556800842285
    3. 'append' → logprob: -9.877556800842285
    4. '.extend' → logprob: -10.877556800842285
    5. '.app' → logprob: -11.502556800842285
    6. '.ap' → logprob: -15.002556800842285
    7. '.Append' → logprob: -16.00255584716797
    8. 'appen' → logprob: -16.25255584716797
    9. ' .' → logprob: -17.00255584716797
    10. ' append' → logprob: -17.12755584716797

Token 215: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -4.274932143744081e-05
    2. '(' → logprob: -10.375042915344238
    3. 'c' → logprob: -11.375042915344238
    4. ')c' → logprob: -18.500041961669922
    5. '(
' → logprob: -18.625041961669922
    6. '('' → logprob: -18.750041961669922
    7. '((' → logprob: -19.250041961669922
    8. ' (' → logprob: -19.250041961669922
    9. ' c' → logprob: -19.500041961669922
    10. '	c' → logprob: -19.875041961669922

Token 216: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.250000953674316
    3. ' )' → logprob: -15.250000953674316
    4. ')return' → logprob: -16.875001907348633
    5. '))' → logprob: -18.500001907348633
    6. ')}' → logprob: -18.875001907348633
    7. '   ' → logprob: -19.000001907348633
    8. '),' → logprob: -19.625001907348633
    9. ')}}' → logprob: -19.750001907348633
    10. ')`' → logprob: -19.875001907348633

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025531314313411713
    2. ' return' → logprob: -4.02553129196167
    3. '
' → logprob: -5.27553129196167
    4. 'return' → logprob: -6.52553129196167
    5. '	return' → logprob: -7.65053129196167
    6. '    
' → logprob: -8.275531768798828
    7. ' ' → logprob: -12.400531768798828
    8. ':return' → logprob: -12.400531768798828
    9. '  
' → logprob: -12.525531768798828
    10. '\n' → logprob: -12.525531768798828

Token 218: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.049887072294950485
    2. ' return' → logprob: -3.049887180328369
    3. '   ' → logprob: -6.674887180328369
    4. '	return' → logprob: -11.049886703491211
    5. '
' → logprob: -11.174886703491211
    6. ' ' → logprob: -12.549886703491211
    7. '    
' → logprob: -13.799886703491211
    8. '```' → logprob: -14.049886703491211
    9. 'eturn' → logprob: -14.424886703491211
    10. ')return' → logprob: -15.174886703491211

Token 219: ' ''.' (ID: 105941)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.843184232711792
    2. '''.' → logprob: -1.093184232711792
    3. ' ''.' → logprob: -1.843184232711792
    4. ' "".' → logprob: -2.593184232711792
    5. '""' → logprob: -7.218184471130371
    6. '''' → logprob: -7.593184471130371
    7. ''' → logprob: -8.843184471130371
    8. ' "' → logprob: -10.593184471130371
    9. ' ' → logprob: -11.968184471130371
    10. '''
' → logprob: -12.718184471130371

Token 220: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.4987974029500037e-05
    2. 'jo' → logprob: -10.750024795532227
    3. 'j' → logprob: -12.875024795532227
    4. '```' → logprob: -14.750024795532227
    5. ' join' → logprob: -15.125024795532227
    6. '''.' → logprob: -16.125024795532227
    7. '(join' → logprob: -17.000024795532227
    8. 'concat' → logprob: -17.125024795532227
    9. '.join' → logprob: -18.875024795532227
    10. '``' → logprob: -19.500024795532227

Token 221: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.16026079654693604
    2. '(' → logprob: -1.910260796546936
    3. 'res' → logprob: -11.285261154174805
    4. '(
' → logprob: -11.535261154174805
    5. ' (' → logprob: -12.160261154174805
    6. '(rest' → logprob: -13.660261154174805
    7. '("("' → logprob: -14.035261154174805
    8. '()' → logprob: -14.160261154174805
    9. '(`' → logprob: -14.160261154174805
    10. '<|end|>' → logprob: -14.160261154174805

Token 222: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.125000953674316
    3. ')`' → logprob: -18.25
    4. '}' → logprob: -18.5
    5. ' )' → logprob: -18.5
    6. '))' → logprob: -19.375
    7. '),' → logprob: -19.5
    8. '<|end|>' → logprob: -19.5
    9. ')

' → logprob: -19.625
    10. '')' → logprob: -19.875

Token 223: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06269346922636032
    2. 'for' → logprob: -3.9376933574676514
    3. 'a' → logprob: -4.3126935958862305
    4. '#' → logprob: -4.8126935958862305
    5. '```' → logprob: -5.1876935958862305
    6. 'import' → logprob: -5.1876935958862305
    7. 'if' → logprob: -5.6876935958862305
    8. '<|end|>' → logprob: -7.1876935958862305
    9. 'key' → logprob: -7.6876935958862305
    10. 'n' → logprob: -7.8126935958862305

Token 224: ' contains' (ID: 8895)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6690642237663269
    2. ' encrypt' → logprob: -1.2940642833709717
    3. 'encrypt' → logprob: -1.7940642833709717
    4. 'main' → logprob: -3.1690642833709717
    5. ' affine' → logprob: -5.419064044952393
    6. 'aff' → logprob: -8.04406452178955
    7. ' ca' → logprob: -9.04406452178955
    8. 'br' → logprob: -9.54406452178955
    9. ' brute' → logprob: -9.66906452178955
    10. 'encode' → logprob: -10.16906452178955

Token 225: '_keyword' (ID: 117000)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5670990943908691
    2. '_keyword' → logprob: -1.5670990943908691
    3. '_v' → logprob: -2.067099094390869
    4. '_sub' → logprob: -2.567099094390869
    5. '_word' → logprob: -2.567099094390869
    6. '(' → logprob: -2.942099094390869
    7. '_secret' → logprob: -3.317099094390869
    8. '_key' → logprob: -3.442099094390869
    9. '_keywords' → logprob: -3.567099094390869
    10. '_cipher' → logprob: -3.942099094390869

Token 226: '(s' (ID: 1858)
  Prédit: '(text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.20207595825195312
    2. '(' → logprob: -1.7020759582519531
    3. '(word' → logprob: -7.827075958251953
    4. ' (' → logprob: -10.077075958251953
    5. '(Text' → logprob: -10.077075958251953
    6. '_(' → logprob: -10.702075958251953
    7. '(string' → logprob: -10.827075958251953
    8. '(sentence' → logprob: -11.077075958251953
    9. '(s' → logprob: -11.202075958251953
    10. '(txt' → logprob: -11.202075958251953

Token 227: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023141687270253897
    2. ' ,' → logprob: -6.25231409072876
    3. ',s' → logprob: -8.377314567565918
    4. 's' → logprob: -9.127314567565918
    5. '):' → logprob: -11.252314567565918
    6. ')' → logprob: -12.127314567565918
    7. '):
' → logprob: -12.127314567565918
    8. ',
' → logprob: -12.627314567565918
    9. '(s' → logprob: -12.627314567565918
    10. '_,' → logprob: -12.752314567565918

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00045605594641529024
    2. ' return' → logprob: -8.000455856323242
    3. '    
' → logprob: -9.875455856323242
    4. '    ' → logprob: -11.000455856323242
    5. '       ' → logprob: -11.625455856323242
    6. '
' → logprob: -11.750455856323242
    7. ' keywords' → logprob: -12.125455856323242
    8. ' 
' → logprob: -12.250455856323242
    9. 'return' → logprob: -12.625455856323242
    10. '_keywords' → logprob: -12.875455856323242

Token 229: ' return' (ID: 622)
  Prédit: ' keywords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' keywords' → logprob: -0.38540971279144287
    2. 'keywords' → logprob: -1.2604097127914429
    3. '   ' → logprob: -3.6354098320007324
    4. ' key' → logprob: -5.260409832000732
    5. ' return' → logprob: -6.135409832000732
    6. ' for' → logprob: -7.135409832000732
    7. 'return' (adapté à ' return') → logprob: -7.885409832000732
    8. 'key' → logprob: -8.010409355163574
    9. 'keyword' → logprob: -8.385409355163574
    10. ' keys' → logprob: -8.510409355163574

Token 230: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.9743815064430237
    2. ' any' → logprob: -1.099381446838379
    3. ' "' → logprob: -2.099381446838379
    4. ''' → logprob: -2.724381446838379
    5. ''any' → logprob: -2.849381446838379
    6. ' '' → logprob: -3.349381446838379
    7. 'any' → logprob: -5.099381446838379
    8. ''s' → logprob: -6.349381446838379
    9. ' ' → logprob: -8.974381446838379
    10. ''an' → logprob: -9.224381446838379

Token 231: 'that' (ID: 14116)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.3116488456726074
    2. 'secret' → logprob: -2.0616488456726074
    3. 'keyword' → logprob: -3.1866488456726074
    4. 'the' → logprob: -3.4366488456726074
    5. 'hello' → logprob: -4.561648845672607
    6. 'key' → logprob: -4.811648845672607
    7. 'python' → logprob: -5.186648845672607
    8. 'crypto' → logprob: -5.311648845672607
    9. ' flag' → logprob: -5.561648845672607
    10. ' the' → logprob: -5.686648845672607

Token 232: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03570015728473663
    2. ' '' → logprob: -3.4107000827789307
    3. ' in' → logprob: -6.28570032119751
    4. ''in' → logprob: -9.285699844360352
    5. ''s' → logprob: -10.410699844360352
    6. 'in' → logprob: -10.660699844360352
    7. ' that' → logprob: -11.285699844360352
    8. ' ' → logprob: -11.910699844360352
    9. ' the' → logprob: -12.535699844360352
    10. '"' → logprob: -12.535699844360352

Token 233: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006733018439263105
    2. 'in' → logprob: -5.006732940673828
    3. ' ' → logprob: -11.756732940673828
    4. ' not' → logprob: -12.631732940673828
    5. ' i' → logprob: -13.131732940673828
    6. ' '' → logprob: -13.381732940673828
    7. ''in' → logprob: -14.006732940673828
    8. ''' → logprob: -14.131732940673828
    9. ' ' → logprob: -14.256732940673828
    10. '  ' → logprob: -15.131732940673828

Token 234: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04858805239200592
    2. ' s' → logprob: -3.0485880374908447
    3. '(s' → logprob: -14.298587799072266
    4. '_s' → logprob: -16.798587799072266
    5. '{s' → logprob: -19.673587799072266
    6. ' ' → logprob: -19.923587799072266
    7. '	s' → logprob: -20.298587799072266
    8. ''s' → logprob: -20.298587799072266
    9. '<|end|>' → logprob: -20.298587799072266
    10. '(' → logprob: -20.423587799072266

Token 235: ' or' (ID: 503)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36804789304733276
    2. '<|end|>' → logprob: -1.8680479526519775
    3. '\n' → logprob: -2.6180479526519775
    4. 'def' → logprob: -3.4930479526519775
    5. '\' → logprob: -3.9930479526519775
    6. '

' → logprob: -4.368047714233398
    7. ' and' → logprob: -4.868047714233398
    8. ':' → logprob: -5.493047714233398
    9. ' or' → logprob: -5.993047714233398
    10. '<|end|>' → logprob: -6.993047714233398

Token 236: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12756073474884033
    2. ' '' → logprob: -2.127560615539551
    3. ''s' → logprob: -8.50256061553955
    4. ''t' → logprob: -8.50256061553955
    5. ''any' → logprob: -8.75256061553955
    6. ''an' → logprob: -11.25256061553955
    7. '   ' → logprob: -11.50256061553955
    8. ''is' → logprob: -11.62756061553955
    9. ''n' → logprob: -12.75256061553955
    10. ''un' → logprob: -12.75256061553955

Token 237: 'this' (ID: 851)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6835911273956299
    2. ''t' → logprob: -1.0585911273956299
    3. ' the' → logprob: -2.43359112739563
    4. 'the' → logprob: -3.93359112739563
    5. ' '' → logprob: -4.058590888977051
    6. ' this' → logprob: -4.433590888977051
    7. 'this' → logprob: -4.933590888977051
    8. ''s' → logprob: -7.308590888977051
    9. ''is' → logprob: -7.308590888977051
    10. ' and' → logprob: -7.433590888977051

Token 238: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.021638736128807068
    2. ' '' → logprob: -3.8966386318206787
    3. ' in' → logprob: -6.896638870239258
    4. ' that' → logprob: -9.896638870239258
    5. ''s' → logprob: -11.271638870239258
    6. ''in' → logprob: -11.646638870239258
    7. 'in' → logprob: -12.396638870239258
    8. '<|end|>' → logprob: -12.521638870239258
    9. ' or' → logprob: -13.396638870239258
    10. 'that' → logprob: -14.271638870239258

Token 239: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02065470442175865
    2. 'in' → logprob: -3.8956546783447266
    3. ' ' → logprob: -9.895654678344727
    4. '<|end|>' → logprob: -10.395654678344727
    5. 's' → logprob: -11.020654678344727
    6. ' s' → logprob: -12.395654678344727
    7. ' '' → logprob: -12.895654678344727
    8. ' ' → logprob: -13.020654678344727
    9. ''' → logprob: -13.145654678344727
    10. 'import' → logprob: -13.895654678344727

Token 240: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31326842308044434
    2. ' s' → logprob: -1.3132684230804443
    3. ''s' → logprob: -12.063268661499023
    4. ''' → logprob: -14.813268661499023
    5. '(s' → logprob: -15.688268661499023
    6. ' ' → logprob: -16.688268661499023
    7. '_s' → logprob: -17.063268661499023
    8. '{s' → logprob: -17.313268661499023
    9. '```' → logprob: -17.438268661499023
    10. ' '' → logprob: -17.563268661499023

Token 241: '

' (ID: 279)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.8695362210273743
    2. 'def' → logprob: -0.8695362210273743
    3. '<|end|>' → logprob: -1.8695361614227295
    4. 'or' → logprob: -5.619536399841309
    5. ' def' → logprob: -6.119536399841309
    6. '<|end|>' → logprob: -7.119536399841309
    7. '
' → logprob: -7.744536399841309
    8. ' and' → logprob: -8.744536399841309
    9. ' ' → logprob: -9.494536399841309
    10. ')' → logprob: -10.119536399841309

Token 242: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.9292415749514475e-05
    2. 'for' → logprob: -10.875039100646973
    3. '
' → logprob: -11.500039100646973
    4. 'import' → logprob: -13.125039100646973
    5. ' def' → logprob: -13.375039100646973
    6. '<|end|>' → logprob: -13.375039100646973
    7. 'if' → logprob: -13.500039100646973
    8. '#' → logprob: -13.875039100646973
    9. '```' → logprob: -14.750039100646973
    10. 'a' → logprob: -15.125039100646973

Token 243: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8973421454429626
    2. 'def' → logprob: -1.5223422050476074
    3. '=' → logprob: -1.8973422050476074
    4. ' def' → logprob: -2.6473422050476074
    5. 'o' → logprob: -3.3973422050476074
    6. ':' → logprob: -3.3973422050476074
    7. 'u' → logprob: -3.7723422050476074
    8. '_' → logprob: -3.8973422050476074
    9. ' =' → logprob: -4.397342205047607
    10. 'e' → logprob: -5.647342205047607

Token 244: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20604439079761505
    2. ' int' → logprob: -1.7060444355010986
    3. '10' → logprob: -5.8310441970825195
    4. '5' → logprob: -8.08104419708252
    5. '100' → logprob: -8.58104419708252
    6. '1' → logprob: -8.58104419708252
    7. '3' → logprob: -8.58104419708252
    8. ' ' → logprob: -8.58104419708252
    9. 'len' → logprob: -8.70604419708252
    10. '0' → logprob: -9.08104419708252

Token 245: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00024120506714098155
    2. '(input' → logprob: -8.75024127960205
    3. '(sys' → logprob: -10.00024127960205
    4. '('' → logprob: -11.12524127960205
    5. '()' → logprob: -11.62524127960205
    6. ' (' → logprob: -11.62524127960205
    7. '(
' → logprob: -12.87524127960205
    8. '("' → logprob: -14.25024127960205
    9. '(s' → logprob: -14.87524127960205
    10. '(n' → logprob: -15.50024127960205

Token 246: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4109448194503784
    2. '.stdin' → logprob: -1.1609448194503784
    3. '.argv' → logprob: -3.785944938659668
    4. '.readline' → logprob: -7.035944938659668
    5. ' .' → logprob: -9.285944938659668
    6. '.input' → logprob: -9.910944938659668
    7. '.)' → logprob: -10.535944938659668
    8. '(argv' → logprob: -11.660944938659668
    9. '.stdout' → logprob: -12.160944938659668
    10. '.')' → logprob: -12.160944938659668

Token 247: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0025341638829559088
    2. '.' → logprob: -6.00253438949585
    3. '.stdin' → logprob: -10.502533912658691
    4. '.read' → logprob: -10.627533912658691
    5. '.)' → logprob: -13.002533912658691
    6. '.readlines' → logprob: -13.877533912658691
    7. ')' → logprob: -14.127533912658691
    8. ' .' → logprob: -14.377533912658691
    9. '.argv' → logprob: -14.502533912658691
    10. '().' → logprob: -14.752533912658691

Token 248: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00033117449493147433
    2. '().' → logprob: -8.500330924987793
    3. '()' → logprob: -9.000330924987793
    4. ')' → logprob: -13.125330924987793
    5. ' ())' → logprob: -13.875330924987793
    6. '())
' → logprob: -14.125330924987793
    7. '(' → logprob: -15.000330924987793
    8. '();)' → logprob: -16.00033187866211
    9. '()[' → logprob: -17.00033187866211
    10. '()
' → logprob: -17.00033187866211

Token 249: 'lines' (ID: 10105)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018715323880314827
    2. ' for' → logprob: -4.5187153816223145
    3. 'keys' → logprob: -5.2687153816223145
    4. 'possible' → logprob: -7.3937153816223145
    5. 'plaintext' → logprob: -7.6437153816223145
    6. 'results' → logprob: -7.7687153816223145
    7. ' keys' → logprob: -7.8937153816223145
    8. 'found' → logprob: -8.768714904785156
    9. 'text' → logprob: -9.018714904785156
    10. 'texts' → logprob: -10.393714904785156

Token 250: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5236846208572388
    2. '=' → logprob: -0.8986846208572388
    3. '=[]' → logprob: -8.14868450164795
    4. '_' → logprob: -9.02368450164795
    5. ' ' → logprob: -9.77368450164795
    6. '_lines' → logprob: -10.27368450164795
    7. '()' → logprob: -11.27368450164795
    8. '=[]
' → logprob: -11.39868450164795
    9. 's' → logprob: -12.02368450164795
    10. '.readline' → logprob: -12.52368450164795

Token 251: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005955941043794155
    2. '[n' → logprob: -5.505956172943115
    3. '[s' → logprob: -6.505956172943115
    4. ' [' → logprob: -8.505955696105957
    5. '[]' → logprob: -9.505955696105957
    6. '[int' → logprob: -9.505955696105957
    7. '[str' → logprob: -12.255955696105957
    8. '[num' → logprob: -12.380955696105957
    9. '[list' → logprob: -12.380955696105957
    10. '[i' → logprob: -12.880955696105957

Token 252: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -2.7729658540920354e-05
    2. ' sys' → logprob: -10.500027656555176
    3. 'line' → logprob: -16.000028610229492
    4. '(sys' → logprob: -18.750028610229492
    5. 'input' → logprob: -19.625028610229492
    6. '	sys' → logprob: -19.750028610229492
    7. '=sys' → logprob: -20.750028610229492
    8. '
' → logprob: -21.000028610229492
    9. '```' → logprob: -21.250028610229492
    10. '

' → logprob: -21.625028610229492

Token 253: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.037835580878891e-05
    2. '.stdout' → logprob: -10.87505054473877
    3. '.' → logprob: -11.50005054473877
    4. 'stdin' → logprob: -11.50005054473877
    5. '.readline' → logprob: -11.75005054473877
    6. '.std' → logprob: -13.25005054473877
    7. '.argv' → logprob: -13.75005054473877
    8. ' .' → logprob: -15.62505054473877
    9. '.stderr' → logprob: -16.625049591064453
    10. ').' → logprob: -16.875049591064453

Token 254: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.259079363080673e-05
    2. '.readlines' → logprob: -11.375012397766113
    3. '.' → logprob: -14.500012397766113
    4. 'read' → logprob: -15.125012397766113
    5. ' readline' → logprob: -15.750012397766113
    6. '().' → logprob: -17.00001335144043
    7. '```' → logprob: -18.00001335144043
    8. '.read' → logprob: -19.12501335144043
    9. 'line' → logprob: -19.37501335144043
    10. '_read' → logprob: -19.75001335144043

Token 255: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0024758970830589533
    2. '()' → logprob: -6.002475738525391
    3. '()]' → logprob: -16.00247573852539
    4. ' ().' → logprob: -16.25247573852539
    5. '(' → logprob: -17.25247573852539
    6. '())' → logprob: -17.62747573852539
    7. '()].' → logprob: -18.62747573852539
    8. '()
' → logprob: -18.87747573852539
    9. ' ()' → logprob: -19.25247573852539
    10. '.strip' → logprob: -19.87747573852539

Token 256: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.06196824833750725
    2. 'rstrip' → logprob: -2.8119683265686035
    3. ' strip' → logprob: -14.436967849731445
    4. 'read' → logprob: -17.186967849731445
    5. '_strip' → logprob: -17.686967849731445
    6. 'r' → logprob: -17.936967849731445
    7. '(strip' → logprob: -18.561967849731445
    8. 'rst' → logprob: -19.561967849731445
    9. 'rs' → logprob: -19.936967849731445
    10. '.rstrip' → logprob: -20.186967849731445

Token 257: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04714076966047287
    2. '())' → logprob: -3.2971408367156982
    3. '('\' → logprob: -5.172140598297119
    4. '()\' → logprob: -6.297140598297119
    5. '()]' → logprob: -6.922140598297119
    6. '()
' → logprob: -7.672140598297119
    7. ')' → logprob: -10.047141075134277
    8. '(' → logprob: -10.672141075134277
    9. '())
' → logprob: -11.922141075134277
    10. ' ()' → logprob: -12.172141075134277

Token 258: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.836499985889532e-05
    2. '\n' → logprob: -9.7500581741333
    3. '
' → logprob: -17.375059127807617
    4. ' n' → logprob: -19.375059127807617
    5. 'r' → logprob: -21.250059127807617
    6. 'newline' → logprob: -22.250059127807617
    7. ''n' → logprob: -22.375059127807617
    8. '

' → logprob: -22.625059127807617
    9. '	n' → logprob: -22.875059127807617
    10. '')' → logprob: -22.875059127807617

Token 259: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.05009413883090019
    2. ')' → logprob: -3.0500941276550293
    3. '')]' → logprob: -6.550094127655029
    4. ')]' → logprob: -9.675094604492188
    5. '")' → logprob: -12.050094604492188
    6. '')
' → logprob: -13.550094604492188
    7. ''' → logprob: -13.925094604492188
    8. '()' → logprob: -14.175094604492188
    9. ''))' → logprob: -14.300094604492188
    10. ')'' → logprob: -14.425094604492188

Token 260: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04907791689038277
    2. 'for' → logprob: -3.1740779876708984
    3. ')' → logprob: -5.299077987670898
    4. '()' → logprob: -7.299077987670898
    5. ']' → logprob: -8.049077987670898
    6. '	for' → logprob: -9.924077987670898
    7. ')]' → logprob: -11.799077987670898
    8. ' ' → logprob: -12.174077987670898
    9. '   ' → logprob: -12.299077987670898
    10. '()]' → logprob: -14.674077987670898

Token 261: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.10020915418863297
    2. '_' → logprob: -2.3502092361450195
    3. ' i' → logprob: -13.97520923614502
    4. ' ' → logprob: -13.97520923614502
    5. ' range' → logprob: -14.60020923614502
    6. ' ' → logprob: -16.225208282470703
    7. '_i' → logprob: -16.600208282470703
    8. ' _
' → logprob: -16.725208282470703
    9. '_range' → logprob: -17.475208282470703
    10. ' in' → logprob: -18.100208282470703

Token 262: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001178439473733306
    2. ' range' → logprob: -6.75117826461792
    3. '_' → logprob: -12.376178741455078
    4. '_range' → logprob: -12.876178741455078
    5. 'ange' → logprob: -14.251178741455078
    6. 'in' → logprob: -14.501178741455078
    7. '(range' → logprob: -15.751178741455078
    8. ' in' → logprob: -16.251178741455078
    9. 'x' → logprob: -17.001178741455078
    10. '	range' → logprob: -17.126178741455078

Token 263: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011047814972698689
    2. ' range' → logprob: -4.511047840118408
    3. '	range' → logprob: -18.26104736328125
    4. '(range' → logprob: -19.13604736328125
    5. ' ' → logprob: -21.01104736328125
    6. ' xrange' → logprob: -21.63604736328125
    7. '   ' → logprob: -21.88604736328125
    8. '[' → logprob: -22.26104736328125
    9. 'rang' → logprob: -22.26104736328125
    10. '```' → logprob: -22.51104736328125

Token 264: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.001288332510739565
    2. 'n' → logprob: -6.751288414001465
    3. ' n' → logprob: -9.126288414001465
    4. '(' → logprob: -11.876288414001465
    5. ' (' → logprob: -13.001288414001465
    6. '
' → logprob: -16.87628746032715
    7. ')n' → logprob: -17.37628746032715
    8. '	n' → logprob: -17.50128746032715
    9. '(
' → logprob: -17.50128746032715
    10. '_n' → logprob: -19.00128746032715

Token 265: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.031157969729975e-05
    2. ')' → logprob: -9.375090599060059
    3. ']' → logprob: -12.250090599060059
    4. ' )' → logprob: -15.250090599060059
    5. ')]
' → logprob: -15.625090599060059
    6. '))' → logprob: -16.500089645385742
    7. '')]' → logprob: -17.500089645385742
    8. ')])' → logprob: -17.750089645385742
    9. ')],' → logprob: -17.875089645385742
    10. ')}' → logprob: -18.250089645385742

Token 266: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06956064701080322
    2. 'a' → logprob: -2.9445605278015137
    3. 'best' → logprob: -4.819560527801514
    4. 'found' → logprob: -5.569560527801514
    5. 'keys' → logprob: -7.444560527801514
    6. 'possible' → logprob: -7.569560527801514
    7. ' for' → logprob: -8.194561004638672
    8. 'results' → logprob: -8.569561004638672
    9. 'key' → logprob: -8.694561004638672
    10. 'max' → logprob: -8.944561004638672

Token 267: ' Possible' (ID: 76169)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12585917115211487
    2. 'best' → logprob: -2.625859260559082
    3. 'found' → logprob: -4.250859260559082
    4. 'a' → logprob: -4.625859260559082
    5. 'results' → logprob: -5.250859260559082
    6. 'max' → logprob: -5.625859260559082
    7. 'possible' → logprob: -5.875859260559082
    8. 'c' → logprob: -6.000859260559082
    9. 'keys' → logprob: -6.250859260559082
    10. 'result' → logprob: -6.250859260559082

Token 268: ' alpha' (ID: 17406)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6947561502456665
    2. ' a' → logprob: -1.0697561502456665
    3. ' keys' → logprob: -2.819756031036377
    4. ' values' → logprob: -3.319756031036377
    5. 'values' → logprob: -3.694756031036377
    6. 'keys' → logprob: -3.694756031036377
    7. '_values' → logprob: -5.569756031036377
    8. 'as' → logprob: -5.694756031036377
    9. '_keys' → logprob: -6.069756031036377
    10. '_a' → logprob: -6.819756031036377

Token 269: ' values' (ID: 4824)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.37011149525642395
    2. 's' → logprob: -1.9951114654541016
    3. 'bet' → logprob: -1.9951114654541016
    4. 'values' → logprob: -3.9951114654541016
    5. 'bets' → logprob: -4.745111465454102
    6. '_vals' → logprob: -5.120111465454102
    7. '=' → logprob: -6.995111465454102
    8. '_candidates' → logprob: -7.995111465454102
    9. '_range' → logprob: -8.120111465454102
    10. 'abets' → logprob: -8.120111465454102

Token 270: ' cop' (ID: 8039)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10066273808479309
    2. '=' → logprob: -2.3506627082824707
    3. 's' → logprob: -7.850662708282471
    4. '=[' → logprob: -10.850663185119629
    5. ' =[' → logprob: -10.975663185119629
    6. '_values' → logprob: -11.725663185119629
    7. 'possible' → logprob: -11.975663185119629
    8. '_possible' → logprob: -12.350663185119629
    9. 'values' → logprob: -12.850663185119629
    10. '[' → logprob: -13.475663185119629

Token 271: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.081584716506768e-05
    2. 'rim' → logprob: -11.750020980834961
    3. 'ied' → logprob: -12.375020980834961
    4. '[' → logprob: -12.750020980834961
    5. '=' → logprob: -13.500020980834961
    6. 'range' → logprob: -14.375020980834961
    7. 'oss' → logprob: -14.750020980834961
    8. 'm' → logprob: -14.875020980834961
    9. 'rs' → logprob: -15.000020980834961
    10. 'ed' → logprob: -15.250020980834961

Token 272: 'ime' (ID: 642)
  Prédit: 'ime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.09192657470703125
    2. 'imes' → logprob: -3.5919265747070312
    3. 'im' → logprob: -4.091926574707031
    4. 'e' → logprob: -4.966926574707031
    5. 'imed' → logprob: -5.591926574707031
    6. 'imal' → logprob: -5.716926574707031
    7. 'et' → logprob: -5.841926574707031
    8. 'ent' → logprob: -6.341926574707031
    9. 't' → logprob: -6.654426574707031
    10. 'es' → logprob: -6.904426574707031

Token 273: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.3815820813179016
    2. ' with' → logprob: -1.3815820217132568
    3. '=' → logprob: -2.881582021713257
    4. ' =' → logprob: -4.756582260131836
    5. '[' → logprob: -7.881582260131836
    6. '_with' → logprob: -8.006582260131836
    7. '=[' → logprob: -8.881582260131836
    8. '#' → logprob: -9.006582260131836
    9. ',' → logprob: -9.631582260131836
    10. ' to' → logprob: -10.006582260131836

Token 274: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.0017023178515955806
    2. ' ' → logprob: -6.376702308654785
    3. '2' → logprob: -17.2517032623291
    4. ''' → logprob: -17.3767032623291
    5. '[' → logprob: -18.0017032623291
    6. '20' → logprob: -18.1267032623291
    7. '"' → logprob: -18.6267032623291
    8. '25' → logprob: -18.6267032623291
    9. '24' → logprob: -18.6267032623291
    10. '<|end|>' → logprob: -19.5017032623291

Token 275: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '25' → logprob: -19.125
    4. '2' → logprob: -19.875
    5. '
' → logprob: -20.0
    6. '20' → logprob: -20.75
    7. '```' → logprob: -20.75
    8. '026' → logprob: -21.5
    9. '6' → logprob: -21.625
    10. '260' → logprob: -21.875

Token 276: '
' (ID: 198)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.8473923206329346
    2. 'alpha' → logprob: -0.9723923206329346
    3. 'a' → logprob: -3.3473923206329346
    4. 'alph' → logprob: -3.5973923206329346
    5. ' =' → logprob: -3.8473923206329346
    6. 'cop' → logprob: -3.9723923206329346
    7. 'valid' → logprob: -4.0973920822143555
    8. ' possible' → logprob: -4.2223920822143555
    9. 'c' → logprob: -4.4723920822143555
    10. ':' → logprob: -4.7223920822143555

Token 277: 'alph' (ID: 53076)
  Prédit: 'alph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alph' → logprob: -0.9396806359291077
    2. 'possible' → logprob: -1.064680576324463
    3. 'a' → logprob: -2.189680576324463
    4. 'alpha' → logprob: -2.689680576324463
    5. ' possible' → logprob: -3.939680576324463
    6. 'cop' → logprob: -4.064680576324463
    7. 'valid' → logprob: -4.689680576324463
    8. ' cop' → logprob: -4.814680576324463
    9. ' a' → logprob: -5.064680576324463
    10. ' al' → logprob: -5.064680576324463

Token 278: 'as' (ID: 288)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009268643334507942
    2. 'as' → logprob: -4.759268760681152
    3. 'abets' → logprob: -8.009268760681152
    4. 'abet' → logprob: -8.759268760681152
    5. 'ab' → logprob: -9.384268760681152
    6. 'ap' → logprob: -10.509268760681152
    7. '[a' → logprob: -11.509268760681152
    8. '```' → logprob: -12.509268760681152
    9. 'а' → logprob: -13.009268760681152
    10. 'able' → logprob: -13.134268760681152

Token 279: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048603273928165436
    2. '=' → logprob: -3.0486032962799072
    3. ' =[' → logprob: -11.423603057861328
    4. '=[' → logprob: -12.673603057861328
    5. ' ' → logprob: -13.798603057861328
    6. 's' → logprob: -14.923603057861328
    7. '_' → logprob: -15.048603057861328
    8. '_values' → logprob: -16.423603057861328
    9. '＝' → logprob: -17.173603057861328
    10. '_possible' → logprob: -17.673603057861328

Token 280: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.10020763427019119
    2. '[' → logprob: -2.350207567214966
    3. ' [
' → logprob: -14.225207328796387
    4. ' ' → logprob: -15.725207328796387
    5. '[
' → logprob: -15.975207328796387
    6. ' ' → logprob: -16.475208282470703
    7. ' {' → logprob: -18.350208282470703
    8. ' [

' → logprob: -18.850208282470703
    9. '[]' → logprob: -18.975208282470703
    10. '{' → logprob: -19.225208282470703

Token 281: 'a' (ID: 64)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010090718045830727
    2. 'a' → logprob: -5.2600908279418945
    3. ' ' → logprob: -5.5100908279418945
    4. '3' → logprob: -7.7600908279418945
    5. 'i' → logprob: -8.385090827941895
    6. '   ' → logprob: -9.635090827941895
    7. 'k' → logprob: -11.760090827941895
    8. 'x' → logprob: -11.760090827941895
    9. ' a' → logprob: -11.885090827941895
    10. '  ' → logprob: -12.135090827941895

Token 282: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0006068871589377522
    2. ' ' → logprob: -8.125606536865234
    3. 'for' → logprob: -8.125606536865234
    4. '	for' → logprob: -12.500606536865234
    5. ' i' → logprob: -12.625606536865234
    6. '1' → logprob: -13.000606536865234
    7. '  ' → logprob: -14.000606536865234
    8. 'i' → logprob: -14.000606536865234
    9. '2' → logprob: -14.125606536865234
    10. '   ' → logprob: -14.500606536865234

Token 283: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3965679109096527
    2. ' a' → logprob: -1.521567940711975
    3. ' range' → logprob: -2.3965678215026855
    4. 'range' → logprob: -4.0215678215026855
    5. ' ' → logprob: -10.271568298339844
    6. '[' → logprob: -12.646568298339844
    7. '	a' → logprob: -12.771568298339844
    8. '[a' → logprob: -13.834068298339844
    9. '(range' → logprob: -13.959068298339844
    10. ' in' → logprob: -14.021568298339844

Token 284: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006055828649550676
    2. 'in' → logprob: -5.38105583190918
    3. 'a' → logprob: -7.00605583190918
    4. ' a' → logprob: -7.88105583190918
    5. ' ' → logprob: -9.13105583190918
    6. 'range' → logprob: -10.50605583190918
    7. 's' → logprob: -12.38105583190918
    8. ' range' → logprob: -13.00605583190918
    9. ',' → logprob: -13.00605583190918
    10. ' i' → logprob: -13.75605583190918

Token 285: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.13159292936325073
    2. ' range' → logprob: -2.1315929889678955
    3. '[' → logprob: -5.381592750549316
    4. ' [' → logprob: -10.006592750549316
    5. '(range' → logprob: -12.756592750549316
    6. '	range' → logprob: -13.506592750549316
    7. '[
' → logprob: -13.631592750549316
    8. '
' → logprob: -14.256592750549316
    9. '(' → logprob: -14.256592750549316
    10. ' ' → logprob: -14.506592750549316

Token 286: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12695130705833435
    2. '(' → logprob: -2.126951217651367
    3. ' ' → logprob: -11.251951217651367
    4. '2' → logprob: -12.251951217651367
    5. '(
' → logprob: -13.126951217651367
    6. ' (' → logprob: -13.626951217651367
    7. '26' → logprob: -13.876951217651367
    8. '
' → logprob: -14.876951217651367
    9. ')' → logprob: -15.501951217651367
    10. '```' → logprob: -15.626951217651367

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010139751975657418
    2. '26' → logprob: -9.250101089477539
    3. '2' → logprob: -12.875101089477539
    4. ' ' → logprob: -13.000101089477539
    5. '27' → logprob: -14.625101089477539
    6. '(' → logprob: -17.75010108947754
    7. '   ' → logprob: -17.75010108947754
    8. ')' → logprob: -18.00010108947754
    9. '```' → logprob: -19.00010108947754
    10. '１' → logprob: -19.12510108947754

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011073531582951546
    2. ' ,' → logprob: -4.511073589324951
    3. '26' → logprob: -11.511073112487793
    4. '36' → logprob: -11.511073112487793
    5. ',
' → logprob: -14.386073112487793
    6. '34' → logprob: -14.511073112487793
    7. '3' → logprob: -14.636073112487793
    8. '27' → logprob: -14.636073112487793
    9. '37' → logprob: -14.886073112487793
    10. '20' → logprob: -15.011073112487793

Token 289: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.08160711079835892
    2. '27' → logprob: -2.7066071033477783
    3. ' ' → logprob: -4.456607341766357
    4. ')' → logprob: -14.0816068649292
    5. '  ' → logprob: -16.331607818603516
    6. '```' → logprob: -16.331607818603516
    7. '>' → logprob: -16.956607818603516
    8. '   ' → logprob: -16.956607818603516
    9. '	' → logprob: -16.956607818603516
    10. ',' → logprob: -17.144107818603516

Token 290: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -3.452426608419046e-05
    2. '27' → logprob: -10.50003433227539
    3. ' ' → logprob: -11.87503433227539
    4. ')' → logprob: -19.75003433227539
    5. '2' → logprob: -19.87503433227539
    6. '	' → logprob: -20.62503433227539
    7. '   ' → logprob: -20.87503433227539
    8. '  ' → logprob: -21.25003433227539
    9. '```' → logprob: -21.37503433227539
    10. '25' → logprob: -21.81253433227539

Token 291: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20281922817230225
    2. ',' → logprob: -1.7028192281723022
    3. ' ,' → logprob: -6.827819347381592
    4. ' )' → logprob: -8.202818870544434
    5. '+' → logprob: -10.702818870544434
    6. ' ' → logprob: -11.577818870544434
    7. ' if' → logprob: -11.952818870544434
    8. ')]' → logprob: -13.327818870544434
    9. ',)' → logprob: -13.452818870544434
    10. ']' → logprob: -14.077818870544434

Token 292: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12675262987613678
    2. 'if' → logprob: -2.3767526149749756
    3. ',' → logprob: -3.7517526149749756
    4. ')' → logprob: -6.126752853393555
    5. ' ' → logprob: -7.626752853393555
    6. '+' → logprob: -10.626752853393555
    7. ']' → logprob: -12.001752853393555
    8. ' ,' → logprob: -12.001752853393555
    9. '   ' → logprob: -12.626752853393555
    10. '2' → logprob: -13.376752853393555

Token 293: ' a' (ID: 261)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.9632547497749329
    2. 'pow' → logprob: -1.963254690170288
    3. 'a' → logprob: -2.213254690170288
    4. 'math' → logprob: -2.338254690170288
    5. ' gcd' → logprob: -2.338254690170288
    6. '__' → logprob: -2.963254690170288
    7. ' ' → logprob: -3.338254690170288
    8. 'all' → logprob: -4.213254928588867
    9. 'mod' → logprob: -4.338254928588867
    10. 'sys' → logprob: -4.338254928588867

Token 294: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.21189288794994354
    2. ' %' → logprob: -1.71189284324646
    3. 'import' → logprob: -4.961893081665039
    4. ' ' → logprob: -6.461893081665039
    5. ' and' → logprob: -7.086893081665039
    6. 'and' → logprob: -8.336893081665039
    7. ',' → logprob: -8.586893081665039
    8. ' in' → logprob: -9.086893081665039
    9. ' import' → logprob: -9.086893081665039
    10. ' from' → logprob: -9.336893081665039

Token 295: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004273315134923905
    2. ' ' → logprob: -7.87542724609375
    3. '26' → logprob: -10.12542724609375
    4. '13' → logprob: -12.50042724609375
    5. '
' → logprob: -13.25042724609375
    6. '

' → logprob: -14.50042724609375
    7. '```' → logprob: -14.87542724609375
    8. '{' → logprob: -16.06292724609375
    9. ''' → logprob: -16.25042724609375
    10. '  ' → logprob: -16.25042724609375

Token 296: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -12.000007629394531
    3. '26' → logprob: -13.625007629394531
    4. '13' → logprob: -14.875007629394531
    5. '
' → logprob: -16.75000762939453
    6. '

' → logprob: -17.87500762939453
    7. '```' → logprob: -17.87500762939453
    8. ''' → logprob: -18.50000762939453
    9. '{' → logprob: -19.25000762939453
    10. '２' → logprob: -19.87500762939453

Token 297: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.003038558876141906
    2. ' !=' → logprob: -5.87803840637207
    3. '!' → logprob: -9.12803840637207
    4. 'and' → logprob: -9.37803840637207
    5. ' and' → logprob: -10.87803840637207
    6. '==' → logprob: -12.37803840637207
    7. '()!=' → logprob: -12.37803840637207
    8. '!='' → logprob: -12.62803840637207
    9. '1' → logprob: -12.75303840637207
    10. '!==' → logprob: -13.00303840637207

Token 298: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14267876744270325
    2. ' ' → logprob: -2.017678737640381
    3. '=' → logprob: -14.142679214477539
    4. '1' → logprob: -14.392679214477539
    5. ' ' → logprob: -14.392679214477539
    6. '
' → logprob: -14.830179214477539
    7. '<|end|>' → logprob: -15.205179214477539
    8. ' 
' → logprob: -15.455179214477539
    9. '

' → logprob: -16.51767921447754
    10. '  ' → logprob: -16.70517921447754

Token 299: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0040830280631780624
    2. ' ' → logprob: -5.504083156585693
    3. '1' → logprob: -12.754082679748535
    4. '
' → logprob: -15.004082679748535
    5. '=' → logprob: -15.691582679748535
    6. '

' → logprob: -15.754082679748535
    7. '<|end|>' → logprob: -15.879082679748535
    8. '2' → logprob: -15.941582679748535
    9. ' ' → logprob: -16.56658363342285
    10. '```' → logprob: -16.62908363342285

Token 300: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04300741106271744
    2. 'and' → logprob: -3.1680073738098145
    3. ' ' → logprob: -11.918007850646973
    4. '   ' → logprob: -14.293007850646973
    5. '<|end|>' → logprob: -14.793007850646973
    6. ')' → logprob: -16.043006896972656
    7. '	and' → logprob: -16.668006896972656
    8. '  ' → logprob: -16.668006896972656
    9. ']' → logprob: -16.793006896972656
    10. ',' → logprob: -16.793006896972656

Token 301: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0702546238899231
    2. ' a' → logprob: -2.6952545642852783
    3. '26' → logprob: -8.5702543258667
    4. ' ' → logprob: -9.9452543258667
    5. 'all' → logprob: -11.5702543258667
    6. ' (' → logprob: -11.6952543258667
    7. '(a' → logprob: -11.8202543258667
    8. '7' → logprob: -12.0702543258667
    9. '	a' → logprob: -12.0702543258667
    10. ' all' → logprob: -12.1952543258667

Token 302: ' %' (ID: 1851)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7606797814369202
    2. ' !=' → logprob: -1.7606797218322754
    3. 'import' → logprob: -2.0106797218322754
    4. '!=' → logprob: -2.0106797218322754
    5. '<|end|>' → logprob: -3.1356797218322754
    6. ' %' → logprob: -4.135679721832275
    7. '%' → logprob: -4.260679721832275
    8. 'not' → logprob: -5.510679721832275
    9. ' ' → logprob: -5.760679721832275
    10. 'and' → logprob: -6.010679721832275

Token 303: ' ' (ID: 220)
  Prédit: '13'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -2.9160102712921798e-05
    2. ' ' → logprob: -10.500029563903809
    3. '3' → logprob: -13.750029563903809
    4. '1' → logprob: -15.750029563903809
    5. '۱۳' → logprob: -15.875029563903809
    6. '_' → logprob: -16.750028610229492
    7. '26' → logprob: -17.250028610229492
    8. '=' → logprob: -17.625028610229492
    9. '```' → logprob: -17.875028610229492
    10. '
' → logprob: -18.000028610229492

Token 304: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.875000953674316
    3. '3' → logprob: -15.625000953674316
    4. '۱۳' → logprob: -16.5
    5. '1' → logprob: -17.625
    6. '26' → logprob: -17.75
    7. '```' → logprob: -19.375
    8. '１３' → logprob: -19.5
    9. '_' → logprob: -19.875
    10. '१३' → logprob: -20.0

Token 305: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4296271800994873
    2. '!=' → logprob: -1.0546271800994873
    3. '<|end|>' → logprob: -7.554627418518066
    4. ')!=' → logprob: -8.554627418518066
    5. '()!=' → logprob: -9.179627418518066
    6. ']!=' → logprob: -10.179627418518066
    7. '!=-' → logprob: -10.429627418518066
    8. ' not' → logprob: -11.804627418518066
    9. ')' → logprob: -12.054627418518066
    10. ' ' → logprob: -12.804627418518066

Token 306: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0052398028783500195
    2. ' ' → logprob: -5.255239963531494
    3. '2' → logprob: -12.505239486694336
    4. '1' → logprob: -13.880239486694336
    5. '26' → logprob: -15.192739486694336
    6. '13' → logprob: -15.380239486694336
    7. '```' → logprob: -15.630239486694336
    8. '   ' → logprob: -16.005239486694336
    9. '  ' → logprob: -16.130239486694336
    10. '=' → logprob: -16.192739486694336

Token 307: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.273621405242011e-05
    2. ' ' → logprob: -10.375032424926758
    3. '2' → logprob: -14.250032424926758
    4. '13' → logprob: -14.375032424926758
    5. '1' → logprob: -15.750032424926758
    6. '26' → logprob: -16.375032424926758
    7. '```' → logprob: -18.500032424926758
    8. '=' → logprob: -19.562532424926758
    9. 'zero' → logprob: -19.937532424926758
    10. '۰' → logprob: -20.125032424926758

Token 308: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012535012501757592
    2. ' ]' → logprob: -9.00012493133545
    3. ' and' → logprob: -13.37512493133545
    4. ')]' → logprob: -15.62512493133545
    5. ']
' → logprob: -16.125125885009766
    6. '()]' → logprob: -16.875125885009766
    7. 'and' → logprob: -17.500125885009766
    8. ']

' → logprob: -17.625125885009766
    9. ' or' → logprob: -17.625125885009766
    10. ',' → logprob: -17.750125885009766

Token 309: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025697942823171616
    2. 'b' → logprob: -4.025697708129883
    3. 'found' → logprob: -5.150697708129883
    4. 'possible' → logprob: -7.775697708129883
    5. ' for' → logprob: -7.900697708129883
    6. 'results' → logprob: -8.275697708129883
    7. 'a' → logprob: -8.900697708129883
    8. 'best' → logprob: -8.900697708129883
    9. 'decoded' → logprob: -9.650697708129883
    10. 'result' → logprob: -9.775697708129883

Token 310: ' line' (ID: 2543)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.013366802595555782
    2. 'a' → logprob: -4.38836669921875
    3. ' b' → logprob: -7.38836669921875
    4. ' ' → logprob: -9.26336669921875
    5. ' line' → logprob: -9.88836669921875
    6. ' n' → logprob: -11.26336669921875
    7. 'b' → logprob: -11.26336669921875
    8. '	a' → logprob: -11.26336669921875
    9. '_a' → logprob: -11.51336669921875
    10. ' _' → logprob: -11.51336669921875

Token 311: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009979892522096634
    2. 'in' → logprob: -4.634979724884033
    3. ' ' → logprob: -8.634980201721191
    4. ' i' → logprob: -11.259980201721191
    5. ',' → logprob: -12.259980201721191
    6. '_' → logprob: -12.384980201721191
    7. ' :' → logprob: -12.509980201721191
    8. ':' → logprob: -12.884980201721191
    9. ' ,' → logprob: -12.884980201721191
    10. 's' → logprob: -13.009980201721191

Token 312: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.4740900695323944
    2. 'lines' → logprob: -0.9740900993347168
    3. '(lines' → logprob: -12.349089622497559
    4. '	lines' → logprob: -12.599089622497559
    5. ' range' → logprob: -13.099089622497559
    6. 'range' → logprob: -13.849089622497559
    7. 'n' → logprob: -13.974089622497559
    8. 'line' → logprob: -14.474089622497559
    9. ' n' → logprob: -15.474089622497559
    10. '_lines' → logprob: -16.099090576171875

Token 313: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.802049756515771e-05
    2. ':
' → logprob: -9.875067710876465
    3. ' :' → logprob: -11.500067710876465
    4. ',' → logprob: -12.250067710876465
    5. '):' → logprob: -14.250067710876465
    6. ':**' → logprob: -15.500067710876465
    7. ':

' → logprob: -15.875067710876465
    8. '=' → logprob: -16.25006866455078
    9. ':def' → logprob: -16.25006866455078
    10. ':
' → logprob: -17.00006866455078

Token 314: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00700046680867672
    2. ' for' → logprob: -5.00700044631958
    3. '   ' → logprob: -8.882000923156738
    4. '    
' → logprob: -9.382000923156738
    5. 'for' → logprob: -10.007000923156738
    6. ',' → logprob: -13.132000923156738
    7. '   ' → logprob: -13.382000923156738
    8. ' ' → logprob: -13.507000923156738
    9. '       ' → logprob: -13.632000923156738
    10. ' ' → logprob: -13.632000923156738

Token 315: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25262704491615295
    2. 'for' (adapté à ' for') → logprob: -1.8776270151138306
    3. '   ' → logprob: -3.25262713432312
    4. 'found' → logprob: -4.377626895904541
    5. ' found' → logprob: -4.752626895904541
    6. ' best' → logprob: -5.377626895904541
    7. ' decrypted' → logprob: -6.127626895904541
    8. 'a' → logprob: -7.377626895904541
    9. 'possible' → logprob: -7.377626895904541
    10. ' a' → logprob: -7.377626895904541

Token 316: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.013084583915770054
    2. ' b' → logprob: -4.638084411621094
    3. 'a' → logprob: -5.763084411621094
    4. 'b' → logprob: -9.763084411621094
    5. ' alpha' → logprob: -9.763084411621094
    6. '	a' → logprob: -10.138084411621094
    7. ' ' → logprob: -11.888084411621094
    8. '_a' → logprob: -12.075584411621094
    9. '(a' → logprob: -12.950584411621094
    10. '   ' → logprob: -13.638084411621094

Token 317: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009557744488120079
    2. 'in' → logprob: -5.134557723999023
    3. ' ' → logprob: -5.634557723999023
    4. '	in' → logprob: -10.634557723999023
    5. '<|end|>' → logprob: -10.884557723999023
    6. '<|end|>' → logprob: -13.634557723999023
    7. ' ,' → logprob: -13.759557723999023
    8. '_in' → logprob: -13.884557723999023
    9. ',' → logprob: -14.884557723999023
    10. ' ' → logprob: -14.884557723999023

Token 318: ' al' (ID: 434)
  Prédit: 'alph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alph' → logprob: -0.12844344973564148
    2. ' al' → logprob: -2.128443479537964
    3. 'al' → logprob: -6.628443241119385
    4. ' alph' → logprob: -8.628443717956543
    5. 'alp' → logprob: -12.003443717956543
    6. '	al' → logprob: -12.378443717956543
    7. '_al' → logprob: -14.753443717956543
    8. 'alpha' → logprob: -14.753443717956543
    9. 'alist' → logprob: -15.628443717956543
    10. 'alf' → logprob: -15.628443717956543

Token 319: 'phas' (ID: 95774)
  Prédit: 'phas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phas' → logprob: -0.004155210684984922
    2. 'ph' → logprob: -6.254155158996582
    3. 'pha' → logprob: -6.754155158996582
    4. 'fas' → logprob: -8.129155158996582
    5. 'as' → logprob: -8.504155158996582
    6. 'p' → logprob: -9.004155158996582
    7. '[' → logprob: -9.504155158996582
    8. ' in' → logprob: -9.629155158996582
    9. 'pas' → logprob: -10.254155158996582
    10. '   ' → logprob: -10.379155158996582

Token 320: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23359674215316772
    2. ' in' → logprob: -1.8585968017578125
    3. ' for' → logprob: -2.9835968017578125
    4. ',' → logprob: -6.7335968017578125
    5. ':
' → logprob: -8.483596801757812
    6. 'for' → logprob: -8.483596801757812
    7. 'in' → logprob: -8.858596801757812
    8. '=' → logprob: -10.733596801757812
    9. '   ' → logprob: -11.483596801757812
    10. ' :' → logprob: -11.733596801757812

Token 321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018242890015244484
    2. ' for' → logprob: -4.018242835998535
    3. '<|end|>' → logprob: -10.518242835998535
    4. '	   ' → logprob: -11.143242835998535
    5. '   ' → logprob: -11.393242835998535
    6. 'for' → logprob: -11.518242835998535
    7. ' ' → logprob: -12.143242835998535
    8. '	for' → logprob: -12.393242835998535
    9. ',' → logprob: -12.518242835998535
    10. '    ' → logprob: -12.768242835998535

Token 322: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02269429713487625
    2. 'for' (adapté à ' for') → logprob: -4.272694110870361
    3. '   ' → logprob: -4.772694110870361
    4. '       ' → logprob: -10.77269458770752
    5. ' ' → logprob: -11.64769458770752
    6. '	for' → logprob: -12.02269458770752
    7. '    ' → logprob: -14.14769458770752
    8. '           ' → logprob: -15.14769458770752
    9. '  ' → logprob: -16.147693634033203
    10. '```' → logprob: -16.772693634033203

Token 323: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5759401917457581
    2. ' b' → logprob: -0.8259401917457581
    3. '	b' → logprob: -15.700940132141113
    4. ' ' → logprob: -15.950940132141113
    5. '```' → logprob: -15.950940132141113
    6. ' ' → logprob: -16.32594108581543
    7. 'B' → logprob: -16.45094108581543
    8. '   ' → logprob: -16.70094108581543
    9. '<|end|>' → logprob: -16.82594108581543
    10. '_b' → logprob: -17.32594108581543

Token 324: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00043138445471413434
    2. 'in' → logprob: -7.750431537628174
    3. ' ' → logprob: -14.375431060791016
    4. 'range' → logprob: -16.000431060791016
    5. '<|end|>' → logprob: -17.125431060791016
    6. '	in' → logprob: -17.375431060791016
    7. ' ' → logprob: -17.750431060791016
    8. ' range' → logprob: -18.750431060791016
    9. 'import' → logprob: -19.375431060791016
    10. 'n' → logprob: -19.500431060791016

Token 325: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47407761216163635
    2. ' range' → logprob: -0.974077582359314
    3. '(range' → logprob: -14.724077224731445
    4. '	range' → logprob: -15.474077224731445
    5. '_range' → logprob: -19.599077224731445
    6. ' xrange' → logprob: -19.849077224731445
    7. 'ran' → logprob: -20.099077224731445
    8. ' ' → logprob: -20.474077224731445
    9. '.range' → logprob: -20.974077224731445
    10. '   ' → logprob: -21.099077224731445

Token 326: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.306760805164231e-05
    2. '26' → logprob: -11.25001335144043
    3. ' (' → logprob: -19.25001335144043
    4. '(
' → logprob: -20.75001335144043
    5. '[' → logprob: -22.00001335144043
    6. '{' → logprob: -22.12501335144043
    7. ' ' → logprob: -22.62501335144043
    8. '   ' → logprob: -22.75001335144043
    9. '(-' → logprob: -23.75001335144043
    10. '```' → logprob: -24.50001335144043

Token 327: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -4.36574100604048e-06
    2. '0' → logprob: -12.375004768371582
    3. ' ' → logprob: -16.375003814697266
    4. '27' → logprob: -20.250003814697266
    5. '   ' → logprob: -20.625003814697266
    6. '(' → logprob: -20.750003814697266
    7. '2' → logprob: -20.750003814697266
    8. ')' → logprob: -22.000003814697266
    9. '```' → logprob: -23.125003814697266
    10. '	' → logprob: -23.250003814697266

Token 328: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02688245289027691
    2. '):
' → logprob: -3.6518824100494385
    3. ' ):' → logprob: -8.40188217163086
    4. '   ' → logprob: -8.77688217163086
    5. ':' → logprob: -9.15188217163086
    6. ')' → logprob: -10.27688217163086
    7. '       ' → logprob: -10.40188217163086
    8. '):
' → logprob: -11.15188217163086
    9. ' ):
' → logprob: -11.90188217163086
    10. '           ' → logprob: -13.15188217163086

Token 329: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015304554253816605
    2. '            
' → logprob: -7.501530647277832
    3. '<|end|>' → logprob: -8.251530647277832
    4. ',' → logprob: -8.376530647277832
    5. ':' → logprob: -9.251530647277832
    6. '          ' → logprob: -9.751530647277832
    7. '#' → logprob: -9.876530647277832
    8. '```' → logprob: -10.376530647277832
    9. '            ' → logprob: -10.501530647277832
    10. '	       ' → logprob: -10.626530647277832

Token 330: ' dec' (ID: 1885)
  Prédit: ' decrypted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' decrypted' → logprob: -0.7677104473114014
    2. 'de' → logprob: -1.2677104473114014
    3. '           ' → logprob: -2.2677104473114014
    4. 'plaintext' → logprob: -2.5177104473114014
    5. ' plaintext' → logprob: -3.1427104473114014
    6. 'decoded' → logprob: -4.5177106857299805
    7. '               ' → logprob: -5.0177106857299805
    8. 'text' → logprob: -5.5177106857299805
    9. ' decoded' → logprob: -6.7677106857299805
    10. ' text' → logprob: -7.0177106857299805

Token 331: ' =' (ID: 314)
  Prédit: 'rypt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rypt' → logprob: -0.013248814269900322
    2. 'ry' → logprob: -5.138248920440674
    3. 'r' → logprob: -6.138248920440674
    4. 'oded' → logprob: -6.388248920440674
    5. ' =' → logprob: -6.513248920440674
    6. 'y' → logprob: -7.013248920440674
    7. '_text' → logprob: -7.763248920440674
    8. '=' → logprob: -8.388248443603516
    9. 'ode' → logprob: -9.013248443603516
    10. '       ' → logprob: -9.763248443603516

Token 332: ' decrypt' (ID: 81444)
  Prédit: 'decrypt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decrypt' → logprob: -0.100224569439888
    2. ' decrypt' → logprob: -2.350224494934082
    3. 'de' → logprob: -11.600224494934082
    4. '.decrypt' → logprob: -11.725224494934082
    5. '(de' → logprob: -15.475224494934082
    6. '   ' → logprob: -15.725224494934082
    7. 'Decrypt' → logprob: -15.725224494934082
    8. '	de' → logprob: -16.4752254486084
    9. '```' → logprob: -17.2252254486084
    10. 'deserialize' → logprob: -18.1002254486084

Token 333: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -1.9385402993066236e-05
    2. '(' → logprob: -10.875019073486328
    3. '(
' → logprob: -14.875019073486328
    4. '[line' → logprob: -17.125019073486328
    5. '#line' → logprob: -17.250019073486328
    6. '(lines' → logprob: -17.625019073486328
    7. '=line' → logprob: -17.625019073486328
    8. '(Line' → logprob: -17.750019073486328
    9. ' line' → logprob: -18.250019073486328
    10. ',line' → logprob: -18.375019073486328

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004976287018507719
    2. ',a' → logprob: -7.750497817993164
    3. ' ,' → logprob: -9.625497817993164
    4. 'a' → logprob: -14.250497817993164
    5. '```' → logprob: -16.375497817993164
    6. '   ' → logprob: -16.625497817993164
    7. ',
' → logprob: -17.500497817993164
    8. ')' → logprob: -17.875497817993164
    9. '`,' → logprob: -18.250497817993164
    10. '       ' → logprob: -18.375497817993164

Token 335: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -5.1689596148207784e-05
    2. ' a' → logprob: -9.875051498413086
    3. ')a' → logprob: -16.750051498413086
    4. '<|end|>' → logprob: -16.750051498413086
    5. '	a' → logprob: -17.250051498413086
    6. '#a' → logprob: -18.500051498413086
    7. '*a' → logprob: -20.000051498413086
    8. ',a' → logprob: -20.125051498413086
    9. ')' → logprob: -20.125051498413086
    10. '>a' → logprob: -20.250051498413086

Token 336: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005580356228165329
    2. ',b' → logprob: -7.500557899475098
    3. ' ,' → logprob: -12.250557899475098
    4. 'b' → logprob: -15.875557899475098
    5. ',
' → logprob: -16.875558853149414
    6. ')' → logprob: -18.250558853149414
    7. '‌,' → logprob: -18.875558853149414
    8. '```' → logprob: -18.875558853149414
    9. '，' → logprob: -19.125558853149414
    10. ',B' → logprob: -19.625558853149414

Token 337: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006715370807796717
    2. ' b' → logprob: -5.006715297698975
    3. ')b' → logprob: -17.756715774536133
    4. ')' → logprob: -20.256715774536133
    5. '	b' → logprob: -20.881715774536133
    6. ' ' → logprob: -21.881715774536133
    7. ' ' → logprob: -22.256715774536133
    8. '   ' → logprob: -22.756715774536133
    9. '>b' → logprob: -23.256715774536133
    10. '<|end|>' → logprob: -23.256715774536133

Token 338: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.693255603313446
    2. ')
' → logprob: -0.693255603313446
    3. ')
' → logprob: -9.693255424499512
    4. '           ' → logprob: -10.193255424499512
    5. ')

' → logprob: -12.068255424499512
    6. ' )
' → logprob: -13.443255424499512
    7. '               ' → logprob: -14.693255424499512
    8. ' )' → logprob: -14.818255424499512
    9. ')`
' → logprob: -14.818255424499512
    10. '       ' → logprob: -15.943255424499512

Token 339: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016032943967729807
    2. '<|end|>' → logprob: -7.251603126525879
    3. '            
' → logprob: -7.876603126525879
    4. ' if' → logprob: -8.251603126525879
    5. '```' → logprob: -8.876603126525879
    6. 'if' → logprob: -10.376603126525879
    7. '
' → logprob: -10.501603126525879
    8. '<|end|>' → logprob: -11.251603126525879
    9. '               ' → logprob: -11.626603126525879
    10. '          ' → logprob: -11.876603126525879

Token 340: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.39697787165641785
    2. '           ' → logprob: -1.3969779014587402
    3. 'if' (adapté à ' if') → logprob: -2.5219779014587402
    4. ' ' → logprob: -13.646977424621582
    5. '		' → logprob: -13.896977424621582
    6. '            
' → logprob: -14.271977424621582
    7. '   ' → logprob: -14.396977424621582
    8. '          ' → logprob: -14.521977424621582
    9. '```' → logprob: -14.521977424621582
    10. '	if' → logprob: -14.646977424621582

Token 341: ' contains' (ID: 8895)
  Prédit: ' contains'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contains' → logprob: -0.4740820825099945
    2. 'contains' → logprob: -0.9740821123123169
    3. ''' → logprob: -12.974081993103027
    4. '   ' → logprob: -14.349081993103027
    5. ' '' → logprob: -14.849081993103027
    6. '.contains' → logprob: -14.974081993103027
    7. '"' → logprob: -14.974081993103027
    8. ' ' → logprob: -15.099081993103027
    9. ' ' → logprob: -15.474081993103027
    10. 'contain' → logprob: -15.474081993103027

Token 342: '_keyword' (ID: 117000)
  Prédit: '_keyword'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_keyword' → logprob: -0.0004257892433088273
    2. '_key' → logprob: -8.250425338745117
    3. '(dec' → logprob: -9.250425338745117
    4. '_keywords' → logprob: -10.375425338745117
    5. '(' → logprob: -11.625425338745117
    6. 'keyword' → logprob: -11.750425338745117
    7. '_' → logprob: -11.750425338745117
    8. 'Keyword' → logprob: -12.750425338745117
    9. '(keyword' → logprob: -13.375425338745117
    10. '_word' → logprob: -13.375425338745117

Token 343: '(dec' (ID: 77281)
  Prédit: '(dec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dec' → logprob: -0.0003386806638445705
    2. '(' → logprob: -8.000338554382324
    3. '(decoded' → logprob: -13.250338554382324
    4. ' (' → logprob: -13.750338554382324
    5. '(de' → logprob: -15.250338554382324
    6. '(des' → logprob: -17.62533950805664
    7. '(decimal' → logprob: -17.62533950805664
    8. '(def' → logprob: -17.75033950805664
    9. '(enc' → logprob: -18.37533950805664
    10. '(det' → logprob: -18.62533950805664

Token 344: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004080315411556512
    2. ')' → logprob: -8.125408172607422
    3. '):
' → logprob: -9.125408172607422
    4. ':' → logprob: -13.375408172607422
    5. ' ):' → logprob: -14.125408172607422
    6. '):
' → logprob: -14.875408172607422
    7. '):

' → logprob: -15.375408172607422
    8. ')):' → logprob: -16.625408172607422
    9. '   ' → logprob: -17.500408172607422
    10. ' and' → logprob: -17.625408172607422

Token 345: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003004327416419983
    2. ' print' → logprob: -6.128004550933838
    3. 'print' → logprob: -7.253004550933838
    4. '                
' → logprob: -10.62800407409668
    5. '                               ' → logprob: -10.75300407409668
    6. '                   ' → logprob: -11.00300407409668
    7. '                       ' → logprob: -11.12800407409668
    8. '<|end|>' → logprob: -12.00300407409668
    9. '           ' → logprob: -12.12800407409668
    10. '	           ' → logprob: -12.37800407409668

Token 346: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.054318349808454514
    2. ' print' → logprob: -3.054318428039551
    3. '               ' → logprob: -5.179318428039551
    4. '                   ' → logprob: -10.17931842803955
    5. '           ' → logprob: -10.42931842803955
    6. 'sys' → logprob: -11.67931842803955
    7. '#print' → logprob: -13.55431842803955
    8. ' sys' → logprob: -13.55431842803955
    9. '```' → logprob: -13.67931842803955
    10. '	print' → logprob: -14.17931842803955

Token 347: '(dec' (ID: 77281)
  Prédit: '(dec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dec' → logprob: -0.0011185461189597845
    2. '(f' → logprob: -7.6261186599731445
    3. 'dec' → logprob: -7.8761186599731445
    4. '(a' → logprob: -8.376118659973145
    5. '(decoded' → logprob: -11.376118659973145
    6. '(' → logprob: -12.376118659973145
    7. '(line' → logprob: -13.001118659973145
    8. '(d' → logprob: -14.376118659973145
    9. 'a' → logprob: -14.501118659973145
    10. 'f' → logprob: -14.876118659973145

Token 348: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009238460334017873
    2. ')
' → logprob: -7.0009236335754395
    3. '               ' → logprob: -11.500924110412598
    4. ',' → logprob: -14.875924110412598
    5. '                   ' → logprob: -15.000924110412598
    6. '))' → logprob: -15.000924110412598
    7. ' )' → logprob: -15.125924110412598
    8. '),' → logprob: -16.00092315673828
    9. '           ' → logprob: -16.12592315673828
    10. ')return' → logprob: -16.25092315673828

Token 349: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 350: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0667523741722107
    2. 'sys' → logprob: -3.0667524337768555
    3. 'exit' → logprob: -4.0667524337768555
    4. ' break' → logprob: -7.1917524337768555
    5. ' sys' → logprob: -9.816752433776855
    6. 'import' → logprob: -9.941752433776855
    7. ' exit' → logprob: -11.441752433776855
    8. 'quit' → logprob: -14.441752433776855
    9. '               ' → logprob: -14.816752433776855
    10. '```' → logprob: -15.441752433776855

Token 351: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 352: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 353: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 354: ':
' (ID: 734)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.07403333485126495
    2. '           ' → logprob: -2.949033260345459
    3. 'continue' → logprob: -4.699033260345459
    4. ':' → logprob: -5.199033260345459
    5. ':
' → logprob: -6.699033260345459
    6. '	continue' → logprob: -6.699033260345459
    7. '               ' → logprob: -7.324033260345459
    8. ' continues' → logprob: -7.699033260345459
    9. '       ' → logprob: -8.074033737182617
    10. '   ' → logprob: -8.449033737182617

Token 355: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19234344363212585
    2. ' continue' → logprob: -1.9423434734344482
    3. 'continue' → logprob: -3.8173434734344482
    4. '       ' → logprob: -5.442343235015869
    5. '   ' → logprob: -6.192343235015869
    6. '	continue' → logprob: -6.192343235015869
    7. '	       ' → logprob: -7.317343235015869
    8. '               ' → logprob: -8.067343711853027
    9. '		' → logprob: -8.942343711853027
    10. '	   ' → logprob: -10.567343711853027

Token 356: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.010004444979131222
    2. ' continue' → logprob: -5.01000452041626
    3. '   ' → logprob: -6.26000452041626
    4. '           ' → logprob: -6.76000452041626
    5. '	continue' → logprob: -8.885004043579102
    6. '       ' → logprob: -9.885004043579102
    7. '               ' → logprob: -11.010004043579102
    8. ' ' → logprob: -12.760004043579102
    9. 'contin' → logprob: -13.135004043579102
    10. '_continue' → logprob: -14.010004043579102

Token 357: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005349855404347181
    2. '           ' → logprob: -5.880349636077881
    3. '<|end|>' → logprob: -6.380349636077881
    4. '   ' → logprob: -7.130349636077881
    5. '               ' → logprob: -10.880350112915039
    6. ' ' → logprob: -11.255350112915039
    7. '<|end|>' → logprob: -12.005350112915039
    8. '     ' → logprob: -13.380350112915039
    9. '        
' → logprob: -13.630350112915039
    10. '	' → logprob: -13.880350112915039

Token 358: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010757996933534741
    2. '   ' → logprob: -7.126075744628906
    3. '<|end|>' → logprob: -8.251075744628906
    4. '           ' → logprob: -12.001075744628906
    5. ' ' → logprob: -13.501075744628906
    6. '<|end|>' → logprob: -13.751075744628906
    7. 'continue' → logprob: -14.876075744628906
    8. '     ' → logprob: -15.251075744628906
    9. '               ' → logprob: -15.376075744628906
    10. ' continue' → logprob: -15.626075744628906

Token 359: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06784459203481674
    2. '   ' → logprob: -2.8178446292877197
    3. 'break' (adapté à ' break') → logprob: -5.317844390869141
    4. ' break' → logprob: -7.067844390869141
    5. '           ' → logprob: -9.94284439086914
    6. '	break' → logprob: -10.44284439086914
    7. ' ' → logprob: -11.44284439086914
    8. '<|end|>' → logprob: -12.56784439086914
    9. '```' → logprob: -12.69284439086914
    10. '     ' → logprob: -12.81784439086914


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 357
Tokens correctement prédits (1ère position, stricte): 187
Tokens correctement prédits (1ère position, avec adaptation): 196
Tokens correctement prédits (top 10): 320
Précision stricte (1ère position): 52.38%
Précision adaptée (1ère position): 54.90%
Précision (top 10): 89.64%
================================================================================
