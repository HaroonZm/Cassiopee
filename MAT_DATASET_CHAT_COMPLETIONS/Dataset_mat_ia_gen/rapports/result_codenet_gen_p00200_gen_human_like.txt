================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:19:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

input = sys.stdin.readline

while True:
    n, m = map(int, input().split())
    if n == 0 and m == 0:
        break

    graph_cost = [[] for _ in range(m + 1)]
    graph_time = [[] for _ in range(m + 1)]

    for _ in range(n):
        a, b, cost, time = map(int, input().split())
        graph_cost[a].append((b, cost))
        graph_cost[b].append((a, cost))
        graph_time[a].append((b, time))
        graph_time[b].append((a, time))

    k = int(input())
    queries = [tuple(map(int, input().split())) for _ in range(k)]

    def dijkstra(graph, start, end):
        dist = [float('inf')] * (m + 1)
        dist[start] = 0
        heap = [(0, start)]
        while heap:
            cur_dist, v = heapq.heappop(heap)
            if dist[v] < cur_dist:
                continue
            if v == end:
                return dist[v]
            for nv, cost in graph[v]:
                nd = cur_dist + cost
                if nd < dist[nv]:
                    dist[nv] = nd
                    heapq.heappush(heap, (nd, nv))
        return dist[end]

    for p, q, r in queries:
        if r == 0:
            print(dijkstra(graph_cost, p, q))
        else:
            print(dijkstra(graph_time, p, q))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -7.755678961984813e-05
    2. 'os' → logprob: -9.500077247619629
    3. ' math' → logprob: -13.625077247619629
    4. ' re' → logprob: -14.500077247619629
    5. ' json' → logprob: -15.125077247619629
    6. '"os' → logprob: -15.375077247619629
    7. '_os' → logprob: -16.125078201293945
    8. ' io' → logprob: -16.375078201293945
    9. ' ' → logprob: -16.375078201293945
    10. '	os' → logprob: -17.000078201293945

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.015002204105257988
    2. '.' → logprob: -4.390002250671387
    3. '_' → logprob: -6.015002250671387
    4. '=' → logprob: -11.015002250671387
    5. ',' → logprob: -11.890002250671387
    6. '[' → logprob: -11.890002250671387
    7. '#' → logprob: -12.765002250671387
    8. 'space' → logprob: -12.765002250671387
    9. 's' → logprob: -13.140002250671387
    10. 'ify' → logprob: -13.265002250671387

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5876707434654236
    2. '
' → logprob: -1.4626708030700684
    3. '\n' → logprob: -2.0876708030700684
    4. '\' → logprob: -3.0876708030700684
    5. '<|end|>' → logprob: -4.337670803070068
    6. '

' → logprob: -4.962670803070068
    7. '```' → logprob: -5.587670803070068
    8. 'import' → logprob: -5.587670803070068
    9. '.
' → logprob: -5.587670803070068
    10. '' → logprob: -5.587670803070068

Token 7: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22187811136245728
    2. '\' → logprob: -2.4718780517578125
    3. '\n' → logprob: -2.7218780517578125
    4. '
' → logprob: -4.3468780517578125
    5. '.
' → logprob: -4.7218780517578125
    6. 'def' → logprob: -4.7218780517578125
    7. '```' → logprob: -5.2218780517578125
    8. 'import' → logprob: -5.7218780517578125
    9. 'from' → logprob: -6.0968780517578125
    10. '' → logprob: -6.2218780517578125

Token 8: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.033907774835824966
    2. '.' → logprob: -3.408907890319824
    3. ')' → logprob: -8.908907890319824
    4. '()' → logprob: -10.533907890319824
    5. '(.)' → logprob: -10.533907890319824
    6. '```' → logprob: -11.283907890319824
    7. ' (' → logprob: -11.283907890319824
    8. '[' → logprob: -12.158907890319824
    9. '<|end|>' → logprob: -12.158907890319824
    10. '(
' → logprob: -12.283907890319824

Token 9: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5769377946853638
    2. 'sys' → logprob: -0.8269377946853638
    3. 'input' → logprob: -7.076937675476074
    4. ' input' → logprob: -8.951937675476074
    5. '	sys' → logprob: -10.826937675476074
    6. '=sys' → logprob: -13.076937675476074
    7. '(sys' → logprob: -14.451937675476074
    8. '```' → logprob: -14.576937675476074
    9. 'lambda' → logprob: -14.701937675476074
    10. ' ' → logprob: -15.201937675476074

Token 10: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.026233188807964325
    2. '.' → logprob: -3.901233196258545
    3. ' .' → logprob: -5.401233196258545
    4. '.stdout' → logprob: -7.651233196258545
    5. '.input' → logprob: -8.401232719421387
    6. '.argv' → logprob: -8.526232719421387
    7. '.readline' → logprob: -9.026232719421387
    8. '.path' → logprob: -10.401232719421387
    9. '.std' → logprob: -10.776232719421387
    10. '.import' → logprob: -11.151232719421387

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.006864320952445269
    2. '.read' → logprob: -5.381864547729492
    3. '.' → logprob: -6.131864547729492
    4. '.readlines' → logprob: -10.006864547729492
    5. 'read' → logprob: -11.506864547729492
    6. '.buffer' → logprob: -11.631864547729492
    7. '```' → logprob: -13.131864547729492
    8. '.Read' → logprob: -13.881864547729492
    9. '<|end|>' → logprob: -15.006864547729492
    10. ' readline' → logprob: -15.131864547729492

Token 12: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11064707487821579
    2. '(' → logprob: -2.360646963119507
    3. '()
' → logprob: -5.235647201538086
    4. '(
' → logprob: -6.360647201538086
    5. '()

' → logprob: -7.235647201538086
    6. '()\' → logprob: -7.235647201538086
    7. '
' → logprob: -7.735647201538086
    8. '().' → logprob: -8.110647201538086
    9. 'def' → logprob: -8.110647201538086
    10. '(n' → logprob: -8.360647201538086

Token 13: 'while' (ID: 7032)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5761905312538147
    2. 'def' → logprob: -0.8261905312538147
    3. 'class' → logprob: -8.951190948486328
    4. 'N' → logprob: -9.201190948486328
    5. 'from' → logprob: -12.076190948486328
    6. '\' → logprob: -12.201190948486328
    7. '```' → logprob: -13.326190948486328
    8. 'for' → logprob: -13.451190948486328
    9. 't' → logprob: -13.451190948486328
    10. '(n' → logprob: -13.576190948486328

Token 14: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1894707977771759
    2. ' True' → logprob: -1.8144707679748535
    3. ' (' → logprob: -5.5644707679748535
    4. ' not' → logprob: -5.8144707679748535
    5. '  ' → logprob: -7.1894707679748535
    6. '(' → logprob: -7.4394707679748535
    7. ' )' → logprob: -7.5644707679748535
    8. ' space' → logprob: -8.439471244812012
    9. ' ' → logprob: -8.939471244812012
    10. '    ' → logprob: -9.064471244812012

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015473603270947933
    2. '():' → logprob: -7.001547336578369
    3. ' :' → logprob: -7.501547336578369
    4. ':**' → logprob: -9.876547813415527
    5. '):' → logprob: -11.501547813415527
    6. '(:' → logprob: -12.001547813415527
    7. ':
' → logprob: -12.751547813415527
    8. ' ():' → logprob: -12.876547813415527
    9. '   ' → logprob: -13.001547813415527
    10. ':return' → logprob: -13.376547813415527

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0069110943004488945
    2. '    
' → logprob: -5.131911277770996
    3. '    ' → logprob: -7.756911277770996
    4. ' ' → logprob: -9.131911277770996
    5. ' 
' → logprob: -9.131911277770996
    6. '```' → logprob: -9.756911277770996
    7. '  
' → logprob: -9.881911277770996
    8. '    
    
' → logprob: -10.006911277770996
    9. '     
' → logprob: -10.381911277770996
    10. ' readline' → logprob: -11.006911277770996

Token 17: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.15397074818611145
    2. 'line' → logprob: -3.528970718383789
    3. 'num' → logprob: -3.778970718383789
    4. 'data' → logprob: -3.903970718383789
    5. 'x' → logprob: -3.903970718383789
    6. ' n' → logprob: -4.528970718383789
    7. 'try' → logprob: -4.528970718383789
    8. 'cmd' → logprob: -4.528970718383789
    9. 'command' → logprob: -5.153970718383789
    10. ' line' → logprob: -5.403970718383789

Token 18: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0710051953792572
    2. '=' → logprob: -2.69600510597229
    3. ' ==' → logprob: -7.321005344390869
    4. ' ' → logprob: -7.946005344390869
    5. ' >' → logprob: -11.071004867553711
    6. ' :=' → logprob: -11.946004867553711
    7. '=int' → logprob: -12.196004867553711
    8. ' =)' → logprob: -12.571004867553711
    9. '==' → logprob: -12.696004867553711
    10. '>' → logprob: -12.821004867553711

Token 19: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.18120504915714264
    2. ' m' → logprob: -1.8062050342559814
    3. 'k' → logprob: -7.9312052726745605
    4. ' =' → logprob: -8.306204795837402
    5. 'w' → logprob: -8.306204795837402
    6. '=' → logprob: -8.681204795837402
    7. ' ' → logprob: -8.931204795837402
    8. ' k' → logprob: -9.806204795837402
    9. '*' → logprob: -9.931204795837402
    10. '_' → logprob: -10.431204795837402

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038044244050979614
    2. '=' → logprob: -3.2880442142486572
    3. ',' → logprob: -13.538043975830078
    4. ' ' → logprob: -14.163043975830078
    5. ')' → logprob: -14.538043975830078
    6. '=input' → logprob: -16.038043975830078
    7. '    ' → logprob: -17.038043975830078
    8. ' =
' → logprob: -17.288043975830078
    9. '  ' → logprob: -17.413043975830078
    10. ' =",' → logprob: -17.788043975830078

Token 21: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.014328975230455399
    2. 'map' → logprob: -4.514328956604004
    3. ' input' → logprob: -5.764328956604004
    4. 'input' → logprob: -9.014328956604004
    5. ' ' → logprob: -11.389328956604004
    6. ' [' → logprob: -13.014328956604004
    7. '	map' → logprob: -14.514328956604004
    8. ' list' → logprob: -14.639328956604004
    9. '   ' → logprob: -15.014328956604004
    10. ' int' → logprob: -15.139328956604004

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1556442826986313
    2. '(' → logprob: -2.280644178390503
    3. '(str' → logprob: -3.780644178390503
    4. '(input' → logprob: -4.280644416809082
    5. '(lambda' → logprob: -5.280644416809082
    6. '(eval' → logprob: -9.655644416809082
    7. '()' → logprob: -10.905644416809082
    8. '(list' → logprob: -10.905644416809082
    9. '(tuple' → logprob: -11.030644416809082
    10. ' (' → logprob: -11.155644416809082

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4286281168460846
    2. ',input' → logprob: -1.1786280870437622
    3. '(input' → logprob: -3.3036282062530518
    4. 'input' → logprob: -5.803627967834473
    5. '(' → logprob: -6.928627967834473
    6. ')' → logprob: -9.428627967834473
    7. ' ,' → logprob: -11.053627967834473
    8. '```' → logprob: -11.303627967834473
    9. '(sys' → logprob: -11.928627967834473
    10. ' input' → logprob: -11.928627967834473

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6932885646820068
    2. ' input' → logprob: -0.6932885646820068
    3. ' sys' → logprob: -9.318288803100586
    4. 'sys' → logprob: -10.443288803100586
    5. ' ' → logprob: -11.193288803100586
    6. ')' → logprob: -12.318288803100586
    7. ',input' → logprob: -13.443288803100586
    8. '   ' → logprob: -14.693288803100586
    9. '=input' → logprob: -14.693288803100586
    10. '	input' → logprob: -15.068288803100586

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.1888679839321412e-05
    2. '()' → logprob: -10.750021934509277
    3. ' ().' → logprob: -15.625021934509277
    4. '())' → logprob: -15.875021934509277
    5. '()
' → logprob: -18.12502098083496
    6. '()

' → logprob: -18.37502098083496
    7. '('').' → logprob: -18.50002098083496
    8. ')' → logprob: -18.75002098083496
    9. '()?.' → logprob: -19.00002098083496
    10. '().'' → logprob: -19.12502098083496

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011250476352870464
    2. 'strip' → logprob: -4.5112504959106445
    3. 'rstrip' → logprob: -8.511250495910645
    4. '(split' → logprob: -14.136250495910645
    5. ' split' → logprob: -14.636250495910645
    6. 'read' → logprob: -16.136249542236328
    7. ')' → logprob: -16.761249542236328
    8. '_split' → logprob: -17.261249542236328
    9. 'spl' → logprob: -18.011249542236328
    10. '.split' → logprob: -18.011249542236328

Token 27: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07626032084226608
    2. '())' → logprob: -2.7012603282928467
    3. '()' → logprob: -5.201260089874268
    4. '))' → logprob: -7.201260089874268
    5. '()))' → logprob: -11.076260566711426
    6. '(' → logprob: -11.576260566711426
    7. '())
' → logprob: -12.201260566711426
    8. ')
' → logprob: -12.576260566711426
    9. '),' → logprob: -12.826260566711426
    10. ')`' → logprob: -12.951260566711426

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4026690423488617
    2. '<|end|>' → logprob: -1.402669072151184
    3. '
' → logprob: -3.6526689529418945
    4. ' if' → logprob: -4.2776689529418945
    5. '```' → logprob: -4.6526689529418945
    6. ':' → logprob: -4.9026689529418945
    7. '    
' → logprob: -5.0276689529418945
    8. '  ' → logprob: -5.5276689529418945
    9. ' ' → logprob: -5.7776689529418945
    10. '<|end|>' → logprob: -5.7776689529418945

Token 29: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5391557812690735
    2. ' if' → logprob: -1.6641557216644287
    3. '<|end|>' → logprob: -2.1641557216644287
    4. 'if' (adapté à ' if') → logprob: -2.5391557216644287
    5. ' ' → logprob: -4.164155960083008
    6. '\n' → logprob: -4.664155960083008
    7. '  ' → logprob: -6.039155960083008
    8. '    ' → logprob: -6.914155960083008
    9. ' 
' → logprob: -7.039155960083008
    10. ')' → logprob: -7.414155960083008

Token 30: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3169676959514618
    2. ' not' → logprob: -1.3169677257537842
    3. 'n' → logprob: -5.941967487335205
    4. 'not' → logprob: -6.941967487335205
    5. ' ' → logprob: -9.191967964172363
    6. '	n' → logprob: -13.816967964172363
    7. ' ' → logprob: -14.191967964172363
    8. '	not' → logprob: -14.566967964172363
    9. 'n't' → logprob: -15.316967964172363
    10. ' n't' → logprob: -15.316967964172363

Token 31: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04863210767507553
    2. '==' → logprob: -3.0486321449279785
    3. '=' → logprob: -11.04863166809082
    4. ')' → logprob: -11.54863166809082
    5. ' <=' → logprob: -12.17363166809082
    6. ' ' → logprob: -12.67363166809082
    7. ')==' → logprob: -13.17363166809082
    8. ' =' → logprob: -13.42363166809082
    9. ' ' → logprob: -13.54863166809082
    10. ' <' → logprob: -13.54863166809082

Token 32: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001036383560858667
    2. ' ' → logprob: -6.876036167144775
    3. 'm' → logprob: -13.938536643981934
    4. '```' → logprob: -14.876036643981934
    5. '۰' → logprob: -15.376036643981934
    6. '_' → logprob: -16.063535690307617
    7. '   ' → logprob: -16.126035690307617
    8. '  ' → logprob: -16.126035690307617
    9. ''' → logprob: -16.313535690307617
    10. '=' → logprob: -16.376035690307617

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002326224057469517
    2. ' ' → logprob: -8.375232696533203
    3. 'm' → logprob: -14.750232696533203
    4. '   ' → logprob: -15.062732696533203
    5. '۰' → logprob: -15.375232696533203
    6. '  ' → logprob: -15.875232696533203
    7. '```' → logprob: -15.875232696533203
    8. '    ' → logprob: -16.375232696533203
    9. 'and' → logprob: -16.937732696533203
    10. '০' → logprob: -17.062732696533203

Token 34: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.009719845838844776
    2. 'and' → logprob: -4.8847198486328125
    3. ':' → logprob: -6.2597198486328125
    4. '   ' → logprob: -9.509719848632812
    5. ' ' → logprob: -9.634719848632812
    6. ' or' → logprob: -10.259719848632812
    7. '    ' → logprob: -12.009719848632812
    8. ' :' → logprob: -12.134719848632812
    9. '  ' → logprob: -12.384719848632812
    10. '	and' → logprob: -12.509719848632812

Token 35: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.03804619982838631
    2. 'm' → logprob: -3.28804612159729
    3. ' ' → logprob: -13.288045883178711
    4. '   ' → logprob: -13.788045883178711
    5. ' ' → logprob: -13.788045883178711
    6. '	m' → logprob: -14.038045883178711
    7. '  ' → logprob: -17.03804588317871
    8. '    ' → logprob: -17.03804588317871
    9. '　' → logprob: -19.16304588317871
    10. ' ' → logprob: -19.28804588317871

Token 36: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.030181072652339935
    2. '==' → logprob: -3.5301811695098877
    3. ' ' → logprob: -8.655180931091309
    4. '<|end|>' → logprob: -8.905180931091309
    5. '  ' → logprob: -10.530180931091309
    6. '=' → logprob: -10.905180931091309
    7. ' ' → logprob: -11.280180931091309
    8. ')' → logprob: -11.530180931091309
    9. '<|end|>' → logprob: -11.530180931091309
    10. ')==' → logprob: -11.655180931091309

Token 37: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2519315779209137
    2. ' ' → logprob: -1.5019315481185913
    3. ' ' → logprob: -13.001931190490723
    4. '  ' → logprob: -15.626931190490723
    5. '   ' → logprob: -16.62693214416504
    6. '	' → logprob: -17.87693214416504
    7. '​' → logprob: -18.50193214416504
    8. '۰' → logprob: -18.68943214416504
    9. '```' → logprob: -19.00193214416504
    10. '<|end|>' → logprob: -19.18943214416504

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -18.500335693359375
    4. '۰' → logprob: -18.625335693359375
    5. '  ' → logprob: -18.687835693359375
    6. ' ' → logprob: -19.312835693359375
    7. '```' → logprob: -19.750335693359375
    8. '০' → logprob: -20.562835693359375
    9. '０' → logprob: -20.625335693359375
    10. '०' → logprob: -20.812835693359375

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011742709903046489
    2. '   ' → logprob: -7.251174449920654
    3. ':
' → logprob: -7.876174449920654
    4. '       ' → logprob: -9.501173973083496
    5. ' :' → logprob: -12.376173973083496
    6. '.' → logprob: -12.751173973083496
    7. ':return' → logprob: -14.126173973083496
    8. '):' → logprob: -14.251173973083496
    9. '	break' → logprob: -15.376173973083496
    10. ',' → logprob: -15.626173973083496

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002950243651866913
    2. '   ' → logprob: -6.002950191497803
    3. ':' → logprob: -8.127950668334961
    4. '	' → logprob: -9.002950668334961
    5. ':
' → logprob: -11.002950668334961
    6. '	break' → logprob: -11.502950668334961
    7. '	   ' → logprob: -12.127950668334961
    8. '```' → logprob: -13.127950668334961
    9. '   ' → logprob: -13.252950668334961
    10. '<|end|>' → logprob: -13.252950668334961

Token 41: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.07118960469961166
    2. 'break' (adapté à ' break') → logprob: -3.0711896419525146
    3. '   ' → logprob: -3.8211896419525146
    4. '	break' → logprob: -8.196189880371094
    5. '       ' → logprob: -8.696189880371094
    6. '_break' → logprob: -13.446189880371094
    7. '```' → logprob: -13.446189880371094
    8. '   ' → logprob: -15.446189880371094
    9. '-break' → logprob: -15.571189880371094
    10. 'Break' → logprob: -15.696189880371094

Token 42: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42289382219314575
    2. '   ' → logprob: -1.422893762588501
    3. '    
' → logprob: -2.922893762588501
    4. '\n' → logprob: -3.547893762588501
    5. '<|end|>' → logprob: -4.67289400100708
    6. '```' → logprob: -5.67289400100708
    7. '
' → logprob: -6.42289400100708
    8. '  
' → logprob: -6.54789400100708
    9. ' 
' → logprob: -6.79789400100708
    10. '' → logprob: -7.29789400100708

Token 43: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.010339692234992981
    2. ' graph' → logprob: -5.385339736938477
    3. '
' → logprob: -6.260339736938477
    4. '    
' → logprob: -6.760339736938477
    5. 'dist' → logprob: -7.260339736938477
    6. '   ' → logprob: -7.385339736938477
    7. 'edges' → logprob: -7.635339736938477
    8. 'distance' → logprob: -8.010339736938477
    9. '	graph' → logprob: -8.885339736938477
    10. 'adj' → logprob: -9.885339736938477

Token 44: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.008439994417130947
    2. ' graph' → logprob: -5.258440017700195
    3. '   ' → logprob: -6.883440017700195
    4. 'dist' → logprob: -7.258440017700195
    5. 'edges' → logprob: -7.508440017700195
    6. 'adj' → logprob: -7.883440017700195
    7. 'distance' → logprob: -8.883440017700195
    8. 'graphs' → logprob: -9.883440017700195
    9. 'friends' → logprob: -10.633440017700195
    10. 'parent' → logprob: -10.758440017700195

Token 45: '_cost' (ID: 36820)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008733822964131832
    2. '=' → logprob: -4.758733749389648
    3. '[' → logprob: -9.133733749389648
    4. ' ' → logprob: -12.508733749389648
    5. ' =[' → logprob: -13.133733749389648
    6. ']' → logprob: -13.633733749389648
    7. '[]' → logprob: -14.008733749389648
    8. '=[]' → logprob: -14.383733749389648
    9. ')' → logprob: -14.758733749389648
    10. ',' → logprob: -15.133733749389648

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0627506822347641
    2. '=' → logprob: -2.8127505779266357
    3. '[' → logprob: -7.312750816345215
    4. ',' → logprob: -10.062750816345215
    5. ' ' → logprob: -10.687750816345215
    6. 's' → logprob: -11.312750816345215
    7. ']' → logprob: -11.437750816345215
    8. '[]' → logprob: -12.312750816345215
    9. '   ' → logprob: -12.437750816345215
    10. ' =[' → logprob: -12.437750816345215

Token 47: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1116471216082573
    2. ' [[]' → logprob: -3.111647129058838
    3. ' [' → logprob: -3.361647129058838
    4. ' [{}' → logprob: -4.486647129058838
    5. '{' → logprob: -5.111647129058838
    6. '{}' → logprob: -5.236647129058838
    7. '[[' → logprob: -6.611647129058838
    8. ' {' → logprob: -6.861647129058838
    9. ' [[' → logprob: -7.736647129058838
    10. '[{' → logprob: -7.986647129058838

Token 48: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11030923575162888
    2. 'for' → logprob: -2.61030912399292
    3. ')' → logprob: -3.98530912399292
    4. ']' → logprob: -4.98530912399292
    5. ',' → logprob: -5.23530912399292
    6. ')]' → logprob: -10.110309600830078
    7. ' ' → logprob: -10.360309600830078
    8. ' ]' → logprob: -10.860309600830078
    9. '	for' → logprob: -10.985309600830078
    10. '()' → logprob: -11.110309600830078

Token 49: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.017957935109734535
    2. ' _' → logprob: -4.767958164215088
    3. ' range' → logprob: -5.392958164215088
    4. ' in' → logprob: -5.517958164215088
    5. 'range' → logprob: -7.892958164215088
    6. '_range' → logprob: -8.64295768737793
    7. ' ' → logprob: -8.76795768737793
    8. 'in' → logprob: -11.26795768737793
    9. '(range' → logprob: -11.89295768737793
    10. ' i' → logprob: -12.26795768737793

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4344417154788971
    2. 'in' → logprob: -1.0594416856765747
    3. 'range' → logprob: -5.184441566467285
    4. ' range' → logprob: -9.809441566467285
    5. 'n' → logprob: -10.434441566467285
    6. ' ' → logprob: -10.684441566467285
    7. '_' → logprob: -12.684441566467285
    8. '  ' → logprob: -12.684441566467285
    9. '   ' → logprob: -12.809441566467285
    10. '    ' → logprob: -13.934441566467285

Token 51: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023246178403496742
    2. ' range' → logprob: -3.7732462882995605
    3. '(range' → logprob: -15.023245811462402
    4. ' ' → logprob: -15.523245811462402
    5. '   ' → logprob: -16.27324676513672
    6. '	range' → logprob: -16.52324676513672
    7. ')' → logprob: -17.64824676513672
    8. '  ' → logprob: -18.02324676513672
    9. ']' → logprob: -18.89824676513672
    10. 'rang' → logprob: -19.27324676513672

Token 52: '(m' (ID: 2145)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.659005157416686e-05
    2. '(' → logprob: -9.625066757202148
    3. ' (' → logprob: -15.000066757202148
    4. 'n' → logprob: -17.12506675720215
    5. ')n' → logprob: -18.87506675720215
    6. ' n' → logprob: -19.00006675720215
    7. '(nx' → logprob: -19.37506675720215
    8. ')' → logprob: -19.50006675720215
    9. '((' → logprob: -19.50006675720215
    10. '(N' → logprob: -19.62506675720215

Token 53: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.011634210124611855
    2. '+' → logprob: -4.636634349822998
    3. ' )' → logprob: -6.761634349822998
    4. ' +' → logprob: -7.511634349822998
    5. ')' → logprob: -8.76163387298584
    6. ')]
' → logprob: -12.88663387298584
    7. ']' → logprob: -13.13663387298584
    8. ' ]' → logprob: -13.13663387298584
    9. '+n' → logprob: -13.13663387298584
    10. '   ' → logprob: -13.76163387298584

Token 54: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028086788952350616
    2. ' ' → logprob: -6.502808570861816
    3. 'n' → logprob: -6.752808570861816
    4. ' n' → logprob: -9.002808570861816
    5. '2' → logprob: -12.002808570861816
    6. '   ' → logprob: -12.877808570861816
    7. 'm' → logprob: -13.002808570861816
    8. '0' → logprob: -13.252808570861816
    9. '(n' → logprob: -14.502808570861816
    10. '  ' → logprob: -15.252808570861816

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0029091311153024435
    2. 'n' → logprob: -5.877909183502197
    3. ' ' → logprob: -9.627908706665039
    4. ' n' → logprob: -11.127908706665039
    5. 'm' → logprob: -11.377908706665039
    6. '2' → logprob: -12.252908706665039
    7. '0' → logprob: -12.252908706665039
    8. '   ' → logprob: -13.752908706665039
    9. '(n' → logprob: -14.377908706665039
    10. '  ' → logprob: -15.752908706665039

Token 56: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.02094811201095581
    2. ']' → logprob: -3.8959481716156006
    3. ')' → logprob: -7.8959479331970215
    4. ' ]' → logprob: -10.77094841003418
    5. '   ' → logprob: -13.02094841003418
    6. ' )' → logprob: -13.14594841003418
    7. ')]
' → logprob: -13.14594841003418
    8. ']
' → logprob: -13.27094841003418
    9. '])' → logprob: -13.27094841003418
    10. '>]' → logprob: -14.14594841003418

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2568807005882263
    2. '<|end|>' → logprob: -2.506880760192871
    3. '
' → logprob: -3.131880760192871
    4. 'for' → logprob: -3.256880760192871
    5. ' for' → logprob: -3.381880760192871
    6. '    
' → logprob: -4.006880760192871
    7. '  
' → logprob: -5.756880760192871
    8. 'graph' → logprob: -5.881880760192871
    9. ' 
' → logprob: -7.131880760192871
    10. '  ' → logprob: -7.381880760192871

Token 58: ' graph' (ID: 7465)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6302406787872314
    2. 'for' → logprob: -1.1302406787872314
    3. '   ' → logprob: -2.0052406787872314
    4. '
' → logprob: -5.880240440368652
    5. '    
' → logprob: -6.255240440368652
    6. ' 
' → logprob: -6.380240440368652
    7. '  
' → logprob: -7.130240440368652
    8. ' ' → logprob: -7.505240440368652
    9. 'graph' (adapté à ' graph') → logprob: -7.505240440368652
    10. ' graph' → logprob: -8.005240440368652

Token 59: '_time' (ID: 6425)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.06749476492404938
    2. ' =' → logprob: -3.3174948692321777
    3. '=' → logprob: -4.692494869232178
    4. '_' → logprob: -5.317494869232178
    5. '_edges' → logprob: -5.692494869232178
    6. '_nodes' → logprob: -6.317494869232178
    7. 'cost' → logprob: -6.442494869232178
    8. '   ' → logprob: -6.692494869232178
    9. '_c' → logprob: -6.942494869232178
    10. '<|end|>' → logprob: -7.067494869232178

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.062034789472818375
    2. '=' → logprob: -2.812034845352173
    3. '   ' → logprob: -10.562034606933594
    4. '[' → logprob: -10.937034606933594
    5. ' ' → logprob: -11.062034606933594
    6. '[]' → logprob: -13.312034606933594
    7. '=[]' → logprob: -13.437034606933594
    8. '  ' → logprob: -13.812034606933594
    9. '    ' → logprob: -14.437034606933594
    10. '=[' → logprob: -14.937034606933594

Token 61: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.08923202753067017
    2. '[' → logprob: -2.4642319679260254
    3. ' [' → logprob: -8.589232444763184
    4. '[]' → logprob: -9.839232444763184
    5. ' []' → logprob: -11.214232444763184
    6. ' =' → logprob: -11.214232444763184
    7. ' ' → logprob: -11.964232444763184
    8. '   ' → logprob: -12.089232444763184
    9. ' [[' → logprob: -13.339232444763184
    10. ' [][]' → logprob: -13.589232444763184

Token 62: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11291388422250748
    2. 'for' → logprob: -2.2379138469696045
    3. '   ' → logprob: -10.112914085388184
    4. '[m' → logprob: -11.487914085388184
    5. '	for' → logprob: -11.612914085388184
    6. '[' → logprob: -12.112914085388184
    7. ' [' → logprob: -12.237914085388184
    8. ' ' → logprob: -12.487914085388184
    9. ')' → logprob: -12.612914085388184
    10. '       ' → logprob: -12.612914085388184

Token 63: ' _' (ID: 1175)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6426413655281067
    2. ' range' → logprob: -1.142641305923462
    3. 'range' → logprob: -3.017641305923462
    4. '_' → logprob: -3.392641305923462
    5. ' _' → logprob: -3.517641305923462
    6. 'in' → logprob: -4.267641544342041
    7. '(range' → logprob: -4.392641544342041
    8. '_range' → logprob: -4.892641544342041
    9. ' (' → logprob: -5.017641544342041
    10. '_in' → logprob: -7.017641544342041

Token 64: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1435881108045578
    2. ' range' → logprob: -2.643588066101074
    3. '_' → logprob: -3.768588066101074
    4. '_range' → logprob: -4.143588066101074
    5. 'in' → logprob: -4.268588066101074
    6. ' in' → logprob: -4.893588066101074
    7. '(range' → logprob: -6.393588066101074
    8. ' _' → logprob: -7.643588066101074
    9. '	range' → logprob: -11.393588066101074
    10. '```' → logprob: -11.893588066101074

Token 65: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2254430651664734
    2. ' range' → logprob: -1.6004431247711182
    3. '(range' → logprob: -10.600442886352539
    4. '	range' → logprob: -13.225442886352539
    5. '   ' → logprob: -13.725442886352539
    6. ' ' → logprob: -14.100442886352539
    7. 'n' → logprob: -14.350442886352539
    8. 'ange' → logprob: -15.225442886352539
    9. '  ' → logprob: -15.475442886352539
    10. '    ' → logprob: -15.850442886352539

Token 66: '(m' (ID: 2145)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.12901633977890015
    2. '(m' → logprob: -2.129016399383545
    3. '(range' → logprob: -7.004016399383545
    4. '(' → logprob: -7.379016399383545
    5. '(graph' → logprob: -8.754015922546387
    6. ' (' → logprob: -8.754015922546387
    7. 'range' → logprob: -9.004015922546387
    8. ' range' → logprob: -9.879015922546387
    9. '(s' → logprob: -10.629015922546387
    10. '(N' → logprob: -11.879015922546387

Token 67: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31329768896102905
    2. ' +' → logprob: -1.3132977485656738
    3. ')' → logprob: -11.063297271728516
    4. ' ' → logprob: -12.313297271728516
    5. ')]' → logprob: -12.563297271728516
    6. '+
' → logprob: -12.938297271728516
    7. '＋' → logprob: -13.438297271728516
    8. '   ' → logprob: -13.563297271728516
    9. ' +
' → logprob: -13.563297271728516
    10. '1' → logprob: -13.813297271728516

Token 68: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00041005798266269267
    2. ' ' → logprob: -8.125410079956055
    3. '(' → logprob: -9.250410079956055
    4. ')' → logprob: -12.000410079956055
    5. ' (' → logprob: -13.000410079956055
    6. '   ' → logprob: -13.250410079956055
    7. ' m' → logprob: -13.500410079956055
    8. '0' → logprob: -13.625410079956055
    9. '(m' → logprob: -13.625410079956055
    10. 'm' → logprob: -13.750410079956055

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.641841820150148e-05
    2. 'n' → logprob: -11.12502670288086
    3. ' ' → logprob: -12.87502670288086
    4. 'm' → logprob: -13.00002670288086
    5. '+' → logprob: -13.12502670288086
    6. '2' → logprob: -13.25002670288086
    7. '0' → logprob: -13.87502670288086
    8. ')' → logprob: -14.62502670288086
    9. '   ' → logprob: -15.12502670288086
    10. '```' → logprob: -15.31252670288086

Token 70: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.1056290715932846
    2. ']' → logprob: -2.3556289672851562
    3. ')' → logprob: -5.230628967285156
    4. '`]' → logprob: -10.605628967285156
    5. ' ]' → logprob: -12.105628967285156
    6. '   ' → logprob: -12.355628967285156
    7. ']
' → logprob: -12.605628967285156
    8. '])' → logprob: -12.605628967285156
    9. ')]
' → logprob: -12.855628967285156
    10. '()]' → logprob: -12.980628967285156

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04007607698440552
    2. '    
' → logprob: -4.16507625579834
    3. '
' → logprob: -4.41507625579834
    4. 'for' → logprob: -4.79007625579834
    5. ' for' → logprob: -6.66507625579834
    6. '  
' → logprob: -7.29007625579834
    7. ' 
' → logprob: -7.54007625579834
    8. ' ' → logprob: -8.41507625579834
    9. '   
' → logprob: -8.54007625579834
    10. '  ' → logprob: -9.41507625579834

Token 72: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.26988208293914795
    2. ' for' → logprob: -1.519882082939148
    3. '   ' → logprob: -4.5198822021484375
    4. ' ' → logprob: -5.6448822021484375
    5. '	for' → logprob: -6.1448822021484375
    6. ' 
' → logprob: -7.2698822021484375
    7. '
' → logprob: -9.394882202148438
    8. '' → logprob: -9.644882202148438
    9. '    
' → logprob: -9.769882202148438
    10. ' ' → logprob: -9.894882202148438

Token 73: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.22660225629806519
    2. '_' → logprob: -1.60160231590271
    3. ' i' → logprob: -7.101602077484131
    4. ' ' → logprob: -7.976602077484131
    5. '_i' → logprob: -12.226602554321289
    6. ' ▁' → logprob: -12.226602554321289
    7. '  ' → logprob: -12.601602554321289
    8. ' ‌' → logprob: -12.726602554321289
    9. 'i' → logprob: -13.226602554321289
    10. ' range' → logprob: -13.601602554321289

Token 74: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.24469463527202606
    2. 'in' → logprob: -2.244694709777832
    3. ' i' → logprob: -2.494694709777832
    4. ' ' → logprob: -4.119694709777832
    5. '  ' → logprob: -4.869694709777832
    6. 'i' → logprob: -5.869694709777832
    7. ' n' → logprob: -7.369694709777832
    8. 'n' → logprob: -7.869694709777832
    9. '   ' → logprob: -8.744694709777832
    10. ')' → logprob: -8.994694709777832

Token 75: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132641315460205
    2. ' range' → logprob: -1.3132641315460205
    3. ' ' → logprob: -14.063263893127441
    4. '(range' → logprob: -14.938263893127441
    5. 'rang' → logprob: -15.063263893127441
    6. '	range' → logprob: -15.188263893127441
    7. ' in' → logprob: -15.313263893127441
    8. '  ' → logprob: -16.313264846801758
    9. '```' → logprob: -16.563264846801758
    10. 'ra' → logprob: -16.563264846801758

Token 76: '(n' (ID: 2406)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.6312662363052368
    2. '(' → logprob: -0.8812662363052368
    3. '(n' → logprob: -3.3812661170959473
    4. ' (' → logprob: -4.131266117095947
    5. ' m' → logprob: -6.006266117095947
    6. 'm' → logprob: -7.256266117095947
    7. ' n' → logprob: -7.756266117095947
    8. 'n' → logprob: -10.006266593933105
    9. ' ' → logprob: -10.256266593933105
    10. '(
' → logprob: -10.631266593933105

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05402442067861557
    2. ',' → logprob: -3.0540244579315186
    3. '):
' → logprob: -5.6790242195129395
    4. ')' → logprob: -6.8040242195129395
    5. ':' → logprob: -7.5540242195129395
    6. ' ):' → logprob: -8.304024696350098
    7. '   ' → logprob: -9.554024696350098
    8. ' ,' → logprob: -10.804024696350098
    9. '):
' → logprob: -12.429024696350098
    10. ',
' → logprob: -12.429024696350098

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6876415610313416
    2. '   ' → logprob: -0.8126415610313416
    3. ',' → logprob: -3.9376416206359863
    4. ' ' → logprob: -4.187641620635986
    5. '    ' → logprob: -4.437641620635986
    6. ' ,' → logprob: -6.812641620635986
    7. '  ' → logprob: -6.812641620635986
    8. '    
' → logprob: -6.937641620635986
    9. ' n' → logprob: -7.187641620635986
    10. '     ' → logprob: -7.562641620635986

Token 79: ' a' (ID: 261)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.6783499717712402
    2. 'u' → logprob: -1.4283499717712402
    3. 'a' (adapté à ' a') → logprob: -1.8033499717712402
    4. ' a' → logprob: -2.5533499717712402
    5. ' s' → logprob: -5.67834997177124
    6. 's' → logprob: -5.67834997177124
    7. '   ' → logprob: -6.42834997177124
    8. 'x' → logprob: -7.30334997177124
    9. ' x' → logprob: -7.92834997177124
    10. ' ' → logprob: -9.303350448608398

Token 80: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.31770744919776917
    2. ',' → logprob: -1.3177074193954468
    3. ' ' → logprob: -5.442707538604736
    4. ',b' → logprob: -9.442707061767578
    5. ' b' → logprob: -11.442707061767578
    6. ' ,
' → logprob: -12.192707061767578
    7. 'b' → logprob: -12.192707061767578
    8. '  ' → logprob: -12.317707061767578
    9. ' ,

' → logprob: -14.817707061767578
    10. '   ' → logprob: -14.942707061767578

Token 81: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.038238510489463806
    2. ' b' → logprob: -3.288238525390625
    3. ' ' → logprob: -8.913238525390625
    4. ',' → logprob: -10.663238525390625
    5. ',b' → logprob: -11.413238525390625
    6. 's' → logprob: -11.538238525390625
    7. '<|end|>' → logprob: -12.163238525390625
    8. '=' → logprob: -12.163238525390625
    9. ' ,' → logprob: -12.538238525390625
    10. ' =' → logprob: -13.788238525390625

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015319683589041233
    2. '=' → logprob: -4.64031982421875
    3. ' =' → logprob: -5.89031982421875
    4. ' ,' → logprob: -5.89031982421875
    5. ' ' → logprob: -12.14031982421875
    6. '   ' → logprob: -12.14031982421875
    7. '    ' → logprob: -13.89031982421875
    8. '<|end|>' → logprob: -14.01531982421875
    9. '  ' → logprob: -14.39031982421875
    10. ',c' → logprob: -15.01531982421875

Token 83: ' cost' (ID: 3097)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4757915139198303
    2. ' c' → logprob: -0.9757915139198303
    3. ' t' → logprob: -7.7257914543151855
    4. 'cost' → logprob: -7.7257914543151855
    5. ' ' → logprob: -8.100791931152344
    6. ' cost' → logprob: -9.100791931152344
    7. 't' → logprob: -9.350791931152344
    8. 'time' → logprob: -9.850791931152344
    9. '  ' → logprob: -10.350791931152344
    10. 'w' → logprob: -10.725791931152344

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010969883762300014
    2. ' ,' → logprob: -5.135970115661621
    3. ' =' → logprob: -5.885970115661621
    4. '=' → logprob: -6.135970115661621
    5. ' ' → logprob: -9.885970115661621
    6. '<|end|>' → logprob: -11.385970115661621
    7. '   ' → logprob: -11.635970115661621
    8. '    ' → logprob: -12.385970115661621
    9. '  ' → logprob: -12.635970115661621
    10. 's' → logprob: -13.385970115661621

Token 85: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.026386680081486702
    2. ' time' → logprob: -3.6513867378234863
    3. 't' → logprob: -10.151386260986328
    4. ' ' → logprob: -12.026386260986328
    5. '_time' → logprob: -12.026386260986328
    6. ' =' → logprob: -12.151386260986328
    7. '=time' → logprob: -12.151386260986328
    8. '<|end|>' → logprob: -12.276386260986328
    9. ' t' → logprob: -12.651386260986328
    10. '=' → logprob: -12.651386260986328

Token 86: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38694852590560913
    2. ' =' → logprob: -1.136948585510254
    3. ',' → logprob: -10.011948585510254
    4. ' ' → logprob: -11.261948585510254
    5. ')' → logprob: -11.636948585510254
    6. '   ' → logprob: -12.261948585510254
    7. '  ' → logprob: -13.136948585510254
    8. '_' → logprob: -13.136948585510254
    9. '    ' → logprob: -14.011948585510254
    10. ')=' → logprob: -15.261948585510254

Token 87: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0006291598547250032
    2. 'map' → logprob: -7.37562894821167
    3. '	map' → logprob: -14.000629425048828
    4. '    ' → logprob: -14.500629425048828
    5. ' input' → logprob: -14.500629425048828
    6. ' list' → logprob: -15.125629425048828
    7. ' m' → logprob: -15.625629425048828
    8. ' ' → logprob: -15.625629425048828
    9. ' ma' → logprob: -16.625629425048828
    10. '   ' → logprob: -16.875629425048828

Token 88: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004125419072806835
    2. '(' → logprob: -5.504125595092773
    3. '(lambda' → logprob: -10.504125595092773
    4. '<|end|>' → logprob: -12.129125595092773
    5. '<int' → logprob: -13.004125595092773
    6. '(str' → logprob: -13.004125595092773
    7. '[int' → logprob: -13.254125595092773
    8. '=int' → logprob: -13.379125595092773
    9. '(
' → logprob: -13.879125595092773
    10. '(in' → logprob: -14.004125595092773

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.049181319773197174
    2. ',input' → logprob: -3.2991812229156494
    3. '(' → logprob: -4.7991814613342285
    4. '(input' → logprob: -6.4241814613342285
    5. ')' → logprob: -7.0491814613342285
    6. '(),' → logprob: -8.79918098449707
    7. ' ,' → logprob: -9.04918098449707
    8. '()' → logprob: -10.79918098449707
    9. 'input' → logprob: -10.92418098449707
    10. ',int' → logprob: -11.67418098449707

Token 90: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759416818618774
    2. ' input' → logprob: -0.8259416818618774
    3. ')' → logprob: -13.950942039489746
    4. '=input' → logprob: -14.450942039489746
    5. '(input' → logprob: -15.200942039489746
    6. '	input' → logprob: -15.825942039489746
    7. ',input' → logprob: -15.950942039489746
    8. '_input' → logprob: -16.32594108581543
    9. ' )' → logprob: -17.32594108581543
    10. '[input' → logprob: -17.32594108581543

Token 91: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.491498531133402e-06
    2. '()' → logprob: -11.625009536743164
    3. ')' → logprob: -15.375009536743164
    4. '())' → logprob: -16.625009536743164
    5. '.' → logprob: -17.500009536743164
    6. '(' → logprob: -17.500009536743164
    7. '()
' → logprob: -17.625009536743164
    8. ' ().' → logprob: -17.875009536743164
    9. '().__' → logprob: -19.125009536743164
    10. '.split' → logprob: -19.625009536743164

Token 92: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. 'strip' → logprob: -15.375000953674316
    3. '(split' → logprob: -15.500000953674316
    4. ' split' → logprob: -16.25
    5. 'rstrip' → logprob: -17.25
    6. 'spl' → logprob: -17.375
    7. ')' → logprob: -18.625
    8. 'plit' → logprob: -19.5
    9. '.split' → logprob: -20.375
    10. '```' → logprob: -21.625

Token 93: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020815132185816765
    2. '())' → logprob: -4.520814895629883
    3. '()' → logprob: -4.645814895629883
    4. ')
' → logprob: -10.020814895629883
    5. '))' → logprob: -10.270814895629883
    6. '(' → logprob: -10.520814895629883
    7. '())
' → logprob: -12.145814895629883
    8. ' )' → logprob: -13.145814895629883
    9. ')`' → logprob: -13.645814895629883
    10. '()
' → logprob: -14.020814895629883

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1923399120569229
    2. '
' → logprob: -2.0673398971557617
    3. '   ' → logprob: -4.192339897155762
    4. '        
' → logprob: -4.317339897155762
    5. '    
' → logprob: -4.942339897155762
    6. '<|end|>' → logprob: -5.442339897155762
    7. ')' → logprob: -5.567339897155762
    8. '  
' → logprob: -6.567339897155762
    9. ' 
' → logprob: -6.817339897155762
    10. '
' → logprob: -8.067339897155762

Token 95: ' graph' (ID: 7465)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7560967206954956
    2. '   ' → logprob: -1.0060967206954956
    3. ' 
' → logprob: -2.506096839904785
    4. '
' → logprob: -3.131096839904785
    5. '    
' → logprob: -4.756096839904785
    6. ' graph' → logprob: -5.006096839904785
    7. '        
' → logprob: -5.006096839904785
    8. 'graph' (adapté à ' graph') → logprob: -5.881096839904785
    9. '   
' → logprob: -5.881096839904785
    10. '	graph' → logprob: -5.881096839904785

Token 96: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -6.2729995988775045e-06
    2. '_' → logprob: -13.000006675720215
    3. '[_' → logprob: -13.125006675720215
    4. '_time' → logprob: -14.750006675720215
    5. '[' → logprob: -15.000006675720215
    6. ' _' → logprob: -15.500006675720215
    7. '_co' → logprob: -15.625006675720215
    8. '_COST' → logprob: -15.625006675720215
    9. '_cos' → logprob: -15.750006675720215
    10. '_c' → logprob: -16.2500057220459

Token 97: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0002647927321959287
    2. '[b' → logprob: -8.500265121459961
    3. '[' → logprob: -9.750265121459961
    4. 'a' → logprob: -13.375265121459961
    5. ' [' → logprob: -14.750265121459961
    6. '[c' → logprob: -14.750265121459961
    7. '   ' → logprob: -15.500265121459961
    8. '[
' → logprob: -16.50026512145996
    9. '```' → logprob: -17.00026512145996
    10. ')[' → logprob: -17.12526512145996

Token 98: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00070397206582129
    2. ').' → logprob: -8.000703811645508
    3. ']' → logprob: -8.750703811645508
    4. '.' → logprob: -9.125703811645508
    5. '   ' → logprob: -10.000703811645508
    6. '.append' → logprob: -10.750703811645508
    7. ' ].' → logprob: -10.875703811645508
    8. '[' → logprob: -11.750703811645508
    9. '][' → logprob: -13.250703811645508
    10. ' ' → logprob: -13.250703811645508

Token 99: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.4121114822482923e-06
    2. '.append' → logprob: -13.250003814697266
    3. 'app' → logprob: -13.875003814697266
    4. ' append' → logprob: -14.875003814697266
    5. 'appen' → logprob: -15.625003814697266
    6. ' ' → logprob: -16.500003814697266
    7. 'add' → logprob: -17.625003814697266
    8. 'ap' → logprob: -18.000003814697266
    9. 'appe' → logprob: -19.000003814697266
    10. 'Append' → logprob: -19.250003814697266

Token 100: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.46455273032188416
    2. '(b' → logprob: -1.4645527601242065
    3. '(' → logprob: -1.9645527601242065
    4. '(B' → logprob: -9.339552879333496
    5. ' (' → logprob: -9.589552879333496
    6. '(a' → logprob: -12.089552879333496
    7. '   ' → logprob: -12.339552879333496
    8. '(
' → logprob: -12.464552879333496
    9. '(True' → logprob: -12.964552879333496
    10. ')' → logprob: -13.339552879333496

Token 101: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.001709209755063057
    2. ' b' → logprob: -6.376708984375
    3. '   ' → logprob: -12.626708984375
    4. 'cost' → logprob: -12.876708984375
    5. ' cost' → logprob: -14.876708984375
    6. '(b' → logprob: -15.126708984375
    7. ' ' → logprob: -15.251708984375
    8. ')b' → logprob: -15.876708984375
    9. '	b' → logprob: -16.126708984375
    10. '    ' → logprob: -16.376708984375

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020580526324920356
    2. ' ,' → logprob: -8.500205993652344
    3. ',
' → logprob: -14.375205993652344
    4. '‌,' → logprob: -14.500205993652344
    5. ',c' → logprob: -14.875205993652344
    6. '),' → logprob: -15.625205993652344
    7. '<|end|>' → logprob: -15.750205993652344
    8. '`,' → logprob: -16.000205993652344
    9. 'cost' → logprob: -16.250205993652344
    10. '',' → logprob: -17.375205993652344

Token 103: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.06197217106819153
    2. ' cost' → logprob: -2.811972141265869
    3. '(cost' → logprob: -13.186972618103027
    4. ')' → logprob: -14.436972618103027
    5. '   ' → logprob: -14.686972618103027
    6. ' ' → logprob: -14.936972618103027
    7. 'c' → logprob: -15.561972618103027
    8. '_cost' → logprob: -15.561972618103027
    9. 'cos' → logprob: -15.686972618103027
    10. '
' → logprob: -15.686972618103027

Token 104: '))
' (ID: 2210)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034092944115400314
    2. '))' → logprob: -3.409092903137207
    3. ' ,' → logprob: -8.034092903137207
    4. ' ))' → logprob: -9.409092903137207
    5. ')' → logprob: -10.534092903137207
    6. '))
' → logprob: -12.909092903137207
    7. '),' → logprob: -13.034092903137207
    8. ',
' → logprob: -13.034092903137207
    9. '   ' → logprob: -13.034092903137207
    10. ' ' → logprob: -13.784092903137207

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00043710620957426727
    2. '
' → logprob: -9.000436782836914
    3. '   ' → logprob: -9.000436782836914
    4. '<|end|>' → logprob: -9.375436782836914
    5. '	' → logprob: -9.750436782836914
    6. ',' → logprob: -11.125436782836914
    7. ')' → logprob: -11.500436782836914
    8. '	graph' → logprob: -11.875436782836914
    9. ' ' → logprob: -12.875436782836914
    10. '     ' → logprob: -13.000436782836914

Token 106: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.4596010744571686
    2. 'graph' (adapté à ' graph') → logprob: -1.0846010446548462
    3. '       ' → logprob: -3.5846011638641357
    4. '	graph' → logprob: -6.084600925445557
    5. '   ' → logprob: -8.209601402282715
    6. '(graph' → logprob: -10.209601402282715
    7. ' ' → logprob: -10.959601402282715
    8. '	' → logprob: -11.084601402282715
    9. '
' → logprob: -11.709601402282715
    10. '    ' → logprob: -11.709601402282715

Token 107: '_cost' (ID: 36820)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.12694889307022095
    2. '_cost' → logprob: -2.126948833465576
    3. '_code' → logprob: -12.251949310302734
    4. '_' → logprob: -12.376949310302734
    5. '_times' → logprob: -12.626949310302734
    6. ')_' → logprob: -12.876949310302734
    7. '_tim' → logprob: -14.126949310302734
    8. '```' → logprob: -14.376949310302734
    9. 'time' → logprob: -14.501949310302734
    10. 'cost' → logprob: -14.751949310302734

Token 108: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -9.253090865968261e-06
    2. '[a' → logprob: -12.375009536743164
    3. 'b' → logprob: -12.875009536743164
    4. '[' → logprob: -13.375009536743164
    5. ')[' → logprob: -15.375009536743164
    6. ' [' → logprob: -15.625009536743164
    7. '```' → logprob: -16.250009536743164
    8. '][' → logprob: -16.375009536743164
    9. '[B' → logprob: -17.125009536743164
    10. '}[' → logprob: -17.750009536743164

Token 109: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.13090798258781433
    2. '].' → logprob: -2.1309080123901367
    3. '.' → logprob: -5.755908012390137
    4. ')' → logprob: -7.630908012390137
    5. '[' → logprob: -9.255908012390137
    6. '   ' → logprob: -9.255908012390137
    7. ']' → logprob: -10.630908012390137
    8. '}.' → logprob: -10.755908012390137
    9. '.append' → logprob: -10.755908012390137
    10. ' ' → logprob: -11.255908012390137

Token 110: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.961759259458631e-06
    2. 'app' → logprob: -12.750004768371582
    3. ' append' → logprob: -14.000004768371582
    4. 'appen' → logprob: -14.250004768371582
    5. '.append' → logprob: -14.875004768371582
    6. '	append' → logprob: -16.2500057220459
    7. 'prepend' → logprob: -18.0000057220459
    8. '_append' → logprob: -18.3750057220459
    9. 'a' → logprob: -18.7500057220459
    10. 'Append' → logprob: -18.7500057220459

Token 111: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -7.123899558791891e-05
    2. ' ((' → logprob: -9.75007152557373
    3. ' (' → logprob: -11.50007152557373
    4. '(' → logprob: -13.12507152557373
    5. ' ' → logprob: -15.37507152557373
    6. '(b' → logprob: -15.75007152557373
    7. '(
' → logprob: -15.75007152557373
    8. '(a' → logprob: -16.125070571899414
    9. '<|end|>' → logprob: -16.625070571899414
    10. ')((' → logprob: -18.000070571899414

Token 112: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0015139080351218581
    2. ' a' → logprob: -6.501513957977295
    3. '(a' → logprob: -11.501513481140137
    4. ',a' → logprob: -14.376513481140137
    5. ' (' → logprob: -14.876513481140137
    6. ',' → logprob: -16.001514434814453
    7. '	a' → logprob: -16.501514434814453
    8. ' ' → logprob: -16.626514434814453
    9. '(' → logprob: -16.751514434814453
    10. ')a' → logprob: -17.251514434814453

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3425219549390022e-05
    2. ' ,' → logprob: -11.50001335144043
    3. ',c' → logprob: -12.75001335144043
    4. ',
' → logprob: -16.00001335144043
    5. '),' → logprob: -16.62501335144043
    6. ')' → logprob: -17.00001335144043
    7. '‌,' → logprob: -17.12501335144043
    8. ',

' → logprob: -17.37501335144043
    9. '`,' → logprob: -18.00001335144043
    10. ' ' → logprob: -18.12501335144043

Token 114: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.2519310414791107
    2. 'cost' → logprob: -1.501931071281433
    3. '(cost' → logprob: -13.751931190490723
    4. ' ' → logprob: -14.751931190490723
    5. '_cost' → logprob: -16.501930236816406
    6. 'Cost' → logprob: -16.626930236816406
    7. ',' → logprob: -17.001930236816406
    8. 'cos' → logprob: -17.251930236816406
    9. ' kost' → logprob: -17.251930236816406
    10. 'c' → logprob: -17.376930236816406

Token 115: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016424819827079773
    2. ')
' → logprob: -4.141424655914307
    3. '))' → logprob: -8.141425132751465
    4. '       ' → logprob: -9.516425132751465
    5. '))
' → logprob: -11.266425132751465
    6. ' )' → logprob: -12.266425132751465
    7. '   ' → logprob: -12.391425132751465
    8. ')

' → logprob: -13.391425132751465
    9. ')
' → logprob: -14.516425132751465
    10. '<|end|>' → logprob: -14.766425132751465

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.91732100979425e-05
    2. 'graph' → logprob: -11.000039100646973
    3. '   ' → logprob: -11.875039100646973
    4. ' graph' → logprob: -12.125039100646973
    5. '	graph' → logprob: -12.875039100646973
    6. '```' → logprob: -12.875039100646973
    7. ',' → logprob: -13.500039100646973
    8. '        
' → logprob: -14.375039100646973
    9. '	' → logprob: -14.500039100646973
    10. '(graph' → logprob: -14.625039100646973

Token 117: ' graph' (ID: 7465)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20293894410133362
    2. 'graph' (adapté à ' graph') → logprob: -2.327939033508301
    3. ' graph' → logprob: -2.452939033508301
    4. '	graph' → logprob: -9.3279390335083
    5. '   ' → logprob: -10.8279390335083
    6. '```' → logprob: -12.2029390335083
    7. ' ' → logprob: -12.3279390335083
    8. '(graph' → logprob: -12.7029390335083
    9. '      ' → logprob: -12.9529390335083
    10. 'Graph' → logprob: -13.0779390335083

Token 118: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.165027217415627e-05
    2. '_cost' → logprob: -11.250021934509277
    3. '_' → logprob: -12.500021934509277
    4. '_t' → logprob: -13.000021934509277
    5. '_tim' → logprob: -13.750021934509277
    6. ' _' → logprob: -14.000021934509277
    7. '_times' → logprob: -15.000021934509277
    8. '_code' → logprob: -15.250021934509277
    9. '_user' → logprob: -17.00002098083496
    10. ')_' → logprob: -17.37502098083496

Token 119: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.008619185537099838
    2. '[b' → logprob: -4.75861930847168
    3. '[' → logprob: -12.38361930847168
    4. 'a' → logprob: -15.13361930847168
    5. ' [' → logprob: -16.38361930847168
    6. '[s' → logprob: -18.38361930847168
    7. '[A' → logprob: -18.38361930847168
    8. '[c' → logprob: -18.63361930847168
    9. 'b' → logprob: -18.75861930847168
    10. ' ' → logprob: -18.88361930847168

Token 120: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.4072929620742798
    2. ').' → logprob: -1.1572929620742798
    3. '.append' → logprob: -4.28229284286499
    4. '.' → logprob: -5.15729284286499
    5. ' .' → logprob: -8.657293319702148
    6. '[' → logprob: -8.657293319702148
    7. '[b' → logprob: -9.532293319702148
    8. '   ' → logprob: -10.032293319702148
    9. ')' → logprob: -10.032293319702148
    10. ']' → logprob: -10.532293319702148

Token 121: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.935296834039036e-06
    2. ' append' → logprob: -13.12500286102295
    3. 'appen' → logprob: -14.50000286102295
    4. '.append' → logprob: -15.12500286102295
    5. '	append' → logprob: -16.750003814697266
    6. 'a' → logprob: -18.750003814697266
    7. 'prepend' → logprob: -18.875003814697266
    8. 'appe' → logprob: -19.250003814697266
    9. 'app' → logprob: -19.625003814697266
    10. 'add' → logprob: -19.875003814697266

Token 122: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.02326178550720215
    2. '(b' → logprob: -3.773261785507202
    3. ' (' → logprob: -11.523262023925781
    4. '(' → logprob: -12.273262023925781
    5. ' ((' → logprob: -14.648262023925781
    6. '(a' → logprob: -15.023262023925781
    7. '[(' → logprob: -15.023262023925781
    8. '([' → logprob: -15.648262023925781
    9. '<|end|>' → logprob: -16.27326202392578
    10. '```' → logprob: -16.89826202392578

Token 123: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.008617766201496124
    2. '(b' → logprob: -4.758617877960205
    3. ' b' → logprob: -13.258617401123047
    4. ')b' → logprob: -13.758617401123047
    5. ' (' → logprob: -15.258617401123047
    6. '	b' → logprob: -16.133617401123047
    7. ')' → logprob: -16.758617401123047
    8. ',b' → logprob: -17.508617401123047
    9. '
' → logprob: -17.758617401123047
    10. '```' → logprob: -17.883617401123047

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.60414821645827e-06
    2. ' ,' → logprob: -12.875004768371582
    3. ',time' → logprob: -13.375004768371582
    4. ',
' → logprob: -15.125004768371582
    5. ',

' → logprob: -16.500003814697266
    6. 'time' → logprob: -17.000003814697266
    7. ')' → logprob: -17.875003814697266
    8. '),' → logprob: -18.125003814697266
    9. '‌,' → logprob: -18.250003814697266
    10. ',t' → logprob: -19.625003814697266

Token 125: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.38691169023513794
    2. 'time' → logprob: -1.1369116306304932
    3. ' ' → logprob: -11.511911392211914
    4. ' t' → logprob: -11.511911392211914
    5. ' ' → logprob: -12.011911392211914
    6. ' cost' → logprob: -12.386911392211914
    7. 't' → logprob: -13.136911392211914
    8. ' 
' → logprob: -13.636911392211914
    9. ' ti' → logprob: -13.636911392211914
    10. 'ti' → logprob: -13.886911392211914

Token 126: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04822835326194763
    2. '))' → logprob: -3.5482282638549805
    3. ')
' → logprob: -4.2982282638549805
    4. '))
' → logprob: -5.7982282638549805
    5. ',' → logprob: -6.7982282638549805
    6. '       ' → logprob: -7.7982282638549805
    7. ' )' → logprob: -9.67322826385498
    8. '),' → logprob: -10.54822826385498
    9. ',
' → logprob: -11.29822826385498
    10. '<|end|>' → logprob: -11.54822826385498

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.110668618930504e-05
    2. '<|end|>' → logprob: -10.25006103515625
    3. '   ' → logprob: -11.00006103515625
    4. '      ' → logprob: -12.87506103515625
    5. '	' → logprob: -13.50006103515625
    6. '     ' → logprob: -14.12506103515625
    7. ')' → logprob: -14.25006103515625
    8. ' ' → logprob: -14.50006103515625
    9. '[' → logprob: -14.50006103515625
    10. ' ' → logprob: -14.62506103515625

Token 128: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.0040831477381289005
    2. ' graph' → logprob: -5.504083156585693
    3. '       ' → logprob: -12.879082679748535
    4. '	graph' → logprob: -13.754082679748535
    5. '(graph' → logprob: -14.254082679748535
    6. '   ' → logprob: -16.00408363342285
    7. 'time' → logprob: -16.50408363342285
    8. 'graphql' → logprob: -16.50408363342285
    9. '.graph' → logprob: -17.12908363342285
    10. '```' → logprob: -17.50408363342285

Token 129: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.771655115589965e-05
    2. '_' → logprob: -11.500018119812012
    3. '_cost' → logprob: -11.875018119812012
    4. '_times' → logprob: -15.875018119812012
    5. '_code' → logprob: -16.000017166137695
    6. 'time' → logprob: -16.125017166137695
    7. ')_' → logprob: -17.250017166137695
    8. ' _' → logprob: -17.500017166137695
    9. '_TIME' → logprob: -17.750017166137695
    10. 'Time' → logprob: -17.875017166137695

Token 130: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -4.000763510703109e-05
    2. 'b' → logprob: -10.250040054321289
    3. '[a' → logprob: -12.625040054321289
    4. '[' → logprob: -13.750040054321289
    5. '```' → logprob: -16.12504005432129
    6. '[s' → logprob: -18.00004005432129
    7. '[
' → logprob: -18.12504005432129
    8. '	b' → logprob: -18.50004005432129
    9. ')[' → logprob: -18.75004005432129
    10. '   ' → logprob: -18.75004005432129

Token 131: '].' (ID: 1651)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9716368913650513
    2. '].' → logprob: -1.3466368913650513
    3. ').' → logprob: -1.5966368913650513
    4. '.append' → logprob: -1.8466368913650513
    5. ' .' → logprob: -8.346636772155762
    6. '   ' → logprob: -8.471636772155762
    7. '[' → logprob: -8.596636772155762
    8. ')' → logprob: -9.596636772155762
    9. '}.' → logprob: -9.721636772155762
    10. ',' → logprob: -10.096636772155762

Token 132: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.45848218582978e-06
    2. 'appen' → logprob: -13.87500286102295
    3. '.append' → logprob: -14.12500286102295
    4. ' append' → logprob: -14.75000286102295
    5. '	append' → logprob: -15.25000286102295
    6. 'appe' → logprob: -16.250001907348633
    7. 'Append' → logprob: -17.750001907348633
    8. '```' → logprob: -18.750001907348633
    9. '_append' → logprob: -19.000001907348633
    10. 'app' → logprob: -19.125001907348633

Token 133: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -8.895480277715251e-06
    2. ' ((' → logprob: -11.750008583068848
    3. ' (' → logprob: -14.375008583068848
    4. '(' → logprob: -15.625008583068848
    5. '(b' → logprob: -15.875008583068848
    6. '(
' → logprob: -16.750009536743164
    7. ' ' → logprob: -17.375009536743164
    8. ')((' → logprob: -17.375009536743164
    9. '[(' → logprob: -18.125009536743164
    10. '>((' → logprob: -18.250009536743164

Token 134: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03918040916323662
    2. 'time' → logprob: -3.2891805171966553
    3. '(time' → logprob: -7.789180278778076
    4. ' time' → logprob: -8.164180755615234
    5. ' a' → logprob: -8.289180755615234
    6. '(a' → logprob: -8.789180755615234
    7. ')' → logprob: -11.289180755615234
    8. ' (' → logprob: -11.539180755615234
    9. ')a' → logprob: -12.164180755615234
    10. '(' → logprob: -12.664180755615234

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8312570318812504e-05
    2. ' ,' → logprob: -11.125018119812012
    3. ',time' → logprob: -13.375018119812012
    4. '),' → logprob: -13.750018119812012
    5. 'time' → logprob: -14.625018119812012
    6. ')' → logprob: -15.500018119812012
    7. ',
' → logprob: -15.625018119812012
    8. '`,' → logprob: -17.375019073486328
    9. '‌,' → logprob: -17.750019073486328
    10. '(time' → logprob: -17.875019073486328

Token 136: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.5759447813034058
    2. 'time' → logprob: -0.8259447813034058
    3. 't' → logprob: -13.200944900512695
    4. '	time' → logprob: -13.950944900512695
    5. '(time' → logprob: -14.950944900512695
    6. ')' → logprob: -14.950944900512695
    7. ' ' → logprob: -15.075944900512695
    8. ' ' → logprob: -15.075944900512695
    9. '"time' → logprob: -15.075944900512695
    10. ' t' → logprob: -15.450944900512695

Token 137: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014225799590349197
    2. '))' → logprob: -4.264225959777832
    3. ')
' → logprob: -9.764225959777832
    4. ' )' → logprob: -13.014225959777832
    5. ')))' → logprob: -13.889225959777832
    6. '))
' → logprob: -14.014225959777832
    7. ')}' → logprob: -15.264225959777832
    8. '       ' → logprob: -15.389225959777832
    9. '   ' → logprob: -15.764225959777832
    10. ')

' → logprob: -15.764225959777832

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5545911192893982
    2. '
' → logprob: -1.679591178894043
    3. 'distance' → logprob: -1.804591178894043
    4. 'dist' → logprob: -3.929591178894043
    5. '    
' → logprob: -4.179591178894043
    6. 'heap' → logprob: -4.554591178894043
    7. ' dist' → logprob: -4.929591178894043
    8. ' distance' → logprob: -5.429591178894043
    9. 'dp' → logprob: -6.304591178894043
    10. 'def' → logprob: -6.304591178894043

Token 139: ' k' (ID: 372)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.08856673538684845
    2. 'def' → logprob: -3.838566780090332
    3. 'distance' → logprob: -3.963566780090332
    4. 'dp' → logprob: -4.213566780090332
    5. 'start' → logprob: -4.338566780090332
    6. 'max' → logprob: -4.588566780090332
    7. 'import' → logprob: -6.588566780090332
    8. 'visited' → logprob: -6.713566780090332
    9. 'queue' → logprob: -6.963566780090332
    10. 'pq' → logprob: -7.213566780090332

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09182848781347275
    2. '=' → logprob: -2.9668285846710205
    3. ',' → logprob: -3.3418285846710205
    4. 'eep' → logprob: -8.716828346252441
    5. '```' → logprob: -9.216828346252441
    6. '  ' → logprob: -9.466828346252441
    7. '=int' → logprob: -9.591828346252441
    8. 'e' → logprob: -9.716828346252441
    9. '   ' → logprob: -9.716828346252441
    10. ' ' → logprob: -10.216828346252441

Token 141: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5793216824531555
    2. 'int' → logprob: -0.8293216824531555
    3. ' m' → logprob: -6.20432186126709
    4. 'm' → logprob: -7.70432186126709
    5. '[int' → logprob: -8.70432186126709
    6. '0' → logprob: -8.82932186126709
    7. '1' → logprob: -9.07932186126709
    8. '100' → logprob: -9.07932186126709
    9. ' ' → logprob: -9.32932186126709
    10. '10' → logprob: -10.20432186126709

Token 142: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0017225458286702633
    2. '(' → logprob: -6.37672233581543
    3. 'input' → logprob: -11.12672233581543
    4. ' (' → logprob: -12.50172233581543
    5. ' input' → logprob: -13.75172233581543
    6. '=input' → logprob: -15.25172233581543
    7. '()' → logprob: -15.50172233581543
    8. '(
' → logprob: -15.87672233581543
    9. ',input' → logprob: -16.37672233581543
    10. '(in' → logprob: -16.62672233581543

Token 143: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2105918824672699
    2. '()' → logprob: -1.7105919122695923
    3. ')' → logprob: -4.710591793060303
    4. '().' → logprob: -9.335592269897461
    5. ' ())' → logprob: -10.960592269897461
    6. '()
' → logprob: -11.460592269897461
    7. '())
' → logprob: -11.585592269897461
    8. '(' → logprob: -11.710592269897461
    9. '();)' → logprob: -13.960592269897461
    10. ' )' → logprob: -14.460592269897461

Token 144: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6157141923904419
    2. 'dp' → logprob: -1.615714192390442
    3. 'dist' → logprob: -1.865714192390442
    4. 'distance' → logprob: -2.8657140731811523
    5. '    
' → logprob: -3.9907140731811523
    6. '   ' → logprob: -4.865714073181152
    7. 'visited' → logprob: -5.615714073181152
    8. 'cost' → logprob: -5.990714073181152
    9. 'time' → logprob: -6.115714073181152
    10. 'heap' → logprob: -6.240714073181152

Token 145: ' queries' (ID: 32122)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6294960975646973
    2. 'dp' → logprob: -0.8794960975646973
    3. 'distance' → logprob: -3.6294960975646973
    4. '
' → logprob: -5.129496097564697
    5. 'pq' → logprob: -5.754496097564697
    6. 'visited' → logprob: -5.879496097564697
    7. 'start' → logprob: -6.004496097564697
    8. ' dist' → logprob: -6.254496097564697
    9. '   ' → logprob: -6.754496097564697
    10. 'cost' → logprob: -7.129496097564697

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25423288345336914
    2. '=' → logprob: -1.5042328834533691
    3. '_' → logprob: -7.629232883453369
    4. ' ' → logprob: -7.754232883453369
    5. '.' → logprob: -7.879232883453369
    6. '[' → logprob: -7.879232883453369
    7. '=[]' → logprob: -9.129232406616211
    8. ')' → logprob: -9.254232406616211
    9. '.append' → logprob: -9.254232406616211
    10. '   ' → logprob: -9.504232406616211

Token 147: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18234330415725708
    2. '[]' → logprob: -1.9323432445526123
    3. '[input' → logprob: -4.182343482971191
    4. '[int' → logprob: -6.057343482971191
    5. ' [' → logprob: -6.182343482971191
    6. ' []' → logprob: -7.557343482971191
    7. '[list' → logprob: -7.557343482971191
    8. '[k' → logprob: -7.557343482971191
    9. '[array' → logprob: -9.682343482971191
    10. '[line' → logprob: -9.682343482971191

Token 148: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0038874808233231306
    2. ' tuple' → logprob: -5.87888765335083
    3. 'list' → logprob: -7.12888765335083
    4. 'int' → logprob: -8.378887176513672
    5. 'input' → logprob: -10.378887176513672
    6. '(tuple' → logprob: -11.253887176513672
    7. 'map' → logprob: -12.253887176513672
    8. '   ' → logprob: -14.128887176513672
    9. ' list' → logprob: -14.378887176513672
    10. '
' → logprob: -15.753887176513672

Token 149: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00035453110467642546
    2. 'map' → logprob: -8.000354766845703
    3. '(input' → logprob: -11.750354766845703
    4. '(' → logprob: -11.750354766845703
    5. '(int' → logprob: -12.875354766845703
    6. ' map' → logprob: -15.250354766845703
    7. '(
' → logprob: -16.125354766845703
    8. '()' → logprob: -16.125354766845703
    9. 'input' → logprob: -16.500354766845703
    10. '	map' → logprob: -17.375354766845703

Token 150: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001070323633030057
    2. 'int' → logprob: -7.001070499420166
    3. ',int' → logprob: -9.126070022583008
    4. '(' → logprob: -11.126070022583008
    5. '<int' → logprob: -11.376070022583008
    6. '[int' → logprob: -11.751070022583008
    7. ']int' → logprob: -12.126070022583008
    8. '=int' → logprob: -12.126070022583008
    9. 'list' → logprob: -13.251070022583008
    10. ')' → logprob: -14.001070022583008

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5952410101890564
    2. ',input' → logprob: -0.8452410101890564
    3. '(input' → logprob: -3.970241069793701
    4. 'input' → logprob: -8.970240592956543
    5. ' ,' → logprob: -9.845240592956543
    6. '(' → logprob: -10.345240592956543
    7. ',int' → logprob: -10.970240592956543
    8. '(),' → logprob: -12.095240592956543
    9. '```' → logprob: -12.970240592956543
    10. '(int' → logprob: -13.345240592956543

Token 152: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029751179739832878
    2. ' input' → logprob: -3.5297510623931885
    3. '(input' → logprob: -15.15475082397461
    4. ',input' → logprob: -15.77975082397461
    5. 'int' → logprob: -16.65475082397461
    6. ' ' → logprob: -17.02975082397461
    7. '=input' → logprob: -17.40475082397461
    8. '	input' → logprob: -17.52975082397461
    9. '[input' → logprob: -17.52975082397461
    10. '   ' → logprob: -17.77975082397461

Token 153: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.981667537620524e-06
    2. '()' → logprob: -13.750001907348633
    3. ' ().' → logprob: -14.250001907348633
    4. '.' → logprob: -15.875001907348633
    5. '.readline' → logprob: -17.125001907348633
    6. '.split' → logprob: -18.375001907348633
    7. '()
' → logprob: -18.500001907348633
    8. '   ' → logprob: -18.750001907348633
    9. '(' → logprob: -18.750001907348633
    10. '().__' → logprob: -19.000001907348633

Token 154: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1472419600977446e-06
    2. 'strip' → logprob: -14.000000953674316
    3. ' split' → logprob: -16.500001907348633
    4. 'rstrip' → logprob: -17.125001907348633
    5. '(split' → logprob: -17.250001907348633
    6. 'spl' → logprob: -18.375001907348633
    7. '.split' → logprob: -20.500001907348633
    8. 's' → logprob: -20.875001907348633
    9. 'plit' → logprob: -22.250001907348633
    10. 'str' → logprob: -22.375001907348633

Token 155: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.3519575595855713
    2. '))' → logprob: -1.2269575595855713
    3. '()' → logprob: -5.851957321166992
    4. '()))
' → logprob: -7.976957321166992
    5. '(' → logprob: -9.101957321166992
    6. '())' → logprob: -9.851957321166992
    7. '().' → logprob: -10.476957321166992
    8. '))
' → logprob: -10.976957321166992
    9. ' ))' → logprob: -11.226957321166992
    10. '   ' → logprob: -11.476957321166992

Token 156: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8011835217475891
    2. 'for' → logprob: -1.1761834621429443
    3. ')' → logprob: -1.6761834621429443
    4. '()' → logprob: -2.9261834621429443
    5. '   ' → logprob: -6.801183700561523
    6. ']' → logprob: -8.051183700561523
    7. ')]' → logprob: -8.051183700561523
    8. '(' → logprob: -8.676183700561523
    9. '	for' → logprob: -9.426183700561523
    10. ' ' → logprob: -10.801183700561523

Token 157: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0003023345780093223
    2. '_range' → logprob: -8.3753023147583
    3. ' _' → logprob: -9.7503023147583
    4. ' range' → logprob: -11.6253023147583
    5. 'range' → logprob: -13.5003023147583
    6. '_i' → logprob: -13.7503023147583
    7. '_in' → logprob: -14.5003023147583
    8. '_k' → logprob: -14.7503023147583
    9. '(' → logprob: -15.5003023147583
    10. '_x' → logprob: -15.5003023147583

Token 158: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012354361824691296
    2. 'in' → logprob: -4.512354373931885
    3. ' range' → logprob: -7.012354373931885
    4. '(range' → logprob: -8.012353897094727
    5. ' in' → logprob: -9.887353897094727
    6. '	range' → logprob: -12.012353897094727
    7. '_range' → logprob: -12.262353897094727
    8. 'i' → logprob: -13.012353897094727
    9. '   ' → logprob: -13.012353897094727
    10. 'ran' → logprob: -13.262353897094727

Token 159: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019301822176203132
    2. ' range' → logprob: -6.251930236816406
    3. '(range' → logprob: -13.501930236816406
    4. 'rang' → logprob: -17.001930236816406
    5. 'r' → logprob: -17.376930236816406
    6. '	range' → logprob: -17.751930236816406
    7. ' ' → logprob: -18.001930236816406
    8. '
' → logprob: -18.251930236816406
    9. 'ra' → logprob: -18.876930236816406
    10. 'ran' → logprob: -19.001930236816406

Token 160: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -5.919942486798391e-05
    2. '(' → logprob: -9.875059127807617
    3. '(range' → logprob: -12.000059127807617
    4. '(n' → logprob: -14.500059127807617
    5. '(K' → logprob: -14.625059127807617
    6. '(q' → logprob: -15.000059127807617
    7. ' (' → logprob: -16.250059127807617
    8. 'range' → logprob: -16.625059127807617
    9. '(m' → logprob: -17.500059127807617
    10. '(x' → logprob: -17.625059127807617

Token 161: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.008876555599272251
    2. ')' → logprob: -4.758876323699951
    3. ']' → logprob: -8.25887680053711
    4. ' )' → logprob: -14.00887680053711
    5. '))' → logprob: -14.13387680053711
    6. ')]
' → logprob: -14.63387680053711
    7. ')
' → logprob: -15.38387680053711
    8. ')],' → logprob: -15.63387680053711
    9. ')])' → logprob: -15.75887680053711
    10. '),' → logprob: -15.88387680053711

Token 162: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08124414831399918
    2. '
' → logprob: -2.5812442302703857
    3. 'for' → logprob: -6.331243991851807
    4. '   ' → logprob: -8.581244468688965
    5. '

' → logprob: -8.956244468688965
    6. '    
' → logprob: -9.581244468688965
    7. 'import' → logprob: -10.206244468688965
    8. ' for' → logprob: -10.331244468688965
    9. '<|end|>' → logprob: -10.706244468688965
    10. ' def' → logprob: -10.831244468688965

Token 163: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10889141261577606
    2. 'for' → logprob: -2.358891487121582
    3. 'results' → logprob: -5.483891487121582
    4. 'dist' → logprob: -5.858891487121582
    5. '
' → logprob: -7.983891487121582
    6. 'distance' → logprob: -8.358891487121582
    7. 'INF' → logprob: -8.483891487121582
    8. '#' → logprob: -8.483891487121582
    9. 'answers' → logprob: -8.483891487121582
    10. 'dp' → logprob: -9.108891487121582

Token 164: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0116681307554245
    2. 'd' → logprob: -4.6366682052612305
    3. ' def' → logprob: -7.5116682052612305
    4. ' find' → logprob: -8.01166820526123
    5. ' shortest' → logprob: -8.26166820526123
    6. ' bfs' → logprob: -8.38666820526123
    7. ' dfs' → logprob: -8.63666820526123
    8. ' solve' → logprob: -9.13666820526123
    9. 'def' → logprob: -9.38666820526123
    10. ' calc' → logprob: -11.01166820526123

Token 165: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.41359972953796387
    2. 'ijk' → logprob: -1.7885997295379639
    3. 'ij' → logprob: -2.288599729537964
    4. 'i' → logprob: -2.663599729537964
    5. 'e' → logprob: -9.163599967956543
    6. '
' → logprob: -9.663599967956543
    7. 'ijkl' → logprob: -9.663599967956543
    8. 'ijks' → logprob: -9.913599967956543
    9. 'ijek' → logprob: -10.038599967956543
    10. 'ijs' → logprob: -10.663599967956543

Token 166: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.7507647275924683
    2. '(start' → logprob: -1.0007647275924683
    3. '(' → logprob: -2.375764846801758
    4. '(source' → logprob: -3.000764846801758
    5. '(node' → logprob: -4.250764846801758
    6. ' (' → logprob: -6.500764846801758
    7. '(src' → logprob: -7.875764846801758
    8. '(s' → logprob: -8.250764846801758
    9. '(u' → logprob: -8.250764846801758
    10. '(distance' → logprob: -8.500764846801758

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011892046313732862
    2. ' ,' → logprob: -9.25011920928955
    3. ',start' → logprob: -11.00011920928955
    4. ',node' → logprob: -12.50011920928955
    5. '_,' → logprob: -14.87511920928955
    6. '(graph' → logprob: -15.00011920928955
    7. '_graph' → logprob: -15.50011920928955
    8. '_start' → logprob: -15.50011920928955
    9. ',u' → logprob: -15.50011920928955
    10. ',s' → logprob: -15.62511920928955

Token 168: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.25226670503616333
    2. ' start' → logprob: -1.5022666454315186
    3. 'src' → logprob: -9.002266883850098
    4. 's' → logprob: -9.377266883850098
    5. 'source' → logprob: -9.752266883850098
    6. ' source' → logprob: -10.502266883850098
    7. 'n' → logprob: -11.502266883850098
    8. ' src' → logprob: -12.252266883850098
    9. '	start' → logprob: -12.252266883850098
    10. '   ' → logprob: -12.627266883850098

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1637164789135568e-05
    2. ' ,' → logprob: -11.750011444091797
    3. ',start' → logprob: -13.125011444091797
    4. '):' → logprob: -13.375011444091797
    5. ',int' → logprob: -17.500011444091797
    6. ',
' → logprob: -18.125011444091797
    7. ',node' → logprob: -18.250011444091797
    8. ',n' → logprob: -18.250011444091797
    9. ',end' → logprob: -18.375011444091797
    10. '   ' → logprob: -19.000011444091797

Token 170: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.4763976037502289
    2. ' end' → logprob: -0.9763976335525513
    3. 'goal' → logprob: -6.726397514343262
    4. ' goal' → logprob: -7.351397514343262
    5. 'dist' → logprob: -9.601397514343262
    6. ' target' → logprob: -9.726397514343262
    7. 'target' → logprob: -9.726397514343262
    8. ')' → logprob: -9.976397514343262
    9. 'destination' → logprob: -9.976397514343262
    10. '   ' → logprob: -10.351397514343262

Token 171: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001152005628682673
    2. ',' → logprob: -7.126152038574219
    3. '):
' → logprob: -8.251152038574219
    4. ')' → logprob: -9.501152038574219
    5. ' ):' → logprob: -11.501152038574219
    6. ':' → logprob: -14.126152038574219
    7. '):
' → logprob: -15.001152038574219
    8. '   ' → logprob: -15.126152038574219
    9. '=' → logprob: -16.62615203857422
    10. '):

' → logprob: -16.87615203857422

Token 172: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6334359645843506
    2. '       ' → logprob: -1.0084359645843506
    3. ':' → logprob: -2.3834359645843506
    4. ',' → logprob: -5.75843620300293
    5. '):' → logprob: -5.75843620300293
    6. '<|end|>' → logprob: -6.38343620300293
    7. '    ' → logprob: -6.63343620300293
    8. ')' → logprob: -7.13343620300293
    9. ' :' → logprob: -8.25843620300293
    10. ' ' → logprob: -8.38343620300293

Token 173: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.43402382731437683
    2. ' dist' → logprob: -1.6840238571166992
    3. 'import' → logprob: -2.559023857116699
    4. 'distance' → logprob: -4.184023857116699
    5. ' INF' → logprob: -4.184023857116699
    6. 'INF' → logprob: -4.309023857116699
    7. ' heap' → logprob: -4.559023857116699
    8. ' import' → logprob: -4.809023857116699
    9. '   ' → logprob: -4.809023857116699
    10. 'heap' → logprob: -5.059023857116699

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021235836669802666
    2. '=' → logprob: -3.896235942840576
    3. ',' → logprob: -8.021235466003418
    4. '[' → logprob: -8.271235466003418
    5. '   ' → logprob: -10.396235466003418
    6. ' ' → logprob: -10.646235466003418
    7. '[]' → logprob: -10.771235466003418
    8. ')' → logprob: -11.021235466003418
    9. '=[]' → logprob: -12.646235466003418
    10. '  ' → logprob: -12.896235466003418

Token 175: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00924856960773468
    2. ' [' → logprob: -4.759248733520508
    3. '[int' → logprob: -8.009248733520508
    4. '{' → logprob: -8.259248733520508
    5. '[node' → logprob: -11.884248733520508
    6. '[n' → logprob: -12.134248733520508
    7. '[m' → logprob: -12.384248733520508
    8. '[-' → logprob: -12.509248733520508
    9. '[len' → logprob: -12.634248733520508
    10. '[in' → logprob: -12.634248733520508

Token 176: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0001114106344175525
    2. 'int' → logprob: -10.37511157989502
    3. 'sys' → logprob: -10.37511157989502
    4. '10' → logprob: -10.50011157989502
    5. ' float' → logprob: -11.37511157989502
    6. '(float' → logprob: -11.75011157989502
    7. '1' → logprob: -14.25011157989502
    8. '   ' → logprob: -14.37511157989502
    9. '(' → logprob: -15.87511157989502
    10. '	float' → logprob: -16.125110626220703

Token 177: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.735893965815194e-05
    2. '(' → logprob: -11.750017166137695
    3. ''in' → logprob: -12.000017166137695
    4. ''' → logprob: -13.500017166137695
    5. '("' → logprob: -13.625017166137695
    6. '('-' → logprob: -15.625017166137695
    7. ''s' → logprob: -16.000017166137695
    8. ']' → logprob: -16.500017166137695
    9. '   ' → logprob: -16.625017166137695
    10. 'inf' → logprob: -17.250017166137695

Token 178: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.9361264946837764e-07
    2. 'in' → logprob: -16.625
    3. ''' → logprob: -18.375
    4. ' inf' → logprob: -19.0
    5. '')' → logprob: -19.75
    6. 'INF' → logprob: -20.125
    7. 'Inf' → logprob: -20.5
    8. '_inf' → logprob: -20.875
    9. '1' → logprob: -21.0
    10. 'info' → logprob: -21.125

Token 179: '')]' (ID: 94377)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.20493344962596893
    2. '')]' → logprob: -1.7049334049224854
    3. ')' → logprob: -6.2049336433410645
    4. ']' → logprob: -6.7049336433410645
    5. '')' → logprob: -9.204933166503906
    6. '']' → logprob: -9.579933166503906
    7. ' )' → logprob: -10.204933166503906
    8. '),' → logprob: -11.204933166503906
    9. '")]' → logprob: -11.454933166503906
    10. ' '' → logprob: -11.704933166503906

Token 180: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.595180332660675
    2. ']' → logprob: -0.845180332660675
    3. 'for' → logprob: -4.470180511474609
    4. ',' → logprob: -5.970180511474609
    5. ' ]' → logprob: -5.970180511474609
    6. ']*' → logprob: -6.970180511474609
    7. '   ' → logprob: -7.345180511474609
    8. '	for' → logprob: -8.34518051147461
    9. ')' → logprob: -8.59518051147461
    10. '[' → logprob: -9.34518051147461

Token 181: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.008182140998542309
    2. '(len' → logprob: -5.008182048797607
    3. ' (' → logprob: -7.508182048797607
    4. '   ' → logprob: -7.508182048797607
    5. '(M' → logprob: -8.008182525634766
    6. '(' → logprob: -11.133182525634766
    7. 'len' → logprob: -12.758182525634766
    8. '((' → logprob: -12.883182525634766
    9. '  ' → logprob: -12.883182525634766
    10. '(max' → logprob: -13.008182525634766

Token 182: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.05767630785703659
    2. '(m' → logprob: -3.057676315307617
    3. 'len' → logprob: -4.932676315307617
    4. ' m' → logprob: -7.557676315307617
    5. '(len' → logprob: -7.682676315307617
    6. '   ' → logprob: -7.807676315307617
    7. ' (' → logprob: -7.807676315307617
    8. ' len' → logprob: -10.807676315307617
    9. '	m' → logprob: -12.432676315307617
    10. '    ' → logprob: -12.932676315307617

Token 183: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1602603793144226
    2. ' +' → logprob: -1.9102604389190674
    3. '+
' → logprob: -10.785260200500488
    4. ' +
' → logprob: -11.410260200500488
    5. ')' → logprob: -13.410260200500488
    6. ' ' → logprob: -14.035260200500488
    7. '   ' → logprob: -14.660260200500488
    8. '<|end|>' → logprob: -15.035260200500488
    9. '```' → logprob: -15.660260200500488
    10. '＋' → logprob: -15.660260200500488

Token 184: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002659847668837756
    2. ' ' → logprob: -8.250266075134277
    3. '   ' → logprob: -12.875266075134277
    4. '```' → logprob: -14.000266075134277
    5. '
' → logprob: -14.750266075134277
    6. '2' → logprob: -15.125266075134277
    7. ')' → logprob: -15.937766075134277
    8. '    ' → logprob: -16.68776512145996
    9. '7' → logprob: -16.68776512145996
    10. '       ' → logprob: -16.93776512145996

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.73052782076411e-05
    2. ' ' → logprob: -9.625067710876465
    3. '2' → logprob: -14.625067710876465
    4. '   ' → logprob: -15.000067710876465
    5. '
' → logprob: -16.56256675720215
    6. '```' → logprob: -16.68756675720215
    7. ')' → logprob: -16.87506675720215
    8. '

' → logprob: -17.25006675720215
    9. '１' → logprob: -17.31256675720215
    10. '7' → logprob: -17.31256675720215

Token 186: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006735860835760832
    2. ')
' → logprob: -5.006735801696777
    3. ' )' → logprob: -11.881735801696777
    4. '   ' → logprob: -12.006735801696777
    5. '       ' → logprob: -12.631735801696777
    6. ')
' → logprob: -13.506735801696777
    7. '
' → logprob: -13.631735801696777
    8. ' )
' → logprob: -15.131735801696777
    9. '<|end|>' → logprob: -15.506735801696777
    10. '```' → logprob: -15.506735801696777

Token 187: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9887908101081848
    2. '
' → logprob: -1.11379075050354
    3. '<|end|>' → logprob: -1.73879075050354
    4. '       ' → logprob: -2.23879075050354
    5. ' dist' → logprob: -4.863790988922119
    6. '	dist' → logprob: -5.113790988922119
    7. ' 
' → logprob: -7.613790988922119
    8. '_dist' → logprob: -7.988790988922119
    9. '<|end|>' → logprob: -7.988790988922119
    10. '   ' → logprob: -8.113790512084961

Token 188: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.004170171916484833
    2. ' dist' → logprob: -5.504169940948486
    3. '       ' → logprob: -9.879170417785645
    4. '
' → logprob: -11.129170417785645
    5. '   ' → logprob: -11.379170417785645
    6. '	dist' → logprob: -11.629170417785645
    7. 'queue' → logprob: -13.129170417785645
    8. 'pq' → logprob: -13.754170417785645
    9. 'heap' → logprob: -14.129170417785645
    10. '        
' → logprob: -15.254170417785645

Token 189: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.0013411965919658542
    2. '[' → logprob: -6.626341342926025
    3. '[s' → logprob: -11.751340866088867
    4. '[end' → logprob: -13.126340866088867
    5. '[src' → logprob: -13.876340866088867
    6. '```' → logprob: -14.751340866088867
    7. '[int' → logprob: -14.751340866088867
    8. '[input' → logprob: -14.751340866088867
    9. '[current' → logprob: -14.876340866088867
    10. '[source' → logprob: -15.376340866088867

Token 190: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.034820135682821274
    2. ')' → logprob: -3.409820079803467
    3. ' ]' → logprob: -7.284820079803467
    4. ']=' → logprob: -8.159820556640625
    5. '=' → logprob: -9.409820556640625
    6. ')]' → logprob: -10.159820556640625
    7. ' )' → logprob: -10.409820556640625
    8. '[' → logprob: -10.909820556640625
    9. '])' → logprob: -11.284820556640625
    10. ')=' → logprob: -11.409820556640625

Token 191: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326544284820557
    2. ' =' → logprob: -1.3132654428482056
    3. '[' → logprob: -13.563265800476074
    4. ')' → logprob: -14.063265800476074
    5. ']' → logprob: -14.438265800476074
    6. ' ' → logprob: -15.438265800476074
    7. ')=' → logprob: -15.438265800476074
    8. ' =
' → logprob: -15.563265800476074
    9. ',' → logprob: -15.938265800476074
    10. ']=' → logprob: -16.313264846801758

Token 192: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017982252757064998
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.6251802444458
    4. '  ' → logprob: -17.500179290771484
    5. ' ' → logprob: -17.875179290771484
    6. '    ' → logprob: -18.000179290771484
    7. '۰' → logprob: -18.062679290771484
    8. '00' → logprob: -18.687679290771484
    9. '
' → logprob: -18.937679290771484
    10. '     ' → logprob: -19.187679290771484

Token 193: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '00' → logprob: -18.937503814697266
    4. '۰' → logprob: -19.000003814697266
    5. '   ' → logprob: -19.250003814697266
    6. '０' → logprob: -20.187503814697266
    7. 'zero' → logprob: -20.375003814697266
    8. '000' → logprob: -20.375003814697266
    9. '1' → logprob: -20.812503814697266
    10. '  ' → logprob: -21.375003814697266

Token 194: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11816048622131348
    2. '<|end|>' → logprob: -2.8681604862213135
    3. '   ' → logprob: -3.3681604862213135
    4. '       ' → logprob: -4.743160247802734
    5. '' → logprob: -5.868160247802734
    6. '    
' → logprob: -6.118160247802734
    7. ')' → logprob: -6.118160247802734
    8. '
' → logprob: -6.993160247802734
    9. ',' → logprob: -7.118160247802734
    10. '  
' → logprob: -7.368160247802734

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5731967091560364
    2. '
' → logprob: -1.4481966495513916
    3. '   ' → logprob: -1.6981966495513916
    4. '<|end|>' → logprob: -5.073196887969971
    5. '    
' → logprob: -5.448196887969971
    6. '  
' → logprob: -6.698196887969971
    7. '        
' → logprob: -6.823196887969971
    8. ' heap' → logprob: -6.948196887969971
    9. 'heap' → logprob: -7.448196887969971
    10. '	queue' → logprob: -7.823196887969971

Token 196: ' heap' (ID: 37237)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.6181290149688721
    2. 'heap' (adapté à ' heap') → logprob: -1.118129014968872
    3. 'queue' → logprob: -2.118129014968872
    4. 'hq' → logprob: -4.368128776550293
    5. 'q' → logprob: -7.368128776550293
    6. '   ' → logprob: -7.993128776550293
    7. ' heap' → logprob: -9.368128776550293
    8. 'priority' → logprob: -9.493128776550293
    9. ' pq' → logprob: -9.743128776550293
    10. ' queue' → logprob: -10.618128776550293

Token 197: ' =' (ID: 314)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.204752117395401
    2. ' =' → logprob: -2.204752206802368
    3. '=[]' → logprob: -3.204752206802368
    4. '=' → logprob: -3.454752206802368
    5. ')' → logprob: -7.079751968383789
    6. '<|end|>' → logprob: -7.454751968383789
    7. '=[]
' → logprob: -7.579751968383789
    8. '[' → logprob: -8.579751968383789
    9. '.' → logprob: -9.204751968383789
    10. ' ' → logprob: -9.579751968383789

Token 198: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.00867366511374712
    2. ' [(' → logprob: -4.758673667907715
    3. '[]' → logprob: -9.758673667907715
    4. '[]
' → logprob: -14.008673667907715
    5. '[' → logprob: -14.883673667907715
    6. '[((' → logprob: -16.1336727142334
    7. ' []' → logprob: -16.5086727142334
    8. '([(' → logprob: -17.3836727142334
    9. '[
' → logprob: -18.6336727142334
    10. ' ' → logprob: -18.6336727142334

Token 199: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.750015258789062
    3. 'dist' → logprob: -11.875015258789062
    4. ' dist' → logprob: -15.625015258789062
    5. '   ' → logprob: -16.250015258789062
    6. ')' → logprob: -17.125015258789062
    7. '00' → logprob: -18.187515258789062
    8. '(dist' → logprob: -18.312515258789062
    9. '
' → logprob: -18.625015258789062
    10. '۰' → logprob: -18.812515258789062

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000432695698691532
    2. ',start' → logprob: -7.75043249130249
    3. ' ,' → logprob: -14.250432968139648
    4. ',
' → logprob: -14.875432968139648
    5. 'start' → logprob: -15.875432968139648
    6. ')' → logprob: -16.37543296813965
    7. ',end' → logprob: -16.37543296813965
    8. ',input' → logprob: -16.50043296813965
    9. ',index' → logprob: -16.62543296813965
    10. ',int' → logprob: -16.87543296813965

Token 201: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.011048528365790844
    2. ' start' → logprob: -4.511048316955566
    3. '[start' → logprob: -15.636048316955566
    4. 'star' → logprob: -16.261049270629883
    5. '0' → logprob: -16.511049270629883
    6. ' ' → logprob: -16.636049270629883
    7. ')' → logprob: -17.011049270629883
    8. '(start' → logprob: -17.136049270629883
    9. '=start' → logprob: -17.136049270629883
    10. '	start' → logprob: -17.261049270629883

Token 202: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.004638861399143934
    2. ')' → logprob: -5.379638671875
    3. ']' → logprob: -12.129638671875
    4. ')]
' → logprob: -12.254638671875
    5. ' )' → logprob: -12.754638671875
    6. '),' → logprob: -13.504638671875
    7. '))' → logprob: -13.629638671875
    8. ')
' → logprob: -14.254638671875
    9. '   ' → logprob: -14.254638671875
    10. ',' → logprob: -14.629638671875

Token 203: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0762436389923096
    2. '
' → logprob: -1.2012436389923096
    3. ')' → logprob: -2.2012436389923096
    4. ' while' → logprob: -2.5762436389923096
    5. '<|end|>' → logprob: -2.9512436389923096
    6. ' 
' → logprob: -3.2012436389923096
    7. '    
' → logprob: -3.9512436389923096
    8. '  
' → logprob: -4.2012434005737305
    9. '       ' → logprob: -4.2012434005737305
    10. 'while' → logprob: -5.0762434005737305

Token 204: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.3373795449733734
    2. ' while' → logprob: -1.4623795747756958
    3. '   ' → logprob: -2.9623794555664062
    4. '	while' → logprob: -5.962379455566406
    5. '    
' → logprob: -8.837379455566406
    6. ' 
' → logprob: -9.212379455566406
    7. ')' → logprob: -10.212379455566406
    8. ' ' → logprob: -10.462379455566406
    9. '
' → logprob: -10.587379455566406
    10. '       ' → logprob: -11.087379455566406

Token 205: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.20144520699977875
    2. ' heap' → logprob: -1.70144522190094
    3. '(heap' → logprob: -10.451445579528809
    4. 'len' → logprob: -14.076445579528809
    5. 'he' → logprob: -14.326445579528809
    6. '.heap' → logprob: -14.451445579528809
    7. '
' → logprob: -14.576445579528809
    8. ' ' → logprob: -15.701445579528809
    9. 'h' → logprob: -15.951445579528809
    10. ' len' → logprob: -16.451444625854492

Token 206: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14508843421936035
    2. ':
' → logprob: -2.0200884342193604
    3. '):
' → logprob: -6.395088195800781
    4. '):' → logprob: -7.770088195800781
    5. ',' → logprob: -8.770088195800781
    6. '.pop' → logprob: -10.395088195800781
    7. '[' → logprob: -10.395088195800781
    8. '<|end|>' → logprob: -11.020088195800781
    9. ')' → logprob: -11.520088195800781
    10. ' and' → logprob: -11.770088195800781

Token 207: '           ' (ID: 352)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4068298637866974
    2. '       ' → logprob: -1.156829833984375
    3. '           ' → logprob: -4.406829833984375
    4. ')' → logprob: -5.656829833984375
    5. ' ,' → logprob: -6.156829833984375
    6. '   ' → logprob: -7.531829833984375
    7. ',
' → logprob: -7.906829833984375
    8. '<|end|>' → logprob: -8.531829833984375
    9. '        ' → logprob: -8.781829833984375
    10. ' ' → logprob: -9.281829833984375

Token 208: ' cur' (ID: 4396)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.09808649867773056
    2. ' cost' → logprob: -2.5980865955352783
    3. 'cur' (adapté à ' cur') → logprob: -5.098086357116699
    4. 'curr' → logprob: -5.223086357116699
    5. 'current' → logprob: -6.098086357116699
    6. 'd' → logprob: -6.848086357116699
    7. ' cur' → logprob: -7.223086357116699
    8. 'time' → logprob: -7.348086357116699
    9. 'dist' → logprob: -7.348086357116699
    10. ' curr' → logprob: -7.598086357116699

Token 209: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.3899332880973816
    2. '_cost' → logprob: -1.1399333477020264
    3. '_distance' → logprob: -6.639933109283447
    4. '_' → logprob: -7.264933109283447
    5. '_time' → logprob: -7.514933109283447
    6. 'dist' → logprob: -8.764933586120605
    7. '_d' → logprob: -9.014933586120605
    8. '_val' → logprob: -9.264933586120605
    9. '_c' → logprob: -9.764933586120605
    10. '[' → logprob: -11.139933586120605

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010795372509164736
    2. ' ,' → logprob: -9.250107765197754
    3. '=' → logprob: -12.000107765197754
    4. ',
' → logprob: -12.500107765197754
    5. '[' → logprob: -14.375107765197754
    6. '‌,' → logprob: -15.625107765197754
    7. ')' → logprob: -15.750107765197754
    8. ' =' → logprob: -15.875107765197754
    9. '_,' → logprob: -16.00010871887207
    10. ',)' → logprob: -16.25010871887207

Token 211: ' v' (ID: 323)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.7681542634963989
    2. ' cur' → logprob: -1.518154263496399
    3. ' node' → logprob: -1.768154263496399
    4. 'node' → logprob: -2.0181541442871094
    5. ' u' → logprob: -4.893154144287109
    6. 'u' → logprob: -5.143154144287109
    7. 'curr' → logprob: -10.64315414428711
    8. 'current' → logprob: -10.76815414428711
    9. 'pos' → logprob: -10.89315414428711
    10. 'v' → logprob: -11.14315414428711

Token 212: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5764632225036621
    2. ' =' → logprob: -0.8264632225036621
    3. ')' → logprob: -7.576463222503662
    4. ')=' → logprob: -12.07646369934082
    5. ']' → logprob: -12.70146369934082
    6. ',' → logprob: -13.82646369934082
    7. ' ' → logprob: -15.32646369934082
    8. ' )' → logprob: -15.57646369934082
    9. 'u' → logprob: -15.70146369934082
    10. 'x' → logprob: -15.82646369934082

Token 213: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.5760024189949036
    2. ' heap' → logprob: -0.8260024189949036
    3. 'he' → logprob: -10.32600212097168
    4. ' he' → logprob: -10.95100212097168
    5. ' ' → logprob: -11.95100212097168
    6. '(heap' → logprob: -12.45100212097168
    7. '.heap' → logprob: -13.95100212097168
    8. '
' → logprob: -15.20100212097168
    9. '   ' → logprob: -15.32600212097168
    10. 'h' → logprob: -15.32600212097168

Token 214: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.010052595287561417
    2. '=' → logprob: -5.135052680969238
    3. ',' → logprob: -5.635052680969238
    4. ')' → logprob: -8.385052680969238
    5. '[' → logprob: -8.885052680969238
    6. ' =' → logprob: -9.635052680969238
    7. '.pop' → logprob: -10.135052680969238
    8. '.' → logprob: -10.385052680969238
    9. 'pop' → logprob: -11.635052680969238
    10. ',q' → logprob: -12.135052680969238

Token 215: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00015109812375158072
    2. '.' → logprob: -9.000150680541992
    3. 'q' → logprob: -10.875150680541992
    4. 'he' → logprob: -12.625150680541992
    5. ' he' → logprob: -13.375150680541992
    6. '.heap' → logprob: -13.375150680541992
    7. '.pop' → logprob: -13.625150680541992
    8. '.h' → logprob: -15.375150680541992
    9. '```' → logprob: -15.500150680541992
    10. '.q' → logprob: -15.750150680541992

Token 216: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.0683535037969705e-05
    2. 'pp' → logprob: -11.87501049041748
    3. 'ap' → logprob: -12.62501049041748
    4. 'a' → logprob: -15.12501049041748
    5. '[' → logprob: -17.875011444091797
    6. 'appe' → logprob: -18.000011444091797
    7. '```' → logprob: -18.250011444091797
    8. 'q' → logprob: -18.625011444091797
    9. '
' → logprob: -19.375011444091797
    10. 'appen' → logprob: -19.375011444091797

Token 217: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.042997486889362335
    2. 'app' → logprob: -3.6679975986480713
    3. 'ush' → logprob: -4.542997360229492
    4. 'pp' → logprob: -6.042997360229492
    5. 'ap' → logprob: -6.167997360229492
    6. 'p' → logprob: -6.792997360229492
    7. 'q' → logprob: -9.292997360229492
    8. '[' → logprob: -9.667997360229492
    9. 'ep' → logprob: -9.667997360229492
    10. 'e' → logprob: -10.167997360229492

Token 218: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -2.9040898880339228e-05
    2. '(' → logprob: -10.625028610229492
    3. '(graph' → logprob: -13.125028610229492
    4. '(h' → logprob: -13.750028610229492
    5. 'heap' → logprob: -13.750028610229492
    6. '(
' → logprob: -15.250028610229492
    7. '(queue' → logprob: -15.750028610229492
    8. ' (' → logprob: -17.375028610229492
    9. ')' → logprob: -17.500028610229492
    10. '(hit' → logprob: -18.125028610229492

Token 219: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12694038450717926
    2. ')
' → logprob: -2.1269404888153076
    3. ')
' → logprob: -11.876940727233887
    4. ')

' → logprob: -12.626940727233887
    5. '   ' → logprob: -13.626940727233887
    6. ')`
' → logprob: -15.001940727233887
    7. ' )' → logprob: -15.376940727233887
    8. ' )
' → logprob: -15.626940727233887
    9. ')`' → logprob: -16.00193977355957
    10. '       ' → logprob: -16.75193977355957

Token 220: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06546267122030258
    2. '       ' → logprob: -3.065462589263916
    3. '
' → logprob: -4.815462589263916
    4. '            
' → logprob: -5.815462589263916
    5. '        
' → logprob: -6.440462589263916
    6. ' 
' → logprob: -6.815462589263916
    7. '   ' → logprob: -7.190462589263916
    8. '    
' → logprob: -7.315462589263916
    9. '<|end|>' → logprob: -8.440463066101074
    10. ' if' → logprob: -8.815463066101074

Token 221: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15478044748306274
    2. '           ' → logprob: -2.529780387878418
    3. ' if' → logprob: -3.779780387878418
    4. '        
' → logprob: -4.654780387878418
    5. '   ' → logprob: -4.779780387878418
    6. ' 
' → logprob: -4.904780387878418
    7. 'if' (adapté à ' if') → logprob: -5.279780387878418
    8. '
' → logprob: -5.529780387878418
    9. '        ' → logprob: -6.654780387878418
    10. '    ' → logprob: -6.654780387878418

Token 222: ' dist' (ID: 3601)
  Prédit: ' cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -0.3754752278327942
    2. ' dist' → logprob: -2.1254751682281494
    3. 'cur' → logprob: -2.2504751682281494
    4. 'dist' → logprob: -3.1254751682281494
    5. ' v' → logprob: -3.7504751682281494
    6. 'v' → logprob: -3.8754751682281494
    7. '   ' → logprob: -9.87547492980957
    8. '	cur' → logprob: -10.12547492980957
    9. '	dist' → logprob: -10.75047492980957
    10. ' ' → logprob: -11.87547492980957

Token 223: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.580929347255733e-05
    2. '[' → logprob: -11.625016212463379
    3. '[cur' → logprob: -12.000016212463379
    4. 'v' → logprob: -14.250016212463379
    5. '[val' → logprob: -17.625015258789062
    6. ' v' → logprob: -18.125015258789062
    7. ' [' → logprob: -18.375015258789062
    8. '[u' → logprob: -18.625015258789062
    9. '[var' → logprob: -19.125015258789062
    10. '	v' → logprob: -19.125015258789062

Token 224: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1019439771771431
    2. '<' → logprob: -2.3519439697265625
    3. '<v' → logprob: -6.6019439697265625
    4. ')' → logprob: -8.226943969726562
    5. '<int' → logprob: -10.476943969726562
    6. ')<' → logprob: -10.976943969726562
    7. ']' → logprob: -11.851943969726562
    8. '<n' → logprob: -12.226943969726562
    9. '>' → logprob: -12.351943969726562
    10. ' ' → logprob: -12.351943969726562

Token 225: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6329914331436157
    2. ' <' → logprob: -0.7579914331436157
    3. '<v' → logprob: -8.132991790771484
    4. '<int' → logprob: -10.882991790771484
    5. ' ' → logprob: -10.882991790771484
    6. '<len' → logprob: -11.757991790771484
    7. '<n' → logprob: -11.882991790771484
    8. '<com' → logprob: -11.882991790771484
    9. '[' → logprob: -12.632991790771484
    10. '  ' → logprob: -12.632991790771484

Token 226: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0005541055579669774
    2. ' cur' → logprob: -7.500554084777832
    3. '	cur' → logprob: -14.625554084777832
    4. '_cur' → logprob: -15.250554084777832
    5. 'cu' → logprob: -16.12555503845215
    6. '(cur' → logprob: -16.12555503845215
    7. ' ' → logprob: -16.37555503845215
    8. '[cur' → logprob: -17.12555503845215
    9. '-cur' → logprob: -17.25055503845215
    10. 'c' → logprob: -17.37555503845215

Token 227: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -4.000763510703109e-05
    2. '_' → logprob: -11.000040054321289
    3. ' _' → logprob: -11.875040054321289
    4. 'ist' → logprob: -12.125040054321289
    5. 'dist' → logprob: -12.875040054321289
    6. '_cur' → logprob: -12.875040054321289
    7. '_d' → logprob: -13.875040054321289
    8. '_cost' → logprob: -14.375040054321289
    9. '_dis' → logprob: -14.500040054321289
    10. '_di' → logprob: -14.750040054321289

Token 228: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1311594694852829
    2. ':
' → logprob: -2.381159543991089
    3. '       ' → logprob: -3.506159543991089
    4. '           ' → logprob: -8.756159782409668
    5. '   ' → logprob: -9.506159782409668
    6. 'continue' → logprob: -9.756159782409668
    7. ' or' → logprob: -10.131159782409668
    8. '               ' → logprob: -10.131159782409668
    9. ' continue' → logprob: -10.256159782409668
    10. '	continue' → logprob: -11.006159782409668

Token 229: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.838297426700592
    2. '           ' → logprob: -1.3382973670959473
    3. '               ' → logprob: -1.5882973670959473
    4. ' continue' → logprob: -2.8382973670959473
    5. 'continue' → logprob: -3.2132973670959473
    6. '   ' → logprob: -6.963297367095947
    7. '	continue' → logprob: -7.213297367095947
    8. '
' → logprob: -8.838297843933105
    9. '_continue' → logprob: -9.338297843933105
    10. ':
' → logprob: -9.588297843933105

Token 230: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.16660723090171814
    2. ' continue' → logprob: -1.9166072607040405
    3. '           ' → logprob: -5.79160737991333
    4. '               ' → logprob: -6.04160737991333
    5. '	continue' → logprob: -7.66660737991333
    6. '       ' → logprob: -8.291606903076172
    7. '   ' → logprob: -9.166606903076172
    8. '_continue' → logprob: -10.291606903076172
    9. 'contin' → logprob: -10.666606903076172
    10. '                   ' → logprob: -10.791606903076172

Token 231: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01704542525112629
    2. '       ' → logprob: -4.642045497894287
    3. ' 
' → logprob: -6.142045497894287
    4. '            
' → logprob: -6.517045497894287
    5. '   ' → logprob: -7.142045497894287
    6. '
' → logprob: -7.767045497894287
    7. ')' → logprob: -7.892045497894287
    8. '    
' → logprob: -8.017045021057129
    9. '  
' → logprob: -8.017045021057129
    10. '<|end|>' → logprob: -8.392045021057129

Token 232: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002712033921852708
    2. '       ' → logprob: -6.377712249755859
    3. '            
' → logprob: -8.00271224975586
    4. '   ' → logprob: -8.37771224975586
    5. '
' → logprob: -8.62771224975586
    6. ' 
' → logprob: -9.00271224975586
    7. '    
' → logprob: -9.87771224975586
    8. '        
' → logprob: -10.62771224975586
    9. '          ' → logprob: -11.75271224975586
    10. ' ' → logprob: -11.75271224975586

Token 233: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8979402184486389
    2. ' for' → logprob: -1.3979401588439941
    3. '   ' → logprob: -1.7729401588439941
    4. '           ' → logprob: -2.022940158843994
    5. 'for' → logprob: -3.772940158843994
    6. ' if' → logprob: -4.522940158843994
    7. ' 
' → logprob: -6.272940158843994
    8. 'if' (adapté à ' if') → logprob: -6.647940158843994
    9. '    ' → logprob: -6.897940158843994
    10. '            
' → logprob: -6.897940158843994

Token 234: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.12692873179912567
    2. ' v' → logprob: -2.1269288063049316
    3. '	v' → logprob: -15.001928329467773
    4. ' ' → logprob: -16.501928329467773
    5. '   ' → logprob: -16.626928329467773
    6. ')v' → logprob: -16.751928329467773
    7. '
' → logprob: -17.376928329467773
    8. '    ' → logprob: -18.376928329467773
    9. ' ' → logprob: -18.876928329467773
    10. '_v' → logprob: -19.126928329467773

Token 235: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.006719991099089384
    2. '==' → logprob: -5.006720066070557
    3. '=' → logprob: -13.631719589233398
    4. ' =' → logprob: -13.756719589233398
    5. ')' → logprob: -13.756719589233398
    6. ' ' → logprob: -14.381719589233398
    7. ')==' → logprob: -15.131719589233398
    8. ' ==
' → logprob: -15.631719589233398
    9. ']==' → logprob: -16.1317195892334
    10. '==
' → logprob: -16.2567195892334

Token 236: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.5759401917457581
    2. 'end' → logprob: -0.8259401917457581
    3. '=end' → logprob: -15.075940132141113
    4. '	end' → logprob: -15.825940132141113
    5. '[end' → logprob: -16.20094108581543
    6. '(end' → logprob: -16.57594108581543
    7. '
' → logprob: -16.95094108581543
    8. ''end' → logprob: -17.57594108581543
    9. 'END' → logprob: -17.57594108581543
    10. ' ' → logprob: -17.95094108581543

Token 237: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3490087687969208
    2. ':
' → logprob: -1.2240087985992432
    3. '):
' → logprob: -8.474008560180664
    4. '       ' → logprob: -8.849008560180664
    5. '               ' → logprob: -9.724008560180664
    6. ')' → logprob: -10.099008560180664
    7. '           ' → logprob: -10.349008560180664
    8. ' :
' → logprob: -10.849008560180664
    9. '):' → logprob: -11.099008560180664
    10. ':return' → logprob: -11.224008560180664

Token 238: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012882187031209469
    2. '           ' → logprob: -5.012882232666016
    3. '       ' → logprob: -5.137882232666016
    4. ' return' → logprob: -9.387882232666016
    5. ' break' → logprob: -9.387882232666016
    6. '   ' → logprob: -10.512882232666016
    7. '<|end|>' → logprob: -11.762882232666016
    8. '                   ' → logprob: -11.887882232666016
    9. 'return' → logprob: -11.887882232666016
    10. '                
' → logprob: -12.012882232666016

Token 239: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.052672382444143295
    2. ' return' → logprob: -3.5526723861694336
    3. '               ' → logprob: -3.8026723861694336
    4. 'break' → logprob: -8.302672386169434
    5. '           ' → logprob: -9.677672386169434
    6. '	return' → logprob: -11.427672386169434
    7. '   ' → logprob: -11.677672386169434
    8. ' break' → logprob: -11.802672386169434
    9. '
' → logprob: -12.302672386169434
    10. '       ' → logprob: -12.927672386169434

Token 240: ' dist' (ID: 3601)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.008730157278478146
    2. ' cur' → logprob: -4.758729934692383
    3. 'dist' → logprob: -9.133729934692383
    4. ' dist' → logprob: -11.883729934692383
    5. '	cur' → logprob: -14.758729934692383
    6. '(cur' → logprob: -16.758729934692383
    7. '   ' → logprob: -16.758729934692383
    8. 'cu' → logprob: -16.758729934692383
    9. '[cur' → logprob: -16.883729934692383
    10. 'curr' → logprob: -16.883729934692383

Token 241: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0008215418201871216
    2. '[end' → logprob: -7.375821590423584
    3. 'v' → logprob: -8.625821113586426
    4. '[' → logprob: -11.250821113586426
    5. '[cur' → logprob: -13.750821113586426
    6. ' v' → logprob: -14.750821113586426
    7. 'end' → logprob: -15.500821113586426
    8. '
' → logprob: -15.875821113586426
    9. '	v' → logprob: -15.875821113586426
    10. '[
' → logprob: -16.000822067260742

Token 242: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004592707380652428
    2. ')
' → logprob: -5.6295928955078125
    3. ']' → logprob: -7.2545928955078125
    4. '])' → logprob: -8.629592895507812
    5. ' )' → logprob: -10.379592895507812
    6. ')]' → logprob: -10.629592895507812
    7. '<|end|>' → logprob: -11.504592895507812
    8. '       ' → logprob: -11.879592895507812
    9. '           ' → logprob: -11.879592895507812
    10. '+' → logprob: -12.254592895507812

Token 243: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20631375908851624
    2. '       ' → logprob: -1.9563137292861938
    3. '   ' → logprob: -4.581313610076904
    4. '            
' → logprob: -4.706313610076904
    5. ' 
' → logprob: -4.706313610076904
    6. '
' → logprob: -5.206313610076904
    7. '        
' → logprob: -5.456313610076904
    8. '    
' → logprob: -5.706313610076904
    9. '  
' → logprob: -6.581313610076904
    10. '   
' → logprob: -7.581313610076904

Token 244: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26964351534843445
    2. '   ' → logprob: -2.269643545150757
    3. '           ' → logprob: -2.894643545150757
    4. ' for' → logprob: -3.269643545150757
    5. 'for' (adapté à ' for') → logprob: -3.269643545150757
    6. '        
' → logprob: -7.144643306732178
    7. '            
' → logprob: -8.394643783569336
    8. ' ' → logprob: -9.019643783569336
    9. '    
' → logprob: -9.394643783569336
    10. ' 
' → logprob: -9.519643783569336

Token 245: ' nv' (ID: 68641)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0619007907807827
    2. 'u' → logprob: -3.3119008541107178
    3. 'w' → logprob: -3.8119008541107178
    4. 'next' → logprob: -6.936900615692139
    5. 'neighbor' → logprob: -8.561901092529297
    6. 'nv' → logprob: -8.686901092529297
    7. ' to' → logprob: -9.936901092529297
    8. '(u' → logprob: -10.936901092529297
    9. '```' → logprob: -11.311901092529297
    10. '(to' → logprob: -11.311901092529297

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.2524021157296374e-05
    2. ' ,' → logprob: -10.375052452087402
    3. ',v' → logprob: -11.500052452087402
    4. ',n' → logprob: -12.125052452087402
    5. ',
' → logprob: -13.625052452087402
    6. '‌,' → logprob: -13.625052452087402
    7. '<|end|>' → logprob: -14.000052452087402
    8. ',next' → logprob: -15.375052452087402
    9. ',num' → logprob: -15.500052452087402
    10. ',user' → logprob: -15.750052452087402

Token 247: ' cost' (ID: 3097)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.24890023469924927
    2. 'weight' → logprob: -1.7489001750946045
    3. 'cost' → logprob: -3.4989001750946045
    4. ' w' → logprob: -4.623900413513184
    5. ' weight' → logprob: -6.248900413513184
    6. 'val' → logprob: -6.248900413513184
    7. ' cost' → logprob: -7.373900413513184
    8. 'wt' → logprob: -7.623900413513184
    9. 'd' → logprob: -7.748900413513184
    10. 'value' → logprob: -8.248900413513184

Token 248: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01874726265668869
    2. 'in' → logprob: -4.018747329711914
    3. ')' → logprob: -7.518747329711914
    4. '_in' → logprob: -11.018747329711914
    5. 'cost' → logprob: -11.393747329711914
    6. '_cost' → logprob: -12.018747329711914
    7. '   ' → logprob: -12.143747329711914
    8. ' )' → logprob: -12.768747329711914
    9. ' ' → logprob: -12.893747329711914
    10. '_' → logprob: -13.518747329711914

Token 249: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.693199634552002
    2. 'graph' → logprob: -0.693199634552002
    3. '	graph' → logprob: -10.068199157714844
    4. ' ' → logprob: -12.318199157714844
    5. '(graph' → logprob: -12.443199157714844
    6. '
' → logprob: -14.568199157714844
    7. '_graph' → logprob: -15.068199157714844
    8. '   ' → logprob: -15.193199157714844
    9. ')' → logprob: -16.068199157714844
    10. '    ' → logprob: -16.193199157714844

Token 250: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.4140441635390744e-05
    2. '[' → logprob: -11.375014305114746
    3. 'v' → logprob: -13.250014305114746
    4. '[V' → logprob: -15.750014305114746
    5. '(v' → logprob: -16.12501335144043
    6. ' v' → logprob: -16.37501335144043
    7. '   ' → logprob: -16.75001335144043
    8. ',v' → logprob: -17.00001335144043
    9. '[cur' → logprob: -17.00001335144043
    10. ')' → logprob: -17.00001335144043

Token 251: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018010158091783524
    2. '):
' → logprob: -4.393010139465332
    3. ']:' → logprob: -5.268010139465332
    4. ':' → logprob: -8.768010139465332
    5. ' ):' → logprob: -10.018010139465332
    6. ']):' → logprob: -10.143010139465332
    7. '       ' → logprob: -10.393010139465332
    8. ']:
' → logprob: -10.643010139465332
    9. ')' → logprob: -11.393010139465332
    10. '   ' → logprob: -11.518010139465332

Token 252: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00023727134976070374
    2. '           ' → logprob: -8.750237464904785
    3. ',' → logprob: -10.125237464904785
    4. '                
' → logprob: -11.250237464904785
    5. '	           ' → logprob: -12.000237464904785
    6. ' if' → logprob: -12.500237464904785
    7. '                   ' → logprob: -13.000237464904785
    8. '   ' → logprob: -13.125237464904785
    9. '<|end|>' → logprob: -13.375237464904785
    10. '       ' → logprob: -13.500237464904785

Token 253: ' nd' (ID: 5914)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2232527732849121
    2. ' 
' → logprob: -1.848252773284912
    3. '                   ' → logprob: -4.348252773284912
    4. '                ' → logprob: -4.598252773284912
    5. ' if' → logprob: -4.973252773284912
    6. '                
' → logprob: -5.223252773284912
    7. ' ' → logprob: -5.848252773284912
    8. '                    
' → logprob: -6.723252773284912
    9. '           ' → logprob: -7.098252773284912
    10. '  
' → logprob: -7.848252773284912

Token 254: ' =' (ID: 314)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.15430447459220886
    2. ' =' → logprob: -2.2793045043945312
    3. '=' → logprob: -3.9043045043945312
    4. 'istance' → logprob: -3.9043045043945312
    5. 'IST' → logprob: -9.654304504394531
    6. 'isted' → logprob: -10.154304504394531
    7. 'ists' → logprob: -10.279304504394531
    8. '_dist' → logprob: -10.529304504394531
    9. '   ' → logprob: -10.654304504394531
    10. ' ist' → logprob: -10.904304504394531

Token 255: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.38696083426475525
    2. ' cur' → logprob: -1.1369608640670776
    3. ' dist' → logprob: -10.136960983276367
    4. 'dist' → logprob: -10.511960983276367
    5. '	cur' → logprob: -11.011960983276367
    6. '[cur' → logprob: -13.636960983276367
    7. '(cur' → logprob: -13.761960983276367
    8. ' ' → logprob: -13.886960983276367
    9. ' ' → logprob: -14.136960983276367
    10. 'cost' → logprob: -14.261960983276367

Token 256: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -3.054500666621607e-06
    2. '_cost' → logprob: -13.12500286102295
    3. 'dist' → logprob: -14.00000286102295
    4. 'ist' → logprob: -16.250003814697266
    5. 'st' → logprob: -16.750003814697266
    6. '_st' → logprob: -17.125003814697266
    7. '_' → logprob: -17.750003814697266
    8. '_d' → logprob: -18.375003814697266
    9. '_DIST' → logprob: -18.750003814697266
    10. '-dist' → logprob: -18.750003814697266

Token 257: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07889298349618912
    2. '+' → logprob: -2.578892946243286
    3. ' ' → logprob: -13.703892707824707
    4. '+c' → logprob: -14.203892707824707
    5. ' plus' → logprob: -14.953892707824707
    6. ' +
' → logprob: -15.078892707824707
    7. '+n' → logprob: -15.578892707824707
    8. ' ' → logprob: -15.828892707824707
    9. '＋' → logprob: -16.203893661499023
    10. '<|end|>' → logprob: -16.203893661499023

Token 258: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.313262403011322
    2. 'cost' → logprob: -1.3132624626159668
    3. '(cost' → logprob: -14.688261985778809
    4. ' ' → logprob: -16.438262939453125
    5. '_cost' → logprob: -17.313262939453125
    6. ' ' → logprob: -17.563262939453125
    7. '
' → logprob: -17.563262939453125
    8. '1' → logprob: -17.688262939453125
    9. 'c' → logprob: -18.188262939453125
    10. 'code' → logprob: -18.188262939453125

Token 259: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006684348452836275
    2. '
' → logprob: -5.256684303283691
    3. '<|end|>' → logprob: -7.381684303283691
    4. '                
' → logprob: -7.881684303283691
    5. ' 
' → logprob: -8.631684303283691
    6. '           ' → logprob: -9.381684303283691
    7. '			' → logprob: -10.506684303283691
    8. '  
' → logprob: -10.631684303283691
    9. '<|end|>' → logprob: -10.756684303283691
    10. '              ' → logprob: -11.256684303283691

Token 260: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00013285996101330966
    2. '                
' → logprob: -10.12513256072998
    3. '           ' → logprob: -10.50013256072998
    4. '<|end|>' → logprob: -10.50013256072998
    5. '       ' → logprob: -11.75013256072998
    6. '                ' → logprob: -12.12513256072998
    7. '              ' → logprob: -12.25013256072998
    8. '			' → logprob: -12.62513256072998
    9. ' 
' → logprob: -12.75013256072998
    10. ' ' → logprob: -13.25013256072998

Token 261: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08566004037857056
    2. ' 
' → logprob: -2.960659980773926
    3. '                
' → logprob: -4.210659980773926
    4. ' ' → logprob: -5.085659980773926
    5. ' if' → logprob: -5.460659980773926
    6. '                ' → logprob: -6.335659980773926
    7. '
' → logprob: -6.460659980773926
    8. '  
' → logprob: -7.960659980773926
    9. '           ' → logprob: -8.585659980773926
    10. '<|end|>' → logprob: -8.710659980773926

Token 262: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.08216047286987305
    2. ' dist' → logprob: -2.582160472869873
    3. 'nd' → logprob: -5.832160472869873
    4. 'dist' → logprob: -8.082160949707031
    5. '(nd' → logprob: -11.332160949707031
    6. ' ' → logprob: -12.707160949707031
    7. '	dist' → logprob: -13.582160949707031
    8. '(dist' → logprob: -13.894660949707031
    9. '_nd' → logprob: -14.082160949707031
    10. ' ' → logprob: -14.457160949707031

Token 263: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.033651694655418396
    2. '<' → logprob: -3.40865159034729
    3. ' ' → logprob: -13.408651351928711
    4. '<|end|>' → logprob: -13.908651351928711
    5. '<n' → logprob: -14.283651351928711
    6. ' ' → logprob: -14.408651351928711
    7. '[' → logprob: -15.408651351928711
    8. '<int' → logprob: -15.408651351928711
    9. '<len' → logprob: -15.533651351928711
    10. ' <",' → logprob: -15.658651351928711

Token 264: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.25193139910697937
    2. ' dist' → logprob: -1.5019314289093018
    3. '	dist' → logprob: -13.376931190490723
    4. '(dist' → logprob: -15.251931190490723
    5. '_dist' → logprob: -15.751931190490723
    6. '   ' → logprob: -15.876931190490723
    7. '
' → logprob: -16.50193214416504
    8. 'Dist' → logprob: -16.87693214416504
    9. '.dist' → logprob: -17.12693214416504
    10. ' ' → logprob: -18.12693214416504

Token 265: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.652451464906335e-05
    2. '[v' → logprob: -11.500016212463379
    3. '[' → logprob: -12.250016212463379
    4. '[
' → logprob: -14.375016212463379
    5. ' [' → logprob: -14.625016212463379
    6. '
' → logprob: -15.625016212463379
    7. '```' → logprob: -16.500017166137695
    8. '   ' → logprob: -17.000017166137695
    9. '[N' → logprob: -17.250017166137695
    10. ' nv' → logprob: -17.625017166137695

Token 266: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.002509904792532325
    2. '[v' → logprob: -6.002510070800781
    3. '[' → logprob: -11.252510070800781
    4. ']' → logprob: -11.752510070800781
    5. '[n' → logprob: -12.127510070800781
    6. '][' → logprob: -13.252510070800781
    7. '```' → logprob: -13.627510070800781
    8. '_v' → logprob: -14.377510070800781
    9. '	v' → logprob: -14.877510070800781
    10. ')' → logprob: -15.127510070800781

Token 267: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.08604294061660767
    2. ':' → logprob: -2.836042881011963
    3. ']:
' → logprob: -4.336042881011963
    4. '):' → logprob: -5.086042881011963
    5. ':
' → logprob: -5.836042881011963
    6. ']' → logprob: -7.461042881011963
    7. '):
' → logprob: -7.461042881011963
    8. '[' → logprob: -9.086043357849121
    9. '[v' → logprob: -9.086043357849121
    10. '}:' → logprob: -9.211043357849121

Token 268: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011960659176111221
    2. ':
' → logprob: -5.261960506439209
    3. '               ' → logprob: -6.011960506439209
    4. ':' → logprob: -6.011960506439209
    5. '                       ' → logprob: -7.011960506439209
    6. '                    
' → logprob: -8.761960983276367
    7. '           ' → logprob: -9.011960983276367
    8. ' :
' → logprob: -9.011960983276367
    9. '):
' → logprob: -9.261960983276367
    10. '                           ' → logprob: -9.261960983276367

Token 269: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.005247748922556639
    2. 'dist' (adapté à ' dist') → logprob: -5.255247592926025
    3. '                   ' → logprob: -12.005248069763184
    4. '                       ' → logprob: -12.505248069763184
    5. '_dist' → logprob: -13.380248069763184
    6. '	dist' → logprob: -13.505248069763184
    7. '               ' → logprob: -15.005248069763184
    8. 'Dist' → logprob: -15.255248069763184
    9. '                    ' → logprob: -15.380248069763184
    10. '
' → logprob: -16.380247116088867

Token 270: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.550411151489243e-05
    2. '[' → logprob: -10.125055313110352
    3. '_nv' → logprob: -12.250055313110352
    4. '[
' → logprob: -13.500055313110352
    5. 'nv' → logprob: -13.625055313110352
    6. '```' → logprob: -14.000055313110352
    7. '   ' → logprob: -14.250055313110352
    8. '
' → logprob: -14.375055313110352
    9. ' [' → logprob: -14.500055313110352
    10. '\[' → logprob: -14.750055313110352

Token 271: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -7.672236824873835e-05
    2. '_nv' → logprob: -10.750076293945312
    3. '[v' → logprob: -10.875076293945312
    4. 'nv' → logprob: -11.125076293945312
    5. '[n' → logprob: -11.750076293945312
    6. ' nv' → logprob: -12.125076293945312
    7. ']' → logprob: -12.625076293945312
    8. '_v' → logprob: -13.500076293945312
    9. 'x' → logprob: -14.750076293945312
    10. '   ' → logprob: -15.250076293945312

Token 272: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007713100872933865
    2. '=' → logprob: -5.257713317871094
    3. ']=' → logprob: -6.382713317871094
    4. ' =' → logprob: -7.382713317871094
    5. ' ]' → logprob: -8.757713317871094
    6. ')' → logprob: -12.757713317871094
    7. ',' → logprob: -13.757713317871094
    8. '[' → logprob: -14.007713317871094
    9. '<|end|>' → logprob: -14.757713317871094
    10. ']
' → logprob: -14.882713317871094

Token 273: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10022122412919998
    2. ' =' → logprob: -2.3502211570739746
    3. '=
' → logprob: -11.600221633911133
    4. ' =
' → logprob: -12.725221633911133
    5. '[' → logprob: -14.475221633911133
    6. '=n' → logprob: -14.725221633911133
    7. ']=' → logprob: -14.975221633911133
    8. ']' → logprob: -14.975221633911133
    9. '=

' → logprob: -15.725221633911133
    10. '=v' → logprob: -16.100221633911133

Token 274: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.6326131820678711
    2. 'nd' → logprob: -0.7576131820678711
    3. ' ' → logprob: -12.632613182067871
    4. 'n' → logprob: -13.132613182067871
    5. '(nd' → logprob: -13.257613182067871
    6. '_nd' → logprob: -13.382613182067871
    7. 'nv' → logprob: -14.382613182067871
    8. 'nt' → logprob: -14.632613182067871
    9. ' nv' → logprob: -14.632613182067871
    10. '
' → logprob: -14.882613182067871

Token 275: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0004839385801460594
    2. '               ' → logprob: -8.500483512878418
    3. '                    
' → logprob: -9.625483512878418
    4. ',' → logprob: -9.750483512878418
    5. '				' → logprob: -10.000483512878418
    6. '           ' → logprob: -10.500483512878418
    7. '<|end|>' → logprob: -11.000483512878418
    8. '       ' → logprob: -11.750483512878418
    9. '                    ' → logprob: -11.875483512878418
    10. '                       ' → logprob: -12.000483512878418

Token 276: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0001126026691053994
    2. 'heap' → logprob: -10.250112533569336
    3. '               ' → logprob: -10.625112533569336
    4. '				' → logprob: -11.000112533569336
    5. ' heap' → logprob: -11.500112533569336
    6. '                    
' → logprob: -11.875112533569336
    7. '           ' → logprob: -11.875112533569336
    8. ',' → logprob: -13.000112533569336
    9. '                  ' → logprob: -13.000112533569336
    10. '                    ' → logprob: -13.125112533569336

Token 277: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -1.306760805164231e-05
    2. ' heap' → logprob: -11.25001335144043
    3. 'he' → logprob: -18.00001335144043
    4. '(heap' → logprob: -21.00001335144043
    5. '           ' → logprob: -22.25001335144043
    6. '                   ' → logprob: -22.25001335144043
    7. '               ' → logprob: -22.87501335144043
    8. 'heat' → logprob: -23.00001335144043
    9. '   ' → logprob: -23.12501335144043
    10. '.heap' → logprob: -23.25001335144043

Token 278: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.816093228830141e-06
    2. '.push' → logprob: -13.25000286102295
    3. 'push' → logprob: -14.87500286102295
    4. 'p' → logprob: -15.37500286102295
    5. '.he' → logprob: -15.75000286102295
    6. '.append' → logprob: -16.750001907348633
    7. '.q' → logprob: -17.500001907348633
    8. '                   ' → logprob: -17.625001907348633
    9. '```' → logprob: -18.125001907348633
    10. 'h' → logprob: -18.250001907348633

Token 279: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -5.5577775128767826e-06
    2. '.heap' → logprob: -12.875005722045898
    3. 'he' → logprob: -13.375005722045898
    4. '.' → logprob: -13.875005722045898
    5. '.push' → logprob: -14.875005722045898
    6. 'q' → logprob: -17.6250057220459
    7. '.p' → logprob: -17.8750057220459
    8. ' he' → logprob: -18.1250057220459
    9. '.He' → logprob: -18.3750057220459
    10. '   ' → logprob: -18.6250057220459

Token 280: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.001659589703194797
    2. 'ap' → logprob: -6.501659393310547
    3. 'pp' → logprob: -8.876659393310547
    4. 'push' → logprob: -11.501659393310547
    5. 'p' → logprob: -12.126659393310547
    6. '```' → logprob: -14.376659393310547
    7. 'q' → logprob: -14.876659393310547
    8. 'ush' → logprob: -15.376659393310547
    9. 'appen' → logprob: -16.001659393310547
    10. 'ап' → logprob: -16.001659393310547

Token 281: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00013238313840702176
    2. 'push' → logprob: -9.25013256072998
    3. 'p' → logprob: -11.25013256072998
    4. 'pp' → logprob: -11.62513256072998
    5. 'sh' → logprob: -12.25013256072998
    6. '```' → logprob: -12.37513256072998
    7. 'app' → logprob: -12.75013256072998
    8. 'op' → logprob: -13.87513256072998
    9. '   ' → logprob: -14.50013256072998
    10. 'n' → logprob: -16.125131607055664

Token 282: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -1.1472419600977446e-06
    2. 'heap' → logprob: -13.875000953674316
    3. '(' → logprob: -15.625000953674316
    4. ' (' → logprob: -17.250001907348633
    5. '```' → logprob: -18.500001907348633
    6. '(
' → logprob: -18.625001907348633
    7. '(graph' → logprob: -18.750001907348633
    8. ' heap' → logprob: -18.875001907348633
    9. '(queue' → logprob: -20.000001907348633
    10. '.heap' → logprob: -20.000001907348633

Token 283: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.000500966387335211
    2. '(' → logprob: -7.7505011558532715
    3. ',' → logprob: -10.125500679016113
    4. ')' → logprob: -11.000500679016113
    5. ' (' → logprob: -11.625500679016113
    6. ',(' → logprob: -14.000500679016113
    7. 'heap' → logprob: -14.000500679016113
    8. ' ,' → logprob: -14.500500679016113
    9. '(graph' → logprob: -14.750500679016113
    10. '```' → logprob: -15.000500679016113

Token 284: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6596977114677429
    2. '(nd' → logprob: -0.9096977114677429
    3. '(' → logprob: -2.9096977710723877
    4. '(n' → logprob: -3.6596977710723877
    5. '(nx' → logprob: -10.159697532653809
    6. '(nn' → logprob: -10.409697532653809
    7. '(ns' → logprob: -10.659697532653809
    8. '(nt' → logprob: -11.284697532653809
    9. '(nb' → logprob: -12.909697532653809
    10. '   ' → logprob: -14.284697532653809

Token 285: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.00014072739577386528
    2. ' nd' → logprob: -8.875141143798828
    3. '   ' → logprob: -14.750141143798828
    4. '(nd' → logprob: -14.875141143798828
    5. '_nd' → logprob: -16.750141143798828
    6. '                   ' → logprob: -17.250141143798828
    7. '  ' → logprob: -17.500141143798828
    8. ' ' → logprob: -17.500141143798828
    9. '
' → logprob: -17.750141143798828
    10. '               ' → logprob: -18.000141143798828

Token 286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007181499968282878
    2. ',n' → logprob: -7.250718116760254
    3. ' ,' → logprob: -12.250718116760254
    4. ',
' → logprob: -13.500718116760254
    5. ',v' → logprob: -14.125718116760254
    6. ')' → logprob: -14.750718116760254
    7. '(n' → logprob: -15.250718116760254
    8. '_nv' → logprob: -15.375718116760254
    9. '[n' → logprob: -15.750718116760254
    10. ' nv' → logprob: -15.875718116760254

Token 287: ' nv' (ID: 68641)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.029751179739832878
    2. ' nv' → logprob: -3.5297510623931885
    3. '_nv' → logprob: -14.65475082397461
    4. 'n' → logprob: -16.15475082397461
    5. '   ' → logprob: -16.52975082397461
    6. ' ' → logprob: -17.40475082397461
    7. '
' → logprob: -17.40475082397461
    8. '    ' → logprob: -18.27975082397461
    9. 'nm' → logprob: -18.90475082397461
    10. ' ' → logprob: -18.90475082397461

Token 288: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00018494461255613714
    2. '))
' → logprob: -8.750185012817383
    3. ')' → logprob: -11.000185012817383
    4. ' ))' → logprob: -11.750185012817383
    5. ')))' → logprob: -13.875185012817383
    6. '))

' → logprob: -15.375185012817383
    7. '));' → logprob: -15.750185012817383
    8. '               ' → logprob: -16.000185012817383
    9. '           ' → logprob: -16.500185012817383
    10. '       ' → logprob: -16.625185012817383

Token 289: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3009096384048462
    2. '       ' → logprob: -1.4259096384048462
    3. ')' → logprob: -4.300909519195557
    4. 'return' → logprob: -6.175909519195557
    5. '
' → logprob: -6.925909519195557
    6. '<|end|>' → logprob: -6.925909519195557
    7. ' return' → logprob: -7.300909519195557
    8. '    
' → logprob: -8.050909996032715
    9. '           ' → logprob: -8.675909996032715
    10. '                   ' → logprob: -9.300909996032715

Token 290: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.23993371427059174
    2. '   ' → logprob: -1.614933729171753
    3. '
' → logprob: -5.114933490753174
    4. '       ' → logprob: -5.614933490753174
    5. ' return' → logprob: -5.739933490753174
    6. '    
' → logprob: -7.364933490753174
    7. ')' → logprob: -8.239933967590332
    8. ' ' → logprob: -8.614933967590332
    9. '```' → logprob: -9.364933967590332
    10. '    ' → logprob: -9.739933967590332

Token 291: ' dist' (ID: 3601)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.008527102880179882
    2. 'dist' → logprob: -5.2585272789001465
    3. 'None' → logprob: -5.7585272789001465
    4. ' float' → logprob: -9.133526802062988
    5. ' None' → logprob: -11.633526802062988
    6. ' dist' → logprob: -11.883526802062988
    7. 'inf' → logprob: -12.383526802062988
    8. '   ' → logprob: -13.758526802062988
    9. 'int' → logprob: -14.133526802062988
    10. '0' → logprob: -14.258526802062988

Token 292: '[end' (ID: 125653)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 293: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.110668618930504e-05
    2. '<|end|>' → logprob: -10.25006103515625
    3. ')
' → logprob: -12.00006103515625
    4. ']' → logprob: -12.00006103515625
    5. ' )' → logprob: -12.62506103515625
    6. '   ' → logprob: -12.87506103515625
    7. '}' → logprob: -13.00006103515625
    8. ')return' → logprob: -13.50006103515625
    9. '[' → logprob: -13.62506103515625
    10. '+' → logprob: -14.37506103515625

Token 294: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001227276516146958
    2. '
' → logprob: -9.250123023986816
    3. ' for' → logprob: -11.125123023986816
    4. '   ' → logprob: -11.625123023986816
    5. '    
' → logprob: -13.375123023986816
    6. 'results' → logprob: -14.250123023986816
    7. '```' → logprob: -14.875123023986816
    8. 'output' → logprob: -15.875123023986816
    9. '	for' → logprob: -16.0001220703125
    10. '  
' → logprob: -16.6251220703125

Token 295: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.173704271830502e-06
    2. '   ' → logprob: -12.75000286102295
    3. 'results' → logprob: -16.250003814697266
    4. '
' → logprob: -16.500003814697266
    5. ' for' → logprob: -16.625003814697266
    6. '    
' → logprob: -17.875003814697266
    7. 'output' → logprob: -19.375003814697266
    8. 'result' → logprob: -19.500003814697266
    9. 'answers' → logprob: -21.875003814697266
    10. 'outputs' → logprob: -22.000003814697266

Token 296: ' p' (ID: 275)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.8136237859725952
    2. 's' → logprob: -1.1886237859725952
    3. 'q' → logprob: -1.9386237859725952
    4. 'query' → logprob: -3.1886239051818848
    5. ' start' → logprob: -3.9386239051818848
    6. ' s' → logprob: -4.063623905181885
    7. 'x' → logprob: -4.563623905181885
    8. 'u' → logprob: -4.563623905181885
    9. ' query' → logprob: -6.438623905181885
    10. 'src' → logprob: -6.438623905181885

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1548682600259781
    2. ' in' → logprob: -2.0298683643341064
    3. 'r' → logprob: -5.404868125915527
    4. ' ,' → logprob: -5.779868125915527
    5. 'in' → logprob: -6.404868125915527
    6. 'oint' → logprob: -6.404868125915527
    7. 'i' → logprob: -8.029868125915527
    8. 'er' → logprob: -8.779868125915527
    9. 'ar' → logprob: -9.654868125915527
    10. 'air' → logprob: -9.779868125915527

Token 298: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0003476209531072527
    2. 'd' → logprob: -8.875348091125488
    3. ' q' → logprob: -9.875348091125488
    4. 'e' → logprob: -10.375348091125488
    5. 't' → logprob: -10.500348091125488
    6. 'c' → logprob: -10.750348091125488
    7. 'r' → logprob: -10.750348091125488
    8. 'l' → logprob: -11.000348091125488
    9. 'x' → logprob: -11.875348091125488
    10. 'w' → logprob: -12.125348091125488

Token 299: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6329801678657532
    2. ' in' → logprob: -0.7579801678657532
    3. ',' → logprob: -8.007980346679688
    4. ')' → logprob: -10.507980346679688
    5. ' ' → logprob: -12.507980346679688
    6. '  ' → logprob: -12.757980346679688
    7. '   ' → logprob: -12.882980346679688
    8. '	in' → logprob: -13.007980346679688
    9. ':' → logprob: -13.257980346679688
    10. ' ,' → logprob: -13.757980346679688

Token 300: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03366679325699806
    2. 't' → logprob: -4.033666610717773
    3. 'x' → logprob: -4.908666610717773
    4. 's' → logprob: -6.158666610717773
    5. 'c' → logprob: -6.283666610717773
    6. 'g' → logprob: -7.158666610717773
    7. 'type' → logprob: -7.283666610717773
    8. '0' → logprob: -7.658666610717773
    9. 'graph' → logprob: -7.783666610717773
    10. 'w' → logprob: -8.033666610717773

Token 301: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01610838621854782
    2. 'in' → logprob: -4.141108512878418
    3. ',' → logprob: -9.641108512878418
    4. '   ' → logprob: -12.766108512878418
    5. ' ' → logprob: -13.141108512878418
    6. 'n' → logprob: -14.016108512878418
    7. '  ' → logprob: -14.516108512878418
    8. ')' → logprob: -15.016108512878418
    9. 'p' → logprob: -15.141108512878418
    10. 'i' → logprob: -15.391108512878418

Token 302: ' queries' (ID: 32122)
  Prédit: ' queries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queries' → logprob: -0.014163863845169544
    2. 'queries' → logprob: -4.264163970947266
    3. ' requests' → logprob: -16.389163970947266
    4. 'requests' → logprob: -16.514163970947266
    5. ' ' → logprob: -17.514163970947266
    6. 'quer' → logprob: -17.639163970947266
    7. 'Queries' → logprob: -17.889163970947266
    8. ' questions' → logprob: -18.139163970947266
    9. '_queries' → logprob: -18.264163970947266
    10. 'questions' → logprob: -18.389163970947266

Token 303: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002806417876854539
    2. ':
' → logprob: -5.877806186676025
    3. '):' → logprob: -14.627806663513184
    4. ',' → logprob: -14.752806663513184
    5. ':

' → logprob: -15.252806663513184
    6. ' :' → logprob: -15.627806663513184
    7. ':
' → logprob: -16.252805709838867
    8. '):
' → logprob: -16.377805709838867
    9. '=' → logprob: -17.002805709838867
    10. '   ' → logprob: -17.252805709838867

Token 304: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026304712519049644
    2. ':' → logprob: -3.7763047218322754
    3. ':
' → logprob: -7.276304721832275
    4. '   ' → logprob: -7.526304721832275
    5. '<|end|>' → logprob: -7.651304721832275
    6. '        
' → logprob: -8.026304244995117
    7. '
' → logprob: -8.026304244995117
    8. 'if' → logprob: -8.776304244995117
    9. '):
' → logprob: -9.401304244995117
    10. ',' → logprob: -9.651304244995117

Token 305: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16924117505550385
    2. ' if' → logprob: -2.669241189956665
    3. 'res' → logprob: -3.544241189956665
    4. 'cost' → logprob: -3.794241189956665
    5. 'result' → logprob: -4.419240951538086
    6. '       ' → logprob: -5.169240951538086
    7. 'dist' → logprob: -6.044240951538086
    8. '   ' → logprob: -6.169240951538086
    9. 'time' → logprob: -6.169240951538086
    10. ' cost' → logprob: -6.294240951538086

Token 306: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.1582111269235611
    2. 'r' → logprob: -2.0332112312316895
    3. ' p' → logprob: -4.2832112312316895
    4. 'p' → logprob: -6.7832112312316895
    5. ' graph' → logprob: -8.658210754394531
    6. ' q' → logprob: -9.658210754394531
    7. ' ' → logprob: -9.658210754394531
    8. '(r' → logprob: -10.470710754394531
    9. ' (' → logprob: -10.533210754394531
    10. 'q' → logprob: -10.658210754394531

Token 307: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07035651803016663
    2. '==' → logprob: -2.695356607437134
    3. ':' → logprob: -8.945356369018555
    4. ' <=' → logprob: -9.070356369018555
    5. ' <' → logprob: -10.195356369018555
    6. ' >' → logprob: -10.320356369018555
    7. '=' → logprob: -10.820356369018555
    8. '>' → logprob: -11.195356369018555
    9. ')' → logprob: -11.445356369018555
    10. '[' → logprob: -11.570356369018555

Token 308: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0372106172144413
    2. '1' → logprob: -3.787210702896118
    3. ' ' → logprob: -4.287210464477539
    4. 'cost' → logprob: -9.662210464477539
    5. ' cost' → logprob: -11.287210464477539
    6. 'c' → logprob: -11.662210464477539
    7. '   ' → logprob: -11.787210464477539
    8. 'time' → logprob: -11.912210464477539
    9. '2' → logprob: -11.974710464477539
    10. ''' → logprob: -12.912210464477539

Token 309: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02334773540496826
    2. '1' → logprob: -3.773347854614258
    3. 'cost' → logprob: -9.898347854614258
    4. ' ' → logprob: -11.273347854614258
    5. ''' → logprob: -11.398347854614258
    6. 'c' → logprob: -11.398347854614258
    7. '2' → logprob: -12.023347854614258
    8. '"' → logprob: -12.273347854614258
    9. '"time' → logprob: -13.523347854614258
    10. 'time' → logprob: -14.085847854614258

Token 310: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16066865622997284
    2. ':' → logprob: -1.9106686115264893
    3. ' :
' → logprob: -7.910668849945068
    4. '       ' → logprob: -10.03566837310791
    5. ' :' → logprob: -11.03566837310791
    6. ':
' → logprob: -12.16066837310791
    7. '):
' → logprob: -12.66066837310791
    8. '   ' → logprob: -13.03566837310791
    9. '           ' → logprob: -13.16066837310791
    10. ' and' → logprob: -13.16066837310791

Token 311: '           ' (ID: 352)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -1.0035443305969238
    2. 'print' → logprob: -1.3785443305969238
    3. '           ' → logprob: -1.5035443305969238
    4. '
' → logprob: -2.003544330596924
    5. 'result' → logprob: -5.503544330596924
    6. ':
' → logprob: -5.628544330596924
    7. '       ' → logprob: -5.628544330596924
    8. ' cost' → logprob: -6.128544330596924
    9. ' result' → logprob: -6.128544330596924
    10. 'd' → logprob: -6.378544330596924

Token 312: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.42804238200187683
    2. ' print' → logprob: -1.5530424118041992
    3. 'result' → logprob: -2.303042411804199
    4. 'res' → logprob: -4.178042411804199
    5. ' result' → logprob: -4.428042411804199
    6. ' res' → logprob: -6.178042411804199
    7. '           ' → logprob: -6.428042411804199
    8. '       ' → logprob: -6.928042411804199
    9. 'answer' → logprob: -7.053042411804199
    10. '
' → logprob: -7.303042411804199

Token 313: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.03446375951170921
    2. '(' → logprob: -3.40946364402771
    3. '("' → logprob: -7.784463882446289
    4. '('' → logprob: -8.034463882446289
    5. ' (' → logprob: -10.534463882446289
    6. 'd' → logprob: -10.909463882446289
    7. '()' → logprob: -10.909463882446289
    8. ' d' → logprob: -12.909463882446289
    9. '(
' → logprob: -13.034463882446289
    10. '(D' → logprob: -13.409463882446289

Token 314: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -9.610702363715973e-06
    2. 'ijk' → logprob: -11.625009536743164
    3. 'ij' → logprob: -14.500009536743164
    4. 'jik' → logprob: -16.500009536743164
    5. 'ijks' → logprob: -17.500009536743164
    6. 'graph' → logprob: -18.625009536743164
    7. 'ijkl' → logprob: -18.750009536743164
    8. 'i' → logprob: -19.250009536743164
    9. ')' → logprob: -19.375009536743164
    10. 'ik' → logprob: -19.625009536743164

Token 315: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -1.318681188422488e-05
    2. ')' → logprob: -11.62501335144043
    3. 'graph' → logprob: -13.00001335144043
    4. '(' → logprob: -13.37501335144043
    5. ')(' → logprob: -15.62501335144043
    6. '	graph' → logprob: -16.12501335144043
    7. ' (' → logprob: -16.50001335144043
    8. '(
' → logprob: -17.37501335144043
    9. ' graph' → logprob: -17.62501335144043
    10. '(gr' → logprob: -18.50001335144043

Token 316: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.000104616025055293
    2. '_time' → logprob: -9.375104904174805
    3. 'cost' → logprob: -10.875104904174805
    4. '_co' → logprob: -15.250104904174805
    5. '_' → logprob: -15.750104904174805
    6. ')_' → logprob: -16.125104904174805
    7. '_cos' → logprob: -16.250104904174805
    8. ' cost' → logprob: -17.000104904174805
    9. '_COST' → logprob: -17.125104904174805
    10. ')' → logprob: -17.250104904174805

Token 317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008883526897989213
    2. ',p' → logprob: -7.625888347625732
    3. ' ,' → logprob: -7.875888347625732
    4. '(p' → logprob: -11.50088882446289
    5. 'p' → logprob: -11.87588882446289
    6. ',
' → logprob: -13.00088882446289
    7. ' p' → logprob: -14.87588882446289
    8. '   ' → logprob: -15.87588882446289
    9. ')' → logprob: -16.00088882446289
    10. ' ' → logprob: -16.12588882446289

Token 318: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0015036711702123284
    2. ' p' → logprob: -6.5015034675598145
    3. ')' → logprob: -14.376503944396973
    4. ')p' → logprob: -15.626503944396973
    5. '   ' → logprob: -15.751503944396973
    6. '(p' → logprob: -16.376502990722656
    7. ' ' → logprob: -16.751502990722656
    8. ',' → logprob: -17.001502990722656
    9. '0' → logprob: -17.001502990722656
    10. ',p' → logprob: -17.251502990722656

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000577696890104562
    2. ',q' → logprob: -7.500577926635742
    3. ' ,' → logprob: -10.625577926635742
    4. ',p' → logprob: -15.000577926635742
    5. ',
' → logprob: -16.375577926635742
    6. 'q' → logprob: -17.625577926635742
    7. ')' → logprob: -18.000577926635742
    8. ' ' → logprob: -18.125577926635742
    9. '   ' → logprob: -18.750577926635742
    10. ',r' → logprob: -19.125577926635742

Token 320: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.001326433615759015
    2. ' q' → logprob: -6.626326560974121
    3. '   ' → logprob: -15.626326560974121
    4. '	q' → logprob: -16.126325607299805
    5. '    ' → logprob: -16.501325607299805
    6. '           ' → logprob: -16.626325607299805
    7. ' ' → logprob: -17.626325607299805
    8. '       ' → logprob: -18.126325607299805
    9. ')' → logprob: -18.751325607299805
    10. '  ' → logprob: -18.751325607299805

Token 321: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.011483964510262012
    2. '))
' → logprob: -4.511484146118164
    3. ')' → logprob: -7.886484146118164
    4. ' ))' → logprob: -9.886484146118164
    5. '),' → logprob: -12.261484146118164
    6. '))

' → logprob: -13.636484146118164
    7. ')
' → logprob: -13.761484146118164
    8. ' ))
' → logprob: -14.136484146118164
    9. ')))' → logprob: -14.636484146118164
    10. '))
' → logprob: -14.886484146118164

Token 322: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003391829552128911
    2. 'else' → logprob: -5.878391742706299
    3. ' else' → logprob: -7.628391742706299
    4. 'elif' → logprob: -10.003392219543457
    5. ')' → logprob: -10.878392219543457
    6. '<|end|>' → logprob: -10.878392219543457
    7. '   ' → logprob: -12.253392219543457
    8. '	' → logprob: -12.503392219543457
    9. '	else' → logprob: -13.253392219543457
    10. ' elif' → logprob: -13.628392219543457

Token 323: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2033761739730835
    2. '       ' → logprob: -1.9533761739730835
    3. ' else' → logprob: -3.203376293182373
    4. 'elif' → logprob: -6.453376293182373
    5. ' elif' → logprob: -10.578375816345215
    6. '   ' → logprob: -12.203375816345215
    7. '	else' → logprob: -13.828375816345215
    8. ' ' → logprob: -14.453375816345215
    9. 'els' → logprob: -14.953375816345215
    10. ')' → logprob: -15.453375816345215

Token 324: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5810240507125854
    2. ':
' → logprob: -0.8310240507125854
    3. '           ' → logprob: -5.581024169921875
    4. ' :
' → logprob: -6.831024169921875
    5. ' :' → logprob: -8.956024169921875
    6. '       ' → logprob: -9.956024169921875
    7. ':
' → logprob: -11.456024169921875
    8. '        ' → logprob: -11.831024169921875
    9. '          ' → logprob: -11.956024169921875
    10. '               ' → logprob: -12.456024169921875

Token 325: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.201171413064003
    2. ' print' → logprob: -2.201171398162842
    3. '       ' → logprob: -2.951171398162842
    4. '           ' → logprob: -3.951171398162842
    5. '               ' → logprob: -11.326171875
    6. '        ' → logprob: -11.701171875
    7. '   ' → logprob: -12.076171875
    8. '	print' → logprob: -12.826171875
    9. ' ' → logprob: -13.076171875
    10. '	       ' → logprob: -13.326171875

Token 326: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0031786637846380472
    2. ' print' → logprob: -5.753178596496582
    3. '       ' → logprob: -13.878178596496582
    4. '           ' → logprob: -17.8781795501709
    5. '	print' → logprob: -18.2531795501709
    6. 'pr' → logprob: -18.5031795501709
    7. '(print' → logprob: -18.6281795501709
    8. '.print' → logprob: -18.8781795501709
    9. '   ' → logprob: -19.5031795501709
    10. '        ' → logprob: -19.7531795501709

Token 327: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -2.7610454708337784e-05
    2. '(' → logprob: -10.500027656555176
    3. 'd' → logprob: -18.37502670288086
    4. '(
' → logprob: -19.25002670288086
    5. ' (' → logprob: -20.12502670288086
    6. '((' → logprob: -22.12502670288086
    7. '(D' → logprob: -22.75002670288086
    8. '(

' → logprob: -23.62502670288086
    9. '	d' → logprob: -23.75002670288086
    10. ' d' → logprob: -23.87502670288086

Token 328: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -2.816093228830141e-06
    2. 'ijk' → logprob: -13.25000286102295
    3. 'ij' → logprob: -14.25000286102295
    4. 'ijks' → logprob: -17.000001907348633
    5. '(d' → logprob: -17.250001907348633
    6. 'iker' → logprob: -17.375001907348633
    7. 'i' → logprob: -17.500001907348633
    8. '(' → logprob: -17.625001907348633
    9. 'jik' → logprob: -17.625001907348633
    10. 's' → logprob: -17.875001907348633

Token 329: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -1.306760805164231e-05
    2. '(' → logprob: -11.25001335144043
    3. '(gr' → logprob: -18.25001335144043
    4. '(
' → logprob: -18.25001335144043
    5. '(Graph' → logprob: -19.50001335144043
    6. '(g' → logprob: -20.37501335144043
    7. '	graph' → logprob: -20.37501335144043
    8. '(grid' → logprob: -20.62501335144043
    9. '(grammar' → logprob: -21.00001335144043
    10. 'graph' → logprob: -21.00001335144043

Token 330: '_time' (ID: 6425)
  Prédit: '(graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.014467746950685978
    2. '_graph' → logprob: -4.514467716217041
    3. 'graph' → logprob: -6.264467716217041
    4. '_time' → logprob: -6.514467716217041
    5. '	graph' → logprob: -11.0144681930542
    6. ' graph' → logprob: -11.8894681930542
    7. '_' → logprob: -12.5144681930542
    8. '_cost' → logprob: -13.6394681930542
    9. '.graph' → logprob: -14.6394681930542
    10. ')' → logprob: -15.2644681930542

Token 331: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.045823566731997e-05
    2. ' ,' → logprob: -11.000020027160645
    3. '(graph' → logprob: -12.625020027160645
    4. 'graph' → logprob: -15.375020027160645
    5. ',
' → logprob: -15.875020027160645
    6. ' graph' → logprob: -16.87502098083496
    7. ' ' → logprob: -19.50002098083496
    8. '，' → logprob: -19.50002098083496
    9. '(),' → logprob: -19.75002098083496
    10. ',

' → logprob: -19.75002098083496

Token 332: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5759410262107849
    2. 'p' → logprob: -0.8259410262107849
    3. ')' → logprob: -15.20094108581543
    4. '(p' → logprob: -15.20094108581543
    5. ')p' → logprob: -15.45094108581543
    6. ',' → logprob: -15.57594108581543
    7. ' ' → logprob: -15.82594108581543
    8. '<p' → logprob: -16.07594108581543
    9. ',p' → logprob: -16.32594108581543
    10. ' ' → logprob: -16.57594108581543

Token 333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011534435179783031
    2. ',p' → logprob: -9.125115394592285
    3. ' ,' → logprob: -12.000115394592285
    4. 'p' → logprob: -16.62511444091797
    5. ')' → logprob: -17.62511444091797
    6. ',
' → logprob: -17.62511444091797
    7. '   ' → logprob: -18.12511444091797
    8. '),' → logprob: -18.75011444091797
    9. ',q' → logprob: -19.00011444091797
    10. ' ' → logprob: -19.12511444091797

Token 334: ' q' (ID: 2335)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.001515576965175569
    2. ' p' → logprob: -6.5015153884887695
    3. 'q' → logprob: -11.25151538848877
    4. ' ' → logprob: -16.376516342163086
    5. ')' → logprob: -16.501516342163086
    6. '   ' → logprob: -16.876516342163086
    7. ',' → logprob: -17.126516342163086
    8. ' q' → logprob: -17.126516342163086
    9. '    ' → logprob: -17.876516342163086
    10. '       ' → logprob: -18.126516342163086

Token 335: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -2.4034345187828876e-05
    2. ')' → logprob: -11.00002384185791
    3. '))
' → logprob: -12.00002384185791
    4. ' ))' → logprob: -14.00002384185791
    5. ')))' → logprob: -15.87502384185791
    6. '       ' → logprob: -16.750024795532227
    7. '()))' → logprob: -18.125024795532227
    8. '   ' → logprob: -18.250024795532227
    9. ')}' → logprob: -18.750024795532227
    10. '})' → logprob: -19.500024795532227


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 333
Tokens correctement prédits (1ère position, stricte): 172
Tokens correctement prédits (1ère position, avec adaptation): 189
Tokens correctement prédits (top 10): 308
Précision stricte (1ère position): 51.65%
Précision adaptée (1ère position): 56.76%
Précision (top 10): 92.49%
================================================================================
