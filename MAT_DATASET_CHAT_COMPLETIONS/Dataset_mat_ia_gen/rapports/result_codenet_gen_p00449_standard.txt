================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:07:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline
INF = 10**15

while True:
    n, k = map(int, input().split())
    if n == 0 and k == 0:
        break
    dist = [[INF]*n for _ in range(n)]
    for i in range(n):
        dist[i][i] = 0
    queries = []
    for _ in range(k):
        tmp = list(map(int, input().split()))
        if tmp[0] == 1:
            _, c, d, e = tmp
            c -= 1
            d -= 1
            if e < dist[c][d]:
                dist[c][d] = e
                dist[d][c] = e
            # Floyd-Warshall update for new edge
            for i in range(n):
                for j in range(n):
                    nd = min(dist[i][c]+e+dist[d][j], dist[i][d]+e+dist[c][j])
                    if nd < dist[i][j]:
                        dist[i][j] = nd
        else:
            _, a, b = tmp
            a -= 1
            b -= 1
            queries.append((a,b))
    for a,b in queries:
        print(dist[a][b] if dist[a][b]!=INF else -1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048905275762081146
    2. '.' → logprob: -3.048905372619629
    3. ' (' → logprob: -9.298905372619629
    4. '(
' → logprob: -9.423905372619629
    5. ')' → logprob: -10.173905372619629
    6. '()' → logprob: -11.173905372619629
    7. '[' → logprob: -11.298905372619629
    8. ' ' → logprob: -11.423905372619629
    9. ''s' → logprob: -11.548905372619629
    10. '```' → logprob: -11.923905372619629

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.018464094027876854
    2. 'sys' → logprob: -4.018464088439941
    3. ' input' → logprob: -8.268464088439941
    4. 'input' → logprob: -9.893464088439941
    5. '	sys' → logprob: -13.018464088439941
    6. ' ' → logprob: -13.268464088439941
    7. '=sys' → logprob: -13.268464088439941
    8. '(sys' → logprob: -13.768464088439941
    9. ' system' → logprob: -15.393464088439941
    10. ' lambda' → logprob: -17.268465042114258

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.011805389076471329
    2. '.stdin' → logprob: -4.761805534362793
    3. ' .' → logprob: -7.136805534362793
    4. '.import' → logprob: -7.511805534362793
    5. '.argv' → logprob: -7.761805534362793
    6. '.readline' → logprob: -8.136805534362793
    7. '.input' → logprob: -8.136805534362793
    8. '.stdout' → logprob: -8.261805534362793
    9. '.
' → logprob: -8.886805534362793
    10. '.path' → logprob: -9.511805534362793

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.04071744531393051
    2. '.' → logprob: -3.915717363357544
    3. '.read' → logprob: -3.915717363357544
    4. '.readlines' → logprob: -10.665717124938965
    5. 'read' → logprob: -11.040717124938965
    6. '.Read' → logprob: -12.665717124938965
    7. ' readline' → logprob: -13.915717124938965
    8. '.buffer' → logprob: -14.165717124938965
    9. '```' → logprob: -14.415717124938965
    10. '<|end|>' → logprob: -14.415717124938965

Token 8: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14040693640708923
    2. '(' → logprob: -2.265406847000122
    3. '()
' → logprob: -4.390407085418701
    4. '(
' → logprob: -4.765407085418701
    5. '().' → logprob: -6.515407085418701
    6. '
' → logprob: -6.515407085418701
    7. '()\' → logprob: -7.015407085418701
    8. '\' → logprob: -7.390407085418701
    9. '()

' → logprob: -7.390407085418701
    10. '\n' → logprob: -7.640407085418701

Token 9: 'INF' (ID: 64358)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3145761787891388
    2. '(' → logprob: -1.3145761489868164
    3. '()
' → logprob: -7.564576148986816
    4. '(
' → logprob: -7.814576148986816
    5. '()

' → logprob: -9.189576148986816
    6. '()\' → logprob: -9.689576148986816
    7. 'def' → logprob: -9.939576148986816
    8. '().' → logprob: -10.314576148986816
    9. '#' → logprob: -11.064576148986816
    10. ')' → logprob: -11.064576148986816

Token 10: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8597875833511353
    2. ' =' → logprob: -0.9847875833511353
    3. '=' → logprob: -1.9847875833511353
    4. ')' → logprob: -3.6097874641418457
    5. ' ' → logprob: -3.6097874641418457
    6. ' _' → logprob: -4.984787464141846
    7. ',' → logprob: -7.109787464141846
    8. ' )' → logprob: -7.234787464141846
    9. '    ' → logprob: -7.734787464141846
    10. '<|end|>' → logprob: -7.734787464141846

Token 11: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.47355931997299194
    2. 'float' → logprob: -1.7235593795776367
    3. ' ' → logprob: -1.9735593795776367
    4. ' float' → logprob: -3.2235593795776367
    5. 'int' → logprob: -4.098559379577637
    6. ' int' → logprob: -6.098559379577637
    7. '1' → logprob: -6.848559379577637
    8. '100' → logprob: -9.473559379577637
    9. '987' → logprob: -10.848559379577637
    10. '999' → logprob: -13.098559379577637

Token 12: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.18877744674682617
    2. 'float' → logprob: -2.188777446746826
    3. 'int' → logprob: -2.938777446746826
    4. '1' → logprob: -5.188777446746826
    5. ' ' → logprob: -6.813777446746826
    6. ' float' → logprob: -8.188777923583984
    7. ' int' → logprob: -10.063777923583984
    8. '100' → logprob: -10.188777923583984
    9. '987' → logprob: -12.313777923583984
    10. '2' → logprob: -13.938777923583984

Token 13: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5043602585792542
    2. '0' → logprob: -1.5043601989746094
    3. '9' → logprob: -2.0043601989746094
    4. '6' → logprob: -3.3793601989746094
    5. '8' → logprob: -6.254360198974609
    6. '7' → logprob: -6.629360198974609
    7. '5' → logprob: -6.879360198974609
    8. '4' → logprob: -8.37936019897461
    9. '000' → logprob: -9.00436019897461
    10. '00' → logprob: -9.12936019897461

Token 14: '15' (ID: 1055)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.759734732331708e-05
    2. '18' → logprob: -11.375017166137695
    3. '12' → logprob: -12.625017166137695
    4. '10' → logprob: -13.125017166137695
    5. '15' → logprob: -14.500017166137695
    6. '7' → logprob: -15.625017166137695
    7. '09' → logprob: -17.375017166137695
    8. '13' → logprob: -18.250017166137695
    9. '```' → logprob: -18.375017166137695
    10. '19' → logprob: -18.375017166137695

Token 15: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3784007430076599
    2. '
' → logprob: -1.7534008026123047
    3. '\' → logprob: -2.6284008026123047
    4. '' → logprob: -3.3784008026123047
    5. '

' → logprob: -4.378400802612305
    6. '
' → logprob: -5.378400802612305
    7. 'n' → logprob: -5.503400802612305
    8. '```' → logprob: -5.878400802612305
    9. 'def' → logprob: -6.003400802612305
    10. 'newline' → logprob: -6.878400802612305

Token 16: 'while' (ID: 7032)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3273811340332031
    2. 'def' → logprob: -1.3273811340332031
    3. 'dp' → logprob: -5.327381134033203
    4. 'N' → logprob: -5.452381134033203
    5. 'a' → logprob: -5.952381134033203
    6. 'd' → logprob: -7.452381134033203
    7. '\' → logprob: -7.952381134033203
    8. '
' → logprob: -8.202381134033203
    9. '```' → logprob: -8.327381134033203
    10. '\n' → logprob: -8.702381134033203

Token 17: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22681103646755219
    2. ' True' → logprob: -1.6018110513687134
    3. ' not' → logprob: -7.726810932159424
    4. '  ' → logprob: -8.101811408996582
    5. ' )' → logprob: -8.726811408996582
    6. 'True' → logprob: -8.851811408996582
    7. ' (' → logprob: -9.851811408996582
    8. ' ```' → logprob: -10.101811408996582
    9. ' space' → logprob: -10.476811408996582
    10. '    ' → logprob: -10.601811408996582

Token 18: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.4894986785948277e-05
    2. ':**' → logprob: -10.750044822692871
    3. ' :' → logprob: -11.000044822692871
    4. '():' → logprob: -12.500044822692871
    5. ':
' → logprob: -13.625044822692871
    6. '):' → logprob: -14.000044822692871
    7. ':return' → logprob: -15.875044822692871
    8. '   ' → logprob: -16.500045776367188
    9. ',' → logprob: -16.500045776367188
    10. '':'' → logprob: -16.875045776367188

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03155574947595596
    2. '    
' → logprob: -4.156555652618408
    3. ':' → logprob: -4.406555652618408
    4. ' :' → logprob: -7.406555652618408
    5. '    ' → logprob: -7.656555652618408
    6. ' 
' → logprob: -8.031556129455566
    7. ':
' → logprob: -8.156556129455566
    8. '  
' → logprob: -8.406556129455566
    9. '
' → logprob: -8.531556129455566
    10. ' ' → logprob: -9.156556129455566

Token 20: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.10118678212165833
    2. '   ' → logprob: -3.101186752319336
    3. 'line' → logprob: -3.101186752319336
    4. 'try' → logprob: -6.226186752319336
    5. ' try' → logprob: -6.351186752319336
    6. ' n' → logprob: -7.351186752319336
    7. 'n' (adapté à ' n') → logprob: -7.601186752319336
    8. 's' → logprob: -7.726186752319336
    9. ' s' → logprob: -7.976186752319336
    10. 'x' → logprob: -9.351186752319336

Token 21: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021908650174736977
    2. ' ==' → logprob: -4.271908760070801
    3. '=' → logprob: -5.021908760070801
    4. ' ' → logprob: -7.396908760070801
    5. ' :=' → logprob: -8.3969087600708
    6. '==' → logprob: -9.2719087600708
    7. ' >' → logprob: -9.8969087600708
    8. ' <' → logprob: -10.5219087600708
    9. '=int' → logprob: -10.6469087600708
    10. ' <=' → logprob: -11.0219087600708

Token 22: ' k' (ID: 372)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3354581892490387
    2. ' m' → logprob: -1.3354581594467163
    3. 'k' → logprob: -4.460458278656006
    4. ' k' → logprob: -4.960458278656006
    5. 'w' → logprob: -6.585458278656006
    6. ' w' → logprob: -6.835458278656006
    7. 'x' → logprob: -8.460457801818848
    8. 's' → logprob: -8.835457801818848
    9. ' x' → logprob: -9.335457801818848
    10. ' s' → logprob: -9.585457801818848

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17974989116191864
    2. '=' → logprob: -1.804749846458435
    3. ' ' → logprob: -13.429749488830566
    4. '=input' → logprob: -13.554749488830566
    5. ',' → logprob: -13.679749488830566
    6. '   ' → logprob: -15.179749488830566
    7. ')' → logprob: -15.304749488830566
    8. '    ' → logprob: -15.554749488830566
    9. '=line' → logprob: -15.554749488830566
    10. '=int' → logprob: -15.929749488830566

Token 24: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1919088363647461
    2. 'map' → logprob: -1.816908836364746
    3. ' input' → logprob: -4.941908836364746
    4. 'input' → logprob: -5.316908836364746
    5. ' ' → logprob: -10.566908836364746
    6. ' list' → logprob: -11.816908836364746
    7. 'list' → logprob: -12.816908836364746
    8. '	map' → logprob: -13.066908836364746
    9. '(map' → logprob: -13.566908836364746
    10. '   ' → logprob: -15.066908836364746

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.4751637876033783
    2. '(' → logprob: -0.9751638174057007
    3. '(input' → logprob: -6.97516393661499
    4. '(str' → logprob: -9.100163459777832
    5. '(lambda' → logprob: -10.600163459777832
    6. '(
' → logprob: -12.350163459777832
    7. '(list' → logprob: -13.225163459777832
    8. '(in' → logprob: -13.350163459777832
    9. '(eval' → logprob: -13.600163459777832
    10. 'int' → logprob: -13.725163459777832

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47846779227256775
    2. ',input' → logprob: -0.9784678220748901
    3. '(input' → logprob: -5.97846794128418
    4. 'input' → logprob: -6.60346794128418
    5. ')' → logprob: -8.35346794128418
    6. '(' → logprob: -8.60346794128418
    7. ' ,' → logprob: -10.22846794128418
    8. '```' → logprob: -11.35346794128418
    9. ' input' → logprob: -12.10346794128418
    10. ',int' → logprob: -12.22846794128418

Token 27: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07889970391988754
    2. ' input' → logprob: -2.578899621963501
    3. ')' → logprob: -11.828899383544922
    4. ',input' → logprob: -13.703899383544922
    5. ' ' → logprob: -14.453899383544922
    6. '(input' → logprob: -15.078899383544922
    7. 'sys' → logprob: -15.453899383544922
    8. '=input' → logprob: -15.953899383544922
    9. ' )' → logprob: -16.078899383544922
    10. '   ' → logprob: -16.203899383544922

Token 28: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.440506407059729e-05
    2. '()' → logprob: -10.37503433227539
    3. '())' → logprob: -12.87503433227539
    4. ' ().' → logprob: -14.50003433227539
    5. '()))' → logprob: -16.37503433227539
    6. '()
' → logprob: -17.25003433227539
    7. '(' → logprob: -17.50003433227539
    8. ')' → logprob: -18.00003433227539
    9. '()

' → logprob: -18.37503433227539
    10. '()),' → logprob: -19.25003433227539

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.08183791488409042
    2. 'strip' → logprob: -2.5818378925323486
    3. 'rstrip' → logprob: -5.831838130950928
    4. ')' → logprob: -12.08183765411377
    5. '(split' → logprob: -12.95683765411377
    6. ' split' → logprob: -13.33183765411377
    7. ' strip' → logprob: -14.95683765411377
    8. 'plit' → logprob: -14.95683765411377
    9. '```' → logprob: -15.33183765411377
    10. '().' → logprob: -15.45683765411377

Token 30: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32474085688591003
    2. '())' → logprob: -1.3247408866882324
    3. '()' → logprob: -4.574740886688232
    4. '))' → logprob: -6.949740886688232
    5. '()))' → logprob: -9.824740409851074
    6. '(' → logprob: -10.199740409851074
    7. '())
' → logprob: -10.449740409851074
    8. ')
' → logprob: -12.074740409851074
    9. '`)' → logprob: -12.324740409851074
    10. ')`' → logprob: -12.324740409851074

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2794799506664276
    2. ' if' → logprob: -2.65447998046875
    3. ' ' → logprob: -3.27947998046875
    4. 'if' → logprob: -3.40447998046875
    5. '
' → logprob: -3.65447998046875
    6. '<|end|>' → logprob: -4.02947998046875
    7. '    ' → logprob: -4.52947998046875
    8. ' 
' → logprob: -4.65447998046875
    9. '    
' → logprob: -4.65447998046875
    10. '  ' → logprob: -4.90447998046875

Token 32: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5891035795211792
    2. 'if' (adapté à ' if') → logprob: -1.5891035795211792
    3. '<|end|>' → logprob: -1.5891035795211792
    4. ')' → logprob: -4.839103698730469
    5. '   ' → logprob: -4.964103698730469
    6. '    ' → logprob: -5.339103698730469
    7. ' ' → logprob: -5.464103698730469
    8. '\n' → logprob: -5.714103698730469
    9. ' 
' → logprob: -6.464103698730469
    10. ',' → logprob: -6.589103698730469

Token 33: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.007442163303494453
    2. 'n' → logprob: -5.382441997528076
    3. ' not' → logprob: -5.882441997528076
    4. 'not' → logprob: -10.507442474365234
    5. ' ' → logprob: -13.382442474365234
    6. '	n' → logprob: -14.132442474365234
    7. ' (' → logprob: -15.757442474365234
    8. '(n' → logprob: -16.007442474365234
    9. ' ' → logprob: -17.507442474365234
    10. ' н' → logprob: -18.257442474365234

Token 34: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.016085751354694366
    2. '==' → logprob: -4.141085624694824
    3. ' <=' → logprob: -10.641085624694824
    4. ' <' → logprob: -11.016085624694824
    5. '=' → logprob: -12.641085624694824
    6. ' ' → logprob: -13.391085624694824
    7. ' =' → logprob: -13.516085624694824
    8. '<' → logprob: -13.516085624694824
    9. '<=' → logprob: -13.516085624694824
    10. '   ' → logprob: -14.516085624694824

Token 35: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00976482592523098
    2. ' ' → logprob: -4.634764671325684
    3. 'k' → logprob: -12.384764671325684
    4. ' k' → logprob: -14.009764671325684
    5. '-' → logprob: -14.384764671325684
    6. '```' → logprob: -14.384764671325684
    7. '  ' → logprob: -14.759764671325684
    8. '   ' → logprob: -14.822264671325684
    9. 'n' → logprob: -15.697264671325684
    10. '    ' → logprob: -15.884764671325684

Token 36: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000561969296541065
    2. ' ' → logprob: -7.5005621910095215
    3. '-' → logprob: -12.125561714172363
    4. 'k' → logprob: -13.250561714172363
    5. '   ' → logprob: -15.375561714172363
    6. '  ' → logprob: -15.625561714172363
    7. ' -' → logprob: -15.750561714172363
    8. 'and' → logprob: -15.813061714172363
    9. '```' → logprob: -15.938061714172363
    10. 's' → logprob: -16.25056266784668

Token 37: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.026459835469722748
    2. ':' → logprob: -3.7764599323272705
    3. 'and' → logprob: -5.776459693908691
    4. ' or' → logprob: -10.276459693908691
    5. '   ' → logprob: -10.526459693908691
    6. ' :' → logprob: -11.276459693908691
    7. ' ' → logprob: -11.401459693908691
    8. ' a' → logprob: -11.526459693908691
    9. '	and' → logprob: -11.651459693908691
    10. '    ' → logprob: -13.651459693908691

Token 38: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.01815415732562542
    2. 'k' → logprob: -4.018154144287109
    3. '	k' → logprob: -12.76815414428711
    4. ' ' → logprob: -13.76815414428711
    5. ' ' → logprob: -15.64315414428711
    6. '  ' → logprob: -16.51815414428711
    7. ' к' → logprob: -17.51815414428711
    8. '<|end|>' → logprob: -18.14315414428711
    9. ' ‌' → logprob: -18.64315414428711
    10. '"k' → logprob: -18.76815414428711

Token 39: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.020581595599651337
    2. '==' → logprob: -3.8955814838409424
    3. ' ' → logprob: -11.145581245422363
    4. '<|end|>' → logprob: -11.520581245422363
    5. '<|end|>' → logprob: -12.770581245422363
    6. ' ' → logprob: -12.770581245422363
    7. ')==' → logprob: -13.270581245422363
    8. '=' → logprob: -13.270581245422363
    9. '0' → logprob: -13.520581245422363
    10. ' =' → logprob: -13.895581245422363

Token 40: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020542005077004433
    2. ' ' → logprob: -3.8955419063568115
    3. '  ' → logprob: -16.02054214477539
    4. '   ' → logprob: -17.02054214477539
    5. '۰' → logprob: -18.89554214477539
    6. ' ' → logprob: -19.45804214477539
    7. '    ' → logprob: -19.58304214477539
    8. '```' → logprob: -20.02054214477539
    9. '<|end|>' → logprob: -20.08304214477539
    10. '０' → logprob: -20.45804214477539

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '۰' → logprob: -19.250139236450195
    4. '  ' → logprob: -20.250139236450195
    5. '０' → logprob: -20.625139236450195
    6. '০' → logprob: -21.062639236450195
    7. '```' → logprob: -21.187639236450195
    8. '   ' → logprob: -21.437639236450195
    9. '०' → logprob: -21.687639236450195
    10. '٠' → logprob: -21.750139236450195

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002398482523858547
    2. ':
' → logprob: -6.127398490905762
    3. '   ' → logprob: -8.502398490905762
    4. '       ' → logprob: -12.502398490905762
    5. ' :' → logprob: -13.252398490905762
    6. ':return' → logprob: -13.377398490905762
    7. '	break' → logprob: -14.127398490905762
    8. ' break' → logprob: -14.377398490905762
    9. '):' → logprob: -14.502398490905762
    10. '.' → logprob: -14.627398490905762

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005666394717991352
    2. '   ' → logprob: -5.255666255950928
    3. ':' → logprob: -8.505666732788086
    4. '	break' → logprob: -9.130666732788086
    5. ' break' → logprob: -10.255666732788086
    6. '\n' → logprob: -11.005666732788086
    7. '	' → logprob: -11.005666732788086
    8. ':
' → logprob: -11.380666732788086
    9. '
' → logprob: -12.005666732788086
    10. '    ' → logprob: -12.380666732788086

Token 44: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.024037178605794907
    2. 'break' (adapté à ' break') → logprob: -4.2740373611450195
    3. '   ' → logprob: -5.0240373611450195
    4. '       ' → logprob: -5.7740373611450195
    5. '	break' → logprob: -8.89903736114502
    6. '```' → logprob: -13.77403736114502
    7. '_break' → logprob: -13.89903736114502
    8. '           ' → logprob: -15.14903736114502
    9. '    ' → logprob: -15.52403736114502
    10. '-break' → logprob: -15.77403736114502

Token 45: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44406092166900635
    2. '    
' → logprob: -1.6940609216690063
    3. '
' → logprob: -2.069060802459717
    4. 'n' → logprob: -4.069060802459717
    5. '\n' → logprob: -4.694060802459717
    6. '<|end|>' → logprob: -5.319060802459717
    7. '   
' → logprob: -5.819060802459717
    8. '  
' → logprob: -5.819060802459717
    9. ' 
' → logprob: -6.319060802459717
    10. '```' → logprob: -6.569060802459717

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03613027185201645
    2. '    
' → logprob: -3.53613018989563
    3. '
' → logprob: -6.286130428314209
    4. '\n' → logprob: -6.911130428314209
    5. '   
' → logprob: -7.411130428314209
    6. 'n' → logprob: -7.536130428314209
    7. '  
' → logprob: -7.661130428314209
    8. '    ' → logprob: -7.911130428314209
    9. ' 
' → logprob: -7.911130428314209
    10. '  ' → logprob: -8.41112995147705

Token 47: ' dist' (ID: 3601)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17276440560817719
    2. '   ' → logprob: -3.172764301300049
    3. 'dist' (adapté à ' dist') → logprob: -3.672764301300049
    4. ' dp' → logprob: -3.672764301300049
    5. 'distance' → logprob: -5.172764301300049
    6. 'd' → logprob: -5.297764301300049
    7. 'arr' → logprob: -5.297764301300049
    8. 'graph' → logprob: -5.297764301300049
    9. 'a' → logprob: -5.422764301300049
    10. '    
' → logprob: -5.672764301300049

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20675776898860931
    2. '=' → logprob: -1.7067577838897705
    3. '[' → logprob: -5.956757545471191
    4. ',' → logprob: -6.206757545471191
    5. 'ances' → logprob: -8.456757545471191
    6. 's' → logprob: -8.581757545471191
    7. '[]' → logprob: -9.206757545471191
    8. ' =[' → logprob: -9.456757545471191
    9. '=[' → logprob: -10.081757545471191
    10. '=[]' → logprob: -10.331757545471191

Token 49: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06569433212280273
    2. ' [' → logprob: -3.0656943321228027
    3. '[[' → logprob: -4.315694332122803
    4. ' [[' → logprob: -6.440694332122803
    5. '[n' → logprob: -7.065694332122803
    6. '[-' → logprob: -7.565694332122803
    7. '{' → logprob: -8.815694808959961
    8. '{}' → logprob: -9.315694808959961
    9. '[list' → logprob: -9.315694808959961
    10. '[in' → logprob: -9.565694808959961

Token 50: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0033717502374202013
    2. '0' → logprob: -5.753371715545654
    3. ' INF' → logprob: -9.128372192382812
    4. 'inf' → logprob: -10.878372192382812
    5. '-INF' → logprob: -11.253372192382812
    6. '(' → logprob: -11.503372192382812
    7. '-' → logprob: -12.128372192382812
    8. '   ' → logprob: -12.128372192382812
    9. 'False' → logprob: -12.253372192382812
    10. '[' → logprob: -12.253372192382812

Token 51: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21876561641693115
    2. ' for' → logprob: -1.9687656164169312
    3. ']*' → logprob: -3.2187657356262207
    4. ' ]' → logprob: -4.718765735626221
    5. 'for' → logprob: -5.593765735626221
    6. ']*(' → logprob: -6.218765735626221
    7. ' if' → logprob: -6.968765735626221
    8. ',' → logprob: -7.468765735626221
    9. 'if' → logprob: -8.093765258789062
    10. ')' → logprob: -9.093765258789062

Token 52: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0650167241692543
    2. '(n' → logprob: -2.815016746520996
    3. '(' → logprob: -6.065016746520996
    4. '501' → logprob: -7.940016746520996
    5. '100' → logprob: -9.940016746520996
    6. '101' → logprob: -10.190016746520996
    7. '401' → logprob: -10.190016746520996
    8. ' n' → logprob: -10.315016746520996
    9. '500' → logprob: -10.565016746520996
    10. ' (' → logprob: -10.565016746520996

Token 53: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5760865211486816
    2. 'for' → logprob: -0.8260865211486816
    3. '   ' → logprob: -8.951086044311523
    4. '	for' → logprob: -11.576086044311523
    5. ' ' → logprob: -13.326086044311523
    6. '```' → logprob: -13.326086044311523
    7. '    ' → logprob: -13.451086044311523
    8. ']' → logprob: -13.451086044311523
    9. ')' → logprob: -14.201086044311523
    10. '  ' → logprob: -15.076086044311523

Token 54: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.007839420810341835
    2. 'range' → logprob: -5.382839202880859
    3. '_' → logprob: -6.632839202880859
    4. ' _' → logprob: -7.007839202880859
    5. ' i' → logprob: -8.00783920288086
    6. '_range' → logprob: -8.50783920288086
    7. ' ' → logprob: -9.00783920288086
    8. ' in' → logprob: -9.38283920288086
    9. '	range' → logprob: -9.38283920288086
    10. '<|end|>' → logprob: -9.88283920288086

Token 55: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2744099795818329
    2. 'in' → logprob: -2.0244100093841553
    3. ' in' → logprob: -2.2744100093841553
    4. ' range' → logprob: -5.399409770965576
    5. 'n' → logprob: -8.899410247802734
    6. ' ' → logprob: -8.899410247802734
    7. '(range' → logprob: -8.899410247802734
    8. '	range' → logprob: -9.649410247802734
    9. '  ' → logprob: -11.649410247802734
    10. 'i' → logprob: -11.774410247802734

Token 56: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015080781886354089
    2. ' range' → logprob: -6.5015082359313965
    3. '(range' → logprob: -13.501507759094238
    4. ']' → logprob: -14.001507759094238
    5. ' ' → logprob: -14.376507759094238
    6. '	range' → logprob: -14.376507759094238
    7. ')' → logprob: -14.501507759094238
    8. 'rang' → logprob: -14.626507759094238
    9. '   ' → logprob: -14.751507759094238
    10. '```' → logprob: -15.126507759094238

Token 57: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00029720881138928235
    2. '(' → logprob: -8.125297546386719
    3. ' (' → logprob: -14.250297546386719
    4. 'n' → logprob: -15.125297546386719
    5. '	n' → logprob: -16.00029754638672
    6. ' n' → logprob: -17.50029754638672
    7. '(
' → logprob: -17.62529754638672
    8. ')n' → logprob: -17.75029754638672
    9. '(N' → logprob: -18.50029754638672
    10. ' ' → logprob: -19.62529754638672

Token 58: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0011167617049068213
    2. ')' → logprob: -6.876116752624512
    3. ']' → logprob: -9.501116752624512
    4. ')]
' → logprob: -12.751116752624512
    5. ')])' → logprob: -13.001116752624512
    6. '])]' → logprob: -14.126116752624512
    7. ')],' → logprob: -14.501116752624512
    8. '])' → logprob: -14.626116752624512
    9. ')
' → logprob: -14.751116752624512
    10. ' )' → logprob: -14.876116752624512

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17543840408325195
    2. '<|end|>' → logprob: -2.050438404083252
    3. '    
' → logprob: -4.425438404083252
    4. ' ' → logprob: -5.175438404083252
    5. '
' → logprob: -5.425438404083252
    6. '    ' → logprob: -6.300438404083252
    7. '\n' → logprob: -6.425438404083252
    8. '  
' → logprob: -6.675438404083252
    9. ' 
' → logprob: -7.050438404083252
    10. '  ' → logprob: -7.175438404083252

Token 60: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.35005703568458557
    2. ' for' → logprob: -1.4750570058822632
    3. '   ' → logprob: -2.8500571250915527
    4. '<|end|>' → logprob: -6.100057125091553
    5. ' ' → logprob: -6.350057125091553
    6. '    
' → logprob: -6.975057125091553
    7. ' 
' → logprob: -7.225057125091553
    8. 'dist' → logprob: -7.225057125091553
    9. '    ' → logprob: -7.600057125091553
    10. '	for' → logprob: -8.225056648254395

Token 61: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.012864056043326855
    2. ' i' → logprob: -5.012864112854004
    3. '_' → logprob: -5.137864112854004
    4. ' ' → logprob: -8.637864112854004
    5. 'i' → logprob: -9.887864112854004
    6. '_i' → logprob: -10.387864112854004
    7. ' __' → logprob: -16.137863159179688
    8. ' ' → logprob: -16.262863159179688
    9. ' _
' → logprob: -16.387863159179688
    10. '  ' → logprob: -16.512863159179688

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07961222529411316
    2. 'in' → logprob: -2.5796122550964355
    3. ' ' → logprob: -7.4546122550964355
    4. '	in' → logprob: -9.579611778259277
    5. 'n' → logprob: -10.704611778259277
    6. ',' → logprob: -11.329611778259277
    7. '  ' → logprob: -11.329611778259277
    8. '+' → logprob: -12.579611778259277
    9. 'range' → logprob: -13.079611778259277
    10. ' i' → logprob: -13.142111778259277

Token 63: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16024810075759888
    2. ' range' → logprob: -1.910248041152954
    3. ' ' → logprob: -11.410247802734375
    4. '	range' → logprob: -12.035247802734375
    5. '  ' → logprob: -13.285247802734375
    6. 'r' → logprob: -13.535247802734375
    7. 'rang' → logprob: -13.785247802734375
    8. '(range' → logprob: -14.285247802734375
    9. '   ' → logprob: -14.785247802734375
    10. ')' → logprob: -14.910247802734375

Token 64: '(n' (ID: 2406)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.049858614802360535
    2. '(n' → logprob: -3.049858570098877
    3. '(' → logprob: -6.674858570098877
    4. 'k' → logprob: -12.049859046936035
    5. 'n' → logprob: -14.674859046936035
    6. '(s' → logprob: -14.674859046936035
    7. ' (' → logprob: -15.049859046936035
    8. '(i' → logprob: -15.049859046936035
    9. '(
' → logprob: -15.424859046936035
    10. ' k' → logprob: -15.549859046936035

Token 65: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027108481153845787
    2. '):
' → logprob: -4.277108669281006
    3. '-' → logprob: -4.402108669281006
    4. '   ' → logprob: -8.277108192443848
    5. ')' → logprob: -8.652108192443848
    6. ' -' → logprob: -9.152108192443848
    7. ' ):' → logprob: -10.902108192443848
    8. '**' → logprob: -11.402108192443848
    9. '):
' → logprob: -11.777108192443848
    10. '       ' → logprob: -12.402108192443848

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031171858310699463
    2. '<|end|>' → logprob: -4.281171798706055
    3. ' dist' → logprob: -4.906171798706055
    4. 'dist' → logprob: -4.906171798706055
    5. '	dist' → logprob: -6.656171798706055
    6. '   ' → logprob: -8.406171798706055
    7. '<|end|>' → logprob: -8.531171798706055
    8. '	   ' → logprob: -9.406171798706055
    9. '(dist' → logprob: -10.031171798706055
    10. '_dist' → logprob: -10.031171798706055

Token 67: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.06710179150104523
    2. ' dist' → logprob: -2.8171017169952393
    3. '   ' → logprob: -5.442101955413818
    4. '       ' → logprob: -7.567101955413818
    5. '	dist' → logprob: -8.81710147857666
    6. ' for' → logprob: -10.44210147857666
    7. ' ' → logprob: -10.69210147857666
    8. 'for' → logprob: -10.69210147857666
    9. '_dist' → logprob: -11.81710147857666
    10. '  ' → logprob: -11.94210147857666

Token 68: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007655846420675516
    2. '[' → logprob: -4.882655620574951
    3. '[I' → logprob: -11.13265609741211
    4. '[n' → logprob: -11.75765609741211
    5. '[id' → logprob: -12.50765609741211
    6. '[ii' → logprob: -12.50765609741211
    7. '[input' → logprob: -12.63265609741211
    8. '][' → logprob: -13.00765609741211
    9. '[node' → logprob: -13.00765609741211
    10. ' [' → logprob: -13.50765609741211

Token 69: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.014209231361746788
    2. '[i' → logprob: -4.264209270477295
    3. ']' → logprob: -10.514208793640137
    4. ' ][' → logprob: -11.889208793640137
    5. '[' → logprob: -12.014208793640137
    6. '[I' → logprob: -13.514208793640137
    7. ')[' → logprob: -14.139208793640137
    8. 'i' → logprob: -14.264208793640137
    9. '"][' → logprob: -14.264208793640137
    10. '   ' → logprob: -14.639208793640137

Token 70: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.960946772480384e-05
    2. ' i' → logprob: -9.625099182128906
    3. ')' → logprob: -11.125099182128906
    4. ']' → logprob: -12.000099182128906
    5. ' ' → logprob: -12.250099182128906
    6. '   ' → logprob: -13.000099182128906
    7. ')i' → logprob: -13.500099182128906
    8. ')]' → logprob: -14.375099182128906
    9. '	i' → logprob: -14.375099182128906
    10. '[i' → logprob: -14.750099182128906

Token 71: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014329778496176004
    2. ']=' → logprob: -7.1264328956604
    3. '=' → logprob: -7.8764328956604
    4. ' ]' → logprob: -8.376433372497559
    5. ' =' → logprob: -11.126433372497559
    6. ')' → logprob: -13.251433372497559
    7. '<|end|>' → logprob: -14.251433372497559
    8. ' ' → logprob: -14.751433372497559
    9. '   ' → logprob: -15.501433372497559
    10. ']+=' → logprob: -16.001432418823242

Token 72: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687291741371155
    2. ' =' → logprob: -1.1368728876113892
    3. ' ' → logprob: -14.011873245239258
    4. '=int' → logprob: -14.886873245239258
    5. '＝' → logprob: -15.761873245239258
    6. '.=' → logprob: -16.136873245239258
    7. ' ' → logprob: -16.386873245239258
    8. '<|end|>' → logprob: -16.761873245239258
    9. '=
' → logprob: -17.011873245239258
    10. ' =
' → logprob: -17.136873245239258

Token 73: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. ' ' → logprob: -19.000017166137695
    4. '   ' → logprob: -19.500017166137695
    5. '00' → logprob: -19.500017166137695
    6. '۰' → logprob: -19.750017166137695
    7. '000' → logprob: -20.187517166137695
    8. '０' → logprob: -20.625017166137695
    9. '  ' → logprob: -20.812517166137695
    10. '```' → logprob: -21.062517166137695

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '00' → logprob: -18.0625057220459
    4. '   ' → logprob: -18.1250057220459
    5. '000' → logprob: -18.1250057220459
    6. ' ' → logprob: -18.3125057220459
    7. '۰' → logprob: -18.5625057220459
    8. '０' → logprob: -18.6875057220459
    9. '  ' → logprob: -19.2500057220459
    10. '```' → logprob: -19.5625057220459

Token 75: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8887342810630798
    2. '<|end|>' → logprob: -1.0137343406677246
    3. '
' → logprob: -2.1387343406677246
    4. ' ' → logprob: -3.0137343406677246
    5. '    
' → logprob: -4.138734340667725
    6. ' 
' → logprob: -4.763734340667725
    7. '    ' → logprob: -5.013734340667725
    8. '  
' → logprob: -5.138734340667725
    9. '  ' → logprob: -5.138734340667725
    10. '<|end|>' → logprob: -5.513734340667725

Token 76: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' queries' (ID: 32122)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7249494791030884
    2. ' for' → logprob: -0.8499494791030884
    3. '
' → logprob: -3.224949359893799
    4. '<|end|>' → logprob: -3.974949359893799
    5. '   ' → logprob: -4.474949359893799
    6. '	for' → logprob: -4.724949359893799
    7. '\n' → logprob: -5.849949359893799
    8. '<|end|>' → logprob: -6.474949359893799
    9. ' 
' → logprob: -6.724949359893799
    10. '```' → logprob: -7.099949359893799

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20419827103614807
    2. '=' → logprob: -1.7041982412338257
    3. ',' → logprob: -6.454198360443115
    4. '   ' → logprob: -7.954198360443115
    5. '=[]' → logprob: -8.079197883605957
    6. 'for' → logprob: -8.454197883605957
    7. '.' → logprob: -9.954197883605957
    8. ':' → logprob: -10.079197883605957
    9. '    ' → logprob: -10.454197883605957
    10. '_count' → logprob: -10.704197883605957

Token 79: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.9716812372207642
    2. '[int' → logprob: -1.3466812372207642
    3. ' []' → logprob: -1.8466812372207642
    4. '[k' → logprob: -1.9716812372207642
    5. '[]' → logprob: -3.2216811180114746
    6. '[' → logprob: -3.8466811180114746
    7. 'int' → logprob: -7.721681118011475
    8. ' [[]' → logprob: -7.846681118011475
    9. '[n' → logprob: -7.971681118011475
    10. ' int' → logprob: -8.221681594848633

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46139073371887207
    2. 'for' → logprob: -1.586390733718872
    3. ' for' → logprob: -1.961390733718872
    4. '<|end|>' → logprob: -4.586390495300293
    5. '
' → logprob: -5.086390495300293
    6. '	for' → logprob: -6.086390495300293
    7. ' ' → logprob: -6.461390495300293
    8. '    
' → logprob: -6.711390495300293
    9. ' 
' → logprob: -7.711390495300293
    10. '    ' → logprob: -7.711390495300293

Token 81: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03036022186279297
    2. ' for' → logprob: -3.530360221862793
    3. '   ' → logprob: -7.530360221862793
    4. '	for' → logprob: -9.655360221862793
    5. '\t' → logprob: -12.280360221862793
    6. '```' → logprob: -13.030360221862793
    7. '\' → logprob: -14.280360221862793
    8. ' ' → logprob: -15.030360221862793
    9. '
' → logprob: -15.905360221862793
    10. '    ' → logprob: -16.03036117553711

Token 82: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.04865129664540291
    2. '_' → logprob: -3.0486512184143066
    3. ' ' → logprob: -9.798651695251465
    4. ' i' → logprob: -12.423651695251465
    5. ' range' → logprob: -13.048651695251465
    6. '_range' → logprob: -13.923651695251465
    7. ' in' → logprob: -15.048651695251465
    8. ' ' → logprob: -15.173651695251465
    9. '_i' → logprob: -15.423651695251465
    10. 'range' → logprob: -15.673651695251465

Token 83: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2570633292198181
    2. 'in' → logprob: -1.507063388824463
    3. ' ' → logprob: -5.632063388824463
    4. '_' → logprob: -7.382063388824463
    5. '<|end|>' → logprob: -7.882063388824463
    6. ' _' → logprob: -8.757062911987305
    7. 'i' → logprob: -9.757062911987305
    8. '  ' → logprob: -10.382062911987305
    9. '0' → logprob: -10.382062911987305
    10. 'range' → logprob: -10.507062911987305

Token 84: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002690840628929436
    2. ' range' → logprob: -8.250268936157227
    3. '(range' → logprob: -12.250268936157227
    4. '	range' → logprob: -13.625268936157227
    5. 'input' → logprob: -15.000268936157227
    6. 'ran' → logprob: -15.250268936157227
    7. ')' → logprob: -15.250268936157227
    8. '[' → logprob: -15.750268936157227
    9. 'rang' → logprob: -15.875268936157227
    10. 'rans' → logprob: -16.125268936157227

Token 85: '(k' (ID: 12125)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.013336578384041786
    2. ' k' → logprob: -4.638336658477783
    3. '(k' → logprob: -5.638336658477783
    4. '(' → logprob: -11.888336181640625
    5. ' (' → logprob: -11.888336181640625
    6. ' ' → logprob: -14.263336181640625
    7. '	k' → logprob: -14.888336181640625
    8. 'q' → logprob: -15.638336181640625
    9. '   ' → logprob: -16.263336181640625
    10. '{k' → logprob: -16.513336181640625

Token 86: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015529518714174628
    2. ' ):' → logprob: -7.001553058624268
    3. ')' → logprob: -7.751553058624268
    4. ':' → logprob: -8.75155258178711
    5. ',' → logprob: -10.37655258178711
    6. '):
' → logprob: -11.25155258178711
    7. '():' → logprob: -12.75155258178711
    8. ' )' → logprob: -12.87655258178711
    9. '   ' → logprob: -14.75155258178711
    10. ' ' → logprob: -15.00155258178711

Token 87: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12256878614425659
    2. '    ' → logprob: -2.8725688457489014
    3. '    
' → logprob: -3.8725688457489014
    4. '       ' → logprob: -4.122568607330322
    5. ' ' → logprob: -5.122568607330322
    6. '	   ' → logprob: -5.372568607330322
    7. '<|end|>' → logprob: -5.497568607330322
    8. '
' → logprob: -6.747568607330322
    9. '  ' → logprob: -6.872568607330322
    10. ' 
' → logprob: -7.247568607330322

Token 88: ' tmp' (ID: 8919)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8668559789657593
    2. ' u' → logprob: -1.1168559789657593
    3. 'a' → logprob: -1.7418559789657593
    4. ' s' → logprob: -3.116856098175049
    5. 'u' → logprob: -3.741856098175049
    6. 's' → logprob: -5.116856098175049
    7. ' x' → logprob: -6.741856098175049
    8. ' ' → logprob: -7.491856098175049
    9. 'x' → logprob: -8.11685562133789
    10. ' l' → logprob: -8.99185562133789

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09509944915771484
    2. '=' → logprob: -3.470099449157715
    3. 'a' → logprob: -3.720099449157715
    4. ',' → logprob: -4.220099449157715
    5. '_n' → logprob: -4.845099449157715
    6. 'n' → logprob: -5.720099449157715
    7. 'u' → logprob: -6.470099449157715
    8. '_input' → logprob: -6.720099449157715
    9. '_s' → logprob: -6.970099449157715
    10. 's' → logprob: -7.095099449157715

Token 90: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.043300606310367584
    2. ' list' → logprob: -3.1683006286621094
    3. 'input' → logprob: -9.16830062866211
    4. 'tuple' → logprob: -9.29330062866211
    5. ' tuple' → logprob: -9.54330062866211
    6. ' input' → logprob: -10.54330062866211
    7. 'l' → logprob: -13.41830062866211
    8. 'lis' → logprob: -13.41830062866211
    9. '	list' → logprob: -13.54330062866211
    10. 'map' → logprob: -14.29330062866211

Token 91: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.008638204075396061
    2. '(' → logprob: -4.758638381958008
    3. '(int' → logprob: -10.758638381958008
    4. '(input' → logprob: -13.633638381958008
    5. '(
' → logprob: -14.758638381958008
    6. '()' → logprob: -15.883638381958008
    7. '(

' → logprob: -16.008638381958008
    8. 'map' → logprob: -16.383638381958008
    9. '(m' → logprob: -16.508638381958008
    10. ' map' → logprob: -16.633638381958008

Token 92: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.023274948820471764
    2. '(' → logprob: -3.7732748985290527
    3. '(input' → logprob: -11.523275375366211
    4. '(
' → logprob: -12.148275375366211
    5. '<int' → logprob: -12.148275375366211
    6. '(str' → logprob: -13.148275375366211
    7. ']int' → logprob: -13.398275375366211
    8. '[int' → logprob: -13.648275375366211
    9. '<|end|>' → logprob: -13.648275375366211
    10. '(in' → logprob: -14.023275375366211

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46576428413391113
    2. ',input' → logprob: -1.0907642841339111
    3. '<|end|>' → logprob: -3.465764284133911
    4. ',int' → logprob: -5.840764045715332
    5. '(' → logprob: -6.965764045715332
    6. '(input' → logprob: -8.215764045715332
    7. ')' → logprob: -8.340764045715332
    8. '<|end|>' → logprob: -8.715764045715332
    9. '(),' → logprob: -9.340764045715332
    10. ' ,' → logprob: -9.715764045715332

Token 94: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759435892105103
    2. 'input' → logprob: -0.8259435892105103
    3. ',input' → logprob: -12.950943946838379
    4. ')' → logprob: -15.075943946838379
    5. '(input' → logprob: -15.450943946838379
    6. '	input' → logprob: -15.450943946838379
    7. '_input' → logprob: -15.575943946838379
    8. '<input' → logprob: -15.700943946838379
    9. '=input' → logprob: -15.700943946838379
    10. 'int' → logprob: -16.325942993164062

Token 95: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.3213025744771585e-05
    2. '()' → logprob: -10.375033378601074
    3. '()))' → logprob: -14.625033378601074
    4. ' ().' → logprob: -14.750033378601074
    5. ')' → logprob: -14.875033378601074
    6. '())' → logprob: -15.875033378601074
    7. '(' → logprob: -16.000032424926758
    8. '.readline' → logprob: -16.125032424926758
    9. '()));' → logprob: -16.250032424926758
    10. '.' → logprob: -16.625032424926758

Token 96: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.531315314830863e-06
    2. ' split' → logprob: -13.625003814697266
    3. 'strip' → logprob: -13.875003814697266
    4. 'rstrip' → logprob: -14.500003814697266
    5. '(split' → logprob: -14.750003814697266
    6. 'spl' → logprob: -14.875003814697266
    7. ')' → logprob: -17.875003814697266
    8. '```' → logprob: -18.500003814697266
    9. 'plit' → logprob: -19.125003814697266
    10. ' ' → logprob: -19.375003814697266

Token 97: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.02212543599307537
    2. '))' → logprob: -4.397125244140625
    3. '()' → logprob: -5.147125244140625
    4. '())' → logprob: -6.022125244140625
    5. '()))
' → logprob: -7.147125244140625
    6. '(' → logprob: -7.772125244140625
    7. '()));' → logprob: -9.772125244140625
    8. ')' → logprob: -10.147125244140625
    9. '()))

' → logprob: -12.022125244140625
    10. '()))
' → logprob: -12.397125244140625

Token 98: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06990242004394531
    2. ')' → logprob: -3.4449024200439453
    3. '
' → logprob: -4.319902420043945
    4. '<|end|>' → logprob: -4.444902420043945
    5. '    
' → logprob: -5.569902420043945
    6. '[' → logprob: -6.569902420043945
    7. ' ' → logprob: -6.819902420043945
    8. '    ' → logprob: -7.069902420043945
    9. ')
' → logprob: -7.444902420043945
    10. ' 
' → logprob: -7.819902420043945

Token 99: ' if' (ID: 538)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7182804346084595
    2. ' u' → logprob: -1.5932804346084595
    3. ' if' → logprob: -1.9682804346084595
    4. 'if' (adapté à ' if') → logprob: -3.09328031539917
    5. '   ' → logprob: -3.46828031539917
    6. 'a' → logprob: -4.09328031539917
    7. 'from' → logprob: -4.09328031539917
    8. 's' → logprob: -4.34328031539917
    9. ' from' → logprob: -4.46828031539917
    10. ' s' → logprob: -4.71828031539917

Token 100: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.3126238286495209
    2. ' len' → logprob: -1.5626238584518433
    3. 'tmp' → logprob: -3.0626237392425537
    4. 'len' → logprob: -4.437623977661133
    5. ' ' → logprob: -9.187623977661133
    6. '(tmp' → logprob: -9.687623977661133
    7. '	tmp' → logprob: -10.312623977661133
    8. ' not' → logprob: -10.687623977661133
    9. '(len' → logprob: -10.687623977661133
    10. ' t' → logprob: -11.687623977661133

Token 101: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.416665640543215e-05
    2. ':' → logprob: -11.12503433227539
    3. '[-' → logprob: -11.75003433227539
    4. ' and' → logprob: -12.25003433227539
    5. ' [' → logprob: -13.12503433227539
    6. 'and' → logprob: -13.62503433227539
    7. '==' → logprob: -13.75003433227539
    8. '<|end|>' → logprob: -14.75003433227539
    9. ' ==' → logprob: -15.12503433227539
    10. ' ' → logprob: -15.50003433227539

Token 102: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05318174883723259
    2. '1' → logprob: -3.0531816482543945
    3. '2' → logprob: -5.6781816482543945
    4. ' ' → logprob: -7.4281816482543945
    5. '3' → logprob: -7.8031816482543945
    6. '-' → logprob: -9.428181648254395
    7. '4' → logprob: -10.428181648254395
    8. ']' → logprob: -11.303181648254395
    9. '[' → logprob: -11.803181648254395
    10. '][' → logprob: -11.803181648254395

Token 103: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23623068630695343
    2. ']==' → logprob: -2.1112306118011475
    3. '==' → logprob: -2.8612306118011475
    4. ' ==' → logprob: -3.6112306118011475
    5. ')' → logprob: -5.486230850219727
    6. ' ]' → logprob: -8.361230850219727
    7. ')==' → logprob: -8.611230850219727
    8. '[' → logprob: -8.861230850219727
    9. ' ' → logprob: -9.611230850219727
    10. '=' → logprob: -9.611230850219727

Token 104: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5770232677459717
    2. '==' → logprob: -0.8270232677459717
    3. '=' → logprob: -8.07702350616455
    4. '[' → logprob: -8.57702350616455
    5. ' ' → logprob: -8.82702350616455
    6. ']==' → logprob: -9.32702350616455
    7. ' =' → logprob: -9.70202350616455
    8. '<|end|>' → logprob: -10.07702350616455
    9. ')' → logprob: -10.45202350616455
    10. '```' → logprob: -10.51452350616455

Token 105: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3069774806499481
    2. ' ' → logprob: -1.9319775104522705
    3. '0' → logprob: -2.1819775104522705
    4. '2' → logprob: -5.056977272033691
    5. '-' → logprob: -9.306977272033691
    6. '3' → logprob: -9.556977272033691
    7. ' -' → logprob: -10.869477272033691
    8. '
' → logprob: -10.994477272033691
    9. '4' → logprob: -11.369477272033691
    10. '```' → logprob: -11.619477272033691

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13421347737312317
    2. '0' → logprob: -2.259213447570801
    3. '2' → logprob: -3.884213447570801
    4. '3' → logprob: -7.884213447570801
    5. ''' → logprob: -10.1342134475708
    6. '4' → logprob: -10.1342134475708
    7. '-' → logprob: -10.5092134475708
    8. '`' → logprob: -11.4467134475708
    9. '

' → logprob: -11.5092134475708
    10. '```' → logprob: -11.6342134475708

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028664469718933105
    2. ':
' → logprob: -5.877866268157959
    3. ' and' → logprob: -9.877866744995117
    4. '):' → logprob: -12.002866744995117
    5. 'and' → logprob: -13.252866744995117
    6. '):
' → logprob: -14.627866744995117
    7. ' or' → logprob: -14.877866744995117
    8. ' :' → logprob: -15.127866744995117
    9. '   ' → logprob: -15.377866744995117
    10. ':

' → logprob: -15.377866744995117

Token 108: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.265479177236557
    2. '       ' → logprob: -1.5154792070388794
    3. ' and' → logprob: -5.64047908782959
    4. ',' → logprob: -5.64047908782959
    5. ':
' → logprob: -6.01547908782959
    6. '   ' → logprob: -7.01547908782959
    7. '<|end|>' → logprob: -7.39047908782959
    8. '    ' → logprob: -8.01547908782959
    9. ' :' → logprob: -8.26547908782959
    10. '[' → logprob: -8.26547908782959

Token 109: ' _,' (ID: 18042)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5316526293754578
    2. ' u' → logprob: -2.4066526889801025
    3. ' a' → logprob: -2.9066526889801025
    4. ' dist' → logprob: -3.1566526889801025
    5. ' if' → logprob: -3.2816526889801025
    6. ' for' → logprob: -3.7816526889801025
    7. ' x' → logprob: -3.7816526889801025
    8. ',' → logprob: -3.7816526889801025
    9. ' s' → logprob: -4.156652450561523
    10. '           ' → logprob: -4.281652450561523

Token 110: ' c' (ID: 274)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3993031084537506
    2. 's' → logprob: -1.7743030786514282
    3. 'x' → logprob: -2.1493031978607178
    4. 'u' → logprob: -3.8993031978607178
    5. 'b' → logprob: -5.274302959442139
    6. 'v' → logprob: -5.399302959442139
    7. 'f' → logprob: -5.399302959442139
    8. 'c' → logprob: -5.899302959442139
    9. 'from' → logprob: -7.024302959442139
    10. 'p' → logprob: -7.149302959442139

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0763588473200798
    2. '1' → logprob: -2.9513587951660156
    3. 'u' → logprob: -5.201358795166016
    4. 'x' → logprob: -5.326358795166016
    5. 'a' → logprob: -6.201358795166016
    6. '=' → logprob: -6.326358795166016
    7. 'd' → logprob: -6.701358795166016
    8. ',u' → logprob: -7.201358795166016
    9. ',a' → logprob: -7.576358795166016
    10. 's' → logprob: -7.576358795166016

Token 112: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08271505683660507
    2. 's' → logprob: -3.7077150344848633
    3. 'v' → logprob: -4.457715034484863
    4. 'w' → logprob: -4.707715034484863
    5. 'x' → logprob: -4.957715034484863
    6. 'a' → logprob: -5.332715034484863
    7. 'p' → logprob: -5.332715034484863
    8. 'q' → logprob: -5.707715034484863
    9. 'r' → logprob: -5.832715034484863
    10. 't' → logprob: -5.957715034484863

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005113391671329737
    2. ' =' → logprob: -5.38011360168457
    3. '=' → logprob: -8.38011360168457
    4. ' ,' → logprob: -8.75511360168457
    5. ',w' → logprob: -9.50511360168457
    6. 'w' → logprob: -11.50511360168457
    7. ',l' → logprob: -12.25511360168457
    8. ',_' → logprob: -12.88011360168457
    9. ',v' → logprob: -13.13011360168457
    10. ',x' → logprob: -13.38011360168457

Token 114: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.20848369598388672
    2. 'w' → logprob: -2.0834836959838867
    3. 't' → logprob: -3.7084836959838867
    4. 'l' → logprob: -4.333483695983887
    5. 'cost' → logprob: -4.458483695983887
    6. ' e' → logprob: -4.958483695983887
    7. ' w' → logprob: -6.333483695983887
    8. 'x' → logprob: -6.958483695983887
    9. 'p' → logprob: -7.333483695983887
    10. 'h' → logprob: -7.458483695983887

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12710249423980713
    2. '=' → logprob: -2.1271023750305176
    3. ',' → logprob: -8.752102851867676
    4. ' ' → logprob: -11.752102851867676
    5. ')' → logprob: -13.877102851867676
    6. '   ' → logprob: -14.002102851867676
    7. '  ' → logprob: -14.002102851867676
    8. 'dist' → logprob: -14.502102851867676
    9. 'd' → logprob: -14.627102851867676
    10. '=sys' → logprob: -15.002102851867676

Token 116: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.6326512098312378
    2. 'tmp' → logprob: -0.7576512098312378
    3. ' ' → logprob: -10.507651329040527
    4. 'map' → logprob: -12.257651329040527
    5. '	tmp' → logprob: -12.507651329040527
    6. '(tmp' → logprob: -12.757651329040527
    7. ' map' → logprob: -12.757651329040527
    8. '/tmp' → logprob: -12.882651329040527
    9. '[tmp' → logprob: -13.132651329040527
    10. 't' → logprob: -14.132651329040527

Token 117: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.962190568447113
    2. '           ' → logprob: -1.3371906280517578
    3. '       ' → logprob: -1.8371906280517578
    4. ',' → logprob: -2.837190628051758
    5. '   ' → logprob: -2.837190628051758
    6. '               ' → logprob: -4.087190628051758
    7. ')' → logprob: -4.087190628051758
    8. ':' → logprob: -4.712190628051758
    9. 'dist' → logprob: -4.962190628051758
    10. '=' → logprob: -5.712190628051758

Token 118: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013583675026893616
    2. '           ' → logprob: -5.388583660125732
    3. '       ' → logprob: -5.513583660125732
    4. '<|end|>' → logprob: -6.013583660125732
    5. ' 
' → logprob: -6.763583660125732
    6. '    
' → logprob: -8.13858413696289
    7. '   ' → logprob: -8.13858413696289
    8. '
' → logprob: -8.51358413696289
    9. '  
' → logprob: -8.63858413696289
    10. '            
' → logprob: -9.13858413696289

Token 119: ' c' (ID: 274)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.6447451114654541
    2. '           ' → logprob: -1.269745111465454
    3. ' if' → logprob: -2.269745111465454
    4. 'dist' → logprob: -2.519745111465454
    5. '   ' → logprob: -5.519744873046875
    6. 'if' → logprob: -5.894744873046875
    7. '       ' → logprob: -6.769744873046875
    8. '	dist' → logprob: -6.894744873046875
    9. ' for' → logprob: -7.519744873046875
    10. '            ' → logprob: -8.519744873046875

Token 120: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.4534837603569031
    2. '-' → logprob: -1.0784838199615479
    3. '-=' → logprob: -4.078483581542969
    4. ' -' → logprob: -4.953483581542969
    5. ' ' → logprob: -8.453483581542969
    6. ',' → logprob: -9.203483581542969
    7. '   ' → logprob: -10.328483581542969
    8. '<|end|>' → logprob: -10.703483581542969
    9. '	' → logprob: -11.078483581542969
    10. '    ' → logprob: -11.203483581542969

Token 121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043162284418940544
    2. ' ' → logprob: -7.750431537628174
    3. '   ' → logprob: -15.250432014465332
    4. '```' → logprob: -15.500432014465332
    5. '<|end|>' → logprob: -15.625432014465332
    6. '１' → logprob: -17.250431060791016
    7. '2' → logprob: -18.125431060791016
    8. '۱' → logprob: -18.500431060791016
    9. ' ' → logprob: -18.562931060791016
    10. '  ' → logprob: -18.562931060791016

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.25001335144043
    3. '<|end|>' → logprob: -16.43751335144043
    4. '```' → logprob: -16.62501335144043
    5. '１' → logprob: -17.31251335144043
    6. '১' → logprob: -17.93751335144043
    7. '۱' → logprob: -18.12501335144043
    8. '   ' → logprob: -18.12501335144043
    9. '2' → logprob: -18.25001335144043
    10. '१' → logprob: -18.37501335144043

Token 123: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.4741145372390747
    2. ' d' → logprob: -0.9741145372390747
    3. ' ' → logprob: -11.599114418029785
    4. '   ' → logprob: -11.599114418029785
    5. '	d' → logprob: -11.849114418029785
    6. '  ' → logprob: -12.349114418029785
    7. '           ' → logprob: -12.849114418029785
    8. ' ' → logprob: -13.599114418029785
    9. ',d' → logprob: -14.474114418029785
    10. '       ' → logprob: -14.536614418029785

Token 126: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.007500263396650553
    2. '-=' → logprob: -5.382500171661377
    3. '-' → logprob: -6.007500171661377
    4. ' ' → logprob: -8.382500648498535
    5. '<|end|>' → logprob: -10.132500648498535
    6. ' =' → logprob: -10.382500648498535
    7. ' -' → logprob: -10.382500648498535
    8. '=' → logprob: -10.507500648498535
    9. ')' → logprob: -10.882500648498535
    10. ',' → logprob: -11.007500648498535

Token 127: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008616226725280285
    2. ' ' → logprob: -4.7586164474487305
    3. '           ' → logprob: -14.50861644744873
    4. '```' → logprob: -14.63361644744873
    5. '<|end|>' → logprob: -15.25861644744873
    6. '   ' → logprob: -15.25861644744873
    7. '0' → logprob: -16.758615493774414
    8. ' ' → logprob: -17.071115493774414
    9. '=' → logprob: -17.071115493774414
    10. '2' → logprob: -17.571115493774414

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013929695705883205
    2. ' ' → logprob: -9.000139236450195
    3. '<|end|>' → logprob: -11.625139236450195
    4. '```' → logprob: -13.000139236450195
    5. '146' → logprob: -15.250139236450195
    6. '
' → logprob: -15.500139236450195
    7. '`' → logprob: -15.500139236450195
    8. '126' → logprob: -15.500139236450195
    9. '<|end|>' → logprob: -15.562639236450195
    10. '   ' → logprob: -15.562639236450195

Token 129: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9464313983917236
    2. '
' → logprob: -1.0714313983917236
    3. '<|end|>' → logprob: -1.4464313983917236
    4. '<|end|>' → logprob: -4.9464311599731445
    5. '   ' → logprob: -5.0714311599731445
    6. '       ' → logprob: -5.1964311599731445
    7. ' 
' → logprob: -5.6964311599731445
    8. '            
' → logprob: -6.4464311599731445
    9. ',' → logprob: -6.5714311599731445
    10. 'dist' → logprob: -6.6964311599731445

Token 130: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.039701614528894424
    2. ' if' → logprob: -3.7897017002105713
    3. 'dist' → logprob: -5.289701461791992
    4. ' dist' → logprob: -5.539701461791992
    5. 'if' → logprob: -5.914701461791992
    6. '
' → logprob: -6.039701461791992
    7. '   ' → logprob: -7.164701461791992
    8. '       ' → logprob: -8.164701461791992
    9. '            
' → logprob: -8.164701461791992
    10. ' for' → logprob: -8.789701461791992

Token 131: ' if' (ID: 538)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4361324608325958
    2. 'if' (adapté à ' if') → logprob: -1.8111324310302734
    3. ' dist' → logprob: -2.3111324310302734
    4. ' if' → logprob: -2.5611324310302734
    5. '           ' → logprob: -5.186132431030273
    6. '   ' → logprob: -6.186132431030273
    7. 'e' → logprob: -6.436132431030273
    8. 'w' → logprob: -7.186132431030273
    9. 'cost' → logprob: -7.498632431030273
    10. 'f' → logprob: -7.498632431030273

Token 132: ' e' (ID: 319)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.6143000721931458
    2. 'dist' → logprob: -1.114300012588501
    3. ' e' → logprob: -2.614300012588501
    4. 'e' → logprob: -2.864300012588501
    5. ' not' → logprob: -9.239299774169922
    6. ' ' → logprob: -9.489299774169922
    7. 'd' → logprob: -9.551799774169922
    8. '(dist' → logprob: -9.739299774169922
    9. ' c' → logprob: -10.364299774169922
    10. '	dist' → logprob: -10.489299774169922

Token 133: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4296824336051941
    2. '<' → logprob: -1.0546824932098389
    3. '==' → logprob: -8.179682731628418
    4. ' ==' → logprob: -8.554682731628418
    5. '>' → logprob: -9.804682731628418
    6. ' ' → logprob: -10.054682731628418
    7. ' >' → logprob: -10.179682731628418
    8. ' >=' → logprob: -10.179682731628418
    9. '[' → logprob: -10.304682731628418
    10. '>=' → logprob: -10.429682731628418

Token 134: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.026316672563552856
    2. ' dist' → logprob: -3.6513166427612305
    3. '0' → logprob: -11.40131664276123
    4. '	dist' → logprob: -13.52631664276123
    5. ' ' → logprob: -13.65131664276123
    6. 'inf' → logprob: -14.40131664276123
    7. '10' → logprob: -14.77631664276123
    8. '(dist' → logprob: -15.02631664276123
    9. '=' → logprob: -15.15131664276123
    10. 'INF' → logprob: -15.27631664276123

Token 135: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.750001907348633
    3. 'c' → logprob: -15.125001907348633
    4. '[cur' → logprob: -17.125001907348633
    5. '[d' → logprob: -17.500001907348633
    6. '```' → logprob: -17.500001907348633
    7. '][' → logprob: -17.625001907348633
    8. ')c' → logprob: -17.625001907348633
    9. '[a' → logprob: -17.875001907348633
    10. ' [' → logprob: -18.000001907348633

Token 136: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0007249409682117403
    2. '[d' → logprob: -7.500724792480469
    3. '[c' → logprob: -9.375724792480469
    4. '[' → logprob: -10.250724792480469
    5. ']' → logprob: -10.750724792480469
    6. '"][' → logprob: -11.250724792480469
    7. ' ][' → logprob: -11.750724792480469
    8. 'd' → logprob: -12.750724792480469
    9. ''][' → logprob: -12.750724792480469
    10. '}[' → logprob: -14.500724792480469

Token 137: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.7432603272027336e-06
    2. ' d' → logprob: -13.500001907348633
    3. '][' → logprob: -16.750001907348633
    4. ' ' → logprob: -17.125001907348633
    5. '	d' → logprob: -17.125001907348633
    6. '
' → logprob: -17.500001907348633
    7. ']' → logprob: -17.750001907348633
    8. '   ' → logprob: -17.875001907348633
    9. '```' → logprob: -18.125001907348633
    10. 'e' → logprob: -18.625001907348633

Token 138: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.02992265298962593
    2. ']:
' → logprob: -3.5299227237701416
    3. ':' → logprob: -9.154922485351562
    4. ']' → logprob: -11.029922485351562
    5. ']:
' → logprob: -11.029922485351562
    6. '):' → logprob: -11.654922485351562
    7. '[' → logprob: -12.154922485351562
    8. ':
' → logprob: -12.279922485351562
    9. '"]:' → logprob: -12.904922485351562
    10. ']:

' → logprob: -13.029922485351562

Token 139: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011139309965074062
    2. ':' → logprob: -4.761139392852783
    3. '           ' → logprob: -6.886139392852783
    4. ':
' → logprob: -7.011139392852783
    5. '<|end|>' → logprob: -8.636138916015625
    6. '                
' → logprob: -9.636138916015625
    7. '                   ' → logprob: -9.886138916015625
    8. '       ' → logprob: -10.261138916015625
    9. '):' → logprob: -10.636138916015625
    10. '```' → logprob: -10.636138916015625

Token 140: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.6993443369865417
    2. 'dist' (adapté à ' dist') → logprob: -1.3243443965911865
    3. '               ' → logprob: -1.4493443965911865
    4. '	dist' → logprob: -6.574344158172607
    5. '                   ' → logprob: -7.074344158172607
    6. '   ' → logprob: -9.824344635009766
    7. '           ' → logprob: -10.074344635009766
    8. '       ' → logprob: -10.949344635009766
    9. '```' → logprob: -11.824344635009766
    10. '(dist' → logprob: -12.199344635009766

Token 141: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -7.584239938296378e-06
    2. '[' → logprob: -12.250007629394531
    3. '][' → logprob: -12.875007629394531
    4. '}[' → logprob: -17.00000762939453
    5. '[C' → logprob: -17.25000762939453
    6. '[
' → logprob: -17.25000762939453
    7. '```' → logprob: -17.75000762939453
    8. 'c' → logprob: -18.12500762939453
    9. ' [' → logprob: -18.50000762939453
    10. '[d' → logprob: -18.50000762939453

Token 142: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00031746976310387254
    2. '[c' → logprob: -8.500317573547363
    3. ']' → logprob: -9.250317573547363
    4. '[' → logprob: -11.875317573547363
    5. ' ][' → logprob: -11.875317573547363
    6. '[d' → logprob: -13.750317573547363
    7. ']][' → logprob: -14.250317573547363
    8. '   ' → logprob: -14.625317573547363
    9. '"][' → logprob: -14.875317573547363
    10. '	' → logprob: -15.625317573547363

Token 143: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3425219549390022e-05
    2. ' d' → logprob: -11.62501335144043
    3. 'e' → logprob: -12.87501335144043
    4. '
' → logprob: -13.87501335144043
    5. ']' → logprob: -14.50001335144043
    6. ' ' → logprob: -15.75001335144043
    7. '   ' → logprob: -16.87501335144043
    8. '
' → logprob: -17.00001335144043
    9. '	d' → logprob: -17.37501335144043
    10. '```' → logprob: -17.62501335144043

Token 144: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003980923909693956
    2. ']=' → logprob: -5.628981113433838
    3. ' ]' → logprob: -8.25398063659668
    4. '=' → logprob: -9.50398063659668
    5. ' =' → logprob: -10.00398063659668
    6. ',' → logprob: -15.87898063659668
    7. ')' → logprob: -15.87898063659668
    8. ']
' → logprob: -16.37898063659668
    9. 's' → logprob: -17.00398063659668
    10. '[' → logprob: -17.00398063659668

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313262403011322
    2. '=' → logprob: -1.3132624626159668
    3. '=e' → logprob: -15.813261985778809
    4. ' ' → logprob: -16.313262939453125
    5. ',' → logprob: -16.688262939453125
    6. ')' → logprob: -16.938262939453125
    7. '=int' → logprob: -17.063262939453125
    8. ' =
' → logprob: -17.438262939453125
    9. '.' → logprob: -17.438262939453125
    10. '=cut' → logprob: -17.438262939453125

Token 146: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.029750604182481766
    2. ' e' → logprob: -3.5297505855560303
    3. '	e' → logprob: -15.77975082397461
    4. ' ' → logprob: -18.15475082397461
    5. '```' → logprob: -18.65475082397461
    6. '
' → logprob: -18.90475082397461
    7. ')e' → logprob: -19.02975082397461
    8. '   ' → logprob: -19.02975082397461
    9. '`' → logprob: -19.15475082397461
    10. ' ' → logprob: -19.27975082397461

Token 147: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: '               ' (ID: 506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7794735431671143
    2. '<|end|>' → logprob: -1.0294735431671143
    3. '       ' → logprob: -2.5294735431671143
    4. '               ' → logprob: -3.1544735431671143
    5. 'while' → logprob: -4.154473304748535
    6. '           ' → logprob: -4.404473304748535
    7. ' while' → logprob: -5.279473304748535
    8. 'for' → logprob: -5.279473304748535
    9. '<|end|>' → logprob: -5.404473304748535
    10. ' for' → logprob: -5.529473304748535

Token 149: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.018217843025922775
    2. 'print' → logprob: -4.893218040466309
    3. 'for' → logprob: -4.893218040466309
    4. '   ' → logprob: -6.768218040466309
    5. '               ' → logprob: -6.893218040466309
    6. ' dist' → logprob: -8.018218040466309
    7. '                   ' → logprob: -8.893218040466309
    8. ' for' → logprob: -9.518218040466309
    9. 'import' → logprob: -9.893218040466309
    10. '           ' → logprob: -9.893218040466309

Token 150: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.008478296920657158
    2. '=d' → logprob: -5.633478164672852
    3. '[c' → logprob: -5.883478164672852
    4. '[' → logprob: -6.883478164672852
    5. 'd' → logprob: -7.883478164672852
    6. '=' → logprob: -8.133478164672852
    7. ',d' → logprob: -8.883478164672852
    8. '][' → logprob: -9.508478164672852
    9. ' =' → logprob: -9.508478164672852
    10. 'c' → logprob: -10.508478164672852

Token 151: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0013653546338900924
    2. '[c' → logprob: -6.7513651847839355
    3. ']' → logprob: -9.376365661621094
    4. ' ][' → logprob: -9.751365661621094
    5. '[' → logprob: -10.126365661621094
    6. '"][' → logprob: -13.001365661621094
    7. ')[' → logprob: -13.001365661621094
    8. ' [' → logprob: -14.126365661621094
    9. '```' → logprob: -14.376365661621094
    10. ''][' → logprob: -14.376365661621094

Token 152: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.4121114822482923e-06
    2. ' c' → logprob: -13.125003814697266
    3. ')c' → logprob: -15.000003814697266
    4. '	c' → logprob: -15.500003814697266
    5. '<|end|>' → logprob: -15.875003814697266
    6. '[c' → logprob: -16.000003814697266
    7. '[' → logprob: -16.125003814697266
    8. '
' → logprob: -16.125003814697266
    9. ',c' → logprob: -16.375003814697266
    10. 'с' → logprob: -16.375003814697266

Token 153: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010133992182090878
    2. ']=' → logprob: -7.251013278961182
    3. ' ]' → logprob: -8.25101375579834
    4. '=' → logprob: -10.25101375579834
    5. '[' → logprob: -13.00101375579834
    6. ' =' → logprob: -13.25101375579834
    7. '][' → logprob: -13.62601375579834
    8. ']==' → logprob: -14.50101375579834
    9. '`]' → logprob: -14.75101375579834
    10. ']+=' → logprob: -15.75101375579834

Token 154: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694312632083893
    2. ' =' → logprob: -2.1269431114196777
    3. ']' → logprob: -12.251943588256836
    4. '[' → logprob: -12.876943588256836
    5. ']=' → logprob: -12.876943588256836
    6. ')' → logprob: -13.501943588256836
    7. '<|end|>' → logprob: -13.501943588256836
    8. '```' → logprob: -14.876943588256836
    9. ')=' → logprob: -15.126943588256836
    10. ' ' → logprob: -15.126943588256836

Token 155: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.02054235339164734
    2. ' e' → logprob: -3.8955423831939697
    3. ' ' → logprob: -15.27054214477539
    4. '	e' → logprob: -15.52054214477539
    5. '<|end|>' → logprob: -17.64554214477539
    6. '   ' → logprob: -17.89554214477539
    7. ' ' → logprob: -18.39554214477539
    8. '_e' → logprob: -18.52054214477539
    9. '```' → logprob: -18.77054214477539
    10. ')e' → logprob: -19.14554214477539

Token 156: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29428616166114807
    2. '<|end|>' → logprob: -1.9192861318588257
    3. '       ' → logprob: -3.0442862510681152
    4. '               ' → logprob: -3.7942862510681152
    5. '
' → logprob: -3.7942862510681152
    6. '           ' → logprob: -5.044286251068115
    7. '<|end|>' → logprob: -5.919286251068115
    8. ' for' → logprob: -6.169286251068115
    9. 'for' → logprob: -6.794286251068115
    10. 'while' → logprob: -6.919286251068115

Token 157: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12260254472494125
    2. '<|end|>' → logprob: -2.4976024627685547
    3. '       ' → logprob: -3.6226024627685547
    4. '<|end|>' → logprob: -6.372602462768555
    5. '           ' → logprob: -7.122602462768555
    6. '...' → logprob: -7.122602462768555
    7. '               ' → logprob: -7.497602462768555
    8. '	continue' → logprob: -7.622602462768555
    9. 'continue' → logprob: -7.997602462768555
    10. '
' → logprob: -8.372602462768555

Token 158: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7862514853477478
    2. '
' → logprob: -1.1612515449523926
    3. 'elif' → logprob: -2.4112515449523926
    4. '       ' → logprob: -3.0362515449523926
    5. '\n' → logprob: -3.9112515449523926
    6. '<|end|>' → logprob: -3.9112515449523926
    7. 'else' → logprob: -4.286251544952393
    8. '	elif' → logprob: -4.786251544952393
    9. ' elif' → logprob: -5.036251544952393
    10. '```' → logprob: -5.536251544952393

Token 159: ' Floyd' (ID: 76639)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1353363990783691
    2. ' for' → logprob: -1.3853363990783691
    3. 'else' → logprob: -2.010336399078369
    4. '   ' → logprob: -2.885336399078369
    5. 'import' → logprob: -3.010336399078369
    6. ' else' → logprob: -3.385336399078369
    7. 'from' → logprob: -3.635336399078369
    8. 'continue' → logprob: -3.760336399078369
    9. 'elif' → logprob: -3.885336399078369
    10. '           ' → logprob: -4.135336399078369

Token 160: '-W' (ID: 14439)
  Prédit: 'War'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'War' → logprob: -1.015402913093567
    2. '-W' → logprob: -1.140402913093567
    3. '   ' → logprob: -1.515402913093567
    4. '<|end|>' → logprob: -4.390402793884277
    5. ' for' → logprob: -4.515402793884277
    6. ' War' → logprob: -4.515402793884277
    7. ' ' → logprob: -4.765402793884277
    8. ')' → logprob: -4.765402793884277
    9. 'W' → logprob: -4.765402793884277
    10. '-war' → logprob: -5.265402793884277

Token 161: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.0005849646404385567
    2. 'arshal' → logprob: -7.875585079193115
    3. '```' → logprob: -9.500584602355957
    4. 'a' → logprob: -10.375584602355957
    5. 'ars' → logprob: -10.500584602355957
    6. 'ар' → logprob: -11.625584602355957
    7. '``' → logprob: -12.000584602355957
    8. 'War' → logprob: -12.125584602355957
    9. '           ' → logprob: -12.813084602355957
    10. '                   ' → logprob: -13.000584602355957

Token 162: 'shall' (ID: 30275)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.43081894516944885
    2. 'shall' → logprob: -1.0558189153671265
    3. 's' → logprob: -6.805819034576416
    4. '```' → logprob: -7.680819034576416
    5. 'ar' → logprob: -9.180818557739258
    6. 'll' → logprob: -9.930818557739258
    7. 'hall' → logprob: -10.055818557739258
    8. '--' → logprob: -10.305818557739258
    9. '{' → logprob: -10.680818557739258
    10. '``' → logprob: -10.680818557739258

Token 163: ' update' (ID: 4027)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21789580583572388
    2. '<|end|>' → logprob: -2.217895746231079
    3. '   ' → logprob: -3.217895746231079
    4. '       ' → logprob: -4.467895984649658
    5. '           ' → logprob: -4.842895984649658
    6. ' for' → logprob: -4.842895984649658
    7. '    
' → logprob: -5.967895984649658
    8. '\n' → logprob: -5.967895984649658
    9. '  
' → logprob: -6.092895984649658
    10. ' 
' → logprob: -6.092895984649658

Token 164: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23285062611103058
    2. '       ' → logprob: -2.7328505516052246
    3. ' for' → logprob: -2.8578505516052246
    4. 'for' → logprob: -3.2328505516052246
    5. '
' → logprob: -4.232850551605225
    6. '               ' → logprob: -4.482850551605225
    7. '   ' → logprob: -4.732850551605225
    8. '	for' → logprob: -5.982850551605225
    9. '<|end|>' → logprob: -6.107850551605225
    10. '    
' → logprob: -6.607850551605225

Token 165: ' new' (ID: 620)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.08747664839029312
    2. ' c' → logprob: -3.0874767303466797
    3. 'the' → logprob: -4.71247673034668
    4. 'dist' → logprob: -4.71247673034668
    5. 'new' → logprob: -5.46247673034668
    6. 'all' → logprob: -5.71247673034668
    7. ' the' → logprob: -6.21247673034668
    8. ' new' → logprob: -6.83747673034668
    9. 'updated' → logprob: -6.96247673034668
    10. ' dist' → logprob: -7.33747673034668

Token 166: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.9187459945678711
    2. 'edge' → logprob: -1.043745994567871
    3. 'edges' → logprob: -2.168745994567871
    4. ' edges' → logprob: -2.668745994567871
    5. 'k' → logprob: -3.918745994567871
    6. 'e' → logprob: -4.668745994567871
    7. ' k' → logprob: -5.043745994567871
    8. 'dist' → logprob: -5.293745994567871
    9. 'paths' → logprob: -5.793745994567871
    10. 'distance' → logprob: -5.918745994567871

Token 167: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25817546248435974
    2. '<|end|>' → logprob: -2.0081753730773926
    3. '    
' → logprob: -3.6331753730773926
    4. '  
' → logprob: -4.133175373077393
    5. '\n' → logprob: -4.633175373077393
    6. ' 
' → logprob: -4.883175373077393
    7. '           ' → logprob: -5.133175373077393
    8. '   ' → logprob: -5.258175373077393
    9. '       ' → logprob: -5.383175373077393
    10. 'for' → logprob: -5.883175373077393

Token 168: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6616900563240051
    2. ' for' → logprob: -1.7866899967193604
    3. '
' → logprob: -2.1616899967193604
    4. '       ' → logprob: -2.4116899967193604
    5. 'for' → logprob: -3.0366899967193604
    6. '           ' → logprob: -4.0366902351379395
    7. ' 
' → logprob: -4.4116902351379395
    8. '    ' → logprob: -4.5366902351379395
    9. '    
' → logprob: -4.6616902351379395
    10. '<|end|>' → logprob: -5.2866902351379395

Token 169: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4279767870903015
    2. 'for' (adapté à ' for') → logprob: -1.3029768466949463
    3. '   ' → logprob: -3.0529768466949463
    4. '       ' → logprob: -3.6779768466949463
    5. '           ' → logprob: -6.052976608276367
    6. '    
' → logprob: -7.677976608276367
    7. '    ' → logprob: -7.927976608276367
    8. '	for' → logprob: -8.052976608276367
    9. '
' → logprob: -8.177976608276367
    10. '               ' → logprob: -10.177976608276367

Token 170: ' i' (ID: 575)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9597808122634888
    2. 'm' → logprob: -1.0847808122634888
    3. 'i' → logprob: -1.8347808122634888
    4. 'u' → logprob: -2.459780693054199
    5. 'x' → logprob: -3.834780693054199
    6. 'v' → logprob: -5.709780693054199
    7. 'j' → logprob: -5.834780693054199
    8. 't' → logprob: -6.084780693054199
    9. 'a' → logprob: -6.334780693054199
    10. 'w' → logprob: -7.334780693054199

Token 171: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11291675269603729
    2. 'in' → logprob: -2.2379167079925537
    3. '	in' → logprob: -9.987916946411133
    4. ' ' → logprob: -10.612916946411133
    5. 'n' → logprob: -11.862916946411133
    6. ' i' → logprob: -12.612916946411133
    7. ',' → logprob: -12.987916946411133
    8. '0' → logprob: -13.487916946411133
    9. '	' → logprob: -13.862916946411133
    10. ' ,' → logprob: -13.987916946411133

Token 172: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018162231892347336
    2. ' range' → logprob: -4.018162250518799
    3. '(range' → logprob: -11.51816177368164
    4. '	range' → logprob: -13.76816177368164
    5. 'rang' → logprob: -15.01816177368164
    6. 'r' → logprob: -15.01816177368164
    7. 'ran' → logprob: -15.64316177368164
    8. ')' → logprob: -15.76816177368164
    9. 'n' → logprob: -15.89316177368164
    10. '   ' → logprob: -16.76816177368164

Token 173: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002502535644453019
    2. '(n' → logprob: -8.375249862670898
    3. ' n' → logprob: -11.000249862670898
    4. '	n' → logprob: -13.500249862670898
    5. ')n' → logprob: -13.750249862670898
    6. ',n' → logprob: -15.500249862670898
    7. '[n' → logprob: -15.750249862670898
    8. '<|end|>' → logprob: -16.2502498626709
    9. '_n' → logprob: -16.8752498626709
    10. '<n' → logprob: -17.5002498626709

Token 174: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023354489356279373
    2. '):
' → logprob: -3.7733545303344727
    3. ')' → logprob: -9.648354530334473
    4. ':' → logprob: -10.773354530334473
    5. '   ' → logprob: -12.273354530334473
    6. ' ):' → logprob: -12.523354530334473
    7. '):
' → logprob: -12.898354530334473
    8. '):

' → logprob: -13.398354530334473
    9. '**' → logprob: -13.523354530334473
    10. '+' → logprob: -13.523354530334473

Token 175: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4287028908729553
    2. ' for' → logprob: -1.5537028312683105
    3. '               ' → logprob: -2.9287028312683105
    4. 'for' → logprob: -2.9287028312683105
    5. '<|end|>' → logprob: -4.0537028312683105
    6. '	for' → logprob: -5.5537028312683105
    7. '   ' → logprob: -5.8037028312683105
    8. '           ' → logprob: -6.3037028312683105
    9. '	       ' → logprob: -6.4287028312683105
    10. '	' → logprob: -7.3037028312683105

Token 176: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03815119341015816
    2. ' for' → logprob: -3.288151264190674
    3. '   ' → logprob: -9.163150787353516
    4. '	for' → logprob: -12.663150787353516
    5. 'if' → logprob: -14.288150787353516
    6. '```' → logprob: -15.038150787353516
    7. ' ' → logprob: -15.288150787353516
    8. '                   ' → logprob: -15.663150787353516
    9. '               ' → logprob: -16.038150787353516
    10. '       ' → logprob: -16.038150787353516

Token 177: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003178306156769395
    2. ' j' → logprob: -5.753178119659424
    3. '	j' → logprob: -14.503178596496582
    4. '```' → logprob: -16.128177642822266
    5. 'for' → logprob: -17.253177642822266
    6. '_j' → logprob: -17.378177642822266
    7. '   ' → logprob: -17.628177642822266
    8. ' ' → logprob: -17.753177642822266
    9. 'x' → logprob: -19.003177642822266
    10. '
' → logprob: -19.128177642822266

Token 178: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021410871297121048
    2. 'in' → logprob: -3.8964109420776367
    3. '<|end|>' → logprob: -7.396410942077637
    4. ' ' → logprob: -8.521410942077637
    5. '	in' → logprob: -10.896410942077637
    6. '<|end|>' → logprob: -11.021410942077637
    7. ' =' → logprob: -13.146410942077637
    8. '		' → logprob: -13.271410942077637
    9. '	' → logprob: -13.271410942077637
    10. '=' → logprob: -13.396410942077637

Token 179: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2014147937297821
    2. ' range' → logprob: -1.7014148235321045
    3. '(range' → logprob: -13.576415061950684
    4. 'n' → logprob: -16.326414108276367
    5. '	range' → logprob: -16.951414108276367
    6. ' ' → logprob: -17.951414108276367
    7. '   ' → logprob: -19.451414108276367
    8. 'rang' → logprob: -19.951414108276367
    9. '(n' → logprob: -20.076414108276367
    10. 'r' → logprob: -20.326414108276367

Token 180: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.003620981238782406
    2. 'n' → logprob: -5.6286211013793945
    3. 'range' → logprob: -12.003621101379395
    4. '(' → logprob: -12.128621101379395
    5. ' (' → logprob: -12.128621101379395
    6. ' n' → logprob: -13.003621101379395
    7. '[n' → logprob: -14.378621101379395
    8. ' range' → logprob: -15.378621101379395
    9. '
' → logprob: -16.003620147705078
    10. ')' → logprob: -16.128620147705078

Token 181: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09560976922512054
    2. '):
' → logprob: -2.470609664916992
    3. ')' → logprob: -5.720609664916992
    4. ':' → logprob: -6.095609664916992
    5. '+' → logprob: -8.470609664916992
    6. '<|end|>' → logprob: -8.595609664916992
    7. ' ):' → logprob: -9.345609664916992
    8. '):

' → logprob: -9.470609664916992
    9. '**' → logprob: -9.470609664916992
    10. '<|end|>' → logprob: -9.595609664916992

Token 182: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05082656815648079
    2. '                       ' → logprob: -3.0508265495300293
    3. '               ' → logprob: -7.175826549530029
    4. '                    ' → logprob: -7.675826549530029
    5. ' if' → logprob: -9.050827026367188
    6. '           ' → logprob: -9.050827026367188
    7. '                ' → logprob: -9.175827026367188
    8. '                    
' → logprob: -9.425827026367188
    9. '<|end|>' → logprob: -9.550827026367188
    10. ' ' → logprob: -9.925827026367188

Token 183: ' nd' (ID: 5914)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.543061375617981
    2. 'if' → logprob: -1.043061375617981
    3. ' if' → logprob: -2.9180612564086914
    4. ' dist' → logprob: -4.418061256408691
    5. '                   ' → logprob: -8.043061256408691
    6. '                       ' → logprob: -9.418061256408691
    7. '   ' → logprob: -10.168061256408691
    8. '               ' → logprob: -10.793061256408691
    9. '                           ' → logprob: -10.918061256408691
    10. 'new' → logprob: -11.168061256408691

Token 184: ' =' (ID: 314)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.0479680672287941
    2. '=' → logprob: -3.1729681491851807
    3. ' =' → logprob: -5.422967910766602
    4. 'istance' → logprob: -8.047967910766602
    5. 'w' → logprob: -9.172967910766602
    6. 'i' → logprob: -10.672967910766602
    7. 'ists' → logprob: -10.797967910766602
    8. ']' → logprob: -11.047967910766602
    9. 'IST' → logprob: -11.172967910766602
    10. 'st' → logprob: -11.422967910766602

Token 185: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0013574945041909814
    2. ' min' → logprob: -6.751357555389404
    3. 'dist' → logprob: -8.626357078552246
    4. '   ' → logprob: -12.501357078552246
    5. '	min' → logprob: -13.251357078552246
    6. 'max' → logprob: -13.626357078552246
    7. ' dist' → logprob: -14.876357078552246
    8. '```' → logprob: -15.876357078552246
    9. '[min' → logprob: -16.001358032226562
    10. '
' → logprob: -16.251358032226562

Token 186: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.008690099231898785
    2. 'dist' → logprob: -4.758689880371094
    3. '(' → logprob: -9.883689880371094
    4. '(
' → logprob: -10.758689880371094
    5. ' dist' → logprob: -12.883689880371094
    6. '	dist' → logprob: -14.633689880371094
    7. '```' → logprob: -17.008689880371094
    8. 'Dist' → logprob: -17.383689880371094
    9. '(

' → logprob: -17.383689880371094
    10. '(distance' → logprob: -17.758689880371094

Token 187: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.723352049040841e-06
    2. '[' → logprob: -12.875004768371582
    3. '[j' → logprob: -13.625004768371582
    4. '[n' → logprob: -15.625004768371582
    5. ' [' → logprob: -15.625004768371582
    6. 'i' → logprob: -15.875004768371582
    7. '```' → logprob: -15.875004768371582
    8. ')' → logprob: -16.750003814697266
    9. '][' → logprob: -16.750003814697266
    10. '
' → logprob: -16.750003814697266

Token 188: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07849400490522385
    2. '[j' → logprob: -2.828494071960449
    3. '[d' → logprob: -5.078494071960449
    4. '[i' → logprob: -5.203494071960449
    5. '[c' → logprob: -5.703494071960449
    6. '[' → logprob: -6.828494071960449
    7. '[k' → logprob: -9.95349407196045
    8. '[n' → logprob: -10.07849407196045
    9. ']' → logprob: -10.20349407196045
    10. ' [' → logprob: -10.95349407196045

Token 189: 'c' (ID: 66)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6094772219657898
    2. 'd' → logprob: -1.2344772815704346
    3. 'c' → logprob: -1.8594772815704346
    4. 'i' → logprob: -5.1094770431518555
    5. 'k' → logprob: -6.2344770431518555
    6. '][' → logprob: -6.9844770431518555
    7. 'n' → logprob: -8.734477043151855
    8. ']' → logprob: -8.734477043151855
    9. '
' → logprob: -9.234477043151855
    10. '[j' → logprob: -9.609477043151855

Token 190: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012625131756067276
    2. ']+' → logprob: -4.387625217437744
    3. '],' → logprob: -9.137624740600586
    4. ' ]' → logprob: -11.887624740600586
    5. '+' → logprob: -15.137624740600586
    6. ']]' → logprob: -15.637624740600586
    7. '+]' → logprob: -16.012624740600586
    8. '[' → logprob: -16.137624740600586
    9. ']
' → logprob: -16.512624740600586
    10. ']+=' → logprob: -17.137624740600586

Token 191: 'e' (ID: 68)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.03487125411629677
    2. 'e' → logprob: -3.4098713397979736
    3. ' dist' → logprob: -6.7848711013793945
    4. ' e' → logprob: -9.409871101379395
    5. '(dist' → logprob: -12.659871101379395
    6. '   ' → logprob: -12.784871101379395
    7. '	dist' → logprob: -13.659871101379395
    8. ' ' → logprob: -14.159871101379395
    9. '
' → logprob: -14.409871101379395
    10. '  ' → logprob: -14.534871101379395

Token 192: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00043472214019857347
    2. ' +' → logprob: -7.750434875488281
    3. '+d' → logprob: -13.000434875488281
    4. '+j' → logprob: -13.875434875488281
    5. '+
' → logprob: -15.250434875488281
    6. ']+' → logprob: -16.25043487548828
    7. 'dist' → logprob: -16.37543487548828
    8. ',' → logprob: -16.50043487548828
    9. '+n' → logprob: -16.75043487548828
    10. ')+' → logprob: -17.25043487548828

Token 193: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0002334568416699767
    2. ' dist' → logprob: -8.37523365020752
    3. '	dist' → logprob: -13.12523365020752
    4. '   ' → logprob: -14.87523365020752
    5. '(dist' → logprob: -15.12523365020752
    6. '.dist' → logprob: -16.000232696533203
    7. 'd' → logprob: -16.875232696533203
    8. '_dist' → logprob: -17.750232696533203
    9. ' ' → logprob: -17.875232696533203
    10. '  ' → logprob: -18.000232696533203

Token 194: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.038045622408390045
    2. 'd' → logprob: -3.288045644760132
    3. '   ' → logprob: -12.913045883178711
    4. ' d' → logprob: -15.163045883178711
    5. '[
' → logprob: -15.288045883178711
    6. '[' → logprob: -15.413045883178711
    7. '	d' → logprob: -15.538045883178711
    8. '[j' → logprob: -15.913045883178711
    9. '``' → logprob: -16.16304588317871
    10. '```' → logprob: -16.16304588317871

Token 195: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.008630638010799885
    2. '][' → logprob: -4.758630752563477
    3. '[' → logprob: -11.383630752563477
    4. 'j' → logprob: -13.008630752563477
    5. ' [' → logprob: -14.133630752563477
    6. '[i' → logprob: -14.758630752563477
    7. ']' → logprob: -14.883630752563477
    8. '
' → logprob: -15.008630752563477
    9. ',j' → logprob: -15.883630752563477
    10. '[
' → logprob: -16.258630752563477

Token 196: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.277553620748222e-05
    2. '[j' → logprob: -9.750062942504883
    3. ' j' → logprob: -12.625062942504883
    4. '
' → logprob: -14.875062942504883
    5. '	j' → logprob: -15.125062942504883
    6. '   ' → logprob: -15.375062942504883
    7. '```' → logprob: -16.625062942504883
    8. ',j' → logprob: -16.750062942504883
    9. '][' → logprob: -17.375062942504883
    10. ' ' → logprob: -17.750062942504883

Token 197: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001198562909848988
    2. ' ,' → logprob: -6.876198768615723
    3. ',
' → logprob: -9.876198768615723
    4. '],' → logprob: -10.376198768615723
    5. 'dist' → logprob: -10.501198768615723
    6. ',d' → logprob: -10.751198768615723
    7. '),' → logprob: -11.501198768615723
    8. ')' → logprob: -12.251198768615723
    9. ',n' → logprob: -12.501198768615723
    10. ']' → logprob: -12.876198768615723

Token 198: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0789194256067276
    2. ' dist' → logprob: -2.5789194107055664
    3. 'min' → logprob: -11.578919410705566
    4. '	dist' → logprob: -11.953919410705566
    5. '   ' → logprob: -12.453919410705566
    6. 'nd' → logprob: -12.953919410705566
    7. ' ' → logprob: -13.453919410705566
    8. ' min' → logprob: -13.453919410705566
    9. '(dist' → logprob: -13.578919410705566
    10. '    ' → logprob: -13.703919410705566

Token 199: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.875001907348633
    3. 'i' → logprob: -15.875001907348633
    4. '[
' → logprob: -16.250001907348633
    5. '[I' → logprob: -16.500001907348633
    6. '```' → logprob: -16.625001907348633
    7. '[j' → logprob: -17.000001907348633
    8. '<|end|>' → logprob: -17.375001907348633
    9. '[user' → logprob: -17.500001907348633
    10. '][' → logprob: -17.875001907348633

Token 200: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03939887136220932
    2. '[d' → logprob: -3.5393989086151123
    3. '[c' → logprob: -4.914398670196533
    4. '[' → logprob: -6.789398670196533
    5. '[j' → logprob: -7.414398670196533
    6. '[i' → logprob: -8.289399147033691
    7. ']' → logprob: -9.414399147033691
    8. '[s' → logprob: -10.414399147033691
    9. '}[' → logprob: -10.539399147033691
    10. ' ][' → logprob: -10.539399147033691

Token 201: 'd' (ID: 67)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6486936211585999
    2. 'd' → logprob: -0.7736936211585999
    3. 'c' → logprob: -4.398693561553955
    4. 'i' → logprob: -5.648693561553955
    5. '
' → logprob: -10.273694038391113
    6. ' d' → logprob: -10.898694038391113
    7. 'dj' → logprob: -10.898694038391113
    8. ' j' → logprob: -11.148694038391113
    9. 'a' → logprob: -11.273694038391113
    10. ']' → logprob: -11.773694038391113

Token 202: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.015682265162467957
    2. ']+' → logprob: -4.390682220458984
    3. '+c' → logprob: -6.640682220458984
    4. '+j' → logprob: -7.015682220458984
    5. ' +' → logprob: -7.765682220458984
    6. '}+' → logprob: -8.390682220458984
    7. ')+' → logprob: -8.515682220458984
    8. '+]' → logprob: -10.015682220458984
    9. '+n' → logprob: -11.265682220458984
    10. '+
' → logprob: -11.515682220458984

Token 203: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0004320996522437781
    2. ' e' → logprob: -7.750432014465332
    3. '
' → logprob: -14.875432014465332
    4. ' ' → logprob: -15.125432014465332
    5. 'c' → logprob: -15.125432014465332
    6. '   ' → logprob: -15.625432014465332
    7. '```' → logprob: -16.00043296813965
    8. '	e' → logprob: -16.50043296813965
    9. '1' → logprob: -17.00043296813965
    10. '+' → logprob: -17.12543296813965

Token 204: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.816093228830141e-06
    2. ' +' → logprob: -12.87500286102295
    3. ']+' → logprob: -17.375001907348633
    4. ')+' → logprob: -17.750001907348633
    5. '+[' → logprob: -18.000001907348633
    6. '+</' → logprob: -18.125001907348633
    7. '+
' → logprob: -18.500001907348633
    8. 'dist' → logprob: -18.625001907348633
    9. '[' → logprob: -18.875001907348633
    10. '+j' → logprob: -18.875001907348633

Token 205: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0001149867384810932
    2. 'c' → logprob: -9.250115394592285
    3. ' dist' → logprob: -11.000115394592285
    4. '(dist' → logprob: -14.125115394592285
    5. '	dist' → logprob: -14.500115394592285
    6. '   ' → logprob: -15.250115394592285
    7. '[' → logprob: -15.750115394592285
    8. '[c' → logprob: -16.00011444091797
    9. '```' → logprob: -16.62511444091797
    10. '               ' → logprob: -17.00011444091797

Token 206: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.5048530030981055e-06
    2. 'c' → logprob: -13.500001907348633
    3. '```' → logprob: -18.000001907348633
    4. '[j' → logprob: -18.250001907348633
    5. '	c' → logprob: -18.750001907348633
    6. '[' → logprob: -19.625001907348633
    7. '
' → logprob: -19.750001907348633
    8. '(c' → logprob: -19.750001907348633
    9. '``' → logprob: -19.875001907348633
    10. '   ' → logprob: -20.750001907348633

Token 207: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1007256805896759
    2. '[j' → logprob: -2.3507256507873535
    3. ']' → logprob: -8.225726127624512
    4. '[' → logprob: -8.725726127624512
    5. '[i' → logprob: -10.225726127624512
    6. '])' → logprob: -11.225726127624512
    7. ' ][' → logprob: -11.475726127624512
    8. '"][' → logprob: -12.475726127624512
    9. 'j' → logprob: -12.850726127624512
    10. '+' → logprob: -12.850726127624512

Token 208: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.088346359931165e-07
    2. ' j' → logprob: -14.375000953674316
    3. '[j' → logprob: -15.625000953674316
    4. ')' → logprob: -17.375
    5. 'i' → logprob: -17.375
    6. '
' → logprob: -17.5
    7. '```' → logprob: -17.875
    8. '])' → logprob: -18.375
    9. '	j' → logprob: -18.375
    10. ']' → logprob: -18.625

Token 209: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.005897268652915955
    2. ')' → logprob: -5.380897045135498
    3. '])
' → logprob: -6.880897045135498
    4. ']' → logprob: -9.130897521972656
    5. ')
' → logprob: -10.505897521972656
    6. ' ])' → logprob: -10.630897521972656
    7. '))' → logprob: -11.005897521972656
    8. ',' → logprob: -11.130897521972656
    9. ')])' → logprob: -11.255897521972656
    10. '],' → logprob: -11.380897521972656

Token 210: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06974900513887405
    2. ')' → logprob: -3.694749116897583
    3. '<|end|>' → logprob: -4.069748878479004
    4. ')
' → logprob: -4.819748878479004
    5. '                    
' → logprob: -5.569748878479004
    6. '<|end|>' → logprob: -5.569748878479004
    7. '                       ' → logprob: -6.569748878479004
    8. '               ' → logprob: -6.569748878479004
    9. '
' → logprob: -6.944748878479004
    10. '                           ' → logprob: -7.569748878479004

Token 211: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12552675604820251
    2. '                   ' → logprob: -2.2505266666412354
    3. ' if' → logprob: -4.7505269050598145
    4. 'dist' → logprob: -5.6255269050598145
    5. '       ' → logprob: -9.250526428222656
    6. '           ' → logprob: -9.375526428222656
    7. '                       ' → logprob: -9.500526428222656
    8. '   ' → logprob: -10.125526428222656
    9. '               ' → logprob: -10.250526428222656
    10. '
' → logprob: -11.750526428222656

Token 212: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.5698041319847107
    2. 'nd' → logprob: -0.9448041319847107
    3. ' dist' → logprob: -3.4448041915893555
    4. 'dist' → logprob: -4.3198041915893555
    5. '   ' → logprob: -8.819804191589355
    6. '(nd' → logprob: -10.194804191589355
    7. '	dist' → logprob: -10.694804191589355
    8. '
' → logprob: -10.694804191589355
    9. '    ' → logprob: -10.819804191589355
    10. '                   ' → logprob: -11.319804191589355

Token 213: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5760514140129089
    2. ' <' → logprob: -0.8260514140129089
    3. '<|end|>' → logprob: -9.451051712036133
    4. '[' → logprob: -11.451051712036133
    5. '<int' → logprob: -12.576051712036133
    6. ')' → logprob: -12.576051712036133
    7. ' ' → logprob: -13.451051712036133
    8. '```' → logprob: -13.701051712036133
    9. '<|end|>' → logprob: -14.076051712036133
    10. ')<' → logprob: -14.076051712036133

Token 214: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -7.493430894101039e-05
    2. ' dist' → logprob: -9.500075340270996
    3. '	dist' → logprob: -18.25007438659668
    4. '(dist' → logprob: -19.00007438659668
    5. '   ' → logprob: -21.00007438659668
    6. 'Dist' → logprob: -21.12507438659668
    7. '.dist' → logprob: -21.37507438659668
    8. '_dist' → logprob: -21.50007438659668
    9. '```' → logprob: -21.75007438659668
    10. '
' → logprob: -22.00007438659668

Token 215: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.125
    3. '[' → logprob: -17.25
    4. 'i' → logprob: -18.75
    5. '[
' → logprob: -19.25
    6. '[j' → logprob: -19.375
    7. '   ' → logprob: -20.0
    8. '[I' → logprob: -20.375
    9. '][' → logprob: -20.5
    10. '\[' → logprob: -20.75

Token 216: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07030840963125229
    2. '[j' → logprob: -2.6953084468841553
    3. '[i' → logprob: -8.195308685302734
    4. ']' → logprob: -9.695308685302734
    5. '[' → logprob: -11.320308685302734
    6. ' ][' → logprob: -11.695308685302734
    7. 'j' → logprob: -12.695308685302734
    8. '"][' → logprob: -13.445308685302734
    9. '   ' → logprob: -13.445308685302734
    10. '
' → logprob: -13.695308685302734

Token 217: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.320199877838604e-07
    2. ' j' → logprob: -15.875
    3. '[j' → logprob: -16.375
    4. '
' → logprob: -16.5
    5. ']' → logprob: -18.0
    6. '][' → logprob: -18.5
    7. '```' → logprob: -19.125
    8. '	j' → logprob: -19.75
    9. '   ' → logprob: -20.625
    10. ',j' → logprob: -20.75

Token 218: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.7020719051361084
    2. ']:
' → logprob: -0.7020719051361084
    3. ':
' → logprob: -5.5770721435546875
    4. ':' → logprob: -6.0770721435546875
    5. '                       ' → logprob: -7.0770721435546875
    6. ']' → logprob: -7.4520721435546875
    7. '                   ' → logprob: -7.7020721435546875
    8. '):
' → logprob: -7.9520721435546875
    9. '):' → logprob: -8.577072143554688
    10. ']:
' → logprob: -9.452072143554688

Token 219: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0008877566433511674
    2. '                           ' → logprob: -7.875887870788574
    3. '                   ' → logprob: -8.625887870788574
    4. '       ' → logprob: -9.000887870788574
    5. '               ' → logprob: -9.750887870788574
    6. '                        
' → logprob: -10.250887870788574
    7. '                               ' → logprob: -10.375887870788574
    8. '                        ' → logprob: -10.375887870788574
    9. '           ' → logprob: -10.875887870788574
    10. '```' → logprob: -11.250887870788574

Token 220: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.050316013395786285
    2. ' dist' → logprob: -3.050316095352173
    3. '                       ' → logprob: -7.175315856933594
    4. '                           ' → logprob: -7.175315856933594
    5. '                               ' → logprob: -8.675315856933594
    6. '	dist' → logprob: -11.300315856933594
    7. '   ' → logprob: -12.300315856933594
    8. '                   ' → logprob: -12.925315856933594
    9. '           ' → logprob: -13.925315856933594
    10. '                                   ' → logprob: -14.050315856933594

Token 221: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3782830137643032e-05
    2. 'i' → logprob: -12.00001335144043
    3. '][' → logprob: -12.37501335144043
    4. '[' → logprob: -13.12501335144043
    5. '[j' → logprob: -14.50001335144043
    6. '```' → logprob: -15.12501335144043
    7. '[
' → logprob: -15.25001335144043
    8. ']' → logprob: -16.00001335144043
    9. ' [' → logprob: -16.37501335144043
    10. '[I' → logprob: -17.25001335144043

Token 222: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0017401513177901506
    2. '[j' → logprob: -6.501739978790283
    3. ']' → logprob: -8.876740455627441
    4. '[i' → logprob: -9.626740455627441
    5. '[' → logprob: -10.751740455627441
    6. ' ][' → logprob: -12.501740455627441
    7. ']][' → logprob: -13.751740455627441
    8. '```' → logprob: -13.876740455627441
    9. '"][' → logprob: -14.251740455627441
    10. 'j' → logprob: -14.376740455627441

Token 223: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.2664456789934775e-06
    2. ' j' → logprob: -14.375000953674316
    3. '[j' → logprob: -14.750000953674316
    4. '
' → logprob: -15.375000953674316
    5. ']' → logprob: -17.125001907348633
    6. '	j' → logprob: -17.500001907348633
    7. '```' → logprob: -17.500001907348633
    8. '][' → logprob: -18.250001907348633
    9. ',j' → logprob: -18.875001907348633
    10. 'i' → logprob: -19.000001907348633

Token 224: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005689514800906181
    2. '=' → logprob: -5.63068962097168
    3. ']=' → logprob: -6.38068962097168
    4. ' =' → logprob: -7.88068962097168
    5. ' ]' → logprob: -11.13068962097168
    6. ')' → logprob: -15.50568962097168
    7. ',' → logprob: -16.38068962097168
    8. '   ' → logprob: -17.25568962097168
    9. '']' → logprob: -17.38068962097168
    10. '<|end|>' → logprob: -17.38068962097168

Token 225: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002476016292348504
    2. ' =' → logprob: -6.002476215362549
    3. ']=' → logprob: -15.87747573852539
    4. ']' → logprob: -16.00247573852539
    5. '.=' → logprob: -16.62747573852539
    6. '=

' → logprob: -17.75247573852539
    7. '=
' → logprob: -17.87747573852539
    8. ')' → logprob: -18.75247573852539
    9. ')=' → logprob: -19.00247573852539
    10. '＝' → logprob: -19.25247573852539

Token 226: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.014164329506456852
    2. ' nd' → logprob: -4.264164447784424
    3. '(nd' → logprob: -15.389163970947266
    4. '
' → logprob: -16.139163970947266
    5. 'rd' → logprob: -16.264163970947266
    6. '_nd' → logprob: -16.514163970947266
    7. 'ng' → logprob: -16.639163970947266
    8. 'nt' → logprob: -17.139163970947266
    9. 'nds' → logprob: -17.139163970947266
    10. 'ndl' → logprob: -17.389163970947266

Token 227: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 228: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 229: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.8624622225761414
    2. 'elif' → logprob: -1.2374622821807861
    3. '   ' → logprob: -1.9874622821807861
    4. ' else' → logprob: -2.987462282180786
    5. '    ' → logprob: -3.612462282180786
    6. '       ' → logprob: -3.612462282180786
    7. ' elif' → logprob: -4.237462043762207
    8. '<|end|>' → logprob: -4.237462043762207
    9. ')' → logprob: -5.862462043762207
    10. '        ' → logprob: -6.487462043762207

Token 230: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6807252168655396
    2. '       ' → logprob: -1.3057252168655396
    3. ':
' → logprob: -2.30572509765625
    4. ',' → logprob: -2.80572509765625
    5. '   ' → logprob: -3.30572509765625
    6. '[' → logprob: -4.18072509765625
    7. ' :' → logprob: -6.18072509765625
    8. '{' → logprob: -6.30572509765625
    9. '           ' → logprob: -6.80572509765625
    10. ' if' → logprob: -7.05572509765625

Token 231: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6716471314430237
    2. ' _,' → logprob: -1.546647071838379
    3. '   ' → logprob: -1.796647071838379
    4. '_,' → logprob: -2.421647071838379
    5. ',' → logprob: -4.546647071838379
    6. ' ,' → logprob: -6.171647071838379
    7. '[' → logprob: -6.671647071838379
    8. ' ' → logprob: -6.921647071838379
    9. '0' → logprob: -7.046647071838379
    10. ' _' → logprob: -7.171647071838379

Token 232: ' _,' (ID: 18042)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' (adapté à ' _,') → logprob: -0.2145625203847885
    2. 'queries' → logprob: -2.33956241607666
    3. ' _,' → logprob: -3.33956241607666
    4. ' queries' → logprob: -3.46456241607666
    5. '   ' → logprob: -3.58956241607666
    6. 'query' → logprob: -8.21456241607666
    7. 'c' → logprob: -8.33956241607666
    8. '__,' → logprob: -8.46456241607666
    9. ',' → logprob: -8.71456241607666
    10. '           ' → logprob: -8.83956241607666

Token 233: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3262031376361847
    2. 'c' → logprob: -1.7012031078338623
    3. 's' → logprob: -3.0762031078338623
    4. 'x' → logprob: -3.0762031078338623
    5. 'u' → logprob: -6.826203346252441
    6. 'e' → logprob: -6.951203346252441
    7. 'q' → logprob: -7.201203346252441
    8. 'f' → logprob: -8.701203346252441
    9. 'v' → logprob: -8.826203346252441
    10. 'b' → logprob: -9.576203346252441

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010724655585363507
    2. '=' → logprob: -7.251072406768799
    3. ' =' → logprob: -9.126072883605957
    4. ',b' → logprob: -9.251072883605957
    5. ' ,' → logprob: -9.376072883605957
    6. ',a' → logprob: -10.251072883605957
    7. 'a' → logprob: -11.126072883605957
    8. '<|end|>' → logprob: -11.251072883605957
    9. 'b' → logprob: -12.251072883605957
    10. ' ' → logprob: -14.251072883605957

Token 235: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00014001218369230628
    2. ' b' → logprob: -8.875140190124512
    3. '   ' → logprob: -16.500139236450195
    4. ' ' → logprob: -17.375139236450195
    5. '	b' → logprob: -17.625139236450195
    6. ',b' → logprob: -17.875139236450195
    7. 'a' → logprob: -18.000139236450195
    8. '    ' → logprob: -18.250139236450195
    9. '```' → logprob: -18.500139236450195
    10. 's' → logprob: -18.625139236450195

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31331226229667664
    2. '=' → logprob: -1.313312292098999
    3. ',' → logprob: -10.188312530517578
    4. '   ' → logprob: -11.813312530517578
    5. '=b' → logprob: -13.313312530517578
    6. '=a' → logprob: -14.063312530517578
    7. 'a' → logprob: -14.313312530517578
    8. ' ' → logprob: -14.438312530517578
    9. 'b' → logprob: -14.813312530517578
    10. '       ' → logprob: -14.813312530517578

Token 237: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.6931511759757996
    2. 'tmp' → logprob: -0.6931511759757996
    3. '/tmp' → logprob: -13.693151473999023
    4. '	tmp' → logprob: -13.818151473999023
    5. '_tmp' → logprob: -14.318151473999023
    6. '$tmp' → logprob: -14.693151473999023
    7. '(tmp' → logprob: -15.318151473999023
    8. '[tmp' → logprob: -15.818151473999023
    9. 'map' → logprob: -16.068151473999023
    10. ' ' → logprob: -16.318151473999023

Token 238: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4225384294986725
    2. '<|end|>' → logprob: -1.67253839969635
    3. '           ' → logprob: -1.92253839969635
    4. '            
' → logprob: -6.0475382804870605
    5. 'a' → logprob: -6.4225382804870605
    6. '<|end|>' → logprob: -6.5475382804870605
    7. '   ' → logprob: -7.0475382804870605
    8. ',' → logprob: -7.5475382804870605
    9. '  
' → logprob: -7.5475382804870605
    10. '       ' → logprob: -7.7975382804870605

Token 239: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3759901821613312
    2. ' a' → logprob: -2.000990152359009
    3. ' ' → logprob: -2.125990152359009
    4. '<|end|>' → logprob: -3.500990152359009
    5. 'a' → logprob: -4.000990390777588
    6. '            ' → logprob: -5.250990390777588
    7. '   ' → logprob: -6.625990390777588
    8. ' 
' → logprob: -7.125990390777588
    9. '<|end|>' → logprob: -7.875990390777588
    10. '    ' → logprob: -7.875990390777588

Token 240: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.045316360890865326
    2. ' a' → logprob: -3.170316457748413
    3. '           ' → logprob: -6.295316219329834
    4. '   ' → logprob: -7.920316219329834
    5. '       ' → logprob: -9.545316696166992
    6. ' if' → logprob: -11.170316696166992
    7. 'if' → logprob: -11.545316696166992
    8. '    ' → logprob: -13.170316696166992
    9. 'print' → logprob: -13.545316696166992
    10. '	a' → logprob: -13.545316696166992

Token 241: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.06852729618549347
    2. '-=' → logprob: -2.8185272216796875
    3. '-' → logprob: -5.0685272216796875
    4. '=' → logprob: -9.318527221679688
    5. ' -' → logprob: -9.693527221679688
    6. ',' → logprob: -10.193527221679688
    7. ' ' → logprob: -11.193527221679688
    8. '           ' → logprob: -11.818527221679688
    9. ' ,' → logprob: -12.193527221679688
    10. ' =' → logprob: -12.443527221679688

Token 242: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017024369444698095
    2. ' ' → logprob: -6.376702308654785
    3. '```' → logprob: -16.5017032623291
    4. '<|end|>' → logprob: -16.5017032623291
    5. '   ' → logprob: -17.0017032623291
    6. '１' → logprob: -17.6892032623291
    7. '0' → logprob: -18.3142032623291
    8. '=' → logprob: -18.3767032623291
    9. ' ' → logprob: -18.6892032623291
    10. '۱' → logprob: -18.8142032623291

Token 243: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '<|end|>' → logprob: -18.6250057220459
    4. '-' → logprob: -19.5000057220459
    5. '```' → logprob: -19.5625057220459
    6. '１' → logprob: -19.7500057220459
    7. '   ' → logprob: -19.7500057220459
    8. '۱' → logprob: -20.5625057220459
    9. '
' → logprob: -20.8750057220459
    10. '১' → logprob: -21.2500057220459

Token 244: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.44101816415786743
    2. '<|end|>' → logprob: -1.0660181045532227
    3. '
' → logprob: -4.816018104553223
    4. '<|end|>' → logprob: -6.441018104553223
    5. ' 
' → logprob: -7.316018104553223
    6. '            
' → logprob: -7.441018104553223
    7. '            ' → logprob: -8.316018104553223
    8. 'b' → logprob: -8.316018104553223
    9. '          ' → logprob: -9.066018104553223
    10. ',' → logprob: -9.316018104553223

Token 245: '           ' (ID: 352)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5778596997261047
    2. '           ' → logprob: -0.8278596997261047
    3. ' b' → logprob: -6.452859878540039
    4. '```' → logprob: -9.077859878540039
    5. '<|end|>' → logprob: -9.577859878540039
    6. '	b' → logprob: -10.327859878540039
    7. ' ' → logprob: -10.452859878540039
    8. '          ' → logprob: -10.452859878540039
    9. '            ' → logprob: -10.952859878540039
    10. '   ' → logprob: -11.827859878540039

Token 246: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -5.200166469876422e-06
    2. ' b' → logprob: -12.625004768371582
    3. 'print' → logprob: -13.375004768371582
    4. '           ' → logprob: -15.125004768371582
    5. '   ' → logprob: -17.7500057220459
    6. ' print' → logprob: -18.6250057220459
    7. '       ' → logprob: -19.0000057220459
    8. 'if' → logprob: -19.7500057220459
    9. '               ' → logprob: -20.8750057220459
    10. '	b' → logprob: -21.1250057220459

Token 247: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.029050175100564957
    2. '-=' → logprob: -3.65405011177063
    3. '-' → logprob: -5.904050350189209
    4. '=' → logprob: -12.15404987335205
    5. ' -' → logprob: -13.02904987335205
    6. ' ' → logprob: -13.40404987335205
    7. '<|end|>' → logprob: -13.40404987335205
    8. ')' → logprob: -13.52904987335205
    9. '   ' → logprob: -13.65404987335205
    10. '[' → logprob: -13.65404987335205

Token 248: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '```' → logprob: -17.000051498413086
    4. '   ' → logprob: -18.250051498413086
    5. '           ' → logprob: -18.375051498413086
    6. '0' → logprob: -18.875051498413086
    7. '<|end|>' → logprob: -19.125051498413086
    8. '
' → logprob: -19.500051498413086
    9. '-' → logprob: -19.750051498413086
    10. ')' → logprob: -20.312551498413086

Token 249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -18.375001907348633
    4. '<|end|>' → logprob: -19.312501907348633
    5. '0' → logprob: -20.062501907348633
    6. '１' → logprob: -20.250001907348633
    7. '۱' → logprob: -20.312501907348633
    8. '-' → logprob: -20.625001907348633
    9. '   ' → logprob: -20.687501907348633
    10. '2' → logprob: -21.187501907348633

Token 250: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016039647161960602
    2. '
' → logprob: -4.641039848327637
    3. 'print' → logprob: -5.891039848327637
    4. '<|end|>' → logprob: -6.641039848327637
    5. '   ' → logprob: -7.391039848327637
    6. 'if' → logprob: -7.516039848327637
    7. ' if' → logprob: -7.891039848327637
    8. '            
' → logprob: -8.391039848327637
    9. '```' → logprob: -8.766039848327637
    10. ' print' → logprob: -9.266039848327637

Token 251: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00589703768491745
    2. 'print' → logprob: -5.380897045135498
    3. '```' → logprob: -7.005897045135498
    4. ' print' → logprob: -8.63089656829834
    5. '   ' → logprob: -9.63089656829834
    6. 'if' → logprob: -10.13089656829834
    7. '
' → logprob: -10.25589656829834
    8. '       ' → logprob: -10.38089656829834
    9. ' if' → logprob: -11.38089656829834
    10. '            
' → logprob: -13.25589656829834

Token 252: ' queries' (ID: 32122)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.32128143310546875
    2. 'if' → logprob: -1.3212814331054688
    3. '           ' → logprob: -5.571281433105469
    4. 'res' → logprob: -5.696281433105469
    5. 'ans' → logprob: -7.571281433105469
    6. 'result' → logprob: -8.821281433105469
    7. 'answer' → logprob: -9.571281433105469
    8. '```' → logprob: -10.446281433105469
    9. ' if' → logprob: -10.946281433105469
    10. '       ' → logprob: -11.071281433105469

Token 253: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00026419671485200524
    2. '.' → logprob: -8.250264167785645
    3. '.push' → logprob: -14.250264167785645
    4. '.app' → logprob: -14.250264167785645
    5. '.extend' → logprob: -14.625264167785645
    6. '.setdefault' → logprob: -15.375264167785645
    7. 'append' → logprob: -15.625264167785645
    8. '.Append' → logprob: -15.750264167785645
    9. '.ap' → logprob: -15.875264167785645
    10. '.add' → logprob: -16.12526512145996

Token 254: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0015771172475069761
    2. '(b' → logprob: -6.751576900482178
    3. '(' → logprob: -8.501577377319336
    4. '(a' → logprob: -8.501577377319336
    5. '([' → logprob: -14.876577377319336
    6. '(
' → logprob: -16.251577377319336
    7. '((_' → logprob: -17.501577377319336
    8. '(q' → logprob: -18.876577377319336
    9. '(ab' → logprob: -19.001577377319336
    10. 'b' → logprob: -19.001577377319336

Token 255: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.723352049040841e-06
    2. ' a' → logprob: -12.375004768371582
    3. '(a' → logprob: -15.125004768371582
    4. '   ' → logprob: -16.250003814697266
    5. ''a' → logprob: -16.625003814697266
    6. '(' → logprob: -17.875003814697266
    7. ')' → logprob: -18.125003814697266
    8. ')a' → logprob: -18.250003814697266
    9. '1' → logprob: -19.625003814697266
    10. ' ' → logprob: -19.750003814697266

Token 256: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10024365782737732
    2. ',b' → logprob: -2.35024356842041
    3. ' ,' → logprob: -10.22524356842041
    4. ',
' → logprob: -14.72524356842041
    5. 'b' → logprob: -14.97524356842041
    6. ' b' → logprob: -18.350244522094727
    7. '‌,' → logprob: -19.350244522094727
    8. ',d' → logprob: -19.350244522094727
    9. ',n' → logprob: -19.475244522094727
    10. ',k' → logprob: -19.725244522094727

Token 257: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0013348824577406049
    2. ')' → logprob: -6.6263346672058105
    3. '))
' → logprob: -11.876335144042969
    4. ',' → logprob: -13.501335144042969
    5. ')))' → logprob: -15.251335144042969
    6. '),' → logprob: -16.00133514404297
    7. ' ))' → logprob: -16.50133514404297
    8. '));' → logprob: -16.75133514404297
    9. ')
' → logprob: -17.12633514404297
    10. '))

' → logprob: -18.00133514404297

Token 258: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002338144404347986
    2. '   ' → logprob: -9.12523365020752
    3. ' for' → logprob: -9.12523365020752
    4. '```' → logprob: -11.12523365020752
    5. '    
' → logprob: -14.50023365020752
    6. 'print' → logprob: -15.37523365020752
    7. '
' → logprob: -16.375234603881836
    8. '	for' → logprob: -16.500234603881836
    9. 'else' → logprob: -16.500234603881836
    10. 'while' → logprob: -16.625234603881836

Token 259: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -8.77627644513268e-06
    2. ' for' → logprob: -11.750008583068848
    3. '   ' → logprob: -14.625008583068848
    4. '```' → logprob: -16.250009536743164
    5. 'from' → logprob: -16.375009536743164
    6. '#' → logprob: -16.750009536743164
    7. 'print' → logprob: -16.875009536743164
    8. 'import' → logprob: -17.875009536743164
    9. '	for' → logprob: -19.250009536743164
    10. '    
' → logprob: -19.250009536743164

Token 260: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004868926480412483
    2. ' a' → logprob: -5.379868984222412
    3. '(a' → logprob: -8.379868507385254
    4. 'q' → logprob: -11.504868507385254
    5. ' (' → logprob: -12.629868507385254
    6. '	a' → logprob: -13.504868507385254
    7. '(q' → logprob: -14.004868507385254
    8. '   ' → logprob: -14.129868507385254
    9. ' ' → logprob: -14.129868507385254
    10. 'qa' → logprob: -15.129868507385254

Token 261: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.5760079622268677
    2. ',' → logprob: -0.8260079622268677
    3. 'b' → logprob: -9.701007843017578
    4. ' ,' → logprob: -11.951007843017578
    5. '_,' → logprob: -14.576007843017578
    6. '```' → logprob: -16.326007843017578
    7. ',_' → logprob: -16.451007843017578
    8. ',s' → logprob: -16.701007843017578
    9. ',d' → logprob: -17.201007843017578
    10. ',a' → logprob: -17.701007843017578

Token 262: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5760382413864136
    2. 'in' → logprob: -0.8260382413864136
    3. ',' → logprob: -9.576038360595703
    4. '   ' → logprob: -11.076038360595703
    5. '	in' → logprob: -11.951038360595703
    6. ',in' → logprob: -12.701038360595703
    7. '  ' → logprob: -13.951038360595703
    8. ':' → logprob: -14.576038360595703
    9. '_in' → logprob: -14.826038360595703
    10. ')' → logprob: -14.951038360595703

Token 263: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.1602243334054947
    2. ' queries' → logprob: -1.9102243185043335
    3. 'query' → logprob: -15.410223960876465
    4. 'requests' → logprob: -17.91022491455078
    5. '_queries' → logprob: -18.03522491455078
    6. 'questions' → logprob: -18.16022491455078
    7. ' ' → logprob: -18.53522491455078
    8. 'Queries' → logprob: -18.91022491455078
    9. 'quer' → logprob: -19.28522491455078
    10. '   ' → logprob: -19.78522491455078

Token 264: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005246091168373823
    2. ':
' → logprob: -5.255246162414551
    3. '):' → logprob: -12.50524616241455
    4. ',' → logprob: -12.75524616241455
    5. '       ' → logprob: -13.63024616241455
    6. '   ' → logprob: -13.63024616241455
    7. ':
' → logprob: -14.13024616241455
    8. '):
' → logprob: -14.25524616241455
    9. ':

' → logprob: -15.00524616241455
    10. '<|end|>' → logprob: -15.25524616241455

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.166338137816638e-05
    2. '   ' → logprob: -10.750031471252441
    3. ' print' → logprob: -12.625031471252441
    4. 'print' → logprob: -12.875031471252441
    5. '```' → logprob: -13.000031471252441
    6. '
' → logprob: -13.875031471252441
    7. '<|end|>' → logprob: -14.750031471252441
    8. '        
' → logprob: -15.875031471252441
    9. '	   ' → logprob: -16.000032424926758
    10. '           ' → logprob: -16.000032424926758

Token 266: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.6709701418876648
    2. 'if' → logprob: -0.9209701418876648
    3. '       ' → logprob: -2.4209702014923096
    4. ' if' → logprob: -7.0459699630737305
    5. '   ' → logprob: -7.1709699630737305
    6. ' print' → logprob: -8.79596996307373
    7. '           ' → logprob: -11.79596996307373
    8. '```' → logprob: -11.79596996307373
    9. '	if' → logprob: -12.54596996307373
    10. '	print' → logprob: -13.04596996307373

Token 267: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.0005961624556221068
    2. '(' → logprob: -7.750596046447754
    3. '(-' → logprob: -8.750596046447754
    4. '("' → logprob: -12.500596046447754
    5. '('' → logprob: -13.625596046447754
    6. 'dist' → logprob: -14.250596046447754
    7. '(
' → logprob: -14.750596046447754
    8. '((' → logprob: -15.000596046447754
    9. '(""' → logprob: -15.125596046447754
    10. '()' → logprob: -15.500596046447754

Token 268: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -9.491498531133402e-06
    2. 'a' → logprob: -11.625009536743164
    3. ')[' → logprob: -15.000009536743164
    4. ')a' → logprob: -16.000009536743164
    5. ')' → logprob: -17.875009536743164
    6. '[
' → logprob: -18.375009536743164
    7. '[' → logprob: -18.750009536743164
    8. '```' → logprob: -19.125009536743164
    9. '[b' → logprob: -19.625009536743164
    10. '	a' → logprob: -19.625009536743164

Token 269: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.018282802775502205
    2. '[b' → logprob: -4.018282890319824
    3. 'b' → logprob: -9.143282890319824
    4. ']' → logprob: -11.393282890319824
    5. '[' → logprob: -12.018282890319824
    6. ' ][' → logprob: -12.393282890319824
    7. '```' → logprob: -12.768282890319824
    8. '   ' → logprob: -15.018282890319824
    9. '"][' → logprob: -15.518282890319824
    10. '[a' → logprob: -15.643282890319824

Token 270: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.128163257315464e-07
    2. ' b' → logprob: -15.375
    3. ')b' → logprob: -19.125
    4. '	b' → logprob: -19.5
    5. '[b' → logprob: -21.375
    6. '>b' → logprob: -21.625
    7. '   ' → logprob: -21.875
    8. ',b' → logprob: -22.75
    9. ' ' → logprob: -23.0
    10. '[' → logprob: -23.25

Token 271: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07147832959890366
    2. ' if' → logprob: -2.6964783668518066
    3. '])' → logprob: -6.571478366851807
    4. 'if' → logprob: -9.321477890014648
    5. '})' → logprob: -10.821477890014648
    6. ' )' → logprob: -11.071477890014648
    7. ']' → logprob: -11.821477890014648
    8. ' or' → logprob: -12.946477890014648
    9. '))' → logprob: -13.446477890014648
    10. '	if' → logprob: -14.196477890014648

Token 272: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4754405915737152
    2. 'if' → logprob: -0.9754406213760376
    3. ')' → logprob: -6.600440502166748
    4. '	if' → logprob: -13.725440979003906
    5. '   ' → logprob: -14.725440979003906
    6. 'end' → logprob: -14.725440979003906
    7. '()' → logprob: -15.600440979003906
    8. '    ' → logprob: -15.975440979003906
    9. ' ' → logprob: -15.975440979003906
    10. '```' → logprob: -15.975440979003906

Token 273: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0007099286303855479
    2. ' dist' → logprob: -7.2507100105285645
    3. '	dist' → logprob: -18.875709533691406
    4. '(dist' → logprob: -19.250709533691406
    5. '.dist' → logprob: -22.375709533691406
    6. '   ' → logprob: -22.875709533691406
    7. '_dist' → logprob: -23.000709533691406
    8. 'Dist' → logprob: -24.125709533691406
    9. 'd' → logprob: -24.125709533691406
    10. '```' → logprob: -24.250709533691406

Token 274: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -3.547789674485102e-05
    2. 'a' → logprob: -10.250035285949707
    3. '[' → logprob: -17.375036239624023
    4. '[
' → logprob: -18.250036239624023
    5. '[b' → logprob: -18.375036239624023
    6. '```' → logprob: -18.875036239624023
    7. '<a' → logprob: -19.125036239624023
    8. '
' → logprob: -20.000036239624023
    9. '   ' → logprob: -20.750036239624023
    10. '[u' → logprob: -21.250036239624023

Token 275: '][' (ID: 2696)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.014359298162162304
    2. 'b' → logprob: -4.514359474182129
    3. '][' → logprob: -5.889359474182129
    4. '[a' → logprob: -7.639359474182129
    5. '[' → logprob: -10.389359474182129
    6. '[
' → logprob: -12.264359474182129
    7. 'a' → logprob: -12.389359474182129
    8. '```' → logprob: -12.639359474182129
    9. ']' → logprob: -12.889359474182129
    10. ' [' → logprob: -13.264359474182129

Token 276: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.5048530030981055e-06
    2. 'a' → logprob: -14.500001907348633
    3. ' b' → logprob: -14.500001907348633
    4. ']' → logprob: -15.250001907348633
    5. '```' → logprob: -15.875001907348633
    6. '[b' → logprob: -17.000001907348633
    7. '	b' → logprob: -17.125001907348633
    8. '   ' → logprob: -17.375001907348633
    9. '[' → logprob: -17.750001907348633
    10. '
' → logprob: -18.125001907348633

Token 277: ']!=' (ID: 85780)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.27023613452911377
    2. '<' → logprob: -1.5202361345291138
    3. ' !=' → logprob: -4.020236015319824
    4. ' <' → logprob: -9.020236015319824
    5. ']!=' → logprob: -10.020236015319824
    6. '()!=' → logprob: -11.770236015319824
    7. ')!=' → logprob: -12.145236015319824
    8. '<=' → logprob: -13.145236015319824
    9. '<>' → logprob: -13.395236015319824
    10. '!=-' → logprob: -13.520236015319824

Token 278: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -4.320199877838604e-07
    2. ' INF' → logprob: -15.125
    3. '_INF' → logprob: -18.375
    4. '
' → logprob: -18.625
    5. '-INF' → logprob: -18.625
    6. '   ' → logprob: -18.625
    7. ' ' → logprob: -19.25
    8. '	' → logprob: -19.75
    9. '  ' → logprob: -20.25
    10. 'inf' → logprob: -20.625

Token 279: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.251930296421051
    2. 'else' → logprob: -1.5019302368164062
    3. '	else' → logprob: -14.001930236816406
    4. ' ' → logprob: -16.251930236816406
    5. ')' → logprob: -16.626930236816406
    6. '```' → logprob: -16.626930236816406
    7. '        ' → logprob: -17.251930236816406
    8. '   ' → logprob: -17.251930236816406
    9. '    ' → logprob: -17.501930236816406
    10. '-' → logprob: -17.626930236816406

Token 280: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.8889261304575484e-06
    2. ' -' → logprob: -12.500003814697266
    3. '```' → logprob: -16.125003814697266
    4. '-print' → logprob: -18.000003814697266
    5. '\-' → logprob: -18.500003814697266
    6. '-distance' → logprob: -18.625003814697266
    7. '   ' → logprob: -19.000003814697266
    8. '0' → logprob: -19.125003814697266
    9. '-im' → logprob: -19.375003814697266
    10. 'print' → logprob: -19.375003814697266

Token 281: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '１' → logprob: -18.875
    3. ' ' → logprob: -20.0
    4. '2' → logprob: -20.375
    5. '۱' → logprob: -20.8125
    6. '১' → logprob: -21.3125
    7. '' → logprob: -21.5
    8. '```' → logprob: -21.6875
    9. '10' → logprob: -21.875
    10. '१' → logprob: -21.9375

Token 282: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.250000953674316
    3. ')
' → logprob: -15.875000953674316
    4. '))' → logprob: -16.0
    5. ')`' → logprob: -17.0
    6. '`)' → logprob: -17.625
    7. '())' → logprob: -18.0
    8. ')}' → logprob: -18.375
    9. '})' → logprob: -18.625
    10. '   ' → logprob: -18.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 280
Tokens correctement prédits (1ère position, stricte): 138
Tokens correctement prédits (1ère position, avec adaptation): 152
Tokens correctement prédits (top 10): 252
Précision stricte (1ère position): 49.29%
Précision adaptée (1ère position): 54.29%
Précision (top 10): 90.00%
================================================================================
