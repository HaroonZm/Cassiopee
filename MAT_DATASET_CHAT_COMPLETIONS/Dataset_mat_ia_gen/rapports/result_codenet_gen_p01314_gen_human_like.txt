================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    N = int(input())
    if N == 0:
        break
    count = 0
    for start in range(1, N):
        total = 0
        for end in range(start, N):
            total += end
            if total == N and end - start + 1 >= 2:
                count += 1
                break
            elif total > N:
                break
    print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5137425661087036
    2. '    ' → logprob: -2.013742446899414
    3. ' ' → logprob: -2.638742446899414
    4. '    
' → logprob: -3.013742446899414
    5. '\n' → logprob: -3.138742446899414
    6. '\' → logprob: -3.388742446899414
    7. ' 
' → logprob: -4.013742446899414
    8. '```' → logprob: -4.388742446899414
    9. '  
' → logprob: -4.888742446899414
    10. '     
' → logprob: -5.013742446899414

Token 4: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01033273246139288
    2. '    ' → logprob: -4.7603325843811035
    3. '```' → logprob: -7.1353325843811035
    4. 'print' → logprob: -9.260333061218262
    5. 'pass' → logprob: -9.385333061218262
    6. '   ' → logprob: -9.385333061218262
    7. 'i' → logprob: -9.385333061218262
    8. 's' → logprob: -9.510333061218262
    9. 'a' → logprob: -9.510333061218262
    10. 'try' → logprob: -9.760333061218262

Token 5: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.2502387762069702
    2. '=' → logprob: -1.6252387762069702
    3. 'o' → logprob: -1.6252387762069702
    4. '+' → logprob: -2.0002388954162598
    5. '   ' → logprob: -3.1252388954162598
    6. '>' → logprob: -3.5002388954162598
    7. '-' → logprob: -3.7502388954162598
    8. '_' → logprob: -3.8752388954162598
    9. 'e' → logprob: -4.75023889541626
    10. '.' → logprob: -5.00023889541626

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.08127547055482864
    2. ' input' → logprob: -2.956275463104248
    3. 'int' → logprob: -3.831275463104248
    4. 'input' → logprob: -5.456275463104248
    5. ' ' → logprob: -10.331275939941406
    6. ' randint' → logprob: -11.456275939941406
    7. ' eval' → logprob: -11.581275939941406
    8. ' N' → logprob: -12.581275939941406
    9. ' len' → logprob: -12.706275939941406
    10. '0' → logprob: -12.706275939941406

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002919234102591872
    2. '(input' → logprob: -6.0029191970825195
    3. '()' → logprob: -8.75291919708252
    4. ' (' → logprob: -9.50291919708252
    5. '('' → logprob: -10.12791919708252
    6. ' ' → logprob: -10.37791919708252
    7. 'input' → logprob: -10.50291919708252
    8. ''' → logprob: -10.75291919708252
    9. '```' → logprob: -10.75291919708252
    10. ')' → logprob: -11.87791919708252

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23611971735954285
    2. '()' → logprob: -2.1111197471618652
    3. ')' → logprob: -2.7361197471618652
    4. '())' → logprob: -3.8611197471618652
    5. '('' → logprob: -7.236119747161865
    6. ' ' → logprob: -7.486119747161865
    7. '```' → logprob: -7.861119747161865
    8. '))' → logprob: -7.986119747161865
    9. '()))' → logprob: -8.236119270324707
    10. '(
' → logprob: -8.361119270324707

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9617946147918701
    2. ' ' → logprob: -1.3367946147918701
    3. '<|end|>' → logprob: -2.08679461479187
    4. ' if' → logprob: -2.83679461479187
    5. ')' → logprob: -3.08679461479187
    6. '    ' → logprob: -3.21179461479187
    7. '  ' → logprob: -3.83679461479187
    8. '    
' → logprob: -4.211794853210449
    9. 'if' → logprob: -4.336794853210449
    10. ':' → logprob: -4.336794853210449

Token 10: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9670807719230652
    2. ' if' → logprob: -1.34208083152771
    3. '<|end|>' → logprob: -1.34208083152771
    4. ' ' → logprob: -3.46708083152771
    5. ')' → logprob: -3.84208083152771
    6. '    ' → logprob: -4.467080593109131
    7. '```' → logprob: -4.842080593109131
    8. 'if' (adapté à ' if') → logprob: -4.967080593109131
    9. '#' → logprob: -5.467080593109131
    10. '  ' → logprob: -6.092080593109131

Token 11: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.024110734462738037
    2. ' ' → logprob: -3.774110794067383
    3. ' not' → logprob: -7.649110794067383
    4. 'N' → logprob: -7.899110794067383
    5. '  ' → logprob: -11.774110794067383
    6. ' ' → logprob: -12.024110794067383
    7. '<|end|>' → logprob: -14.024110794067383
    8. ')' → logprob: -14.649110794067383
    9. ' )' → logprob: -14.774110794067383
    10. 'not' → logprob: -14.774110794067383

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6320152878761292
    2. ' >' → logprob: -1.0070152282714844
    3. ' <=' → logprob: -2.8820152282714844
    4. ' <' → logprob: -4.007015228271484
    5. '>' → logprob: -4.507015228271484
    6. '==' → logprob: -4.507015228271484
    7. ' ' → logprob: -5.382015228271484
    8. ' >=' → logprob: -7.257015228271484
    9. '<=' → logprob: -7.882015228271484
    10. '  ' → logprob: -8.382015228271484

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17975158989429474
    2. '0' → logprob: -1.8047516345977783
    3. ' ' → logprob: -12.9297513961792
    4. '  ' → logprob: -13.5547513961792
    5. ')' → logprob: -14.3047513961792
    6. '1' → logprob: -14.9297513961792
    7. '<|end|>' → logprob: -15.3672513961792
    8. '    ' → logprob: -15.6797513961792
    9. ' a' → logprob: -15.6797513961792
    10. ' )' → logprob: -15.8672513961792

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018185412511229515
    2. ' ' → logprob: -4.018185615539551
    3. '-' → logprob: -10.64318561553955
    4. ' -' → logprob: -12.26818561553955
    5. '1' → logprob: -12.89318561553955
    6. '42' → logprob: -14.01818561553955
    7. '   ' → logprob: -14.26818561553955
    8. '  ' → logprob: -14.26818561553955
    9. '```' → logprob: -14.39318561553955
    10. '4' → logprob: -15.39318561553955

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012773419439326972
    2. ':
' → logprob: -9.875127792358398
    3. '   ' → logprob: -10.125127792358398
    4. '       ' → logprob: -10.625127792358398
    5. ' :' → logprob: -12.000127792358398
    6. ':return' → logprob: -13.125127792358398
    7. '    ' → logprob: -13.500127792358398
    8. ' break' → logprob: -14.250127792358398
    9. '):' → logprob: -14.500127792358398
    10. '      ' → logprob: -15.000127792358398

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002945728600025177
    2. '   ' → logprob: -6.127945899963379
    3. ' break' → logprob: -7.627945899963379
    4. '	break' → logprob: -9.127945899963379
    5. ':' → logprob: -10.502945899963379
    6. '<|end|>' → logprob: -10.502945899963379
    7. '      ' → logprob: -10.877945899963379
    8. 'break' → logprob: -11.127945899963379
    9. '     ' → logprob: -11.127945899963379
    10. '\t' → logprob: -11.252945899963379

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.02022453583776951
    2. '       ' → logprob: -4.020224571228027
    3. 'break' (adapté à ' break') → logprob: -6.270224571228027
    4. '\n' → logprob: -10.020224571228027
    5. '	break' → logprob: -10.020224571228027
    6. '   ' → logprob: -10.020224571228027
    7. '_break' → logprob: -10.895224571228027
    8. '```' → logprob: -11.395224571228027
    9. ' \' → logprob: -12.520224571228027
    10. 'Break' → logprob: -13.270224571228027

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47208982706069946
    2. '\n' → logprob: -1.3470897674560547
    3. '    
' → logprob: -3.2220897674560547
    4. '\' → logprob: -3.5970897674560547
    5. '```' → logprob: -4.347089767456055
    6. '<|end|>' → logprob: -4.347089767456055
    7. '
' → logprob: -5.097089767456055
    8. '\r' → logprob: -5.472089767456055
    9. ')' → logprob: -5.847089767456055
    10. '#' → logprob: -6.222089767456055

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5674750804901123
    2. '<|end|>' → logprob: -0.9424750804901123
    3. ')' → logprob: -4.192475318908691
    4. '    
' → logprob: -4.942475318908691
    5. '\n' → logprob: -5.442475318908691
    6. '
' → logprob: -5.692475318908691
    7. '```' → logprob: -5.692475318908691
    8. '<|end|>' → logprob: -5.942475318908691
    9. '#' → logprob: -6.067475318908691
    10. ' ' → logprob: -6.817475318908691

Token 20: ' count' (ID: 3605)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 21: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48899033665657043
    2. '_' → logprob: -1.238990306854248
    3. 's' → logprob: -3.363990306854248
    4. ' =' → logprob: -3.488990306854248
    5. ' ' → logprob: -4.738990306854248
    6. '=' → logprob: -4.738990306854248
    7. ')' → logprob: -4.988990306854248
    8. ' +=' → logprob: -6.113990306854248
    9. '_space' → logprob: -6.988990306854248
    10. '```' → logprob: -7.238990306854248

Token 22: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.045231934636831284
    2. ' ' → logprob: -3.170231819152832
    3. '1' → logprob: -6.295231819152832
    4. ' {}' → logprob: -8.920231819152832
    5. ' N' → logprob: -9.045231819152832
    6. '{}' → logprob: -9.920231819152832
    7. '   ' → logprob: -10.045231819152832
    8. 'N' → logprob: -11.295231819152832
    9. '    ' → logprob: -12.545231819152832
    10. ' sum' → logprob: -12.670231819152832

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11729540675878525
    2. '1' → logprob: -2.242295503616333
    3. 'N' → logprob: -5.992295265197754
    4. ' ' → logprob: -6.867295265197754
    5. 'sum' → logprob: -7.617295265197754
    6. 'int' → logprob: -9.117295265197754
    7. '{}' → logprob: -9.492295265197754
    8. '{' → logprob: -10.242295265197754
    9. '2' → logprob: -10.242295265197754
    10. ' N' → logprob: -10.492295265197754

Token 24: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2686038911342621
    2. 'for' (adapté à ' for') → logprob: -2.143603801727295
    3. ' for' → logprob: -2.643603801727295
    4. '<|end|>' → logprob: -3.893603801727295
    5. ' ' → logprob: -4.393603801727295
    6. '    ' → logprob: -5.018603801727295
    7. ' while' → logprob: -6.268603801727295
    8. 'while' → logprob: -6.393603801727295
    9. '  ' → logprob: -6.643603801727295
    10. '<|end|>' → logprob: -7.643603801727295

Token 27: ' start' (ID: 1604)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.28654348850250244
    2. ' ' → logprob: -1.4115434885025024
    3. ' range' → logprob: -5.911543369293213
    4. ' _' → logprob: -6.411543369293213
    5. 'i' → logprob: -7.661543369293213
    6. '_' → logprob: -8.036543846130371
    7. '  ' → logprob: -9.411543846130371
    8. ' space' → logprob: -9.911543846130371
    9. ' I' → logprob: -10.536543846130371
    10. 'range' → logprob: -10.911543846130371

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03872855752706528
    2. 'in' → logprob: -3.2887284755706787
    3. '_' → logprob: -8.038728713989258
    4. ' ' → logprob: -8.788728713989258
    5. ' i' → logprob: -9.913728713989258
    6. ',' → logprob: -10.413728713989258
    7. ')' → logprob: -10.913728713989258
    8. '  ' → logprob: -11.038728713989258
    9. '=' → logprob: -11.288728713989258
    10. '   ' → logprob: -11.413728713989258

Token 29: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1426999568939209
    2. 'range' → logprob: -2.017699956893921
    3. ' ' → logprob: -11.3927001953125
    4. '	range' → logprob: -12.2677001953125
    5. '(range' → logprob: -12.7677001953125
    6. ')' → logprob: -13.5177001953125
    7. '   ' → logprob: -13.8927001953125
    8. ' xrange' → logprob: -14.1427001953125
    9. '  ' → logprob: -14.7677001953125
    10. '```' → logprob: -14.8927001953125

Token 30: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09117121249437332
    2. '(N' → logprob: -2.4661712646484375
    3. '(len' → logprob: -6.2161712646484375
    4. ' (' → logprob: -8.716171264648438
    5. '(n' → logprob: -9.966171264648438
    6. ')' → logprob: -12.591171264648438
    7. '(count' → logprob: -12.716171264648438
    8. '(
' → logprob: -13.091171264648438
    9. '(length' → logprob: -13.341171264648438
    10. '((' → logprob: -13.591171264648438

Token 31: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.28698205947875977
    2. '1' → logprob: -1.4119820594787598
    3. ' N' → logprob: -5.78698205947876
    4. '0' → logprob: -6.66198205947876
    5. '   ' → logprob: -7.78698205947876
    6. '(' → logprob: -8.036981582641602
    7. ' ' → logprob: -8.786981582641602
    8. '2' → logprob: -8.786981582641602
    9. ')' → logprob: -9.036981582641602
    10. '(N' → logprob: -9.036981582641602

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013824839144945145
    2. ',N' → logprob: -4.763824939727783
    3. ' ,' → logprob: -5.263824939727783
    4. ',n' → logprob: -11.638824462890625
    5. 'N' → logprob: -13.138824462890625
    6. '   ' → logprob: -13.388824462890625
    7. ',len' → logprob: -13.388824462890625
    8. ' N' → logprob: -13.513824462890625
    9. '(' → logprob: -13.513824462890625
    10. '，' → logprob: -14.138824462890625

Token 33: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.08898047357797623
    2. ' N' → logprob: -2.4639804363250732
    3. ' ' → logprob: -10.713980674743652
    4. '   ' → logprob: -11.963980674743652
    5. '    ' → logprob: -13.213980674743652
    6. '  ' → logprob: -13.588980674743652
    7. 'len' → logprob: -13.713980674743652
    8. 'int' → logprob: -13.963980674743652
    9. '1' → logprob: -13.963980674743652
    10. '10' → logprob: -14.088980674743652

Token 34: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13884006440639496
    2. ' +' → logprob: -2.5138399600982666
    3. '):' → logprob: -3.1388399600982666
    4. ' ):' → logprob: -5.888840198516846
    5. '//' → logprob: -6.763840198516846
    6. ' //' → logprob: -7.013840198516846
    7. '-' → logprob: -8.388839721679688
    8. '):
' → logprob: -9.013839721679688
    9. ' ' → logprob: -9.888839721679688
    10. ' -' → logprob: -10.263839721679688

Token 35: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: ' total' (ID: 3609)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5188244581222534
    2. '    ' → logprob: -1.1438244581222534
    3. 'for' → logprob: -3.268824577331543
    4. ' ' → logprob: -3.893824577331543
    5. '   ' → logprob: -4.643824577331543
    6. ' N' → logprob: -5.393824577331543
    7. '+' → logprob: -5.643824577331543
    8. '  ' → logprob: -5.893824577331543
    9. ':' → logprob: -6.518824577331543
    10. ' start' → logprob: -6.643824577331543

Token 37: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4246683716773987
    2. ' =' → logprob: -1.549668312072754
    3. '=' → logprob: -2.799668312072754
    4. '+' → logprob: -2.924668312072754
    5. '+=' → logprob: -4.424668312072754
    6. ' +' → logprob: -5.174668312072754
    7. ' ==' → logprob: -6.924668312072754
    8. ' ' → logprob: -9.049668312072754
    9. '<|end|>' → logprob: -9.299668312072754
    10. ')' → logprob: -9.799668312072754

Token 38: ' ' (ID: 220)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.3301733434200287
    2. 'start' → logprob: -1.330173373222351
    3. '0' → logprob: -4.830173492431641
    4. ' ' → logprob: -5.455173492431641
    5. ' total' → logprob: -5.830173492431641
    6. 'total' → logprob: -6.830173492431641
    7. '(start' → logprob: -8.33017349243164
    8. '+' → logprob: -9.70517349243164
    9. '1' → logprob: -9.83017349243164
    10. '[start' → logprob: -10.20517349243164

Token 39: '0' (ID: 15)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.34878185391426086
    2. '0' → logprob: -1.2237818241119385
    3. ' start' → logprob: -8.72378158569336
    4. '1' → logprob: -8.97378158569336
    5. ' ' → logprob: -11.22378158569336
    6. '(start' → logprob: -11.59878158569336
    7. '	start' → logprob: -12.09878158569336
    8. '[start' → logprob: -12.22378158569336
    9. 'total' → logprob: -12.72378158569336
    10. '   ' → logprob: -12.84878158569336

Token 40: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20465068519115448
    2. '<|end|>' → logprob: -2.329650640487671
    3. '       ' → logprob: -2.829650640487671
    4. '   ' → logprob: -4.70465087890625
    5. ' ' → logprob: -5.32965087890625
    6. ':' → logprob: -5.57965087890625
    7. '    ' → logprob: -5.82965087890625
    8. ' +' → logprob: -5.95465087890625
    9. ' for' → logprob: -6.57965087890625
    10. ')' → logprob: -7.20465087890625

Token 42: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7277483940124512
    2. 'for' (adapté à ' for') → logprob: -0.7277483940124512
    3. '   ' → logprob: -4.227748394012451
    4. '    ' → logprob: -5.352748394012451
    5. '       ' → logprob: -5.602748394012451
    6. ' ' → logprob: -5.602748394012451
    7. 'start' → logprob: -5.727748394012451
    8. ' start' → logprob: -6.227748394012451
    9. '<|end|>' → logprob: -7.477748394012451
    10. '+' → logprob: -7.477748394012451

Token 43: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.08013654500246048
    2. ' end' → logprob: -2.58013653755188
    3. 'num' → logprob: -8.2051362991333
    4. 'length' → logprob: -8.3301362991333
    5. 'start' → logprob: -8.4551362991333
    6. '   ' → logprob: -9.0801362991333
    7. ' ' → logprob: -9.5801362991333
    8. '	end' → logprob: -9.8301362991333
    9. 'i' → logprob: -9.9551362991333
    10. '```' → logprob: -10.2051362991333

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0031228174921125174
    2. 'in' → logprob: -5.878122806549072
    3. ' ' → logprob: -8.25312328338623
    4. '<|end|>' → logprob: -10.00312328338623
    5. '    ' → logprob: -12.25312328338623
    6. '<|end|>' → logprob: -13.62812328338623
    7. '	in' → logprob: -13.87812328338623
    8. '  ' → logprob: -14.12812328338623
    9. '+' → logprob: -14.25312328338623
    10. '   ' → logprob: -14.37812328338623

Token 45: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47408682107925415
    2. 'range' → logprob: -0.9740868210792542
    3. '(range' → logprob: -11.72408676147461
    4. '	range' → logprob: -13.59908676147461
    5. '   ' → logprob: -16.09908676147461
    6. 'start' → logprob: -16.09908676147461
    7. ' ' → logprob: -16.09908676147461
    8. ' start' → logprob: -17.72408676147461
    9. '_range' → logprob: -17.84908676147461
    10. ')' → logprob: -17.97408676147461

Token 46: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.0029843561351299286
    2. '(' → logprob: -6.127984523773193
    3. 'start' → logprob: -7.252984523773193
    4. ' start' → logprob: -9.502984046936035
    5. '[start' → logprob: -12.127984046936035
    6. ',start' → logprob: -12.752984046936035
    7. ' (' → logprob: -13.002984046936035
    8. '	start' → logprob: -13.752984046936035
    9. '   ' → logprob: -14.252984046936035
    10. ')' → logprob: -14.377984046936035

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006712094182148576
    2. ' ,' → logprob: -7.75067138671875
    3. ',start' → logprob: -9.00067138671875
    4. '+' → logprob: -9.37567138671875
    5. '<|end|>' → logprob: -12.00067138671875
    6. ',n' → logprob: -12.25067138671875
    7. ',end' → logprob: -12.37567138671875
    8. ',N' → logprob: -12.37567138671875
    9. '   ' → logprob: -12.62567138671875
    10. '+,' → logprob: -13.50067138671875

Token 48: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004634472541511059
    2. ' N' → logprob: -5.379634380340576
    3. '>N' → logprob: -12.379634857177734
    4. '	N' → logprob: -12.504634857177734
    5. ' ' → logprob: -13.754634857177734
    6. '0' → logprob: -13.879634857177734
    7. '   ' → logprob: -14.004634857177734
    8. '<N' → logprob: -14.129634857177734
    9. 'start' → logprob: -14.629634857177734
    10. '<|end|>' → logprob: -14.754634857177734

Token 49: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026357775554060936
    2. ' +' → logprob: -3.651357889175415
    3. '   ' → logprob: -10.651357650756836
    4. '):' → logprob: -10.776357650756836
    5. '):
' → logprob: -13.151357650756836
    6. '       ' → logprob: -13.276357650756836
    7. ')' → logprob: -13.526357650756836
    8. ' ' → logprob: -13.901357650756836
    9. '2' → logprob: -14.026357650756836
    10. '1' → logprob: -14.026357650756836

Token 50: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38037949800491333
    2. '+' → logprob: -1.2553794384002686
    3. '<|end|>' → logprob: -4.630379676818848
    4. ' ' → logprob: -4.880379676818848
    5. '            ' → logprob: -5.255379676818848
    6. '       ' → logprob: -5.755379676818848
    7. '        ' → logprob: -6.005379676818848
    8. ' +' → logprob: -7.005379676818848
    9. '               ' → logprob: -7.380379676818848
    10. '          ' → logprob: -8.380379676818848

Token 51: ' total' (ID: 3609)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4396072030067444
    2. '+' → logprob: -1.3146071434020996
    3. '            ' → logprob: -3.3146071434020996
    4. '               ' → logprob: -3.4396071434020996
    5. '                ' → logprob: -4.9396071434021
    6. '           ' → logprob: -5.3146071434021
    7. '<|end|>' → logprob: -6.1896071434021
    8. 'total' (adapté à ' total') → logprob: -6.9396071434021
    9. ' +' → logprob: -7.4396071434021
    10. ' total' → logprob: -7.5646071434021

Token 52: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5907487273216248
    2. '+=' → logprob: -1.0907487869262695
    3. '+' → logprob: -2.2157487869262695
    4. ' +' → logprob: -7.2157487869262695
    5. '<|end|>' → logprob: -8.84074878692627
    6. '>=' → logprob: -10.59074878692627
    7. '           ' → logprob: -10.71574878692627
    8. ']+=' → logprob: -11.09074878692627
    9. '=' → logprob: -11.09074878692627
    10. '+='' → logprob: -11.21574878692627

Token 53: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.002852305769920349
    2. ' end' → logprob: -5.877852439880371
    3. '(end' → logprob: -10.752852439880371
    4. '           ' → logprob: -11.877852439880371
    5. '[end' → logprob: -12.252852439880371
    6. '   ' → logprob: -12.752852439880371
    7. 'start' → logprob: -12.877852439880371
    8. ' ' → logprob: -13.127852439880371
    9. '=end' → logprob: -13.627852439880371
    10. '	end' → logprob: -13.627852439880371

Token 54: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18716205656528473
    2. '           ' → logprob: -2.687162160873413
    3. 'if' (adapté à ' if') → logprob: -2.937162160873413
    4. ' ' → logprob: -3.187162160873413
    5. '            ' → logprob: -5.312161922454834
    6. '            
' → logprob: -7.312161922454834
    7. '    ' → logprob: -7.437161922454834
    8. ' 
' → logprob: -7.687161922454834
    9. '<|end|>' → logprob: -8.062162399291992
    10. '               ' → logprob: -8.187162399291992

Token 57: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.0002060436672763899
    2. 'total' → logprob: -8.500205993652344
    3. '(total' → logprob: -13.375205993652344
    4. ' ' → logprob: -14.375205993652344
    5. ' ' → logprob: -15.750205993652344
    6. ' tot' → logprob: -16.875205993652344
    7. '	total' → logprob: -16.875205993652344
    8. ' tota' → logprob: -18.000205993652344
    9. '_total' → logprob: -18.250205993652344
    10. '$total' → logprob: -18.375205993652344

Token 58: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.27098390460014343
    2. ' ==' → logprob: -1.5209839344024658
    3. '>' → logprob: -4.270983695983887
    4. '>=' → logprob: -5.645983695983887
    5. '=' → logprob: -7.520983695983887
    6. ' >' → logprob: -7.770983695983887
    7. ' >=' → logprob: -8.020983695983887
    8. '===' → logprob: -10.770983695983887
    9. '<|end|>' → logprob: -10.895983695983887
    10. ' ' → logprob: -11.770983695983887

Token 59: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.17977559566497803
    2. 'N' → logprob: -1.804775595664978
    3. ' ' → logprob: -10.55477523803711
    4. '	N' → logprob: -13.05477523803711
    5. '   ' → logprob: -13.80477523803711
    6. '<|end|>' → logprob: -14.30477523803711
    7. '    ' → logprob: -15.42977523803711
    8. '>N' → logprob: -15.42977523803711
    9. '  ' → logprob: -15.55477523803711
    10. ' ' → logprob: -16.17977523803711

Token 60: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00034750174381770194
    2. ':
' → logprob: -8.500347137451172
    3. '               ' → logprob: -9.250347137451172
    4. '           ' → logprob: -10.625347137451172
    5. ' or' → logprob: -12.375347137451172
    6. '<|end|>' → logprob: -12.375347137451172
    7. ':return' → logprob: -12.500347137451172
    8. ' and' → logprob: -12.500347137451172
    9. '):' → logprob: -13.000347137451172
    10. ':

' → logprob: -13.250347137451172

Token 61: ' end' (ID: 1268)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.30025234818458557
    2. 'start' → logprob: -2.4252524375915527
    3. ' count' → logprob: -2.8002524375915527
    4. ' ' → logprob: -3.3002524375915527
    5. 'count' → logprob: -3.6752524375915527
    6. ' end' → logprob: -3.9252524375915527
    7. ' break' → logprob: -4.175252437591553
    8. 'end' → logprob: -5.675252437591553
    9. ' not' → logprob: -6.550252437591553
    10. ' True' → logprob: -6.675252437591553

Token 62: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5819839239120483
    2. ' start' → logprob: -0.8319839239120483
    3. '+' → logprob: -5.206984043121338
    4. ' ' → logprob: -8.20698356628418
    5. ' +' → logprob: -9.08198356628418
    6. '	start' → logprob: -10.33198356628418
    7. '>' → logprob: -10.45698356628418
    8. 's' → logprob: -11.08198356628418
    9. '<|end|>' → logprob: -11.08198356628418
    10. '   ' → logprob: -11.70698356628418

Token 64: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07405436038970947
    2. ' +' → logprob: -2.69905424118042
    3. '<|end|>' → logprob: -5.94905424118042
    4. '>=' → logprob: -7.07405424118042
    5. ' >=' → logprob: -8.074054718017578
    6. '>' → logprob: -9.074054718017578
    7. ' ' → logprob: -9.324054718017578
    8. '<|end|>' → logprob: -10.949054718017578
    9. ' >' → logprob: -11.074054718017578
    10. '++' → logprob: -11.324054718017578

Token 65: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16042204201221466
    2. ' ' → logprob: -1.9104220867156982
    3. '<|end|>' → logprob: -9.410422325134277
    4. '>' → logprob: -9.660422325134277
    5. '2' → logprob: -10.910422325134277
    6. '```' → logprob: -11.910422325134277
    7. '0' → logprob: -12.222922325134277
    8. '<|end|>' → logprob: -12.472922325134277
    9. '=' → logprob: -12.660422325134277
    10. '+' → logprob: -13.347922325134277

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005648255348205566
    2. ' ' → logprob: -5.755648136138916
    3. '2' → logprob: -6.005648136138916
    4. '<|end|>' → logprob: -13.880648612976074
    5. '```' → logprob: -14.130648612976074
    6. '0' → logprob: -14.755648612976074
    7. '>' → logprob: -15.380648612976074
    8. '   ' → logprob: -16.130647659301758
    9. '  ' → logprob: -16.505647659301758
    10. '۱' → logprob: -17.380647659301758

Token 67: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7605957984924316
    2. '>=' → logprob: -1.5105957984924316
    3. '>' → logprob: -1.7605957984924316
    4. ' >' → logprob: -2.1355957984924316
    5. '<|end|>' → logprob: -4.010595798492432
    6. ' ' → logprob: -6.135595798492432
    7. '">' → logprob: -7.635595798492432
    8. '<|end|>' → logprob: -8.385595321655273
    9. '   ' → logprob: -9.260595321655273
    10. ')' → logprob: -9.635595321655273

Token 68: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.038054682314395905
    2. ' ' → logprob: -3.2880547046661377
    3. '3' → logprob: -11.913054466247559
    4. '1' → logprob: -13.288054466247559
    5. '```' → logprob: -14.663054466247559
    6. '<|end|>' → logprob: -14.725554466247559
    7. '>' → logprob: -14.913054466247559
    8. '２' → logprob: -15.163054466247559
    9. ' two' → logprob: -15.163054466247559
    10. '4' → logprob: -15.225554466247559

Token 69: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.519893501419574e-05
    2. ' ' → logprob: -9.37509536743164
    3. '3' → logprob: -12.12509536743164
    4. '1' → logprob: -13.12509536743164
    5. '```' → logprob: -13.87509536743164
    6. '	' → logprob: -15.56259536743164
    7. '>' → logprob: -15.68759536743164
    8. '２' → logprob: -15.75009536743164
    9. '5' → logprob: -16.00009536743164
    10. '7' → logprob: -16.00009536743164

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014776040916331112
    2. ':
' → logprob: -8.875147819519043
    3. '):' → logprob: -13.000147819519043
    4. '           ' → logprob: -13.125147819519043
    5. ':

' → logprob: -13.375147819519043
    6. '               ' → logprob: -13.875147819519043
    7. ' :' → logprob: -14.625147819519043
    8. ':return' → logprob: -15.625147819519043
    9. '       ' → logprob: -16.000146865844727
    10. ',' → logprob: -16.250146865844727

Token 71: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019086466636508703
    2. '           ' → logprob: -6.876908779144287
    3. ':' → logprob: -7.501908779144287
    4. '\n' → logprob: -9.126908302307129
    5. '                   ' → logprob: -9.876908302307129
    6. '<|end|>' → logprob: -10.501908302307129
    7. '              ' → logprob: -10.626908302307129
    8. '                ' → logprob: -11.126908302307129
    9. '                
' → logprob: -11.626908302307129
    10. '                               ' → logprob: -11.626908302307129

Token 72: ' count' (ID: 3605)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1410335898399353
    2. 'count' (adapté à ' count') → logprob: -2.14103364944458
    3. '               ' → logprob: -4.51603364944458
    4. ' count' → logprob: -6.39103364944458
    5. '           ' → logprob: -8.016033172607422
    6. '                       ' → logprob: -8.266033172607422
    7. ' 
' → logprob: -8.516033172607422
    8. '                    
' → logprob: -8.641033172607422
    9. '   ' → logprob: -9.141033172607422
    10. '
' → logprob: -9.516033172607422

Token 73: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4298669397830963
    2. '+=' → logprob: -1.054866909980774
    3. '+' → logprob: -6.929866790771484
    4. '=' → logprob: -8.929866790771484
    5. '<|end|>' → logprob: -10.804866790771484
    6. ']+=' → logprob: -11.054866790771484
    7. ' =' → logprob: -11.679866790771484
    8. '+='' → logprob: -13.304866790771484
    9. ' ' → logprob: -13.429866790771484
    10. '+="' → logprob: -13.804866790771484

Token 74: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.500045776367188
    4. '<|end|>' → logprob: -16.500045776367188
    5. '```' → logprob: -17.625045776367188
    6. '  ' → logprob: -18.625045776367188
    7. '１' → logprob: -18.625045776367188
    8. '۱' → logprob: -19.312545776367188
    9. ' ' → logprob: -19.375045776367188
    10. '    ' → logprob: -19.812545776367188

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -17.000001907348633
    4. '<|end|>' → logprob: -17.000001907348633
    5. '   ' → logprob: -17.500001907348633
    6. '１' → logprob: -18.375001907348633
    7. '۱' → logprob: -19.187501907348633
    8. '  ' → logprob: -19.750001907348633
    9. '१' → logprob: -19.937501907348633
    10. '2' → logprob: -20.062501907348633

Token 76: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6942598819732666
    2. '
' → logprob: -1.6942598819732666
    3. 'print' → logprob: -1.6942598819732666
    4. '   ' → logprob: -2.3192598819732666
    5. '<|end|>' → logprob: -3.8192598819732666
    6. '```' → logprob: -5.4442596435546875
    7. 'newline' → logprob: -6.0692596435546875
    8. '    
' → logprob: -6.3192596435546875
    9. '<|end|>' → logprob: -6.8192596435546875
    10. '  
' → logprob: -7.5692596435546875

Token 77: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07969126105308533
    2. 'print' → logprob: -3.204691171646118
    3. '       ' → logprob: -4.704691410064697
    4. '```' → logprob: -4.829691410064697
    5. '   ' → logprob: -4.954691410064697
    6. '               ' → logprob: -5.329691410064697
    7. '            ' → logprob: -6.329691410064697
    8. '\n' → logprob: -6.579691410064697
    9. '<|end|>' → logprob: -6.829691410064697
    10. 'elif' → logprob: -7.704691410064697

Token 78: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0691126361489296
    2. '               ' → logprob: -3.069112539291382
    3. ' break' → logprob: -3.944112539291382
    4. '```' → logprob: -7.944112777709961
    5. '           ' → logprob: -8.069112777709961
    6. '                   ' → logprob: -8.694112777709961
    7. '	break' → logprob: -9.944112777709961
    8. '                ' → logprob: -11.069112777709961
    9. '       ' → logprob: -11.194112777709961
    10. '   ' → logprob: -11.444112777709961

Token 79: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47310397028923035
    2. 'print' → logprob: -1.3481040000915527
    3. '\n' → logprob: -2.4731040000915527
    4. ')' → logprob: -5.348104000091553
    5. '```' → logprob: -5.348104000091553
    6. '<|end|>' → logprob: -5.348104000091553
    7. '
' → logprob: -5.473104000091553
    8. '       ' → logprob: -5.473104000091553
    9. '    
' → logprob: -5.973104000091553
    10. 'n' → logprob: -6.973104000091553

Token 80: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.984655499458313
    2. '\n' → logprob: -1.734655499458313
    3. ')' → logprob: -2.3596553802490234
    4. '```' → logprob: -2.4846553802490234
    5. 'print' → logprob: -2.7346553802490234
    6. '       ' → logprob: -2.7346553802490234
    7. '    ' → logprob: -3.4846553802490234
    8. '<|end|>' → logprob: -3.4846553802490234
    9. 'n' → logprob: -3.6096553802490234
    10. ' ' → logprob: -4.609655380249023

Token 81: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.3038008213043213
    2. ' elif' → logprob: -2.5538008213043213
    3. '<|end|>' → logprob: -2.5538008213043213
    4. '           ' → logprob: -2.8038008213043213
    5. '```' → logprob: -5.053800582885742
    6. '	elif' → logprob: -5.303800582885742
    7. '       ' → logprob: -5.303800582885742
    8. 'else' → logprob: -5.428800582885742
    9. '            ' → logprob: -5.553800582885742
    10. '               ' → logprob: -5.678800582885742

Token 82: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.0003951648832298815
    2. 'total' → logprob: -7.87539529800415
    3. ' ' → logprob: -11.625394821166992
    4. ' ' → logprob: -12.500394821166992
    5. '	total' → logprob: -13.875394821166992
    6. ' tota' → logprob: -14.625394821166992
    7. '(total' → logprob: -14.750394821166992
    8. ' tot' → logprob: -15.000394821166992
    9. ' to' → logprob: -16.125394821166992
    10. ' t' → logprob: -16.750394821166992

Token 83: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5238591432571411
    2. '>' → logprob: -0.8988591432571411
    3. '<|end|>' → logprob: -7.398859024047852
    4. ' ' → logprob: -9.648859024047852
    5. '<|end|>' → logprob: -11.398859024047852
    6. '">' → logprob: -11.523859024047852
    7. ' >=' → logprob: -11.773859024047852
    8. ' ' → logprob: -12.398859024047852
    9. '>=' → logprob: -12.523859024047852
    10. '>end' → logprob: -12.773859024047852

Token 84: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.12694533169269562
    2. 'N' → logprob: -2.1269452571868896
    3. ' ' → logprob: -12.126945495605469
    4. '>N' → logprob: -12.251945495605469
    5. '<|end|>' → logprob: -12.251945495605469
    6. '	N' → logprob: -13.626945495605469
    7. '<|end|>' → logprob: -14.501945495605469
    8. ' ' → logprob: -14.876945495605469
    9. 'n' → logprob: -16.25194549560547
    10. '>' → logprob: -16.87694549560547

Token 85: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01226310059428215
    2. '               ' → logprob: -4.512263298034668
    3. ':
' → logprob: -6.887263298034668
    4. '           ' → logprob: -8.762263298034668
    5. '       ' → logprob: -11.012263298034668
    6. '                   ' → logprob: -12.137263298034668
    7. '<|end|>' → logprob: -13.012263298034668
    8. ' :' → logprob: -13.137263298034668
    9. '   ' → logprob: -13.262263298034668
    10. '              ' → logprob: -13.387263298034668

Token 86: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.251091377227567e-05
    2. 'break' → logprob: -10.750042915344238
    3. '           ' → logprob: -11.500042915344238
    4. '                   ' → logprob: -12.250042915344238
    5. ' break' → logprob: -12.375042915344238
    6. '       ' → logprob: -14.625042915344238
    7. '   ' → logprob: -15.125042915344238
    8. '              ' → logprob: -15.125042915344238
    9. '```' → logprob: -15.500042915344238
    10. '			' → logprob: -15.750042915344238

Token 87: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6211714148521423
    2. 'break' (adapté à ' break') → logprob: -0.8711714148521423
    3. ' break' → logprob: -3.121171474456787
    4. '	break' → logprob: -9.871170997619629
    5. '                   ' → logprob: -9.996170997619629
    6. '           ' → logprob: -11.371170997619629
    7. '   ' → logprob: -12.246170997619629
    8. '```' → logprob: -13.371170997619629
    9. '       ' → logprob: -13.496170997619629
    10. '			' → logprob: -14.621170997619629

Token 88: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3152260482311249
    2. 'print' → logprob: -1.3152260780334473
    3. '
' → logprob: -6.940226078033447
    4. ' print' → logprob: -7.440226078033447
    5. '<|end|>' → logprob: -8.815225601196289
    6. '    
' → logprob: -9.190225601196289
    7. ')' → logprob: -10.190225601196289
    8. '```' → logprob: -10.565225601196289
    9. '\n' → logprob: -11.065225601196289
    10. '	print' → logprob: -11.190225601196289

Token 89: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20942477881908417
    2. '   ' → logprob: -1.7094247341156006
    3. ' print' → logprob: -4.83442497253418
    4. '```' → logprob: -11.58442497253418
    5. ')' → logprob: -11.95942497253418
    6. '	print' → logprob: -12.95942497253418
    7. '(print' → logprob: -13.08442497253418
    8. '    
' → logprob: -13.45942497253418
    9. '<|end|>' → logprob: -13.45942497253418
    10. '
' → logprob: -13.83442497253418

Token 90: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.004681338090449572
    2. '   ' → logprob: -5.75468111038208
    3. ' print' → logprob: -6.50468111038208
    4. '```' → logprob: -12.379681587219238
    5. '
' → logprob: -14.754681587219238
    6. '    
' → logprob: -14.879681587219238
    7. ')' → logprob: -15.129681587219238
    8. '	print' → logprob: -15.504681587219238
    9. '(print' → logprob: -15.504681587219238
    10. '#print' → logprob: -15.879681587219238

Token 91: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2521530091762543
    2. '(count' → logprob: -1.5021530389785767
    3. '('' → logprob: -9.502153396606445
    4. '(f' → logprob: -9.627153396606445
    5. '()' → logprob: -9.627153396606445
    6. '("' → logprob: -11.752153396606445
    7. ' (' → logprob: -13.002153396606445
    8. '(c' → logprob: -13.127153396606445
    9. '((' → logprob: -13.502153396606445
    10. '("("' → logprob: -13.877153396606445

Token 92: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -14.625000953674316
    3. ')
' → logprob: -16.375
    4. ')`' → logprob: -16.875
    5. '`)' → logprob: -17.75
    6. '))' → logprob: -17.875
    7. '')' → logprob: -18.375
    8. '()' → logprob: -18.75
    9. '(' → logprob: -19.625
    10. '```' → logprob: -20.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 90
Tokens correctement prédits (1ère position, stricte): 36
Tokens correctement prédits (1ère position, avec adaptation): 39
Tokens correctement prédits (top 10): 76
Précision stricte (1ère position): 40.00%
Précision adaptée (1ère position): 43.33%
Précision (top 10): 84.44%
================================================================================
