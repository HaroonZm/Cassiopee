================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
sys.setrecursionlimit(10**7)

input=int(sys.stdin.readline)

def orientation(p, q, r):
    # orientation test for triplet (p,q,r)
    val = (q[1]-p[1])*(r[0]-q[0]) - (q[0]-p[0])*(r[1]-q[1])
    if val == 0:
        return 0
    return 1 if val > 0 else 2

def convex_hull(points):
    points = sorted(points)
    if len(points)<=1:
        return points
    lower = []
    for p in points:
        while len(lower)>=2 and orientation(lower[-2],lower[-1],p)!=2:
            lower.pop()
        lower.append(p)
    upper=[]
    for p in reversed(points):
        while len(upper)>=2 and orientation(upper[-2],upper[-1],p)!=2:
            upper.pop()
        upper.append(p)
    hull = lower[:-1]+upper[:-1]
    return hull

def dist_sq(a,b):
    return (a[0]-b[0])**2+(a[1]-b[1])**2

def polygon_area(poly):
    area=0
    n = len(poly)
    for i in range(n):
        j=(i+1)%n
        area += poly[i][0]*poly[j][1]-poly[j][0]*poly[i][1]
    return abs(area)/2

def is_simple_polygon(poly):
    n = len(poly)
    for i in range(n):
        a1 = poly[i]
        a2 = poly[(i+1)%n]
        for j in range(i+1,n):
            if abs(i-j)<=1 or (i==0 and j==n-1) or (j==0 and i==n-1):
                continue
            b1 = poly[j]
            b2 = poly[(j+1)%n]
            if intersect(a1,a2,b1,b2):
                return False
    return True

def on_segment(p,q,r):
    return (min(p[0],r[0])<=q[0]<=max(p[0],r[0]) and min(p[1],r[1])<=q[1]<=max(p[1],r[1]))

def intersect(p1,q1,p2,q2):
    o1 = orientation(p1,q1,p2)
    o2 = orientation(p1,q1,q2)
    o3 = orientation(p2,q2,p1)
    o4 = orientation(p2,q2,q1)

    if o1!=o2 and o3!=o4:
        return True
    if o1==0 and on_segment(p1,p2,q1):
        return True
    if o2==0 and on_segment(p1,q2,q1):
        return True
    if o3==0 and on_segment(p2,p1,q2):
        return True
    if o4==0 and on_segment(p2,q1,q2):
        return True
    return False

def reflect_point(p, a, b):
    # reflect p across line through a,b
    # line vector
    vx = b[0]-a[0]
    vy = b[1]-a[1]
    # vector p->a
    wx = p[0]-a[0]
    wy = p[1]-a[1]
    # projection length
    proj_len = (wx*vx+wy*vy)/(vx*vx+vy*vy)
    # closest point on line
    cx = a[0] + proj_len*vx
    cy = a[1] + proj_len*vy
    # vector from p to closest point
    dx = cx - p[0]
    dy = cy - p[1]
    # reflected point
    rx = p[0]+2*dx
    ry = p[1]+2*dy
    return (rx, ry)

def equal_points(p1, p2):
    return (abs(p1[0]-p2[0])<1e-9 and abs(p1[1]-p2[1])<1e-9)

def normalize(poly):
    # rotate to smallest lex point, then check order to keep ccw
    n = len(poly)
    idx = 0
    for i in range(1,n):
        if poly[i]<poly[idx]:
            idx=i
    res = poly[idx:] + poly[:idx]
    # check area sign (orientation)
    area=0
    for i in range(n):
        x1,y1=res[i]
        x2,y2=res[(i+1)%n]
        area += (x1*y2 - x2*y1)
    if area<0:
        res=res[:1]+res[:0:-1]
    return res

N = input()
points = [tuple(map(int,sys.stdin.readline().split())) for _ in range(N)]

hull = convex_hull(points)
if len(hull)<3:
    print("No")
    sys.exit()

polygon = normalize(hull)

n = len(polygon)

# Try symmetry axis through all pairs of points (including identical points for midpoint axis)
# For each candidate axis, check if polygon is symmetric.

# To verify symmetry efficiently, use set of points to check reflections
pointset = set(polygon)

def check_axis(a,b):
    # check if reflecting polygon across line a,b yields the same polygon
    # for each vertex p, reflected p' should be in polygon
    for p in polygon:
        rp = reflect_point(p,a,b)
        # floating fix
        rp_round = (round(rp[0],6), round(rp[1],6))
        if not any(abs(rp[0]-q[0])<1e-6 and abs(rp[1]-q[1])<1e-6 for q in polygon):
            return False
    return True

# To reduce candidates:
# The symmetry axis passes through
# - midpoint of opposite vertices (for even polygon)
# - line through midpoints of opposite edges (for even polygon)
# - line through vertex and midpoint of opposite edge (for odd polygon)

if n%2==0:
    # even number of vertices: axis passes through midpoints of opposite vertices or through midpoints of opposite edges
    # check axis passing through midpoints of vertex pairs
    for i in range(n//2):
        p1 = polygon[i]
        p2 = polygon[(i+n//2)%n]
        mid = ((p1[0]+p2[0])/2,(p1[1]+p2[1])/2)
        # axis candidate as perpendicular bisector of p1,p2
        # direction vector perpendicular to p2-p1
        vx = p2[0]-p1[0]
        vy = p2[1]-p1[1]
        # axis line: through mid with normal vector (vx,vy)
        # So line through mid and direction perpendicular (-vy, vx)
        a = (mid[0]-vy, mid[1]+vx)
        b = (mid[0]+vy, mid[1]-vx)
        if check_axis(a,b):
            print("Yes")
            sys.exit()
    # check axis through midpoints of opposite edges
    for i in range(n//2):
        e1p1 = polygon[i]
        e1p2 = polygon[(i+1)%n]
        e2p1 = polygon[(i+n//2)%n]
        e2p2 = polygon[(i+n//2+1)%n]
        m1 = ((e1p1[0]+e1p2[0])/2,(e1p1[1]+e1p2[1])/2)
        m2 = ((e2p1[0]+e2p2[0])/2,(e2p1[1]+e2p2[1])/2)
        if equal_points(m1,m2):
            # axis line through m1,m2 is ill defined (same point)
            continue
        if check_axis(m1,m2):
            print("Yes")
            sys.exit()
else:
    # odd number of vertices: axis passes through vertex and midpoint of opposite edge
    for i in range(n):
        vp = polygon[i]
        e1p1 = polygon[(i+(n//2))%n]
        e1p2 = polygon[(i+(n//2)+1)%n]
        mid = ((e1p1[0]+e1p2[0])/2,(e1p1[1]+e1p2[1])/2)
        if equal_points(vp, mid):
            # degenerate axis line
            continue
        if check_axis(vp, mid):
            print("Yes")
            sys.exit()

print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183791756629944
    2. '.' → logprob: -2.3368380069732666
    3. '<|end|>' → logprob: -2.8368380069732666
    4. '\' → logprob: -4.7118377685546875
    5. 'newline' → logprob: -5.0868377685546875
    6. 'import' → logprob: -5.0868377685546875
    7. '
' → logprob: -5.7118377685546875
    8. '' → logprob: -5.8368377685546875
    9. '<|end|>' → logprob: -5.8368377685546875
    10. '\r' → logprob: -6.3368377685546875

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.17448298633098602
    2. '\n' → logprob: -2.799483060836792
    3. '
' → logprob: -3.799483060836792
    4. '<|end|>' → logprob: -3.924483060836792
    5. 'import' → logprob: -4.049482822418213
    6. '\' → logprob: -4.549482822418213
    7. '

' → logprob: -4.924482822418213
    8. '```' → logprob: -5.049482822418213
    9. '<|end|>' → logprob: -5.049482822418213
    10. ',' → logprob: -5.799482822418213

Token 6: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4082861840724945
    2. '\n' → logprob: -2.4082860946655273
    3. 'import' → logprob: -2.5332860946655273
    4. '
' → logprob: -3.0332860946655273
    5. '\' → logprob: -3.4082860946655273
    6. '```' → logprob: -3.6582860946655273
    7. '<|end|>' → logprob: -3.7832860946655273
    8. '

' → logprob: -4.408286094665527
    9. ',' → logprob: -4.533286094665527
    10. '<|end|>' → logprob: -6.158286094665527

Token 7: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.664371848164592e-05
    2. ' .' → logprob: -13.000016212463379
    3. '.readline' → logprob: -13.000016212463379
    4. '."""' → logprob: -13.250016212463379
    5. '.​' → logprob: -13.750016212463379
    6. '.user' → logprob: -14.125016212463379
    7. '.)' → logprob: -14.125016212463379
    8. '[' → logprob: -14.500016212463379
    9. '.import' → logprob: -14.500016212463379
    10. '​.' → logprob: -14.750016212463379

Token 8: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.14049291610717773
    2. 'trace' → logprob: -2.8904929161071777
    3. '_' → logprob: -3.6404929161071777
    4. 'limit' → logprob: -3.8904929161071777
    5. 's' → logprob: -5.265492916107178
    6. '_version' → logprob: -5.765492916107178
    7. '_limit' → logprob: -5.890492916107178
    8. 'attr' → logprob: -6.140492916107178
    9. 'sys' → logprob: -6.265492916107178
    10. '_trace' → logprob: -6.390492916107178

Token 9: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0007692479994148016
    2. 'ursive' → logprob: -7.875769138336182
    3. 'urs' → logprob: -8.50076961517334
    4. 'limit' → logprob: -10.00076961517334
    5. 'urf' → logprob: -10.37576961517334
    6. 'ur' → logprob: -11.00076961517334
    7. 'ursor' → logprob: -11.12576961517334
    8. '_' → logprob: -11.37576961517334
    9. 'urse' → logprob: -11.50076961517334
    10. 'ision' → logprob: -11.62576961517334

Token 10: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.01436141412705183
    2. '_limit' → logprob: -4.264361381530762
    3. 'lim' → logprob: -9.389361381530762
    4. '_depth' → logprob: -10.014361381530762
    5. 'depth' → logprob: -10.264361381530762
    6. ' limit' → logprob: -10.889361381530762
    7. '_' → logprob: -12.389361381530762
    8. '_lim' → logprob: -12.639361381530762
    9. 'error' → logprob: -13.514361381530762
    10. 'l' → logprob: -13.764361381530762

Token 11: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.011373155459296e-05
    2. '(
' → logprob: -11.250030517578125
    3. ' (' → logprob: -12.375030517578125
    4. '((' → logprob: -12.625030517578125
    5. '(

' → logprob: -13.375030517578125
    6. '('' → logprob: -13.500030517578125
    7. '```' → logprob: -13.500030517578125
    8. '("("' → logprob: -13.625030517578125
    9. '(()' → logprob: -13.875030517578125
    10. '40' → logprob: -14.750030517578125

Token 12: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.014176911674439907
    2. '100' → logprob: -4.264176845550537
    3. '300' → logprob: -12.014177322387695
    4. '500' → logprob: -12.639177322387695
    5. ' ' → logprob: -13.014177322387695
    6. '200' → logprob: -14.764177322387695
    7. '150' → logprob: -14.889177322387695
    8. '999' → logprob: -14.889177322387695
    9. '1' → logprob: -15.014177322387695
    10. '```' → logprob: -16.139177322387695

Token 13: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0069395024329423904
    2. '4' → logprob: -6.38193941116333
    3. '00' → logprob: -6.38193941116333
    4. '6' → logprob: -6.50693941116333
    5. '000' → logprob: -6.50693941116333
    6. '5' → logprob: -7.88193941116333
    7. '7' → logprob: -8.881939888000488
    8. '3' → logprob: -11.381939888000488
    9. ')' → logprob: -11.756939888000488
    10. '2' → logprob: -12.631939888000488

Token 14: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.002712033921852708
    2. '6' → logprob: -6.252712249755859
    3. '9' → logprob: -7.377712249755859
    4. '8' → logprob: -8.75271224975586
    5. ' ' → logprob: -16.87771224975586
    6. '5' → logprob: -17.50271224975586
    7. '```' → logprob: -17.62771224975586
    8. '**' → logprob: -17.75271224975586
    9. '(' → logprob: -19.87771224975586
    10. '``' → logprob: -20.00271224975586

Token 15: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ' )' → logprob: -13.875001907348633
    3. '))' → logprob: -14.375001907348633
    4. ')
' → logprob: -15.000001907348633
    5. '```' → logprob: -17.125001907348633
    6. '')' → logprob: -18.375001907348633
    7. ')`' → logprob: -18.375001907348633
    8. ')

' → logprob: -18.500001907348633
    9. ' ' → logprob: -18.500001907348633
    10. '),' → logprob: -18.500001907348633

Token 16: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.481510692741722e-05
    2. '```' → logprob: -10.25007438659668
    3. 'class' → logprob: -11.25007438659668
    4. '\' → logprob: -11.25007438659668
    5. '
' → logprob: -11.62507438659668
    6. 'de' → logprob: -13.62507438659668
    7. '
' → logprob: -14.50007438659668
    8. 'n' → logprob: -14.62507438659668
    9. '``' → logprob: -14.87507438659668
    10. 'd' → logprob: -14.87507438659668

Token 17: '=int' (ID: 37431)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012895719148218632
    2. '()' → logprob: -4.762895584106445
    3. ')' → logprob: -7.012895584106445
    4. '40' → logprob: -7.512895584106445
    5. '_data' → logprob: -7.762895584106445
    6. '```' → logprob: -7.762895584106445
    7. '.' → logprob: -7.887895584106445
    8. '('' → logprob: -7.887895584106445
    9. 'data' → logprob: -8.512895584106445
    10. '=' → logprob: -9.012895584106445

Token 18: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0032272678799927235
    2. '()' → logprob: -6.378227233886719
    3. '(
' → logprob: -7.753227233886719
    4. '('' → logprob: -8.378227233886719
    5. '.' → logprob: -8.378227233886719
    6. '("("' → logprob: -8.753227233886719
    7. '('\' → logprob: -9.003227233886719
    8. '("")' → logprob: -9.753227233886719
    9. '40' → logprob: -10.128227233886719
    10. '(\' → logprob: -10.128227233886719

Token 19: '.stdin' (ID: 93480)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 20: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6224741339683533
    2. '.readline' → logprob: -0.8724741339683533
    3. '.read' → logprob: -3.497474193572998
    4. '.)' → logprob: -4.247474193572998
    5. ')' → logprob: -7.622474193572998
    6. ').' → logprob: -8.74747371673584
    7. '.Read' → logprob: -9.74747371673584
    8. ' .' → logprob: -9.99747371673584
    9. '.")' → logprob: -10.24747371673584
    10. '.')' → logprob: -10.49747371673584

Token 21: ')

' (ID: 1029)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6336532235145569
    2. ')' → logprob: -1.008653163909912
    3. '()' → logprob: -2.258653163909912
    4. '().' → logprob: -9.38365364074707
    5. ' ())' → logprob: -11.00865364074707
    6. '(' → logprob: -11.38365364074707
    7. '))' → logprob: -12.00865364074707
    8. '())
' → logprob: -12.13365364074707
    9. ' )' → logprob: -12.25865364074707
    10. '`)' → logprob: -12.63365364074707

Token 22: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.010257100686430931
    2. '(' → logprob: -4.635257244110107
    3. ')' → logprob: -8.38525676727295
    4. '()
' → logprob: -9.26025676727295
    5. '()

' → logprob: -9.88525676727295
    6. '())' → logprob: -10.01025676727295
    7. 'def' → logprob: -10.38525676727295
    8. '()\' → logprob: -11.51025676727295
    9. 'a' → logprob: -11.88525676727295
    10. '().' → logprob: -12.01025676727295

Token 23: ' orientation' (ID: 29546)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.33586299419403076
    2. ' factorial' → logprob: -2.2108631134033203
    3. '_' → logprob: -2.9608631134033203
    4. ' _' → logprob: -3.0858631134033203
    5. ' f' → logprob: -3.2108631134033203
    6. ' main' → logprob: -4.21086311340332
    7. ' factor' → logprob: -5.21086311340332
    8. ' ' → logprob: -5.46086311340332
    9. '_factor' → logprob: -5.58586311340332
    10. ' solve' → logprob: -5.83586311340332

Token 24: '(p' (ID: 2407)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0043617598712444305
    2. ' (' → logprob: -5.504361629486084
    3. '_' → logprob: -9.254362106323242
    4. '(x' → logprob: -9.879362106323242
    5. '(a' → logprob: -10.504362106323242
    6. '(line' → logprob: -11.004362106323242
    7. '(p' → logprob: -11.254362106323242
    8. '('' → logprob: -11.379362106323242
    9. '(user' → logprob: -11.754362106323242
    10. '(token' → logprob: -12.129362106323242

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009870241396129131
    2. '):' → logprob: -5.5098700523376465
    3. ',p' → logprob: -5.6348700523376465
    4. '[' → logprob: -7.0098700523376465
    5. 'oints' → logprob: -7.8848700523376465
    6. ' ,' → logprob: -8.509870529174805
    7. ')' → logprob: -8.634870529174805
    8. 'oint' → logprob: -8.759870529174805
    9. '1' → logprob: -9.134870529174805
    10. '[]):' → logprob: -9.759870529174805

Token 26: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.008623320609331131
    2. ' q' → logprob: -4.758623123168945
    3. 'a' → logprob: -12.883623123168945
    4. '	q' → logprob: -13.133623123168945
    5. 'p' → logprob: -13.508623123168945
    6. 'qr' → logprob: -14.383623123168945
    7. '```' → logprob: -14.383623123168945
    8. ',q' → logprob: -15.008623123168945
    9. ' ' → logprob: -15.008623123168945
    10. ')' → logprob: -15.383623123168945

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001561009994475171
    2. '):' → logprob: -8.87515640258789
    3. ',p' → logprob: -11.50015640258789
    4. ' ,' → logprob: -12.50015640258789
    5. ')' → logprob: -14.12515640258789
    6. ',r' → logprob: -14.25015640258789
    7. '),' → logprob: -15.25015640258789
    8. ',q' → logprob: -15.62515640258789
    9. ',a' → logprob: -16.62515640258789
    10. '‌,' → logprob: -16.87515640258789

Token 28: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001170460251159966
    2. ' r' → logprob: -6.751170635223389
    3. ')' → logprob: -16.001171112060547
    4. ' ' → logprob: -17.001171112060547
    5. '	r' → logprob: -17.251171112060547
    6. 'p' → logprob: -17.501171112060547
    7. ' ' → logprob: -18.001171112060547
    8. '```' → logprob: -18.626171112060547
    9. '_r' → logprob: -19.126171112060547
    10. '  ' → logprob: -19.626171112060547

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00035119339008815587
    2. ')' → logprob: -8.000350952148438
    3. ':' → logprob: -11.375350952148438
    4. ' ):' → logprob: -13.250350952148438
    5. '):
' → logprob: -13.375350952148438
    6. ',' → logprob: -15.000350952148438
    7. '):
' → logprob: -16.000350952148438
    8. ' ' → logprob: -16.375350952148438
    9. '   ' → logprob: -16.500350952148438
    10. ':**' → logprob: -17.000350952148438

Token 30: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35195043683052063
    2. '   ' → logprob: -1.2269504070281982
    3. '):' → logprob: -6.226950645446777
    4. ' :' → logprob: -7.726950645446777
    5. '    ' → logprob: -8.101950645446777
    6. ')' → logprob: -8.726950645446777
    7. ' ' → logprob: -9.101950645446777
    8. ':
' → logprob: -9.351950645446777
    9. ':return' → logprob: -9.601950645446777
    10. '  ' → logprob: -10.101950645446777

Token 31: ' #' (ID: 1069)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.29116472601890564
    2. ' val' → logprob: -1.541164755821228
    3. '   ' → logprob: -3.2911646366119385
    4. 'px' → logprob: -7.791164875030518
    5. 'return' → logprob: -8.79116439819336
    6. ' px' → logprob: -9.04116439819336
    7. '(px' → logprob: -9.16616439819336
    8. 'x' → logprob: -9.29116439819336
    9. '_val' → logprob: -9.66616439819336
    10. '(val' → logprob: -9.91616439819336

Token 32: ' orientation' (ID: 29546)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.28273022174835205
    2. 'val' → logprob: -1.532730221748352
    3. '   ' → logprob: -3.9077301025390625
    4. 'return' → logprob: -6.6577301025390625
    5. '    ' → logprob: -6.6577301025390625
    6. 'pass' → logprob: -6.6577301025390625
    7. 'value' → logprob: -6.7827301025390625
    8. ' ' → logprob: -7.5327301025390625
    9. '  ' → logprob: -7.5327301025390625
    10. ' return' → logprob: -7.6577301025390625

Token 33: ' test' (ID: 1746)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.5981118083000183
    2. '(' → logprob: -1.598111867904663
    3. '=' → logprob: -2.473111867904663
    4. ' =' → logprob: -2.848111867904663
    5. ')' → logprob: -3.848111867904663
    6. '):' → logprob: -3.848111867904663
    7. '   ' → logprob: -4.098111629486084
    8. ':' → logprob: -4.723111629486084
    9. ' ' → logprob: -4.973111629486084
    10. '_val' → logprob: -5.223111629486084

Token 34: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38850137591362
    2. ':' → logprob: -1.6385014057159424
    3. '(p' → logprob: -2.2635014057159424
    4. '):' → logprob: -4.263501167297363
    5. ')' → logprob: -5.388501167297363
    6. '(' → logprob: -6.138501167297363
    7. '<|end|>' → logprob: -8.013501167297363
    8. '():' → logprob: -8.263501167297363
    9. '<|end|>' → logprob: -8.263501167297363
    10. ',' → logprob: -8.388501167297363

Token 35: ' trip' (ID: 8831)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4284793436527252
    2. ' three' → logprob: -2.0534794330596924
    3. ' ' → logprob: -2.5534794330596924
    4. 'the' → logprob: -3.0534794330596924
    5. ' points' → logprob: -3.6784794330596924
    6. ' counter' → logprob: -4.178479194641113
    7. ' trip' → logprob: -4.678479194641113
    8. '3' → logprob: -5.178479194641113
    9. ' a' → logprob: -5.303479194641113
    10. ' p' → logprob: -5.303479194641113

Token 36: 'let' (ID: 1347)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.12498761713504791
    2. 'let' → logprob: -2.8749876022338867
    3. '   ' → logprob: -3.8749876022338867
    4. ')' → logprob: -3.9999876022338867
    5. ' ' → logprob: -5.249987602233887
    6. 'les' → logprob: -5.749987602233887
    7. 'oint' → logprob: -5.749987602233887
    8. '  ' → logprob: -6.374987602233887
    9. 'licate' → logprob: -6.624987602233887
    10. '(p' → logprob: -6.749987602233887

Token 37: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.02632305398583412
    2. ' (' → logprob: -3.901323080062866
    3. '(' → logprob: -5.776322841644287
    4. '<|end|>' → logprob: -6.901322841644287
    5. '   ' → logprob: -7.526322841644287
    6. ')' → logprob: -7.776322841644287
    7. ':' → logprob: -8.776323318481445
    8. '  ' → logprob: -9.151323318481445
    9. ',' → logprob: -9.276323318481445
    10. ' ' → logprob: -9.401323318481445

Token 38: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0036783369723707438
    2. ' p' → logprob: -5.628678321838379
    3. '(p' → logprob: -10.628678321838379
    4. ',' → logprob: -10.628678321838379
    5. '   ' → logprob: -11.253678321838379
    6. ')' → logprob: -11.503678321838379
    7. ',p' → logprob: -13.003678321838379
    8. ' ,' → logprob: -13.628678321838379
    9. '  ' → logprob: -13.878678321838379
    10. ' ' → logprob: -14.128678321838379

Token 39: ',q' (ID: 86188)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005352705251425505
    2. ' ,' → logprob: -5.25535249710083
    3. ')' → logprob: -9.380352973937988
    4. ',q' → logprob: -11.505352973937988
    5. ',p' → logprob: -11.880352973937988
    6. '),' → logprob: -12.505352973937988
    7. '<|end|>' → logprob: -12.755352973937988
    8. '[' → logprob: -13.255352973937988
    9. '  ' → logprob: -13.380352973937988
    10. '):' → logprob: -13.630352973937988

Token 40: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.045197874307632446
    2. ',r' → logprob: -3.1701979637145996
    3. ')' → logprob: -6.9201979637146
    4. 'r' → logprob: -7.1701979637146
    5. ' ,' → logprob: -7.9201979637146
    6. ',p' → logprob: -10.545197486877441
    7. '<|end|>' → logprob: -10.795197486877441
    8. ' r' → logprob: -12.295197486877441
    9. ',q' → logprob: -12.420197486877441
    10. ',)' → logprob: -12.545197486877441

Token 41: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18148954212665558
    2. ')' → logprob: -1.8064895868301392
    3. '):
' → logprob: -6.93148946762085
    4. '   ' → logprob: -7.43148946762085
    5. ' ):' → logprob: -10.056489944458008
    6. '):
' → logprob: -10.181489944458008
    7. ' )' → logprob: -10.681489944458008
    8. ':' → logprob: -10.931489944458008
    9. ',' → logprob: -11.181489944458008
    10. '):

' → logprob: -11.306489944458008

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6450092196464539
    2. ':' → logprob: -0.7700092196464539
    3. '):' → logprob: -4.5200090408325195
    4. ':
' → logprob: -7.3950090408325195
    5. ')' → logprob: -8.89500904083252
    6. ' :' → logprob: -8.89500904083252
    7. '):
' → logprob: -9.02000904083252
    8. ',' → logprob: -9.64500904083252
    9. '    ' → logprob: -9.89500904083252
    10. ':return' → logprob: -10.14500904083252

Token 43: ' val' (ID: 1459)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015157432295382023
    2. '    ' → logprob: -4.890157222747803
    3. ':' → logprob: -6.140157222747803
    4. '  ' → logprob: -7.140157222747803
    5. '    
' → logprob: -7.140157222747803
    6. 'val' (adapté à ' val') → logprob: -7.265157222747803
    7. ')' → logprob: -7.515157222747803
    8. 'return' → logprob: -8.265157699584961
    9. '```' → logprob: -8.265157699584961
    10. '     
' → logprob: -8.390157699584961

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16025885939598083
    2. '=' → logprob: -1.9102588891983032
    3. '=int' → logprob: -11.410259246826172
    4. ' ' → logprob: -11.660259246826172
    5. ')' → logprob: -12.160259246826172
    6. ' =(' → logprob: -13.285259246826172
    7. ' =)' → logprob: -13.660259246826172
    8. '=line' → logprob: -13.785259246826172
    9. '   ' → logprob: -14.285259246826172
    10. '  ' → logprob: -14.785259246826172

Token 45: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3502662777900696
    2. '(q' → logprob: -1.2252662181854248
    3. '(p' → logprob: -6.725266456604004
    4. '(' → logprob: -7.600266456604004
    5. ' ' → logprob: -9.975266456604004
    6. '(r' → logprob: -10.725266456604004
    7. '((' → logprob: -10.725266456604004
    8. ' ((' → logprob: -11.475266456604004
    9. '(math' → logprob: -12.475266456604004
    10. '(Q' → logprob: -13.100266456604004

Token 46: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.05532149225473404
    2. '(q' → logprob: -2.930321455001831
    3. ' (' → logprob: -8.18032169342041
    4. ' q' → logprob: -8.93032169342041
    5. '(' → logprob: -11.80532169342041
    6. '_q' → logprob: -12.55532169342041
    7. '	q' → logprob: -12.80532169342041
    8. '[q' → logprob: -12.80532169342041
    9. '-q' → logprob: -13.80532169342041
    10. '((' → logprob: -13.80532169342041

Token 47: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00024132427643053234
    2. '.y' → logprob: -8.50024127960205
    3. 'y' → logprob: -10.75024127960205
    4. '.' → logprob: -11.87524127960205
    5. '.x' → logprob: -12.75024127960205
    6. ' [' → logprob: -13.00024127960205
    7. '[y' → logprob: -13.75024127960205
    8. 'x' → logprob: -14.62524127960205
    9. '-y' → logprob: -14.75024127960205
    10. '```' → logprob: -14.75024127960205

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5759711861610413
    2. '0' → logprob: -0.8259711861610413
    3. '[' → logprob: -10.950971603393555
    4. ' ' → logprob: -12.450971603393555
    5. 'y' → logprob: -13.075971603393555
    6. '

' → logprob: -13.450971603393555
    7. '
' → logprob: -13.575971603393555
    8. '   ' → logprob: -13.700971603393555
    9. 'x' → logprob: -13.950971603393555
    10. '```' → logprob: -14.075971603393555

Token 49: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4295734465122223
    2. '-' → logprob: -1.0545734167099
    3. ']' → logprob: -7.8045735359191895
    4. ']-' → logprob: -7.9295735359191895
    5. '-p' → logprob: -10.179573059082031
    6. '-q' → logprob: -10.554573059082031
    7. ' ' → logprob: -11.054573059082031
    8. '[' → logprob: -11.054573059082031
    9. ')' → logprob: -13.054573059082031
    10. '   ' → logprob: -13.679573059082031

Token 50: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.0126840758603066e-05
    2. ' p' → logprob: -10.125040054321289
    3. '	p' → logprob: -18.12504005432129
    4. ')p' → logprob: -19.75004005432129
    5. ')' → logprob: -20.00004005432129
    6. 'q' → logprob: -20.25004005432129
    7. '<p' → logprob: -20.62504005432129
    8. '   ' → logprob: -21.87504005432129
    9. '-p' → logprob: -22.50004005432129
    10. ' ' → logprob: -22.75004005432129

Token 51: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011367622064426541
    2. '1' → logprob: -7.001136779785156
    3. '0' → logprob: -8.501136779785156
    4. '<|end|>' → logprob: -11.376136779785156
    5. '][' → logprob: -13.001136779785156
    6. ']' → logprob: -13.126136779785156
    7. ' ' → logprob: -13.376136779785156
    8. '[
' → logprob: -13.376136779785156
    9. '```' → logprob: -14.001136779785156
    10. '<|end|>' → logprob: -14.001136779785156

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001605115394340828
    2. '0' → logprob: -8.750160217285156
    3. ' ' → logprob: -13.250160217285156
    4. '[' → logprob: -16.875160217285156
    5. '   ' → logprob: -17.062660217285156
    6. ']' → logprob: -17.687660217285156
    7. '```' → logprob: -17.687660217285156
    8. '<|end|>' → logprob: -17.812660217285156
    9. '  ' → logprob: -18.125160217285156
    10. '<|end|>' → logprob: -18.125160217285156

Token 53: '])' (ID: 4636)
  Prédit: ')*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')*(' → logprob: -0.4910241961479187
    2. ')' → logprob: -0.9910241961479187
    3. ')*' → logprob: -4.116024017333984
    4. ' )' → logprob: -7.741024017333984
    5. '*)' → logprob: -9.866024017333984
    6. '*(' → logprob: -13.491024017333984
    7. ')**' → logprob: -13.741024017333984
    8. '）' → logprob: -13.866024017333984
    9. '*' → logprob: -13.866024017333984
    10. ']*(' → logprob: -13.991024017333984

Token 54: '*(' (ID: 14793)
  Prédit: ')*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*(' → logprob: -0.5653150677680969
    2. ')' → logprob: -0.9403150677680969
    3. ')*' → logprob: -3.565315008163452
    4. '*(' → logprob: -5.190315246582031
    5. ' *' → logprob: -5.690315246582031
    6. '*' → logprob: -5.690315246582031
    7. ' )' → logprob: -7.315315246582031
    8. ']*(' → logprob: -11.315315246582031
    9. '*)' → logprob: -11.815315246582031
    10. '*q' → logprob: -12.440315246582031

Token 55: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001959201879799366
    2. '(r' → logprob: -6.501959323883057
    3. ' r' → logprob: -7.751959323883057
    4. ' (' → logprob: -11.376958847045898
    5. 'q' → logprob: -11.751958847045898
    6. '	r' → logprob: -12.501958847045898
    7. '_r' → logprob: -13.501958847045898
    8. ')' → logprob: -14.126958847045898
    9. '-r' → logprob: -15.001958847045898
    10. '
' → logprob: -15.126958847045898

Token 56: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '0' → logprob: -14.750000953674316
    3. '[
' → logprob: -16.125
    4. '```' → logprob: -18.75
    5. ' [' → logprob: -18.875
    6. '
' → logprob: -19.375
    7. 'x' → logprob: -20.25
    8. '1' → logprob: -20.5
    9. '][' → logprob: -20.875
    10. '<|end|>' → logprob: -21.125

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.750001907348633
    3. ' ' → logprob: -15.375001907348633
    4. '
' → logprob: -17.062501907348633
    5. '۰' → logprob: -17.062501907348633
    6. '```' → logprob: -17.687501907348633
    7. '1' → logprob: -18.000001907348633
    8. '   ' → logprob: -18.062501907348633
    9. 'x' → logprob: -18.562501907348633
    10. '2' → logprob: -18.875001907348633

Token 58: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06892794370651245
    2. ' -' → logprob: -2.8189280033111572
    3. ']-' → logprob: -5.818927764892578
    4. '-p' → logprob: -5.943927764892578
    5. '-q' → logprob: -6.818927764892578
    6. '[' → logprob: -9.193927764892578
    7. ')-' → logprob: -10.318927764892578
    8. '()-' → logprob: -10.693927764892578
    9. '-python' → logprob: -10.693927764892578
    10. ']' → logprob: -10.818927764892578

Token 59: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0006404805462807417
    2. ' q' → logprob: -7.375640392303467
    3. '	q' → logprob: -11.500640869140625
    4. ')' → logprob: -13.750640869140625
    5. 'p' → logprob: -13.750640869140625
    6. ''q' → logprob: -15.125640869140625
    7. '_q' → logprob: -15.375640869140625
    8. ' ' → logprob: -15.375640869140625
    9. '?q' → logprob: -15.625640869140625
    10. '>' → logprob: -16.000640869140625

Token 60: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007106438861228526
    2. '0' → logprob: -7.250710487365723
    3. ')' → logprob: -15.625710487365723
    4. '][' → logprob: -16.12571144104004
    5. '[
' → logprob: -16.50071144104004
    6. '   ' → logprob: -16.62571144104004
    7. ' [' → logprob: -16.75071144104004
    8. '```' → logprob: -16.75071144104004
    9. ' ' → logprob: -17.00071144104004
    10. ']' → logprob: -17.37571144104004

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00462510297074914
    2. '[' → logprob: -5.37962532043457
    3. ' ' → logprob: -13.25462532043457
    4. ')' → logprob: -13.75462532043457
    5. '   ' → logprob: -14.69212532043457
    6. '۰' → logprob: -15.06712532043457
    7. '```' → logprob: -15.25462532043457
    8. '<|end|>' → logprob: -15.50462532043457
    9. ']' → logprob: -15.62962532043457
    10. ' [' → logprob: -16.19212532043457

Token 62: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017150469357147813
    2. ' )' → logprob: -6.501715183258057
    3. ')-(' → logprob: -9.001714706420898
    4. ')-' → logprob: -9.501714706420898
    5. '))' → logprob: -12.876714706420898
    6. '-)' → logprob: -13.001714706420898
    7. '')' → logprob: -13.001714706420898
    8. '])' → logprob: -13.501714706420898
    9. ')
' → logprob: -14.126714706420898
    10. '`)' → logprob: -14.376714706420898

Token 63: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2521747052669525
    2. '-' → logprob: -1.502174735069275
    3. ')-(' → logprob: -8.752174377441406
    4. '-(' → logprob: -10.627174377441406
    5. ' ' → logprob: -10.877174377441406
    6. ')' → logprob: -11.252174377441406
    7. '   ' → logprob: -11.627174377441406
    8. ' -(' → logprob: -12.002174377441406
    9. ' -
' → logprob: -12.752174377441406
    10. '  ' → logprob: -13.002174377441406

Token 64: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1608499437570572
    2. '(q' → logprob: -1.910849928855896
    3. '(p' → logprob: -7.5358500480651855
    4. '   ' → logprob: -10.035849571228027
    5. '(r' → logprob: -10.785849571228027
    6. '  ' → logprob: -11.410849571228027
    7. ' ' → logprob: -11.660849571228027
    8. '(' → logprob: -12.660849571228027
    9. '(s' → logprob: -12.660849571228027
    10. '(Q' → logprob: -14.785849571228027

Token 65: 'q' (ID: 80)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.02977629378437996
    2. ' (' → logprob: -3.5297763347625732
    3. '(p' → logprob: -11.529776573181152
    4. '(r' → logprob: -12.154776573181152
    5. ' ' → logprob: -12.779776573181152
    6. '   ' → logprob: -12.904776573181152
    7. '(' → logprob: -13.279776573181152
    8. '(s' → logprob: -13.529776573181152
    9. '  ' → logprob: -13.904776573181152
    10. ')' → logprob: -15.029776573181152

Token 66: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.8889261304575484e-06
    2. '<|end|>' → logprob: -13.125003814697266
    3. '<|end|>' → logprob: -13.875003814697266
    4. '0' → logprob: -16.000003814697266
    5. '[
' → logprob: -16.000003814697266
    6. '```' → logprob: -16.000003814697266
    7. '1' → logprob: -16.437503814697266
    8. 'import' → logprob: -16.687503814697266
    9. '][' → logprob: -17.000003814697266
    10. 'Answer' → logprob: -17.187503814697266

Token 67: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17983762919902802
    2. '0' → logprob: -1.8048375844955444
    3. '1' → logprob: -9.554837226867676
    4. ' ' → logprob: -11.804837226867676
    5. '```' → logprob: -12.554837226867676
    6. ' [' → logprob: -12.929837226867676
    7. '][' → logprob: -13.304837226867676
    8. ']' → logprob: -13.679837226867676
    9. '   ' → logprob: -14.117337226867676
    10. '<|end|>' → logprob: -14.304837226867676

Token 68: ']-' (ID: 27107)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0006663294625468552
    2. ' p' → logprob: -7.50066614151001
    3. '<|end|>' → logprob: -9.250666618347168
    4. 'q' → logprob: -11.500666618347168
    5. ''p' → logprob: -13.125666618347168
    6. '<|end|>' → logprob: -13.500666618347168
    7. '[' → logprob: -13.625666618347168
    8. 'r' → logprob: -14.375666618347168
    9. ' ' → logprob: -14.875666618347168
    10. '0' → logprob: -15.375666618347168

Token 70: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.35837464465294e-05
    2. '0' → logprob: -10.750043869018555
    3. '][' → logprob: -12.000043869018555
    4. ')' → logprob: -12.250043869018555
    5. '<|end|>' → logprob: -12.375043869018555
    6. ')[' → logprob: -13.125043869018555
    7. '[
' → logprob: -14.000043869018555
    8. '<|end|>' → logprob: -14.250043869018555
    9. ' [' → logprob: -14.375043869018555
    10. '1' → logprob: -14.375043869018555

Token 71: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01606510579586029
    2. '0' → logprob: -4.1410651206970215
    3. ' ' → logprob: -12.016064643859863
    4. ' [' → logprob: -12.016064643859863
    5. '][' → logprob: -12.141064643859863
    6. '[
' → logprob: -12.391064643859863
    7. ')' → logprob: -12.891064643859863
    8. ']' → logprob: -13.516064643859863
    9. '```' → logprob: -13.641064643859863
    10. '<|end|>' → logprob: -13.641064643859863

Token 72: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2957654595375061
    2. ')' → logprob: -1.9207653999328613
    3. '])*' → logprob: -2.7957653999328613
    4. ')*(' → logprob: -3.1707653999328613
    5. ')**' → logprob: -6.295765399932861
    6. ')*' → logprob: -6.545765399932861
    7. '[' → logprob: -7.545765399932861
    8. ']*(' → logprob: -7.795765399932861
    9. ']*)' → logprob: -7.795765399932861
    10. ']' → logprob: -8.29576587677002

Token 73: '*(' (ID: 14793)
  Prédit: ')*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*(' → logprob: -0.0030298829078674316
    2. ']*(' → logprob: -6.753029823303223
    3. '*(' → logprob: -7.003029823303223
    4. ')' → logprob: -7.253029823303223
    5. '[' → logprob: -8.503029823303223
    6. ')*' → logprob: -10.378029823303223
    7. ')(' → logprob: -12.378029823303223
    8. ' )' → logprob: -14.628029823303223
    9. '```' → logprob: -14.628029823303223
    10. ']*' → logprob: -14.878029823303223

Token 74: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.4974866644479334e-05
    2. ' r' → logprob: -11.500015258789062
    3. '(r' → logprob: -12.500015258789062
    4. 'q' → logprob: -14.000015258789062
    5. '[r' → logprob: -15.875015258789062
    6. ')' → logprob: -17.000015258789062
    7. '<|end|>' → logprob: -17.250015258789062
    8. '	r' → logprob: -17.750015258789062
    9. '_r' → logprob: -19.125015258789062
    10. ' ' → logprob: -19.250015258789062

Token 75: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5570885807392187e-05
    2. '<|end|>' → logprob: -11.625015258789062
    3. '1' → logprob: -12.875015258789062
    4. '<|end|>' → logprob: -13.375015258789062
    5. '[
' → logprob: -14.375015258789062
    6. '][' → logprob: -14.875015258789062
    7. '0' → logprob: -15.000015258789062
    8. ')[' → logprob: -15.625015258789062
    9. ')' → logprob: -15.625015258789062
    10. '```' → logprob: -15.750015258789062

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016061583533883095
    2. '[' → logprob: -4.141061782836914
    3. '```' → logprob: -12.266061782836914
    4. ']' → logprob: -12.641061782836914
    5. '<|end|>' → logprob: -12.641061782836914
    6. ' ' → logprob: -12.641061782836914
    7. '0' → logprob: -12.766061782836914
    8. ')' → logprob: -12.891061782836914
    9. '<|end|>' → logprob: -13.391061782836914
    10. '][' → logprob: -14.016061782836914

Token 77: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2759424149990082
    2. '-' → logprob: -2.150942325592041
    3. '])' → logprob: -2.650942325592041
    4. '[' → logprob: -3.400942325592041
    5. '][' → logprob: -4.525942325592041
    6. ']-' → logprob: -5.400942325592041
    7. ')' → logprob: -5.525942325592041
    8. '<|end|>' → logprob: -7.900942325592041
    9. ' -' → logprob: -8.1509428024292
    10. '])[' → logprob: -8.7759428024292

Token 78: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.6286106983898208e-05
    2. ' q' → logprob: -11.125016212463379
    3. '	q' → logprob: -14.125016212463379
    4. '[q' → logprob: -14.750016212463379
    5. ''q' → logprob: -16.500017166137695
    6. 'qml' → logprob: -16.500017166137695
    7. '1' → logprob: -17.250017166137695
    8. 'p' → logprob: -17.375017166137695
    9. '$q' → logprob: -17.500017166137695
    10. '[' → logprob: -17.500017166137695

Token 79: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008821852505207062
    2. '1' → logprob: -4.758821964263916
    3. '][' → logprob: -8.633821487426758
    4. '])' → logprob: -11.258821487426758
    5. ']' → logprob: -11.758821487426758
    6. ')' → logprob: -13.008821487426758
    7. ' [' → logprob: -13.633821487426758
    8. ')[' → logprob: -13.633821487426758
    9. '])[' → logprob: -14.258821487426758
    10. '0' → logprob: -14.383821487426758

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. '0' → logprob: -13.625003814697266
    3. '[' → logprob: -13.750003814697266
    4. '])' → logprob: -14.375003814697266
    5. ']' → logprob: -14.500003814697266
    6. ' ' → logprob: -14.625003814697266
    7. '-' → logprob: -16.000003814697266
    8. '```' → logprob: -16.125003814697266
    9. '<|end|>' → logprob: -16.937503814697266
    10. '   ' → logprob: -17.500003814697266

Token 81: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.621933451038785e-05
    2. '])' → logprob: -10.625056266784668
    3. ' )' → logprob: -11.500056266784668
    4. '))' → logprob: -11.625056266784668
    5. ')>' → logprob: -13.250056266784668
    6. ']' → logprob: -13.500056266784668
    7. '）' → logprob: -13.500056266784668
    8. ')
' → logprob: -13.750056266784668
    9. '   ' → logprob: -13.875056266784668
    10. '`)' → logprob: -14.000056266784668

Token 82: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03394787758588791
    2. ':' → logprob: -5.283947944641113
    3. ' if' → logprob: -5.283947944641113
    4. '>' → logprob: -5.283947944641113
    5. '<' → logprob: -5.533947944641113
    6. ' ' → logprob: -5.908947944641113
    7. '=' → logprob: -6.158947944641113
    8. ',' → logprob: -6.158947944641113
    9. ')' → logprob: -6.283947944641113
    10. '
' → logprob: -6.783947944641113

Token 83: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013464661315083504
    2. '>' → logprob: -5.888464450836182
    3. '
' → logprob: -6.013464450836182
    4. ')' → logprob: -6.513464450836182
    5. ' ' → logprob: -6.763464450836182
    6. ' if' → logprob: -6.888464450836182
    7. ':' → logprob: -7.013464450836182
    8. ',' → logprob: -7.513464450836182
    9. ' return' → logprob: -7.638464450836182
    10. 'if' (adapté à ' if') → logprob: -8.01346492767334

Token 84: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.0013504724483937025
    2. 'val' → logprob: -7.001350402832031
    3. ' ' → logprob: -7.751350402832031
    4. '	val' → logprob: -12.126350402832031
    5. '  ' → logprob: -13.626350402832031
    6. ' ' → logprob: -13.876350402832031
    7. '[val' → logprob: -14.126350402832031
    8. '(val' → logprob: -15.626350402832031
    9. '   ' → logprob: -16.00135040283203
    10. ' vall' → logprob: -16.75135040283203

Token 85: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07436271011829376
    2. '>' → logprob: -2.6993627548217773
    3. ' ==' → logprob: -5.824362754821777
    4. '==' → logprob: -6.574362754821777
    5. '=' → logprob: -10.324362754821777
    6. ' ' → logprob: -11.449362754821777
    7. ' ' → logprob: -11.949362754821777
    8. '0' → logprob: -12.074362754821777
    9. ':' → logprob: -12.949362754821777
    10. ')>' → logprob: -13.886862754821777

Token 86: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01603495515882969
    2. ' ' → logprob: -4.141035079956055
    3. '<|end|>' → logprob: -15.141035079956055
    4. '>' → logprob: -15.641035079956055
    5. '۰' → logprob: -16.266035079956055
    6. ' ' → logprob: -17.203535079956055
    7. '०' → logprob: -17.453535079956055
    8. '   ' → logprob: -17.453535079956055
    9. '<|end|>' → logprob: -17.453535079956055
    10. '  ' → logprob: -17.766035079956055

Token 87: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000804745068307966
    2. ' ' → logprob: -7.125804901123047
    3. '۰' → logprob: -16.875804901123047
    4. '=' → logprob: -17.188304901123047
    5. '<|end|>' → logprob: -17.625804901123047
    6. '०' → logprob: -17.688304901123047
    7. '>' → logprob: -17.750804901123047
    8. '  ' → logprob: -18.063304901123047
    9. '000' → logprob: -18.063304901123047
    10. '০' → logprob: -18.063304901123047

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012845216551795602
    2. ' :' → logprob: -7.251284599304199
    3. ':return' → logprob: -7.501284599304199
    4. '):' → logprob: -11.3762845993042
    5. ':
' → logprob: -12.1262845993042
    6. '<|end|>' → logprob: -12.7512845993042
    7. ':**' → logprob: -14.3762845993042
    8. ')' → logprob: -15.0012845993042
    9. '>:' → logprob: -15.6262845993042
    10. '<|end|>' → logprob: -15.6262845993042

Token 89: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43595996499061584
    2. ' return' → logprob: -1.5609599351882935
    3. '    ' → logprob: -2.810960054397583
    4. ' ' → logprob: -3.685960054397583
    5. '   ' → logprob: -3.935960054397583
    6. ':return' → logprob: -4.310959815979004
    7. 'return' → logprob: -4.685959815979004
    8. ':' → logprob: -4.935959815979004
    9. '0' → logprob: -5.310959815979004
    10. '<|end|>' → logprob: -6.560959815979004

Token 90: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.07977821677923203
    2. ' ' → logprob: -2.9547781944274902
    3. 'return' (adapté à ' return') → logprob: -4.70477819442749
    4. '0' → logprob: -4.70477819442749
    5. '    ' → logprob: -5.32977819442749
    6. ':return' → logprob: -7.32977819442749
    7. '   ' → logprob: -7.95477819442749
    8. ' ' → logprob: -8.954778671264648
    9. '  ' → logprob: -9.079778671264648
    10. '	return' → logprob: -9.454778671264648

Token 91: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03804263845086098
    2. ' ' → logprob: -3.2880425453186035
    3. '   ' → logprob: -14.038043022155762
    4. ''' → logprob: -16.788042068481445
    5. '  ' → logprob: -16.788042068481445
    6. ' ' → logprob: -17.038042068481445
    7. '1' → logprob: -17.163042068481445
    8. '=' → logprob: -17.413042068481445
    9. '"' → logprob: -17.725542068481445
    10. ',' → logprob: -17.725542068481445

Token 92: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. 'col' → logprob: -16.625001907348633
    4. '   ' → logprob: -18.375001907348633
    5. 'return' → logprob: -18.875001907348633
    6. 'o' → logprob: -19.125001907348633
    7. ''' → logprob: -19.125001907348633
    8. '"' → logprob: -19.375001907348633
    9. '۰' → logprob: -20.125001907348633
    10. 'val' → logprob: -20.375001907348633

Token 93: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1892685741186142
    2. 'elif' → logprob: -2.0642685890197754
    3. ' elif' → logprob: -3.8142685890197754
    4. '
' → logprob: -4.439268589019775
    5. '    
' → logprob: -5.689268589019775
    6. '<|end|>' → logprob: -5.814268589019775
    7. '	elif' → logprob: -5.939268589019775
    8. '  ' → logprob: -7.189268589019775
    9. '<|end|>' → logprob: -7.939268589019775
    10. '   
' → logprob: -8.064268112182617

Token 94: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.7202590107917786
    2. '   ' → logprob: -1.4702589511871338
    3. ' elif' → logprob: -2.095258951187134
    4. '<|end|>' → logprob: -2.470258951187134
    5. '
' → logprob: -3.595258951187134
    6. '  ' → logprob: -4.720259189605713
    7. '	elif' → logprob: -4.845259189605713
    8. ',' → logprob: -5.345259189605713
    9. ')' → logprob: -5.595259189605713
    10. '    
' → logprob: -5.595259189605713

Token 95: ' return' (ID: 622)
  Prédit: ' elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.9807528257369995
    2. 'elif' → logprob: -1.1057528257369995
    3. '   ' → logprob: -1.4807528257369995
    4. '<|end|>' → logprob: -3.730752944946289
    5. '>' → logprob: -3.980752944946289
    6. '	elif' → logprob: -4.730752944946289
    7. ',' → logprob: -6.105752944946289
    8. 'return' (adapté à ' return') → logprob: -6.230752944946289
    9. '<|end|>' → logprob: -6.230752944946289
    10. ' return' → logprob: -6.605752944946289

Token 96: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03804917633533478
    2. ' ' → logprob: -3.2880492210388184
    3. '(' → logprob: -12.41304874420166
    4. ' (' → logprob: -13.28804874420166
    5. '>' → logprob: -14.41304874420166
    6. ' -' → logprob: -15.41304874420166
    7. ' >' → logprob: -15.66304874420166
    8. ' ' → logprob: -15.66304874420166
    9. '-' → logprob: -16.038049697875977
    10. '   ' → logprob: -16.038049697875977

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028096288442611694
    2. ' ' → logprob: -5.877809524536133
    3. '(' → logprob: -12.752809524536133
    4. '-' → logprob: -14.252809524536133
    5. ' (' → logprob: -15.002809524536133
    6. '>' → logprob: -15.127809524536133
    7. '2' → logprob: -15.627809524536133
    8. ' -' → logprob: -15.940309524536133
    9. '```' → logprob: -16.252809524536133
    10. '   ' → logprob: -16.627809524536133

Token 98: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.008732876740396023
    2. 'if' → logprob: -4.758732795715332
    3. '<|end|>' → logprob: -9.383732795715332
    4. ' ' → logprob: -11.008732795715332
    5. '0' → logprob: -11.633732795715332
    6. '   ' → logprob: -13.633732795715332
    7. '	if' → logprob: -13.883732795715332
    8. '  ' → logprob: -14.008732795715332
    9. '<|end|>' → logprob: -14.008732795715332
    10. '2' → logprob: -14.508732795715332

Token 99: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.1602308303117752
    2. 'val' → logprob: -1.9102308750152588
    3. ' ' → logprob: -12.66023063659668
    4. '	val' → logprob: -13.03523063659668
    5. '(val' → logprob: -14.03523063659668
    6. ' (' → logprob: -15.78523063659668
    7. '[val' → logprob: -16.03523063659668
    8. ' ' → logprob: -16.41023063659668
    9. 'Val' → logprob: -17.41023063659668
    10. '_val' → logprob: -17.41023063659668

Token 100: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.10021023452281952
    2. ' >' → logprob: -2.350210189819336
    3. ' ' → logprob: -13.475210189819336
    4. '<' → logprob: -13.975210189819336
    5. ' ' → logprob: -14.475210189819336
    6. '()>' → logprob: -15.475210189819336
    7. '&gt' → logprob: -15.475210189819336
    8. '>`' → logprob: -16.350210189819336
    9. '.' → logprob: -16.850210189819336
    10. ''>' → logprob: -16.912710189819336

Token 101: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31326186656951904
    2. '0' → logprob: -1.313261866569519
    3. ' ' → logprob: -16.188261032104492
    4. '  ' → logprob: -16.938261032104492
    5. '<|end|>' → logprob: -17.188261032104492
    6. '>' → logprob: -17.688261032104492
    7. '=' → logprob: -18.750761032104492
    8. '1' → logprob: -19.063261032104492
    9. '   ' → logprob: -19.563261032104492
    10. '180' → logprob: -19.938261032104492

Token 102: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002475777640938759
    2. ' ' → logprob: -6.002475738525391
    3. '   ' → logprob: -17.25247573852539
    4. '<|end|>' → logprob: -17.50247573852539
    5. '  ' → logprob: -17.87747573852539
    6. ' ' → logprob: -19.50247573852539
    7. '>' → logprob: -20.25247573852539
    8. '۰' → logprob: -20.25247573852539
    9. '=' → logprob: -20.75247573852539
    10. 'val' → logprob: -21.50247573852539

Token 103: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.014164221473038197
    2. 'else' → logprob: -4.264164447784424
    3. '	else' → logprob: -14.639163970947266
    4. ' ' → logprob: -16.264163970947266
    5. '_else' → logprob: -16.514163970947266
    6. '<|end|>' → logprob: -18.139163970947266
    7. ' ' → logprob: -18.514163970947266
    8. '```' → logprob: -18.764163970947266
    9. '   ' → logprob: -18.889163970947266
    10. '0' → logprob: -19.014163970947266

Token 104: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7828821539878845
    2. '2' → logprob: -0.9078821539878845
    3. ' -' → logprob: -2.2828822135925293
    4. ' ' → logprob: -3.2828822135925293
    5. '0' → logprob: -11.657881736755371
    6. '```' → logprob: -11.907881736755371
    7. '   ' → logprob: -13.345381736755371
    8. '−' → logprob: -13.532881736755371
    9. '  ' → logprob: -13.907881736755371
    10. ',' → logprob: -14.220381736755371

Token 105: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2014797031879425
    2. '-' → logprob: -1.7014796733856201
    3. ' -' → logprob: -10.0764799118042
    4. ' ' → logprob: -10.7014799118042
    5. '```' → logprob: -13.4514799118042
    6. '0' → logprob: -16.201478958129883
    7. '−' → logprob: -16.826478958129883
    8. '(' → logprob: -17.701478958129883
    9. '' → logprob: -17.951478958129883
    10. '=' → logprob: -17.951478958129883

Token 106: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007749898359179497
    2. '
' → logprob: -5.132750034332275
    3. '<|end|>' → logprob: -6.757750034332275
    4. '

' → logprob: -9.257749557495117
    5. 'newline' → logprob: -9.257749557495117
    6. ')' → logprob: -9.257749557495117
    7. '    
' → logprob: -9.382749557495117
    8. '```' → logprob: -9.382749557495117
    9. '#' → logprob: -9.882749557495117
    10. '<|end|>' → logprob: -10.507749557495117

Token 108: ' convex' (ID: 142423)
  Prédit: ' convex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convex' → logprob: -0.02723853476345539
    2. 'conv' → logprob: -4.027238368988037
    3. ' gra' → logprob: -4.902238368988037
    4. ' on' → logprob: -7.777238368988037
    5. ' jar' → logprob: -7.777238368988037
    6. 'gra' → logprob: -7.902238368988037
    7. 'jar' → logprob: -9.777238845825195
    8. 'on' → logprob: -10.027238845825195
    9. ' compare' → logprob: -10.527238845825195
    10. ' distance' → logprob: -10.652238845825195

Token 109: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.00011427151912357658
    2. 'h' → logprob: -9.625114440917969
    3. '_' → logprob: -10.375114440917969
    4. 'Hull' → logprob: -11.500114440917969
    5. ' hull' → logprob: -12.625114440917969
    6. '_polygon' → logprob: -13.625114440917969
    7. '_point' → logprob: -14.375114440917969
    8. '_H' → logprob: -15.375114440917969
    9. ' Hull' → logprob: -15.875114440917969
    10. '<|end|>' → logprob: -16.12511444091797

Token 110: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.00022403974435292184
    2. 'ul' → logprob: -8.875224113464355
    3. '_' → logprob: -10.250224113464355
    4. 'ulls' → logprob: -11.500224113464355
    5. ' ull' → logprob: -11.625224113464355
    6. '(' → logprob: -12.375224113464355
    7. 'u' → logprob: -12.375224113464355
    8. '```' → logprob: -12.875224113464355
    9. '{' → logprob: -13.375224113464355
    10. '...' → logprob: -13.500224113464355

Token 111: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.0002572865632828325
    2. '(' → logprob: -9.00025749206543
    3. ' (' → logprob: -9.12525749206543
    4. '(point' → logprob: -11.12525749206543
    5. '(p' → logprob: -12.00025749206543
    6. '(Point' → logprob: -13.37525749206543
    7. '(vertices' → logprob: -14.25025749206543
    8. '(coords' → logprob: -14.37525749206543
    9. '(P' → logprob: -14.87525749206543
    10. '(pol' → logprob: -15.12525749206543

Token 112: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00019221604452468455
    2. ':' → logprob: -9.500192642211914
    3. ' ):' → logprob: -9.750192642211914
    4. ')' → logprob: -10.000192642211914
    5. '):
' → logprob: -11.375192642211914
    6. '[]):' → logprob: -14.125192642211914
    7. ']:' → logprob: -14.625192642211914
    8. ',' → logprob: -15.750192642211914
    9. '):
' → logprob: -15.750192642211914
    10. '}:' → logprob: -16.000192642211914

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002754118526354432
    2. ' points' → logprob: -6.502754211425781
    3. ' if' → logprob: -7.252754211425781
    4. ' n' → logprob: -8.002754211425781
    5. '    
' → logprob: -9.627754211425781
    6. 'n' → logprob: -9.752754211425781
    7. '	points' → logprob: -10.377754211425781
    8. 'points' → logprob: -11.752754211425781
    9. '(points' → logprob: -11.752754211425781
    10. ' sorted' → logprob: -11.877754211425781

Token 114: ' points' (ID: 5571)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.497083067893982
    2. 'n' → logprob: -1.622083067893982
    3. 'points' (adapté à ' points') → logprob: -1.622083067893982
    4. '   ' → logprob: -1.872083067893982
    5. ' points' → logprob: -1.872083067893982
    6. ' if' → logprob: -3.1220831871032715
    7. 'if' → logprob: -3.6220831871032715
    8. '#' → logprob: -6.1220831871032715
    9. ' #' → logprob: -8.497082710266113
    10. '    
' → logprob: -8.622082710266113

Token 115: ' =' (ID: 314)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.4795626699924469
    2. '=' → logprob: -0.9795626401901245
    3. '.' → logprob: -5.604562759399414
    4. ' =' → logprob: -6.604562759399414
    5. '.=' → logprob: -8.854562759399414
    6. '[:]' → logprob: -9.604562759399414
    7. '.sorted' → logprob: -9.854562759399414
    8. '_sorted' → logprob: -9.854562759399414
    9. '=[]' → logprob: -10.729562759399414
    10. '=.' → logprob: -10.729562759399414

Token 116: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.003203138941898942
    2. ' sorted' → logprob: -5.75320291519165
    3. 'list' → logprob: -10.628203392028809
    4. '(sorted' → logprob: -14.253203392028809
    5. ' list' → logprob: -15.253203392028809
    6. '[' → logprob: -16.378202438354492
    7. 'tuple' → logprob: -16.878202438354492
    8. '.sorted' → logprob: -17.003202438354492
    9. '   ' → logprob: -17.128202438354492
    10. 'points' → logprob: -17.503202438354492

Token 117: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.500001907348633
    3. '(set' → logprob: -16.625001907348633
    4. 'points' → logprob: -17.375001907348633
    5. '	points' → logprob: -17.500001907348633
    6. ' points' → logprob: -18.125001907348633
    7. ' (' → logprob: -18.375001907348633
    8. '(list' → logprob: -19.000001907348633
    9. '(point' → logprob: -19.750001907348633
    10. '_points' → logprob: -19.750001907348633

Token 118: ')
' (ID: 446)
  Prédit: ',key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',key' → logprob: -0.07297603040933609
    2. ')' → logprob: -2.9479761123657227
    3. ',' → logprob: -4.072976112365723
    4. 'key' → logprob: -7.447976112365723
    5. '(key' → logprob: -8.947976112365723
    6. ' key' → logprob: -9.072976112365723
    7. ' ,' → logprob: -10.822976112365723
    8. '[key' → logprob: -11.197976112365723
    9. '_key' → logprob: -11.572976112365723
    10. ' )' → logprob: -11.697976112365723

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08713734894990921
    2. 'm' → logprob: -3.212137460708618
    3. 'n' → logprob: -4.337137222290039
    4. '    
' → logprob: -4.587137222290039
    5. ' n' → logprob: -4.962137222290039
    6. ' if' → logprob: -5.087137222290039
    7. 'h' → logprob: -6.587137222290039
    8. ' m' → logprob: -7.087137222290039
    9. '
' → logprob: -7.462137222290039
    10. 'if' → logprob: -7.587137222290039

Token 120: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.004561424255371
    2. 'if' (adapté à ' if') → logprob: -1.379561424255371
    3. 'lower' → logprob: -1.754561424255371
    4. 'n' → logprob: -2.129561424255371
    5. ' n' → logprob: -3.379561424255371
    6. ' lower' → logprob: -4.004561424255371
    7. 'upper' → logprob: -4.379561424255371
    8. '   ' → logprob: -4.629561424255371
    9. 'l' → logprob: -5.379561424255371
    10. 'h' → logprob: -5.504561424255371

Token 121: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.38693979382514954
    2. 'len' → logprob: -1.1369397640228271
    3. ' ' → logprob: -10.136940002441406
    4. '(len' → logprob: -11.136940002441406
    5. '	len' → logprob: -12.261940002441406
    6. '   ' → logprob: -13.011940002441406
    7. ' l' → logprob: -13.386940002441406
    8. '=len' → logprob: -13.511940002441406
    9. '<len' → logprob: -13.761940002441406
    10. 'l' → logprob: -13.886940002441406

Token 122: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.0003408263437449932
    2. '(' → logprob: -8.000340461730957
    3. '	points' → logprob: -13.125340461730957
    4. ' points' → logprob: -13.500340461730957
    5. 'points' → logprob: -14.250340461730957
    6. '(parts' → logprob: -14.875340461730957
    7. '(<' → logprob: -15.375340461730957
    8. ' (' → logprob: -15.625340461730957
    9. '(point' → logprob: -15.875340461730957
    10. '()<' → logprob: -16.250341415405273

Token 123: ')<=' (ID: 176862)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.964522123336792
    2. '<=' → logprob: -0.964522123336792
    3. ' <=' → logprob: -2.089522123336792
    4. '<' → logprob: -3.089522123336792
    5. '==' → logprob: -3.214522123336792
    6. ' <' → logprob: -4.214522361755371
    7. ' ==' → logprob: -5.089522361755371
    8. ')<=' → logprob: -5.464522361755371
    9. ' )' → logprob: -6.214522361755371
    10. ')<' → logprob: -7.464522361755371

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006061719032004476
    2. '2' → logprob: -7.625606060028076
    3. ' ' → logprob: -9.125606536865234
    4. '3' → logprob: -11.750606536865234
    5. '```' → logprob: -14.875606536865234
    6. '
' → logprob: -15.125606536865234
    7. '   ' → logprob: -15.250606536865234
    8. '１' → logprob: -15.875606536865234
    9. '  ' → logprob: -16.125606536865234
    10. '

' → logprob: -16.438106536865234

Token 125: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023519622161984444
    2. ':return' → logprob: -4.023519515991211
    3. ':
' → logprob: -5.273519515991211
    4. ' :' → logprob: -8.898519515991211
    5. '   ' → logprob: -9.398519515991211
    6. ' return' → logprob: -12.273519515991211
    7. ' :
' → logprob: -12.773519515991211
    8. 'return' → logprob: -13.648519515991211
    9. '    ' → logprob: -14.898519515991211
    10. ' ' → logprob: -15.148519515991211

Token 126: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8314290046691895
    2. '   ' → logprob: -0.9564290046691895
    3. '       ' → logprob: -2.3314290046691895
    4. ':
' → logprob: -2.8314290046691895
    5. ':return' → logprob: -3.8314290046691895
    6. ' return' → logprob: -6.4564290046691895
    7. '    ' → logprob: -8.331428527832031
    8. 'return' → logprob: -8.706428527832031
    9. ' ' → logprob: -9.206428527832031
    10. '  ' → logprob: -9.206428527832031

Token 127: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25677168369293213
    2. ' return' → logprob: -1.5067716836929321
    3. '   ' → logprob: -5.881771564483643
    4. ' points' → logprob: -6.631771564483643
    5. 'points' → logprob: -7.381771564483643
    6. ':return' → logprob: -9.7567720413208
    7. '    ' → logprob: -11.2567720413208
    8. '    
' → logprob: -11.5067720413208
    9. '	return' → logprob: -11.8817720413208
    10. '       ' → logprob: -13.0067720413208

Token 128: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.19935593008995056
    2. 'points' → logprob: -1.824355959892273
    3. '[]' → logprob: -4.4493560791015625
    4. ' []' → logprob: -4.9493560791015625
    5. '	points' → logprob: -8.574356079101562
    6. '(points' → logprob: -8.699356079101562
    7. '[' → logprob: -8.949356079101562
    8. ' ' → logprob: -9.574356079101562
    9. ' [' → logprob: -10.199356079101562
    10. '_points' → logprob: -11.324356079101562

Token 129: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6407625675201416
    2. '    
' → logprob: -1.3907625675201416
    3. '   ' → logprob: -1.5157625675201416
    4. '  
' → logprob: -7.0157623291015625
    5. ' 
' → logprob: -7.5157623291015625
    6. '   
' → logprob: -7.7657623291015625
    7. '

' → logprob: -7.8907623291015625
    8. '```' → logprob: -8.140762329101562
    9. '<|end|>' → logprob: -8.265762329101562
    10. '
' → logprob: -8.265762329101562

Token 130: '   ' (ID: 271)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.809712827205658
    2. '   ' → logprob: -1.1847128868103027
    3. '
' → logprob: -1.4347128868103027
    4. '

' → logprob: -5.809712886810303
    5. '   
' → logprob: -6.309712886810303
    6. '  
' → logprob: -6.809712886810303
    7. '    

' → logprob: -6.809712886810303
    8. ' 
' → logprob: -7.184712886810303
    9. '	
' → logprob: -7.559712886810303
    10. '<|end|>' → logprob: -7.684712886810303

Token 131: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' (adapté à ' lower') → logprob: -0.02820834517478943
    2. ' lower' → logprob: -3.6532082557678223
    3. '#' → logprob: -7.153208255767822
    4. '   ' → logprob: -7.278208255767822
    5. 'upper' → logprob: -8.27820873260498
    6. '    
' → logprob: -9.52820873260498
    7. 'l' → logprob: -10.65320873260498
    8. ' #' → logprob: -11.02820873260498
    9. 'low' → logprob: -11.02820873260498
    10. '.lower' → logprob: -11.40320873260498

Token 132: ' =' (ID: 314)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.6801159381866455
    2. '=' → logprob: -1.0551159381866455
    3. ' =' → logprob: -1.9301159381866455
    4. '=[]
' → logprob: -10.055115699768066
    5. '[]' → logprob: -10.305115699768066
    6. '=[]
' → logprob: -10.680115699768066
    7. '_' → logprob: -10.805115699768066
    8. '[:]' → logprob: -11.430115699768066
    9. ' ' → logprob: -11.805115699768066
    10. '=[' → logprob: -11.930115699768066

Token 133: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -3.5716304410016164e-05
    2. ' []' → logprob: -10.625035285949707
    3. '[]
' → logprob: -11.750035285949707
    4. '[]}' → logprob: -12.875035285949707
    5. '[]

' → logprob: -14.875035285949707
    6. '[]>' → logprob: -15.125035285949707
    7. '[' → logprob: -15.375035285949707
    8. '[]"' → logprob: -17.375036239624023
    9. '=[]' → logprob: -17.875036239624023
    10. '[],' → logprob: -18.125036239624023

Token 134: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5138685703277588
    2. ' for' → logprob: -1.0138685703277588
    3. '   ' → logprob: -3.263868570327759
    4. '<|end|>' → logprob: -7.63886833190918
    5. '	for' → logprob: -8.63886833190918
    6. '    
' → logprob: -10.88886833190918
    7. ')' → logprob: -11.01386833190918
    8. '[' → logprob: -11.13886833190918
    9. ' 
' → logprob: -11.51386833190918
    10. ':' → logprob: -11.51386833190918

Token 135: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003445216570980847
    2. ' for' → logprob: -8.000344276428223
    3. '   ' → logprob: -11.875344276428223
    4. '	for' → logprob: -13.125344276428223
    5. '    
' → logprob: -19.00034523010254
    6. '  ' → logprob: -19.62534523010254
    7. ' ' → logprob: -19.87534523010254
    8. '[' → logprob: -21.00034523010254
    9. 'def' → logprob: -21.50034523010254
    10. '```' → logprob: -21.50034523010254

Token 136: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06433374434709549
    2. ' p' → logprob: -2.81433367729187
    3. 'point' → logprob: -6.564333915710449
    4. 'pt' → logprob: -7.064333915710449
    5. ' point' → logprob: -9.31433391571045
    6. ' pt' → logprob: -11.68933391571045
    7. '	p' → logprob: -17.939332962036133
    8. '   ' → logprob: -18.814332962036133
    9. '	point' → logprob: -19.189332962036133
    10. '_point' → logprob: -19.814332962036133

Token 137: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0110534792765975
    2. 'in' → logprob: -4.511053562164307
    3. '  ' → logprob: -13.011053085327148
    4. ' ' → logprob: -13.761053085327148
    5. 'import' → logprob: -14.886053085327148
    6. 'n' → logprob: -15.011053085327148
    7. '	in' → logprob: -15.136053085327148
    8. '   ' → logprob: -15.386053085327148
    9. 'i' → logprob: -15.511053085327148
    10. ',' → logprob: -15.761053085327148

Token 138: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.018208475783467293
    2. ' points' → logprob: -4.0182085037231445
    3. 'oints' → logprob: -9.893208503723145
    4. '(points' → logprob: -11.893208503723145
    5. '	points' → logprob: -14.143208503723145
    6. '.points' → logprob: -15.143208503723145
    7. '_points' → logprob: -15.768208503723145
    8. 'Points' → logprob: -19.018207550048828
    9. 'point' → logprob: -19.893207550048828
    10. '   ' → logprob: -19.893207550048828

Token 139: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.167648876318708e-05
    2. '):' → logprob: -10.875041961669922
    3. ' :' → logprob: -11.000041961669922
    4. ':
' → logprob: -12.625041961669922
    5. '():' → logprob: -14.250041961669922
    6. ':**' → logprob: -14.625041961669922
    7. '<|end|>' → logprob: -15.250041961669922
    8. ')' → logprob: -15.625041961669922
    9. '[:]' → logprob: -15.625041961669922
    10. '+:' → logprob: -15.625041961669922

Token 140: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010708559304475784
    2. ':' → logprob: -5.135708332061768
    3. '   ' → logprob: -6.135708332061768
    4. '    ' → logprob: -7.260708332061768
    5. ' :' → logprob: -7.635708332061768
    6. ' if' → logprob: -7.760708332061768
    7. ' ' → logprob: -8.135708808898926
    8. '        
' → logprob: -8.760708808898926
    9. ':
' → logprob: -9.135708808898926
    10. ' 
' → logprob: -9.760708808898926

Token 141: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.0014527325984090567
    2. 'while' (adapté à ' while') → logprob: -7.126452922821045
    3. '       ' → logprob: -7.501452922821045
    4. '   ' → logprob: -9.876452445983887
    5. '	while' → logprob: -10.126452445983887
    6. '    ' → logprob: -13.876452445983887
    7. '        
' → logprob: -14.126452445983887
    8. ' While' → logprob: -14.251452445983887
    9. 'While' → logprob: -14.376452445983887
    10. ' ' → logprob: -14.376452445983887

Token 142: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.5056459307670593
    2. 'len' → logprob: -1.505645990371704
    3. ' lower' → logprob: -2.130645990371704
    4. 'lower' → logprob: -2.880645990371704
    5. '(len' → logprob: -9.380645751953125
    6. '(lower' → logprob: -10.130645751953125
    7. ' ' → logprob: -11.130645751953125
    8. '	len' → logprob: -11.880645751953125
    9. '  ' → logprob: -13.505645751953125
    10. '   ' → logprob: -13.880645751953125

Token 143: '(lower' (ID: 146857)
  Prédit: '(lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lower' → logprob: -0.00011784763046307489
    2. 'lower' → logprob: -9.375118255615234
    3. ' lower' → logprob: -10.750118255615234
    4. '(' → logprob: -11.375118255615234
    5. '(low' → logprob: -17.125118255615234
    6. ' (' → logprob: -17.500118255615234
    7. '_lower' → logprob: -17.625118255615234
    8. '.lower' → logprob: -17.875118255615234
    9. '(
' → logprob: -19.250118255615234
    10. '(l' → logprob: -20.000118255615234

Token 144: ')>=' (ID: 173043)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.14698526263237
    2. '>' → logprob: -2.0219852924346924
    3. ' >=' → logprob: -6.271985054016113
    4. 'and' → logprob: -6.771985054016113
    5. ')>=' → logprob: -6.896985054016113
    6. ' >' → logprob: -9.271985054016113
    7. ' and' → logprob: -9.646985054016113
    8. ')>' → logprob: -10.271985054016113
    9. ']>=' → logprob: -10.521985054016113
    10. ')' → logprob: -10.646985054016113

Token 145: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010331686353310943
    2. ' ' → logprob: -6.876033306121826
    3. '   ' → logprob: -16.126033782958984
    4. '۲' → logprob: -16.501033782958984
    5. '  ' → logprob: -16.813533782958984
    6. '3' → logprob: -17.376033782958984
    7. '```' → logprob: -17.376033782958984
    8. '२' → logprob: -17.876033782958984
    9. '٢' → logprob: -17.876033782958984
    10. '２' → logprob: -17.938533782958984

Token 146: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1602250337600708
    2. 'and' → logprob: -1.9102250337600708
    3. ' ' → logprob: -15.160224914550781
    4. '   ' → logprob: -15.285224914550781
    5. '    ' → logprob: -16.16022491455078
    6. ' ' → logprob: -16.66022491455078
    7. '	and' → logprob: -16.78522491455078
    8. ' an' → logprob: -17.16022491455078
    9. 'a' → logprob: -17.16022491455078
    10. ')' → logprob: -17.41022491455078

Token 147: ' orientation' (ID: 29546)
  Prédit: 'orientation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orientation' → logprob: -0.47407984733581543
    2. ' orientation' → logprob: -0.9740798473358154
    3. '   ' → logprob: -13.474080085754395
    4. 'orient' → logprob: -14.849080085754395
    5. '.orientation' → logprob: -14.974080085754395
    6. '_orientation' → logprob: -15.349080085754395
    7. ' ' → logprob: -15.724080085754395
    8. 'Orientation' → logprob: -16.349079132080078
    9. '  ' → logprob: -16.599079132080078
    10. '(' → logprob: -16.599079132080078

Token 148: '(lower' (ID: 146857)
  Prédit: '(lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lower' → logprob: -4.4849443838757e-06
    2. '(' → logprob: -12.500004768371582
    3. 'lower' → logprob: -14.500004768371582
    4. ' lower' → logprob: -15.625004768371582
    5. '(low' → logprob: -16.625003814697266
    6. '.lower' → logprob: -17.625003814697266
    7. '(
' → logprob: -18.125003814697266
    8. ' (' → logprob: -18.750003814697266
    9. '(last' → logprob: -21.000003814697266
    10. '(len' → logprob: -21.000003814697266

Token 149: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.004632572643458843
    2. '(-' → logprob: -5.379632472991943
    3. ' [-' → logprob: -12.629632949829102
    4. '[len' → logprob: -13.004632949829102
    5. '(lower' → logprob: -13.129632949829102
    6. '(len' → logprob: -13.379632949829102
    7. ' (-' → logprob: -13.879632949829102
    8. '.lower' → logprob: -14.504632949829102
    9. '][-' → logprob: -15.004632949829102
    10. 'lower' → logprob: -15.004632949829102

Token 150: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002314303710591048
    2. '1' → logprob: -8.375231742858887
    3. '(' → logprob: -15.250231742858887
    4. '3' → logprob: -15.375231742858887
    5. ' ' → logprob: -15.625231742858887
    6. '   ' → logprob: -16.37523078918457
    7. '```' → logprob: -17.31273078918457
    8. '

' → logprob: -17.62523078918457
    9. 'len' → logprob: -17.68773078918457
    10. '  ' → logprob: -18.12523078918457

Token 151: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016005600336939096
    2. ' ,' → logprob: -6.626600742340088
    3. '],' → logprob: -8.62660026550293
    4. 'lower' → logprob: -9.87660026550293
    5. '(lower' → logprob: -11.00160026550293
    6. ' lower' → logprob: -12.37660026550293
    7. ',p' → logprob: -12.50160026550293
    8. '),' → logprob: -12.75160026550293
    9. ',l' → logprob: -12.75160026550293
    10. ']' → logprob: -13.37660026550293

Token 152: 'lower' (ID: 30330)
  Prédit: 'lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.004083266947418451
    2. ' lower' → logprob: -5.504083156585693
    3. '(lower' → logprob: -12.379083633422852
    4. '.lower' → logprob: -14.379083633422852
    5. '<|end|>' → logprob: -17.75408363342285
    6. '_lower' → logprob: -18.25408363342285
    7. 'upper' → logprob: -19.75408363342285
    8. 'Lower' → logprob: -19.75408363342285
    9. '   ' → logprob: -19.87908363342285
    10. ')' → logprob: -20.25408363342285

Token 153: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.31357356905937195
    2. '-' → logprob: -1.3135735988616943
    3. '(-' → logprob: -8.563573837280273
    4. ' -' → logprob: -9.313573837280273
    5. '][-' → logprob: -11.188573837280273
    6. ' [-' → logprob: -11.688573837280273
    7. '<|end|>' → logprob: -13.063573837280273
    8. '2' → logprob: -13.688573837280273
    9. '−' → logprob: -14.313573837280273
    10. '{-' → logprob: -14.313573837280273

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. '2' → logprob: -13.68750286102295
    3. '

' → logprob: -14.93750286102295
    4. '```' → logprob: -15.87500286102295
    5. '۱' → logprob: -16.125001907348633
    6. '
' → logprob: -16.187501907348633
    7. '１' → logprob: -16.312501907348633
    8. '   ' → logprob: -17.375001907348633
    9. ']' → logprob: -17.500001907348633
    10. '१' → logprob: -17.562501907348633

Token 155: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4785175323486328
    2. ',p' → logprob: -0.9785175323486328
    3. ' ,' → logprob: -5.853517532348633
    4. '),' → logprob: -6.603517532348633
    5. '],' → logprob: -9.228517532348633
    6. 'p' → logprob: -10.228517532348633
    7. ',q' → logprob: -10.603517532348633
    8. ',n' → logprob: -11.728517532348633
    9. ',m' → logprob: -12.603517532348633
    10. ')' → logprob: -12.853517532348633

Token 156: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06196925416588783
    2. ' p' → logprob: -2.81196928024292
    3. ')p' → logprob: -14.811968803405762
    4. '   ' → logprob: -14.936968803405762
    5. ')' → logprob: -15.061968803405762
    6. '(p' → logprob: -15.311968803405762
    7. '	p' → logprob: -15.436968803405762
    8. '<p' → logprob: -16.686969757080078
    9. ' ' → logprob: -16.936969757080078
    10. '_p' → logprob: -17.436969757080078

Token 157: ')!=' (ID: 86517)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004819918889552355
    2. ')!=' → logprob: -5.504819869995117
    3. ')==' → logprob: -7.254819869995117
    4. ' )' → logprob: -10.629819869995117
    5. ')>=' → logprob: -12.004819869995117
    6. ')<=' → logprob: -13.004819869995117
    7. ')<' → logprob: -14.129819869995117
    8. ')
' → logprob: -14.879819869995117
    9. ')=' → logprob: -15.379819869995117
    10. ')>' → logprob: -15.504819869995117

Token 158: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.661784827709198
    2. '1' → logprob: -1.5367848873138428
    3. ' ' → logprob: -1.6617848873138428
    4. '2' → logprob: -2.5367848873138428
    5. '<|end|>' → logprob: -10.161785125732422
    6. ')' → logprob: -11.911785125732422
    7. '  ' → logprob: -11.974285125732422
    8. '=' → logprob: -12.224285125732422
    9. '```' → logprob: -12.536785125732422
    10. '(' → logprob: -13.161785125732422

Token 159: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003161676460877061
    2. '):' → logprob: -6.253161907196045
    3. ':
' → logprob: -6.753161907196045
    4. '):
' → logprob: -10.753161430358887
    5. '.lower' → logprob: -11.003161430358887
    6. ')' → logprob: -11.503161430358887
    7. ' :' → logprob: -12.253161430358887
    8. ' lower' → logprob: -12.378161430358887
    9. 'lower' → logprob: -12.503161430358887
    10. '       ' → logprob: -14.128161430358887

Token 160: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.284841924905777
    2. ' lower' → logprob: -1.4098418951034546
    3. 'lower' → logprob: -5.909842014312744
    4. '       ' → logprob: -7.909842014312744
    5. '(lower' → logprob: -8.409841537475586
    6. '.lower' → logprob: -9.034841537475586
    7. '   ' → logprob: -9.659841537475586
    8. '          ' → logprob: -10.034841537475586
    9. '               ' → logprob: -10.159841537475586
    10. '_lower' → logprob: -10.909841537475586

Token 161: ' lower' (ID: 6931)
  Prédit: ' lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lower' → logprob: -0.20162130892276764
    2. 'lower' (adapté à ' lower') → logprob: -1.7016212940216064
    3. '(lower' → logprob: -9.576621055603027
    4. '.lower' → logprob: -9.701621055603027
    5. '           ' → logprob: -10.076621055603027
    6. '               ' → logprob: -10.576621055603027
    7. '```' → logprob: -12.951621055603027
    8. '_lower' → logprob: -13.076621055603027
    9. '   ' → logprob: -13.326621055603027
    10. '
' → logprob: -13.576621055603027

Token 162: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -3.225939872208983e-05
    2. '.' → logprob: -10.375032424926758
    3. ' .' → logprob: -14.125032424926758
    4. 'pop' → logprob: -16.000032424926758
    5. '.Pop' → logprob: -16.625032424926758
    6. ').' → logprob: -17.250032424926758
    7. '.po' → logprob: -17.500032424926758
    8. '].' → logprob: -18.375032424926758
    9. '.p' → logprob: -18.500032424926758
    10. '.remove' → logprob: -18.750032424926758

Token 163: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.246537173457909e-06
    2. '()
' → logprob: -12.625003814697266
    3. '(' → logprob: -14.625003814697266
    4. '()

' → logprob: -15.125003814697266
    5. '())' → logprob: -16.500003814697266
    6. '()]' → logprob: -17.875003814697266
    7. '()`' → logprob: -18.250003814697266
    8. '()-' → logprob: -18.375003814697266
    9. '()
' → logprob: -18.375003814697266
    10. '()\' → logprob: -18.375003814697266

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003468928625807166
    2. ' lower' → logprob: -5.878468990325928
    3. '        
' → logprob: -9.12846851348877
    4. 'lower' → logprob: -9.25346851348877
    5. '	' → logprob: -9.50346851348877
    6. ',' → logprob: -9.50346851348877
    7. '(lower' → logprob: -9.62846851348877
    8. '   ' → logprob: -9.62846851348877
    9. ')' → logprob: -9.87846851348877
    10. '.lower' → logprob: -10.00346851348877

Token 165: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' (adapté à ' lower') → logprob: -0.5958086252212524
    2. ' lower' → logprob: -0.8458086252212524
    3. '.lower' → logprob: -4.470808506011963
    4. '       ' → logprob: -5.720808506011963
    5. '(lower' → logprob: -5.845808506011963
    6. '   ' → logprob: -6.345808506011963
    7. '.' → logprob: -8.845808982849121
    8. ')' → logprob: -10.220808982849121
    9. '           ' → logprob: -11.095808982849121
    10. ',' → logprob: -11.220808982849121

Token 166: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007348202052526176
    2. '.' → logprob: -7.250734806060791
    3. '.app' → logprob: -11.62573528289795
    4. '.ap' → logprob: -11.62573528289795
    5. ' .' → logprob: -12.12573528289795
    6. ').' → logprob: -14.75073528289795
    7. '.add' → logprob: -14.75073528289795
    8. '.push' → logprob: -15.00073528289795
    9. '.Append' → logprob: -16.250734329223633
    10. '.extend' → logprob: -16.250734329223633

Token 167: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.001170460251159966
    2. '(' → logprob: -6.751170635223389
    3. '(
' → logprob: -15.50117015838623
    4. '((' → logprob: -17.001171112060547
    5. ' (' → logprob: -17.751171112060547
    6. '(P' → logprob: -18.376171112060547
    7. '(

' → logprob: -19.251171112060547
    8. '()' → logprob: -19.626171112060547
    9. '(x' → logprob: -20.001171112060547
    10. '(point' → logprob: -20.501171112060547

Token 168: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018351396545767784
    2. ')
' → logprob: -4.0183515548706055
    3. '   ' → logprob: -8.518351554870605
    4. ')

' → logprob: -14.518351554870605
    5. ' )' → logprob: -14.643351554870605
    6. ')
' → logprob: -14.768351554870605
    7. ')return' → logprob: -15.518351554870605
    8. ')n' → logprob: -16.89335060119629
    9. ' )
' → logprob: -17.51835060119629
    10. '       ' → logprob: -17.51835060119629

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012025559321045876
    2. 'upper' → logprob: -5.012025356292725
    3. '    
' → logprob: -5.512025356292725
    4. ' upper' → logprob: -7.262025356292725
    5. '
' → logprob: -7.637025356292725
    6. '  
' → logprob: -10.012025833129883
    7. '        
' → logprob: -11.137025833129883
    8. '   
' → logprob: -12.387025833129883
    9. ' 
' → logprob: -13.012025833129883
    10. '.upper' → logprob: -13.012025833129883

Token 170: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' (adapté à ' upper') → logprob: -0.3980177640914917
    2. ' upper' → logprob: -1.1480177640914917
    3. '   ' → logprob: -4.523017883300781
    4. '    
' → logprob: -8.523017883300781
    5. '.upper' → logprob: -11.648017883300781
    6. '_upper' → logprob: -12.023017883300781
    7. '
' → logprob: -12.148017883300781
    8. '  
' → logprob: -13.523017883300781
    9. 'uper' → logprob: -13.648017883300781
    10. ' 
' → logprob: -13.648017883300781

Token 171: '=[]
' (ID: 63466)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132949769496918
    2. '=' → logprob: -1.3132950067520142
    3. '=[]' → logprob: -10.313295364379883
    4. '=[]
' → logprob: -16.313295364379883
    5. '   ' → logprob: -18.438295364379883
    6. '=[]
' → logprob: -18.438295364379883
    7. ' ' → logprob: -18.938295364379883
    8. '=[' → logprob: -18.938295364379883
    9. '＝' → logprob: -19.313295364379883
    10. '[]' → logprob: -19.688295364379883

Token 172: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38737693428993225
    2. ' for' → logprob: -1.1373769044876099
    3. '   ' → logprob: -7.63737678527832
    4. '	for' → logprob: -10.76237678527832
    5. '<|end|>' → logprob: -13.13737678527832
    6. ' ' → logprob: -16.01237678527832
    7. '    
' → logprob: -16.38737678527832
    8. '[::-' → logprob: -16.76237678527832
    9. '[]' → logprob: -17.01237678527832
    10. '[' → logprob: -17.01237678527832

Token 173: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00033546582562848926
    2. ' for' → logprob: -8.000335693359375
    3. '   ' → logprob: -18.500335693359375
    4. '	for' → logprob: -21.250335693359375
    5. '
' → logprob: -23.375335693359375
    6. 'from' → logprob: -23.375335693359375
    7. ' ' → logprob: -24.500335693359375
    8. '.for' → logprob: -24.750335693359375
    9. '    
' → logprob: -25.125335693359375
    10. ' 
' → logprob: -25.500335693359375

Token 174: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.12692810595035553
    2. ' p' → logprob: -2.1269280910491943
    3. ' ' → logprob: -19.751928329467773
    4. '	p' → logprob: -20.251928329467773
    5. 'point' → logprob: -21.376928329467773
    6. 'pt' → logprob: -21.626928329467773
    7. '   ' → logprob: -21.876928329467773
    8. ' point' → logprob: -22.876928329467773
    9. '_p' → logprob: -23.251928329467773
    10. '  ' → logprob: -23.251928329467773

Token 175: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014163863845169544
    2. 'in' → logprob: -4.264163970947266
    3. 'points' → logprob: -15.639163970947266
    4. 's' → logprob: -16.639163970947266
    5. ' ' → logprob: -16.889163970947266
    6. ' points' → logprob: -17.514163970947266
    7. 'import' → logprob: -18.014163970947266
    8. '(points' → logprob: -18.514163970947266
    9. 'ine' → logprob: -18.889163970947266
    10. '   ' → logprob: -19.264163970947266

Token 176: ' reversed' (ID: 57184)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.6974397301673889
    2. 're' → logprob: -0.8224397301673889
    3. ' reversed' → logprob: -3.197439670562744
    4. ' points' → logprob: -3.822439670562744
    5. 'reverse' → logprob: -10.947440147399902
    6. 'sorted' → logprob: -12.197440147399902
    7. '	points' → logprob: -12.572440147399902
    8. 'rev' → logprob: -12.822440147399902
    9. '(points' → logprob: -12.822440147399902
    10. 'point' → logprob: -12.822440147399902

Token 177: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -9.088346359931165e-07
    2. 'points' → logprob: -14.000000953674316
    3. ' points' → logprob: -16.875
    4. '	points' → logprob: -18.75
    5. '(sorted' → logprob: -19.0
    6. 'Points' → logprob: -21.5
    7. '_points' → logprob: -21.75
    8. '(parts' → logprob: -22.0
    9. '(point' → logprob: -22.125
    10. '.points' → logprob: -22.25

Token 178: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18067960441112518
    2. '):' → logprob: -1.8056795597076416
    3. '   ' → logprob: -7.305679798126221
    4. '       ' → logprob: -8.805679321289062
    5. ')' → logprob: -10.430679321289062
    6. ':' → logprob: -10.555679321289062
    7. ' ):
' → logprob: -10.555679321289062
    8. '):
' → logprob: -11.055679321289062
    9. ':
' → logprob: -11.930679321289062
    10. ' ):' → logprob: -12.055679321289062

Token 179: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011729635298252106
    2. '   ' → logprob: -7.25117301940918
    3. ' while' → logprob: -8.75117301940918
    4. ':
' → logprob: -9.50117301940918
    5. '<|end|>' → logprob: -9.62617301940918
    6. ' ' → logprob: -10.12617301940918
    7. ':' → logprob: -10.25117301940918
    8. '    ' → logprob: -11.25117301940918
    9. '        
' → logprob: -11.50117301940918
    10. '      ' → logprob: -11.50117301940918

Token 180: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.1649995595216751
    2. 'while' (adapté à ' while') → logprob: -1.9149996042251587
    3. '       ' → logprob: -5.789999485015869
    4. '   ' → logprob: -6.414999485015869
    5. '	while' → logprob: -9.914999961853027
    6. ' ' → logprob: -11.414999961853027
    7. '    ' → logprob: -12.164999961853027
    8. '  ' → logprob: -13.039999961853027
    9. 'While' → logprob: -14.539999961853027
    10. '     ' → logprob: -14.539999961853027

Token 181: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.12694290280342102
    2. ' len' → logprob: -2.1269428730010986
    3. '(len' → logprob: -11.12694263458252
    4. '[len' → logprob: -16.001943588256836
    5. '	len' → logprob: -18.251943588256836
    6. ' ' → logprob: -18.876943588256836
    7. '=len' → logprob: -19.001943588256836
    8. '<len' → logprob: -19.001943588256836
    9. ',len' → logprob: -20.626943588256836
    10. '.len' → logprob: -21.001943588256836

Token 182: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.339278580620885e-06
    2. 'upper' → logprob: -13.125001907348633
    3. ' upper' → logprob: -16.000001907348633
    4. '(lower' → logprob: -16.625001907348633
    5. ' (' → logprob: -17.500001907348633
    6. '.upper' → logprob: -18.250001907348633
    7. '[' → logprob: -19.250001907348633
    8. '<|end|>' → logprob: -19.375001907348633
    9. '>' → logprob: -20.375001907348633
    10. '_upper' → logprob: -20.750001907348633

Token 183: 'upper' (ID: 26119)
  Prédit: 'upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.0053567178547382355
    2. '(' → logprob: -5.255356788635254
    3. ' upper' → logprob: -9.005356788635254
    4. '.upper' → logprob: -15.380356788635254
    5. '_upper' → logprob: -17.380355834960938
    6. 'lower' → logprob: -17.630355834960938
    7. 'uppercase' → logprob: -18.005355834960938
    8. '[' → logprob: -18.755355834960938
    9. 'Upper' → logprob: -19.255355834960938
    10. '-upper' → logprob: -19.755355834960938

Token 184: ')>=' (ID: 173043)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.005482641514390707
    2. ')>=' → logprob: -5.3804826736450195
    3. ']>=' → logprob: -7.1304826736450195
    4. ' >=' → logprob: -9.75548267364502
    5. ')' → logprob: -13.38048267364502
    6. '[' → logprob: -13.63048267364502
    7. '≥' → logprob: -14.38048267364502
    8. '>' → logprob: -15.50548267364502
    9. '<|end|>' → logprob: -16.255481719970703
    10. '   ' → logprob: -17.505481719970703

Token 185: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.750001907348633
    4. '```' → logprob: -17.875001907348633
    5. '<|end|>' → logprob: -19.000001907348633
    6. '[' → logprob: -19.125001907348633
    7. '  ' → logprob: -20.500001907348633
    8. '۲' → logprob: -20.625001907348633
    9. '(' → logprob: -20.875001907348633
    10. '...' → logprob: -21.062501907348633

Token 186: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014163863845169544
    2. 'and' → logprob: -4.264163970947266
    3. '<|end|>' → logprob: -14.764163970947266
    4. ' ' → logprob: -17.639163970947266
    5. '	and' → logprob: -18.764163970947266
    6. ' ' → logprob: -19.514163970947266
    7. '&&' → logprob: -19.639163970947266
    8. ',' → logprob: -19.639163970947266
    9. '```' → logprob: -19.639163970947266
    10. ' &&' → logprob: -19.889163970947266

Token 187: ' orientation' (ID: 29546)
  Prédit: 'orientation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orientation' → logprob: -0.16022655367851257
    2. ' orientation' → logprob: -1.910226583480835
    3. '.orientation' → logprob: -13.160226821899414
    4. '_orientation' → logprob: -15.535226821899414
    5. 'Orientation' → logprob: -16.160226821899414
    6. 'orient' → logprob: -16.285226821899414
    7. ' ' → logprob: -16.785226821899414
    8. 'origin' → logprob: -17.410226821899414
    9. 'or' → logprob: -17.535226821899414
    10. '   ' → logprob: -18.410226821899414

Token 188: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. ' (' → logprob: -16.875
    3. 'upper' → logprob: -18.125
    4. '(lower' → logprob: -18.875
    5. '(
' → logprob: -20.0
    6. ' upper' → logprob: -20.875
    7. '.upper' → logprob: -21.0
    8. '<|end|>' → logprob: -21.125
    9. '   ' → logprob: -22.625
    10. '(up' → logprob: -23.0

Token 189: 'upper' (ID: 26119)
  Prédit: 'upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.0033814990893006325
    2. '(' → logprob: -5.753381729125977
    3. ' upper' → logprob: -8.503381729125977
    4. '.upper' → logprob: -14.628381729125977
    5. '<|end|>' → logprob: -14.753381729125977
    6. '_upper' → logprob: -16.753381729125977
    7. '[' → logprob: -16.753381729125977
    8. 'uppercase' → logprob: -17.753381729125977
    9. 'lower' → logprob: -17.878381729125977
    10. '-upper' → logprob: -18.253381729125977

Token 190: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: 0.0
    2. '[' → logprob: -18.25
    3. ' [-' → logprob: -18.75
    4. '-' → logprob: -19.125
    5. '[len' → logprob: -20.5
    6. '(-' → logprob: -20.5
    7. '[:-' → logprob: -21.125
    8. '][-' → logprob: -21.25
    9. '[
' → logprob: -21.375
    10. '   ' → logprob: -21.375

Token 191: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6047699318733066e-05
    2. '-' → logprob: -11.250016212463379
    3. ' ' → logprob: -13.687516212463379
    4. '   ' → logprob: -14.875016212463379
    5. '1' → logprob: -15.125016212463379
    6. '```' → logprob: -15.312516212463379
    7. ' -' → logprob: -15.375016212463379
    8. '۲' → logprob: -15.687516212463379
    9. '[-' → logprob: -16.625015258789062
    10. '[' → logprob: -16.750015258789062

Token 192: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.259079363080673e-05
    2. ' ,' → logprob: -11.750012397766113
    3. '],' → logprob: -13.000012397766113
    4. '),' → logprob: -13.125012397766113
    5. '>,' → logprob: -16.12501335144043
    6. '},' → logprob: -16.62501335144043
    7. '‌,' → logprob: -17.25001335144043
    8. '[' → logprob: -17.87501335144043
    9. '<|end|>' → logprob: -18.00001335144043
    10. '],[' → logprob: -18.25001335144043

Token 193: 'upper' (ID: 26119)
  Prédit: 'upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.00011343709047650918
    2. ' upper' → logprob: -9.125113487243652
    3. '<|end|>' → logprob: -12.375113487243652
    4. '.upper' → logprob: -15.875113487243652
    5. '-upper' → logprob: -16.750112533569336
    6. '_upper' → logprob: -17.375112533569336
    7. 'uppercase' → logprob: -17.750112533569336
    8. 'uper' → logprob: -18.000112533569336
    9. ' ' → logprob: -18.750112533569336
    10. '[' → logprob: -19.000112533569336

Token 194: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.688212614681106e-05
    2. '-' → logprob: -11.250017166137695
    3. '][-' → logprob: -12.875017166137695
    4. '[' → logprob: -14.750017166137695
    5. '[:-' → logprob: -15.000017166137695
    6. '```' → logprob: -15.625017166137695
    7. ' [-' → logprob: -15.625017166137695
    8. '(-' → logprob: -15.875017166137695
    9. '...' → logprob: -16.875017166137695
    10. '   ' → logprob: -17.000017166137695

Token 195: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. '[' → logprob: -13.125003814697266
    3. '[-' → logprob: -14.750003814697266
    4. ' ' → logprob: -14.937503814697266
    5. '-' → logprob: -15.062503814697266
    6. '   ' → logprob: -15.500003814697266
    7. '```' → logprob: -15.562503814697266
    8. ']' → logprob: -15.687503814697266
    9. '１' → logprob: -16.937503814697266
    10. '
' → logprob: -17.062503814697266

Token 196: '],' (ID: 2155)
  Prédit: ',p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.0003517894074320793
    2. ',' → logprob: -8.000351905822754
    3. ' ,' → logprob: -11.250351905822754
    4. 'p' → logprob: -12.750351905822754
    5. '),' → logprob: -15.625351905822754
    6. ',q' → logprob: -16.500350952148438
    7. '],' → logprob: -16.625350952148438
    8. ',r' → logprob: -17.750350952148438
    9. '<p' → logprob: -18.125350952148438
    10. '```' → logprob: -18.250350952148438

Token 197: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.107425062713446e-06
    2. ' p' → logprob: -11.875006675720215
    3. ')p' → logprob: -17.62500762939453
    4. ')' → logprob: -18.75000762939453
    5. '<p' → logprob: -19.37500762939453
    6. '(p' → logprob: -19.50000762939453
    7. ''p' → logprob: -19.62500762939453
    8. '   ' → logprob: -19.75000762939453
    9. '[p' → logprob: -19.87500762939453
    10. '	p' → logprob: -20.00000762939453

Token 198: ')!=' (ID: 86517)
  Prédit: ')!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')!=' → logprob: -0.004341221880167723
    2. '!=' → logprob: -5.879341125488281
    3. ')' → logprob: -6.629341125488281
    4. '()!=' → logprob: -8.879341125488281
    5. ']!=' → logprob: -9.629341125488281
    6. ')==' → logprob: -11.879341125488281
    7. ' !=' → logprob: -13.504341125488281
    8. ' )' → logprob: -14.754341125488281
    9. '!=-' → logprob: -15.254341125488281
    10. ' ' → logprob: -16.37934112548828

Token 199: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008199920994229615
    2. '1' → logprob: -7.125820159912109
    3. ' ' → logprob: -11.50082015991211
    4. '
' → logprob: -12.50082015991211
    5. '

' → logprob: -14.43832015991211
    6. '   ' → logprob: -14.62582015991211
    7. '```' → logprob: -15.75082015991211
    8. '  ' → logprob: -16.81332015991211
    9. '``' → logprob: -16.93832015991211
    10. 'is' → logprob: -17.18832015991211

Token 200: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5840878486633301
    2. ':
' → logprob: -0.8340878486633301
    3. '       ' → logprob: -5.45908784866333
    4. '           ' → logprob: -5.83408784866333
    5. '):
' → logprob: -7.45908784866333
    6. ' upper' → logprob: -9.334087371826172
    7. '   ' → logprob: -9.459087371826172
    8. 'upper' → logprob: -9.584087371826172
    9. ':

' → logprob: -10.709087371826172
    10. ')' → logprob: -10.959087371826172

Token 201: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20655211806297302
    2. '       ' → logprob: -1.7065521478652954
    3. 'upper' → logprob: -6.081552028656006
    4. ' upper' → logprob: -6.331552028656006
    5. '.upper' → logprob: -8.206552505493164
    6. '               ' → logprob: -8.456552505493164
    7. '   ' → logprob: -8.581552505493164
    8. ')' → logprob: -9.956552505493164
    9. '		' → logprob: -10.081552505493164
    10. ',' → logprob: -10.206552505493164

Token 202: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' (adapté à ' upper') → logprob: -0.03804149478673935
    2. ' upper' → logprob: -3.288041591644287
    3. '.upper' → logprob: -17.538042068481445
    4. '           ' → logprob: -19.913042068481445
    5. 'uppercase' → logprob: -21.038042068481445
    6. '_upper' → logprob: -21.413042068481445
    7. 'Upper' → logprob: -21.663042068481445
    8. '   ' → logprob: -22.288042068481445
    9. ' верх' → logprob: -22.663042068481445
    10. 'uple' → logprob: -23.163042068481445

Token 203: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -9.13388703338569e-06
    2. '.' → logprob: -11.750009536743164
    3. '.append' → logprob: -14.000009536743164
    4. ' .' → logprob: -15.125009536743164
    5. 'pop' → logprob: -16.375009536743164
    6. '.Pop' → logprob: -18.500009536743164
    7. ').' → logprob: -18.750009536743164
    8. '	pop' → logprob: -18.875009536743164
    9. '.p' → logprob: -19.000009536743164
    10. '​.' → logprob: -20.125009536743164

Token 204: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.710618905955926e-05
    2. '()
' → logprob: -9.250097274780273
    3. ')' → logprob: -14.375097274780273
    4. '()
' → logprob: -15.750097274780273
    5. '()

' → logprob: -16.125097274780273
    6. '(' → logprob: -17.250097274780273
    7. '()]' → logprob: -17.625097274780273
    8. '())' → logprob: -17.625097274780273
    9. '()\' → logprob: -18.000097274780273
    10. '()`' → logprob: -18.125097274780273

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017709333449602127
    2. 'upper' → logprob: -4.392709255218506
    3. ' upper' → logprob: -5.767709255218506
    4. '   ' → logprob: -6.267709255218506
    5. '.upper' → logprob: -9.017709732055664
    6. '[' → logprob: -11.392709732055664
    7. '<|end|>' → logprob: -11.767709732055664
    8. 'Upper' → logprob: -12.642709732055664
    9. '      ' → logprob: -12.642709732055664
    10. ')' → logprob: -12.892709732055664

Token 206: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' (adapté à ' upper') → logprob: -0.0031808018684387207
    2. ' upper' → logprob: -5.753180980682373
    3. '.upper' → logprob: -13.253180503845215
    4. '   ' → logprob: -13.753180503845215
    5. '       ' → logprob: -15.128180503845215
    6. 'Upper' → logprob: -18.12818145751953
    7. '_upper' → logprob: -18.75318145751953
    8. 'uper' → logprob: -19.50318145751953
    9. 'uppercase' → logprob: -20.37818145751953
    10. ' ' → logprob: -20.37818145751953

Token 207: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003403495065867901
    2. '.' → logprob: -8.000340461730957
    3. 'append' → logprob: -12.375340461730957
    4. ' .' → logprob: -14.375340461730957
    5. '.pop' → logprob: -16.12533950805664
    6. '.app' → logprob: -17.62533950805664
    7. '.ap' → logprob: -17.75033950805664
    8. '.Append' → logprob: -17.87533950805664
    9. '.push' → logprob: -18.25033950805664
    10. '```' → logprob: -18.37533950805664

Token 208: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.000006675720215
    3. ' (' → logprob: -18.5000057220459
    4. '(point' → logprob: -19.3750057220459
    5. '(points' → logprob: -20.1250057220459
    6. '(
' → logprob: -20.5000057220459
    7. '(pl' → logprob: -20.8750057220459
    8. 'p' → logprob: -21.1250057220459
    9. '(P' → logprob: -21.1250057220459
    10. '((' → logprob: -21.5000057220459

Token 209: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015870707109570503
    2. '(p' → logprob: -4.265870571136475
    3. '(' → logprob: -7.515870571136475
    4. ')
' → logprob: -7.640870571136475
    5. 'p' → logprob: -7.890870571136475
    6. ')p' → logprob: -8.390871047973633
    7. '   ' → logprob: -9.890871047973633
    8. ' p' → logprob: -11.890871047973633
    9. '[' → logprob: -12.765871047973633
    10. 'return' → logprob: -13.140871047973633

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09493035078048706
    2. '[:-' → logprob: -3.094930410385132
    3. '[' → logprob: -4.219930171966553
    4. 'return' → logprob: -4.719930171966553
    5. '[-' → logprob: -5.094930171966553
    6. 'lower' → logprob: -5.969930171966553
    7. ' return' → logprob: -5.969930171966553
    8. 'points' → logprob: -6.094930171966553
    9. ' points' → logprob: -6.219930171966553
    10. '(points' → logprob: -6.219930171966553

Token 211: ' hull' (ID: 74912)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009052246809005737
    2. ' return' → logprob: -4.759052276611328
    3. '   ' → logprob: -7.884052276611328
    4. '#' → logprob: -9.759052276611328
    5. '    
' → logprob: -13.384052276611328
    6. '
' → logprob: -14.634052276611328
    7. 'lower' → logprob: -15.259052276611328
    8. 'result' → logprob: -15.384052276611328
    9. '	return' → logprob: -15.759052276611328
    10. 'points' → logprob: -16.009052276611328

Token 212: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048589304089546204
    2. ' =' → logprob: -3.0485892295837402
    3. '(lower' → logprob: -14.923589706420898
    4. '[:]' → logprob: -15.673589706420898
    5. '=[]' → logprob: -15.798589706420898
    6. '=
' → logprob: -15.798589706420898
    7. '=h' → logprob: -15.923589706420898
    8. '   ' → logprob: -16.0485897064209
    9. 'lower' → logprob: -16.1735897064209
    10. '=len' → logprob: -16.1735897064209

Token 213: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.0001238004770129919
    2. ' lower' → logprob: -9.000123977661133
    3. '(lower' → logprob: -14.875123977661133
    4. '   ' → logprob: -18.000123977661133
    5. 'upper' → logprob: -18.250123977661133
    6. 'list' → logprob: -18.375123977661133
    7. '.lower' → logprob: -21.500123977661133
    8. 'Lower' → logprob: -21.625123977661133
    9. 'low' → logprob: -21.750123977661133
    10. ' ' → logprob: -21.875123977661133

Token 214: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -8.65707261255011e-06
    2. '+' → logprob: -11.750008583068848
    3. '[-' → logprob: -15.000008583068848
    4. '[' → logprob: -15.000008583068848
    5. '[:]' → logprob: -17.625009536743164
    6. ' +' → logprob: -18.500009536743164
    7. '[::-' → logprob: -19.000009536743164
    8. '[:' → logprob: -19.375009536743164
    9. '.pop' → logprob: -20.875009536743164
    10. '
' → logprob: -22.125009536743164

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -16.375
    3. '```' → logprob: -17.75
    4. '１' → logprob: -18.875
    5. 'last' → logprob: -20.0
    6. '``' → logprob: -20.375
    7. '
' → logprob: -20.375
    8. '(' → logprob: -20.375
    9. '   ' → logprob: -20.75
    10. ' ' → logprob: -20.75

Token 216: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21709688007831573
    2. ']' → logprob: -1.7170969247817993
    3. ']+' → logprob: -4.59209680557251
    4. ' +' → logprob: -5.21709680557251
    5. ' ]' → logprob: -12.342097282409668
    6. '   ' → logprob: -14.217097282409668
    7. ']+=' → logprob: -15.217097282409668
    8. '+]' → logprob: -15.217097282409668
    9. '```' → logprob: -15.342097282409668
    10. ')' → logprob: -15.467097282409668

Token 217: 'upper' (ID: 26119)
  Prédit: 'upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.001170225441455841
    2. ' upper' → logprob: -6.7511701583862305
    3. 'uppercase' → logprob: -19.001171112060547
    4. '   ' → logprob: -19.251171112060547
    5. '.upper' → logprob: -19.876171112060547
    6. ' ' → logprob: -20.626171112060547
    7. 'Upper' → logprob: -20.751171112060547
    8. '[' → logprob: -21.001171112060547
    9. 'lower' → logprob: -21.751171112060547
    10. '  ' → logprob: -21.876171112060547

Token 218: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.0002615742268972099
    2. '[' → logprob: -8.250261306762695
    3. '[-' → logprob: -15.125261306762695
    4. '[::-' → logprob: -19.125261306762695
    5. '```' → logprob: -19.625261306762695
    6. '[:' → logprob: -19.750261306762695
    7. '1' → logprob: -20.000261306762695
    8. '-' → logprob: -21.875261306762695
    9. 'except' → logprob: -23.500261306762695
    10. '[len' → logprob: -23.750261306762695

Token 219: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. '-' → logprob: -12.87500286102295
    3. '11' → logprob: -16.250003814697266
    4. '```' → logprob: -16.250003814697266
    5. '１' → logprob: -17.062503814697266
    6. '۱' → logprob: -17.625003814697266
    7. '(' → logprob: -17.750003814697266
    8. '[' → logprob: -17.937503814697266
    9. ' ' → logprob: -18.125003814697266
    10. '१' → logprob: -18.687503814697266

Token 220: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11425784230232239
    2. ')' → logprob: -2.4892578125
    3. 'return' → logprob: -4.4892578125
    4. '   ' → logprob: -4.8642578125
    5. ']
' → logprob: -5.4892578125
    6. ')
' → logprob: -6.6142578125
    7. ')return' → logprob: -8.6142578125
    8. '<|end|>' → logprob: -8.6142578125
    9. '
' → logprob: -10.2392578125
    10. '```' → logprob: -10.3642578125

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13749822974205017
    2. 'return' → logprob: -2.137498140335083
    3. '
' → logprob: -4.637498378753662
    4. '    
' → logprob: -7.387498378753662
    5. ' return' → logprob: -8.762497901916504
    6. '	return' → logprob: -10.262497901916504
    7. '  
' → logprob: -11.887497901916504
    8. ':return' → logprob: -12.512497901916504
    9. '```' → logprob: -12.887497901916504
    10. '<|end|>' → logprob: -13.137497901916504

Token 222: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1277315467596054
    2. '   ' → logprob: -2.1277315616607666
    3. ' return' → logprob: -7.1277313232421875
    4. '	return' → logprob: -14.502731323242188
    5. ' ' → logprob: -17.127731323242188
    6. '
' → logprob: -17.752731323242188
    7. '  ' → logprob: -18.127731323242188
    8. '       ' → logprob: -18.377731323242188
    9. '    
' → logprob: -18.627731323242188
    10. ':return' → logprob: -19.752731323242188

Token 223: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -7.896309739408025e-07
    2. ' hull' → logprob: -14.250000953674316
    3. 'list' → logprob: -16.375
    4. 'hul' → logprob: -18.0
    5. '[h' → logprob: -20.0
    6. '	h' → logprob: -20.375
    7. '   ' → logprob: -20.625
    8. '(h' → logprob: -21.5
    9. ' ' → logprob: -21.75
    10. 'hall' → logprob: -23.0

Token 224: '

' (ID: 279)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15801256895065308
    2. 'def' → logprob: -2.033012628555298
    3. 'N' → logprob: -5.033012390136719
    4. '<|end|>' → logprob: -5.158012390136719
    5. '#' → logprob: -7.408012390136719
    6. 'if' → logprob: -7.533012390136719
    7. '  
' → logprob: -8.033012390136719
    8. '    
' → logprob: -8.158012390136719
    9. '
' → logprob: -8.658012390136719
    10. 'points' → logprob: -8.783012390136719

Token 225: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4026099145412445
    2. 'N' → logprob: -1.277609944343567
    3. 'def' → logprob: -3.0276098251342773
    4. 'if' → logprob: -5.527609825134277
    5. '#' → logprob: -8.402609825134277
    6. '```' → logprob: -11.277609825134277
    7. 'for' → logprob: -11.402609825134277
    8. 'num' → logprob: -11.777609825134277
    9. '    
' → logprob: -11.902609825134277
    10. 'points' → logprob: -11.902609825134277

Token 226: ' dist' (ID: 3601)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.23647068440914154
    2. 'main' → logprob: -1.6114706993103027
    3. 'solve' → logprob: -5.736470699310303
    4. ' solve' → logprob: -5.861470699310303
    5. 'distance' → logprob: -6.986470699310303
    6. ' area' → logprob: -7.361470699310303
    7. 'area' → logprob: -7.986470699310303
    8. ' rotating' → logprob: -7.986470699310303
    9. ' distance' → logprob: -8.111470222473145
    10. 'diam' → logprob: -8.236470222473145

Token 227: '_sq' (ID: 125541)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3655913174152374
    2. '_squared' → logprob: -1.990591287612915
    3. '(p' → logprob: -2.240591287612915
    4. '(' → logprob: -3.615591287612915
    5. '<|end|>' → logprob: -3.990591287612915
    6. '_square' → logprob: -4.740591526031494
    7. '_sq' → logprob: -5.615591526031494
    8. '(point' → logprob: -6.865591526031494
    9. ' squared' → logprob: -7.115591526031494
    10. '((' → logprob: -7.240591526031494

Token 228: '(a' (ID: 6271)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.16200317442417145
    2. '(a' → logprob: -2.1620032787323
    3. '(' → logprob: -3.4120032787323
    4. '(point' → logprob: -6.787003040313721
    5. '(x' → logprob: -9.037003517150879
    6. '(prev' → logprob: -9.412003517150879
    7. '(points' → logprob: -9.537003517150879
    8. '<|end|>' → logprob: -9.912003517150879
    9. '(A' → logprob: -11.537003517150879
    10. '((' → logprob: -12.412003517150879

Token 229: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002712033921852708
    2. ',a' → logprob: -6.502712249755859
    3. ' ,' → logprob: -7.127712249755859
    4. '(a' → logprob: -8.25271224975586
    5. ',b' → logprob: -9.00271224975586
    6. ',p' → logprob: -11.50271224975586
    7. 'a' → logprob: -11.87771224975586
    8. '(' → logprob: -13.12771224975586
    9. '_,' → logprob: -14.25271224975586
    10. '):' → logprob: -14.75271224975586

Token 230: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00027694785967469215
    2. '):
' → logprob: -8.375276565551758
    3. ')' → logprob: -10.625276565551758
    4. ' ):' → logprob: -11.250276565551758
    5. '(a' → logprob: -12.625276565551758
    6. '):

' → logprob: -12.625276565551758
    7. ':' → logprob: -13.875276565551758
    8. '):(' → logprob: -14.750276565551758
    9. ',' → logprob: -14.875276565551758
    10. '):
' → logprob: -15.000276565551758

Token 231: '   ' (ID: 271)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.44059333205223083
    2. '   ' → logprob: -1.1905933618545532
    3. 'return' → logprob: -4.065593242645264
    4. ' return' → logprob: -4.190593242645264
    5. ' (' → logprob: -4.190593242645264
    6. '(' → logprob: -5.440593242645264
    7. '(x' → logprob: -8.565593719482422
    8. '(return' → logprob: -9.315593719482422
    9. ' ' → logprob: -9.565593719482422
    10. '	return' → logprob: -9.940593719482422

Token 232: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.09803614020347595
    2. ' return' → logprob: -3.098036050796509
    3. '(a' → logprob: -3.348036050796509
    4. '   ' → logprob: -4.848036289215088
    5. ' (' → logprob: -5.723036289215088
    6. '(x' → logprob: -6.348036289215088
    7. '(return' → logprob: -8.84803581237793
    8. ' ' → logprob: -10.22303581237793
    9. '(ax' → logprob: -10.47303581237793
    10. '	return' → logprob: -11.97303581237793

Token 233: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.12700842320919037
    2. ' (' → logprob: -2.1270084381103516
    3. '(b' → logprob: -10.002008438110352
    4. '(abs' → logprob: -10.877008438110352
    5. '(x' → logprob: -12.002008438110352
    6. '   ' → logprob: -12.502008438110352
    7. '(ax' → logprob: -13.252008438110352
    8. '(ans' → logprob: -13.627008438110352
    9. '(sum' → logprob: -14.127008438110352
    10. ' ' → logprob: -14.127008438110352

Token 234: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.1782583391759545e-05
    2. 'b' → logprob: -10.375031471252441
    3. ' a' → logprob: -14.875031471252441
    4. '(a' → logprob: -16.375032424926758
    5. '	a' → logprob: -19.125032424926758
    6. 'а' → logprob: -20.750032424926758
    7. '(b' → logprob: -21.250032424926758
    8. '```' → logprob: -22.000032424926758
    9. ')a' → logprob: -22.125032424926758
    10. ' b' → logprob: -22.625032424926758

Token 235: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -15.625
    3. '1' → logprob: -20.0
    4. 'a' → logprob: -20.625
    5. '```' → logprob: -20.875
    6. 'x' → logprob: -21.875
    7. '   ' → logprob: -22.125
    8. '[
' → logprob: -22.25
    9. ' [' → logprob: -22.5
    10. 's' → logprob: -22.5

Token 236: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.875
    3. '1' → logprob: -16.375
    4. ' ' → logprob: -18.25
    5. '
' → logprob: -18.25
    6. '   ' → logprob: -18.375
    7. '```' → logprob: -19.0
    8. '۰' → logprob: -19.5
    9. '

' → logprob: -19.9375
    10. '2' → logprob: -21.375

Token 237: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5423537492752075
    2. ' -' → logprob: -1.0423537492752075
    3. '-b' → logprob: -2.792353630065918
    4. '-a' → logprob: -5.792353630065918
    5. '[' → logprob: -6.792353630065918
    6. ']-' → logprob: -7.792353630065918
    7. 'a' → logprob: -9.292353630065918
    8. '-p' → logprob: -11.167353630065918
    9. '()-' → logprob: -11.917353630065918
    10. '−' → logprob: -12.667353630065918

Token 238: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -9.615255839889869e-05
    2. ' b' → logprob: -9.250096321105957
    3. '	b' → logprob: -18.75009536743164
    4. ')b' → logprob: -19.75009536743164
    5. 'a' → logprob: -22.25009536743164
    6. '   ' → logprob: -22.62509536743164
    7. ' б' → logprob: -23.12509536743164
    8. '(b' → logprob: -23.37509536743164
    9. ' ' → logprob: -24.25009536743164
    10. '>b' → logprob: -24.37509536743164

Token 239: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. '0' → logprob: -13.750000953674316
    3. '1' → logprob: -18.125001907348633
    4. '```' → logprob: -18.875001907348633
    5. ')' → logprob: -19.000001907348633
    6. '   ' → logprob: -19.750001907348633
    7. '[
' → logprob: -20.000001907348633
    8. '(' → logprob: -20.125001907348633
    9. ' [' → logprob: -20.375001907348633
    10. '#' → logprob: -20.375001907348633

Token 240: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2127087504486553e-05
    2. '[' → logprob: -10.750021934509277
    3. ' ' → logprob: -14.750021934509277
    4. '   ' → logprob: -16.875022888183594
    5. '```' → logprob: -17.375022888183594
    6. '
' → logprob: -17.687522888183594
    7. '1' → logprob: -18.312522888183594
    8. '۰' → logprob: -18.375022888183594
    9. '<|end|>' → logprob: -18.812522888183594
    10. '<|end|>' → logprob: -18.937522888183594

Token 241: '])' (ID: 4636)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.0009223000961355865
    2. ')' → logprob: -7.000922203063965
    3. '])' → logprob: -12.000922203063965
    4. ' )' → logprob: -12.625922203063965
    5. ')*(' → logprob: -14.625922203063965
    6. '   ' → logprob: -14.750922203063965
    7. '）' → logprob: -15.000922203063965
    8. '**' → logprob: -16.75092315673828
    9. '[' → logprob: -17.12592315673828
    10. ' ' → logprob: -17.25092315673828

Token 242: '**' (ID: 410)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.0644271969795227
    2. '**' → logprob: -2.814427137374878
    3. ')' → logprob: -6.064427375793457
    4. '2' → logprob: -9.814427375793457
    5. '*(' → logprob: -10.064427375793457
    6. '```' → logprob: -11.189427375793457
    7. ')*(' → logprob: -11.439427375793457
    8. '*' → logprob: -12.314427375793457
    9. '**)' → logprob: -12.439427375793457
    10. '(' → logprob: -14.564427375793457

Token 243: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.8921695047756657e-05
    2. ' ' → logprob: -10.750028610229492
    3. '22' → logprob: -13.375028610229492
    4. '26' → logprob: -14.000028610229492
    5. '27' → logprob: -14.375028610229492
    6. '212' → logprob: -14.625028610229492
    7. '۲' → logprob: -14.750028610229492
    8. '227' → logprob: -15.250028610229492
    9. '```' → logprob: -15.312528610229492
    10. '247' → logprob: -15.500028610229492

Token 244: '+(' (ID: 31717)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16469618678092957
    2. '+(' → logprob: -1.914696216583252
    3. ' +' → logprob: -5.414696216583252
    4. ' +(' → logprob: -11.539695739746094
    5. '+a' → logprob: -14.289695739746094
    6. '+b' → logprob: -14.539695739746094
    7. '+
' → logprob: -14.789695739746094
    8. '+[' → logprob: -16.789695739746094
    9. '＋' → logprob: -17.914695739746094
    10. ' plus' → logprob: -18.164695739746094

Token 245: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.961759259458631e-06
    2. ' a' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.1250057220459
    4. '(a' → logprob: -16.7500057220459
    5. ' ' → logprob: -17.6250057220459
    6. '<|end|>' → logprob: -17.8750057220459
    7. '	a' → logprob: -18.6250057220459
    8. '  ' → logprob: -18.7500057220459
    9. 'b' → logprob: -18.7500057220459
    10. ')a' → logprob: -19.0000057220459

Token 246: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '0' → logprob: -14.125000953674316
    3. '1' → logprob: -15.500000953674316
    4. 'def' → logprob: -16.625001907348633
    5. '][' → logprob: -16.750001907348633
    6. 'import' → logprob: -17.875001907348633
    7. ')[' → logprob: -18.125001907348633
    8. 'user' → logprob: -18.625001907348633
    9. '   ' → logprob: -18.750001907348633
    10. ' [' → logprob: -18.875001907348633

Token 247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005707867676392198
    2. '0' → logprob: -7.750570774078369
    3. '[' → logprob: -8.875571250915527
    4. '   ' → logprob: -16.25057029724121
    5. ' ' → logprob: -16.50057029724121
    6. '
' → logprob: -16.50057029724121
    7. '```' → logprob: -17.12557029724121
    8. '-' → logprob: -17.62557029724121
    9. '(' → logprob: -18.62557029724121
    10. '  ' → logprob: -19.87557029724121

Token 248: ']-' (ID: 27107)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005831860937178135
    2. '0' → logprob: -5.505831718444824
    3. ']-' → logprob: -6.630831718444824
    4. '-' → logprob: -8.380831718444824
    5. '][' → logprob: -9.130831718444824
    6. ']' → logprob: -9.880831718444824
    7. ')-' → logprob: -11.255831718444824
    8. 'def' → logprob: -12.130831718444824
    9. ')' → logprob: -12.505831718444824
    10. '#' → logprob: -12.505831718444824

Token 249: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.6286106983898208e-05
    2. ' b' → logprob: -11.750016212463379
    3. '1' → logprob: -11.875016212463379
    4. '0' → logprob: -14.500016212463379
    5. '[' → logprob: -14.875016212463379
    6. '(' → logprob: -15.250016212463379
    7. ' ' → logprob: -16.000017166137695
    8. '<|end|>' → logprob: -16.000017166137695
    9. ')b' → logprob: -16.375017166137695
    10. '(b' → logprob: -17.250017166137695

Token 250: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00862308219075203
    2. '1' → logprob: -4.758623123168945
    3. '0' → logprob: -12.508623123168945
    4. '-' → logprob: -13.258623123168945
    5. '][' → logprob: -13.633623123168945
    6. '```' → logprob: -14.383623123168945
    7. '   ' → logprob: -14.508623123168945
    8. ' ' → logprob: -15.258623123168945
    9. ']' → logprob: -15.883623123168945
    10. ' [' → logprob: -16.133623123168945

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. '[' → logprob: -12.625006675720215
    3. '0' → logprob: -12.750006675720215
    4. '-' → logprob: -15.125006675720215
    5. ' ' → logprob: -16.00000762939453
    6. '])' → logprob: -16.00000762939453
    7. '```' → logprob: -16.00000762939453
    8. '   ' → logprob: -16.50000762939453
    9. ']' → logprob: -16.75000762939453
    10. '(' → logprob: -17.56250762939453

Token 252: '])' (ID: 4636)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1379774808883667
    2. ']-' → logprob: -1.3879774808883667
    3. '-' → logprob: -1.7629774808883667
    4. '])' → logprob: -2.1379776000976562
    5. '[' → logprob: -2.2629776000976562
    6. '1' → logprob: -3.6379776000976562
    7. ')' → logprob: -5.512977600097656
    8. '0' → logprob: -5.887977600097656
    9. '])-' → logprob: -6.137977600097656
    10. ')-' → logprob: -7.262977600097656

Token 253: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.15273572504520416
    2. '[' → logprob: -2.027735710144043
    3. '-' → logprob: -4.777735710144043
    4. '2' → logprob: -7.277735710144043
    5. ')**' → logprob: -7.527735710144043
    6. '(' → logprob: -8.152735710144043
    7. '```' → logprob: -10.277735710144043
    8. ')' → logprob: -11.527735710144043
    9. '1' → logprob: -11.652735710144043
    10. ']' → logprob: -12.277735710144043

Token 254: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00034654809860512614
    2. '1' → logprob: -8.000346183776855
    3. ' ' → logprob: -12.375346183776855
    4. '[' → logprob: -13.375346183776855
    5. '```' → logprob: -13.750346183776855
    6. '²' → logprob: -14.500346183776855
    7. '0' → logprob: -14.812846183776855
    8. '**' → logprob: -14.812846183776855
    9. '(' → logprob: -14.812846183776855
    10. '   ' → logprob: -14.875346183776855

Token 255: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4829958975315094
    2. '<|end|>' → logprob: -0.982995867729187
    3. ')' → logprob: -5.607995986938477
    4. 'import' → logprob: -6.482995986938477
    5. '<|end|>' → logprob: -7.107995986938477
    6. '#' → logprob: -7.357995986938477
    7. '.' → logprob: -7.482995986938477
    8. '```' → logprob: -8.107995986938477
    9. '*' → logprob: -8.357995986938477
    10. '
' → logprob: -8.482995986938477

Token 256: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007862794445827603
    2. 'n' → logprob: -7.375786304473877
    3. 'N' → logprob: -9.625785827636719
    4. 'from' → logprob: -10.375785827636719
    5. 'if' → logprob: -11.250785827636719
    6. 'import' → logprob: -11.750785827636719
    7. '#' → logprob: -11.875785827636719
    8. 'for' → logprob: -12.125785827636719
    9. 'points' → logprob: -12.375785827636719
    10. 'answer' → logprob: -12.375785827636719

Token 257: ' polygon' (ID: 65081)
  Prédit: 'rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.7342734336853027
    2. 'diam' → logprob: -1.3592734336853027
    3. ' rotating' → logprob: -2.6092734336853027
    4. 'main' → logprob: -2.7342734336853027
    5. 'f' → logprob: -3.3592734336853027
    6. 'max' → logprob: -3.3592734336853027
    7. 'solve' → logprob: -3.9842734336853027
    8. 'rotate' → logprob: -4.109273433685303
    9. 'closest' → logprob: -5.109273433685303
    10. 'min' → logprob: -5.734273433685303

Token 258: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.008546017110347748
    2. '_per' → logprob: -5.758545875549316
    3. '_distance' → logprob: -6.008545875549316
    4. '_d' → logprob: -6.633545875549316
    5. '_points' → logprob: -7.383545875549316
    6. '_angle' → logprob: -8.758545875549316
    7. '_center' → logprob: -9.008545875549316
    8. '_side' → logprob: -9.133545875549316
    9. '_cent' → logprob: -9.133545875549316
    10. '_dist' → logprob: -9.258545875549316

Token 259: '(poly' (ID: 175644)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.01673469878733158
    2. '(p' → logprob: -4.391734600067139
    3. '(poly' → logprob: -6.141734600067139
    4. '(vertices' → logprob: -7.016734600067139
    5. '(pol' → logprob: -7.016734600067139
    6. '(' → logprob: -8.516735076904297
    7. '(coords' → logprob: -10.516735076904297
    8. '(point' → logprob: -10.516735076904297
    9. '_polygon' → logprob: -12.891735076904297
    10. '_points' → logprob: -13.141735076904297

Token 260: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029775718227028847
    2. '):
' → logprob: -3.529775619506836
    3. '):
' → logprob: -11.029775619506836
    4. ')' → logprob: -13.029775619506836
    5. ' ):' → logprob: -13.654775619506836
    6. '):

' → logprob: -13.904775619506836
    7. ':' → logprob: -14.279775619506836
    8. '   ' → logprob: -14.404775619506836
    9. '[]):' → logprob: -14.529775619506836
    10. ']:' → logprob: -14.779775619506836

Token 261: '   ' (ID: 271)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.20195265114307404
    2. '   ' → logprob: -1.7019526958465576
    3. ' area' → logprob: -7.7019524574279785
    4. 'n' → logprob: -10.076952934265137
    5. '_area' → logprob: -10.826952934265137
    6. 'res' → logprob: -11.451952934265137
    7. 'result' → logprob: -11.951952934265137
    8. 'ans' → logprob: -12.826952934265137
    9. '
' → logprob: -13.576952934265137
    10. 'def' → logprob: -13.826952934265137

Token 262: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' (adapté à ' area') → logprob: -0.0013184542767703533
    2. '   ' → logprob: -7.251318454742432
    3. 'n' → logprob: -7.751318454742432
    4. ' area' → logprob: -9.126317977905273
    5. 'res' → logprob: -9.751317977905273
    6. '_area' → logprob: -12.126317977905273
    7. 'result' → logprob: -12.751317977905273
    8. 'ans' → logprob: -13.626317977905273
    9. 's' → logprob: -14.626317977905273
    10. 'a' → logprob: -15.376317977905273

Token 263: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011080240830779076
    2. ' =' → logprob: -4.511080265045166
    3. '=sum' → logprob: -10.511079788208008
    4. '   ' → logprob: -13.261079788208008
    5. '=
' → logprob: -14.386079788208008
    6. '_=' → logprob: -14.511079788208008
    7. '=float' → logprob: -14.761079788208008
    8. '=[]' → logprob: -14.761079788208008
    9. '=int' → logprob: -15.011079788208008
    10. ' ' → logprob: -15.136079788208008

Token 264: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. 'abs' → logprob: -16.000001907348633
    4. '
' → logprob: -18.625001907348633
    5. '   ' → logprob: -18.875001907348633
    6. 'float' → logprob: -20.000001907348633
    7. 'int' → logprob: -20.250001907348633
    8. '=' → logprob: -20.625001907348633
    9. 'poly' → logprob: -21.375001907348633
    10. '۰' → logprob: -21.500001907348633

Token 265: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30239200592041016
    2. '
' → logprob: -1.5523920059204102
    3. 'for' → logprob: -3.55239200592041
    4. ' for' → logprob: -4.55239200592041
    5. '<|end|>' → logprob: -5.67739200592041
    6. '    
' → logprob: -6.30239200592041
    7. ',' → logprob: -6.67739200592041
    8. '=' → logprob: -6.92739200592041
    9. '  
' → logprob: -7.55239200592041
    10. ' =' → logprob: -7.55239200592041

Token 266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014808070845901966
    2. 'n' → logprob: -5.264808177947998
    3. ' for' → logprob: -5.264808177947998
    4. 'for' → logprob: -5.639808177947998
    5. ' n' → logprob: -7.139808177947998
    6. '
' → logprob: -12.26480770111084
    7. '	for' → logprob: -13.01480770111084
    8. ',' → logprob: -13.63980770111084
    9. '	n' → logprob: -13.63980770111084
    10. '    
' → logprob: -14.63980770111084

Token 267: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.10053423792123795
    2. 'for' → logprob: -2.350534200668335
    3. ' n' → logprob: -8.350534439086914
    4. ' for' → logprob: -9.350534439086914
    5. '   ' → logprob: -12.600534439086914
    6. 'N' → logprob: -14.850534439086914
    7. 'len' → logprob: -15.350534439086914
    8. 'l' → logprob: -15.725534439086914
    9. 'j' → logprob: -16.350534439086914
    10. '	n' → logprob: -16.475534439086914

Token 268: ' =' (ID: 314)
  Prédit: '=len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=len' → logprob: -0.13011234998703003
    2. '=' → logprob: -2.130112409591675
    3. ' =' → logprob: -5.755112171173096
    4. '=int' → logprob: -11.630112648010254
    5. '=size' → logprob: -14.005112648010254
    6. '=sum' → logprob: -14.255112648010254
    7. '=p' → logprob: -14.505112648010254
    8. '=num' → logprob: -14.880112648010254
    9. '=
' → logprob: -15.255112648010254
    10. '=n' → logprob: -15.630112648010254

Token 269: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -8.061054359131958e-06
    2. ' len' → logprob: -11.750007629394531
    3. '(len' → logprob: -16.50000762939453
    4. '=len' → logprob: -19.75000762939453
    5. '[len' → logprob: -20.37500762939453
    6. '	len' → logprob: -20.62500762939453
    7. '<len' → logprob: -22.62500762939453
    8. ',len' → logprob: -22.87500762939453
    9. '   ' → logprob: -24.50000762939453
    10. 'Len' → logprob: -25.37500762939453

Token 270: '(poly' (ID: 175644)
  Prédit: '(poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -8.2994620242971e-06
    2. 'poly' → logprob: -11.750008583068848
    3. '(pol' → logprob: -15.250008583068848
    4. '(' → logprob: -16.37500762939453
    5. ' poly' → logprob: -17.62500762939453
    6. '(p' → logprob: -20.12500762939453
    7. '(py' → logprob: -20.62500762939453
    8. '_poly' → logprob: -22.25000762939453
    9. '/poly' → logprob: -22.87500762939453
    10. '.poly' → logprob: -22.87500762939453

Token 271: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04863369092345238
    2. ')
' → logprob: -3.048633575439453
    3. '   ' → logprob: -10.173633575439453
    4. ')n' → logprob: -12.673633575439453
    5. 'def' → logprob: -13.673633575439453
    6. ' )' → logprob: -13.798633575439453
    7. ')

' → logprob: -14.173633575439453
    8. ' ' → logprob: -14.673633575439453
    9. ')p' → logprob: -15.173633575439453
    10. ')return' → logprob: -15.173633575439453

Token 272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.081853948533535
    2. 'for' → logprob: -2.5818538665771484
    3. ' for' → logprob: -5.831853866577148
    4. '
' → logprob: -10.956853866577148
    5. '	for' → logprob: -11.706853866577148
    6. '    
' → logprob: -13.831853866577148
    7. '  ' → logprob: -15.581853866577148
    8. ',' → logprob: -16.45685386657715
    9. 'n' → logprob: -16.58185386657715
    10. ' ' → logprob: -16.70685386657715

Token 273: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.896309739408025e-07
    2. ' for' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.5
    4. '	for' → logprob: -19.625
    5. '    
' → logprob: -20.25
    6. 'i' → logprob: -21.5
    7. 'j' → logprob: -21.75
    8. '
' → logprob: -22.375
    9. '```' → logprob: -22.5
    10. '   
' → logprob: -24.625

Token 274: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007119550718925893
    2. ' i' → logprob: -7.250711917877197
    3. 'range' → logprob: -13.375712394714355
    4. '	i' → logprob: -15.000712394714355
    5. '_i' → logprob: -16.62571144104004
    6. ' ' → logprob: -16.75071144104004
    7. '   ' → logprob: -16.87571144104004
    8. 'I' → logprob: -17.12571144104004
    9. '(i' → logprob: -17.12571144104004
    10. '  ' → logprob: -18.12571144104004

Token 275: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016045041382312775
    2. 'in' → logprob: -4.141045093536377
    3. ' ' → logprob: -12.516044616699219
    4. '	in' → logprob: -13.016044616699219
    5. '   ' → logprob: -13.766044616699219
    6. '_' → logprob: -14.141044616699219
    7. 'n' → logprob: -14.141044616699219
    8. ',' → logprob: -14.641044616699219
    9. 'range' → logprob: -15.391044616699219
    10. '  ' → logprob: -15.391044616699219

Token 276: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.7697225252486533e-06
    2. ' range' → logprob: -12.500003814697266
    3. '(range' → logprob: -20.500003814697266
    4. '   ' → logprob: -22.875003814697266
    5. 'poly' → logprob: -22.875003814697266
    6. '	range' → logprob: -23.000003814697266
    7. ' ' → logprob: -23.250003814697266
    8. '0' → logprob: -24.125003814697266
    9. '  ' → logprob: -24.750003814697266
    10. '
' → logprob: -24.875003814697266

Token 277: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0017382439691573381
    2. 'n' → logprob: -6.50173807144165
    3. '(' → logprob: -8.376738548278809
    4. '(len' → logprob: -12.876738548278809
    5. ' n' → logprob: -13.001738548278809
    6. ' (' → logprob: -15.001738548278809
    7. '1' → logprob: -15.251738548278809
    8. '	n' → logprob: -15.376738548278809
    9. '   ' → logprob: -16.126737594604492
    10. '(
' → logprob: -17.626737594604492

Token 278: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47462165355682373
    2. '):
' → logprob: -0.9746216535568237
    3. '-' → logprob: -7.724621772766113
    4. '):
' → logprob: -10.099621772766113
    5. '   ' → logprob: -10.724621772766113
    6. ' ):' → logprob: -11.349621772766113
    7. ')' → logprob: -12.099621772766113
    8. ' -' → logprob: -12.599621772766113
    9. ' ' → logprob: -12.599621772766113
    10. ':' → logprob: -12.599621772766113

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.059934742748737335
    2. ' area' → logprob: -3.1849348545074463
    3. 'area' → logprob: -4.809934616088867
    4. '   ' → logprob: -4.809934616088867
    5. ' j' → logprob: -8.684934616088867
    6. 'j' → logprob: -8.934934616088867
    7. ' poly' → logprob: -9.934934616088867
    8. 'x' → logprob: -10.184934616088867
    9. '(area' → logprob: -10.434934616088867
    10. 'poly' → logprob: -10.809934616088867

Token 280: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.8651235699653625
    2. 'x' → logprob: -0.8651235699653625
    3. 'area' → logprob: -1.8651235103607178
    4. '   ' → logprob: -6.115123748779297
    5. ' area' → logprob: -7.990123748779297
    6. ' j' → logprob: -7.990123748779297
    7. ' x' → logprob: -8.865123748779297
    8. 'a' → logprob: -10.490123748779297
    9. '(area' → logprob: -10.740123748779297
    10. 'jx' → logprob: -11.365123748779297

Token 281: '=(' (ID: 9893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2106095403432846
    2. ' =' → logprob: -1.7106095552444458
    3. '=(' → logprob: -4.710609436035156
    4. '=i' → logprob: -8.960609436035156
    5. ' =(' → logprob: -11.085609436035156
    6. '=((' → logprob: -12.335609436035156
    7. '=j' → logprob: -13.210609436035156
    8. '(i' → logprob: -13.335609436035156
    9. '=int' → logprob: -14.460609436035156
    10. '=
' → logprob: -14.460609436035156

Token 282: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03805446997284889
    2. '(i' → logprob: -3.2880544662475586
    3. ' i' → logprob: -11.538054466247559
    4. '{i' → logprob: -13.538054466247559
    5. ' (' → logprob: -13.788054466247559
    6. ')i' → logprob: -15.288054466247559
    7. '_i' → logprob: -15.788054466247559
    8. '[i' → logprob: -16.163055419921875
    9. '(' → logprob: -16.538055419921875
    10. ')' → logprob: -16.663055419921875

Token 283: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002354832977289334
    2. '1' → logprob: -8.875235557556152
    3. '(i' → logprob: -10.000235557556152
    4. ' +' → logprob: -10.125235557556152
    5. '+(' → logprob: -12.375235557556152
    6. '(' → logprob: -12.750235557556152
    7. '+i' → logprob: -13.000235557556152
    8. ' (' → logprob: -15.000235557556152
    9. 'i' → logprob: -15.500235557556152
    10. '()+' → logprob: -16.625234603881836

Token 284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -17.75
    4. '
' → logprob: -19.125
    5. 'i' → logprob: -19.25
    6. '   ' → logprob: -19.5
    7. '<|end|>' → logprob: -19.9375
    8. 'n' → logprob: -20.375
    9. 'def' → logprob: -20.375
    10. 'import' → logprob: -20.5

Token 285: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10020937025547028
    2. ')%' → logprob: -2.3502094745635986
    3. ' )' → logprob: -13.22520923614502
    4. ')n' → logprob: -15.10020923614502
    5. '%n' → logprob: -15.35020923614502
    6. ')
' → logprob: -15.60020923614502
    7. '%' → logprob: -15.85020923614502
    8. ')#' → logprob: -17.975210189819336
    9. '）' → logprob: -18.225210189819336
    10. '%)' → logprob: -18.475210189819336

Token 286: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.512236498361744e-07
    2. ' n' → logprob: -14.625000953674316
    3. '	n' → logprob: -20.875
    4. '```' → logprob: -22.125
    5. 'len' → logprob: -22.875
    6. ')n' → logprob: -23.25
    7. '   ' → logprob: -23.375
    8. '$n' → logprob: -23.375
    9. '(n' → logprob: -24.375
    10. '<|end|>' → logprob: -24.5

Token 287: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022957641631364822
    2. '       ' → logprob: -4.272957801818848
    3. 'area' → logprob: -5.397957801818848
    4. '   ' → logprob: -6.147957801818848
    5. '        
' → logprob: -7.022957801818848
    6. ' area' → logprob: -7.147957801818848
    7. '    
' → logprob: -9.647957801818848
    8. '
' → logprob: -9.647957801818848
    9. 'poly' → logprob: -9.772957801818848
    10. '<|end|>' → logprob: -9.897957801818848

Token 288: '       ' (ID: 309)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.9231806993484497
    2. '   ' → logprob: -1.2981806993484497
    3. '       ' → logprob: -1.4231806993484497
    4. ' area' → logprob: -2.42318058013916
    5. '(area' → logprob: -9.92318058013916
    6. '```' → logprob: -10.92318058013916
    7. '_area' → logprob: -11.17318058013916
    8. ',' → logprob: -11.42318058013916
    9. '.area' → logprob: -11.92318058013916
    10. '        
' → logprob: -12.04818058013916

Token 289: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' (adapté à ' area') → logprob: -8.061054359131958e-06
    2. ' area' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.37500762939453
    4. 'x' → logprob: -17.37500762939453
    5. '(area' → logprob: -20.25000762939453
    6. '       ' → logprob: -21.75000762939453
    7. 'poly' → logprob: -21.87500762939453
    8. '
' → logprob: -22.25000762939453
    9. '```' → logprob: -22.37500762939453
    10. 'Area' → logprob: -22.75000762939453

Token 290: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.046459708362817764
    2. '+=(' → logprob: -3.296459674835205
    3. ' +=' → logprob: -4.796459674835205
    4. ']+=' → logprob: -9.046460151672363
    5. '=' → logprob: -13.171460151672363
    6. '+' → logprob: -13.546460151672363
    7. '+='' → logprob: -13.796460151672363
    8. '+="' → logprob: -14.046460151672363
    9. '```' → logprob: -14.546460151672363
    10. '-=' → logprob: -15.921460151672363

Token 291: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.00015467056073248386
    2. ' poly' → logprob: -9.250154495239258
    3. '(poly' → logprob: -9.750154495239258
    4. 'pol' → logprob: -15.375154495239258
    5. '   ' → logprob: -18.250154495239258
    6. 'py' → logprob: -19.250154495239258
    7. '-poly' → logprob: -20.250154495239258
    8. '_poly' → logprob: -20.875154495239258
    9. 'polygon' → logprob: -21.125154495239258
    10. '.poly' → logprob: -21.500154495239258

Token 292: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[j' → logprob: -15.875
    3. '```' → logprob: -18.125
    4. 'i' → logprob: -19.625
    5. '[' → logprob: -19.75
    6. '[
' → logprob: -21.5
    7. '
' → logprob: -21.75
    8. '[n' → logprob: -22.25
    9. '![' → logprob: -22.5
    10. '[k' → logprob: -22.625

Token 293: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005199087900109589
    2. '][' → logprob: -7.625519752502441
    3. '0' → logprob: -10.500519752502441
    4. 'x' → logprob: -13.500519752502441
    5. '```' → logprob: -13.750519752502441
    6. '
' → logprob: -14.750519752502441
    7. '1' → logprob: -14.750519752502441
    8. '-' → logprob: -15.625519752502441
    9. '   ' → logprob: -16.125520706176758
    10. ')[' → logprob: -16.250520706176758

Token 294: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.5
    3. '
' → logprob: -16.75
    4. '۰' → logprob: -17.5
    5. '00' → logprob: -18.75
    6. ' ' → logprob: -19.375
    7. '```' → logprob: -19.375
    8. '０' → logprob: -19.5
    9. '   ' → logprob: -19.5625
    10. '٠' → logprob: -20.25

Token 295: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0001649220648687333
    2. ' *' → logprob: -8.750164985656738
    3. ']*' → logprob: -12.250164985656738
    4. '**' → logprob: -14.375164985656738
    5. '*object' → logprob: -15.000164985656738
    6. ')*' → logprob: -15.125164985656738
    7. '*p' → logprob: -15.375164985656738
    8. '*j' → logprob: -16.500164031982422
    9. '   ' → logprob: -17.125164031982422
    10. '*q' → logprob: -17.250164031982422

Token 296: 'poly' (ID: 64486)
  Prédit: 'poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -6.2729995988775045e-06
    2. ' poly' → logprob: -12.000006675720215
    3. 'pol' → logprob: -18.8750057220459
    4. 'py' → logprob: -19.5000057220459
    5. '(poly' → logprob: -20.5000057220459
    6. '-poly' → logprob: -24.2500057220459
    7. '_poly' → logprob: -24.6250057220459
    8. 'polygon' → logprob: -24.7500057220459
    9. '/poly' → logprob: -25.1250057220459
    10. '.poly' → logprob: -25.8750057220459

Token 297: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00023095356300473213
    2. 'j' → logprob: -8.87523078918457
    3. '[(' → logprob: -9.75023078918457
    4. '[' → logprob: -10.87523078918457
    5. '```' → logprob: -11.87523078918457
    6. '(j' → logprob: -12.25023078918457
    7. '][' → logprob: -13.87523078918457
    8. '1' → logprob: -14.37523078918457
    9. '[i' → logprob: -15.50023078918457
    10. '[next' → logprob: -16.12523078918457

Token 298: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10573160648345947
    2. '][' → logprob: -2.73073148727417
    3. '1' → logprob: -3.35573148727417
    4. '0' → logprob: -8.355731964111328
    5. '```' → logprob: -11.355731964111328
    6. ' [' → logprob: -12.105731964111328
    7. ''][' → logprob: -12.230731964111328
    8. ']' → logprob: -12.355731964111328
    9. '"][' → logprob: -12.480731964111328
    10. '   ' → logprob: -12.980731964111328

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.375
    3. '0' → logprob: -16.5
    4. ' ' → logprob: -16.75
    5. '```' → logprob: -18.75
    6. '   ' → logprob: -20.875
    7. '
' → logprob: -22.0625
    8. ']' → logprob: -22.5
    9. '<|end|>' → logprob: -22.5
    10. '{' → logprob: -22.5625

Token 300: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22639113664627075
    2. '-' → logprob: -1.601391077041626
    3. '-area' → logprob: -6.976391315460205
    4. ' -
' → logprob: -10.976390838623047
    5. '-
' → logprob: -11.726390838623047
    6. '-p' → logprob: -11.851390838623047
    7. ' ' → logprob: -12.851390838623047
    8. '   ' → logprob: -13.101390838623047
    9. '<|end|>' → logprob: -13.101390838623047
    10. ' area' → logprob: -13.726390838623047

Token 301: 'poly' (ID: 64486)
  Prédit: 'poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.008616108447313309
    2. ' poly' → logprob: -4.758615970611572
    3. '(poly' → logprob: -13.38361644744873
    4. 'pol' → logprob: -16.258615493774414
    5. '_poly' → logprob: -17.383615493774414
    6. '/poly' → logprob: -17.508615493774414
    7. '-poly' → logprob: -18.258615493774414
    8. 'ploy' → logprob: -18.633615493774414
    9. 'py' → logprob: -19.008615493774414
    10. '.poly' → logprob: -19.008615493774414

Token 302: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.038072481751441956
    2. '[i' → logprob: -3.2880725860595703
    3. '[' → logprob: -10.66307258605957
    4. 'j' → logprob: -12.53807258605957
    5. '[(' → logprob: -13.53807258605957
    6. '```' → logprob: -13.66307258605957
    7. '[next' → logprob: -14.03807258605957
    8. '[
' → logprob: -15.53807258605957
    9. '[user' → logprob: -16.03807258605957
    10. 'i' → logprob: -16.41307258605957

Token 303: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0019477950409054756
    2. '][' → logprob: -6.25194787979126
    3. '0' → logprob: -11.501947402954102
    4. '}[' → logprob: -13.001947402954102
    5. '```' → logprob: -13.126947402954102
    6. '1' → logprob: -13.501947402954102
    7. ')[' → logprob: -13.751947402954102
    8. '"][' → logprob: -14.251947402954102
    9. '>[' → logprob: -14.501947402954102
    10. ''][' → logprob: -15.001947402954102

Token 304: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.125000953674316
    3. 'i' → logprob: -15.375000953674316
    4. ' ' → logprob: -16.5
    5. '1' → logprob: -18.5
    6. '[i' → logprob: -19.125
    7. '   ' → logprob: -20.0
    8. '```' → logprob: -21.0
    9. '۰' → logprob: -21.125
    10. 'x' → logprob: -21.125

Token 305: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.045870304107666016
    2. '][' → logprob: -4.295870304107666
    3. '[' → logprob: -4.420870304107666
    4. 'poly' → logprob: -4.795870304107666
    5. ']*' → logprob: -4.795870304107666
    6. '*[' → logprob: -6.295870304107666
    7. ' poly' → logprob: -8.295869827270508
    8. '[i' → logprob: -8.920869827270508
    9. ']' → logprob: -9.170869827270508
    10. '(poly' → logprob: -9.295869827270508

Token 306: 'poly' (ID: 64486)
  Prédit: 'poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -4.842555426876061e-06
    2. ' poly' → logprob: -12.250004768371582
    3. '(poly' → logprob: -18.6250057220459
    4. 'pol' → logprob: -19.5000057220459
    5. 'py' → logprob: -20.7500057220459
    6. '/poly' → logprob: -22.1250057220459
    7. '_poly' → logprob: -22.7500057220459
    8. '.poly' → logprob: -22.8750057220459
    9. '-poly' → logprob: -23.1250057220459
    10. '[' → logprob: -23.8750057220459

Token 307: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00026526954025030136
    2. 'i' → logprob: -8.875265121459961
    3. '[' → logprob: -9.000265121459961
    4. '(i' → logprob: -14.125265121459961
    5. '```' → logprob: -15.125265121459961
    6. '{i' → logprob: -15.625265121459961
    7. '[j' → logprob: -15.750265121459961
    8. '1' → logprob: -16.12526512145996
    9. '[
' → logprob: -16.25026512145996
    10. '<|end|>' → logprob: -16.37526512145996

Token 308: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.36497464776039124
    2. '1' → logprob: -1.2399746179580688
    3. '[' → logprob: -4.114974498748779
    4. ']' → logprob: -10.864974975585938
    5. '```' → logprob: -11.364974975585938
    6. ''][' → logprob: -12.114974975585938
    7. ')[' → logprob: -12.114974975585938
    8. ' ][' → logprob: -12.239974975585938
    9. '"][' → logprob: -12.489974975585938
    10. '   ' → logprob: -12.614974975585938

Token 309: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -16.125
    3. ' ' → logprob: -17.125
    4. '
' → logprob: -17.5
    5. ']' → logprob: -18.75
    6. '```' → logprob: -18.75
    7. '[' → logprob: -19.1875
    8. '   ' → logprob: -19.1875
    9. '১' → logprob: -20.1875
    10. 'i' → logprob: -20.1875

Token 310: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019414380192756653
    2. '<|end|>' → logprob: -4.14441442489624
    3. '   ' → logprob: -6.14441442489624
    4. ']' → logprob: -8.019413948059082
    5. '
' → logprob: -8.144413948059082
    6. '<|end|>' → logprob: -8.269413948059082
    7. ')
' → logprob: -8.519413948059082
    8. ')return' → logprob: -10.019413948059082
    9. '```' → logprob: -10.394413948059082
    10. '}' → logprob: -11.269413948059082

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00034869377850554883
    2. 'return' → logprob: -8.125349044799805
    3. '
' → logprob: -10.750349044799805
    4. ' return' → logprob: -10.875349044799805
    5. 'area' → logprob: -11.500349044799805
    6. ' area' → logprob: -13.500349044799805
    7. '    
' → logprob: -15.500349044799805
    8. '```' → logprob: -15.875349044799805
    9. '	return' → logprob: -16.250349044799805
    10. '_area' → logprob: -16.625349044799805

Token 312: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.19553054869174957
    2. '   ' → logprob: -1.9455305337905884
    3. ' return' → logprob: -3.445530652999878
    4. 'area' → logprob: -5.945530414581299
    5. ' area' → logprob: -8.695530891418457
    6. '
' → logprob: -11.195530891418457
    7. '	return' → logprob: -13.320530891418457
    8. ' ' → logprob: -13.820530891418457
    9. '_area' → logprob: -15.070530891418457
    10. '  ' → logprob: -15.320530891418457

Token 313: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.001290832064114511
    2. ' abs' → logprob: -6.751290798187256
    3. 'area' → logprob: -9.126291275024414
    4. '0' → logprob: -11.751291275024414
    5. '(abs' → logprob: -12.626291275024414
    6. ' area' → logprob: -14.501291275024414
    7. '   ' → logprob: -16.751291275024414
    8. ' ' → logprob: -17.501291275024414
    9. 'int' → logprob: -18.751291275024414
    10. '
' → logprob: -19.001291275024414

Token 314: '(area' (ID: 115185)
  Prédit: '(area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(area' → logprob: -3.054500666621607e-06
    2. 'area' → logprob: -12.75000286102295
    3. '(' → logprob: -16.500003814697266
    4. ' area' → logprob: -19.625003814697266
    5. '.area' → logprob: -19.750003814697266
    6. '_area' → logprob: -20.250003814697266
    7. '-area' → logprob: -20.375003814697266
    8. '(angle' → logprob: -21.375003814697266
    9. '(amount' → logprob: -22.125003814697266
    10. '(article' → logprob: -22.500003814697266

Token 315: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005624189041554928
    2. ')//' → logprob: -5.380624294281006
    3. ')/' → logprob: -7.505624294281006
    4. '()' → logprob: -8.505623817443848
    5. '//' → logprob: -8.755623817443848
    6. ' )' → logprob: -10.005623817443848
    7. '/' → logprob: -10.630623817443848
    8. ')>>' → logprob: -12.130623817443848
    9. '())' → logprob: -12.755623817443848
    10. ' ' → logprob: -12.880623817443848

Token 316: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '２' → logprob: -20.875
    4. '   ' → logprob: -21.125
    5. '```' → logprob: -21.5
    6. '
' → logprob: -21.75
    7. '0' → logprob: -21.875
    8. '(' → logprob: -22.25
    9. '.' → logprob: -22.625
    10. '200' → logprob: -22.75

Token 317: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25770971179008484
    2. '<|end|>' → logprob: -2.0077097415924072
    3. '
' → logprob: -2.5077097415924072
    4. '

' → logprob: -4.507709503173828
    5. '<|end|>' → logprob: -9.132709503173828
    6. '\' → logprob: -9.507709503173828
    7. '```' → logprob: -10.132709503173828
    8. '#' → logprob: -10.257709503173828
    9. '  
' → logprob: -10.382709503173828
    10. ')' → logprob: -11.007709503173828

Token 318: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011649415828287601
    2. 'n' → logprob: -4.5116496086120605
    3. 'N' → logprob: -7.6366496086120605
    4. 'if' → logprob: -9.136649131774902
    5. '#' → logprob: -11.886649131774902
    6. 'd' → logprob: -14.011649131774902
    7. 't' → logprob: -14.136649131774902
    8. 'ndef' → logprob: -14.386649131774902
    9. 'data' → logprob: -15.011649131774902
    10. '
' → logprob: -15.011649131774902

Token 319: ' is' (ID: 382)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2037249356508255
    2. 'main' → logprob: -1.953724980354309
    3. 'max' → logprob: -4.2037248611450195
    4. ' max' → logprob: -4.4537248611450195
    5. 'diam' → logprob: -4.9537248611450195
    6. ' diameter' → logprob: -6.3287248611450195
    7. ' rotating' → logprob: -6.4537248611450195
    8. 'minimum' → logprob: -7.2037248611450195
    9. 'solve' → logprob: -7.2037248611450195
    10. ' solve' → logprob: -7.3287248611450195

Token 320: '_simple' (ID: 73215)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.07858128100633621
    2. '_conv' → logprob: -3.3285813331604004
    3. '_inside' → logprob: -3.4535813331604004
    4. '_in' → logprob: -5.8285813331604
    5. '_simple' → logprob: -6.2035813331604
    6. '_polygon' → logprob: -6.4535813331604
    7. 'conv' → logprob: -8.453580856323242
    8. '_clock' → logprob: -8.578580856323242
    9. '_col' → logprob: -8.578580856323242
    10. '_' → logprob: -8.828580856323242

Token 321: '_polygon' (ID: 195427)
  Prédit: '_polygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_polygon' → logprob: -0.05148226395249367
    2. '(p' → logprob: -3.8014822006225586
    3. '(poly' → logprob: -4.301482200622559
    4. '(' → logprob: -5.176482200622559
    5. '_poly' → logprob: -5.426482200622559
    6. '(pol' → logprob: -6.051482200622559
    7. '_pol' → logprob: -7.176482200622559
    8. '(points' → logprob: -7.926482200622559
    9. ' polygon' → logprob: -7.926482200622559
    10. 'polygon' → logprob: -9.176482200622559

Token 322: '(poly' (ID: 175644)
  Prédit: '(poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -0.27683237195014954
    2. '(p' → logprob: -2.026832342147827
    3. '(points' → logprob: -2.276832342147827
    4. '(pol' → logprob: -5.151832580566406
    5. '(' → logprob: -6.901832580566406
    6. '(vertices' → logprob: -7.526832580566406
    7. ' (' → logprob: -9.901832580566406
    8. '(point' → logprob: -10.401832580566406
    9. '(coords' → logprob: -10.526832580566406
    10. '(P' → logprob: -12.776832580566406

Token 323: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0032518659718334675
    2. '(poly' → logprob: -6.003252029418945
    3. '):
' → logprob: -7.628252029418945
    4. ')' → logprob: -8.878252029418945
    5. '(p' → logprob: -8.878252029418945
    6. '(pol' → logprob: -12.878252029418945
    7. ' ):' → logprob: -13.503252029418945
    8. '(' → logprob: -13.628252029418945
    9. '):

' → logprob: -13.628252029418945
    10. 'poly' → logprob: -14.003252029418945

Token 324: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013560513965785503
    2. ' n' → logprob: -4.6385602951049805
    3. 'n' → logprob: -5.6385602951049805
    4. '(n' → logprob: -8.88856029510498
    5. '	n' → logprob: -10.26356029510498
    6. 'def' → logprob: -11.01356029510498
    7. ' def' → logprob: -11.88856029510498
    8. ' ' → logprob: -12.01356029510498
    9. '    ' → logprob: -12.26356029510498
    10. ':' → logprob: -12.51356029510498

Token 325: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.08197268843650818
    2. 'n' (adapté à ' n') → logprob: -2.581972599029541
    3. ' def' → logprob: -6.081972599029541
    4. '   ' → logprob: -7.706972599029541
    5. 'def' → logprob: -8.2069730758667
    6. ' for' → logprob: -10.2069730758667
    7. ' from' → logprob: -10.5819730758667
    8. 'from' → logprob: -12.2069730758667
    9. 'for' → logprob: -13.3319730758667
    10. ' ' → logprob: -13.7069730758667

Token 326: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026750260964035988
    2. ' =' → logprob: -3.651750326156616
    3. '=len' → logprob: -8.151750564575195
    4. '>=' → logprob: -9.776750564575195
    5. '=<' → logprob: -9.776750564575195
    6. '=int' → logprob: -10.901750564575195
    7. '==' → logprob: -11.651750564575195
    8. '<' → logprob: -12.276750564575195
    9. '<=' → logprob: -12.526750564575195
    10. 'def' → logprob: -12.776750564575195

Token 327: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.07889826595783234
    2. ' len' → logprob: -2.5788981914520264
    3. '(len' → logprob: -11.703898429870605
    4. '=len' → logprob: -15.328898429870605
    5. '[len' → logprob: -17.32889747619629
    6. ',len' → logprob: -17.82889747619629
    7. '	len' → logprob: -18.45389747619629
    8. '<len' → logprob: -19.70389747619629
    9. ' ' → logprob: -20.20389747619629
    10. ' poly' → logprob: -21.07889747619629

Token 328: '(poly' (ID: 175644)
  Prédit: '(poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -2.4868770196917467e-05
    2. 'poly' → logprob: -10.625024795532227
    3. '(pol' → logprob: -15.125024795532227
    4. ' poly' → logprob: -16.000024795532227
    5. '(' → logprob: -16.625024795532227
    6. 'Poly' → logprob: -19.000024795532227
    7. '_poly' → logprob: -19.500024795532227
    8. '/poly' → logprob: -19.625024795532227
    9. ' (' → logprob: -20.125024795532227
    10. '.poly' → logprob: -20.750024795532227

Token 329: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008622966706752777
    2. ')
' → logprob: -4.758623123168945
    3. 'def' → logprob: -12.383623123168945
    4. '   ' → logprob: -13.258623123168945
    5. ')

' → logprob: -14.008623123168945
    6. ' )' → logprob: -14.383623123168945
    7. ')n' → logprob: -14.508623123168945
    8. ')
' → logprob: -16.133623123168945
    9. ')...' → logprob: -16.383623123168945
    10. '):
' → logprob: -16.633623123168945

Token 330: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08130273222923279
    2. ' for' → logprob: -2.5813026428222656
    3. 'for' → logprob: -6.456302642822266
    4. '
' → logprob: -7.331302642822266
    5. '    
' → logprob: -9.206302642822266
    6. ' 
' → logprob: -10.206302642822266
    7. '	for' → logprob: -10.831302642822266
    8. 'def' → logprob: -11.331302642822266
    9. '  
' → logprob: -12.206302642822266
    10. '<|end|>' → logprob: -13.081302642822266

Token 331: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.048743836581707
    2. 'def' → logprob: -3.048743724822998
    3. ' for' → logprob: -8.798744201660156
    4. '   ' → logprob: -12.298744201660156
    5. ' def' → logprob: -14.798744201660156
    6. 'import' → logprob: -14.923744201660156
    7. '	for' → logprob: -16.298744201660156
    8. '```' → logprob: -16.423744201660156
    9. 'from' → logprob: -16.798744201660156
    10. '
' → logprob: -17.548744201660156

Token 332: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10020752996206284
    2. 'i' → logprob: -2.350207567214966
    3. '	i' → logprob: -13.975207328796387
    4. 'a' → logprob: -17.350208282470703
    5. ' ' → logprob: -17.850208282470703
    6. '(i' → logprob: -18.850208282470703
    7. '   ' → logprob: -19.350208282470703
    8. ' ' → logprob: -19.725208282470703
    9. '_i' → logprob: -19.850208282470703
    10. ' a' → logprob: -20.600208282470703

Token 333: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05493125692009926
    2. 'in' → logprob: -2.929931163787842
    3. 'range' → logprob: -10.804931640625
    4. '   ' → logprob: -11.679931640625
    5. ' ' → logprob: -12.054931640625
    6. '  ' → logprob: -12.804931640625
    7. '	in' → logprob: -12.804931640625
    8. ')' → logprob: -13.179931640625
    9. '1' → logprob: -13.554931640625
    10. ' range' → logprob: -14.179931640625

Token 334: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.615255839889869e-05
    2. ' range' → logprob: -9.250096321105957
    3. 'n' → logprob: -18.50009536743164
    4. '   ' → logprob: -18.75009536743164
    5. ' ' → logprob: -18.75009536743164
    6. '(range' → logprob: -18.87509536743164
    7. '  ' → logprob: -20.62509536743164
    8. '0' → logprob: -21.12509536743164
    9. '	range' → logprob: -21.50009536743164
    10. '1' → logprob: -21.62509536743164

Token 335: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00022523177904076874
    2. '(' → logprob: -8.500225067138672
    3. 'n' → logprob: -10.750225067138672
    4. ' (' → logprob: -16.500225067138672
    5. ' n' → logprob: -17.000225067138672
    6. '	n' → logprob: -17.125225067138672
    7. '(len' → logprob: -17.125225067138672
    8. '1' → logprob: -17.375225067138672
    9. '((' → logprob: -17.500225067138672
    10. ' ' → logprob: -18.500225067138672

Token 336: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07427772134542465
    2. '):' → logprob: -2.699277639389038
    3. '-' → logprob: -5.449277877807617
    4. '   ' → logprob: -11.199277877807617
    5. ' -' → logprob: -11.574277877807617
    6. ')' → logprob: -12.824277877807617
    7. '):
' → logprob: -13.324277877807617
    8. '()):
' → logprob: -13.574277877807617
    9. '):

' → logprob: -13.699277877807617
    10. ' ' → logprob: -14.074277877807617

Token 337: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5069689154624939
    2. '   ' → logprob: -1.0069689750671387
    3. '       ' → logprob: -3.5069689750671387
    4. '<|end|>' → logprob: -7.006968975067139
    5. 'for' → logprob: -7.506968975067139
    6. ' ' → logprob: -7.881968975067139
    7. '    ' → logprob: -8.75696849822998
    8. '	for' → logprob: -9.38196849822998
    9. ' j' → logprob: -9.75696849822998
    10. '<|end|>' → logprob: -10.13196849822998

Token 338: ' a' (ID: 261)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38841408491134644
    2. 'for' → logprob: -1.1384141445159912
    3. 'j' → logprob: -7.138413906097412
    4. ' j' → logprob: -7.263413906097412
    5. '   ' → logprob: -10.13841438293457
    6. '	for' → logprob: -12.76341438293457
    7. ' ' → logprob: -13.38841438293457
    8. 'a' (adapté à ' a') → logprob: -14.01341438293457
    9. '    
' → logprob: -14.13841438293457
    10. 'def' → logprob: -14.63841438293457

Token 339: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23961210250854492
    2. ' =' → logprob: -1.614612102508545
    3. '=(' → logprob: -4.989612102508545
    4. '=a' → logprob: -5.989612102508545
    5. '=i' → logprob: -6.614612102508545
    6. '=[' → logprob: -7.114612102508545
    7. '0' → logprob: -7.364612102508545
    8. ',' → logprob: -8.239612579345703
    9. '=
' → logprob: -8.489612579345703
    10. 'a' → logprob: -8.489612579345703

Token 340: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2814904749393463
    2. ' =' → logprob: -1.406490445137024
    3. ',' → logprob: -8.281490325927734
    4. '=
' → logprob: -9.781490325927734
    5. '=(' → logprob: -11.906490325927734
    6. '=a' → logprob: -11.906490325927734
    7. 'a' → logprob: -12.781490325927734
    8. ')' → logprob: -13.031490325927734
    9. ' =
' → logprob: -13.281490325927734
    10. '=[' → logprob: -13.406490325927734

Token 341: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.0001238004770129919
    2. ' poly' → logprob: -9.000123977661133
    3. 'pol' → logprob: -15.500123977661133
    4. '(poly' → logprob: -16.250123977661133
    5. 'py' → logprob: -17.875123977661133
    6. '   ' → logprob: -19.875123977661133
    7. 'p' → logprob: -20.375123977661133
    8. 'polygon' → logprob: -22.125123977661133
    9. '_poly' → logprob: -22.250123977661133
    10. '(' → logprob: -22.375123977661133

Token 342: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.073596548754722e-05
    2. '[(' → logprob: -10.12505054473877
    3. '[' → logprob: -11.50005054473877
    4. '[
' → logprob: -15.12505054473877
    5. 'i' → logprob: -16.500051498413086
    6. '(i' → logprob: -16.875051498413086
    7. '[I' → logprob: -17.250051498413086
    8. '[j' → logprob: -17.625051498413086
    9. ' [' → logprob: -17.750051498413086
    10. '[a' → logprob: -17.875051498413086

Token 343: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.10035708546638489
    2. ']' → logprob: -2.3503570556640625
    3. '%' → logprob: -9.350357055664062
    4. '][' → logprob: -10.600357055664062
    5. ']

' → logprob: -10.850357055664062
    6. ']
' → logprob: -11.350357055664062
    7. ']%' → logprob: -12.850357055664062
    8. ')
' → logprob: -14.225357055664062
    9. '
' → logprob: -14.475357055664062
    10. ' %' → logprob: -14.600357055664062

Token 344: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38431400060653687
    2. '
' → logprob: -1.6343140602111816
    3. '<|end|>' → logprob: -2.8843140602111816
    4. ' for' → logprob: -4.134314060211182
    5. ' ' → logprob: -4.384314060211182
    6. '  
' → logprob: -4.509314060211182
    7. '    
' → logprob: -4.634314060211182
    8. ' 
' → logprob: -4.884314060211182
    9. 'for' → logprob: -6.134314060211182
    10. 'a' → logprob: -6.259314060211182

Token 345: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.05696330964565277
    2. ' a' → logprob: -2.9319632053375244
    3. '   ' → logprob: -6.3069634437561035
    4. ' ' → logprob: -9.181962966918945
    5. 'b' → logprob: -10.181962966918945
    6. 'i' → logprob: -10.181962966918945
    7. ' i' → logprob: -11.556962966918945
    8. '(a' → logprob: -11.556962966918945
    9. '  ' → logprob: -11.681962966918945
    10. ' (' → logprob: -11.681962966918945

Token 346: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004705914470832795
    2. '1' → logprob: -7.8754706382751465
    3. '0' → logprob: -10.125470161437988
    4. ' ' → logprob: -11.500470161437988
    5. '+' → logprob: -11.625470161437988
    6. 'idx' → logprob: -12.000470161437988
    7. '=' → logprob: -12.375470161437988
    8. '
' → logprob: -12.875470161437988
    9. '[' → logprob: -13.000470161437988
    10. 'index' → logprob: -13.125470161437988

Token 347: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759497284889221
    2. '=' → logprob: -0.8259497284889221
    3. ' poly' → logprob: -12.700949668884277
    4. ' ' → logprob: -12.950949668884277
    5. 'poly' → logprob: -13.075949668884277
    6. '=
' → logprob: -13.700949668884277
    7. '   ' → logprob: -14.575949668884277
    8. ',' → logprob: -14.825949668884277
    9. ' =
' → logprob: -14.950949668884277
    10. ')' → logprob: -15.950949668884277

Token 348: ' poly' (ID: 14600)
  Prédit: ' poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' poly' → logprob: -0.2519315779209137
    2. 'poly' → logprob: -1.5019315481185913
    3. '(poly' → logprob: -13.126931190490723
    4. ' ' → logprob: -15.126931190490723
    5. 'pol' → logprob: -16.00193214416504
    6. '/poly' → logprob: -17.00193214416504
    7. ' pol' → logprob: -17.37693214416504
    8. '   ' → logprob: -17.75193214416504
    9. '_poly' → logprob: -17.87693214416504
    10. 'py' → logprob: -18.12693214416504

Token 349: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.02373407781124115
    2. '(i' → logprob: -3.7737340927124023
    3. '[i' → logprob: -7.648734092712402
    4. '(n' → logprob: -12.523734092712402
    5. '(' → logprob: -12.773734092712402
    6. '   ' → logprob: -13.398734092712402
    7. '((' → logprob: -13.898734092712402
    8. '[' → logprob: -14.273734092712402
    9. '[
' → logprob: -14.273734092712402
    10. ' (' → logprob: -15.023734092712402

Token 350: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.036524842376821e-05
    2. '(i' → logprob: -10.125040054321289
    3. '{i' → logprob: -16.00004005432129
    4. ' i' → logprob: -16.25004005432129
    5. '   ' → logprob: -17.87504005432129
    6. ' (' → logprob: -18.25004005432129
    7. '```' → logprob: -18.25004005432129
    8. '
' → logprob: -19.75004005432129
    9. '_i' → logprob: -19.75004005432129
    10. '[i' → logprob: -19.75004005432129

Token 351: '+' (ID: 10)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.019437063485383987
    2. '(i' → logprob: -4.019436836242676
    3. '+' → logprob: -7.644436836242676
    4. '1' → logprob: -8.019436836242676
    5. ' i' → logprob: -8.519436836242676
    6. '{i' → logprob: -8.644436836242676
    7. ' (' → logprob: -10.019436836242676
    8. '[i' → logprob: -10.644436836242676
    9. '(' → logprob: -11.394436836242676
    10. '   ' → logprob: -11.644436836242676

Token 352: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. 'i' → logprob: -13.000004768371582
    3. ' ' → logprob: -14.250004768371582
    4. '(i' → logprob: -15.000004768371582
    5. '(' → logprob: -16.000003814697266
    6. 'a' → logprob: -16.062503814697266
    7. 'poly' → logprob: -16.375003814697266
    8. '   ' → logprob: -16.375003814697266
    9. '```' → logprob: -16.437503814697266
    10. '2' → logprob: -16.500003814697266

Token 353: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.08948986232280731
    2. ')' → logprob: -2.4644899368286133
    3. ')i' → logprob: -8.464489936828613
    4. ')]' → logprob: -8.964489936828613
    5. '%n' → logprob: -9.464489936828613
    6. ')n' → logprob: -9.714489936828613
    7. ']%' → logprob: -10.714489936828613
    8. '%i' → logprob: -11.214489936828613
    9. ')][' → logprob: -11.464489936828613
    10. ')
' → logprob: -11.839489936828613

Token 354: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.320199877838604e-07
    2. ' n' → logprob: -15.0
    3. 'poly' → logprob: -19.0
    4. '```' → logprob: -20.25
    5. '   ' → logprob: -20.375
    6. '	n' → logprob: -21.0
    7. '
' → logprob: -21.25
    8. '%n' → logprob: -21.75
    9. '``' → logprob: -22.125
    10. '(n' → logprob: -22.25

Token 355: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005043406039476395
    2. ']
' → logprob: -5.6300435066223145
    3. ']

' → logprob: -6.6300435066223145
    4. ')]' → logprob: -9.630043029785156
    5. ')' → logprob: -9.880043029785156
    6. ' ]' → logprob: -13.380043029785156
    7. ']
' → logprob: -13.380043029785156
    8. '])' → logprob: -14.130043029785156
    9. ']


' → logprob: -14.880043029785156
    10. 'def' → logprob: -15.130043029785156

Token 356: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3504333794116974
    2. '
' → logprob: -1.475433349609375
    3. '<|end|>' → logprob: -3.600433349609375
    4. '  
' → logprob: -4.350433349609375
    5. '    
' → logprob: -4.850433349609375
    6. ' for' → logprob: -4.975433349609375
    7. ' 
' → logprob: -5.600433349609375
    8. '       ' → logprob: -5.850433349609375
    9. ' ' → logprob: -6.475433349609375
    10. '   
' → logprob: -7.225433349609375

Token 357: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.038076501339673996
    2. ' for' → logprob: -3.288076400756836
    3. '   ' → logprob: -10.288076400756836
    4. 'def' → logprob: -14.413076400756836
    5. '	for' → logprob: -15.288076400756836
    6. ' ' → logprob: -16.413076400756836
    7. '       ' → logprob: -17.038076400756836
    8. '```' → logprob: -17.913076400756836
    9. '
' → logprob: -18.288076400756836
    10. '    ' → logprob: -18.663076400756836

Token 358: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.038042180240154266
    2. 'j' → logprob: -3.2880420684814453
    3. '	j' → logprob: -15.038042068481445
    4. ' ' → logprob: -15.538042068481445
    5. '   ' → logprob: -15.663042068481445
    6. '_j' → logprob: -16.538042068481445
    7. '  ' → logprob: -17.038042068481445
    8. ' ' → logprob: -17.163042068481445
    9. '[j' → logprob: -17.788042068481445
    10. '    ' → logprob: -17.913042068481445

Token 359: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029770394787192345
    2. 'in' → logprob: -3.5297703742980957
    3. ' ' → logprob: -11.279770851135254
    4. ' i' → logprob: -12.904770851135254
    5. '	in' → logprob: -13.529770851135254
    6. 'range' → logprob: -13.654770851135254
    7. 'i' → logprob: -14.904770851135254
    8. ' range' → logprob: -15.029770851135254
    9. 's' → logprob: -15.154770851135254
    10. ')' → logprob: -15.404770851135254

Token 360: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.387101411819458
    2. 'range' → logprob: -1.137101411819458
    3. '(range' → logprob: -8.387101173400879
    4. '	range' → logprob: -13.512101173400879
    5. ' ' → logprob: -14.637101173400879
    6. 'i' → logprob: -14.887101173400879
    7. ' i' → logprob: -15.637101173400879
    8. '_range' → logprob: -15.637101173400879
    9. '(i' → logprob: -16.887102127075195
    10. ' (' → logprob: -17.387102127075195

Token 361: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0013085714308544993
    2. '(n' → logprob: -6.751308441162109
    3. 'i' → logprob: -9.75130844116211
    4. ' (' → logprob: -10.12630844116211
    5. '(' → logprob: -10.62630844116211
    6. ' i' → logprob: -11.25130844116211
    7. '((' → logprob: -13.50130844116211
    8. 'n' → logprob: -13.62630844116211
    9. '(
' → logprob: -16.12630844116211
    10. '(a' → logprob: -16.75130844116211

Token 362: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.546478935983032e-05
    2. ' +' → logprob: -10.625025749206543
    3. '+i' → logprob: -14.375025749206543
    4. '1' → logprob: -14.875025749206543
    5. '2' → logprob: -16.250024795532227
    6. '()+' → logprob: -17.375024795532227
    7. '+j' → logprob: -17.875024795532227
    8. '(' → logprob: -18.250024795532227
    9. ' ' → logprob: -18.375024795532227
    10. ')+' → logprob: -18.375024795532227

Token 363: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07013627141714096
    2. '1' → logprob: -2.695136308670044
    3. 'n' → logprob: -9.570136070251465
    4. ' ' → logprob: -9.820136070251465
    5. '+' → logprob: -10.695136070251465
    6. '
' → logprob: -11.070136070251465
    7. '3' → logprob: -11.195136070251465
    8. 'range' → logprob: -11.695136070251465
    9. 'i' → logprob: -11.820136070251465
    10. 'len' → logprob: -13.507636070251465

Token 364: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.20930828154087067
    2. ',' → logprob: -1.8343082666397095
    3. '+' → logprob: -3.709308385848999
    4. ',j' → logprob: -5.70930814743042
    5. ',len' → logprob: -7.83430814743042
    6. ',i' → logprob: -8.459308624267578
    7. ' ,' → logprob: -8.709308624267578
    8. '+n' → logprob: -8.959308624267578
    9. ',num' → logprob: -9.709308624267578
    10. '+j' → logprob: -9.959308624267578

Token 365: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.26986250281333923
    2. '):' → logprob: -1.6448625326156616
    3. '-' → logprob: -3.144862413406372
    4. ' -' → logprob: -8.894862174987793
    5. '   ' → logprob: -9.019862174987793
    6. '       ' → logprob: -9.894862174987793
    7. ')' → logprob: -10.519862174987793
    8. '):
' → logprob: -11.144862174987793
    9. ':' → logprob: -11.269862174987793
    10. '[' → logprob: -11.769862174987793

Token 366: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3347211182117462
    2. ' ' → logprob: -1.5847210884094238
    3. '   ' → logprob: -3.334721088409424
    4. '<|end|>' → logprob: -3.584721088409424
    5. ' if' → logprob: -5.334721088409424
    6. '           ' → logprob: -6.084721088409424
    7. ' a' → logprob: -6.334721088409424
    8. '	       ' → logprob: -6.834721088409424
    9. '	' → logprob: -7.084721088409424
    10. '  ' → logprob: -7.334721088409424

Token 367: ' if' (ID: 538)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.624173104763031
    2. ' if' → logprob: -1.4991731643676758
    3. 'b' → logprob: -1.7491731643676758
    4. ' a' → logprob: -3.249173164367676
    5. 'a' → logprob: -4.499173164367676
    6. 'if' (adapté à ' if') → logprob: -4.749173164367676
    7. ' ' → logprob: -5.499173164367676
    8. ' q' → logprob: -6.874173164367676
    9. '   ' → logprob: -7.249173164367676
    10. 'q' → logprob: -7.374173164367676

Token 368: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.9940797686576843
    2. 'j' → logprob: -1.744079828262329
    3. ' abs' → logprob: -2.119079828262329
    4. '(j' → logprob: -2.119079828262329
    5. '(abs' → logprob: -2.119079828262329
    6. ' (' → logprob: -3.494079828262329
    7. ' j' → logprob: -3.744079828262329
    8. '(i' → logprob: -4.11907958984375
    9. '(a' → logprob: -4.24407958984375
    10. 'i' → logprob: -5.61907958984375

Token 369: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.024151569232344627
    2. '(j' → logprob: -3.774151563644409
    3. '((' → logprob: -7.149151802062988
    4. 'i' → logprob: -9.274151802062988
    5. 'j' → logprob: -10.649151802062988
    6. '(a' → logprob: -13.524151802062988
    7. '{i' → logprob: -14.649151802062988
    8. '(' → logprob: -15.024151802062988
    9. ' i' → logprob: -16.274150848388672
    10. '(((' → logprob: -16.399150848388672

Token 370: '-j' (ID: 19720)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9303510189056396
    2. '-j' → logprob: -0.9303510189056396
    3. '-' → logprob: -1.5553510189056396
    4. ' ' → logprob: -11.180351257324219
    5. '   ' → logprob: -11.305351257324219
    6. '[j' → logprob: -11.430351257324219
    7. ' j' → logprob: -11.930351257324219
    8. '[' → logprob: -12.430351257324219
    9. '-
' → logprob: -13.430351257324219
    10. 'j' → logprob: -13.805351257324219

Token 371: ')<=' (ID: 176862)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06278214603662491
    2. ')>' → logprob: -2.812782049179077
    3. ')>=' → logprob: -7.562782287597656
    4. ' )' → logprob: -8.562782287597656
    5. ')<=' → logprob: -10.437782287597656
    6. ')==' → logprob: -10.687782287597656
    7. '>' → logprob: -10.937782287597656
    8. ')!=' → logprob: -11.437782287597656
    9. '1' → logprob: -12.062782287597656
    10. '   ' → logprob: -12.937782287597656

Token 372: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.750001907348633
    4. '۱' → logprob: -19.750001907348633
    5. '2' → logprob: -19.875001907348633
    6. '
' → logprob: -20.250001907348633
    7. '१' → logprob: -20.375001907348633
    8. '  ' → logprob: -20.812501907348633
    9. '১' → logprob: -21.125001907348633
    10. '１' → logprob: -21.500001907348633

Token 373: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.2970885634422302
    2. ':' → logprob: -2.047088623046875
    3. '               ' → logprob: -3.047088623046875
    4. ' and' → logprob: -3.172088623046875
    5. '           ' → logprob: -3.672088623046875
    6. ':
' → logprob: -4.672088623046875
    7. '<|end|>' → logprob: -6.797088623046875
    8. ' continue' → logprob: -7.422088623046875
    9. ':return' → logprob: -8.047088623046875
    10. ' ' → logprob: -8.297088623046875

Token 374: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.7425318360328674
    2. '(i' → logprob: -0.9925318360328674
    3. ' (' → logprob: -2.2425317764282227
    4. '(abs' → logprob: -3.3675317764282227
    5. 'abs' → logprob: -5.117531776428223
    6. '(max' → logprob: -6.242531776428223
    7. ' abs' → logprob: -6.867531776428223
    8. '((' → logprob: -6.867531776428223
    9. '   ' → logprob: -7.492531776428223
    10. 'j' → logprob: -7.617531776428223

Token 375: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.4072234034538269
    2. '(j' → logprob: -2.0322234630584717
    3. 'j' → logprob: -2.5322234630584717
    4. 'i' → logprob: -2.9072234630584717
    5. ' (' → logprob: -3.7822234630584717
    6. 'abs' → logprob: -3.9072234630584717
    7. '{i' → logprob: -4.532223224639893
    8. '(abs' → logprob: -5.157223224639893
    9. '{' → logprob: -5.657223224639893
    10. 'max' → logprob: -6.532223224639893

Token 376: '==' (ID: 560)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02296101488173008
    2. ' +' → logprob: -5.022961139678955
    3. ',j' → logprob: -6.022961139678955
    4. '-j' → logprob: -6.272961139678955
    5. '+j' → logprob: -6.272961139678955
    6. ' ' → logprob: -6.647961139678955
    7. 'j' → logprob: -6.647961139678955
    8. '0' → logprob: -6.897961139678955
    9. '1' → logprob: -6.897961139678955
    10. '[j' → logprob: -6.897961139678955

Token 377: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028067755047231913
    2. '(n' → logprob: -6.127806663513184
    3. '(' → logprob: -8.127806663513184
    4. 'n' → logprob: -8.627806663513184
    5. '(j' → logprob: -9.377806663513184
    6. ' ' → logprob: -10.002806663513184
    7. ' (' → logprob: -12.002806663513184
    8. '
' → logprob: -12.252806663513184
    9. 'j' → logprob: -12.502806663513184
    10. '   ' → logprob: -13.877806663513184

Token 378: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.3869003355503082
    2. ' and' → logprob: -1.1369003057479858
    3. ')' → logprob: -11.636899948120117
    4. ' ' → logprob: -11.886899948120117
    5. '           ' → logprob: -11.886899948120117
    6. '&&' → logprob: -13.386899948120117
    7. '   ' → logprob: -13.511899948120117
    8. '	and' → logprob: -13.886899948120117
    9. '       ' → logprob: -14.886899948120117
    10. '```' → logprob: -15.136899948120117

Token 379: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.001807149383239448
    2. ' j' → logprob: -6.37680721282959
    3. '(j' → logprob: -9.37680721282959
    4. '   ' → logprob: -11.50180721282959
    5. '           ' → logprob: -12.87680721282959
    6. ' ' → logprob: -13.12680721282959
    7. ' (' → logprob: -13.37680721282959
    8. '  ' → logprob: -13.87680721282959
    9. '    ' → logprob: -14.62680721282959
    10. '       ' → logprob: -14.87680721282959

Token 380: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.002430951688438654
    2. ' ==' → logprob: -6.1274309158325195
    3. '==(' → logprob: -8.62743091583252
    4. 'n' → logprob: -10.25243091583252
    5. ']==' → logprob: -11.00243091583252
    6. ')==' → logprob: -11.62743091583252
    7. '==
' → logprob: -12.50243091583252
    8. '=n' → logprob: -13.50243091583252
    9. '()==' → logprob: -15.87743091583252
    10. '
' → logprob: -16.252431869506836

Token 381: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.805981972021982e-05
    2. ' n' → logprob: -9.25009822845459
    3. '(n' → logprob: -13.50009822845459
    4. '	n' → logprob: -15.37509822845459
    5. '   ' → logprob: -15.87509822845459
    6. '(' → logprob: -16.750097274780273
    7. '
' → logprob: -17.125097274780273
    8. ')n' → logprob: -17.125097274780273
    9. ',n' → logprob: -18.250097274780273
    10. ' ' → logprob: -18.250097274780273

Token 382: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0014163076411932707
    2. '1' → logprob: -6.626416206359863
    3. ' -' → logprob: -9.376416206359863
    4. '2' → logprob: -12.876416206359863
    5. '()-' → logprob: -13.876416206359863
    6. ')' → logprob: -14.126416206359863
    7. ')-' → logprob: -14.251416206359863
    8. ' ' → logprob: -14.501416206359863
    9. '```' → logprob: -15.876416206359863
    10. '−' → logprob: -16.75141716003418

Token 383: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -12.125006675720215
    3. '2' → logprob: -13.750006675720215
    4. '   ' → logprob: -15.875006675720215
    5. '```' → logprob: -16.37500762939453
    6. '
' → logprob: -16.50000762939453
    7. ')' → logprob: -16.75000762939453
    8. 'i' → logprob: -17.37500762939453
    9. '  ' → logprob: -17.81250762939453
    10. 'j' → logprob: -17.81250762939453

Token 384: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06404039263725281
    2. '):' → logprob: -2.814040422439575
    3. ')' → logprob: -6.564040184020996
    4. ' ):
' → logprob: -7.564040184020996
    5. '):
' → logprob: -10.564040184020996
    6. ' ):' → logprob: -10.814040184020996
    7. '       ' → logprob: -10.939040184020996
    8. '):

' → logprob: -11.064040184020996
    9. '           ' → logprob: -11.189040184020996
    10. '   ' → logprob: -11.189040184020996

Token 385: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5011560916900635
    2. ':
' → logprob: -1.1261560916900635
    3. '               ' → logprob: -3.2511560916900635
    4. '           ' → logprob: -3.7511560916900635
    5. ' continue' → logprob: -5.751155853271484
    6. '       ' → logprob: -6.501155853271484
    7. ' or' → logprob: -7.126155853271484
    8. '   ' → logprob: -8.126155853271484
    9. ':return' → logprob: -8.376155853271484
    10. ' and' → logprob: -8.501155853271484

Token 386: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7269327044487
    2. '(j' → logprob: -0.7269327044487
    3. '(i' → logprob: -4.101932525634766
    4. '(abs' → logprob: -5.101932525634766
    5. ' abs' → logprob: -5.601932525634766
    6. ' j' → logprob: -5.851932525634766
    7. 'abs' → logprob: -5.976932525634766
    8. 'j' → logprob: -7.101932525634766
    9. '(' → logprob: -8.726932525634766
    10. '(False' → logprob: -9.351932525634766

Token 387: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.13527528941631317
    2. ' j' → logprob: -2.135275363922119
    3. '(j' → logprob: -6.010275363922119
    4. 'i' → logprob: -6.385275363922119
    5. 'abs' → logprob: -6.385275363922119
    6. ' (' → logprob: -6.760275363922119
    7. ' i' → logprob: -7.760275363922119
    8. ' abs' → logprob: -8.010274887084961
    9. '(i' → logprob: -8.510274887084961
    10. '   ' → logprob: -9.260274887084961

Token 388: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0007914052694104612
    2. '==(' → logprob: -7.375791549682617
    3. ' ==' → logprob: -8.875791549682617
    4. '==
' → logprob: -11.500791549682617
    5. ']==' → logprob: -11.500791549682617
    6. ')==' → logprob: -12.625791549682617
    7. '()==' → logprob: -14.125791549682617
    8. '==-' → logprob: -15.375791549682617
    9. '=' → logprob: -15.625791549682617
    10. '0' → logprob: -16.125791549682617

Token 389: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003531059715896845
    2. 'n' → logprob: -5.753530979156494
    3. '(n' → logprob: -8.753531455993652
    4. ' ' → logprob: -9.128531455993652
    5. 'i' → logprob: -10.003531455993652
    6. ' n' → logprob: -11.253531455993652
    7. '(i' → logprob: -11.753531455993652
    8. ' (' → logprob: -12.003531455993652
    9. '
' → logprob: -12.128531455993652
    10. '(' → logprob: -12.253531455993652

Token 390: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3868793845176697
    2. 'and' → logprob: -1.1368794441223145
    3. ')' → logprob: -12.886878967285156
    4. '           ' → logprob: -13.511878967285156
    5. '   ' → logprob: -13.761878967285156
    6. ' ' → logprob: -13.761878967285156
    7. '	and' → logprob: -14.261878967285156
    8. '==' → logprob: -15.136878967285156
    9. '```' → logprob: -15.511878967285156
    10. '       ' → logprob: -15.511878967285156

Token 391: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012514829635620117
    2. ' i' → logprob: -4.387515068054199
    3. '   ' → logprob: -13.7625150680542
    4. ' ' → logprob: -14.0125150680542
    5. '(i' → logprob: -14.2625150680542
    6. '
' → logprob: -14.5125150680542
    7. '           ' → logprob: -14.6375150680542
    8. ' (' → logprob: -14.8875150680542
    9. '       ' → logprob: -15.2625150680542
    10. '	i' → logprob: -15.2625150680542

Token 392: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00011975488450843841
    2. '==(' → logprob: -9.250120162963867
    3. ' ==' → logprob: -11.250120162963867
    4. 'n' → logprob: -12.500120162963867
    5. '-n' → logprob: -13.250120162963867
    6. '-' → logprob: -13.250120162963867
    7. '==
' → logprob: -14.000120162963867
    8. ')==' → logprob: -14.000120162963867
    9. ']==' → logprob: -14.000120162963867
    10. '=n' → logprob: -14.875120162963867

Token 393: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.110668618930504e-05
    2. ' n' → logprob: -9.75006103515625
    3. '   ' → logprob: -14.25006103515625
    4. '	n' → logprob: -14.37506103515625
    5. '(n' → logprob: -14.62506103515625
    6. '1' → logprob: -14.62506103515625
    7. ' ' → logprob: -15.75006103515625
    8. '
' → logprob: -16.37506103515625
    9. ')n' → logprob: -16.37506103515625
    10. '[n' → logprob: -16.62506103515625

Token 394: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.696889623621246e-06
    2. '1' → logprob: -13.00000286102295
    3. ' -' → logprob: -14.87500286102295
    4. '2' → logprob: -18.750001907348633
    5. ')' → logprob: -18.750001907348633
    6. '−' → logprob: -19.250001907348633
    7. '[' → logprob: -19.375001907348633
    8. ')-' → logprob: -19.500001907348633
    9. '()-' → logprob: -19.562501907348633
    10. '```' → logprob: -19.625001907348633

Token 395: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. '2' → logprob: -13.50000286102295
    3. ' ' → logprob: -14.12500286102295
    4. '   ' → logprob: -15.75000286102295
    5. '```' → logprob: -16.062503814697266
    6. '-' → logprob: -16.125003814697266
    7. '
' → logprob: -16.312503814697266
    8. ')' → logprob: -16.375003814697266
    9. 'i' → logprob: -16.750003814697266
    10. 'j' → logprob: -16.812503814697266

Token 396: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03846726939082146
    2. '):' → logprob: -3.2884671688079834
    3. '           ' → logprob: -8.788467407226562
    4. ')' → logprob: -9.413467407226562
    5. ' ):
' → logprob: -9.538467407226562
    6. '       ' → logprob: -10.413467407226562
    7. ':
' → logprob: -10.538467407226562
    8. '):
' → logprob: -10.913467407226562
    9. ':' → logprob: -11.163467407226562
    10. '):

' → logprob: -11.413467407226562

Token 397: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04166318103671074
    2. ' continue' → logprob: -3.29166316986084
    3. 'continue' → logprob: -6.04166316986084
    4. ':
' → logprob: -7.66666316986084
    5. '           ' → logprob: -7.79166316986084
    6. ':' → logprob: -9.54166316986084
    7. ' continues' → logprob: -10.16666316986084
    8. '
' → logprob: -10.29166316986084
    9. '   ' → logprob: -10.41666316986084
    10. '       ' → logprob: -10.79166316986084

Token 398: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.25267723202705383
    2. 'continue' (adapté à ' continue') → logprob: -1.7526772022247314
    3. '               ' → logprob: -3.0026772022247314
    4. '           ' → logprob: -8.752676963806152
    5. '	continue' → logprob: -9.127676963806152
    6. '                   ' → logprob: -10.377676963806152
    7. '   ' → logprob: -11.127676963806152
    8. '_continue' → logprob: -13.127676963806152
    9. '       ' → logprob: -14.127676963806152
    10. '	           ' → logprob: -14.627676963806152

Token 399: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021327754948288202
    2. '       ' → logprob: -7.502132892608643
    3. '            
' → logprob: -7.502132892608643
    4. '
' → logprob: -8.252132415771484
    5. ' if' → logprob: -8.877132415771484
    6. '   ' → logprob: -8.877132415771484
    7. '  
' → logprob: -9.127132415771484
    8. '<|end|>' → logprob: -9.377132415771484
    9. ' 
' → logprob: -9.877132415771484
    10. '    
' → logprob: -9.877132415771484

Token 400: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007844982668757439
    2. '       ' → logprob: -5.007844924926758
    3. ' if' → logprob: -7.507844924926758
    4. '   ' → logprob: -8.507844924926758
    5. '            
' → logprob: -9.507844924926758
    6. '```' → logprob: -9.632844924926758
    7. ' for' → logprob: -10.382844924926758
    8. '               ' → logprob: -10.507844924926758
    9. ' a' → logprob: -10.757844924926758
    10. '
' → logprob: -10.882844924926758

Token 401: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.03403095901012421
    2. ' b' → logprob: -3.4090309143066406
    3. '           ' → logprob: -8.03403091430664
    4. '       ' → logprob: -10.53403091430664
    5. 'a' → logprob: -10.65903091430664
    6. '   ' → logprob: -11.78403091430664
    7. '
' → logprob: -14.15903091430664
    8. '            
' → logprob: -14.65903091430664
    9. '```' → logprob: -14.78403091430664
    10. ' a' → logprob: -14.78403091430664

Token 402: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. 'a' → logprob: -15.625
    3. '2' → logprob: -16.375
    4. '
' → logprob: -17.25
    5. '１' → logprob: -17.5625
    6. '```' → logprob: -17.9375
    7. '

' → logprob: -18.3125
    8. ' ' → logprob: -18.5
    9. 'poly' → logprob: -18.5625
    10. '१' → logprob: -18.625

Token 403: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022564470767975
    2. ' =' → logprob: -1.9102256298065186
    3. ',' → logprob: -13.910225868225098
    4. '=
' → logprob: -15.660225868225098
    5. ' poly' → logprob: -15.785225868225098
    6. ' ' → logprob: -16.03522491455078
    7. 'poly' → logprob: -16.16022491455078
    8. ')' → logprob: -17.16022491455078
    9. '=line' → logprob: -17.91022491455078
    10. ' =
' → logprob: -17.91022491455078

Token 404: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.01416350994259119
    2. ' poly' → logprob: -4.264163494110107
    3. '(poly' → logprob: -17.014163970947266
    4. 'pol' → logprob: -19.639163970947266
    5. 'py' → logprob: -21.264163970947266
    6. '_poly' → logprob: -21.514163970947266
    7. 'Poly' → logprob: -22.139163970947266
    8. ' ' → logprob: -22.264163970947266
    9. '/poly' → logprob: -22.389163970947266
    10. '-poly' → logprob: -22.889163970947266

Token 405: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.9160102712921798e-05
    2. '[(' → logprob: -10.500029563903809
    3. 'j' → logprob: -13.500029563903809
    4. '(j' → logprob: -16.000028610229492
    5. '[
' → logprob: -17.000028610229492
    6. '[i' → logprob: -17.375028610229492
    7. '[' → logprob: -17.625028610229492
    8. '[b' → logprob: -18.000028610229492
    9. '   ' → logprob: -19.750028610229492
    10. '```' → logprob: -19.750028610229492

Token 406: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1003032848238945
    2. ']
' → logprob: -2.3503031730651855
    3. ')' → logprob: -9.850303649902344
    4. ')
' → logprob: -11.600303649902344
    5. '[' → logprob: -11.850303649902344
    6. ']

' → logprob: -11.850303649902344
    7. '<|end|>' → logprob: -11.975303649902344
    8. ']
' → logprob: -12.725303649902344
    9. '+' → logprob: -12.725303649902344
    10. '])' → logprob: -13.100303649902344

Token 407: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10068504512310028
    2. 'b' → logprob: -2.6006851196289062
    3. ' b' → logprob: -3.8506851196289062
    4. '       ' → logprob: -8.850685119628906
    5. '   ' → logprob: -9.100685119628906
    6. '          ' → logprob: -11.100685119628906
    7. ' ' → logprob: -11.975685119628906
    8. '	b' → logprob: -12.225685119628906
    9. '            ' → logprob: -13.100685119628906
    10. '               ' → logprob: -13.100685119628906

Token 408: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.12693114578723907
    2. ' b' → logprob: -2.1269311904907227
    3. '           ' → logprob: -12.751931190490723
    4. '	b' → logprob: -16.626930236816406
    5. ' б' → logprob: -16.876930236816406
    6. '            ' → logprob: -18.251930236816406
    7. '   ' → logprob: -18.501930236816406
    8. ')b' → logprob: -18.876930236816406
    9. ' ' → logprob: -19.001930236816406
    10. '       ' → logprob: -19.376930236816406

Token 409: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00209673005156219
    2. '(' → logprob: -7.127096652984619
    3. '[' → logprob: -7.377096652984619
    4. '[(' → logprob: -7.502096652984619
    5. '1' → logprob: -10.127097129821777
    6. ' (' → logprob: -10.752097129821777
    7. '(j' → logprob: -11.627097129821777
    8. '[j' → logprob: -11.752097129821777
    9. ' ' → logprob: -12.127097129821777
    10. '+' → logprob: -12.127097129821777

Token 410: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5762946009635925
    2. '=' → logprob: -0.8262946009635925
    3. '[' → logprob: -8.951294898986816
    4. ')' → logprob: -9.826294898986816
    5. ' ' → logprob: -9.826294898986816
    6. ' poly' → logprob: -10.326294898986816
    7. '=[' → logprob: -10.826294898986816
    8. '=(' → logprob: -11.201294898986816
    9. '<|end|>' → logprob: -11.201294898986816
    10. '=
' → logprob: -12.076294898986816

Token 411: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.20141500234603882
    2. ' poly' → logprob: -1.7014150619506836
    3. '(poly' → logprob: -13.326415061950684
    4. 'pol' → logprob: -16.951414108276367
    5. ' ' → logprob: -18.951414108276367
    6. '_poly' → logprob: -19.826414108276367
    7. '/poly' → logprob: -19.826414108276367
    8. '-poly' → logprob: -19.826414108276367
    9. '.poly' → logprob: -19.951414108276367
    10. 'Poly' → logprob: -20.076414108276367

Token 412: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0009839815320447087
    2. '(j' → logprob: -7.500984191894531
    3. '[j' → logprob: -7.750984191894531
    4. '((' → logprob: -14.500984191894531
    5. '[
' → logprob: -15.875984191894531
    6. '[' → logprob: -17.62598419189453
    7. '   ' → logprob: -18.62598419189453
    8. '(' → logprob: -19.00098419189453
    9. ' (' → logprob: -19.37598419189453
    10. '{' → logprob: -19.75098419189453

Token 413: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.620622712536715e-05
    2. '(j' → logprob: -10.000045776367188
    3. ' j' → logprob: -14.250045776367188
    4. '[j' → logprob: -15.875045776367188
    5. '(' → logprob: -17.000045776367188
    6. '	j' → logprob: -17.875045776367188
    7. '   ' → logprob: -18.750045776367188
    8. '```' → logprob: -18.750045776367188
    9. ' (' → logprob: -19.000045776367188
    10. '$j' → logprob: -19.750045776367188

Token 414: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00019209683523513377
    2. '1' → logprob: -8.875191688537598
    3. ' +' → logprob: -9.875191688537598
    4. '2' → logprob: -15.125191688537598
    5. '[' → logprob: -15.375191688537598
    6. '0' → logprob: -15.875191688537598
    7. ' ' → logprob: -15.875191688537598
    8. '+j' → logprob: -16.875192642211914
    9. '(' → logprob: -17.250192642211914
    10. '   ' → logprob: -17.375192642211914

Token 415: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. '+' → logprob: -13.375001907348633
    3. '2' → logprob: -17.000001907348633
    4. ' ' → logprob: -17.250001907348633
    5. 'j' → logprob: -17.500001907348633
    6. '```' → logprob: -17.625001907348633
    7. '
' → logprob: -19.000001907348633
    8. '(' → logprob: -19.375001907348633
    9. '   ' → logprob: -19.625001907348633
    10. '{' → logprob: -20.000001907348633

Token 416: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.00011784763046307489
    2. ')' → logprob: -9.750118255615234
    3. ']%' → logprob: -9.875118255615234
    4. '%' → logprob: -12.375118255615234
    5. '%n' → logprob: -12.875118255615234
    6. ')]' → logprob: -15.125118255615234
    7. ')][' → logprob: -15.125118255615234
    8. ')[' → logprob: -15.750118255615234
    9. '```' → logprob: -15.750118255615234
    10. '()%' → logprob: -16.250118255615234

Token 417: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.512236498361744e-07
    2. 'poly' → logprob: -14.625000953674316
    3. ' n' → logprob: -16.625
    4. '%n' → logprob: -18.75
    5. '	n' → logprob: -18.875
    6. '```' → logprob: -19.0
    7. ')n' → logprob: -19.875
    8. '{' → logprob: -20.5
    9. ''n' → logprob: -20.625
    10. '
' → logprob: -21.0

Token 418: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022764618042856455
    2. ']
' → logprob: -6.127276420593262
    3. ']

' → logprob: -9.377276420593262
    4. ']
' → logprob: -12.877276420593262
    5. ')' → logprob: -13.377276420593262
    6. ')]' → logprob: -14.002276420593262
    7. ' ]' → logprob: -14.877276420593262
    8. '])' → logprob: -14.877276420593262
    9. '][' → logprob: -15.002276420593262
    10. '[' → logprob: -15.877276420593262

Token 419: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01335880346596241
    2. '       ' → logprob: -5.1383585929870605
    3. '
' → logprob: -5.1383585929870605
    4. '            
' → logprob: -7.0133585929870605
    5. 'def' → logprob: -8.513359069824219
    6. '   ' → logprob: -9.263359069824219
    7. '        
' → logprob: -9.888359069824219
    8. ')' → logprob: -10.013359069824219
    9. '    
' → logprob: -10.263359069824219
    10. ':
' → logprob: -10.888359069824219

Token 420: ' if' (ID: 538)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02902412973344326
    2. 'den' → logprob: -4.029024124145508
    3. 'dx' → logprob: -5.029024124145508
    4. 'd' → logprob: -5.529024124145508
    5. '   ' → logprob: -8.654024124145508
    6. '#' → logprob: -10.279024124145508
    7. '
' → logprob: -10.404024124145508
    8. 'val' → logprob: -10.904024124145508
    9. ' def' → logprob: -11.404024124145508
    10. '    
' → logprob: -11.904024124145508

Token 421: ' intersect' (ID: 64353)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.17382106184959412
    2. 'segments' → logprob: -2.548820972442627
    3. 'inter' → logprob: -3.298820972442627
    4. ' segments' → logprob: -4.048820972442627
    5. 'orientation' → logprob: -4.298820972442627
    6. 'cc' → logprob: -5.173820972442627
    7. ' do' → logprob: -5.673820972442627
    8. 'lines' → logprob: -6.798820972442627
    9. ' orientation' → logprob: -7.423820972442627
    10. ' lines' → logprob: -7.548820972442627

Token 422: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00030841029365547
    2. '(' → logprob: -8.2503080368042
    3. '(b' → logprob: -11.3753080368042
    4. '((' → logprob: -11.3753080368042
    5. ' (' → logprob: -11.6253080368042
    6. '(
' → logprob: -12.0003080368042
    7. '_' → logprob: -13.0003080368042
    8. 's' → logprob: -13.2503080368042
    9. '(A' → logprob: -13.3753080368042
    10. '_points' → logprob: -14.3753080368042

Token 423: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.037048883736133575
    2. '(a' → logprob: -4.037048816680908
    3. 'a' → logprob: -4.287048816680908
    4. 's' → logprob: -6.162048816680908
    5. ')' → logprob: -7.162048816680908
    6. '```' → logprob: -7.287048816680908
    7. '_segments' → logprob: -7.537048816680908
    8. '[a' → logprob: -8.787049293518066
    9. ' a' → logprob: -9.287049293518066
    10. '_points' → logprob: -9.537049293518066

Token 424: ',a' (ID: 26776)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4379325807094574
    2. ',a' → logprob: -1.0629326105117798
    3. ',b' → logprob: -4.81293249130249
    4. ' ,' → logprob: -7.18793249130249
    5. 'a' → logprob: -8.437932968139648
    6. '[' → logprob: -9.937932968139648
    7. ',
' → logprob: -11.312932968139648
    8. '_,' → logprob: -12.187932968139648
    9. ',[' → logprob: -12.937932968139648
    10. 'b' → logprob: -13.062932968139648

Token 425: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0019671740010380745
    2. '1' → logprob: -6.251966953277588
    3. 'a' → logprob: -10.251967430114746
    4. ',' → logprob: -13.501967430114746
    5. '```' → logprob: -14.126967430114746
    6. '<|end|>' → logprob: -15.251967430114746
    7. ',a' → logprob: -15.876967430114746
    8. ' a' → logprob: -15.876967430114746
    9. ' ' → logprob: -16.43946647644043
    10. '[' → logprob: -16.50196647644043

Token 426: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.07894542813301086
    2. ',' → logprob: -2.5789453983306885
    3. ' ,' → logprob: -10.57894515991211
    4. 'b' → logprob: -11.07894515991211
    5. ',a' → logprob: -11.20394515991211
    6. ',
' → logprob: -14.45394515991211
    7. ' b' → logprob: -16.32894515991211
    8. ',B' → logprob: -16.32894515991211
    9. '_,' → logprob: -16.45394515991211
    10. 'a' → logprob: -17.07894515991211

Token 427: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -17.125
    3. '2' → logprob: -18.375
    4. ')' → logprob: -18.8125
    5. 'b' → logprob: -18.875
    6. '[' → logprob: -19.5
    7. '१' → logprob: -20.3125
    8. '<|end|>' → logprob: -20.3125
    9. '১' → logprob: -20.375
    10. 'a' → logprob: -20.4375

Token 428: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.0015052208909764886
    2. ',' → logprob: -6.501505374908447
    3. 'b' → logprob: -13.376504898071289
    4. ',a' → logprob: -14.376504898071289
    5. ' ,' → logprob: -14.501504898071289
    6. '[' → logprob: -16.50150489807129
    7. '_,' → logprob: -16.87650489807129
    8. '1' → logprob: -17.62650489807129
    9. ')' → logprob: -18.12650489807129
    10. ',
' → logprob: -18.37650489807129

Token 429: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.4391956685576588e-05
    2. '1' → logprob: -10.625024795532227
    3. '3' → logprob: -17.000024795532227
    4. '```' → logprob: -18.000024795532227
    5. ')' → logprob: -18.250024795532227
    6. ' ' → logprob: -19.250024795532227
    7. '۲' → logprob: -19.500024795532227
    8. '₂' → logprob: -19.500024795532227
    9. '5' → logprob: -19.625024795532227
    10. '<|end|>' → logprob: -20.187524795532227

Token 430: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010598446242511272
    2. '):
' → logprob: -6.8760600090026855
    3. ' ):' → logprob: -11.126059532165527
    4. ')' → logprob: -11.876059532165527
    5. ':' → logprob: -13.251059532165527
    6. '[]):' → logprob: -14.251059532165527
    7. ')==' → logprob: -14.501059532165527
    8. '):
' → logprob: -14.751059532165527
    9. '==' → logprob: -14.751059532165527
    10. '():' → logprob: -14.876059532165527

Token 431: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006758584058843553
    2. '<|end|>' → logprob: -8.750676155090332
    3. ':' → logprob: -8.875676155090332
    4. ' return' → logprob: -9.000676155090332
    5. ':return' → logprob: -10.000676155090332
    6. '           ' → logprob: -10.000676155090332
    7. '                       ' → logprob: -10.250676155090332
    8. '                               ' → logprob: -10.875676155090332
    9. ':
' → logprob: -11.000676155090332
    10. '              ' → logprob: -11.500676155090332

Token 432: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19318941235542297
    2. ' return' → logprob: -1.8181893825531006
    3. '                   ' → logprob: -5.06818962097168
    4. 'return' (adapté à ' return') → logprob: -5.06818962097168
    5. '
' → logprob: -8.19318962097168
    6. ' 
' → logprob: -8.81818962097168
    7. '                       ' → logprob: -9.69318962097168
    8. ' True' → logprob: -9.69318962097168
    9. ' ' → logprob: -9.94318962097168
    10. '           ' → logprob: -9.94318962097168

Token 433: ' False' (ID: 7983)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3880688548088074
    2. 'False' → logprob: -1.1380689144134521
    3. ' True' → logprob: -6.888068675994873
    4. ' False' → logprob: -8.638069152832031
    5. '   ' → logprob: -20.38806915283203
    6. '(True' → logprob: -21.51306915283203
    7. '=True' → logprob: -22.01306915283203
    8. '(False' → logprob: -23.38806915283203
    9. ' ' → logprob: -23.51306915283203
    10. '  ' → logprob: -23.76306915283203

Token 434: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05139189958572388
    2. '
' → logprob: -3.676391839981079
    3. '       ' → logprob: -4.801392078399658
    4. '    
' → logprob: -5.176392078399658
    5. '	return' → logprob: -5.176392078399658
    6. '<|end|>' → logprob: -6.051392078399658
    7. 'return' → logprob: -6.801392078399658
    8. '           ' → logprob: -7.426392078399658
    9. '        
' → logprob: -8.3013916015625
    10. '<|end|>' → logprob: -8.4263916015625

Token 435: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007471516728401184
    2. 'return' → logprob: -5.757471561431885
    3. '	return' → logprob: -6.132471561431885
    4. '       ' → logprob: -7.007471561431885
    5. ' return' → logprob: -7.382471561431885
    6. '
' → logprob: -7.507471561431885
    7. '           ' → logprob: -11.507471084594727
    8. '    
' → logprob: -11.632471084594727
    9. ':return' → logprob: -12.507471084594727
    10. '```' → logprob: -13.007471084594727

Token 436: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.027512390166521072
    2. '   ' → logprob: -3.777512311935425
    3. ' return' → logprob: -6.277512550354004
    4. '
' → logprob: -6.277512550354004
    5. '	return' → logprob: -8.027512550354004
    6. 'def' → logprob: -9.527512550354004
    7. '       ' → logprob: -10.027512550354004
    8. ':return' → logprob: -11.152512550354004
    9. '    
' → logprob: -11.277512550354004
    10. 'True' → logprob: -11.902512550354004

Token 437: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.10020667314529419
    2. ' True' → logprob: -2.3502066135406494
    3. '(True' → logprob: -18.97520637512207
    4. '=True' → logprob: -20.60020637512207
    5. ' ' → logprob: -20.97520637512207
    6. ' ' → logprob: -22.10020637512207
    7. 'False' → logprob: -22.22520637512207
    8. 'true' → logprob: -22.47520637512207
    9. '   ' → logprob: -24.60020637512207
    10. ' true' → logprob: -24.60020637512207

Token 438: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011130942031741142
    2. '
' → logprob: -4.5111308097839355
    3. '

' → logprob: -10.261131286621094
    4. ':def' → logprob: -11.261131286621094
    5. '<|end|>' → logprob: -11.511131286621094
    6. ' def' → logprob: -11.636131286621094
    7. '  
' → logprob: -12.011131286621094
    8. '    
' → logprob: -12.761131286621094
    9. ':' → logprob: -13.261131286621094
    10. '```' → logprob: -13.761131286621094

Token 439: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0280383548888494e-06
    2. '
' → logprob: -13.875000953674316
    3. '    
' → logprob: -18.000001907348633
    4. 'import' → logprob: -18.375001907348633
    5. '  
' → logprob: -18.625001907348633
    6. ' def' → logprob: -18.750001907348633
    7. ':def' → logprob: -19.750001907348633
    8. '#' → logprob: -20.125001907348633
    9. '```' → logprob: -20.500001907348633
    10. '\' → logprob: -20.875001907348633

Token 440: ' on' (ID: 402)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.08925405889749527
    2. ' intersect' → logprob: -2.464254140853882
    3. 'do' → logprob: -9.089254379272461
    4. 'cc' → logprob: -9.964254379272461
    5. 'def' → logprob: -10.089254379272461
    6. ' on' → logprob: -10.214254379272461
    7. 'on' → logprob: -10.339254379272461
    8. ' do' → logprob: -10.964254379272461
    9. 'orient' → logprob: -11.839254379272461
    10. ' intersects' → logprob: -12.464254379272461

Token 441: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.0005697138840332627
    2. 'segment' → logprob: -7.500569820404053
    3. 'Segment' → logprob: -11.500569343566895
    4. '_line' → logprob: -12.125569343566895
    5. '_seg' → logprob: -14.500569343566895
    6. ' segment' → logprob: -15.375569343566895
    7. '_segments' → logprob: -15.375569343566895
    8. 'seg' → logprob: -16.62557029724121
    9. ' Segment' → logprob: -16.75057029724121
    10. 'line' → logprob: -16.87557029724121

Token 442: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.3782830137643032e-05
    2. '(a' → logprob: -11.50001335144043
    3. '(' → logprob: -12.62501335144043
    4. ' (' → logprob: -16.00001335144043
    5. '(pi' → logprob: -16.50001335144043
    6. '(q' → logprob: -18.37501335144043
    7. '(px' → logprob: -18.75001335144043
    8. '(point' → logprob: -18.87501335144043
    9. '(P' → logprob: -19.00001335144043
    10. 'p' → logprob: -19.12501335144043

Token 443: ',q' (ID: 86188)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07991326600313187
    2. ',p' → logprob: -2.579913377761841
    3. ',q' → logprob: -8.079913139343262
    4. ',a' → logprob: -8.204913139343262
    5. '(p' → logprob: -8.204913139343262
    6. ' ,' → logprob: -9.579913139343262
    7. ' p' → logprob: -10.829913139343262
    8. ',r' → logprob: -11.329913139343262
    9. 'a' → logprob: -11.829913139343262
    10. 'p' → logprob: -11.829913139343262

Token 444: ',r' (ID: 33654)
  Prédit: ',r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',r' → logprob: -0.013842946849763393
    2. ',' → logprob: -4.763843059539795
    3. ',p' → logprob: -5.263843059539795
    4. ',q' → logprob: -10.513842582702637
    5. 'r' → logprob: -12.263842582702637
    6. ' ,' → logprob: -12.263842582702637
    7. ',b' → logprob: -13.638842582702637
    8. ',a' → logprob: -14.138842582702637
    9. 'p' → logprob: -15.388842582702637
    10. ',o' → logprob: -15.638842582702637

Token 445: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011109835468232632
    2. '):
' → logprob: -4.511109828948975
    3. ',p' → logprob: -10.011110305786133
    4. ' ):' → logprob: -12.261110305786133
    5. '):
' → logprob: -12.386110305786133
    6. ',' → logprob: -12.761110305786133
    7. ')' → logprob: -13.511110305786133
    8. '):

' → logprob: -13.761110305786133
    9. '):(' → logprob: -13.761110305786133
    10. ':' → logprob: -14.636110305786133

Token 446: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.482821431243792e-05
    2. ' return' → logprob: -10.25008487701416
    3. ' if' → logprob: -10.25008487701416
    4. '    ' → logprob: -12.62508487701416
    5. '   ' → logprob: -12.62508487701416
    6. 'return' → logprob: -13.12508487701416
    7. '       ' → logprob: -13.87508487701416
    8. ' p' → logprob: -14.12508487701416
    9. '```' → logprob: -14.37508487701416
    10. '   ' → logprob: -14.37508487701416

Token 447: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.32118839025497437
    2. 'return' (adapté à ' return') → logprob: -1.8211884498596191
    3. '   ' → logprob: -2.571188449859619
    4. 'if' → logprob: -3.946188449859619
    5. ' if' → logprob: -4.071188449859619
    6. ' p' → logprob: -11.446187973022461
    7. '    ' → logprob: -11.446187973022461
    8. ' ' → logprob: -11.571187973022461
    9. '	return' → logprob: -12.071187973022461
    10. '  ' → logprob: -12.321187973022461

Token 448: ' (' (ID: 350)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6215733885765076
    2. '(min' → logprob: -0.8715733885765076
    3. ' min' → logprob: -3.8715734481811523
    4. '(q' → logprob: -3.8715734481811523
    5. '(p' → logprob: -6.621573448181152
    6. 'q' → logprob: -6.746573448181152
    7. ' (' → logprob: -7.871573448181152
    8. ' q' → logprob: -10.121573448181152
    9. '(' → logprob: -10.871573448181152
    10. 'p' → logprob: -11.996573448181152

Token 449: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.020307235419750214
    2. 'q' → logprob: -4.0203070640563965
    3. ' min' → logprob: -6.2703070640563965
    4. '(min' → logprob: -8.270307540893555
    5. ' q' → logprob: -12.520307540893555
    6. '(q' → logprob: -12.895307540893555
    7. 'p' → logprob: -14.395307540893555
    8. '	min' → logprob: -15.520307540893555
    9. '   ' → logprob: -16.020307540893555
    10. 'max' → logprob: -16.520307540893555

Token 450: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -9.925185440806672e-05
    2. 'p' → logprob: -9.250099182128906
    3. '(q' → logprob: -13.250099182128906
    4. '[p' → logprob: -13.750099182128906
    5. '((' → logprob: -16.750099182128906
    6. '(
' → logprob: -17.000099182128906
    7. '(' → logprob: -17.375099182128906
    8. '<p' → logprob: -18.125099182128906
    9. '[' → logprob: -18.250099182128906
    10. ' (' → logprob: -18.625099182128906

Token 451: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. 'p' → logprob: -17.75
    3. '0' → logprob: -18.25
    4. '(' → logprob: -18.375
    5. '
' → logprob: -18.875
    6. '   ' → logprob: -19.25
    7. '[
' → logprob: -19.625
    8. '```' → logprob: -19.625
    9. '1' → logprob: -20.625
    10. 'x' → logprob: -20.75

Token 452: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.000000953674316
    3. '
' → logprob: -18.0
    4. ' ' → logprob: -18.375
    5. '   ' → logprob: -19.5
    6. '

' → logprob: -20.625
    7. '1' → logprob: -20.875
    8. '۰' → logprob: -20.875
    9. '```' → logprob: -21.5
    10. '  ' → logprob: -22.375

Token 453: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6052716374397278
    2. ',p' → logprob: -1.230271577835083
    3. ',q' → logprob: -1.855271577835083
    4. ' ,' → logprob: -6.230271816253662
    5. '[' → logprob: -6.355271816253662
    6. ',r' → logprob: -6.855271816253662
    7. 'p' → logprob: -8.105271339416504
    8. 'q' → logprob: -8.855271339416504
    9. ')' → logprob: -9.980271339416504
    10. ',x' → logprob: -10.605271339416504

Token 454: 'r' (ID: 81)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.3868749439716339
    2. 'r' → logprob: -1.1368749141693115
    3. 'max' → logprob: -13.01187515258789
    4. ' q' → logprob: -13.76187515258789
    5. ' r' → logprob: -14.51187515258789
    6. '   ' → logprob: -17.38687515258789
    7. '	q' → logprob: -17.38687515258789
    8. '
' → logprob: -18.26187515258789
    9. '  ' → logprob: -18.26187515258789
    10. ')' → logprob: -18.38687515258789

Token 455: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.135819760151207e-05
    2. ')' → logprob: -9.75007152557373
    3. ')<=' → logprob: -11.75007152557373
    4. ')>=' → logprob: -12.87507152557373
    5. ')[' → logprob: -13.75007152557373
    6. ')>' → logprob: -13.75007152557373
    7. '   ' → logprob: -16.125070571899414
    8. '0' → logprob: -16.375070571899414
    9. ' [' → logprob: -16.500070571899414
    10. ')==' → logprob: -17.125070571899414

Token 456: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020473242329899222
    2. '[' → logprob: -8.500205039978027
    3. '1' → logprob: -14.625205039978027
    4. ' ' → logprob: -15.500205039978027
    5. '   ' → logprob: -15.625205039978027
    6. ')' → logprob: -15.875205039978027
    7. '
' → logprob: -16.37520408630371
    8. '```' → logprob: -16.50020408630371
    9. '2' → logprob: -18.25020408630371
    10. '#' → logprob: -18.50020408630371

Token 457: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02324955351650715
    2. ')<=' → logprob: -3.773249626159668
    3. ']<=' → logprob: -13.398249626159668
    4. '<=' → logprob: -14.023249626159668
    5. ')>=' → logprob: -14.148249626159668
    6. ' )' → logprob: -14.398249626159668
    7. ')
' → logprob: -15.273249626159668
    8. '）' → logprob: -16.89824867248535
    9. ')<' → logprob: -17.27324867248535
    10. '`)' → logprob: -18.14824867248535

Token 458: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.002502651885151863
    2. ' <=' → logprob: -6.00250244140625
    3. ')<=' → logprob: -10.62750244140625
    4. ']<=' → logprob: -13.00250244140625
    5. ')' → logprob: -15.25250244140625
    6. '≤' → logprob: -16.25250244140625
    7. '```' → logprob: -16.50250244140625
    8. '>=' → logprob: -16.50250244140625
    9. '[' → logprob: -17.12750244140625
    10. ' ' → logprob: -19.00250244140625

Token 459: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.627176768844947e-05
    2. ' q' → logprob: -9.250096321105957
    3. '	q' → logprob: -16.87509536743164
    4. '
' → logprob: -18.25009536743164
    5. '   ' → logprob: -19.37509536743164
    6. '  ' → logprob: -20.87509536743164
    7. '[q' → logprob: -20.87509536743164
    8. ' ' → logprob: -21.00009536743164
    9. 'max' → logprob: -21.25009536743164
    10. ',q' → logprob: -21.50009536743164

Token 460: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. '0' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.125001907348633
    4. '1' → logprob: -19.250001907348633
    5. '.' → logprob: -19.875001907348633
    6. '```' → logprob: -19.875001907348633
    7. 'x' → logprob: -20.125001907348633
    8. ' [' → logprob: -20.625001907348633
    9. '[
' → logprob: -21.375001907348633
    10. '
' → logprob: -21.500001907348633

Token 461: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4740777611732483
    2. '[' → logprob: -0.9740777611732483
    3. 'x' → logprob: -14.599078178405762
    4. '```' → logprob: -16.224077224731445
    5. '1' → logprob: -16.724077224731445
    6. '   ' → logprob: -17.099077224731445
    7. '
' → logprob: -17.099077224731445
    8. '(' → logprob: -17.474077224731445
    9. '``' → logprob: -18.599077224731445
    10. '[
' → logprob: -18.724077224731445

Token 462: ']<=' (ID: 175609)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.0017245612107217312
    2. ' <=' → logprob: -7.001724720001221
    3. ')<=' → logprob: -8.001724243164062
    4. 'and' → logprob: -8.501724243164062
    5. ')' → logprob: -8.626724243164062
    6. ' and' → logprob: -9.501724243164062
    7. ']<=' → logprob: -11.001724243164062
    8. '```' → logprob: -13.876724243164062
    9. '≤' → logprob: -14.001724243164062
    10. '==' → logprob: -14.626724243164062

Token 463: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.676292231422849e-05
    2. ' max' → logprob: -11.000017166137695
    3. 'min' → logprob: -17.500017166137695
    4. '(max' → logprob: -19.625017166137695
    5. '	max' → logprob: -21.375017166137695
    6. '   ' → logprob: -22.250017166137695
    7. ',max' → logprob: -22.500017166137695
    8. '=max' → logprob: -23.250017166137695
    9. '
' → logprob: -23.625017166137695
    10. '_max' → logprob: -24.375017166137695

Token 464: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.0445127372804563e-05
    2. 'p' → logprob: -11.62501049041748
    3. '(' → logprob: -13.50001049041748
    4. '(
' → logprob: -16.750009536743164
    5. '[p' → logprob: -17.750009536743164
    6. ' (' → logprob: -17.875009536743164
    7. ')' → logprob: -19.000009536743164
    8. '((' → logprob: -19.000009536743164
    9. '<p' → logprob: -19.625009536743164
    10. ')(' → logprob: -19.750009536743164

Token 465: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '0' → logprob: -14.500000953674316
    3. '<|end|>' → logprob: -16.0
    4. '[
' → logprob: -17.25
    5. '(' → logprob: -17.75
    6. '```' → logprob: -18.125
    7. '   ' → logprob: -18.5
    8. ')' → logprob: -18.625
    9. 'import' → logprob: -18.75
    10. 'def' → logprob: -19.5

Token 466: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017031522002071142
    2. '[' → logprob: -6.376703262329102
    3. '```' → logprob: -15.001703262329102
    4. '   ' → logprob: -15.251703262329102
    5. ' ' → logprob: -15.876703262329102
    6. 'p' → logprob: -16.5017032623291
    7. '2' → logprob: -17.2517032623291
    8. '1' → logprob: -17.8142032623291
    9. ')' → logprob: -17.9392032623291
    10. 'x' → logprob: -18.0017032623291

Token 467: '],' (ID: 2155)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -3.79811754100956e-05
    2. '0' → logprob: -10.250038146972656
    3. ',' → logprob: -13.250038146972656
    4. '   ' → logprob: -15.500038146972656
    5. '```' → logprob: -16.250038146972656
    6. ')' → logprob: -16.375038146972656
    7. '(' → logprob: -16.375038146972656
    8. '1' → logprob: -16.500038146972656
    9. '][' → logprob: -17.000038146972656
    10. '[
' → logprob: -17.625038146972656

Token 468: 'r' (ID: 81)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00018149138486478478
    2. 'r' → logprob: -8.625181198120117
    3. ' p' → logprob: -13.250181198120117
    4. '   ' → logprob: -16.250181198120117
    5. '<p' → logprob: -18.000181198120117
    6. ')p' → logprob: -18.250181198120117
    7. '[p' → logprob: -18.500181198120117
    8. 'q' → logprob: -19.000181198120117
    9. '
' → logprob: -19.000181198120117
    10. ' ' → logprob: -19.125181198120117

Token 469: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004366294015198946
    2. '0' → logprob: -7.750436782836914
    3. '   ' → logprob: -12.375436782836914
    4. '1' → logprob: -14.000436782836914
    5. '```' → logprob: -14.625436782836914
    6. ' ' → logprob: -16.250436782836914
    7. '[
' → logprob: -16.250436782836914
    8. '][' → logprob: -17.000436782836914
    9. '  ' → logprob: -17.125436782836914
    10. '2' → logprob: -17.250436782836914

Token 470: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5570885807392187e-05
    2. '1' → logprob: -11.375015258789062
    3. '[' → logprob: -12.750015258789062
    4. '   ' → logprob: -14.500015258789062
    5. '2' → logprob: -15.000015258789062
    6. '```' → logprob: -15.625015258789062
    7. ' ' → logprob: -16.375015258789062
    8. '  ' → logprob: -17.250015258789062
    9. '
' → logprob: -18.812515258789062
    10. '    ' → logprob: -19.187515258789062

Token 471: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.8374060392379761
    2. '))' → logprob: -1.337406039237976
    3. ')' → logprob: -1.462406039237976
    4. '[' → logprob: -2.8374061584472656
    5. ']))' → logprob: -4.462406158447266
    6. ')])' → logprob: -6.462406158447266
    7. ')))' → logprob: -7.712406158447266
    8. ')]' → logprob: -8.587406158447266
    9. ']' → logprob: -8.712406158447266
    10. ')
' → logprob: -8.837406158447266

Token 472: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.870698094367981
    2. 'and' → logprob: -1.120698094367981
    3. ' and' → logprob: -1.370698094367981
    4. ' )' → logprob: -6.745697975158691
    5. '   ' → logprob: -8.620697975158691
    6. ' ' → logprob: -13.995697975158691
    7. '  ' → logprob: -14.495697975158691
    8. '    ' → logprob: -14.870697975158691
    9. ')&&' → logprob: -15.245697975158691
    10. '	and' → logprob: -15.745697975158691

Token 473: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2014336884021759
    2. ' min' → logprob: -1.7014336585998535
    3. '	min' → logprob: -11.326434135437012
    4. '   ' → logprob: -12.326434135437012
    5. '(min' → logprob: -13.576434135437012
    6. '    ' → logprob: -13.701434135437012
    7. '  ' → logprob: -14.451434135437012
    8. '
' → logprob: -14.826434135437012
    9. '    
' → logprob: -15.951434135437012
    10. '     ' → logprob: -16.451433181762695

Token 474: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -7.231182826217264e-05
    2. 'p' → logprob: -9.625072479248047
    3. '(' → logprob: -12.625072479248047
    4. '<|end|>' → logprob: -13.000072479248047
    5. '(
' → logprob: -14.750072479248047
    6. '(q' → logprob: -16.250072479248047
    7. '
' → logprob: -16.625072479248047
    8. 'def' → logprob: -17.750072479248047
    9. ' (' → logprob: -17.750072479248047
    10. '<p' → logprob: -17.875072479248047

Token 475: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7432603272027336e-06
    2. '[
' → logprob: -14.000001907348633
    3. 'def' → logprob: -14.750001907348633
    4. '<|end|>' → logprob: -15.125001907348633
    5. '```' → logprob: -16.500001907348633
    6. '   ' → logprob: -16.750001907348633
    7. '<|end|>' → logprob: -16.750001907348633
    8. ')' → logprob: -17.375001907348633
    9. 'import' → logprob: -17.750001907348633
    10. 'p' → logprob: -18.250001907348633

Token 476: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011348073370754719
    2. '[' → logprob: -4.511348247528076
    3. '0' → logprob: -8.136347770690918
    4. '```' → logprob: -12.886347770690918
    5. ' ' → logprob: -13.636347770690918
    6. '   ' → logprob: -13.761347770690918
    7. 'p' → logprob: -15.011347770690918
    8. '
' → logprob: -15.136347770690918
    9. '(' → logprob: -15.261347770690918
    10. ')' → logprob: -15.636347770690918

Token 477: '],' (ID: 2155)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10061939805746078
    2. ',' → logprob: -2.350619316101074
    3. '<|end|>' → logprob: -8.725619316101074
    4. ')' → logprob: -9.475619316101074
    5. ',p' → logprob: -9.600619316101074
    6. ' ,' → logprob: -10.225619316101074
    7. '()[' → logprob: -11.225619316101074
    8. '(' → logprob: -11.350619316101074
    9. '(),' → logprob: -11.475619316101074
    10. '),' → logprob: -11.975619316101074

Token 478: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.038237713277339935
    2. 'q' → logprob: -3.2882378101348877
    3. 'p' → logprob: -8.538237571716309
    4. ')' → logprob: -15.663237571716309
    5. '<|end|>' → logprob: -16.163238525390625
    6. ' r' → logprob: -17.038238525390625
    7. '   ' → logprob: -17.788238525390625
    8. '```' → logprob: -18.038238525390625
    9. '
' → logprob: -18.163238525390625
    10. '[r' → logprob: -18.413238525390625

Token 479: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.020561041310429573
    2. '1' → logprob: -3.8955609798431396
    3. '```' → logprob: -12.270561218261719
    4. ')[' → logprob: -12.895561218261719
    5. '][' → logprob: -13.270561218261719
    6. ')' → logprob: -13.395561218261719
    7. '0' → logprob: -13.395561218261719
    8. '   ' → logprob: -13.645561218261719
    9. '<|end|>' → logprob: -14.020561218261719
    10. '[
' → logprob: -14.270561218261719

Token 480: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029847560450434685
    2. '0' → logprob: -3.5298476219177246
    3. '[' → logprob: -9.279847145080566
    4. '```' → logprob: -13.529847145080566
    5. '   ' → logprob: -13.904847145080566
    6. '2' → logprob: -15.342347145080566
    7. 'p' → logprob: -15.342347145080566
    8. '-' → logprob: -15.717347145080566
    9. '(' → logprob: -16.154848098754883
    10. ' ' → logprob: -16.404848098754883

Token 481: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32047268748283386
    2. ')<=' → logprob: -1.3204727172851562
    3. ']<=' → logprob: -5.195472717285156
    4. '])' → logprob: -6.820472717285156
    5. '[' → logprob: -8.445472717285156
    6. '())' → logprob: -8.945472717285156
    7. '()' → logprob: -9.320472717285156
    8. ']' → logprob: -10.070472717285156
    9. '   ' → logprob: -10.570472717285156
    10. ')>=' → logprob: -11.820472717285156

Token 482: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.0005332559230737388
    2. ')<=' → logprob: -7.875533103942871
    3. ']<=' → logprob: -8.875533103942871
    4. ' <=' → logprob: -11.750533103942871
    5. '```' → logprob: -13.375533103942871
    6. '()' → logprob: -13.500533103942871
    7. ')' → logprob: -13.875533103942871
    8. '[' → logprob: -14.500533103942871
    9. '
' → logprob: -14.625533103942871
    10. 'q' → logprob: -15.750533103942871

Token 483: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.054500666621607e-06
    2. ' q' → logprob: -12.75000286102295
    3. '	q' → logprob: -18.000003814697266
    4. '
' → logprob: -18.000003814697266
    5. '   ' → logprob: -18.875003814697266
    6. '```' → logprob: -20.125003814697266
    7. ' ' → logprob: -20.375003814697266
    8. '  ' → logprob: -20.625003814697266
    9. '    ' → logprob: -21.500003814697266
    10. '       ' → logprob: -21.625003814697266

Token 484: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2200749754119897e-06
    2. '1' → logprob: -13.250001907348633
    3. '```' → logprob: -15.875001907348633
    4. '0' → logprob: -16.125001907348633
    5. '   ' → logprob: -17.375001907348633
    6. '<=' → logprob: -17.625001907348633
    7. '.' → logprob: -18.500001907348633
    8. '
' → logprob: -18.750001907348633
    9. '[
' → logprob: -18.750001907348633
    10. ' [' → logprob: -18.875001907348633

Token 485: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2014336884021759
    2. '[' → logprob: -1.7014336585998535
    3. '```' → logprob: -11.826434135437012
    4. ' ' → logprob: -12.701434135437012
    5. '   ' → logprob: -12.826434135437012
    6. '
' → logprob: -13.576434135437012
    7. ']' → logprob: -13.951434135437012
    8. ' [' → logprob: -14.138934135437012
    9. '.' → logprob: -14.263934135437012
    10. '(' → logprob: -14.576434135437012

Token 486: ']<=' (ID: 175609)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.14315307140350342
    2. '[' → logprob: -2.393153190612793
    3. ']<=' → logprob: -3.268153190612793
    4. ')<=' → logprob: -6.018153190612793
    5. '0' → logprob: -7.643153190612793
    6. '<|end|>' → logprob: -8.643153190612793
    7. '1' → logprob: -9.018153190612793
    8. '```' → logprob: -9.018153190612793
    9. ' <=' → logprob: -9.018153190612793
    10. '][' → logprob: -9.393153190612793

Token 487: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: 0.0
    2. ' max' → logprob: -16.75
    3. 'min' → logprob: -22.875
    4. '
' → logprob: -23.625
    5. '(max' → logprob: -24.25
    6. '   ' → logprob: -24.375
    7. '	max' → logprob: -24.875
    8. 'p' → logprob: -25.375
    9. '[max' → logprob: -26.125
    10. ',max' → logprob: -27.25

Token 488: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.0280383548888494e-06
    2. 'p' → logprob: -13.875000953674316
    3. '(' → logprob: -17.500001907348633
    4. '[p' → logprob: -19.125001907348633
    5. '   ' → logprob: -19.375001907348633
    6. '(
' → logprob: -19.500001907348633
    7. ' (' → logprob: -19.750001907348633
    8. ')' → logprob: -20.000001907348633
    9. '```' → logprob: -20.125001907348633
    10. '<p' → logprob: -20.250001907348633

Token 489: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002811290556564927
    2. '1' → logprob: -5.877811431884766
    3. '```' → logprob: -12.877811431884766
    4. '][' → logprob: -14.252811431884766
    5. '-' → logprob: -14.377811431884766
    6. '(' → logprob: -14.377811431884766
    7. '   ' → logprob: -14.627811431884766
    8. ']' → logprob: -14.752811431884766
    9. 'p' → logprob: -14.752811431884766
    10. '0' → logprob: -15.752811431884766

Token 490: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.214019307051785e-05
    2. '[' → logprob: -10.500032424926758
    3. '0' → logprob: -13.375032424926758
    4. '   ' → logprob: -13.875032424926758
    5. '```' → logprob: -14.375032424926758
    6. 'p' → logprob: -14.875032424926758
    7. ' ' → logprob: -15.625032424926758
    8. '
' → logprob: -16.000032424926758
    9. '  ' → logprob: -16.250032424926758
    10. ']' → logprob: -16.375032424926758

Token 491: '],' (ID: 2155)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009991814382374287
    2. ',' → logprob: -4.759991645812988
    3. '1' → logprob: -6.759991645812988
    4. '   ' → logprob: -9.634991645812988
    5. '][' → logprob: -10.134991645812988
    6. 'p' → logprob: -10.509991645812988
    7. '0' → logprob: -10.759991645812988
    8. '```' → logprob: -10.759991645812988
    9. '],' → logprob: -11.009991645812988
    10. ')[' → logprob: -12.384991645812988

Token 492: 'r' (ID: 81)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.16033390164375305
    2. 'r' → logprob: -1.9103338718414307
    3. '
' → logprob: -9.285333633422852
    4. '   ' → logprob: -11.910333633422852
    5. '[p' → logprob: -12.410333633422852
    6. ' p' → logprob: -12.660333633422852
    7. '[r' → logprob: -13.660333633422852
    8. 'q' → logprob: -15.035333633422852
    9. '     ' → logprob: -15.285333633422852
    10. '       ' → logprob: -15.285333633422852

Token 493: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1427520513534546
    2. '[' → logprob: -2.017752170562744
    3. '])' → logprob: -10.392751693725586
    4. '```' → logprob: -10.892751693725586
    5. '   ' → logprob: -11.267751693725586
    6. '0' → logprob: -12.517751693725586
    7. ']))' → logprob: -13.142751693725586
    8. ']' → logprob: -13.642751693725586
    9. '])
' → logprob: -13.767751693725586
    10. ')' → logprob: -14.142751693725586

Token 494: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. '0' → logprob: -12.500007629394531
    3. '[' → logprob: -13.875007629394531
    4. '   ' → logprob: -14.000007629394531
    5. '```' → logprob: -14.000007629394531
    6. '
' → logprob: -14.375007629394531
    7. '  ' → logprob: -16.31250762939453
    8. '-' → logprob: -16.81250762939453
    9. '

' → logprob: -16.87500762939453
    10. '2' → logprob: -17.00000762939453

Token 495: ']))

' (ID: 92947)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.018155209720134735
    2. '1' → logprob: -5.143155097961426
    3. '])' → logprob: -5.518155097961426
    4. '[' → logprob: -5.893155097961426
    5. ']' → logprob: -6.268155097961426
    6. ')' → logprob: -6.768155097961426
    7. '0' → logprob: -6.893155097961426
    8. '))' → logprob: -7.393155097961426
    9. '])))' → logprob: -8.643155097961426
    10. ')))' → logprob: -9.018155097961426

Token 496: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.7146746763028204e-05
    2. '<|end|>' → logprob: -11.00003719329834
    3. ')' → logprob: -11.12503719329834
    4. ' def' → logprob: -13.25003719329834
    5. '

' → logprob: -14.00003719329834
    6. '
' → logprob: -14.12503719329834
    7. '(' → logprob: -14.37503719329834
    8. ':def' → logprob: -15.00003719329834
    9. '  
' → logprob: -15.12503719329834
    10. '```' → logprob: -15.50003719329834

Token 497: ' intersect' (ID: 64353)
  Prédit: 'orientation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orientation' → logprob: -0.39106276631355286
    2. 'inter' → logprob: -1.3910627365112305
    3. 'do' → logprob: -2.8910627365112305
    4. ' orientation' → logprob: -4.1410627365112305
    5. 'segments' → logprob: -7.1410627365112305
    6. 'intersection' → logprob: -7.2660627365112305
    7. ' do' → logprob: -7.8910627365112305
    8. 'orient' → logprob: -7.8910627365112305
    9. ' intersect' → logprob: -8.14106273651123
    10. 'on' → logprob: -8.39106273651123

Token 498: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.575955867767334
    2. '(a' → logprob: -0.825955867767334
    3. 'def' → logprob: -11.450956344604492
    4. '(' → logprob: -13.200956344604492
    5. '(A' → logprob: -13.325956344604492
    6. '((' → logprob: -13.700956344604492
    7. '```' → logprob: -14.575956344604492
    8. '(
' → logprob: -15.825956344604492
    9. '(seg' → logprob: -15.950956344604492
    10. '(l' → logprob: -16.075956344604492

Token 499: '1' (ID: 16)
  Prédit: ',q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',q' → logprob: -1.1892391443252563
    2. ',' → logprob: -1.3142391443252563
    3. '1' → logprob: -1.4392391443252563
    4. ',p' → logprob: -1.6892391443252563
    5. 'a' → logprob: -6.064239025115967
    6. ',a' → logprob: -6.689239025115967
    7. 'p' → logprob: -7.439239025115967
    8. 'q' → logprob: -8.189239501953125
    9. '```' → logprob: -8.689239501953125
    10. '[' → logprob: -9.189239501953125

Token 500: ',q' (ID: 86188)
  Prédit: ',p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.03827764093875885
    2. ',' → logprob: -3.2882776260375977
    3. ' ,' → logprob: -8.538277626037598
    4. 'p' → logprob: -10.413277626037598
    5. ',q' → logprob: -11.663277626037598
    6. ' p' → logprob: -14.913277626037598
    7. ',a' → logprob: -15.163277626037598
    8. ',
' → logprob: -15.663277626037598
    9. '```' → logprob: -16.163278579711914
    10. ',t' → logprob: -16.288278579711914

Token 501: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.36772817373275757
    2. ',' → logprob: -1.3677282333374023
    3. ',p' → logprob: -2.9927282333374023
    4. 'p' → logprob: -5.992728233337402
    5. ',q' → logprob: -8.617728233337402
    6. ')' → logprob: -9.492728233337402
    7. ',
' → logprob: -10.242728233337402
    8. ' ,' → logprob: -10.867728233337402
    9. '_,' → logprob: -11.867728233337402
    10. ',r' → logprob: -11.992728233337402

Token 502: ',p' (ID: 14835)
  Prédit: ',p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.0009155054576694965
    2. ',' → logprob: -7.00091552734375
    3. ' ,' → logprob: -13.12591552734375
    4. ',q' → logprob: -13.75091552734375
    5. 'p' → logprob: -14.00091552734375
    6. ',b' → logprob: -17.50091552734375
    7. ',
' → logprob: -18.00091552734375
    8. ',r' → logprob: -18.12591552734375
    9. '_,' → logprob: -18.75091552734375
    10. ',s' → logprob: -20.50091552734375

Token 503: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06994643062353134
    2. '1' → logprob: -2.694946527481079
    3. 'ython' → logprob: -12.3199462890625
    4. 'oints' → logprob: -13.4449462890625
    5. 'oly' → logprob: -13.9449462890625
    6. '4' → logprob: -14.1949462890625
    7. 'p' → logprob: -14.5699462890625
    8. '```' → logprob: -14.9449462890625
    9. '0' → logprob: -15.0699462890625
    10. '3' → logprob: -15.4449462890625

Token 504: ',q' (ID: 86188)
  Prédit: ',q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',q' → logprob: -0.00979351345449686
    2. ',' → logprob: -5.509793281555176
    3. '1' → logprob: -5.509793281555176
    4. ',p' → logprob: -6.509793281555176
    5. '2' → logprob: -9.259793281555176
    6. 'q' → logprob: -9.884793281555176
    7. ',r' → logprob: -12.134793281555176
    8. '_,' → logprob: -12.759793281555176
    9. ' ,' → logprob: -13.009793281555176
    10. 'p' → logprob: -13.384793281555176

Token 505: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20141752064228058
    2. '1' → logprob: -1.7014175653457642
    3. '3' → logprob: -13.576417922973633
    4. '5' → logprob: -13.576417922973633
    5. '7' → logprob: -13.826417922973633
    6. '[' → logprob: -15.701417922973633
    7. ')' → logprob: -15.701417922973633
    8. ',' → logprob: -15.951417922973633
    9. '4' → logprob: -16.326417922973633
    10. '```' → logprob: -16.326417922973633

Token 506: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011050059460103512
    2. '):
' → logprob: -4.511050224304199
    3. '):
' → logprob: -13.8860502243042
    4. ':' → logprob: -14.6360502243042
    5. ' ):' → logprob: -14.6360502243042
    6. '):

' → logprob: -15.1360502243042
    7. ')' → logprob: -16.011049270629883
    8. '   ' → logprob: -17.261049270629883
    9. '}:' → logprob: -18.636049270629883
    10. ' ):
' → logprob: -18.886049270629883

Token 507: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05692829564213753
    2. 'o' → logprob: -3.0569283962249756
    3. ' o' → logprob: -5.5569281578063965
    4. '	o' → logprob: -6.0569281578063965
    5. '    
' → logprob: -7.4319281578063965
    6. 'or' → logprob: -7.5569281578063965
    7. 'def' → logprob: -7.8069281578063965
    8. 'orient' → logprob: -8.556928634643555
    9. 'val' → logprob: -9.056928634643555
    10. '_o' → logprob: -9.806928634643555

Token 508: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' (adapté à ' o') → logprob: -5.073596548754722e-05
    2. ' o' → logprob: -10.37505054473877
    3. '   ' → logprob: -11.25005054473877
    4. 'def' → logprob: -13.12505054473877
    5. '    
' → logprob: -13.62505054473877
    6. '
' → logprob: -13.87505054473877
    7. 'or' → logprob: -14.37505054473877
    8. 'orient' → logprob: -14.50005054473877
    9. '	o' → logprob: -14.87505054473877
    10. '#' → logprob: -15.12505054473877

Token 509: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.44443862256594e-05
    2. 'r' → logprob: -10.000064849853516
    3. 'p' → logprob: -10.875064849853516
    4. '=' → logprob: -17.375064849853516
    5. 'def' → logprob: -17.500064849853516
    6. 'rl' → logprob: -18.625064849853516
    7. 'o' → logprob: -19.625064849853516
    8. 'a' → logprob: -19.750064849853516
    9. 'f' → logprob: -19.750064849853516
    10. '_p' → logprob: -20.000064849853516

Token 510: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047935113310814
    2. ' =' → logprob: -4.511047840118408
    3. '=o' → logprob: -16.63604736328125
    4. '=int' → logprob: -18.38604736328125
    5. ',' → logprob: -18.63604736328125
    6. '=p' → logprob: -19.63604736328125
    7. '=_' → logprob: -19.76104736328125
    8. ')' → logprob: -19.88604736328125
    9. '=}' → logprob: -19.88604736328125
    10. '=
' → logprob: -19.88604736328125

Token 511: ' orientation' (ID: 29546)
  Prédit: 'orientation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orientation' → logprob: -0.0001234428636962548
    2. ' orientation' → logprob: -9.000123023986816
    3. 'orient' → logprob: -18.125123977661133
    4. '.orientation' → logprob: -21.000123977661133
    5. '_orientation' → logprob: -21.875123977661133
    6. 'Orientation' → logprob: -23.250123977661133
    7. 'origin' → logprob: -24.250123977661133
    8. 'or' → logprob: -24.375123977661133
    9. 'intersection' → logprob: -24.500123977661133
    10. '(' → logprob: -24.500123977661133

Token 512: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.500001907348633
    3. '(
' → logprob: -17.625001907348633
    4. '((' → logprob: -18.625001907348633
    5. ' (' → logprob: -18.750001907348633
    6. 'def' → logprob: -19.625001907348633
    7. '(P' → logprob: -19.625001907348633
    8. 'p' → logprob: -20.500001907348633
    9. '[p' → logprob: -21.000001907348633
    10. '```' → logprob: -21.250001907348633

Token 513: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001996066712308675
    2. ',p' → logprob: -8.750199317932129
    3. ',' → logprob: -10.375199317932129
    4. 'p' → logprob: -12.500199317932129
    5. '(p' → logprob: -12.750199317932129
    6. '[' → logprob: -13.875199317932129
    7. ' ,' → logprob: -14.375199317932129
    8. '```' → logprob: -14.750199317932129
    9. ' p' → logprob: -14.875199317932129
    10. ' ' → logprob: -15.125199317932129

Token 514: ',q' (ID: 86188)
  Prédit: ',q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',q' → logprob: -0.2530444860458374
    2. ',' → logprob: -1.5030444860458374
    3. ',p' → logprob: -6.878044605255127
    4. ' ,' → logprob: -9.878044128417969
    5. 'q' → logprob: -10.378044128417969
    6. 'p' → logprob: -14.003044128417969
    7. ',
' → logprob: -14.628044128417969
    8. ',o' → logprob: -14.753044128417969
    9. ' q' → logprob: -15.753044128417969
    10. ',k' → logprob: -17.00304412841797

Token 515: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ',' → logprob: -15.875000953674316
    3. 'p' → logprob: -15.875000953674316
    4. 'q' → logprob: -16.125
    5. '2' → logprob: -17.125
    6. '<|end|>' → logprob: -17.625
    7. '```' → logprob: -17.75
    8. ' ' → logprob: -17.75
    9. 's' → logprob: -18.0
    10. '[' → logprob: -18.125

Token 516: ',p' (ID: 14835)
  Prédit: ',p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.16066285967826843
    2. ',' → logprob: -1.9106628894805908
    3. 'p' → logprob: -8.535662651062012
    4. ',q' → logprob: -8.910662651062012
    5. ' ,' → logprob: -9.160662651062012
    6. ' p' → logprob: -13.535662651062012
    7. ',
' → logprob: -14.660662651062012
    8. ',o' → logprob: -15.910662651062012
    9. ',r' → logprob: -16.535663604736328
    10. '(p' → logprob: -16.785663604736328

Token 517: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '1' → logprob: -18.75
    3. '₂' → logprob: -19.75
    4. '```' → logprob: -19.875
    5. 'r' → logprob: -20.0
    6. '
' → logprob: -20.375
    7. 'p' → logprob: -20.5
    8. '۲' → logprob: -20.75
    9. '[' → logprob: -21.5
    10. ' ' → logprob: -22.0

Token 518: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06197664886713028
    2. ')
' → logprob: -2.811976671218872
    3. ')
' → logprob: -12.686976432800293
    4. ')

' → logprob: -12.936976432800293
    5. ' )' → logprob: -13.186976432800293
    6. ' )
' → logprob: -13.686976432800293
    7. '),' → logprob: -15.811976432800293
    8. ')o' → logprob: -16.56197738647461
    9. ' ' → logprob: -16.93697738647461
    10. ')>' → logprob: -17.06197738647461

Token 519: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 520: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' (adapté à ' o') → logprob: -0.00012809180771000683
    2. ' o' → logprob: -9.000127792358398
    3. '   ' → logprob: -12.750127792358398
    4. '	o' → logprob: -13.750127792358398
    5. '
' → logprob: -15.375127792358398
    6. ' ' → logprob: -15.500127792358398
    7. '    
' → logprob: -17.0001277923584
    8. ',o' → logprob: -17.1251277923584
    9. '  ' → logprob: -17.8751277923584
    10. ',' → logprob: -18.0001277923584

Token 521: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.7697225252486533e-06
    2. '1' → logprob: -12.500003814697266
    3. '=' → logprob: -16.750003814697266
    4. 'o' → logprob: -18.875003814697266
    5. '3' → logprob: -19.500003814697266
    6. '```' → logprob: -19.500003814697266
    7. '
' → logprob: -20.125003814697266
    8. '0' → logprob: -20.375003814697266
    9. '_' → logprob: -20.625003814697266
    10. ' ' → logprob: -20.750003814697266

Token 522: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023245595395565033
    2. '=' → logprob: -3.7732455730438232
    3. ' ' → logprob: -17.648244857788086
    4. '=o' → logprob: -17.648244857788086
    5. ')' → logprob: -18.023244857788086
    6. ' =
' → logprob: -18.148244857788086
    7. '=p' → logprob: -18.648244857788086
    8. ' =(' → logprob: -19.148244857788086
    9. ' =)' → logprob: -19.398244857788086
    10. ',' → logprob: -19.523244857788086

Token 523: ' orientation' (ID: 29546)
  Prédit: 'orientation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orientation' → logprob: -0.0002615742268972099
    2. ' orientation' → logprob: -8.250261306762695
    3. '.orientation' → logprob: -15.250261306762695
    4. '_orientation' → logprob: -17.500261306762695
    5. 'intersection' → logprob: -18.125261306762695
    6. 'or' → logprob: -18.875261306762695
    7. '<|end|>' → logprob: -19.750261306762695
    8. 'orient' → logprob: -20.250261306762695
    9. '(' → logprob: -20.375261306762695
    10. ' ' → logprob: -20.500261306762695

Token 524: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0031865055207163095
    2. '(q' → logprob: -5.7531867027282715
    3. '(' → logprob: -12.378186225891113
    4. 'p' → logprob: -12.378186225891113
    5. 'q' → logprob: -15.253186225891113
    6. ' (' → logprob: -16.12818717956543
    7. '<p' → logprob: -18.25318717956543
    8. '```' → logprob: -20.50318717956543
    9. '\(' → logprob: -20.87818717956543
    10. '(
' → logprob: -21.00318717956543

Token 525: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6326305270195007
    2. '2' → logprob: -0.7576305270195007
    3. 'p' → logprob: -10.632630348205566
    4. 's' → logprob: -13.382630348205566
    5. '(p' → logprob: -13.507630348205566
    6. '[p' → logprob: -13.757630348205566
    7. '[' → logprob: -13.945130348205566
    8. '```' → logprob: -14.695130348205566
    9. '<p' → logprob: -15.695130348205566
    10. '3' → logprob: -15.820130348205566

Token 526: ',q' (ID: 86188)
  Prédit: ',q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',q' → logprob: -0.009510626085102558
    2. ',' → logprob: -5.009510517120361
    3. 'q' → logprob: -5.884510517120361
    4. ' ,' → logprob: -12.00951099395752
    5. ',p' → logprob: -13.13451099395752
    6. ',
' → logprob: -14.75951099395752
    7. ' q' → logprob: -15.00951099395752
    8. '
' → logprob: -16.634510040283203
    9. '_,' → logprob: -16.634510040283203
    10. '	q' → logprob: -17.134510040283203

Token 527: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. 'q' → logprob: -11.37501335144043
    3. '2' → logprob: -13.62501335144043
    4. '<|end|>' → logprob: -15.87501335144043
    5. '```' → logprob: -15.87501335144043
    6. 's' → logprob: -17.00001335144043
    7. 'Q' → logprob: -17.12501335144043
    8. ' q' → logprob: -18.00001335144043
    9. '[' → logprob: -18.00001335144043
    10. '#' → logprob: -18.37501335144043

Token 528: ',q' (ID: 86188)
  Prédit: ',p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.008446257561445236
    2. 'p' → logprob: -5.258446216583252
    3. ',' → logprob: -6.133446216583252
    4. ',q' → logprob: -6.883446216583252
    5. '(p' → logprob: -12.00844669342041
    6. 'q' → logprob: -12.63344669342041
    7. ' ,' → logprob: -12.75844669342041
    8. ',
' → logprob: -14.88344669342041
    9. ',r' → logprob: -15.13344669342041
    10. '<p' → logprob: -15.88344669342041

Token 529: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '```' → logprob: -17.25
    3. 'p' → logprob: -17.375
    4. '₂' → logprob: -19.125
    5. '۲' → logprob: -19.1875
    6. '1' → logprob: -19.5625
    7. ' ' → logprob: -20.1875
    8. '২' → logprob: -20.3125
    9. '
' → logprob: -20.625
    10. 'return' → logprob: -20.625

Token 530: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01820613071322441
    2. ')
' → logprob: -4.0182061195373535
    3. ')p' → logprob: -10.268206596374512
    4. 'p' → logprob: -11.393206596374512
    5. ',' → logprob: -12.768206596374512
    6. ')
' → logprob: -13.018206596374512
    7. '   ' → logprob: -13.518206596374512
    8. ')

' → logprob: -13.643206596374512
    9. ',p' → logprob: -13.893206596374512
    10. '),' → logprob: -14.518206596374512

Token 531: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1410990208387375
    2. 'o' → logprob: -2.641098976135254
    3. ' o' → logprob: -3.016098976135254
    4. '	o' → logprob: -4.766098976135254
    5. '
' → logprob: -7.141098976135254
    6. '    
' → logprob: -7.891098976135254
    7. '<|end|>' → logprob: -7.891098976135254
    8. ',o' → logprob: -8.016098976135254
    9. '```' → logprob: -8.266098976135254
    10. ' ' → logprob: -8.391098976135254

Token 532: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' (adapté à ' o') → logprob: -0.0019330393988639116
    2. ' o' → logprob: -6.2519330978393555
    3. '   ' → logprob: -12.626933097839355
    4. '	o' → logprob: -14.001933097839355
    5. ' ' → logprob: -15.626933097839355
    6. '3' → logprob: -16.62693214416504
    7. '_o' → logprob: -17.37693214416504
    8. '```' → logprob: -17.87693214416504
    9. 'if' → logprob: -18.25193214416504
    10. '  ' → logprob: -18.50193214416504

Token 533: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.01114166434854269
    2. '1' → logprob: -4.511141777038574
    3. '2' → logprob: -9.636141777038574
    4. '=' → logprob: -10.511141777038574
    5. '```' → logprob: -14.136141777038574
    6. ' ' → logprob: -15.761141777038574
    7. ' =' → logprob: -15.886141777038574
    8. 'o' → logprob: -16.386140823364258
    9. 'def' → logprob: -16.636140823364258
    10. '[' → logprob: -17.386140823364258

Token 534: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192907452583313
    2. '=' → logprob: -1.5019290447235107
    3. ' ' → logprob: -19.876928329467773
    4. ' =
' → logprob: -20.126928329467773
    5. ')' → logprob: -20.376928329467773
    6. '   ' → logprob: -20.501928329467773
    7. '=
' → logprob: -20.876928329467773
    8. '＝' → logprob: -21.126928329467773
    9. '=o' → logprob: -21.251928329467773
    10. ' =)' → logprob: -21.376928329467773

Token 535: ' orientation' (ID: 29546)
  Prédit: 'orientation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orientation' → logprob: -9.65101717156358e-05
    2. ' orientation' → logprob: -9.250096321105957
    3. 'intersection' → logprob: -14.875096321105957
    4. '.orientation' → logprob: -17.250097274780273
    5. '_orientation' → logprob: -18.875097274780273
    6. '(p' → logprob: -19.000097274780273
    7. 'inter' → logprob: -19.375097274780273
    8. '(' → logprob: -19.375097274780273
    9. 'orient' → logprob: -19.875097274780273
    10. 'p' → logprob: -20.625097274780273

Token 536: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.173704271830502e-06
    2. 'p' → logprob: -12.75000286102295
    3. '(' → logprob: -15.50000286102295
    4. ' (' → logprob: -18.375003814697266
    5. '=' → logprob: -18.625003814697266
    6. 'def' → logprob: -18.625003814697266
    7. '```' → logprob: -18.625003814697266
    8. '=p' → logprob: -18.875003814697266
    9. 's' → logprob: -19.125003814697266
    10. '[p' → logprob: -19.375003814697266

Token 537: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. 'p' → logprob: -15.125
    3. '(p' → logprob: -16.0
    4. '[' → logprob: -17.875
    5. '[p' → logprob: -18.375
    6. '1' → logprob: -18.75
    7. '```' → logprob: -19.875
    8. 'def' → logprob: -20.125
    9. '<p' → logprob: -20.375
    10. '3' → logprob: -20.375

Token 538: ',q' (ID: 86188)
  Prédit: ',q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',q' → logprob: -0.0022966822143644094
    2. ',p' → logprob: -6.252296447753906
    3. ',' → logprob: -8.127296447753906
    4. 'q' → logprob: -9.627296447753906
    5. 'p' → logprob: -12.252296447753906
    6. ' ,' → logprob: -13.252296447753906
    7. ',s' → logprob: -17.127296447753906
    8. 's' → logprob: -17.127296447753906
    9. '[q' → logprob: -17.127296447753906
    10. '[' → logprob: -17.127296447753906

Token 539: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012844942102674395
    2. 'p' → logprob: -9.375128746032715
    3. '[' → logprob: -10.125128746032715
    4. '0' → logprob: -13.750128746032715
    5. '1' → logprob: -14.000128746032715
    6. '```' → logprob: -14.750128746032715
    7. '[p' → logprob: -15.125128746032715
    8. 's' → logprob: -15.625128746032715
    9. ',p' → logprob: -16.2501277923584
    10. ',' → logprob: -16.3751277923584

Token 540: ',p' (ID: 14835)
  Prédit: ',p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.011668718419969082
    2. 'p' → logprob: -4.511668682098389
    3. ',' → logprob: -7.386668682098389
    4. ',
' → logprob: -14.761669158935547
    5. ' ,' → logprob: -14.886669158935547
    6. ',q' → logprob: -15.761669158935547
    7. '(p' → logprob: -16.011669158935547
    8. '<p' → logprob: -16.136669158935547
    9. '[p' → logprob: -17.386669158935547
    10. ' p' → logprob: -17.386669158935547

Token 541: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.690834273584187e-05
    2. '2' → logprob: -10.50003719329834
    3. '```' → logprob: -12.75003719329834
    4. '3' → logprob: -12.87503719329834
    5. '[' → logprob: -12.87503719329834
    6. '0' → logprob: -14.50003719329834
    7. 'p' → logprob: -14.75003719329834
    8. '5' → logprob: -16.750036239624023
    9. '``' → logprob: -17.000036239624023
    10. '#' → logprob: -17.625036239624023

Token 542: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931942105293274
    2. ')
' → logprob: -0.6931942105293274
    3. '   ' → logprob: -10.318194389343262
    4. ')
' → logprob: -11.318194389343262
    5. ' )
' → logprob: -14.068194389343262
    6. ')

' → logprob: -14.693194389343262
    7. ')o' → logprob: -15.318194389343262
    8. ' )' → logprob: -15.443194389343262
    9. ')p' → logprob: -16.318193435668945
    10. ' ' → logprob: -16.943193435668945

Token 543: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06982015073299408
    2. ' o' → logprob: -3.6948201656341553
    3. '	o' → logprob: -3.8198201656341553
    4. 'o' → logprob: -4.319819927215576
    5. '<|end|>' → logprob: -5.444819927215576
    6. ',o' → logprob: -6.694819927215576
    7. '```' → logprob: -7.944819927215576
    8. ' ' → logprob: -8.319820404052734
    9. '    
' → logprob: -8.569820404052734
    10. '
' → logprob: -8.819820404052734

Token 544: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' (adapté à ' o') → logprob: -0.314373642206192
    2. ' o' → logprob: -1.3143736124038696
    3. '   ' → logprob: -6.81437349319458
    4. '	o' → logprob: -11.314373970031738
    5. ' ' → logprob: -14.564373970031738
    6. '```' → logprob: -15.189373970031738
    7. '  ' → logprob: -16.314373016357422
    8. '{o' → logprob: -16.439373016357422
    9. ',o' → logprob: -16.439373016357422
    10. '_o' → logprob: -16.439373016357422

Token 545: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.07888978719711304
    2. '3' → logprob: -2.578889846801758
    3. 'o' → logprob: -16.828889846801758
    4. '=' → logprob: -18.953889846801758
    5. '```' → logprob: -19.578889846801758
    6. '2' → logprob: -20.078889846801758
    7. '34' → logprob: -20.328889846801758
    8. 's' → logprob: -20.328889846801758
    9. '[' → logprob: -20.578889846801758
    10. '
' → logprob: -20.953889846801758

Token 546: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740876853466034
    2. '=' → logprob: -0.9740877151489258
    3. '=p' → logprob: -11.974087715148926
    4. '=q' → logprob: -13.599087715148926
    5. '<|end|>' → logprob: -13.849087715148926
    6. ')' → logprob: -14.849087715148926
    7. '(p' → logprob: -15.099087715148926
    8. '```' → logprob: -15.099087715148926
    9. '   ' → logprob: -15.349087715148926
    10. '(' → logprob: -15.974087715148926

Token 547: ' orientation' (ID: 29546)
  Prédit: 'orientation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orientation' → logprob: -0.004484477452933788
    2. ' orientation' → logprob: -5.5044846534729
    3. 'p' → logprob: -8.504484176635742
    4. '(p' → logprob: -8.629484176635742
    5. 'inter' → logprob: -11.254484176635742
    6. ' p' → logprob: -12.254484176635742
    7. 'intersection' → logprob: -13.004484176635742
    8. '.orientation' → logprob: -13.379484176635742
    9. '(' → logprob: -13.629484176635742
    10. '_orientation' → logprob: -14.379484176635742

Token 548: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.8206473871250637e-05
    2. 'p' → logprob: -10.500028610229492
    3. '(' → logprob: -15.125028610229492
    4. ' (' → logprob: -16.500028610229492
    5. '[p' → logprob: -16.625028610229492
    6. '<|end|>' → logprob: -16.625028610229492
    7. '```' → logprob: -17.375028610229492
    8. '<p' → logprob: -17.625028610229492
    9. '(q' → logprob: -18.125028610229492
    10. '(
' → logprob: -18.625028610229492

Token 549: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.650518920039758e-06
    2. 'p' → logprob: -12.750003814697266
    3. '[' → logprob: -15.125003814697266
    4. '(p' → logprob: -16.125003814697266
    5. '[p' → logprob: -16.250003814697266
    6. '<p' → logprob: -17.312503814697266
    7. '₂' → logprob: -17.312503814697266
    8. '```' → logprob: -17.875003814697266
    9. ' ' → logprob: -18.000003814697266
    10. '۲' → logprob: -18.000003814697266

Token 550: ',q' (ID: 86188)
  Prédit: ',q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',q' → logprob: -0.0001129602751461789
    2. ',' → logprob: -9.250112533569336
    3. 'q' → logprob: -11.250112533569336
    4. ' ,' → logprob: -13.125112533569336
    5. '[q' → logprob: -13.750112533569336
    6. ',
' → logprob: -15.000112533569336
    7. '[' → logprob: -15.500112533569336
    8. ',p' → logprob: -15.875112533569336
    9. '```' → logprob: -17.625112533569336
    10. '(q' → logprob: -17.750112533569336

Token 551: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006725437473505735
    2. 'q' → logprob: -5.006725311279297
    3. '[' → logprob: -11.756725311279297
    4. '[q' → logprob: -13.881725311279297
    5. 'p' → logprob: -14.631725311279297
    6. ',q' → logprob: -16.006725311279297
    7. ' q' → logprob: -16.131725311279297
    8. '```' → logprob: -16.131725311279297
    9. '₂' → logprob: -16.256725311279297
    10. 'qo' → logprob: -17.006725311279297

Token 552: ',q' (ID: 86188)
  Prédit: ',p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.12738893926143646
    2. 'p' → logprob: -2.1273889541625977
    3. ',' → logprob: -7.752388954162598
    4. ',q' → logprob: -10.627388954162598
    5. ',
' → logprob: -12.752388954162598
    6. ' ,' → logprob: -13.252388954162598
    7. 'q' → logprob: -14.127388954162598
    8. '<p' → logprob: -14.377388954162598
    9. '	p' → logprob: -15.252388954162598
    10. '
' → logprob: -15.252388954162598

Token 553: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. '2' → logprob: -11.000021934509277
    3. 'p' → logprob: -12.750021934509277
    4. '4' → logprob: -13.875021934509277
    5. '[' → logprob: -14.500021934509277
    6. '```' → logprob: -14.500021934509277
    7. '[p' → logprob: -16.37502098083496
    8. '
' → logprob: -17.12502098083496
    9. '5' → logprob: -17.62502098083496
    10. '7' → logprob: -18.00002098083496

Token 554: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015164113137871027
    2. ')
' → logprob: -6.501516342163086
    3. '   ' → logprob: -11.751516342163086
    4. ' )' → logprob: -12.126516342163086
    5. ')

' → logprob: -15.001516342163086
    6. ')
' → logprob: -15.376516342163086
    7. ')return' → logprob: -16.626516342163086
    8. ' )
' → logprob: -16.751516342163086
    9. ')`' → logprob: -18.251516342163086
    10. '),' → logprob: -18.376516342163086

Token 555: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005341081880033016
    2. ' if' → logprob: -5.880341053009033
    3. '    
' → logprob: -7.005341053009033
    4. '
' → logprob: -7.130341053009033
    5. 'if' → logprob: -7.505341053009033
    6. '<|end|>' → logprob: -9.380341529846191
    7. '	if' → logprob: -9.505341529846191
    8. '  
' → logprob: -10.380341529846191
    9. '```' → logprob: -10.380341529846191
    10. ' 
' → logprob: -11.005341529846191

Token 556: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.31451258063316345
    2. ' if' → logprob: -1.3145126104354858
    3. '   ' → logprob: -6.689512729644775
    4. '	if' → logprob: -12.939512252807617
    5. 'return' → logprob: -13.814512252807617
    6. '```' → logprob: -14.189512252807617
    7. '    
' → logprob: -14.439512252807617
    8. '
' → logprob: -14.689512252807617
    9. ' ' → logprob: -15.064512252807617
    10. ' return' → logprob: -15.439512252807617

Token 557: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.011951940134167671
    2. '(o' → logprob: -4.511951923370361
    3. ' o' → logprob: -7.011951923370361
    4. ' (' → logprob: -13.76195240020752
    5. '{o' → logprob: -14.13695240020752
    6. '	o' → logprob: -14.38695240020752
    7. '[o' → logprob: -16.136951446533203
    8. '(' → logprob: -16.886951446533203
    9. '
' → logprob: -17.011951446533203
    10. '   ' → logprob: -17.636951446533203

Token 558: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. 'o' → logprob: -16.0
    3. '```' → logprob: -17.375
    4. 's' → logprob: -17.5
    5. 'def' → logprob: -17.5
    6. '
' → logprob: -17.875
    7. '   ' → logprob: -18.75
    8. 'r' → logprob: -19.0
    9. '<|end|>' → logprob: -19.25
    10. 'e' → logprob: -19.375

Token 559: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.04309875890612602
    2. ' !=' → logprob: -3.1680986881256104
    3. '==' → logprob: -9.293098449707031
    4. '```' → logprob: -12.918098449707031
    5. ')!=' → logprob: -13.418098449707031
    6. '()!=' → logprob: -13.793098449707031
    7. '0' → logprob: -14.168098449707031
    8. ' ==' → logprob: -14.418098449707031
    9. 'neq' → logprob: -14.793098449707031
    10. '1' → logprob: -15.418098449707031

Token 560: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0010338802821934223
    2. '0' → logprob: -6.876033782958984
    3. ' o' → logprob: -14.626033782958984
    4. '```' → logprob: -15.501033782958984
    5. '	o' → logprob: -15.626033782958984
    6. '
' → logprob: -15.751033782958984
    7. ''o' → logprob: -17.251033782958984
    8. '[o' → logprob: -17.376033782958984
    9. '

' → logprob: -17.501033782958984
    10. '$o' → logprob: -18.001033782958984

Token 561: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08314364403486252
    2. '1' → logprob: -2.958143711090088
    3. '0' → logprob: -3.583143711090088
    4. '```' → logprob: -10.45814323425293
    5. 'o' → logprob: -10.83314323425293
    6. ' ' → logprob: -11.08314323425293
    7. '3' → logprob: -11.70814323425293
    8. '   ' → logprob: -13.58314323425293
    9. 'and' → logprob: -14.08314323425293
    10. '
' → logprob: -14.20814323425293

Token 562: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25192973017692566
    2. 'and' → logprob: -1.501929759979248
    3. ' ' → logprob: -15.00192928314209
    4. '	and' → logprob: -16.001930236816406
    5. '0' → logprob: -16.126930236816406
    6. '   ' → logprob: -16.626930236816406
    7. '1' → logprob: -17.001930236816406
    8. ' ' → logprob: -18.001930236816406
    9. '    ' → logprob: -18.626930236816406
    10. '```' → logprob: -18.876930236816406

Token 563: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -3.5597102396423e-05
    2. ' o' → logprob: -10.250035285949707
    3. '	o' → logprob: -16.500036239624023
    4. '   ' → logprob: -17.000036239624023
    5. '<|end|>' → logprob: -18.375036239624023
    6. ' ' → logprob: -18.750036239624023
    7. '  ' → logprob: -19.250036239624023
    8. '(o' → logprob: -19.875036239624023
    9. '_o' → logprob: -20.000036239624023
    10. '{o' → logprob: -20.125036239624023

Token 564: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.625
    3. '```' → logprob: -17.125
    4. 'o' → logprob: -17.75
    5. '۳' → logprob: -18.375
    6. '``' → logprob: -19.75
    7. '৩' → logprob: -20.375
    8. '３' → logprob: -20.375
    9. ' ' → logprob: -20.875
    10. '!=' → logprob: -21.0

Token 565: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0005524366861209273
    2. ' !=' → logprob: -7.750552654266357
    3. '!=-' → logprob: -10.1255521774292
    4. '()!=' → logprob: -10.5005521774292
    5. '<|end|>' → logprob: -10.5005521774292
    6. ')!=' → logprob: -11.6255521774292
    7. ']!=' → logprob: -11.8755521774292
    8. '!=(' → logprob: -12.0005521774292
    9. '!==' → logprob: -13.0005521774292
    10. '!="' → logprob: -14.2505521774292

Token 566: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -3.128163257315464e-07
    2. ' o' → logprob: -15.375
    3. '	o' → logprob: -17.5
    4. '<|end|>' → logprob: -18.125
    5. '{o' → logprob: -19.5
    6. ' ' → logprob: -19.625
    7. '   ' → logprob: -20.5
    8. ''o' → logprob: -20.875
    9. '_o' → logprob: -21.0
    10. ')o' → logprob: -21.5

Token 567: '4' (ID: 19)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.1637164789135568e-05
    2. '4' → logprob: -11.375011444091797
    3. 'o' → logprob: -16.875011444091797
    4. '۳' → logprob: -17.125011444091797
    5. ' ' → logprob: -17.500011444091797
    6. '<|end|>' → logprob: -17.750011444091797
    7. '৩' → logprob: -18.000011444091797
    8. '३' → logprob: -19.125011444091797
    9. 's' → logprob: -19.125011444091797
    10. '```' → logprob: -19.250011444091797

Token 568: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011771234683692455
    2. ':
' → logprob: -4.511771202087402
    3. ':return' → logprob: -7.261771202087402
    4. '   ' → logprob: -11.636771202087402
    5. ' :' → logprob: -11.761771202087402
    6. ' :
' → logprob: -13.511771202087402
    7. '):' → logprob: -13.761771202087402
    8. ':
' → logprob: -14.511771202087402
    9. ' return' → logprob: -14.761771202087402
    10. ' and' → logprob: -15.011771202087402

Token 569: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06397397816181183
    2. '   ' → logprob: -3.063973903656006
    3. ':
' → logprob: -4.563973903656006
    4. ':' → logprob: -5.813973903656006
    5. ':return' → logprob: -6.938973903656006
    6. ' return' → logprob: -7.188973903656006
    7. 'return' → logprob: -10.438974380493164
    8. '	return' → logprob: -10.563974380493164
    9. '
' → logprob: -10.938974380493164
    10. '	' → logprob: -11.563974380493164

Token 570: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.43015292286872864
    2. ' return' → logprob: -1.4301528930664062
    3. '       ' → logprob: -2.6801528930664062
    4. '   ' → logprob: -3.1801528930664062
    5. '	return' → logprob: -8.805152893066406
    6. '
' → logprob: -10.805152893066406
    7. ':return' → logprob: -12.055152893066406
    8. '           ' → logprob: -12.680152893066406
    9. ' ' → logprob: -12.805152893066406
    10. '    ' → logprob: -13.680152893066406

Token 571: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.005233763717114925
    2. ' True' → logprob: -5.2552337646484375
    3. '(True' → logprob: -21.380233764648438
    4. 'true' → logprob: -23.505233764648438
    5. '=True' → logprob: -24.005233764648438
    6. '1' → logprob: -25.130233764648438
    7. '   ' → logprob: -25.755233764648438
    8. 'False' → logprob: -25.755233764648438
    9. 'TRUE' → logprob: -26.880233764648438
    10. '
' → logprob: -28.380233764648438

Token 572: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00036156410351395607
    2. '    
' → logprob: -8.000361442565918
    3. '
' → logprob: -10.750361442565918
    4. '  
' → logprob: -13.375361442565918
    5. '<|end|>' → logprob: -13.500361442565918
    6. '   
' → logprob: -14.500361442565918
    7. '        
' → logprob: -15.250361442565918
    8. '       ' → logprob: -15.625361442565918
    9. 'elif' → logprob: -15.875361442565918
    10. ' 
' → logprob: -16.375362396240234

Token 573: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.723973582556937e-05
    2. '    
' → logprob: -11.500017166137695
    3. '
' → logprob: -12.500017166137695
    4. '```' → logprob: -13.250017166137695
    5. ' if' → logprob: -14.250017166137695
    6. 'if' → logprob: -14.750017166137695
    7. 'def' → logprob: -15.750017166137695
    8. '       ' → logprob: -16.250017166137695
    9. '  
' → logprob: -16.250017166137695
    10. '<|end|>' → logprob: -17.000017166137695

Token 574: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15775585174560547
    2. 'if' (adapté à ' if') → logprob: -2.2827558517456055
    3. ' if' → logprob: -3.1577558517456055
    4. '    
' → logprob: -7.1577558517456055
    5. '
' → logprob: -7.4077558517456055
    6. '```' → logprob: -11.532755851745605
    7. '  
' → logprob: -12.157755851745605
    8. 'elif' → logprob: -12.407755851745605
    9. '	if' → logprob: -12.907755851745605
    10. 'return' → logprob: -13.032755851745605

Token 575: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.005571797955781221
    2. ' o' → logprob: -5.2555718421936035
    3. '(o' → logprob: -8.005571365356445
    4. 'on' → logprob: -13.380571365356445
    5. '	o' → logprob: -14.130571365356445
    6. '(' → logprob: -14.255571365356445
    7. ' (' → logprob: -14.505571365356445
    8. 'orientation' → logprob: -14.630571365356445
    9. '{o' → logprob: -15.505571365356445
    10. '   ' → logprob: -16.505571365356445

Token 576: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. '3' → logprob: -14.000001907348633
    3. '[' → logprob: -15.375001907348633
    4. '==' → logprob: -15.500001907348633
    5. '```' → logprob: -15.625001907348633
    6. 'def' → logprob: -16.750001907348633
    7. 'value' → logprob: -17.187501907348633
    8. 'p' → logprob: -17.250001907348633
    9. '<|end|>' → logprob: -17.250001907348633
    10. '``' → logprob: -17.250001907348633

Token 577: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.029759055003523827
    2. ' ==' → logprob: -3.529759168624878
    3. '0' → logprob: -12.029759407043457
    4. '==
' → logprob: -14.029759407043457
    5. '=' → logprob: -14.404759407043457
    6. '()==' → logprob: -15.154759407043457
    7. ')==' → logprob: -15.279759407043457
    8. '```' → logprob: -15.404759407043457
    9. ']==' → logprob: -15.654759407043457
    10. '===' → logprob: -15.654759407043457

Token 578: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '
' → logprob: -17.0
    3. 'o' → logprob: -17.375
    4. ' ' → logprob: -17.875
    5. 'p' → logprob: -18.75
    6. '=' → logprob: -18.75
    7. '```' → logprob: -19.0
    8. '

' → logprob: -19.25
    9. '۰' → logprob: -19.625
    10. '==' → logprob: -20.9375

Token 579: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.048589982092380524
    2. 'and' → logprob: -3.0485899448394775
    3. '   ' → logprob: -13.048589706420898
    4. '	and' → logprob: -14.798589706420898
    5. ' ' → logprob: -16.1735897064209
    6. ' и' → logprob: -17.9235897064209
    7. '    ' → logprob: -18.2985897064209
    8. '  ' → logprob: -19.0485897064209
    9. '```' → logprob: -19.4235897064209
    10. ',' → logprob: -19.6735897064209

Token 580: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.0015023599844425917
    2. ' on' → logprob: -6.501502513885498
    3. '	on' → logprob: -17.501502990722656
    4. '(on' → logprob: -17.751502990722656
    5. 'o' → logprob: -18.251502990722656
    6. 'ont' → logprob: -18.376502990722656
    7. ' ' → logprob: -18.876502990722656
    8. 'ond' → logprob: -19.126502990722656
    9. ' ' → logprob: -19.251502990722656
    10. ''on' → logprob: -19.376502990722656

Token 581: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.00029708960209973156
    2. 'segment' → logprob: -8.125297546386719
    3. 'Segment' → logprob: -14.625297546386719
    4. '(p' → logprob: -15.375297546386719
    5. '_segments' → logprob: -15.875297546386719
    6. ' segment' → logprob: -16.75029754638672
    7. '(segment' → logprob: -16.75029754638672
    8. 'on' → logprob: -17.12529754638672
    9. 'egment' → logprob: -17.87529754638672
    10. 'seg' → logprob: -17.87529754638672

Token 582: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.500003814697266
    3. ' (' → logprob: -17.125003814697266
    4. '(
' → logprob: -18.250003814697266
    5. 'p' → logprob: -18.500003814697266
    6. '(P' → logprob: -19.625003814697266
    7. '((' → logprob: -19.625003814697266
    8. '(q' → logprob: -20.250003814697266
    9. '[p' → logprob: -20.625003814697266
    10. '<p' → logprob: -20.750003814697266

Token 583: '1' (ID: 16)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.03038034401834011
    2. '1' → logprob: -3.5303802490234375
    3. '(' → logprob: -8.405380249023438
    4. '[p' → logprob: -9.030380249023438
    5. 'p' → logprob: -9.780380249023438
    6. ')' → logprob: -9.780380249023438
    7. ' (' → logprob: -10.155380249023438
    8. ')(' → logprob: -10.530380249023438
    9. ',p' → logprob: -10.780380249023438
    10. '[' → logprob: -10.905380249023438

Token 584: ',p' (ID: 14835)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.044388942420482635
    2. ',' → logprob: -3.794389009475708
    3. ',p' → logprob: -4.544388771057129
    4. 'p' → logprob: -4.669388771057129
    5. ' (' → logprob: -8.419388771057129
    6. '(' → logprob: -8.419388771057129
    7. ')' → logprob: -8.919388771057129
    8. ' ,' → logprob: -9.294388771057129
    9. ' p' → logprob: -9.544388771057129
    10. '
' → logprob: -9.919388771057129

Token 585: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. '<|end|>' → logprob: -15.500000953674316
    3. '[' → logprob: -16.75
    4. '```' → logprob: -17.125
    5. 'inter' → logprob: -17.375
    6. 'ython' → logprob: -17.375
    7. 'p' → logprob: -17.625
    8. 'r' → logprob: -18.125
    9. ' ' → logprob: -18.25
    10. '(' → logprob: -18.5625

Token 586: ',q' (ID: 86188)
  Prédit: ',q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',q' → logprob: -0.20193403959274292
    2. ',p' → logprob: -1.7019340991973877
    3. ',' → logprob: -7.701933860778809
    4. ',r' → logprob: -10.576933860778809
    5. 'p' → logprob: -10.826933860778809
    6. 'q' → logprob: -11.201933860778809
    7. ' ,' → logprob: -11.701933860778809
    8. ',s' → logprob: -15.326933860778809
    9. ',o' → logprob: -15.451933860778809
    10. ',on' → logprob: -15.451933860778809

Token 587: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01603800244629383
    2. '2' → logprob: -4.141037940979004
    3. 'p' → logprob: -13.578537940979004
    4. '```' → logprob: -14.391037940979004
    5. '[' → logprob: -14.516037940979004
    6. '
' → logprob: -15.578537940979004
    7. 'r' → logprob: -15.641037940979004
    8. ')' → logprob: -16.32853889465332
    9. '<p' → logprob: -16.57853889465332
    10. '   ' → logprob: -16.70353889465332

Token 588: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2525995373725891
    2. '):
' → logprob: -1.5025994777679443
    3. ')' → logprob: -7.377599716186523
    4. '):
' → logprob: -10.627599716186523
    5. '):

' → logprob: -11.627599716186523
    6. ' ):' → logprob: -11.752599716186523
    7. ' ):
' → logprob: -13.002599716186523
    8. ':' → logprob: -14.502599716186523
    9. '1' → logprob: -15.127599716186523
    10. '[' → logprob: -15.877599716186523

Token 589: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002978767966851592
    2. '   ' → logprob: -6.877978801727295
    3. ' return' → logprob: -7.002978801727295
    4. ':
' → logprob: -7.752978801727295
    5. ':' → logprob: -8.127978324890137
    6. ':return' → logprob: -8.252978324890137
    7. ' :
' → logprob: -11.627978324890137
    8. ' True' → logprob: -11.752978324890137
    9. 'return' → logprob: -12.127978324890137
    10. '	return' → logprob: -12.377978324890137

Token 590: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5762816071510315
    2. ' return' → logprob: -0.8262816071510315
    3. '       ' → logprob: -8.201281547546387
    4. '   ' → logprob: -10.201281547546387
    5. '           ' → logprob: -11.076281547546387
    6. 'True' → logprob: -12.201281547546387
    7. '	return' → logprob: -12.326281547546387
    8. ' True' → logprob: -13.076281547546387
    9. '
' → logprob: -13.326281547546387
    10. 'eturn' → logprob: -13.826281547546387

Token 591: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -9.088346359931165e-07
    2. ' True' → logprob: -14.000000953674316
    3. '(True' → logprob: -21.75
    4. 'False' → logprob: -22.375
    5. 'true' → logprob: -22.875
    6. '   ' → logprob: -23.25
    7. '=True' → logprob: -24.0
    8. '1' → logprob: -24.75
    9. '  ' → logprob: -26.25
    10. '
' → logprob: -26.625

Token 592: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.128163257315464e-07
    2. '<|end|>' → logprob: -16.625
    3. '
' → logprob: -17.625
    4. '    
' → logprob: -17.875
    5. '       ' → logprob: -18.125
    6. '0' → logprob: -18.25
    7. '  ' → logprob: -18.875
    8. '1' → logprob: -19.0
    9. ' if' → logprob: -19.125
    10. '```' → logprob: -19.375

Token 593: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.084206375409849e-05
    2. '    
' → logprob: -10.500041007995605
    3. ' if' → logprob: -12.250041007995605
    4. '  ' → logprob: -13.125041007995605
    5. '
' → logprob: -13.250041007995605
    6. '  
' → logprob: -13.250041007995605
    7. '   
' → logprob: -13.625041007995605
    8. ')' → logprob: -15.000041007995605
    9. '```' → logprob: -15.250041007995605
    10. ' ' → logprob: -15.500041007995605

Token 594: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17473165690898895
    2. ' if' → logprob: -2.424731731414795
    3. 'if' (adapté à ' if') → logprob: -2.674731731414795
    4. '0' → logprob: -6.549731731414795
    5. 'n' → logprob: -7.424731731414795
    6. 'False' → logprob: -8.424731254577637
    7. '
' → logprob: -8.674731254577637
    8. '  ' → logprob: -9.299731254577637
    9. '1' → logprob: -9.549731254577637
    10. '    
' → logprob: -9.799731254577637

Token 595: ' o' (ID: 293)
  Prédit: ' o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' o' → logprob: -0.5760043263435364
    2. 'o' → logprob: -0.8260043263435364
    3. '(o' → logprob: -10.201004028320312
    4. 'on' → logprob: -11.826004028320312
    5. '   ' → logprob: -12.201004028320312
    6. ' on' → logprob: -12.451004028320312
    7. '	o' → logprob: -12.576004028320312
    8. '{o' → logprob: -13.076004028320312
    9. '[o' → logprob: -13.826004028320312
    10. ' ' → logprob: -14.076004028320312

Token 596: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006608553230762482
    2. '2' → logprob: -5.381608486175537
    3. '3' → logprob: -6.256608486175537
    4. '4' → logprob: -10.006608963012695
    5. 's' → logprob: -12.444108963012695
    6. '==' → logprob: -12.444108963012695
    7. 'on' → logprob: -12.694108963012695
    8. '0' → logprob: -13.319108963012695
    9. 'is' → logprob: -13.881608963012695
    10. '```' → logprob: -13.944108963012695

Token 597: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0006271334132179618
    2. ' ==' → logprob: -7.375627040863037
    3. '==
' → logprob: -15.500627517700195
    4. '=' → logprob: -15.625627517700195
    5. '()==' → logprob: -16.500627517700195
    6. ']==' → logprob: -16.875627517700195
    7. ')==' → logprob: -17.500627517700195
    8. '[' → logprob: -18.125627517700195
    9. '===' → logprob: -18.500627517700195
    10. '```' → logprob: -18.625627517700195

Token 598: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '=' → logprob: -19.375003814697266
    4. '<|end|>' → logprob: -20.000003814697266
    5. '   ' → logprob: -21.125003814697266
    6. '۰' → logprob: -21.250003814697266
    7. '```' → logprob: -21.250003814697266
    8. '  ' → logprob: -21.625003814697266
    9. '(' → logprob: -21.750003814697266
    10. '﻿' → logprob: -22.500003814697266

Token 599: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12692810595035553
    2. 'and' → logprob: -2.1269280910491943
    3. ' ' → logprob: -17.751928329467773
    4. ' ' → logprob: -17.876928329467773
    5. '   ' → logprob: -19.001928329467773
    6. ',' → logprob: -19.376928329467773
    7. '	and' → logprob: -20.001928329467773
    8. ' и' → logprob: -20.876928329467773
    9. '<|end|>' → logprob: -21.376928329467773
    10. '```' → logprob: -21.501928329467773

Token 600: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.3132619559764862
    2. ' on' → logprob: -1.3132619857788086
    3. '	on' → logprob: -15.938261985778809
    4. 'ont' → logprob: -16.938261032104492
    5. '(on' → logprob: -17.438261032104492
    6. '```' → logprob: -18.563261032104492
    7. ' ' → logprob: -18.563261032104492
    8. '   ' → logprob: -18.813261032104492
    9. '.on' → logprob: -19.063261032104492
    10. ' ' → logprob: -19.313261032104492

Token 601: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.006728872191160917
    2. 'segment' → logprob: -5.006728649139404
    3. 'Segment' → logprob: -11.506729125976562
    4. '(p' → logprob: -13.506729125976562
    5. 'on' → logprob: -13.881729125976562
    6. 'p' → logprob: -14.506729125976562
    7. '_section' → logprob: -15.381729125976562
    8. '(segment' → logprob: -16.631729125976562
    9. ' segment' → logprob: -16.756729125976562
    10. '_segments' → logprob: -16.881729125976562

Token 602: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.625
    3. ' (' → logprob: -18.75
    4. 'p' → logprob: -19.125
    5. '(q' → logprob: -19.75
    6. '(
' → logprob: -21.375
    7. '(P' → logprob: -22.0
    8. '((' → logprob: -23.375
    9. '1' → logprob: -23.5
    10. '```' → logprob: -23.625

Token 603: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '(p' → logprob: -14.375000953674316
    3. '[' → logprob: -14.500000953674316
    4. '2' → logprob: -16.625001907348633
    5. 'p' → logprob: -17.625001907348633
    6. '```' → logprob: -17.625001907348633
    7. '[p' → logprob: -17.750001907348633
    8. '(' → logprob: -17.875001907348633
    9. '(q' → logprob: -18.375001907348633
    10. 'import' → logprob: -19.375001907348633

Token 604: ',q' (ID: 86188)
  Prédit: ',q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',q' → logprob: -0.0021420512348413467
    2. 'q' → logprob: -6.502141952514648
    3. ',' → logprob: -7.377141952514648
    4. ' ,' → logprob: -11.627141952514648
    5. ' q' → logprob: -13.127141952514648
    6. '[q' → logprob: -13.752141952514648
    7. ',
' → logprob: -14.002141952514648
    8. '(q' → logprob: -15.252141952514648
    9. ',p' → logprob: -15.627141952514648
    10. '[' → logprob: -15.627141952514648

Token 605: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -15.375000953674316
    3. '```' → logprob: -16.375
    4. '[' → logprob: -16.75
    5. '   ' → logprob: -17.5
    6. '₂' → logprob: -18.125
    7. '۲' → logprob: -18.4375
    8. '２' → logprob: -18.4375
    9. 'q' → logprob: -18.5
    10. '
' → logprob: -18.9375

Token 606: ',q' (ID: 86188)
  Prédit: ',q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',q' → logprob: -0.07082129269838333
    2. ',p' → logprob: -2.8208212852478027
    3. 'q' → logprob: -4.945821285247803
    4. 'p' → logprob: -7.070821285247803
    5. ',' → logprob: -7.070821285247803
    6. ' ,' → logprob: -14.820821762084961
    7. '```' → logprob: -14.945821762084961
    8. '[' → logprob: -15.070821762084961
    9. ',n' → logprob: -15.695821762084961
    10. ',r' → logprob: -15.695821762084961

Token 607: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '[' → logprob: -18.625
    3. '```' → logprob: -19.125
    4. '2' → logprob: -20.125
    5. ')' → logprob: -21.375
    6. '১' → logprob: -21.625
    7. '१' → logprob: -21.625
    8. '۱' → logprob: -21.75
    9. '１' → logprob: -22.25
    10. 'def' → logprob: -22.625

Token 608: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014172564260661602
    2. '):
' → logprob: -4.264172554016113
    3. ')' → logprob: -12.139172554016113
    4. ':' → logprob: -13.514172554016113
    5. '):

' → logprob: -13.889172554016113
    6. '):
' → logprob: -14.264172554016113
    7. '   ' → logprob: -15.014172554016113
    8. ' ):' → logprob: -15.014172554016113
    9. '       ' → logprob: -16.63917350769043
    10. ')：' → logprob: -17.88917350769043

Token 609: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006592331919819117
    2. ':' → logprob: -5.756592273712158
    3. '   ' → logprob: -6.131592273712158
    4. ':
' → logprob: -7.006592273712158
    5. ':return' → logprob: -9.131592750549316
    6. ' return' → logprob: -9.881592750549316
    7. '):
' → logprob: -10.006592750549316
    8. ')' → logprob: -10.631592750549316
    9. ' True' → logprob: -11.131592750549316
    10. '=True' → logprob: -11.256592750549316

Token 610: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3879917562007904
    2. 'return' (adapté à ' return') → logprob: -1.1379917860031128
    3. 'True' → logprob: -7.262991905212402
    4. '       ' → logprob: -8.262991905212402
    5. ' True' → logprob: -8.762991905212402
    6. 'eturn' → logprob: -13.387991905212402
    7. '   ' → logprob: -13.762991905212402
    8. '=True' → logprob: -14.262991905212402
    9. '```' → logprob: -14.387991905212402
    10. '           ' → logprob: -14.887991905212402

Token 611: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.7697225252486533e-06
    2. ' True' → logprob: -12.500003814697266
    3. '(True' → logprob: -20.625003814697266
    4. '=True' → logprob: -21.875003814697266
    5. 'False' → logprob: -22.875003814697266
    6. 'Yes' → logprob: -24.875003814697266
    7. '1' → logprob: -26.125003814697266
    8. 'true' → logprob: -26.625003814697266
    9. '.True' → logprob: -27.125003814697266
    10. '   ' → logprob: -27.500003814697266

Token 612: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.0391463193809614e-05
    2. '```' → logprob: -9.750060081481934
    3. '<|end|>' → logprob: -13.875060081481934
    4. '       ' → logprob: -15.000060081481934
    5. '0' → logprob: -16.50006103515625
    6. 'return' → logprob: -16.75006103515625
    7. 'True' → logprob: -16.87506103515625
    8. 'def' → logprob: -16.87506103515625
    9. '    
' → logprob: -17.00006103515625
    10. '``' → logprob: -17.00006103515625

Token 613: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18055622279644012
    2. '```' → logprob: -1.8055561780929565
    3. ' if' → logprob: -7.555556297302246
    4. '``' → logprob: -8.430556297302246
    5. 'if' → logprob: -10.805556297302246
    6. '<|end|>' → logprob: -11.180556297302246
    7. ' ' → logprob: -11.680556297302246
    8. '4' → logprob: -12.305556297302246
    9. '[' → logprob: -12.555556297302246
    10. '  ' → logprob: -12.805556297302246

Token 614: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.037128154188394547
    2. '   ' → logprob: -3.787128210067749
    3. ' if' → logprob: -4.28712797164917
    4. 'If' → logprob: -10.537128448486328
    5. '0' → logprob: -12.037128448486328
    6. '```' → logprob: -12.287128448486328
    7. 'False' → logprob: -13.412128448486328
    8. '	if' → logprob: -13.912128448486328
    9. ' ' → logprob: -14.287128448486328
    10. '1' → logprob: -14.537128448486328

Token 615: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.28117635846138
    2. ' o' → logprob: -1.4061763286590576
    3. '   ' → logprob: -11.156176567077637
    4. '	o' → logprob: -12.156176567077637
    5. '{o' → logprob: -13.031176567077637
    6. '(o' → logprob: -13.031176567077637
    7. '=o' → logprob: -14.656176567077637
    8. ' ' → logprob: -14.781176567077637
    9. '[o' → logprob: -14.906176567077637
    10. '  ' → logprob: -15.281176567077637

Token 616: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0009399275877512991
    2. '1' → logprob: -7.125939846038818
    3. '4' → logprob: -9.000940322875977
    4. '2' → logprob: -11.500940322875977
    5. '==' → logprob: -13.500940322875977
    6. '```' → logprob: -14.625940322875977
    7. '``' → logprob: -16.375940322875977
    8. '
' → logprob: -16.500940322875977
    9. '==
' → logprob: -17.875940322875977
    10. '=' → logprob: -18.000940322875977

Token 617: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -2.5822400857578032e-05
    2. ' ==' → logprob: -10.625025749206543
    3. '```' → logprob: -14.125025749206543
    4. '==
' → logprob: -14.500025749206543
    5. '()==' → logprob: -16.37502670288086
    6. '0' → logprob: -17.12502670288086
    7. '=' → logprob: -17.12502670288086
    8. ']==' → logprob: -17.50002670288086
    9. ')==' → logprob: -18.12502670288086
    10. '==-' → logprob: -19.00002670288086

Token 618: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. 'True' → logprob: -18.250001907348633
    4. '1' → logprob: -18.250001907348633
    5. 'p' → logprob: -18.250001907348633
    6. '```' → logprob: -18.500001907348633
    7. '(' → logprob: -18.625001907348633
    8. '2' → logprob: -18.937501907348633
    9. 'o' → logprob: -19.125001907348633
    10. '=' → logprob: -19.312501907348633

Token 619: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0067156096920371056
    2. 'and' → logprob: -5.006715774536133
    3. '```' → logprob: -15.381715774536133
    4. ' ' → logprob: -19.381715774536133
    5. ',' → logprob: -19.506715774536133
    6. ' и' → logprob: -19.631715774536133
    7. '<|end|>' → logprob: -19.631715774536133
    8. ' on' → logprob: -19.756715774536133
    9. ' ' → logprob: -19.756715774536133
    10. '``' → logprob: -20.131715774536133

Token 620: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.06196768581867218
    2. ' on' → logprob: -2.811967611312866
    3. '	on' → logprob: -17.686967849731445
    4. '(on' → logprob: -17.686967849731445
    5. 'ont' → logprob: -18.811967849731445
    6. '   ' → logprob: -19.061967849731445
    7. '.on' → logprob: -19.436967849731445
    8. '```' → logprob: -19.561967849731445
    9. ' ' → logprob: -20.561967849731445
    10. 'On' → logprob: -20.811967849731445

Token 621: '_segment' (ID: 71041)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.023323392495512962
    2. '_segment' → logprob: -3.7733232975006104
    3. 'on' → logprob: -9.648323059082031
    4. 'Segment' → logprob: -11.398323059082031
    5. ' segment' → logprob: -13.523323059082031
    6. '(segment' → logprob: -14.898323059082031
    7. '(p' → logprob: -15.648323059082031
    8. 'seg' → logprob: -15.773323059082031
    9. 'inter' → logprob: -16.89832305908203
    10. 'segments' → logprob: -17.14832305908203

Token 622: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.9361264946837764e-07
    2. 'p' → logprob: -16.25
    3. ' (' → logprob: -18.0
    4. '[p' → logprob: -20.0
    5. '(' → logprob: -20.125
    6. '```' → logprob: -20.375
    7. '(
' → logprob: -21.375
    8. '(P' → logprob: -22.125
    9. 'def' → logprob: -22.25
    10. '   ' → logprob: -22.625

Token 623: '2' (ID: 17)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.41638603806495667
    2. '2' → logprob: -1.1663860082626343
    3. 'p' → logprob: -3.541386127471924
    4. '[p' → logprob: -9.666385650634766
    5. ' p' → logprob: -11.041385650634766
    6. ')' → logprob: -12.166385650634766
    7. 'def' → logprob: -12.291385650634766
    8. '<p' → logprob: -12.541385650634766
    9. ' (' → logprob: -12.541385650634766
    10. '```' → logprob: -12.666385650634766

Token 624: ',p' (ID: 14835)
  Prédit: ',p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.0028337687253952026
    2. 'p' → logprob: -5.877833843231201
    3. ',' → logprob: -10.752833366394043
    4. '(p' → logprob: -12.502833366394043
    5. '[p' → logprob: -12.752833366394043
    6. '<p' → logprob: -15.002833366394043
    7. '[' → logprob: -16.25283432006836
    8. ' ,' → logprob: -16.62783432006836
    9. ',q' → logprob: -17.12783432006836
    10. '_,' → logprob: -17.12783432006836

Token 625: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. 'q' → logprob: -15.750000953674316
    3. '0' → logprob: -15.875000953674316
    4. '[' → logprob: -16.0
    5. 'p' → logprob: -16.75
    6. '```' → logprob: -16.875
    7. '[q' → logprob: -17.625
    8. ',q' → logprob: -18.0625
    9. 's' → logprob: -18.1875
    10. '[p' → logprob: -18.25

Token 626: ',q' (ID: 86188)
  Prédit: ',q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',q' → logprob: -0.00012654215970542282
    2. ',p' → logprob: -9.375126838684082
    3. 'q' → logprob: -10.625126838684082
    4. ',' → logprob: -11.000126838684082
    5. 'p' → logprob: -14.750126838684082
    6. ' ,' → logprob: -15.625126838684082
    7. ',r' → logprob: -17.500125885009766
    8. '[q' → logprob: -17.625125885009766
    9. ',s' → logprob: -18.250125885009766
    10. ',
' → logprob: -19.125125885009766

Token 627: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4121114822482923e-06
    2. '[' → logprob: -12.750003814697266
    3. '```' → logprob: -15.750003814697266
    4. 'q' → logprob: -16.375003814697266
    5. 'p' → logprob: -16.750003814697266
    6. 's' → logprob: -16.875003814697266
    7. '۲' → logprob: -17.937503814697266
    8. ' ' → logprob: -18.062503814697266
    9. '২' → logprob: -18.187503814697266
    10. '   ' → logprob: -18.437503814697266

Token 628: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0008523935684934258
    2. '):' → logprob: -7.125852584838867
    3. ',q' → logprob: -10.750852584838867
    4. ')' → logprob: -12.000852584838867
    5. '):

' → logprob: -12.000852584838867
    6. '):
' → logprob: -12.125852584838867
    7. ',' → logprob: -12.750852584838867
    8. 'q' → logprob: -13.250852584838867
    9. ' ):
' → logprob: -14.125852584838867
    10. '[q' → logprob: -14.375852584838867

Token 629: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6017605662345886
    2. 'True' → logprob: -1.3517606258392334
    3. ' True' → logprob: -2.2267606258392334
    4. '   ' → logprob: -2.4767606258392334
    5. 'return' → logprob: -7.226760387420654
    6. ' return' → logprob: -7.851760387420654
    7. '(True' → logprob: -8.476760864257812
    8. '=True' → logprob: -9.726760864257812
    9. ':
' → logprob: -10.226760864257812
    10. '```' → logprob: -10.851760864257812

Token 630: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7508893013000488
    2. 'True' → logprob: -1.5008893013000488
    3. 'return' (adapté à ' return') → logprob: -1.5008893013000488
    4. ' True' → logprob: -2.500889301300049
    5. '       ' → logprob: -8.75088882446289
    6. '=True' → logprob: -11.75088882446289
    7. 'eturn' → logprob: -12.12588882446289
    8. 'Yes' → logprob: -13.50088882446289
    9. '   ' → logprob: -13.62588882446289
    10. '(True' → logprob: -13.87588882446289

Token 631: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.7697225252486533e-06
    2. ' True' → logprob: -12.500003814697266
    3. '(True' → logprob: -20.750003814697266
    4. 'False' → logprob: -22.875003814697266
    5. '=True' → logprob: -23.375003814697266
    6. 'true' → logprob: -25.750003814697266
    7. '1' → logprob: -25.875003814697266
    8. 'Yes' → logprob: -26.500003814697266
    9. '_true' → logprob: -26.750003814697266
    10. 'T' → logprob: -27.375003814697266

Token 632: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017845372203737497
    2. '```' → logprob: -6.376784324645996
    3. '
' → logprob: -10.251784324645996
    4. ' if' → logprob: -10.876784324645996
    5. 'if' → logprob: -11.126784324645996
    6. '``' → logprob: -12.626784324645996
    7. '    
' → logprob: -13.001784324645996
    8. '  ' → logprob: -13.251784324645996
    9. '<|end|>' → logprob: -13.251784324645996
    10. ')' → logprob: -13.751784324645996

Token 633: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02829607203602791
    2. '```' → logprob: -4.278295993804932
    3. ' if' → logprob: -4.403295993804932
    4. 'if' → logprob: -6.403295993804932
    5. '``' → logprob: -9.15329647064209
    6. '4' → logprob: -11.27829647064209
    7. 'If' → logprob: -12.27829647064209
    8. ' ' → logprob: -12.65329647064209
    9. '0' → logprob: -12.90329647064209
    10. '       ' → logprob: -13.02829647064209

Token 634: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02061394974589348
    2. '   ' → logprob: -4.020614147186279
    3. ' if' → logprob: -6.020614147186279
    4. '```' → logprob: -10.770613670349121
    5. '4' → logprob: -12.770613670349121
    6. '0' → logprob: -13.270613670349121
    7. '``' → logprob: -13.520613670349121
    8. 'If' → logprob: -13.520613670349121
    9. ' ' → logprob: -13.895613670349121
    10. '1' → logprob: -14.645613670349121

Token 635: ' o' (ID: 293)
  Prédit: ' o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' o' → logprob: -0.4740934669971466
    2. 'o' → logprob: -0.9740934371948242
    3. '   ' → logprob: -11.849093437194824
    4. '	o' → logprob: -12.099093437194824
    5. '(o' → logprob: -13.224093437194824
    6. '{o' → logprob: -14.474093437194824
    7. '  ' → logprob: -14.849093437194824
    8. ' ' → logprob: -14.849093437194824
    9. '[o' → logprob: -14.974093437194824
    10. '    ' → logprob: -16.34909439086914

Token 636: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.07888989895582199
    2. '3' → logprob: -2.578889846801758
    3. '2' → logprob: -16.453889846801758
    4. 'o' → logprob: -18.703889846801758
    5. '(' → logprob: -18.953889846801758
    6. '1' → logprob: -19.203889846801758
    7. 'p' → logprob: -19.578889846801758
    8. '```' → logprob: -19.578889846801758
    9. 's' → logprob: -19.703889846801758
    10. '
' → logprob: -20.078889846801758

Token 637: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.2113979209971149e-05
    2. ' ==' → logprob: -11.375012397766113
    3. '==
' → logprob: -14.875012397766113
    4. '=' → logprob: -16.500011444091797
    5. '```' → logprob: -16.750011444091797
    6. ']==' → logprob: -17.625011444091797
    7. '()==' → logprob: -17.875011444091797
    8. '[' → logprob: -18.000011444091797
    9. '==-' → logprob: -18.250011444091797
    10. ')==' → logprob: -19.125011444091797

Token 638: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -18.125003814697266
    4. '=' → logprob: -18.500003814697266
    5. '==' → logprob: -19.125003814697266
    6. '```' → logprob: -19.187503814697266
    7. 'False' → logprob: -19.187503814697266
    8. '(' → logprob: -19.250003814697266
    9. 'o' → logprob: -19.375003814697266
    10. '۰' → logprob: -19.437503814697266

Token 639: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.004078401252627373
    2. 'and' → logprob: -5.504078388214111
    3. '```' → logprob: -18.629077911376953
    4. ' ' → logprob: -19.129077911376953
    5. '   ' → logprob: -19.504077911376953
    6. ' ' → logprob: -19.754077911376953
    7. '	and' → logprob: -20.504077911376953
    8. ' и' → logprob: -21.379077911376953
    9. 'a' → logprob: -22.004077911376953
    10. '<|end|>' → logprob: -22.129077911376953

Token 640: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.06196802109479904
    2. ' on' → logprob: -2.8119680881500244
    3. '   ' → logprob: -15.811967849731445
    4. '```' → logprob: -16.686967849731445
    5. 'ont' → logprob: -17.061967849731445
    6. '	on' → logprob: -17.561967849731445
    7. '(on' → logprob: -17.936967849731445
    8. '.on' → logprob: -19.186967849731445
    9. '``' → logprob: -19.436967849731445
    10. '
' → logprob: -19.436967849731445

Token 641: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.16497014462947845
    2. '(p' → logprob: -2.5399701595306396
    3. 'segment' → logprob: -3.2899701595306396
    4. 'Segment' → logprob: -3.7899701595306396
    5. 'on' → logprob: -4.5399699211120605
    6. '2' → logprob: -6.6649699211120605
    7. '(' → logprob: -7.2899699211120605
    8. '_segments' → logprob: -8.164970397949219
    9. '_seg' → logprob: -9.039970397949219
    10. 'seg' → logprob: -9.414970397949219

Token 642: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.696889623621246e-06
    2. 'p' → logprob: -13.12500286102295
    3. '(' → logprob: -14.62500286102295
    4. ' (' → logprob: -16.125001907348633
    5. '(
' → logprob: -16.750001907348633
    6. '2' → logprob: -17.625001907348633
    7. '   ' → logprob: -17.750001907348633
    8. '```' → logprob: -19.250001907348633
    9. 's' → logprob: -20.250001907348633
    10. '
' → logprob: -20.250001907348633

Token 643: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01622920110821724
    2. 'p' → logprob: -4.141229152679443
    3. '(p' → logprob: -8.641229629516602
    4. '   ' → logprob: -12.266229629516602
    5. ' p' → logprob: -13.016229629516602
    6. 'def' → logprob: -13.141229629516602
    7. '[' → logprob: -13.516229629516602
    8. 'r' → logprob: -13.766229629516602
    9. 'q' → logprob: -13.891229629516602
    10. 'return' → logprob: -13.891229629516602

Token 644: ',q' (ID: 86188)
  Prédit: ',q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',q' → logprob: -0.00073197390884161
    2. 'q' → logprob: -7.250731945037842
    3. ',' → logprob: -10.875732421875
    4. ',p' → logprob: -13.875732421875
    5. ' ,' → logprob: -14.000732421875
    6. '(q' → logprob: -14.875732421875
    7. '[q' → logprob: -14.875732421875
    8. '_,' → logprob: -15.375732421875
    9. '
' → logprob: -16.250732421875
    10. '```' → logprob: -16.625732421875

Token 645: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03368016332387924
    2. '2' → logprob: -3.4086802005767822
    3. '
' → logprob: -11.158679962158203
    4. '```' → logprob: -12.033679962158203
    5. '[q' → logprob: -13.033679962158203
    6. 's' → logprob: -13.033679962158203
    7. '4' → logprob: -13.158679962158203
    8. 'q' → logprob: -13.658679962158203
    9. '[p' → logprob: -13.658679962158203
    10. '   ' → logprob: -13.908679962158203

Token 646: ',q' (ID: 86188)
  Prédit: ',q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',q' → logprob: -0.0006390500930137932
    2. 'q' → logprob: -7.375638961791992
    3. ',' → logprob: -11.375638961791992
    4. '[q' → logprob: -14.250638961791992
    5. ',
' → logprob: -16.500638961791992
    6. ' ,' → logprob: -16.500638961791992
    7. '	q' → logprob: -16.625638961791992
    8. ' q' → logprob: -16.750638961791992
    9. '
' → logprob: -17.375638961791992
    10. '&q' → logprob: -17.500638961791992

Token 647: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. 'p' → logprob: -16.0
    3. '```' → logprob: -17.0
    4. 'q' → logprob: -17.375
    5. 'return' → logprob: -18.125
    6. '[' → logprob: -18.625
    7. '۲' → logprob: -18.75
    8. '₂' → logprob: -19.0
    9. 's' → logprob: -19.5
    10. '２' → logprob: -19.625

Token 648: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014195947907865047
    2. '):' → logprob: -4.264195919036865
    3. ')' → logprob: -10.514196395874023
    4. '):

' → logprob: -12.764196395874023
    5. '):
' → logprob: -14.139196395874023
    6. ' ):
' → logprob: -14.889196395874023
    7. ':
' → logprob: -15.139196395874023
    8. '```' → logprob: -15.389196395874023
    9. '   ' → logprob: -15.639196395874023
    10. ':' → logprob: -15.764196395874023

Token 649: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00040540905320085585
    2. ' return' → logprob: -7.875405311584473
    3. 'return' → logprob: -12.250405311584473
    4. '   ' → logprob: -12.375405311584473
    5. ' True' → logprob: -12.500405311584473
    6. ':
' → logprob: -12.625405311584473
    7. ':' → logprob: -12.750405311584473
    8. ':return' → logprob: -12.750405311584473
    9. '=True' → logprob: -13.625405311584473
    10. '           ' → logprob: -14.625405311584473

Token 650: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3137918710708618
    2. 'return' (adapté à ' return') → logprob: -1.3137918710708618
    3. '       ' → logprob: -7.563791751861572
    4. '   ' → logprob: -12.31379222869873
    5. 'True' → logprob: -12.31379222869873
    6. ' True' → logprob: -13.43879222869873
    7. '	return' → logprob: -15.06379222869873
    8. '           ' → logprob: -15.43879222869873
    9. ':return' → logprob: -16.938791275024414
    10. ' ' → logprob: -17.563791275024414

Token 651: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.5048530030981055e-06
    2. ' True' → logprob: -13.500001907348633
    3. 'False' → logprob: -21.875001907348633
    4. '(True' → logprob: -22.125001907348633
    5. '=True' → logprob: -24.500001907348633
    6. '   ' → logprob: -26.125001907348633
    7. 'true' → logprob: -26.625001907348633
    8. 'Yes' → logprob: -27.125001907348633
    9. '1' → logprob: -27.250001907348633
    10. '```' → logprob: -27.750001907348633

Token 652: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00045807508286088705
    2. '	return' → logprob: -8.625457763671875
    3. 'return' → logprob: -8.750457763671875
    4. ':return' → logprob: -10.125457763671875
    5. ' return' → logprob: -10.500457763671875
    6. '
' → logprob: -10.875457763671875
    7. '```' → logprob: -11.375457763671875
    8. '       ' → logprob: -12.125457763671875
    9. ':
' → logprob: -12.250457763671875
    10. '    
' → logprob: -12.375457763671875

Token 653: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.429896944202483e-05
    2. 'return' → logprob: -10.125043869018555
    3. ' return' → logprob: -13.375043869018555
    4. '	return' → logprob: -13.625043869018555
    5. '       ' → logprob: -14.625043869018555
    6. ':return' → logprob: -14.875043869018555
    7. '    
' → logprob: -15.125043869018555
    8. '```' → logprob: -15.250043869018555
    9. '   ' → logprob: -17.000043869018555
    10. '<|end|>' → logprob: -17.125043869018555

Token 654: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011330978944897652
    2. 'return' (adapté à ' return') → logprob: -4.511331081390381
    3. ' return' → logprob: -8.761330604553223
    4. '	return' → logprob: -9.386330604553223
    5. '    
' → logprob: -10.761330604553223
    6. '
' → logprob: -11.511330604553223
    7. '       ' → logprob: -12.261330604553223
    8. ':return' → logprob: -12.386330604553223
    9. '```' → logprob: -14.261330604553223
    10. '{return' → logprob: -14.636330604553223

Token 655: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.339278580620885e-06
    2. ' False' → logprob: -13.000001907348633
    3. '(False' → logprob: -21.625001907348633
    4. 'false' → logprob: -23.625001907348633
    5. '_false' → logprob: -24.250001907348633
    6. 'True' → logprob: -24.750001907348633
    7. '=False' → logprob: -25.250001907348633
    8. '0' → logprob: -27.375001907348633
    9. '.False' → logprob: -27.625001907348633
    10. 'FALSE' → logprob: -28.125001907348633

Token 656: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5128015279769897
    2. '<|end|>' → logprob: -1.1378015279769897
    3. ')' → logprob: -3.6378016471862793
    4. 'n' → logprob: -4.012801647186279
    5. 'points' → logprob: -4.387801647186279
    6. '
' → logprob: -5.012801647186279
    7. '```' → logprob: -6.012801647186279
    8. '(' → logprob: -6.137801647186279
    9. 'for' → logprob: -6.512801647186279
    10. '(points' → logprob: -6.512801647186279

Token 657: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5515639185905457
    2. 'N' → logprob: -1.5515639781951904
    3. 'def' → logprob: -1.5515639781951904
    4. '#' → logprob: -10.17656421661377
    5. 'for' → logprob: -11.17656421661377
    6. 'if' → logprob: -11.42656421661377
    7. 't' → logprob: -11.67656421661377
    8. '```' → logprob: -11.67656421661377
    9. 'data' → logprob: -11.92656421661377
    10. ' n' → logprob: -12.17656421661377

Token 658: ' reflect' (ID: 12140)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0444321483373642
    2. 'main' → logprob: -3.4194321632385254
    3. ' solve' → logprob: -4.794432163238525
    4. 'solve' → logprob: -6.544432163238525
    5. ' convex' → logprob: -7.544432163238525
    6. 'conv' → logprob: -9.669431686401367
    7. ' find' → logprob: -10.044431686401367
    8. ' is' → logprob: -10.044431686401367
    9. ' can' → logprob: -10.294431686401367
    10. ' count' → logprob: -10.419431686401367

Token 659: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -1.1108208894729614
    2. '(p' → logprob: -1.3608208894729614
    3. '(point' → logprob: -1.4858208894729614
    4. '(points' → logprob: -2.360820770263672
    5. '(' → logprob: -2.735820770263672
    6. '_points' → logprob: -3.735820770263672
    7. '(a' → logprob: -6.860820770263672
    8. '(poly' → logprob: -7.360820770263672
    9. '(Point' → logprob: -7.610820770263672
    10. '(x' → logprob: -7.610820770263672

Token 660: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00032354547875002027
    2. '(point' → logprob: -8.250323295593262
    3. '(P' → logprob: -10.500323295593262
    4. '(' → logprob: -11.250323295593262
    5. '(a' → logprob: -11.375323295593262
    6. ' (' → logprob: -12.125323295593262
    7. '((' → logprob: -13.125323295593262
    8. '(x' → logprob: -13.375323295593262
    9. '(px' → logprob: -14.750323295593262
    10. '(points' → logprob: -15.250323295593262

Token 661: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021367935463786125
    2. ',p' → logprob: -3.8963680267333984
    3. '(p' → logprob: -7.396368026733398
    4. ' ,' → logprob: -8.646368026733398
    5. ',(' → logprob: -11.896368026733398
    6. 'p' → logprob: -12.021368026733398
    7. '):' → logprob: -12.396368026733398
    8. ',q' → logprob: -12.771368026733398
    9. ',P' → logprob: -13.021368026733398
    10. ',
' → logprob: -13.021368026733398

Token 662: ' a' (ID: 261)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4969671964645386
    2. 'l' → logprob: -1.8719671964645386
    3. 'p' → logprob: -2.496967315673828
    4. 'a' → logprob: -2.871967315673828
    5. 'axis' → logprob: -3.121967315673828
    6. 'center' → logprob: -3.746967315673828
    7. 'L' → logprob: -4.746967315673828
    8. 'origin' → logprob: -5.246967315673828
    9. 'c' → logprob: -5.621967315673828
    10. 'm' → logprob: -5.621967315673828

Token 663: ',' (ID: 11)
  Prédit: ',b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.3900673985481262
    2. ',' → logprob: -1.1400673389434814
    3. ',p' → logprob: -6.0150675773620605
    4. 'b' → logprob: -8.140067100524902
    5. ',a' → logprob: -8.890067100524902
    6. ',B' → logprob: -9.140067100524902
    7. ',r' → logprob: -10.265067100524902
    8. ',c' → logprob: -10.265067100524902
    9. ' ,' → logprob: -10.390067100524902
    10. ',line' → logprob: -10.390067100524902

Token 664: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00013905855303164572
    2. 'p' → logprob: -9.000139236450195
    3. ' b' → logprob: -11.125139236450195
    4. 'a' → logprob: -14.750139236450195
    5. 'n' → logprob: -15.250139236450195
    6. 'm' → logprob: -16.500139236450195
    7. '<|end|>' → logprob: -16.625139236450195
    8. 'd' → logprob: -17.500139236450195
    9. 's' → logprob: -17.625139236450195
    10. 'l' → logprob: -17.875139236450195

Token 665: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.062011487782001495
    2. '):
' → logprob: -2.812011480331421
    3. '):
' → logprob: -10.18701171875
    4. ')' → logprob: -12.56201171875
    5. '):

' → logprob: -13.81201171875
    6. ',' → logprob: -13.81201171875
    7. ' ):' → logprob: -15.43701171875
    8. '   ' → logprob: -15.93701171875
    9. ':' → logprob: -16.06201171875
    10. ',p' → logprob: -16.43701171875

Token 666: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05730670318007469
    2. ' t' → logprob: -3.5573067665100098
    3. 'x' → logprob: -4.55730676651001
    4. ' x' → logprob: -5.30730676651001
    5. 'dx' → logprob: -5.55730676651001
    6. ' dx' → logprob: -5.68230676651001
    7. 't' → logprob: -5.80730676651001
    8. ' return' → logprob: -7.68230676651001
    9. ' d' → logprob: -8.932306289672852
    10. 'return' → logprob: -9.057306289672852

Token 667: ' #' (ID: 1069)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.5829761624336243
    2. 'dx' → logprob: -1.5829761028289795
    3. 'x' → logprob: -2.3329761028289795
    4. 'ax' → logprob: -3.0829761028289795
    5. 'd' → logprob: -3.4579761028289795
    6. 'a' → logprob: -3.7079761028289795
    7. '#' (adapté à ' #') → logprob: -4.207976341247559
    8. 'A' → logprob: -4.957976341247559
    9. 'px' → logprob: -4.957976341247559
    10. 'AP' → logprob: -5.332976341247559

Token 668: ' reflect' (ID: 12140)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.11608835309743881
    2. 'dx' → logprob: -3.116088390350342
    3. 'px' → logprob: -3.991088390350342
    4. 'ax' → logprob: -4.116088390350342
    5. 'x' → logprob: -4.616088390350342
    6. 'd' → logprob: -5.116088390350342
    7. '#' → logprob: -5.366088390350342
    8. 'a' → logprob: -5.491088390350342
    9. 'AP' → logprob: -5.991088390350342
    10. 'A' → logprob: -6.866088390350342

Token 669: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0759362056851387
    2. 'x' → logprob: -3.2009363174438477
    3. ' p' → logprob: -5.075936317443848
    4. '#' → logprob: -5.200936317443848
    5. '   ' → logprob: -5.450936317443848
    6. '(p' → logprob: -5.575936317443848
    7. '(' → logprob: -5.575936317443848
    8. '_point' → logprob: -6.200936317443848
    9. 'point' → logprob: -6.450936317443848
    10. 'px' → logprob: -7.700936317443848

Token 670: ' across' (ID: 5251)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3631049394607544
    2. '=' → logprob: -1.8631049394607544
    3. '   ' → logprob: -1.9881049394607544
    4. 'def' → logprob: -2.238104820251465
    5. ' =' → logprob: -2.488104820251465
    6. '[' → logprob: -2.738104820251465
    7. 'p' → logprob: -3.113104820251465
    8. 'a' → logprob: -3.738104820251465
    9. 's' → logprob: -4.113104820251465
    10. ',' → logprob: -4.113104820251465

Token 671: ' line' (ID: 2543)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.010926486924290657
    2. '(a' → logprob: -4.885926723480225
    3. 'b' → logprob: -6.760926723480225
    4. ' a' → logprob: -7.135926723480225
    5. '(' → logprob: -7.510926723480225
    6. 'the' → logprob: -8.260926246643066
    7. 'line' → logprob: -8.385926246643066
    8. 'p' → logprob: -9.260926246643066
    9. ' (' → logprob: -9.385926246643066
    10. '((' → logprob: -9.885926246643066

Token 672: ' through' (ID: 1819)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6809667348861694
    2. 'ab' → logprob: -1.4309667348861694
    3. '(a' → logprob: -1.5559667348861694
    4. ' a' → logprob: -4.180966854095459
    5. '(p' → logprob: -4.305966854095459
    6. 'def' → logprob: -5.055966854095459
    7. 'p' → logprob: -6.555966854095459
    8. ' ab' → logprob: -6.555966854095459
    9. ' p' → logprob: -6.680966854095459
    10. '(ab' → logprob: -6.805966854095459

Token 673: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.874882430769503e-05
    2. ' a' → logprob: -9.500079154968262
    3. 'points' → logprob: -12.750079154968262
    4. 'p' → logprob: -14.750079154968262
    5. '(a' → logprob: -16.000078201293945
    6. ' points' → logprob: -16.125078201293945
    7. '   ' → logprob: -16.375078201293945
    8. 'import' → logprob: -16.875078201293945
    9. '
' → logprob: -17.000078201293945
    10. '	a' → logprob: -17.125078201293945

Token 674: ',b' (ID: 17568)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7887325286865234
    2. 'and' → logprob: -0.7887325286865234
    3. 'a' → logprob: -2.4137325286865234
    4. ',' → logprob: -7.038732528686523
    5. ' a' → logprob: -7.538732528686523
    6. 'b' → logprob: -9.288732528686523
    7. 'import' → logprob: -9.663732528686523
    8. '(a' → logprob: -10.038732528686523
    9. 'def' → logprob: -10.913732528686523
    10. ' ' → logprob: -11.288732528686523

Token 675: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23665717244148254
    2. 'dx' → logprob: -1.9866571426391602
    3. 'd' → logprob: -3.73665714263916
    4. 'import' → logprob: -4.11165714263916
    5. 'x' → logprob: -4.86165714263916
    6. ' dx' → logprob: -4.98665714263916
    7. 'AP' → logprob: -5.36165714263916
    8. 'v' → logprob: -6.36165714263916
    9. 'ap' → logprob: -6.36165714263916
    10. ' AP' → logprob: -6.48665714263916

Token 676: '   ' (ID: 271)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.6297792196273804
    2. '   ' → logprob: -1.1297792196273804
    3. 'ax' → logprob: -3.37977933883667
    4. 'd' → logprob: -3.37977933883667
    5. 'ap' → logprob: -3.50477933883667
    6. 'AP' → logprob: -4.00477933883667
    7. 'x' → logprob: -4.37977933883667
    8. 'px' → logprob: -5.87977933883667
    9. 'A' → logprob: -6.12977933883667
    10. 'Ap' → logprob: -6.12977933883667

Token 677: ' #' (ID: 1069)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.5032435655593872
    2. 'dx' → logprob: -1.7532435655593872
    3. 'px' → logprob: -2.1282434463500977
    4. 'ax' → logprob: -2.8782434463500977
    5. 'x' → logprob: -3.5032434463500977
    6. 'AP' → logprob: -4.878243446350098
    7. '   ' → logprob: -6.003243446350098
    8. 'import' → logprob: -6.378243446350098
    9. 'd' → logprob: -6.628243446350098
    10. 'A' → logprob: -6.878243446350098

Token 678: ' line' (ID: 2543)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.43498310446739197
    2. 'dx' → logprob: -1.1849831342697144
    3. 'x' → logprob: -4.434983253479004
    4. 'px' → logprob: -4.559983253479004
    5. 'AP' → logprob: -5.059983253479004
    6. 'ax' → logprob: -5.059983253479004
    7. 'import' → logprob: -5.559983253479004
    8. 'A' → logprob: -5.934983253479004
    9. '#' → logprob: -6.559983253479004
    10. 'd' → logprob: -7.059983253479004

Token 679: ' vector' (ID: 9727)
  Prédit: '_vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_vec' → logprob: -0.11928263306617737
    2. '_dx' → logprob: -2.7442827224731445
    3. 'vec' → logprob: -3.7442827224731445
    4. 'dx' → logprob: -3.8692827224731445
    5. '=' → logprob: -6.3692827224731445
    6. 'a' → logprob: -7.8692827224731445
    7. '_vect' → logprob: -7.9942827224731445
    8. 'Vec' → logprob: -7.9942827224731445
    9. '_vector' → logprob: -8.369282722473145
    10. '_a' → logprob: -9.244282722473145

Token 680: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5735938549041748
    2. '=' → logprob: -0.9485938549041748
    3. 'ab' → logprob: -4.073594093322754
    4. 'x' → logprob: -4.448594093322754
    5. ' ab' → logprob: -4.698594093322754
    6. 'vx' → logprob: -5.698594093322754
    7. 'dx' → logprob: -6.198594093322754
    8. 'v' → logprob: -6.323594093322754
    9. '   ' → logprob: -7.323594093322754
    10. 'lx' → logprob: -7.448594093322754

Token 681: '   ' (ID: 271)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39332160353660583
    2. ' =' → logprob: -2.0183215141296387
    3. 'ab' → logprob: -2.1433215141296387
    4. ' ab' → logprob: -3.3933215141296387
    5. 'v' → logprob: -3.6433215141296387
    6. 'dx' → logprob: -6.143321514129639
    7. '=v' → logprob: -6.143321514129639
    8. 'lx' → logprob: -6.393321514129639
    9. '=line' → logprob: -6.393321514129639
    10. ' v' → logprob: -6.518321514129639

Token 682: ' vx' (ID: 93588)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.28285181522369385
    2. 'lx' → logprob: -2.1578516960144043
    3. 'ab' → logprob: -2.2828516960144043
    4. 'vx' (adapté à ' vx') → logprob: -4.407851696014404
    5. 'x' → logprob: -5.282851696014404
    6. 'ax' → logprob: -5.407851696014404
    7. ' ab' → logprob: -6.782851696014404
    8. 'import' → logprob: -7.032851696014404
    9. ' dx' → logprob: -7.032851696014404
    10. 'v' → logprob: -7.157851696014404

Token 683: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009123007766902447
    2. '=b' → logprob: -5.259122848510742
    3. ' =' → logprob: -5.884122848510742
    4. ',' → logprob: -7.759122848510742
    5. '=a' → logprob: -8.134122848510742
    6. '=v' → logprob: -8.134122848510742
    7. '=(' → logprob: -10.009122848510742
    8. ',b' → logprob: -11.509122848510742
    9. '=x' → logprob: -11.509122848510742
    10. '=ax' → logprob: -12.634122848510742

Token 684: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.704273118884885e-07
    2. '(b' → logprob: -14.625000953674316
    3. ' b' → logprob: -16.125
    4. '   ' → logprob: -19.625
    5. '	b' → logprob: -20.375
    6. '[b' → logprob: -22.75
    7. '=b' → logprob: -22.875
    8. '(' → logprob: -22.875
    9. '```' → logprob: -23.25
    10. '
' → logprob: -23.625

Token 685: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '0' → logprob: -14.375000953674316
    3. '[
' → logprob: -15.750000953674316
    4. 'x' → logprob: -17.0
    5. 'a' → logprob: -17.625
    6. '1' → logprob: -17.625
    7. '
' → logprob: -18.875
    8. '```' → logprob: -19.5
    9. '(' → logprob: -20.25
    10. '-' → logprob: -20.5

Token 686: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '[' → logprob: -17.375
    3. '
' → logprob: -17.5
    4. '1' → logprob: -18.0
    5. '```' → logprob: -18.125
    6. '۰' → logprob: -19.875
    7. ' ' → logprob: -20.375
    8. '``' → logprob: -20.4375
    9. '   ' → logprob: -20.75
    10. '

' → logprob: -21.875

Token 687: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5057093501091003
    2. ' -' → logprob: -1.0057094097137451
    3. '-p' → logprob: -3.630709409713745
    4. '-a' → logprob: -5.380709171295166
    5. 'a' → logprob: -10.630709648132324
    6. '()-' → logprob: -12.630709648132324
    7. ']-' → logprob: -13.005709648132324
    8. '-
' → logprob: -13.880709648132324
    9. '-ai' → logprob: -14.255709648132324
    10. '-а' → logprob: -14.380709648132324

Token 688: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4974866644479334e-05
    2. ' a' → logprob: -11.125015258789062
    3. '	a' → logprob: -16.500015258789062
    4. '   ' → logprob: -18.750015258789062
    5. ' ' → logprob: -19.750015258789062
    6. '  ' → logprob: -20.000015258789062
    7. 'а' → logprob: -20.375015258789062
    8. '(a' → logprob: -20.375015258789062
    9. '#a' → logprob: -21.125015258789062
    10. '[a' → logprob: -21.375015258789062

Token 689: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20141403377056122
    2. '0' → logprob: -1.7014139890670776
    3. ' ' → logprob: -15.326414108276367
    4. '(' → logprob: -15.576414108276367
    5. 'x' → logprob: -16.576414108276367
    6. '.' → logprob: -16.701414108276367
    7. '[
' → logprob: -16.951414108276367
    8. '   ' → logprob: -17.201414108276367
    9. '```' → logprob: -17.326414108276367
    10. ' [' → logprob: -17.451414108276367

Token 690: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '[' → logprob: -17.25
    4. '۰' → logprob: -18.0
    5. '```' → logprob: -19.9375
    6. '   ' → logprob: -20.3125
    7. '０' → logprob: -20.4375
    8. '০' → logprob: -20.8125
    9. '  ' → logprob: -20.875
    10. '
' → logprob: -20.9375

Token 691: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5236538052558899
    2. ')' → logprob: -0.8986538052558899
    3. ']
' → logprob: -8.773653984069824
    4. ']' → logprob: -8.773653984069824
    5. '   ' → logprob: -9.773653984069824
    6. '<|end|>' → logprob: -10.273653984069824
    7. ')
' → logprob: -10.773653984069824
    8. '
' → logprob: -10.898653984069824
    9. ')p' → logprob: -11.023653984069824
    10. ' )
' → logprob: -11.523653984069824

Token 692: '   ' (ID: 271)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.12034951150417328
    2. '
' → logprob: -2.370349407196045
    3. ' vy' → logprob: -4.120349407196045
    4. 'v' → logprob: -5.995349407196045
    5. '```' → logprob: -7.995349407196045
    6. ' 
' → logprob: -8.495349884033203
    7. '  
' → logprob: -8.620349884033203
    8. '    
' → logprob: -9.370349884033203
    9. ',' → logprob: -9.495349884033203
    10. 'yv' → logprob: -9.870349884033203

Token 693: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' (adapté à ' vy') → logprob: -0.0015035520773380995
    2. ' vy' → logprob: -6.5015034675598145
    3. 'v' → logprob: -14.376503944396973
    4. 'vx' → logprob: -15.251503944396973
    5. '2' → logprob: -15.626503944396973
    6. '
' → logprob: -16.126502990722656
    7. ' ' → logprob: -16.251502990722656
    8. '   ' → logprob: -16.751502990722656
    9. 'vz' → logprob: -17.376502990722656
    10. '```' → logprob: -17.376502990722656

Token 694: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07950422167778015
    2. ' =' → logprob: -2.7045042514801025
    3. '=b' → logprob: -4.829504013061523
    4. '=a' → logprob: -6.954504013061523
    5. '=p' → logprob: -8.704504013061523
    6. '=v' → logprob: -8.704504013061523
    7. '<|end|>' → logprob: -9.079504013061523
    8. '=(' → logprob: -9.579504013061523
    9. 'b' → logprob: -11.204504013061523
    10. '=[' → logprob: -12.204504013061523

Token 695: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -9.13388703338569e-06
    2. ' b' → logprob: -11.625009536743164
    3. '(b' → logprob: -16.625009536743164
    4. '	b' → logprob: -17.000009536743164
    5. '   ' → logprob: -20.000009536743164
    6. '(' → logprob: -20.750009536743164
    7. '[b' → logprob: -21.250009536743164
    8. ')b' → logprob: -21.250009536743164
    9. '
' → logprob: -21.875009536743164
    10. ' б' → logprob: -22.000009536743164

Token 696: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.392202976712724e-06
    2. '0' → logprob: -12.625006675720215
    3. '-' → logprob: -12.875006675720215
    4. '(' → logprob: -15.875006675720215
    5. '1' → logprob: -16.5000057220459
    6. '=' → logprob: -16.7500057220459
    7. 'def' → logprob: -17.1250057220459
    8. '#' → logprob: -17.2500057220459
    9. ':' → logprob: -17.5000057220459
    10. '```' → logprob: -17.7500057220459

Token 697: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00319993169978261
    2. '0' → logprob: -5.753200054168701
    3. '[' → logprob: -10.878199577331543
    4. 'b' → logprob: -13.378199577331543
    5. '-' → logprob: -13.878199577331543
    6. '
' → logprob: -15.003199577331543
    7. '```' → logprob: -15.253199577331543
    8. ' ' → logprob: -15.753199577331543
    9. '(' → logprob: -16.37820053100586
    10. 'y' → logprob: -17.19070053100586

Token 698: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0024357126094400883
    2. ']-' → logprob: -6.627435684204102
    3. ']' → logprob: -7.002435684204102
    4. ' -' → logprob: -9.127435684204102
    5. '[' → logprob: -9.752435684204102
    6. '-a' → logprob: -12.252435684204102
    7. '0' → logprob: -12.377435684204102
    8. ']+' → logprob: -12.502435684204102
    9. '<|end|>' → logprob: -12.752435684204102
    10. '-b' → logprob: -13.127435684204102

Token 699: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -5.512236498361744e-07
    2. ' a' → logprob: -15.000000953674316
    3. '0' → logprob: -16.5
    4. '	a' → logprob: -19.125
    5. 'а' → logprob: -19.125
    6. '[' → logprob: -19.5
    7. '#a' → logprob: -19.75
    8. '(a' → logprob: -20.25
    9. '
' → logprob: -21.0
    10. '```' → logprob: -21.125

Token 700: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03688092529773712
    2. '[' → logprob: -3.4118809700012207
    3. '-' → logprob: -5.786880970001221
    4. '0' → logprob: -8.786880493164062
    5. '```' → logprob: -12.786880493164062
    6. '(' → logprob: -12.911880493164062
    7. ']' → logprob: -13.286880493164062
    8. ' -' → logprob: -14.036880493164062
    9. ' ' → logprob: -14.411880493164062
    10. '...' → logprob: -15.036880493164062

Token 701: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.048722367733716965
    2. '1' → logprob: -3.048722267150879
    3. '[' → logprob: -8.923722267150879
    4. ' ' → logprob: -13.798722267150879
    5. '-' → logprob: -14.923722267150879
    6. '```' → logprob: -15.423722267150879
    7. '   ' → logprob: -16.798723220825195
    8. ']' → logprob: -17.173723220825195
    9. '(' → logprob: -17.736223220825195
    10. '<|end|>' → logprob: -18.173723220825195

Token 702: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16219821572303772
    2. ')' → logprob: -2.037198305130005
    3. ']
' → logprob: -4.537198066711426
    4. ')
' → logprob: -5.412198066711426
    5. '   ' → logprob: -6.037198066711426
    6. '<|end|>' → logprob: -6.787198066711426
    7. '
' → logprob: -8.662198066711426
    8. 'def' → logprob: -8.912198066711426
    9. '**' → logprob: -9.412198066711426
    10. '```' → logprob: -9.787198066711426

Token 703: '   ' (ID: 271)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.80885910987854
    2. '   ' → logprob: -1.05885910987854
    3. ' dx' → logprob: -1.68385910987854
    4. 'px' → logprob: -4.933858871459961
    5. ' px' → logprob: -5.808858871459961
    6. 'AP' → logprob: -6.683858871459961
    7. ' ap' → logprob: -6.808858871459961
    8. 'ap' → logprob: -6.933858871459961
    9. ' denom' → logprob: -6.933858871459961
    10. ' ux' → logprob: -7.183858871459961

Token 704: ' #' (ID: 1069)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.06580115854740143
    2. 'px' → logprob: -3.0658011436462402
    3. 'd' → logprob: -5.56580114364624
    4. 'len' → logprob: -5.56580114364624
    5. 'lx' → logprob: -5.56580114364624
    6. 'den' → logprob: -6.06580114364624
    7. 'wx' → logprob: -7.19080114364624
    8. 'dp' → logprob: -7.56580114364624
    9. 'x' → logprob: -7.69080114364624
    10. 'ap' → logprob: -8.065801620483398

Token 705: ' vector' (ID: 9727)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.46395015716552734
    2. 'px' → logprob: -1.5889501571655273
    3. 'wx' → logprob: -2.0889501571655273
    4. 't' → logprob: -4.338950157165527
    5. 'ux' → logprob: -4.588950157165527
    6. 'ap' → logprob: -4.838950157165527
    7. 'len' → logprob: -5.588950157165527
    8. '#' → logprob: -5.713950157165527
    9. 'lx' → logprob: -6.338950157165527
    10. 'length' → logprob: -7.588950157165527

Token 706: ' p' (ID: 275)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.010188077576458454
    2. ' px' → logprob: -5.010188102722168
    3. '(px' → logprob: -6.760188102722168
    4. '_px' → logprob: -6.885188102722168
    5. 'from' → logprob: -7.760188102722168
    6. 'wx' → logprob: -8.510188102722168
    7. 'ux' → logprob: -8.760188102722168
    8. ' ux' → logprob: -9.135188102722168
    9. ':px' → logprob: -9.510188102722168
    10. 'ax' → logprob: -9.635188102722168

Token 707: '->' (ID: 609)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005605461075901985
    2. ' =' → logprob: -5.505605697631836
    3. '=' → logprob: -7.255605697631836
    4. '_x' → logprob: -7.630605697631836
    5. '   ' → logprob: -8.505605697631836
    6. ' ' → logprob: -10.130605697631836
    7. 'vx' → logprob: -10.630605697631836
    8. '_px' → logprob: -11.380605697631836
    9. 'px' → logprob: -11.505605697631836
    10. 'p' → logprob: -11.880605697631836

Token 708: 'a' (ID: 64)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8077990412712097
    2. 'a' → logprob: -0.9327990412712097
    3. 'x' → logprob: -2.8077991008758545
    4. 'px' → logprob: -3.6827991008758545
    5. '(a' → logprob: -4.057798862457275
    6. '(p' → logprob: -4.432798862457275
    7. ' p' → logprob: -4.432798862457275
    8. ' (' → logprob: -4.807798862457275
    9. '(px' → logprob: -4.932798862457275
    10. ' a' → logprob: -5.182798862457275

Token 709: '
' (ID: 198)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.5337814092636108
    2. '   ' → logprob: -1.1587814092636108
    3. 'x' → logprob: -3.5337815284729004
    4. ' px' → logprob: -3.6587815284729004
    5. ' =' → logprob: -3.9087815284729004
    6. '=' → logprob: -4.4087815284729
    7. '_px' → logprob: -4.7837815284729
    8. '(px' → logprob: -6.4087815284729
    9. ':px' → logprob: -7.1587815284729
    10. ' ' → logprob: -8.033781051635742

Token 710: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33693647384643555
    2. 'px' → logprob: -1.4619364738464355
    3. ' px' → logprob: -4.0869364738464355
    4. 'x' → logprob: -4.0869364738464355
    5. ' =' → logprob: -4.8369364738464355
    6. '=' → logprob: -5.2119364738464355
    7. '_px' → logprob: -6.2119364738464355
    8. 'dx' → logprob: -6.5869364738464355
    9. '
' → logprob: -6.8369364738464355
    10. ' ' → logprob: -7.7119364738464355

Token 711: ' wx' (ID: 20113)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.010490349493920803
    2. ' px' → logprob: -5.760490417480469
    3. 'dx' → logprob: -5.760490417480469
    4. 'ap' → logprob: -6.385490417480469
    5. '   ' → logprob: -6.760490417480469
    6. 'ux' → logprob: -7.885490417480469
    7. 'wx' (adapté à ' wx') → logprob: -8.260490417480469
    8. 'xp' → logprob: -8.885490417480469
    9. 'ax' → logprob: -9.385490417480469
    10. 'pa' → logprob: -9.635490417480469

Token 712: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31343990564346313
    2. ' =' → logprob: -1.3134398460388184
    3. '=p' → logprob: -8.813440322875977
    4. '=a' → logprob: -11.438440322875977
    5. '=w' → logprob: -11.563440322875977
    6. 'x' → logprob: -13.063440322875977
    7. 'p' → logprob: -13.063440322875977
    8. '=x' → logprob: -13.188440322875977
    9. '=v' → logprob: -14.063440322875977
    10. 'a' → logprob: -14.688440322875977

Token 713: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.927930654550437e-05
    2. 'a' → logprob: -10.500029563903809
    3. ' p' → logprob: -13.375029563903809
    4. '(p' → logprob: -17.500028610229492
    5. '   ' → logprob: -18.000028610229492
    6. '	p' → logprob: -18.500028610229492
    7. '(' → logprob: -19.125028610229492
    8. ' ' → logprob: -19.125028610229492
    9. '  ' → logprob: -19.250028610229492
    10. 'b' → logprob: -19.375028610229492

Token 714: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.541112427134067e-05
    2. '0' → logprob: -9.500075340270996
    3. 'x' → logprob: -15.250075340270996
    4. '1' → logprob: -15.375075340270996
    5. '(' → logprob: -17.125076293945312
    6. '[
' → logprob: -17.500076293945312
    7. '.' → logprob: -17.750076293945312
    8. 'a' → logprob: -18.250076293945312
    9. '2' → logprob: -18.250076293945312
    10. 'p' → logprob: -18.375076293945312

Token 715: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.750000953674316
    3. ' ' → logprob: -14.750000953674316
    4. '
' → logprob: -17.625
    5. '1' → logprob: -19.1875
    6. '۰' → logprob: -19.625
    7. '   ' → logprob: -19.8125
    8. '```' → logprob: -19.8125
    9. '#' → logprob: -20.0625
    10. '  ' → logprob: -20.5625

Token 716: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.26454007625579834
    2. ' -' → logprob: -1.5145400762557983
    3. '-a' → logprob: -4.389540195465088
    4. ']-' → logprob: -9.63953971862793
    5. '[' → logprob: -11.01453971862793
    6. '-w' → logprob: -11.51453971862793
    7. ')-' → logprob: -12.13953971862793
    8. '-ai' → logprob: -12.13953971862793
    9. '-v' → logprob: -12.51453971862793
    10. '-au' → logprob: -12.76453971862793

Token 717: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2664456789934775e-06
    2. ' a' → logprob: -13.625000953674316
    3. '	a' → logprob: -17.875001907348633
    4. '   ' → logprob: -18.875001907348633
    5. '  ' → logprob: -19.375001907348633
    6. '[' → logprob: -19.750001907348633
    7. ' ' → logprob: -19.750001907348633
    8. '(a' → logprob: -20.000001907348633
    9. '#a' → logprob: -20.125001907348633
    10. '[a' → logprob: -20.125001907348633

Token 718: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002036595979006961
    2. '0' → logprob: -8.500204086303711
    3. '(' → logprob: -16.50020408630371
    4. '[
' → logprob: -17.12520408630371
    5. '```' → logprob: -17.25020408630371
    6. '.' → logprob: -17.87520408630371
    7. 'def' → logprob: -18.12520408630371
    8. '<|end|>' → logprob: -18.37520408630371
    9. '1' → logprob: -18.75020408630371
    10. '#' → logprob: -18.87520408630371

Token 719: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. '[' → logprob: -10.875019073486328
    3. '۰' → logprob: -17.375019073486328
    4. ' ' → logprob: -17.875019073486328
    5. '०' → logprob: -18.500019073486328
    6. '   ' → logprob: -18.750019073486328
    7. '০' → logprob: -18.812519073486328
    8. '```' → logprob: -18.812519073486328
    9. '
' → logprob: -18.875019073486328
    10. '(' → logprob: -18.937519073486328

Token 720: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03615717962384224
    2. ')' → logprob: -3.4111571311950684
    3. ']
' → logprob: -6.286157131195068
    4. '   ' → logprob: -7.661157131195068
    5. ']' → logprob: -9.161157608032227
    6. ')
' → logprob: -10.036157608032227
    7. '}
' → logprob: -11.661157608032227
    8. '
' → logprob: -12.661157608032227
    9. '<|end|>' → logprob: -12.661157608032227
    10. '>
' → logprob: -12.911157608032227

Token 721: '   ' (ID: 271)
  Prédit: 'wy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wy' → logprob: -0.5416240096092224
    2. '   ' → logprob: -1.5416240692138672
    3. 'wv' → logprob: -2.416624069213867
    4. 'w' → logprob: -3.166624069213867
    5. '
' → logprob: -3.916624069213867
    6. 'wx' → logprob: -4.291624069213867
    7. 'vy' → logprob: -4.791624069213867
    8. '*w' → logprob: -4.791624069213867
    9. ' wy' → logprob: -5.291624069213867
    10. '*' → logprob: -5.416624069213867

Token 722: ' wy' (ID: 14962)
  Prédit: 'wy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wy' (adapté à ' wy') → logprob: -0.006773868575692177
    2. ' wy' → logprob: -5.006773948669434
    3. 'w' → logprob: -9.756773948669434
    4. 'wyl' → logprob: -15.881773948669434
    5. 'Wy' → logprob: -16.006772994995117
    6. 'wys' → logprob: -16.631772994995117
    7. 'vy' → logprob: -16.631772994995117
    8. '   ' → logprob: -16.881772994995117
    9. 'wx' → logprob: -17.006772994995117
    10. '_w' → logprob: -17.631772994995117

Token 723: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012442187406122684
    2. '-' → logprob: -4.637442111968994
    3. '-w' → logprob: -6.512442111968994
    4. '<|end|>' → logprob: -7.512442111968994
    5. '#' → logprob: -8.012442588806152
    6. '=' → logprob: -9.637442588806152
    7. ' -' → logprob: -10.387442588806152
    8. '[-' → logprob: -10.387442588806152
    9. '(' → logprob: -10.512442588806152
    10. ')' → logprob: -10.512442588806152

Token 724: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00023071514442563057
    2. ' p' → logprob: -8.37523078918457
    3. 'w' → logprob: -15.87523078918457
    4. 'a' → logprob: -17.50023078918457
    5. '(p' → logprob: -18.25023078918457
    6. '   ' → logprob: -18.75023078918457
    7. 'b' → logprob: -19.00023078918457
    8. '	p' → logprob: -19.37523078918457
    9. ' ' → logprob: -19.87523078918457
    10. 'py' → logprob: -20.37523078918457

Token 725: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3544423381972592e-05
    2. '-' → logprob: -11.62501335144043
    3. '1' → logprob: -12.50001335144043
    4. '0' → logprob: -15.25001335144043
    5. '#' → logprob: -15.87501335144043
    6. '(' → logprob: -16.50001335144043
    7. 'def' → logprob: -16.62501335144043
    8. '[
' → logprob: -17.00001335144043
    9. '=' → logprob: -17.12501335144043
    10. '```' → logprob: -17.25001335144043

Token 726: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002980432182084769
    2. '[' → logprob: -8.125298500061035
    3. '0' → logprob: -13.750298500061035
    4. '
' → logprob: -14.875298500061035
    5. '(' → logprob: -15.750298500061035
    6. '１' → logprob: -16.18779754638672
    7. '```' → logprob: -16.68779754638672
    8. '-' → logprob: -17.00029754638672
    9. '' → logprob: -17.43779754638672
    10. ']' → logprob: -17.62529754638672

Token 727: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.028675397858023643
    2. ']-' → logprob: -3.7786753177642822
    3. ' -' → logprob: -5.903675556182861
    4. '-w' → logprob: -6.278675556182861
    5. '-a' → logprob: -8.278675079345703
    6. ']' → logprob: -8.653675079345703
    7. '-W' → logprob: -9.153675079345703
    8. '()-' → logprob: -9.153675079345703
    9. '[' → logprob: -10.903675079345703
    10. '-ai' → logprob: -11.153675079345703

Token 728: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.842555426876061e-06
    2. ' a' → logprob: -12.250004768371582
    3. 'p' → logprob: -18.1250057220459
    4. '0' → logprob: -18.1250057220459
    5. '[' → logprob: -18.5000057220459
    6. '(a' → logprob: -18.8750057220459
    7. 'b' → logprob: -19.0000057220459
    8. '	a' → logprob: -19.2500057220459
    9. 'а' → logprob: -19.5000057220459
    10. '[a' → logprob: -20.0000057220459

Token 729: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03807603940367699
    2. '1' → logprob: -3.2880759239196777
    3. '-' → logprob: -10.413076400756836
    4. '(' → logprob: -13.788076400756836
    5. '=' → logprob: -14.163076400756836
    6. '<|end|>' → logprob: -14.163076400756836
    7. '0' → logprob: -14.538076400756836
    8. '```' → logprob: -14.663076400756836
    9. '#' → logprob: -15.163076400756836
    10. '<|end|>' → logprob: -15.288076400756836

Token 730: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03469705209136009
    2. '0' → logprob: -3.6596970558166504
    3. '[' → logprob: -4.78469705581665
    4. '```' → logprob: -13.909696578979492
    5. '<|end|>' → logprob: -14.472196578979492
    6. ' ' → logprob: -14.847196578979492
    7. ']' → logprob: -14.909696578979492
    8. '(' → logprob: -15.222196578979492
    9. '
' → logprob: -15.347196578979492
    10. '-' → logprob: -15.347196578979492

Token 731: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11532246321439743
    2. '   ' → logprob: -2.9903223514556885
    3. ')
' → logprob: -3.2403223514556885
    4. ']' → logprob: -3.9903223514556885
    5. ']
' → logprob: -7.740322589874268
    6. '**' → logprob: -9.24032211303711
    7. '<|end|>' → logprob: -9.24032211303711
    8. '```' → logprob: -9.61532211303711
    9. '*' → logprob: -9.86532211303711
    10. '
' → logprob: -9.99032211303711

Token 732: '   ' (ID: 271)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.3367001712322235
    2. '   ' → logprob: -1.711700201034546
    3. ' dot' → logprob: -2.836700201034546
    4. 'd' → logprob: -4.211699962615967
    5. 't' → logprob: -4.336699962615967
    6. 'dot' → logprob: -4.711699962615967
    7. ' d' → logprob: -5.336699962615967
    8. ' proj' → logprob: -6.086699962615967
    9. '```' → logprob: -7.336699962615967
    10. '_dot' → logprob: -7.711699962615967

Token 733: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0014020204544067
    2. 'dot' → logprob: -1.3764020204544067
    3. 't' → logprob: -1.8764020204544067
    4. 'd' → logprob: -2.001401901245117
    5. ' dot' → logprob: -3.251401901245117
    6. 'proj' → logprob: -3.376401901245117
    7. ' t' → logprob: -4.501401901245117
    8. ' proj' → logprob: -5.626401901245117
    9. '```' → logprob: -7.126401901245117
    10. ' d' → logprob: -7.251401901245117

Token 734: ' projection' (ID: 41244)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.08720289170742035
    2. 't' → logprob: -3.212202787399292
    3. 'd' → logprob: -3.587202787399292
    4. 'proj' → logprob: -4.212203025817871
    5. '#' → logprob: -8.337203025817871
    6. 'v' → logprob: -8.712203025817871
    7. ' dot' → logprob: -9.587203025817871
    8. 'c' → logprob: -10.087203025817871
    9. '   ' → logprob: -10.212203025817871
    10. 'dp' → logprob: -10.337203025817871

Token 735: ' length' (ID: 5517)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8149280548095703
    2. '=' → logprob: -1.1899280548095703
    3. 'proj' → logprob: -2.1899280548095703
    4. 'dot' → logprob: -2.9399280548095703
    5. ' =' → logprob: -3.1899280548095703
    6. '   ' → logprob: -3.8149280548095703
    7. ' t' → logprob: -4.56492805480957
    8. 'scalar' → logprob: -5.68992805480957
    9. 'dp' → logprob: -5.93992805480957
    10. 'len' → logprob: -6.43992805480957

Token 736: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5925076603889465
    2. ' =' → logprob: -0.8425076603889465
    3. ' t' → logprob: -4.717507839202881
    4. 't' → logprob: -5.592507839202881
    5. 'proj' → logprob: -6.467507839202881
    6. 'dp' → logprob: -7.842507839202881
    7. '=(' → logprob: -7.967507839202881
    8. '=v' → logprob: -8.092507362365723
    9. ' proj' → logprob: -8.467507362365723
    10. '=t' → logprob: -8.717507362365723

Token 737: '   ' (ID: 271)
  Prédit: 'proj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proj' → logprob: -0.8550021648406982
    2. '=' → logprob: -0.9800021648406982
    3. 't' → logprob: -2.3550021648406982
    4. ' =' → logprob: -3.3550021648406982
    5. '=(' → logprob: -3.6050021648406982
    6. ' t' → logprob: -4.230002403259277
    7. 'dot' → logprob: -4.855002403259277
    8. ' proj' → logprob: -5.230002403259277
    9. '   ' → logprob: -6.105002403259277
    10. '=v' → logprob: -6.230002403259277

Token 738: ' proj' (ID: 16022)
  Prédit: 'proj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proj' (adapté à ' proj') → logprob: -0.3428843021392822
    2. 't' → logprob: -1.3428843021392822
    3. 'dot' → logprob: -4.342884063720703
    4. ' proj' → logprob: -5.092884063720703
    5. ' t' → logprob: -5.342884063720703
    6. '(t' → logprob: -6.467884063720703
    7. '(v' → logprob: -6.842884063720703
    8. '(' → logprob: -7.342884063720703
    9. '(dot' → logprob: -7.967884063720703
    10. ' dot' → logprob: -8.092884063720703

Token 739: '_len' (ID: 13683)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009817124344408512
    2. '_len' → logprob: -5.384817123413086
    3. ' =' → logprob: -5.509817123413086
    4. '_length' → logprob: -6.884817123413086
    5. '=len' → logprob: -10.009817123413086
    6. 'len' → logprob: -10.134817123413086
    7. '=float' → logprob: -11.759817123413086
    8. 'length' → logprob: -11.884817123413086
    9. '_=' → logprob: -13.134817123413086
    10. '=_' → logprob: -13.134817123413086

Token 740: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005468539893627167
    2. ' =' → logprob: -5.255468368530273
    3. '=v' → logprob: -8.630468368530273
    4. '=(' → logprob: -9.880468368530273
    5. '=((' → logprob: -12.630468368530273
    6. '=w' → logprob: -13.755468368530273
    7. '=int' → logprob: -14.630468368530273
    8. ' =(' → logprob: -16.380468368530273
    9. '=
' → logprob: -16.755468368530273
    10. '=

' → logprob: -16.755468368530273

Token 741: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.26980099081993103
    2. '(wx' → logprob: -1.5198010206222534
    3. '(w' → logprob: -4.394801139831543
    4. ' (' → logprob: -5.269801139831543
    5. '(' → logprob: -9.269801139831543
    6. '((' → logprob: -9.519801139831543
    7. '
' → logprob: -11.019801139831543
    8. '(x' → logprob: -11.144801139831543
    9. '(px' → logprob: -12.019801139831543
    10. 'wx' → logprob: -12.394801139831543

Token 742: 'wx' (ID: 43176)
  Prédit: 'wx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wx' → logprob: -0.027933284640312195
    2. 'vx' → logprob: -3.777933359146118
    3. '(wx' → logprob: -5.527933120727539
    4. '2' → logprob: -7.527933120727539
    5. ' wx' → logprob: -9.652933120727539
    6. '(v' → logprob: -10.152933120727539
    7. '(w' → logprob: -11.027933120727539
    8. '(' → logprob: -11.027933120727539
    9. ' vx' → logprob: -11.527933120727539
    10. ' ' → logprob: -12.277933120727539

Token 743: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -4.692145012086257e-05
    2. ' *' → logprob: -10.000046730041504
    3. '*v' → logprob: -13.625046730041504
    4. 'vx' → logprob: -15.375046730041504
    5. '*x' → logprob: -18.25004768371582
    6. '*(' → logprob: -18.50004768371582
    7. '**' → logprob: -19.75004768371582
    8. ' vx' → logprob: -20.37504768371582
    9. ' ' → logprob: -20.87504768371582
    10. ')*' → logprob: -21.00004768371582

Token 744: 'vx' (ID: 96015)
  Prédit: 'vx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -3.2617008400848135e-05
    2. ' vx' → logprob: -10.375032424926758
    3. '
' → logprob: -13.875032424926758
    4. '   ' → logprob: -15.750032424926758
    5. 'vy' → logprob: -16.375032424926758
    6. ' ' → logprob: -17.375032424926758
    7. '

' → logprob: -17.375032424926758
    8. '1' → logprob: -17.500032424926758
    9. '```' → logprob: -17.625032424926758
    10. '2' → logprob: -17.875032424926758

Token 745: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519488036632538
    2. ' +' → logprob: -1.5019488334655762
    3. '+
' → logprob: -11.876948356628418
    4. ')' → logprob: -12.251948356628418
    5. '*' → logprob: -12.501948356628418
    6. '+w' → logprob: -13.876948356628418
    7. ' +
' → logprob: -14.126948356628418
    8. ')/(' → logprob: -14.376948356628418
    9. ')+(' → logprob: -14.376948356628418
    10. '+(' → logprob: -14.626948356628418

Token 746: 'wy' (ID: 10201)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.17348134517669678
    2. 'wy' → logprob: -2.1734814643859863
    3. 'wx' → logprob: -3.5484814643859863
    4. ' vy' → logprob: -4.923481464385986
    5. 'vx' → logprob: -6.048481464385986
    6. ' wy' → logprob: -6.173481464385986
    7. 'wv' → logprob: -6.173481464385986
    8. 'vw' → logprob: -6.548481464385986
    9. '(v' → logprob: -7.673481464385986
    10. '(wx' → logprob: -7.798481464385986

Token 747: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.674774169921875
    2. '*' → logprob: -1.174774169921875
    3. ')/(' → logprob: -2.299774169921875
    4. ' vx' → logprob: -2.924774169921875
    5. ' *' → logprob: -4.799774169921875
    6. 'vx' → logprob: -5.174774169921875
    7. ')/' → logprob: -5.299774169921875
    8. ' )' → logprob: -5.799774169921875
    9. ' /' → logprob: -7.049774169921875
    10. '*v' → logprob: -7.049774169921875

Token 748: 'vy' (ID: 16670)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.0019249445758759975
    2. 'vy' → logprob: -6.376924991607666
    3. ' vx' → logprob: -8.501924514770508
    4. ' ' → logprob: -12.001924514770508
    5. 'v' → logprob: -12.751924514770508
    6. '
' → logprob: -13.001924514770508
    7. 'vw' → logprob: -13.126924514770508
    8. ' vy' → logprob: -13.751924514770508
    9. 'wx' → logprob: -13.876924514770508
    10. '0' → logprob: -14.251924514770508

Token 749: ')/(' (ID: 60504)
  Prédit: ')/('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/(' → logprob: -0.4077937602996826
    2. ')' → logprob: -1.1577937602996826
    3. ' )' → logprob: -4.282793998718262
    4. ')/' → logprob: -5.032793998718262
    5. ' /' → logprob: -8.657793998718262
    6. '/(' → logprob: -8.907793998718262
    7. '/' → logprob: -10.032793998718262
    8. ')//' → logprob: -11.032793998718262
    9. '/v' → logprob: -12.157793998718262
    10. '   ' → logprob: -13.657793998718262

Token 750: 'vx' (ID: 96015)
  Prédit: 'vx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.039197035133838654
    2. '(v' → logprob: -3.2891969680786133
    3. ' vx' → logprob: -6.914196968078613
    4. 'v' → logprob: -8.789196968078613
    5. '   ' → logprob: -12.664196968078613
    6. 'vy' → logprob: -13.414196968078613
    7. '[v' → logprob: -14.164196968078613
    8. ',v' → logprob: -14.289196968078613
    9. 'vz' → logprob: -14.664196968078613
    10. ' (' → logprob: -14.914196968078613

Token 751: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.09121223539113998
    2. '**' → logprob: -2.466212272644043
    3. '2' → logprob: -7.091212272644043
    4. '[' → logprob: -7.091212272644043
    5. 'vx' → logprob: -7.716212272644043
    6. '0' → logprob: -9.716212272644043
    7. '```' → logprob: -10.216212272644043
    8. '*v' → logprob: -10.341212272644043
    9. ' *' → logprob: -12.091212272644043
    10. ' vx' → logprob: -12.591212272644043

Token 752: 'vx' (ID: 96015)
  Prédit: 'vx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.00013321757433004677
    2. '(' → logprob: -9.875133514404297
    3. '(v' → logprob: -9.875133514404297
    4. '2' → logprob: -11.875133514404297
    5. '
' → logprob: -11.875133514404297
    6. ' vx' → logprob: -12.125133514404297
    7. 'vy' → logprob: -12.375133514404297
    8. '0' → logprob: -12.500133514404297
    9. '```' → logprob: -13.750133514404297
    10. '**' → logprob: -14.125133514404297

Token 753: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0039056383538991213
    2. ' +' → logprob: -5.628905773162842
    3. ')' → logprob: -8.128905296325684
    4. '+)' → logprob: -11.753905296325684
    5. '+
' → logprob: -13.753905296325684
    6. '+y' → logprob: -14.378905296325684
    7. '<|end|>' → logprob: -14.878905296325684
    8. ')+' → logprob: -16.12890625
    9. '),' → logprob: -16.50390625
    10. '＋' → logprob: -16.87890625

Token 754: 'vy' (ID: 16670)
  Prédit: 'vy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -1.700132997939363e-05
    2. ' vy' → logprob: -11.000017166137695
    3. '0' → logprob: -16.750017166137695
    4. 'vx' → logprob: -16.750017166137695
    5. '(v' → logprob: -17.000017166137695
    6. 'vv' → logprob: -17.750017166137695
    7. '1' → logprob: -18.125017166137695
    8. 'v' → logprob: -18.375017166137695
    9. 'yv' → logprob: -18.375017166137695
    10. 'Vy' → logprob: -18.375017166137695

Token 755: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00786733627319336
    2. '<|end|>' → logprob: -5.257867336273193
    3. '**' → logprob: -6.757867336273193
    4. '[' → logprob: -7.507867336273193
    5. '*' → logprob: -7.507867336273193
    6. ')**' → logprob: -8.882867813110352
    7. ')*' → logprob: -9.757867813110352
    8. '```' → logprob: -10.507867813110352
    9. '}' → logprob: -10.757867813110352
    10. '*)' → logprob: -11.132867813110352

Token 756: 'vy' (ID: 16670)
  Prédit: 'vy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.020151160657405853
    2. '1' → logprob: -4.020151138305664
    3. '0' → logprob: -6.895151138305664
    4. ')' → logprob: -7.520151138305664
    5. '```' → logprob: -8.645151138305664
    6. '2' → logprob: -9.770151138305664
    7. ' vy' → logprob: -10.520151138305664
    8. 'wy' → logprob: -10.645151138305664
    9. 'vv' → logprob: -10.770151138305664
    10. '``' → logprob: -11.020151138305664

Token 757: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014497945085167885
    2. ')
' → logprob: -4.264497756958008
    3. '   ' → logprob: -8.139497756958008
    4. ' )' → logprob: -10.514497756958008
    5. ' )
' → logprob: -12.264497756958008
    6. ')
' → logprob: -12.514497756958008
    7. ')*' → logprob: -12.889497756958008
    8. ' ' → logprob: -13.514497756958008
    9. ')

' → logprob: -13.639497756958008
    10. ')p' → logprob: -14.764497756958008

Token 758: '   ' (ID: 271)
  Prédit: 'proj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proj' → logprob: -0.6938090324401855
    2. 'px' → logprob: -1.9438090324401855
    3. '   ' → logprob: -2.0688090324401855
    4. 'x' → logprob: -2.0688090324401855
    5. 'rx' → logprob: -2.6938090324401855
    6. ' proj' → logprob: -4.1938090324401855
    7. 'cx' → logprob: -5.0688090324401855
    8. 'xr' → logprob: -5.5688090324401855
    9. 'ref' → logprob: -6.0688090324401855
    10. 'qx' → logprob: -6.3188090324401855

Token 759: ' #' (ID: 1069)
  Prédit: 'proj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'proj' → logprob: -0.7464505434036255
    2. 'px' → logprob: -0.8714505434036255
    3. 'x' → logprob: -2.621450424194336
    4. 'rx' → logprob: -4.121450424194336
    5. 'mx' → logprob: -5.121450424194336
    6. ' proj' → logprob: -5.746450424194336
    7. 'qx' → logprob: -6.246450424194336
    8. '   ' → logprob: -6.371450424194336
    9. 'cx' → logprob: -6.621450424194336
    10. 'xr' → logprob: -6.621450424194336

Token 760: ' closest' (ID: 31179)
  Prédit: 'proj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'proj' → logprob: -1.1178029775619507
    2. 'x' → logprob: -1.2428029775619507
    3. 'rx' → logprob: -1.4928029775619507
    4. 'px' → logprob: -2.1178030967712402
    5. 'xr' → logprob: -4.11780309677124
    6. 'qx' → logprob: -4.11780309677124
    7. 'cx' → logprob: -6.49280309677124
    8. 'mx' → logprob: -6.49280309677124
    9. 'xp' → logprob: -6.74280309677124
    10. 'nx' → logprob: -6.99280309677124

Token 761: ' point' (ID: 2438)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5353385806083679
    2. 'point' → logprob: -0.9103385806083679
    3. '_point' → logprob: -4.910338401794434
    4. 'pt' → logprob: -6.160338401794434
    5. '_x' → logprob: -6.660338401794434
    6. 'px' → logprob: -7.535338401794434
    7. 'p' → logprob: -8.535338401794434
    8. '=' → logprob: -8.535338401794434
    9. '-point' → logprob: -9.285338401794434
    10. ' point' → logprob: -9.660338401794434

Token 762: ' on' (ID: 402)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10899169743061066
    2. 'on' → logprob: -2.6089916229248047
    3. ' =' → logprob: -4.108991622924805
    4. '=c' → logprob: -5.108991622924805
    5. 'c' → logprob: -5.233991622924805
    6. ' on' → logprob: -6.983991622924805
    7. 'x' → logprob: -7.733991622924805
    8. 'cx' → logprob: -8.733991622924805
    9. '=
' → logprob: -9.733991622924805
    10. '   ' → logprob: -10.108991622924805

Token 763: ' line' (ID: 2543)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008587741293013096
    2. 'line' → logprob: -5.008587837219238
    3. ' line' → logprob: -6.508587837219238
    4. ' a' → logprob: -7.883587837219238
    5. '(a' → logprob: -13.758587837219238
    6. 'the' → logprob: -13.883587837219238
    7. ' the' → logprob: -15.133587837219238
    8. '   ' → logprob: -15.133587837219238
    9. '_line' → logprob: -15.383587837219238
    10. '-line' → logprob: -15.883587837219238

Token 764: '
' (ID: 198)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.02897225320339203
    2. 'c' → logprob: -5.028972148895264
    3. 'qx' → logprob: -5.403972148895264
    4. '(cx' → logprob: -5.528972148895264
    5. '   ' → logprob: -5.653972148895264
    6. 'x' → logprob: -5.653972148895264
    7. 'px' → logprob: -6.278972148895264
    8. 'lx' → logprob: -6.903972148895264
    9. 'mx' → logprob: -7.153972148895264
    10. ' cx' → logprob: -7.403972148895264

Token 765: '   ' (ID: 271)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.0616755411028862
    2. 'closest' → logprob: -3.561675548553467
    3. 'px' → logprob: -4.811675548553467
    4. 'c' → logprob: -5.186675548553467
    5. 'x' → logprob: -5.311675548553467
    6. '(cx' → logprob: -5.936675548553467
    7. '   ' → logprob: -6.061675548553467
    8. ' cx' → logprob: -6.186675548553467
    9. 'proj' → logprob: -6.311675548553467
    10. 'cp' → logprob: -7.186675548553467

Token 766: ' cx' (ID: 44448)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' (adapté à ' cx') → logprob: -0.027467042207717896
    2. 'px' → logprob: -4.527467250823975
    3. 'x' → logprob: -4.652467250823975
    4. 'closest' → logprob: -5.777467250823975
    5. 'proj' → logprob: -6.277467250823975
    6. 'qx' → logprob: -7.277467250823975
    7. ' cx' → logprob: -7.777467250823975
    8. 'mx' → logprob: -8.902466773986816
    9. '   ' → logprob: -9.027466773986816
    10. 'hx' → logprob: -9.152466773986816

Token 767: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011078117415308952
    2. ' =' → logprob: -4.511077880859375
    3. '=a' → logprob: -10.511077880859375
    4. '=c' → logprob: -13.886077880859375
    5. '=int' → logprob: -14.636077880859375
    6. ',' → logprob: -14.636077880859375
    7. '=x' → logprob: -15.261077880859375
    8. '=p' → logprob: -15.386077880859375
    9. '=b' → logprob: -15.636077880859375
    10. '=v' → logprob: -15.761077880859375

Token 768: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.8206473871250637e-05
    2. ' a' → logprob: -10.500028610229492
    3. 'int' → logprob: -14.500028610229492
    4. '   ' → logprob: -16.250028610229492
    5. ' ' → logprob: -18.125028610229492
    6. '  ' → logprob: -18.750028610229492
    7. '	a' → logprob: -18.750028610229492
    8. '
' → logprob: -19.250028610229492
    9. '(a' → logprob: -20.125028610229492
    10. ' int' → logprob: -21.375028610229492

Token 769: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012833021173719317
    2. '0' → logprob: -9.000128746032715
    3. 'x' → logprob: -12.375128746032715
    4. '.' → logprob: -15.875128746032715
    5. '+' → logprob: -16.2501277923584
    6. ' ' → logprob: -16.8751277923584
    7. '[
' → logprob: -16.8751277923584
    8. 'a' → logprob: -17.0001277923584
    9. '(' → logprob: -17.1251277923584
    10. ' [' → logprob: -17.2501277923584

Token 770: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.375
    3. ' ' → logprob: -17.375
    4. 'x' → logprob: -19.75
    5. '```' → logprob: -20.125
    6. '   ' → logprob: -20.625
    7. '۰' → logprob: -20.875
    8. '
' → logprob: -20.875
    9. '(' → logprob: -21.5
    10. '  ' → logprob: -22.1875

Token 771: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005455370992422104
    2. ' +' → logprob: -5.255455493927002
    3. ')+' → logprob: -9.005455017089844
    4. '+c' → logprob: -9.880455017089844
    5. ')' → logprob: -10.880455017089844
    6. ']+' → logprob: -11.005455017089844
    7. ']' → logprob: -13.380455017089844
    8. '+x' → logprob: -13.505455017089844
    9. '+p' → logprob: -13.505455017089844
    10. '+
' → logprob: -13.630455017089844

Token 772: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0036026788875460625
    2. ' +' → logprob: -5.628602504730225
    3. '+c' → logprob: -13.253602981567383
    4. '+
' → logprob: -14.878602981567383
    5. 'v' → logprob: -16.628602981567383
    6. '[' → logprob: -16.628602981567383
    7. '+p' → logprob: -16.753602981567383
    8. '
' → logprob: -16.878602981567383
    9. '+y' → logprob: -17.003602981567383
    10. '+(' → logprob: -17.128602981567383

Token 773: ' proj' (ID: 16022)
  Prédit: 'proj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proj' → logprob: -0.014401598833501339
    2. 'vx' → logprob: -4.264401435852051
    3. 'int' → logprob: -9.13940143585205
    4. ' proj' → logprob: -9.51440143585205
    5. '   ' → logprob: -10.13940143585205
    6. ' vx' → logprob: -12.13940143585205
    7. 'pro' → logprob: -12.51440143585205
    8. '  ' → logprob: -12.51440143585205
    9. ' ' → logprob: -13.51440143585205
    10. 'px' → logprob: -13.76440143585205

Token 774: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.1041145626222715e-05
    2. 'len' → logprob: -11.500011444091797
    3. '_LEN' → logprob: -14.750011444091797
    4. 'Len' → logprob: -14.750011444091797
    5. 'x' → logprob: -17.625011444091797
    6. '[len' → logprob: -18.000011444091797
    7. 'ec' → logprob: -18.125011444091797
    8. '<len' → logprob: -18.500011444091797
    9. '[' → logprob: -18.750011444091797
    10. 'en' → logprob: -18.875011444091797

Token 775: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -7.465036105713807e-06
    2. ' *' → logprob: -12.250007629394531
    3. '*v' → logprob: -12.875007629394531
    4. 'vx' → logprob: -17.25000762939453
    5. '*(' → logprob: -19.12500762939453
    6. '*object' → logprob: -19.50000762939453
    7. '   ' → logprob: -19.62500762939453
    8. '```' → logprob: -19.62500762939453
    9. '**' → logprob: -21.00000762939453
    10. '*
' → logprob: -21.37500762939453

Token 776: 'vx' (ID: 96015)
  Prédit: 'vx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -1.27099974633893e-05
    2. ' vx' → logprob: -11.375012397766113
    3. '   ' → logprob: -13.750012397766113
    4. '  ' → logprob: -17.25001335144043
    5. ' ' → logprob: -18.12501335144043
    6. 'v' → logprob: -18.62501335144043
    7. 'vz' → logprob: -19.75001335144043
    8. '1' → logprob: -20.25001335144043
    9. '
' → logprob: -20.87501335144043
    10. 'vy' → logprob: -21.00001335144043

Token 777: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28878507018089294
    2. 'cy' → logprob: -2.038784980773926
    3. '    
' → logprob: -3.413784980773926
    4. '<|end|>' → logprob: -3.413784980773926
    5. ' 
' → logprob: -4.038784980773926
    6. '   ' → logprob: -4.163784980773926
    7. '  
' → logprob: -4.663784980773926
    8. '<|end|>' → logprob: -4.913784980773926
    9. 'c' → logprob: -6.538784980773926
    10. 'cj' → logprob: -7.163784980773926

Token 778: '   ' (ID: 271)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.038991719484329224
    2. '   ' → logprob: -3.288991689682007
    3. ' cy' → logprob: -7.163991928100586
    4. '.cy' → logprob: -8.788991928100586
    5. '
' → logprob: -11.163991928100586
    6. 'cyj' → logprob: -12.413991928100586
    7. ',' → logprob: -13.538991928100586
    8. '	c' → logprob: -13.913991928100586
    9. '#' → logprob: -14.163991928100586
    10. '    
' → logprob: -14.288991928100586

Token 779: ' cy' (ID: 5504)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3788791596889496
    2. 'c' → logprob: -1.753879189491272
    3. 'cy' (adapté à ' cy') → logprob: -2.0038790702819824
    4. '   ' → logprob: -5.503879070281982
    5. ' a' → logprob: -6.503879070281982
    6. ',' → logprob: -7.628879070281982
    7. '
' → logprob: -7.628879070281982
    8. '[' → logprob: -8.50387954711914
    9. ' cy' → logprob: -8.62887954711914
    10. ' c' → logprob: -9.12887954711914

Token 780: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.043233491480350494
    2. ' =' → logprob: -3.1682333946228027
    3. 'a' → logprob: -8.543233871459961
    4. '[' → logprob: -10.418233871459961
    5. '=a' → logprob: -12.668233871459961
    6. '   ' → logprob: -13.293233871459961
    7. '+' → logprob: -13.543233871459961
    8. ' a' → logprob: -14.043233871459961
    9. ' ' → logprob: -14.293233871459961
    10. 'b' → logprob: -14.668233871459961

Token 781: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019286326132714748
    2. ' a' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.751928329467773
    4. '	a' → logprob: -18.251928329467773
    5. ' ' → logprob: -21.126928329467773
    6. '  ' → logprob: -21.626928329467773
    7. '(a' → logprob: -21.626928329467773
    8. '    ' → logprob: -23.001928329467773
    9. '>a' → logprob: -23.251928329467773
    10. '#a' → logprob: -23.376928329467773

Token 782: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1160349458805285e-05
    2. '0' → logprob: -11.625011444091797
    3. '1' → logprob: -13.625011444091797
    4. '.' → logprob: -15.000011444091797
    5. '(' → logprob: -16.375011444091797
    6. '```' → logprob: -16.500011444091797
    7. '[
' → logprob: -16.750011444091797
    8. '#' → logprob: -16.750011444091797
    9. '-' → logprob: -16.875011444091797
    10. 'def' → logprob: -16.875011444091797

Token 783: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.634469747543335
    2. '0' → logprob: -0.759469747543335
    3. 'a' → logprob: -6.759469985961914
    4. '[' → logprob: -7.509469985961914
    5. ' ' → logprob: -8.884469985961914
    6. '
' → logprob: -12.509469985961914
    7. '   ' → logprob: -12.509469985961914
    8. 'b' → logprob: -12.884469985961914
    9. '-' → logprob: -12.884469985961914
    10. '```' → logprob: -13.134469985961914

Token 784: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25194287300109863
    2. '+' → logprob: -1.5019428730010986
    3. '[' → logprob: -11.87694263458252
    4. ']+' → logprob: -13.25194263458252
    5. ')' → logprob: -13.50194263458252
    6. ')+' → logprob: -14.00194263458252
    7. ' -' → logprob: -14.62694263458252
    8. ']' → logprob: -14.62694263458252
    9. ' ' → logprob: -14.75194263458252
    10. '+a' → logprob: -14.75194263458252

Token 785: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31329622864723206
    2. ' +' → logprob: -1.3132961988449097
    3. '[' → logprob: -10.5632963180542
    4. '+a' → logprob: -12.6882963180542
    5. 'a' → logprob: -13.3132963180542
    6. '+[' → logprob: -14.1882963180542
    7. '+b' → logprob: -14.6882963180542
    8. '+y' → logprob: -15.0632963180542
    9. ')+' → logprob: -15.0632963180542
    10. ')' → logprob: -15.1882963180542

Token 786: ' proj' (ID: 16022)
  Prédit: 'proj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proj' → logprob: -0.0019288709154352546
    2. ' proj' → logprob: -6.251928806304932
    3. 'pro' → logprob: -16.126928329467773
    4. 'prod' → logprob: -16.251928329467773
    5. '   ' → logprob: -17.251928329467773
    6. 'prog' → logprob: -18.626928329467773
    7. 'prot' → logprob: -18.876928329467773
    8. 'prof' → logprob: -19.001928329467773
    9. 'vy' → logprob: -19.751928329467773
    10. ' ' → logprob: -19.751928329467773

Token 787: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.0031860284507274628
    2. 'len' → logprob: -5.753186225891113
    3. 'Len' → logprob: -11.753186225891113
    4. '_LEN' → logprob: -15.753186225891113
    5. 'vel' → logprob: -17.378185272216797
    6. 'lev' → logprob: -17.503185272216797
    7. '[len' → logprob: -17.753185272216797
    8. 'l' → logprob: -18.128185272216797
    9. ' len' → logprob: -18.253185272216797
    10. 'yl' → logprob: -18.378185272216797

Token 788: '*' (ID: 9)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4411773979663849
    2. '*' → logprob: -1.1911773681640625
    3. ' +' → logprob: -2.9411773681640625
    4. ' *' → logprob: -10.441177368164062
    5. 'vy' → logprob: -10.941177368164062
    6. '[' → logprob: -12.941177368164062
    7. ' vy' → logprob: -13.441177368164062
    8. '*v' → logprob: -13.816177368164062
    9. 'Vy' → logprob: -14.691177368164062
    10. 'v' → logprob: -14.816177368164062

Token 789: 'vy' (ID: 16670)
  Prédit: 'vy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -6.392202976712724e-06
    2. ' vy' → logprob: -12.000006675720215
    3. 'v' → logprob: -16.7500057220459
    4. 'vx' → logprob: -17.1250057220459
    5. '
' → logprob: -17.2500057220459
    6. 'wy' → logprob: -17.5000057220459
    7. '1' → logprob: -17.7500057220459
    8. '   ' → logprob: -18.5000057220459
    9. '2' → logprob: -18.6250057220459
    10. 'yv' → logprob: -19.0000057220459

Token 790: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015600820071995258
    2. 'r' → logprob: -5.390600681304932
    3. ' r' → logprob: -5.515600681304932
    4. ' rp' → logprob: -5.640600681304932
    5. 'rp' → logprob: -6.890600681304932
    6. '
' → logprob: -8.01560115814209
    7. '    
' → logprob: -8.14060115814209
    8. ' rx' → logprob: -8.14060115814209
    9. ' return' → logprob: -8.39060115814209
    10. ' q' → logprob: -8.64060115814209

Token 791: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7723570466041565
    2. 'rx' → logprob: -0.7723570466041565
    3. ' rx' → logprob: -2.6473569869995117
    4. 'qx' → logprob: -6.147356986999512
    5. 'dx' → logprob: -7.272356986999512
    6. 'Rx' → logprob: -7.397356986999512
    7. ' ' → logprob: -7.522356986999512
    8. 'return' → logprob: -8.022356986999512
    9. '_rx' → logprob: -8.397356986999512
    10. '#' → logprob: -8.522356986999512

Token 792: ' #' (ID: 1069)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.41372251510620117
    2. ' rx' → logprob: -1.5387225151062012
    3. 'qx' → logprob: -2.663722515106201
    4. 'return' → logprob: -3.788722515106201
    5. 'dx' → logprob: -4.413722515106201
    6. 'x' → logprob: -5.038722515106201
    7. ' return' → logprob: -5.413722515106201
    8. '   ' → logprob: -5.913722515106201
    9. 'px' → logprob: -6.038722515106201
    10. ' dx' → logprob: -7.038722515106201

Token 793: ' vector' (ID: 9727)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.0029886364936828613
    2. 'qx' → logprob: -6.627988815307617
    3. 'return' → logprob: -7.127988815307617
    4. 'dx' → logprob: -7.627988815307617
    5. 'x' → logprob: -8.877988815307617
    6. 'xr' → logprob: -9.127988815307617
    7. ' rx' → logprob: -10.127988815307617
    8. 'Rx' → logprob: -10.877988815307617
    9. 'ref' → logprob: -11.002988815307617
    10. 'px' → logprob: -11.252988815307617

Token 794: ' from' (ID: 591)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.7434253096580505
    2. 'from' → logprob: -1.3684253692626953
    3. 'dx' → logprob: -1.8684253692626953
    4. 'qx' → logprob: -3.4934253692626953
    5. 'cx' → logprob: -3.7434253692626953
    6. ' rx' → logprob: -4.118425369262695
    7. 'px' → logprob: -4.368425369262695
    8. ' from' → logprob: -4.743425369262695
    9. 'rp' → logprob: -5.368425369262695
    10. '(px' → logprob: -5.493425369262695

Token 795: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0035814186558127403
    2. 'cx' → logprob: -5.878581523895264
    3. '(cx' → logprob: -7.628581523895264
    4. '(p' → logprob: -8.753581047058105
    5. 'c' → logprob: -9.378581047058105
    6. '(' → logprob: -11.003581047058105
    7. '(c' → logprob: -11.628581047058105
    8. 'px' → logprob: -11.878581047058105
    9. 'point' → logprob: -12.253581047058105
    10. ' p' → logprob: -12.503581047058105

Token 796: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.26278403401374817
    2. 'x' → logprob: -1.6377840042114258
    3. ' to' → logprob: -3.512784004211426
    4. '[' → logprob: -6.012784004211426
    5. 'cx' → logprob: -6.012784004211426
    6. '_to' → logprob: -7.637784004211426
    7. 'p' → logprob: -8.137784004211426
    8. ' ' → logprob: -8.137784004211426
    9. 'px' → logprob: -8.512784004211426
    10. '(' → logprob: -9.012784004211426

Token 797: ' closest' (ID: 31179)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6628950834274292
    2. 'cx' → logprob: -1.9128950834274292
    3. '(' → logprob: -2.2878952026367188
    4. '(cx' → logprob: -3.0378952026367188
    5. '[' → logprob: -3.1628952026367188
    6. '2' → logprob: -3.4128952026367188
    7. 'p' → logprob: -3.9128952026367188
    8. ' (' → logprob: -4.037895202636719
    9. 'Point' → logprob: -4.162895202636719
    10. '
' → logprob: -4.412895202636719

Token 798: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.4502616822719574
    2. 'x' → logprob: -1.2002617120742798
    3. '[' → logprob: -3.9502615928649902
    4. 'p' → logprob: -4.45026159286499
    5. '_point' → logprob: -4.70026159286499
    6. ' point' → logprob: -4.95026159286499
    7. '   ' → logprob: -5.57526159286499
    8. 'cx' → logprob: -5.95026159286499
    9. '(cx' → logprob: -6.32526159286499
    10. 'px' → logprob: -6.32526159286499

Token 799: '
' (ID: 198)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'px' → logprob: -1.1139193773269653
    2. '   ' → logprob: -1.6139193773269653
    3. 'x' → logprob: -1.7389193773269653
    4. 'cx' → logprob: -2.488919258117676
    5. 'dx' → logprob: -2.738919258117676
    6. 'qx' → logprob: -2.863919258117676
    7. ' px' → logprob: -3.613919258117676
    8. 'wx' → logprob: -4.238919258117676
    9. ' ' → logprob: -4.488919258117676
    10. '(px' → logprob: -4.613919258117676

Token 800: '   ' (ID: 271)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.601742148399353
    2. 'px' → logprob: -1.851742148399353
    3. '   ' → logprob: -2.2267422676086426
    4. ' dx' → logprob: -2.4767422676086426
    5. 'qx' → logprob: -2.7267422676086426
    6. ' px' → logprob: -3.9767422676086426
    7. 'rx' → logprob: -4.601742267608643
    8. 'fx' → logprob: -5.976742267608643
    9. ' rx' → logprob: -6.101742267608643
    10. 'wx' → logprob: -6.351742267608643

Token 801: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' (adapté à ' dx') → logprob: -0.093461774289608
    2. 'cx' → logprob: -3.718461751937866
    3. '2' → logprob: -4.093461990356445
    4. ' dx' → logprob: -4.093461990356445
    5. 'rx' → logprob: -4.593461990356445
    6. '(' → logprob: -5.093461990356445
    7. 'px' → logprob: -5.218461990356445
    8. 'qx' → logprob: -5.218461990356445
    9. '(dx' → logprob: -7.218461990356445
    10. ' ' → logprob: -7.593461990356445

Token 802: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804550692439079
    2. '=' → logprob: -3.2880454063415527
    3. '=c' → logprob: -13.413045883178711
    4. ',' → logprob: -13.913045883178711
    5. ' ' → logprob: -14.288045883178711
    6. ' =(' → logprob: -14.913045883178711
    7. ' =
' → logprob: -16.03804588317871
    8. '=x' → logprob: -16.03804588317871
    9. '=cv' → logprob: -16.53804588317871
    10. '=int' → logprob: -16.91304588317871

Token 803: ' cx' (ID: 44448)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.001548545085825026
    2. ' cx' → logprob: -6.876548767089844
    3. '2' → logprob: -7.626548767089844
    4. '(cx' → logprob: -11.001548767089844
    5. ' ' → logprob: -11.626548767089844
    6. '   ' → logprob: -14.251548767089844
    7. '.cx' → logprob: -14.376548767089844
    8. '(' → logprob: -14.751548767089844
    9. 'c' → logprob: -15.001548767089844
    10. ' (' → logprob: -15.876548767089844

Token 804: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06972020864486694
    2. '-' → logprob: -2.9447202682495117
    3. '-p' → logprob: -4.694720268249512
    4. '*' → logprob: -5.444720268249512
    5. '-w' → logprob: -6.694720268249512
    6. ' *' → logprob: -11.319720268249512
    7. '-x' → logprob: -11.569720268249512
    8. '-v' → logprob: -13.819720268249512
    9. '-k' → logprob: -14.069720268249512
    10. '[' → logprob: -14.194720268249512

Token 805: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.4855663721391466e-05
    2. ' p' → logprob: -11.125015258789062
    3. '[' → logprob: -19.500015258789062
    4. '   ' → logprob: -19.625015258789062
    5. '	p' → logprob: -20.250015258789062
    6. 'px' → logprob: -20.625015258789062
    7. '(p' → logprob: -20.750015258789062
    8. '<p' → logprob: -21.125015258789062
    9. '[p' → logprob: -21.250015258789062
    10. '  ' → logprob: -21.625015258789062

Token 806: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.061968810856342316
    2. '0' → logprob: -2.8119688034057617
    3. '[
' → logprob: -14.811968803405762
    4. '```' → logprob: -15.061968803405762
    5. ' ' → logprob: -16.061969757080078
    6. '.' → logprob: -16.186969757080078
    7. 'x' → logprob: -16.436969757080078
    8. '
' → logprob: -16.561969757080078
    9. '   ' → logprob: -16.811969757080078
    10. '(' → logprob: -17.686969757080078

Token 807: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -14.75
    3. ' ' → logprob: -19.0
    4. '۰' → logprob: -19.75
    5. '
' → logprob: -20.0
    6. '   ' → logprob: -20.125
    7. '```' → logprob: -20.375
    8. '	' → logprob: -22.125
    9. '０' → logprob: -22.1875
    10. '.' → logprob: -22.1875

Token 808: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 809: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31819310784339905
    2. '
' → logprob: -1.3181930780410767
    3. '    
' → logprob: -6.068192958831787
    4. 'dy' → logprob: -6.818192958831787
    5. '  
' → logprob: -7.068192958831787
    6. ' 
' → logprob: -8.568193435668945
    7. ' dy' → logprob: -8.568193435668945
    8. '*' → logprob: -9.068193435668945
    9. '
' → logprob: -9.818193435668945
    10. '   
' → logprob: -10.193193435668945

Token 810: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' (adapté à ' dy') → logprob: -0.489321231842041
    2. '*' → logprob: -0.989321231842041
    3. ' dy' → logprob: -4.989321231842041
    4. '2' → logprob: -5.364321231842041
    5. '   ' → logprob: -6.114321231842041
    6. '
' → logprob: -7.364321231842041
    7. ' *' → logprob: -7.864321231842041
    8. ' ' → logprob: -7.989321231842041
    9. ',' → logprob: -10.989320755004883
    10. '    
' → logprob: -11.114320755004883

Token 811: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869008421897888
    2. ' =' → logprob: -1.1369009017944336
    3. '<|end|>' → logprob: -11.261900901794434
    4. '[' → logprob: -11.636900901794434
    5. ' ' → logprob: -12.386900901794434
    6. '   ' → logprob: -13.261900901794434
    7. '  ' → logprob: -14.761900901794434
    8. '(' → logprob: -15.261900901794434
    9. '    ' → logprob: -15.636900901794434
    10. '=p' → logprob: -15.949400901794434

Token 812: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.001879731542430818
    2. ' cy' → logprob: -6.501879692077637
    3. 'p' → logprob: -8.001879692077637
    4. 'cx' → logprob: -10.376879692077637
    5. 'py' → logprob: -12.126879692077637
    6. ' p' → logprob: -12.626879692077637
    7. 'c' → logprob: -14.001879692077637
    8. 'cyan' → logprob: -14.626879692077637
    9. '.cy' → logprob: -14.751879692077637
    10. '	c' → logprob: -15.376879692077637

Token 813: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6269859075546265
    2. '-' → logprob: -0.8769859075546265
    3. '[' → logprob: -3.001986026763916
    4. '0' → logprob: -10.376985549926758
    5. ' ' → logprob: -11.626985549926758
    6. '[-' → logprob: -11.626985549926758
    7. 'dy' → logprob: -11.876985549926758
    8. '<|end|>' → logprob: -12.376985549926758
    9. '+' → logprob: -12.751985549926758
    10. ' dy' → logprob: -12.876985549926758

Token 814: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.4855663721391466e-05
    2. ' p' → logprob: -11.125015258789062
    3. '<p' → logprob: -18.875015258789062
    4. '	p' → logprob: -19.125015258789062
    5. '[' → logprob: -19.375015258789062
    6. '```' → logprob: -19.375015258789062
    7. '0' → logprob: -20.125015258789062
    8. '
' → logprob: -20.375015258789062
    9. 'п' → logprob: -20.625015258789062
    10. '   ' → logprob: -20.625015258789062

Token 815: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0059302207082509995
    2. '1' → logprob: -5.130930423736572
    3. '```' → logprob: -14.380929946899414
    4. '-' → logprob: -14.880929946899414
    5. '0' → logprob: -15.505929946899414
    6. '[
' → logprob: -15.630929946899414
    7. '(' → logprob: -16.130929946899414
    8. ']' → logprob: -16.255929946899414
    9. '
' → logprob: -16.505929946899414
    10. '   ' → logprob: -17.755929946899414

Token 816: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.125001907348633
    3. '0' → logprob: -16.125001907348633
    4. '۱' → logprob: -17.625001907348633
    5. '１' → logprob: -17.875001907348633
    6. ' ' → logprob: -18.500001907348633
    7. '१' → logprob: -18.875001907348633
    8. '' → logprob: -19.000001907348633
    9. '```' → logprob: -19.125001907348633
    10. '
' → logprob: -19.500001907348633

Token 817: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06396827846765518
    2. ')' → logprob: -3.6889681816101074
    3. ']
' → logprob: -3.6889681816101074
    4. '   ' → logprob: -4.563968181610107
    5. ')
' → logprob: -6.938968181610107
    6. '}' → logprob: -8.188968658447266
    7. '**' → logprob: -9.438968658447266
    8. '<|end|>' → logprob: -9.813968658447266
    9. '}
' → logprob: -10.188968658447266
    10. ' ]' → logprob: -10.438968658447266

Token 818: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019569873809814453
    2. 'return' → logprob: -4.5195698738098145
    3. ' return' → logprob: -4.7695698738098145
    4. '
' → logprob: -14.019569396972656
    5. '	return' → logprob: -14.519569396972656
    6. '  ' → logprob: -15.519569396972656
    7. '    
' → logprob: -15.769569396972656
    8. '   ' → logprob: -15.769569396972656
    9. ' ' → logprob: -16.019569396972656
    10. '       ' → logprob: -17.269569396972656

Token 819: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7123850584030151
    2. 'return' → logprob: -0.7123850584030151
    3. ' return' → logprob: -3.9623851776123047
    4. '
' → logprob: -10.962385177612305
    5. ' ' → logprob: -12.087385177612305
    6. '	return' → logprob: -12.337385177612305
    7. 'ref' → logprob: -13.212385177612305
    8. '    
' → logprob: -13.587385177612305
    9. '   ' → logprob: -13.587385177612305
    10. '  ' → logprob: -13.962385177612305

Token 820: ' reflected' (ID: 45264)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0007893788279034197
    2. ' return' → logprob: -8.000789642333984
    3. 'rx' → logprob: -8.000789642333984
    4. 'ref' → logprob: -10.000789642333984
    5. '(rx' → logprob: -10.500789642333984
    6. 'rp' → logprob: -11.500789642333984
    7. '(' → logprob: -11.625789642333984
    8. 'xr' → logprob: -11.750789642333984
    9. 'qx' → logprob: -11.875789642333984
    10. '(ref' → logprob: -13.000789642333984

Token 821: ' point' (ID: 2438)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6980923414230347
    2. 'x' → logprob: -0.9480923414230347
    3. 'px' → logprob: -2.198092460632324
    4. '[' → logprob: -5.823092460632324
    5. '_x' → logprob: -8.448092460632324
    6. 'point' → logprob: -8.448092460632324
    7. ' px' → logprob: -8.573092460632324
    8. '_px' → logprob: -9.198092460632324
    9. '_point' → logprob: -9.323092460632324
    10. '_p' → logprob: -9.948092460632324

Token 822: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5239458084106445
    2. ' (' → logprob: -2.2739458084106445
    3. 'return' → logprob: -2.3989458084106445
    4. ' =' → logprob: -2.5239458084106445
    5. ' return' → logprob: -3.3989458084106445
    6. '(' → logprob: -3.6489458084106445
    7. '=' → logprob: -3.7739458084106445
    8. '[' → logprob: -4.1489458084106445
    9. '(p' → logprob: -4.3989458084106445
    10. '(cx' → logprob: -4.6489458084106445

Token 823: '   ' (ID: 271)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7414167523384094
    2. ' =' → logprob: -0.8664167523384094
    3. 'return' → logprob: -2.8664166927337646
    4. '   ' → logprob: -3.4914166927337646
    5. ' return' → logprob: -4.741416931152344
    6. '[' → logprob: -6.241416931152344
    7. '(' → logprob: -6.741416931152344
    8. 'x' → logprob: -6.866416931152344
    9. ' (' → logprob: -7.491416931152344
    10. '=
' → logprob: -7.491416931152344

Token 824: ' rx' (ID: 37623)
  Prédit: '(cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cx' → logprob: -0.4594496488571167
    2. 'return' → logprob: -1.4594496488571167
    3. '(rx' → logprob: -2.2094497680664062
    4. '(px' → logprob: -4.084449768066406
    5. '(cp' → logprob: -5.959449768066406
    6. '(x' → logprob: -6.459449768066406
    7. '(r' → logprob: -6.709449768066406
    8. '(cr' → logprob: -6.959449768066406
    9. '(' → logprob: -7.209449768066406
    10. '(p' → logprob: -7.584449768066406

Token 825: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006736811250448227
    2. ' =' → logprob: -5.006736755371094
    3. '=p' → logprob: -11.131736755371094
    4. '=(' → logprob: -12.381736755371094
    5. '=[' → logprob: -13.006736755371094
    6. '[' → logprob: -16.506736755371094
    7. '=x' → logprob: -16.756736755371094
    8. '=
' → logprob: -17.006736755371094
    9. 'p' → logprob: -17.256736755371094
    10. ' =(' → logprob: -17.256736755371094

Token 826: ' p' (ID: 275)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.2830677330493927
    2. 'p' → logprob: -1.6580677032470703
    3. ' cx' → logprob: -3.2830677032470703
    4. '2' → logprob: -4.53306770324707
    5. ' p' → logprob: -5.03306770324707
    6. ' ' → logprob: -7.28306770324707
    7. 'int' → logprob: -8.15806770324707
    8. 'px' → logprob: -9.03306770324707
    9. 'c' → logprob: -9.90806770324707
    10. '(cx' → logprob: -10.15806770324707

Token 827: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.0948158382670954e-05
    2. '0' → logprob: -11.125030517578125
    3. 'x' → logprob: -11.125030517578125
    4. '[
' → logprob: -15.000030517578125
    5. '(' → logprob: -15.625030517578125
    6. '#' → logprob: -15.750030517578125
    7. '```' → logprob: -15.750030517578125
    8. 'def' → logprob: -15.875030517578125
    9. 'import' → logprob: -16.000030517578125
    10. '.' → logprob: -16.875030517578125

Token 828: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.250000953674316
    3. 'x' → logprob: -17.0
    4. '
' → logprob: -17.375
    5. ' ' → logprob: -19.375
    6. '۰' → logprob: -19.875
    7. '1' → logprob: -20.0
    8. '

' → logprob: -20.25
    9. '０' → logprob: -20.5
    10. '(' → logprob: -20.9375

Token 829: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6542673110961914
    2. ' +' → logprob: -0.7792673110961914
    3. '-' → logprob: -4.279267311096191
    4. ' -' → logprob: -4.904267311096191
    5. ')' → logprob: -9.154267311096191
    6. ')+' → logprob: -11.029267311096191
    7. ' ' → logprob: -11.154267311096191
    8. 'dx' → logprob: -12.029267311096191
    9. '2' → logprob: -12.154267311096191
    10. '+x' → logprob: -12.529267311096191

Token 830: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.625017166137695
    3. 'dx' → logprob: -11.750017166137695
    4. '   ' → logprob: -16.500017166137695
    5. '(' → logprob: -17.000017166137695
    6. '
' → logprob: -18.375017166137695
    7. '-' → logprob: -18.375017166137695
    8. '```' → logprob: -18.375017166137695
    9. '3' → logprob: -18.750017166137695
    10. ' dx' → logprob: -18.875017166137695

Token 831: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -4.320199877838604e-07
    2. ' *' → logprob: -14.75
    3. '*(' → logprob: -19.5
    4. '*d' → logprob: -21.5
    5. '**' → logprob: -22.25
    6. 'dx' → logprob: -22.75
    7. '*
' → logprob: -23.0
    8. '*[' → logprob: -23.125
    9. '*object' → logprob: -23.25
    10. '*out' → logprob: -23.875

Token 832: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -7.493430894101039e-05
    2. ' dx' → logprob: -9.500075340270996
    3. '_dx' → logprob: -17.75007438659668
    4. '(dx' → logprob: -18.62507438659668
    5. 'd' → logprob: -19.00007438659668
    6. '.dx' → logprob: -22.25007438659668
    7. 'Dx' → logprob: -22.50007438659668
    8. 'DX' → logprob: -22.75007438659668
    9. '```' → logprob: -23.87507438659668
    10. ' ' → logprob: -24.00007438659668

Token 833: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026652881875634193
    2. '
' → logprob: -3.9016528129577637
    3. '   ' → logprob: -5.276652812957764
    4. ',
' → logprob: -7.401652812957764
    5. ' ,' → logprob: -8.401653289794922
    6. '    
' → logprob: -10.151653289794922
    7. '```' → logprob: -10.401653289794922
    8. ',y' → logprob: -11.276653289794922
    9. 'ry' → logprob: -11.401653289794922
    10. ' 
' → logprob: -11.901653289794922

Token 834: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019532226026058197
    2. '   ' → logprob: -4.644532203674316
    3. '
' → logprob: -5.519532203674316
    4. ' ,' → logprob: -5.519532203674316
    5. ',
' → logprob: -6.644532203674316
    6. '    
' → logprob: -9.019532203674316
    7. 'ry' → logprob: -10.019532203674316
    8. '```' → logprob: -10.269532203674316
    9. ' 
' → logprob: -10.394532203674316
    10. ' ,
' → logprob: -10.519532203674316

Token 835: ' ry' (ID: 23218)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005096780136227608
    2. ' ,' → logprob: -6.005096912384033
    3. ',
' → logprob: -6.755096912384033
    4. ',y' → logprob: -7.755096912384033
    5. ' ry' → logprob: -8.130096435546875
    6. ' dy' → logprob: -8.755096435546875
    7. 'y' → logprob: -9.005096435546875
    8. ' ,
' → logprob: -9.630096435546875
    9. ' ' → logprob: -9.880096435546875
    10. 'ry' (adapté à ' ry') → logprob: -10.005096435546875

Token 836: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.29701054096221924
    2. '+' → logprob: -1.6720105409622192
    3. 'p' → logprob: -4.04701042175293
    4. '=' → logprob: -4.04701042175293
    5. '+p' → logprob: -4.04701042175293
    6. ' +' → logprob: -5.17201042175293
    7. ' p' → logprob: -5.29701042175293
    8. '(p' → logprob: -5.79701042175293
    9. ' =' → logprob: -7.17201042175293
    10. '<|end|>' → logprob: -7.29701042175293

Token 837: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0015023599844425917
    2. ' p' → logprob: -6.501502513885498
    3. 'py' → logprob: -21.751502990722656
    4. '   ' → logprob: -22.376502990722656
    5. '	p' → logprob: -22.376502990722656
    6. ' ' → logprob: -24.376502990722656
    7. '(p' → logprob: -24.376502990722656
    8. '<p' → logprob: -24.626502990722656
    9. '$p' → logprob: -25.001502990722656
    10. ' ' → logprob: -25.501502990722656

Token 838: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0445127372804563e-05
    2. '0' → logprob: -11.62501049041748
    3. '1' → logprob: -13.62501049041748
    4. '```' → logprob: -16.625009536743164
    5. '.' → logprob: -17.125009536743164
    6. '(' → logprob: -17.125009536743164
    7. 'y' → logprob: -18.000009536743164
    8. 'p' → logprob: -18.000009536743164
    9. '[
' → logprob: -18.250009536743164
    10. '2' → logprob: -19.500009536743164

Token 839: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.3358446166384965e-05
    2. '[' → logprob: -9.875053405761719
    3. '0' → logprob: -13.250053405761719
    4. '```' → logprob: -17.87505340576172
    5. '１' → logprob: -18.12505340576172
    6. '
' → logprob: -18.75005340576172
    7. 'p' → logprob: -19.00005340576172
    8. '-' → logprob: -19.25005340576172
    9. ' ' → logprob: -19.25005340576172
    10. '(' → logprob: -19.37505340576172

Token 840: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.020801233127713203
    2. ']+' → logprob: -3.895801305770874
    3. ')+' → logprob: -8.645801544189453
    4. '}+' → logprob: -10.520801544189453
    5. ']' → logprob: -11.020801544189453
    6. ' +' → logprob: -11.270801544189453
    7. '[' → logprob: -11.270801544189453
    8. '+p' → logprob: -11.645801544189453
    9. '()+' → logprob: -13.520801544189453
    10. '+]' → logprob: -13.895801544189453

Token 841: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. 'p' → logprob: -18.125
    4. '(' → logprob: -19.75
    5. '   ' → logprob: -20.5
    6. '0' → logprob: -20.5
    7. '-' → logprob: -20.75
    8. '
' → logprob: -21.375
    9. '```' → logprob: -21.5
    10. '２' → logprob: -22.125

Token 842: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: 0.0
    2. 'dy' → logprob: -18.0
    3. ' *' → logprob: -18.25
    4. '[' → logprob: -18.875
    5. '*y' → logprob: -18.875
    6. '*(' → logprob: -19.125
    7. '*[' → logprob: -19.75
    8. '```' → logprob: -20.875
    9. '*d' → logprob: -21.875
    10. '**' → logprob: -22.375

Token 843: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -3.128163257315464e-07
    2. ' dy' → logprob: -15.5
    3. 'd' → logprob: -20.375
    4. '.dy' → logprob: -20.625
    5. '-d' → logprob: -23.375
    6. 'dry' → logprob: -23.5
    7. 'Dy' → logprob: -23.75
    8. 'def' → logprob: -24.0
    9. 'py' → logprob: -24.125
    10. 'dym' → logprob: -24.5

Token 844: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017452580854296684
    2. ' return' → logprob: -4.517452716827393
    3. 'return' → logprob: -5.392452716827393
    4. ')' → logprob: -7.267452716827393
    5. '	return' → logprob: -7.392452716827393
    6. '
' → logprob: -7.892452716827393
    7. '    
' → logprob: -9.642452239990234
    8. ',' → logprob: -10.642452239990234
    9. '  
' → logprob: -11.517452239990234
    10. ' ' → logprob: -11.642452239990234

Token 845: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036485955119132996
    2. 'return' → logprob: -4.1614861488342285
    3. ' return' → logprob: -4.1614861488342285
    4. ')' → logprob: -5.6614861488342285
    5. '	return' → logprob: -7.1614861488342285
    6. '    
' → logprob: -8.41148567199707
    7. '
' → logprob: -9.28648567199707
    8. ')return' → logprob: -10.66148567199707
    9. '<|end|>' → logprob: -11.16148567199707
    10. '(' → logprob: -11.91148567199707

Token 846: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.727625846862793
    2. '   ' → logprob: -0.977625846862793
    3. ' return' → logprob: -1.977625846862793
    4. ')' → logprob: -6.352625846862793
    5. '	return' → logprob: -7.602625846862793
    6. ')return' → logprob: -10.602625846862793
    7. ',' → logprob: -11.227625846862793
    8. '
' → logprob: -11.352625846862793
    9. '(' → logprob: -11.602625846862793
    10. ' ' → logprob: -11.727625846862793

Token 847: ' (' (ID: 350)
  Prédit: '(rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rx' → logprob: -0.001049838843755424
    2. '(int' → logprob: -7.001049995422363
    3. '(round' → logprob: -9.001049995422363
    4. ' (' → logprob: -12.126049995422363
    5. 'int' → logprob: -12.501049995422363
    6. '(rv' → logprob: -12.501049995422363
    7. 'rx' → logprob: -14.501049995422363
    8. '(rs' → logprob: -14.751049995422363
    9. '(rt' → logprob: -15.251049995422363
    10. '(tx' → logprob: -15.626049995422363

Token 848: 'rx' (ID: 26910)
  Prédit: 'rx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -5.1093578804284334e-05
    2. 'int' → logprob: -10.000051498413086
    3. ' rx' → logprob: -12.250051498413086
    4. '(rx' → logprob: -14.250051498413086
    5. 'round' → logprob: -15.750051498413086
    6. 'ry' → logprob: -16.000051498413086
    7. 'rv' → logprob: -18.125051498413086
    8. '   ' → logprob: -18.375051498413086
    9. 'float' → logprob: -18.625051498413086
    10. '_rx' → logprob: -18.875051498413086

Token 849: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.877503907773644e-05
    2. ' ,' → logprob: -9.250099182128906
    3. ',y' → logprob: -14.375099182128906
    4. ',
' → logprob: -14.625099182128906
    5. ')' → logprob: -14.750099182128906
    6. '<|end|>' → logprob: -15.375099182128906
    7. '‌,' → logprob: -15.750099182128906
    8. ',)' → logprob: -15.875099182128906
    9. ' ry' → logprob: -16.125099182128906
    10. '[' → logprob: -16.125099182128906

Token 850: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -1.5048530030981055e-06
    2. ' ry' → logprob: -13.500001907348633
    3. 'rys' → logprob: -19.375001907348633
    4. 'ryl' → logprob: -20.625001907348633
    5. 'rx' → logprob: -21.000001907348633
    6. '   ' → logprob: -21.125001907348633
    7. '
' → logprob: -21.250001907348633
    8. 'ray' → logprob: -21.500001907348633
    9. 'ryd' → logprob: -21.625001907348633
    10. 'Ry' → logprob: -21.625001907348633

Token 851: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.125
    3. ')
' → logprob: -17.75
    4. '   ' → logprob: -19.125
    5. '}' → logprob: -19.75
    6. '[' → logprob: -20.125
    7. '),' → logprob: -20.25
    8. '))' → logprob: -20.375
    9. ')}' → logprob: -20.375
    10. '')' → logprob: -21.125

Token 852: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1803305745124817
    2. 'n' → logprob: -2.055330514907837
    3. 'N' → logprob: -3.305330514907837
    4. 'if' → logprob: -8.555330276489258
    5. 'for' → logprob: -10.180330276489258
    6. '```' → logprob: -11.430330276489258
    7. '#' → logprob: -11.805330276489258
    8. 'T' → logprob: -12.555330276489258
    9. 'points' → logprob: -12.555330276489258
    10. 't' → logprob: -12.805330276489258

Token 853: ' equal' (ID: 12629)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.20596551895141602
    2. ' main' → logprob: -2.330965518951416
    3. 'solve' → logprob: -3.080965518951416
    4. 'reflect' → logprob: -3.580965518951416
    5. 'fold' → logprob: -6.080965518951416
    6. 'find' → logprob: -6.455965518951416
    7. ' solve' → logprob: -6.580965518951416
    8. 'mirror' → logprob: -6.830965518951416
    9. ' reflect' → logprob: -7.080965518951416
    10. 'conv' → logprob: -7.205965518951416

Token 854: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.5286737680435181
    2. '(p' → logprob: -1.653673768043518
    3. '(' → logprob: -2.1536736488342285
    4. '(a' → logprob: -2.9036736488342285
    5. '_point' → logprob: -3.6536736488342285
    6. '(point' → logprob: -5.1536736488342285
    7. 's' → logprob: -5.1536736488342285
    8. '(_' → logprob: -6.4036736488342285
    9. '(points' → logprob: -6.6536736488342285
    10. '(s' → logprob: -6.9036736488342285

Token 855: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.009661173447966576
    2. '(a' → logprob: -4.7596611976623535
    3. '(' → logprob: -6.8846611976623535
    4. '(points' → logprob: -11.759660720825195
    5. '(point' → logprob: -11.759660720825195
    6. '(s' → logprob: -13.384660720825195
    7. '((' → logprob: -13.509660720825195
    8. ' (' → logprob: -14.009660720825195
    9. '(lhs' → logprob: -14.759660720825195
    10. '(poly' → logprob: -14.759660720825195

Token 856: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5914828181266785
    2. ',q' → logprob: -1.0914828777313232
    3. '1' → logprob: -2.2164828777313232
    4. ',p' → logprob: -6.466482639312744
    5. 'a' → logprob: -9.341483116149902
    6. ',a' → logprob: -9.716483116149902
    7. '0' → logprob: -10.216483116149902
    8. ' ,' → logprob: -10.591483116149902
    9. 's' → logprob: -12.716483116149902
    10. 'q' → logprob: -12.841483116149902

Token 857: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023250021040439606
    2. ',p' → logprob: -3.773250102996826
    3. ' ,' → logprob: -12.398249626159668
    4. 'p' → logprob: -14.898249626159668
    5. '(p' → logprob: -17.648250579833984
    6. ',q' → logprob: -17.898250579833984
    7. ',
' → logprob: -18.148250579833984
    8. '<p' → logprob: -19.148250579833984
    9. ',(' → logprob: -19.523250579833984
    10. '```' → logprob: -19.773250579833984

Token 858: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004082793369889259
    2. ' p' → logprob: -5.504082679748535
    3. 'q' → logprob: -12.629082679748535
    4. ',' → logprob: -14.129082679748535
    5. ',p' → logprob: -15.629082679748535
    6. ')' → logprob: -16.87908363342285
    7. ' ' → logprob: -17.25408363342285
    8. '   ' → logprob: -17.37908363342285
    9. '(p' → logprob: -17.75408363342285
    10. '	p' → logprob: -18.00408363342285

Token 859: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07501339912414551
    2. ',' → logprob: -3.0750133991241455
    3. ',p' → logprob: -3.8250133991241455
    4. '0' → logprob: -5.950013160705566
    5. 'p' → logprob: -7.325013160705566
    6. '2' → logprob: -7.450013160705566
    7. 'oints' → logprob: -8.575013160705566
    8. '_,' → logprob: -9.325013160705566
    9. 'oint' → logprob: -10.200013160705566
    10. '[' → logprob: -10.575013160705566

Token 860: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.025703981518745422
    2. '):
' → logprob: -4.0257039070129395
    3. ',' → logprob: -4.9007039070129395
    4. ',p' → logprob: -10.150704383850098
    5. ')' → logprob: -10.775704383850098
    6. '):
' → logprob: -11.650704383850098
    7. '):

' → logprob: -12.525704383850098
    8. ' ):' → logprob: -12.525704383850098
    9. '):(' → logprob: -12.900704383850098
    10. '(p' → logprob: -13.025704383850098

Token 861: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41114625334739685
    2. 'return' → logprob: -1.2861462831497192
    3. ' return' → logprob: -3.0361461639404297
    4. 'def' → logprob: -4.78614616394043
    5. '(p' → logprob: -5.66114616394043
    6. 'abs' → logprob: -8.03614616394043
    7. '(abs' → logprob: -8.66114616394043
    8. '(' → logprob: -9.28614616394043
    9. '	return' → logprob: -9.53614616394043
    10. '(return' → logprob: -9.78614616394043

Token 862: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0054245502687990665
    2. '   ' → logprob: -5.255424499511719
    3. ' return' → logprob: -8.755424499511719
    4. 'abs' → logprob: -10.380424499511719
    5. 'def' → logprob: -13.630424499511719
    6. '	return' → logprob: -14.255424499511719
    7. 'p' → logprob: -16.25542449951172
    8. '(abs' → logprob: -17.25542449951172
    9. 'epsilon' → logprob: -17.50542449951172
    10. '(p' → logprob: -17.88042449951172

Token 863: ' (' (ID: 350)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.01866559498012066
    2. 'p' → logprob: -4.018665790557861
    3. '(abs' → logprob: -8.268665313720703
    4. 'math' → logprob: -8.768665313720703
    5. ' abs' → logprob: -9.268665313720703
    6. '(p' → logprob: -11.768665313720703
    7. 'all' → logprob: -14.518665313720703
    8. ' p' → logprob: -14.768665313720703
    9. 'int' → logprob: -15.393665313720703
    10. '(math' → logprob: -15.518665313720703

Token 864: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0298537015914917
    2. 'p' → logprob: -3.5298538208007812
    3. 'int' → logprob: -10.279853820800781
    4. ' abs' → logprob: -10.404853820800781
    5. 'round' → logprob: -10.779853820800781
    6. 'math' → logprob: -11.154853820800781
    7. '(abs' → logprob: -12.904853820800781
    8. 'len' → logprob: -14.779853820800781
    9. ' p' → logprob: -15.404853820800781
    10. '   ' → logprob: -15.904853820800781

Token 865: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.2664456789934775e-06
    2. 'p' → logprob: -13.875000953674316
    3. '((' → logprob: -15.500000953674316
    4. '(' → logprob: -16.500001907348633
    5. '(
' → logprob: -18.875001907348633
    6. ')p' → logprob: -18.875001907348633
    7. ')' → logprob: -19.500001907348633
    8. '	p' → logprob: -19.500001907348633
    9. '1' → logprob: -19.750001907348633
    10. 'a' → logprob: -20.250001907348633

Token 866: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06441042572259903
    2. '1' → logprob: -2.814410448074341
    3. '(' → logprob: -6.064410209655762
    4. '0' → logprob: -9.189410209655762
    5. 'p' → logprob: -11.689410209655762
    6. 'x' → logprob: -14.064410209655762
    7. '(p' → logprob: -14.189410209655762
    8. 's' → logprob: -14.564410209655762
    9. '[](' → logprob: -14.564410209655762
    10. ' p' → logprob: -15.314410209655762

Token 867: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.8961017202818766e-05
    2. '(' → logprob: -9.875059127807617
    3. '0' → logprob: -12.125059127807617
    4. 'p' → logprob: -13.500059127807617
    5. '(p' → logprob: -14.625059127807617
    6. '1' → logprob: -16.375059127807617
    7. '   ' → logprob: -17.375059127807617
    8. 'def' → logprob: -18.250059127807617
    9. '```' → logprob: -18.375059127807617
    10. ')' → logprob: -18.625059127807617

Token 868: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.000001907348633
    3. '(' → logprob: -16.875001907348633
    4. ' ' → logprob: -18.750001907348633
    5. '```' → logprob: -19.125001907348633
    6. '   ' → logprob: -19.500001907348633
    7. '1' → logprob: -19.500001907348633
    8. '{' → logprob: -19.500001907348633
    9. '
' → logprob: -19.875001907348633
    10. '۰' → logprob: -20.312501907348633

Token 869: ']-' (ID: 27107)
  Prédit: '-p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-p' → logprob: -0.11882111430168152
    2. ' -' → logprob: -2.368821144104004
    3. '-' → logprob: -3.993821144104004
    4. 'p' → logprob: -11.743821144104004
    5. '[' → logprob: -12.368821144104004
    6. '```' → logprob: -15.118821144104004
    7. ' ' → logprob: -15.993821144104004
    8. ')' → logprob: -16.118820190429688
    9. '[p' → logprob: -16.368820190429688
    10. '   ' → logprob: -16.493820190429688

Token 870: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.107425062713446e-06
    2. ' p' → logprob: -11.875006675720215
    3. '   ' → logprob: -18.75000762939453
    4. '(p' → logprob: -18.87500762939453
    5. '0' → logprob: -19.12500762939453
    6. ')p' → logprob: -19.87500762939453
    7. '	p' → logprob: -20.25000762939453
    8. '<p' → logprob: -20.50000762939453
    9. '  ' → logprob: -21.25000762939453
    10. '2' → logprob: -21.50000762939453

Token 871: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.000001907348633
    3. ' ' → logprob: -17.500001907348633
    4. '0' → logprob: -19.375001907348633
    5. '２' → logprob: -20.000001907348633
    6. '۲' → logprob: -20.375001907348633
    7. '```' → logprob: -20.375001907348633
    8. '₂' → logprob: -20.625001907348633
    9. '   ' → logprob: -21.000001907348633
    10. '(' → logprob: -21.000001907348633

Token 872: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.816093228830141e-06
    2. '0' → logprob: -12.87500286102295
    3. '1' → logprob: -16.125001907348633
    4. '(' → logprob: -17.875001907348633
    5. '[
' → logprob: -18.375001907348633
    6. '2' → logprob: -18.625001907348633
    7. '```' → logprob: -18.875001907348633
    8. '   ' → logprob: -19.000001907348633
    9. '#' → logprob: -19.625001907348633
    10. '
' → logprob: -20.125001907348633

Token 873: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012415809032972902
    2. '[' → logprob: -9.000123977661133
    3. '1' → logprob: -14.750123977661133
    4. ' ' → logprob: -15.625123977661133
    5. '   ' → logprob: -16.750123977661133
    6. '2' → logprob: -16.750123977661133
    7. '(' → logprob: -17.750123977661133
    8. '01' → logprob: -18.625123977661133
    9. '
' → logprob: -18.750123977661133
    10. '-' → logprob: -19.625123977661133

Token 874: '])' (ID: 4636)
  Prédit: ')<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')<' → logprob: -0.6528752446174622
    2. '[' → logprob: -1.5278751850128174
    3. '])' → logprob: -1.5278751850128174
    4. ')' → logprob: -3.4028751850128174
    5. ')<=' → logprob: -4.6528754234313965
    6. ']<' → logprob: -6.0278754234313965
    7. ']<=' → logprob: -9.027874946594238
    8. '0' → logprob: -9.652874946594238
    9. '）' → logprob: -11.277874946594238
    10. ']' → logprob: -11.652874946594238

Token 875: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.11976528912782669
    2. '<=' → logprob: -2.869765281677246
    3. ')<' → logprob: -3.619765281677246
    4. ')<=' → logprob: -3.619765281677246
    5. ')' → logprob: -5.994765281677246
    6. ']<=' → logprob: -10.494765281677246
    7. '<float' → logprob: -10.994765281677246
    8. ' <' → logprob: -11.369765281677246
    9. ' <=' → logprob: -11.869765281677246
    10. '<p' → logprob: -12.119765281677246

Token 876: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '10' → logprob: -13.250001907348633
    3. ' ' → logprob: -14.875001907348633
    4. '=' → logprob: -17.625001907348633
    5. '(' → logprob: -20.375001907348633
    6. '
' → logprob: -20.375001907348633
    7. '   ' → logprob: -20.500001907348633
    8. '```' → logprob: -20.750001907348633
    9. '0' → logprob: -21.250001907348633
    10. '-' → logprob: -22.250001907348633

Token 877: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.006716079078614712
    2. '-' → logprob: -5.006716251373291
    3. '-e' → logprob: -15.006715774536133
    4. '1' → logprob: -15.131715774536133
    5. '**' → logprob: -16.131715774536133
    6. '```' → logprob: -17.006715774536133
    7. 'E' → logprob: -17.381715774536133
    8. '0' → logprob: -18.881715774536133
    9. '
' → logprob: -19.506715774536133
    10. '   ' → logprob: -19.506715774536133

Token 878: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.546478935983032e-05
    2. '9' → logprob: -10.875025749206543
    3. '8' → logprob: -12.500025749206543
    4. '7' → logprob: -13.125025749206543
    5. '6' → logprob: -14.375025749206543
    6. '```' → logprob: -16.500024795532227
    7. '−' → logprob: -17.250024795532227
    8. '{-' → logprob: -17.375024795532227
    9. '10' → logprob: -17.375024795532227
    10. '5' → logprob: -17.375024795532227

Token 879: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.09757540374994278
    2. '8' → logprob: -2.4725754261016846
    3. '7' → logprob: -5.0975751876831055
    4. '10' → logprob: -6.2225751876831055
    5. '6' → logprob: -8.097575187683105
    6. '12' → logprob: -8.597575187683105
    7. '11' → logprob: -12.097575187683105
    8. '15' → logprob: -12.597575187683105
    9. '14' → logprob: -13.097575187683105
    10. '5' → logprob: -13.597575187683105

Token 880: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25510457158088684
    2. 'and' → logprob: -1.5051045417785645
    3. ')' → logprob: -5.7551045417785645
    4. '   ' → logprob: -13.880105018615723
    5. ' )' → logprob: -14.005105018615723
    6. '	and' → logprob: -14.005105018615723
    7. '<|end|>' → logprob: -14.505105018615723
    8. ' or' → logprob: -15.880105018615723
    9. ')&&' → logprob: -16.130104064941406
    10. ',' → logprob: -16.255104064941406

Token 881: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.16022981703281403
    2. ' abs' → logprob: -1.9102298021316528
    3. '   ' → logprob: -12.410229682922363
    4. '(abs' → logprob: -13.910229682922363
    5. '    ' → logprob: -14.535229682922363
    6. '  ' → logprob: -16.66023063659668
    7. ' ' → logprob: -16.66023063659668
    8. '     ' → logprob: -18.03523063659668
    9. '       ' → logprob: -18.16023063659668
    10. '
' → logprob: -18.16023063659668

Token 882: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.9361264946837764e-07
    2. '((' → logprob: -16.625
    3. '(' → logprob: -16.875
    4. ' (' → logprob: -17.875
    5. '(
' → logprob: -18.875
    6. 'p' → logprob: -19.25
    7. '   ' → logprob: -19.25
    8. 'def' → logprob: -21.5
    9. '```' → logprob: -21.625
    10. '
' → logprob: -21.875

Token 883: '1' (ID: 16)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.39955395460128784
    2. '1' → logprob: -1.1495540142059326
    3. 'p' → logprob: -4.3995537757873535
    4. '(' → logprob: -8.399554252624512
    5. ' p' → logprob: -9.774554252624512
    6. '[' → logprob: -10.399554252624512
    7. '0' → logprob: -13.399554252624512
    8. '[p' → logprob: -13.524554252624512
    9. 's' → logprob: -14.024554252624512
    10. ')p' → logprob: -14.399554252624512

Token 884: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.319370302458992e-06
    2. 'p' → logprob: -13.000005722045898
    3. '(' → logprob: -13.500005722045898
    4. '(p' → logprob: -13.625005722045898
    5. '1' → logprob: -15.500005722045898
    6. '```' → logprob: -18.0000057220459
    7. '   ' → logprob: -18.1250057220459
    8. ' p' → logprob: -18.3750057220459
    9. '[p' → logprob: -18.5000057220459
    10. '0' → logprob: -18.5000057220459

Token 885: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07990401983261108
    2. '0' → logprob: -2.579904079437256
    3. '[' → logprob: -7.079904079437256
    4. 'p' → logprob: -8.704903602600098
    5. '(' → logprob: -12.579903602600098
    6. '(p' → logprob: -14.204903602600098
    7. ' ' → logprob: -14.329903602600098
    8. ' p' → logprob: -14.704903602600098
    9. '```' → logprob: -14.829903602600098
    10. '   ' → logprob: -15.329903602600098

Token 886: ']-' (ID: 27107)
  Prédit: '-p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-p' → logprob: -0.7607076168060303
    2. '[' → logprob: -1.0107076168060303
    3. '(p' → logprob: -2.0107076168060303
    4. '(' → logprob: -4.260707855224609
    5. '-' → logprob: -4.385707855224609
    6. 'p' → logprob: -4.885707855224609
    7. ' -' → logprob: -7.885707855224609
    8. '1' → logprob: -9.63570785522461
    9. '[p' → logprob: -9.88570785522461
    10. '<|end|>' → logprob: -10.13570785522461

Token 887: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.531315314830863e-06
    2. ' p' → logprob: -12.750003814697266
    3. '1' → logprob: -14.625003814697266
    4. '   ' → logprob: -17.250003814697266
    5. '0' → logprob: -18.250003814697266
    6. '```' → logprob: -18.875003814697266
    7. '<p' → logprob: -19.500003814697266
    8. '
' → logprob: -19.750003814697266
    9. ')p' → logprob: -20.000003814697266
    10. '(p' → logprob: -20.000003814697266

Token 888: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5698104500770569
    2. '[' → logprob: -0.9448104500770569
    3. '9' → logprob: -3.194810390472412
    4. '-' → logprob: -5.444810390472412
    5. '0' → logprob: -8.94481086730957
    6. '.' → logprob: -9.56981086730957
    7. '   ' → logprob: -9.94481086730957
    8. '```' → logprob: -10.06981086730957
    9. ' ' → logprob: -11.19481086730957
    10. '(' → logprob: -12.94481086730957

Token 889: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.7159857786027715e-05
    2. '-' → logprob: -10.500046730041504
    3. '1' → logprob: -11.375046730041504
    4. '0' → logprob: -11.875046730041504
    5. '```' → logprob: -14.250046730041504
    6. '   ' → logprob: -15.625046730041504
    7. '2' → logprob: -15.625046730041504
    8. '9' → logprob: -16.50004768371582
    9. '**' → logprob: -17.25004768371582
    10. '``' → logprob: -17.75004768371582

Token 890: '1' (ID: 16)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.3387654423713684
    2. '0' → logprob: -1.3387653827667236
    3. '-' → logprob: -4.338765621185303
    4. '1' → logprob: -4.463765621185303
    5. '[' → logprob: -7.588765621185303
    6. '   ' → logprob: -10.463765144348145
    7. ' ' → logprob: -10.588765144348145
    8. '```' → logprob: -10.963765144348145
    9. '(' → logprob: -11.463765144348145
    10. ' -' → logprob: -12.338765144348145

Token 891: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3117224872112274
    2. ']<' → logprob: -2.06172251701355
    3. ')<' → logprob: -2.18672251701355
    4. '[' → logprob: -3.93672251701355
    5. '0' → logprob: -4.811722278594971
    6. '1' → logprob: -8.811722755432129
    7. 'p' → logprob: -9.061722755432129
    8. ')' → logprob: -9.436722755432129
    9. ' ' → logprob: -9.561722755432129
    10. '<' → logprob: -9.561722755432129

Token 892: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.021394304931163788
    2. ')<' → logprob: -3.8963942527770996
    3. '[' → logprob: -7.2713942527771
    4. ']<' → logprob: -9.521394729614258
    5. '()<' → logprob: -9.771394729614258
    6. ')' → logprob: -11.646394729614258
    7. '<p' → logprob: -12.146394729614258
    8. ' <' → logprob: -12.396394729614258
    9. 'p' → logprob: -13.146394729614258
    10. '}<' → logprob: -13.396394729614258

Token 893: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.750003814697266
    3. '9' → logprob: -15.375003814697266
    4. '   ' → logprob: -15.625003814697266
    5. '```' → logprob: -16.625003814697266
    6. '(' → logprob: -16.750003814697266
    7. '0' → logprob: -17.937503814697266
    8. '
' → logprob: -18.000003814697266
    9. '-' → logprob: -18.062503814697266
    10. '=' → logprob: -18.937503814697266

Token 894: 'e' (ID: 68)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0003298632800579071
    2. 'e' → logprob: -8.125329971313477
    3. '0' → logprob: -11.000329971313477
    4. '```' → logprob: -12.250329971313477
    5. '9' → logprob: -12.375329971313477
    6. '   ' → logprob: -13.625329971313477
    7. ' -' → logprob: -13.875329971313477
    8. '``' → logprob: -13.875329971313477
    9. '−' → logprob: -14.375329971313477
    10. '
' → logprob: -14.625329971313477

Token 895: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.931863051955588e-05
    2. '9' → logprob: -9.750059127807617
    3. '```' → logprob: -15.500059127807617
    4. '-​' → logprob: -15.625059127807617
    5. '−' → logprob: -16.000059127807617
    6. '6' → logprob: -16.625059127807617
    7. '``' → logprob: -17.375059127807617
    8. '   ' → logprob: -17.375059127807617
    9. '7' → logprob: -17.687559127807617
    10. ' -' → logprob: -17.687559127807617

Token 896: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.749814019713085e-06
    2. '10' → logprob: -12.375006675720215
    3. '12' → logprob: -14.000006675720215
    4. '6' → logprob: -14.375006675720215
    5. '7' → logprob: -14.875006675720215
    6. '09' → logprob: -15.250006675720215
    7. '8' → logprob: -15.750006675720215
    8. '```' → logprob: -16.00000762939453
    9. ' ' → logprob: -16.50000762939453
    10. '-' → logprob: -17.25000762939453

Token 897: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ')
' → logprob: -13.000003814697266
    3. ' )' → logprob: -13.875003814697266
    4. '())' → logprob: -15.625003814697266
    5. ')return' → logprob: -15.625003814697266
    6. ')

' → logprob: -16.125003814697266
    7. '))' → logprob: -16.875003814697266
    8. '),' → logprob: -17.375003814697266
    9. '   ' → logprob: -17.750003814697266
    10. ' and' → logprob: -18.000003814697266

Token 898: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013025752268731594
    2. 'n' → logprob: -4.388025760650635
    3. 'N' → logprob: -7.888025760650635
    4. 'points' → logprob: -10.138025283813477
    5. 'line' → logprob: -11.388025283813477
    6. 'x' → logprob: -11.388025283813477
    7. 't' → logprob: -11.513025283813477
    8. 'k' → logprob: -11.888025283813477
    9. 'p' → logprob: -12.013025283813477
    10. '
' → logprob: -12.013025283813477

Token 899: ' normalize' (ID: 44464)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.43751612305641174
    2. 'main' → logprob: -1.0625160932540894
    3. ' solve' → logprob: -6.562516212463379
    4. 'solve' → logprob: -6.562516212463379
    5. ' convex' → logprob: -6.687516212463379
    6. 'is' → logprob: -6.812516212463379
    7. 'conv' → logprob: -7.312516212463379
    8. ' is' → logprob: -7.687516212463379
    9. ' find' → logprob: -7.812516212463379
    10. 'equal' → logprob: -8.062516212463379

Token 900: '(poly' (ID: 175644)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.7885468602180481
    2. '_polygon' → logprob: -1.9135468006134033
    3. '_points' → logprob: -2.0385468006134033
    4. '(points' → logprob: -2.2885468006134033
    5. '(poly' → logprob: -2.4135468006134033
    6. '_poly' → logprob: -3.7885468006134033
    7. '_angle' → logprob: -3.7885468006134033
    8. '(p' → logprob: -4.288547039031982
    9. '_vector' → logprob: -4.288547039031982
    10. '(point' → logprob: -6.288547039031982

Token 901: '):
' (ID: 1883)
  Prédit: '(poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -0.039030808955430984
    2. '):' → logprob: -3.2890307903289795
    3. '):
' → logprob: -7.289031028747559
    4. '(p' → logprob: -8.664031028747559
    5. '(pol' → logprob: -9.039031028747559
    6. ')' → logprob: -12.039031028747559
    7. ' ):' → logprob: -12.914031028747559
    8. ' poly' → logprob: -13.289031028747559
    9. '(' → logprob: -13.664031028747559
    10. 'poly' → logprob: -13.914031028747559

Token 902: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007727291435003281
    2. 'n' → logprob: -5.507727146148682
    3. ' n' → logprob: -6.132727146148682
    4. ' poly' → logprob: -7.757727146148682
    5. ' min' → logprob: -8.25772762298584
    6. 'def' → logprob: -8.75772762298584
    7. ' if' → logprob: -8.88272762298584
    8. 'min' → logprob: -9.13272762298584
    9. ' def' → logprob: -9.63272762298584
    10. ' points' → logprob: -9.63272762298584

Token 903: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.42334768176078796
    2. '   ' → logprob: -2.4233477115631104
    3. ' min' → logprob: -2.7983477115631104
    4. 'n' → logprob: -2.9233477115631104
    5. 'if' → logprob: -2.9233477115631104
    6. 'm' → logprob: -3.0483477115631104
    7. ' if' → logprob: -3.6733477115631104
    8. ' n' → logprob: -4.923347473144531
    9. 'def' → logprob: -6.423347473144531
    10. 'while' → logprob: -6.423347473144531

Token 904: ' rotate' (ID: 31987)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2905588746070862
    2. 'if' → logprob: -2.0405588150024414
    3. 'm' → logprob: -3.0405588150024414
    4. 'n' → logprob: -3.4155588150024414
    5. 'def' → logprob: -4.290558815002441
    6. 'poly' → logprob: -4.415558815002441
    7. '   ' → logprob: -5.165558815002441
    8. '#' → logprob: -5.540558815002441
    9. 'while' → logprob: -5.665558815002441
    10. 'pts' → logprob: -7.665558815002441

Token 905: ' to' (ID: 316)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.003762786276638508
    2. ' poly' → logprob: -6.628762722015381
    3. '(poly' → logprob: -6.628762722015381
    4. 'def' → logprob: -6.878762722015381
    5. '   ' → logprob: -9.628763198852539
    6. '_poly' → logprob: -12.753763198852539
    7. '
' → logprob: -12.753763198852539
    8. '-poly' → logprob: -13.753763198852539
    9. '(' → logprob: -13.878763198852539
    10. 'polygon' → logprob: -13.878763198852539

Token 906: ' smallest' (ID: 42173)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.07277731597423553
    2. 'poly' → logprob: -2.822777271270752
    3. 'the' → logprob: -5.572777271270752
    4. 'minimum' → logprob: -6.197777271270752
    5. ' min' → logprob: -6.697777271270752
    6. 'left' → logprob: -7.322777271270752
    7. '   ' → logprob: -7.322777271270752
    8. 'minimal' → logprob: -7.572777271270752
    9. 'lowest' → logprob: -7.572777271270752
    10. 'find' → logprob: -8.32277774810791

Token 907: ' lex' (ID: 37772)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.1873103380203247
    2. 'range' → logprob: -2.687310218811035
    3. 'point' → logprob: -3.437310218811035
    4. 'index' → logprob: -3.437310218811035
    5. '(poly' → logprob: -4.062310218811035
    6. 'idx' → logprob: -4.437310218811035
    7. '[' → logprob: -6.437310218811035
    8. 'lex' → logprob: -6.437310218811035
    9. 'x' → logprob: -6.812310218811035
    10. 'p' → logprob: -7.187310218811035

Token 908: ' point' (ID: 2438)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.1966027021408081
    2. 'ic' → logprob: -2.1966028213500977
    3. '(poly' → logprob: -3.1966028213500977
    4. 'point' → logprob: -4.321602821350098
    5. 'order' → logprob: -5.321602821350098
    6. ' poly' → logprob: -6.571602821350098
    7. 'sort' → logprob: -6.696602821350098
    8. 'ico' → logprob: -6.821602821350098
    9. 'sorted' → logprob: -6.821602821350098
    10. '_point' → logprob: -7.571602821350098

Token 909: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33055415749549866
    2. '(poly' → logprob: -1.4555541276931763
    3. 'poly' → logprob: -4.080554008483887
    4. '
' → logprob: -4.955554008483887
    5. ' poly' → logprob: -5.330554008483887
    6. 'idx' → logprob: -5.705554008483887
    7. ':
' → logprob: -6.205554008483887
    8. 'while' → logprob: -6.205554008483887
    9. ':' → logprob: -6.455554008483887
    10. 'def' → logprob: -6.580554008483887

Token 910: ' then' (ID: 1815)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35145246982574463
    2. ' poly' → logprob: -2.101452350616455
    3. ' min' → logprob: -2.726452350616455
    4. 'min' → logprob: -3.101452350616455
    5. ' idx' → logprob: -4.351452350616455
    6. ' n' → logprob: -4.351452350616455
    7. 'def' → logprob: -4.601452350616455
    8. 'n' → logprob: -4.726452350616455
    9. ' while' → logprob: -5.226452350616455
    10. 'poly' → logprob: -5.351452350616455

Token 911: ' check' (ID: 2371)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.2013762891292572
    2. 'def' → logprob: -2.82637619972229
    3. '   ' → logprob: -2.95137619972229
    4. ' poly' → logprob: -3.20137619972229
    5. 'return' → logprob: -3.95137619972229
    6. 'reverse' → logprob: -5.826376438140869
    7. 'sort' → logprob: -5.951376438140869
    8. ' return' → logprob: -6.201376438140869
    9. 'if' → logprob: -7.576376438140869
    10. ' def' → logprob: -7.576376438140869

Token 912: ' order' (ID: 2569)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.01570463180542
    2. 'if' → logprob: -1.89070463180542
    3. 'len' → logprob: -1.89070463180542
    4. ' poly' → logprob: -2.01570463180542
    5. '   ' → logprob: -2.14070463180542
    6. 'poly' → logprob: -2.76570463180542
    7. ' len' → logprob: -4.26570463180542
    8. ' for' → logprob: -5.76570463180542
    9. 'for' → logprob: -6.39070463180542
    10. ' all' → logprob: -7.14070463180542

Token 913: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0723329707980156
    2. '(poly' → logprob: -2.8223328590393066
    3. 'poly' → logprob: -5.197332859039307
    4. 'def' → logprob: -5.697332859039307
    5. '(p' → logprob: -8.072333335876465
    6. '```' → logprob: -8.197333335876465
    7. '
' → logprob: -8.322333335876465
    8. ' poly' → logprob: -8.822333335876465
    9. 'if' → logprob: -9.572333335876465
    10. ' if' → logprob: -9.697333335876465

Token 914: ' keep' (ID: 3357)
  Prédit: 'ensure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ensure' → logprob: -0.12496689707040787
    2. ' ensure' → logprob: -2.874966859817505
    3. 'return' → logprob: -3.749966859817505
    4. 'def' → logprob: -4.624967098236084
    5. 'make' → logprob: -5.124967098236084
    6. 'poly' → logprob: -5.249967098236084
    7. 'maint' → logprob: -5.624967098236084
    8. 'keep' → logprob: -5.749967098236084
    9. 'check' → logprob: -5.749967098236084
    10. 'reverse' → logprob: -6.374967098236084

Token 915: ' cc' (ID: 22988)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.44648924469947815
    2. 'def' → logprob: -1.6964892148971558
    3. '   ' → logprob: -2.0714893341064453
    4. 'True' → logprob: -4.446489334106445
    5. 'area' → logprob: -4.446489334106445
    6. ' poly' → logprob: -4.696489334106445
    7. 'len' → logprob: -6.321489334106445
    8. '1' → logprob: -6.446489334106445
    9. ' True' → logprob: -6.571489334106445
    10. 'conv' → logprob: -6.571489334106445

Token 916: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -7.703443770878948e-06
    2. '
' → logprob: -12.500007629394531
    3. 'wise' → logprob: -13.500007629394531
    4. '

' → logprob: -14.000007629394531
    5. 'wr' → logprob: -15.375007629394531
    6. 'ｗ' → logprob: -15.625007629394531
    7. 'wn' → logprob: -15.625007629394531
    8. 'ww' → logprob: -16.00000762939453
    9. '``' → logprob: -16.00000762939453
    10. '```' → logprob: -16.12500762939453

Token 917: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2578012943267822
    2. '
' → logprob: -2.2578012943267822
    3. '(poly' → logprob: -2.8828012943267822
    4. ':' → logprob: -4.257801055908203
    5. 'poly' → logprob: -4.382801055908203
    6. ':
' → logprob: -4.632801055908203
    7. ' poly' → logprob: -4.757801055908203
    8. 'def' → logprob: -4.882801055908203
    9. '(p' → logprob: -5.632801055908203
    10. ',' → logprob: -6.757801055908203

Token 918: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07590935379266739
    2. ' if' → logprob: -3.325909376144409
    3. 'n' → logprob: -3.700909376144409
    4. 'if' → logprob: -5.57590913772583
    5. ' n' → logprob: -5.70090913772583
    6. '
' → logprob: -6.32590913772583
    7. 'min' → logprob: -6.70090913772583
    8. 'def' → logprob: -7.20090913772583
    9. ' min' → logprob: -7.45090913772583
    10. 'idx' → logprob: -7.82590913772583

Token 919: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6982688307762146
    2. 'min' → logprob: -1.9482688903808594
    3. 'if' → logprob: -2.0732688903808594
    4. 'n' (adapté à ' n') → logprob: -2.1982688903808594
    5. ' if' → logprob: -2.4482688903808594
    6. 'm' → logprob: -4.198268890380859
    7. ' n' → logprob: -4.448268890380859
    8. ' min' → logprob: -4.823268890380859
    9. 'def' → logprob: -7.073268890380859
    10. ' m' → logprob: -7.948268890380859

Token 920: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.316407710313797
    2. ' =' → logprob: -1.3164076805114746
    3. '=len' → logprob: -5.816407680511475
    4. '(poly' → logprob: -9.066408157348633
    5. '=int' → logprob: -10.566408157348633
    6. '   ' → logprob: -11.191408157348633
    7. '=n' → logprob: -13.066408157348633
    8. '=p' → logprob: -14.066408157348633
    9. '=size' → logprob: -14.191408157348633
    10. 'poly' → logprob: -14.441408157348633

Token 921: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0009249189170077443
    2. ' len' → logprob: -7.000925064086914
    3. '(len' → logprob: -11.250925064086914
    4. 'poly' → logprob: -15.000925064086914
    5. '=len' → logprob: -16.500925064086914
    6. '[len' → logprob: -16.875925064086914
    7. ',len' → logprob: -17.875925064086914
    8. ' poly' → logprob: -18.375925064086914
    9. '	len' → logprob: -18.750925064086914
    10. '   ' → logprob: -19.375925064086914

Token 922: '(poly' (ID: 175644)
  Prédit: '(poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(poly' → logprob: -9.627176768844947e-05
    2. 'poly' → logprob: -9.250096321105957
    3. '(pol' → logprob: -17.87509536743164
    4. '_poly' → logprob: -18.25009536743164
    5. ' poly' → logprob: -18.37509536743164
    6. '/poly' → logprob: -20.50009536743164
    7. 'Poly' → logprob: -21.12509536743164
    8. '(' → logprob: -21.75009536743164
    9. '.poly' → logprob: -22.50009536743164
    10. '-poly' → logprob: -22.62509536743164

Token 923: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0040011112578213215
    2. ')' → logprob: -6.004001140594482
    3. '   ' → logprob: -6.504001140594482
    4. ')
' → logprob: -10.754000663757324
    5. '(poly' → logprob: -13.129000663757324
    6. '
' → logprob: -13.504000663757324
    7. 'def' → logprob: -14.379000663757324
    8. ' )
' → logprob: -14.504000663757324
    9. 'poly' → logprob: -14.754000663757324
    10. '())
' → logprob: -15.629000663757324

Token 924: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49481287598609924
    2. 'min' → logprob: -0.9948128461837769
    3. ' min' → logprob: -4.244812965393066
    4. 'idx' → logprob: -5.744812965393066
    5. ' idx' → logprob: -6.744812965393066
    6. 'pos' → logprob: -7.744812965393066
    7. ' pos' → logprob: -8.619812965393066
    8. 'm' → logprob: -8.619812965393066
    9. '
' → logprob: -8.619812965393066
    10. 'i' → logprob: -8.869812965393066

Token 925: ' idx' (ID: 14016)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.027430975809693336
    2. 'start' → logprob: -4.527431011199951
    3. 'mi' → logprob: -5.277431011199951
    4. 'idx' (adapté à ' idx') → logprob: -5.402431011199951
    5. '   ' → logprob: -5.777431011199951
    6. 'if' → logprob: -6.402431011199951
    7. 'm' → logprob: -6.652431011199951
    8. 'pos' → logprob: -9.027430534362793
    9. 'mn' → logprob: -9.152430534362793
    10. 'mint' → logprob: -9.277430534362793

Token 926: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003181159496307373
    2. ' =' → logprob: -5.753180980682373
    3. '=min' → logprob: -13.003181457519531
    4. '   ' → logprob: -14.753181457519531
    5. '=max' → logprob: -15.128181457519531
    6. '_=' → logprob: -15.503181457519531
    7. '=int' → logprob: -15.503181457519531
    8. '=
' → logprob: -16.25318145751953
    9. '=_' → logprob: -17.50318145751953
    10. 'min' → logprob: -17.62818145751953

Token 927: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04889516159892082
    2. 'min' → logprob: -3.0488951206207275
    3. ' min' → logprob: -8.548894882202148
    4. ' ' → logprob: -9.173894882202148
    5. 'poly' → logprob: -11.548894882202148
    6. '	min' → logprob: -15.548894882202148
    7. '
' → logprob: -16.29889488220215
    8. '   ' → logprob: -16.42389488220215
    9. '  ' → logprob: -16.92389488220215
    10. ' poly' → logprob: -16.92389488220215

Token 928: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029769696295261383
    2. 'min' → logprob: -3.5297696590423584
    3. 'poly' → logprob: -10.904769897460938
    4. ' min' → logprob: -14.529769897460938
    5. ' ' → logprob: -15.154769897460938
    6. 'sorted' → logprob: -17.529769897460938
    7. '	min' → logprob: -18.154769897460938
    8. '.min' → logprob: -18.279769897460938
    9. 'minimum' → logprob: -18.279769897460938
    10. '```' → logprob: -18.279769897460938

Token 929: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.252471387386322
    2. '
' → logprob: -1.5024714469909668
    3. ' for' → logprob: -7.752471446990967
    4. '   ' → logprob: -9.127470970153809
    5. '
' → logprob: -14.002470970153809
    6. '	for' → logprob: -14.377470970153809
    7. 'while' → logprob: -14.752470970153809
    8. '    
' → logprob: -14.877470970153809
    9. '1' → logprob: -14.877470970153809
    10. ' 
' → logprob: -15.252470970153809

Token 930: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005672106635756791
    2. ' for' → logprob: -7.500567436218262
    3. '
' → logprob: -11.375567436218262
    4. '   ' → logprob: -12.875567436218262
    5. '	for' → logprob: -15.500567436218262
    6. '```' → logprob: -17.750566482543945
    7. 'while' → logprob: -19.375566482543945
    8. '1' → logprob: -20.000566482543945
    9. '<|end|>' → logprob: -20.250566482543945
    10. 'min' → logprob: -20.250566482543945

Token 931: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.696889623621246e-06
    2. '   ' → logprob: -13.50000286102295
    3. ' for' → logprob: -13.62500286102295
    4. '
' → logprob: -16.875001907348633
    5. '	for' → logprob: -20.125001907348633
    6. 'while' → logprob: -20.375001907348633
    7. 'min' → logprob: -20.625001907348633
    8. '```' → logprob: -21.125001907348633
    9. '_for' → logprob: -23.250001907348633
    10. 'import' → logprob: -23.500001907348633

Token 932: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.7610454708337784e-05
    2. ' i' → logprob: -10.500027656555176
    3. '_i' → logprob: -18.00002670288086
    4. '	i' → logprob: -19.25002670288086
    5. '_' → logprob: -20.87502670288086
    6. ' ' → logprob: -21.25002670288086
    7. '   ' → logprob: -21.62502670288086
    8. 'k' → logprob: -23.12502670288086
    9. 'in' → logprob: -23.37502670288086
    10. 'I' → logprob: -23.50002670288086

Token 933: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018153101205825806
    2. 'in' → logprob: -4.018153190612793
    3. '1' → logprob: -13.768153190612793
    4. ' ' → logprob: -13.893153190612793
    5. 'range' → logprob: -13.893153190612793
    6. 'i' → logprob: -16.268152236938477
    7. 'In' → logprob: -16.643152236938477
    8. '   ' → logprob: -17.143152236938477
    9. '	in' → logprob: -17.143152236938477
    10. ' i' → logprob: -17.643152236938477

Token 934: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033546582562848926
    2. ' range' → logprob: -8.000335693359375
    3. '1' → logprob: -16.750335693359375
    4. '(range' → logprob: -19.750335693359375
    5. '   ' → logprob: -21.875335693359375
    6. ' ' → logprob: -21.875335693359375
    7. '	range' → logprob: -22.000335693359375
    8. '
' → logprob: -22.500335693359375
    9. 'in' → logprob: -22.875335693359375
    10. '`' → logprob: -23.500335693359375

Token 935: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031964892987161875
    2. 'n' → logprob: -5.753196716308594
    3. '(' → logprob: -11.003196716308594
    4. '(n' → logprob: -13.253196716308594
    5. ' ' → logprob: -16.003196716308594
    6. '
' → logprob: -16.378196716308594
    7. '   ' → logprob: -17.128196716308594
    8. ' n' → logprob: -17.503196716308594
    9. '```' → logprob: -18.503196716308594
    10. '	n' → logprob: -18.628196716308594

Token 936: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02054247073829174
    2. 'n' → logprob: -3.8955423831939697
    3. '
' → logprob: -15.39554214477539
    4. ' n' → logprob: -15.64554214477539
    5. ' ' → logprob: -15.89554214477539
    6. '(' → logprob: -17.02054214477539
    7. '(n' → logprob: -17.39554214477539
    8. '	n' → logprob: -17.64554214477539
    9. '```' → logprob: -17.64554214477539
    10. '   ' → logprob: -17.89554214477539

Token 937: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.5771984457969666
    2. 'n' → logprob: -1.0771985054016113
    3. ',' → logprob: -2.3271985054016113
    4. ' n' → logprob: -8.577198028564453
    5. '(n' → logprob: -8.827198028564453
    6. '1' → logprob: -10.202198028564453
    7. ' ,' → logprob: -11.202198028564453
    8. '<n' → logprob: -11.577198028564453
    9. ',
' → logprob: -12.202198028564453
    10. '   ' → logprob: -12.452198028564453

Token 938: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5048824548721313
    2. ':
' → logprob: -1.1298824548721313
    3. ':' → logprob: -2.629882335662842
    4. '):' → logprob: -7.254882335662842
    5. '():
' → logprob: -8.1298828125
    6. '   ' → logprob: -8.5048828125
    7. '       ' → logprob: -10.5048828125
    8. ']:
' → logprob: -12.0048828125
    9. '
' → logprob: -12.3798828125
    10. ',' → logprob: -12.5048828125

Token 939: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025148803368210793
    2. ' if' → logprob: -3.900148868560791
    3. '   ' → logprob: -5.775148868560791
    4. 'if' → logprob: -6.525148868560791
    5. '```' → logprob: -11.900148391723633
    6. ',' → logprob: -12.400148391723633
    7. '<|end|>' → logprob: -12.525148391723633
    8. '	if' → logprob: -12.650148391723633
    9. ' ' → logprob: -13.150148391723633
    10. '    ' → logprob: -13.525148391723633

Token 940: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0011504596332088113
    2. ' if' → logprob: -7.001150608062744
    3. '       ' → logprob: -8.501150131225586
    4. '   ' → logprob: -10.251150131225586
    5. '	if' → logprob: -15.376150131225586
    6. 'x' → logprob: -17.251150131225586
    7. '           ' → logprob: -18.751150131225586
    8. '    ' → logprob: -18.876150131225586
    9. '```' → logprob: -19.001150131225586
    10. 'If' → logprob: -19.126150131225586

Token 941: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.016100650653243065
    2. ' poly' → logprob: -4.141100883483887
    3. '(poly' → logprob: -9.641100883483887
    4. '   ' → logprob: -14.141100883483887
    5. 'pol' → logprob: -15.391100883483887
    6. '_poly' → logprob: -16.14109992980957
    7. ' ' → logprob: -16.64109992980957
    8. '
' → logprob: -16.64109992980957
    9. '/poly' → logprob: -16.89109992980957
    10. '-poly' → logprob: -17.26609992980957

Token 942: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.65707261255011e-06
    2. '[' → logprob: -11.875008583068848
    3. 'poly' → logprob: -13.875008583068848
    4. '
' → logprob: -15.875008583068848
    5. '[idx' → logprob: -16.000009536743164
    6. '[
' → logprob: -16.125009536743164
    7. 'i' → logprob: -17.000009536743164
    8. '[n' → logprob: -17.000009536743164
    9. '   ' → logprob: -17.375009536743164
    10. ' [' → logprob: -17.375009536743164

Token 943: ']<' (ID: 80424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.06685195118188858
    2. '[' → logprob: -2.941851854324341
    3. ']<' → logprob: -5.06685209274292
    4. ' <' → logprob: -5.31685209274292
    5. ']' → logprob: -7.56685209274292
    6. '<[' → logprob: -10.566851615905762
    7. '][' → logprob: -10.691851615905762
    8. ')<' → logprob: -10.816851615905762
    9. 'poly' → logprob: -10.941851615905762
    10. '<(' → logprob: -11.191851615905762

Token 944: 'poly' (ID: 64486)
  Prédit: 'poly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.00020401719666551799
    2. ' poly' → logprob: -8.500204086303711
    3. '(poly' → logprob: -14.500204086303711
    4. 'pol' → logprob: -16.50020408630371
    5. '_poly' → logprob: -18.75020408630371
    6. 'py' → logprob: -18.87520408630371
    7. '   ' → logprob: -20.25020408630371
    8. '
' → logprob: -20.62520408630371
    9. '.poly' → logprob: -20.87520408630371
    10. '/poly' → logprob: -20.87520408630371

Token 945: '[idx' (ID: 25582)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6931508779525757
    2. '[idx' → logprob: -0.6931508779525757
    3. '[' → logprob: -12.818150520324707
    4. '[index' → logprob: -15.068150520324707
    5. 'idx' → logprob: -15.193150520324707
    6. '[j' → logprob: -16.068151473999023
    7. '[min' → logprob: -16.193151473999023
    8. '[n' → logprob: -16.943151473999023
    9. '[ix' → logprob: -17.318151473999023
    10. '```' → logprob: -17.318151473999023

Token 946: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32567501068115234
    2. ':
' → logprob: -1.8256750106811523
    3. ']:' → logprob: -2.8256750106811523
    4. ']:
' → logprob: -3.3256750106811523
    5. '[i' → logprob: -4.575675010681152
    6. ':i' → logprob: -5.450675010681152
    7. '       ' → logprob: -5.950675010681152
    8. '   ' → logprob: -6.825675010681152
    9. '):
' → logprob: -6.950675010681152
    10. '):' → logprob: -7.450675010681152

Token 947: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20092280209064484
    2. 'idx' → logprob: -2.075922727584839
    3. '       ' → logprob: -3.575922727584839
    4. ':' → logprob: -4.200922966003418
    5. '[idx' → logprob: -5.200922966003418
    6. ' idx' → logprob: -5.825922966003418
    7. '   ' → logprob: -5.950922966003418
    8. '	idx' → logprob: -7.075922966003418
    9. '
' → logprob: -7.700922966003418
    10. '_idx' → logprob: -8.325922966003418

Token 948: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.006376056466251612
    2. 'i' → logprob: -5.756376266479492
    3. ' idx' → logprob: -5.756376266479492
    4. ' i' → logprob: -11.381376266479492
    5. '	idx' → logprob: -11.756376266479492
    6. '_idx' → logprob: -12.631376266479492
    7. '           ' → logprob: -13.006376266479492
    8. '       ' → logprob: -13.881376266479492
    9. '[idx' → logprob: -13.881376266479492
    10. '
' → logprob: -14.006376266479492

Token 949: '=i' (ID: 48141)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25227105617523193
    2. '=i' → logprob: -1.502271056175232
    3. ' =' → logprob: -8.002270698547363
    4. '=int' → logprob: -13.127270698547363
    5. '=n' → logprob: -13.627270698547363
    6. '=a' → logprob: -14.627270698547363
    7. '=index' → logprob: -14.752270698547363
    8. '=p' → logprob: -15.002270698547363
    9. '=user' → logprob: -15.002270698547363
    10. '=s' → logprob: -15.127270698547363

Token 950: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020976364612579346
    2. '
' → logprob: -3.8959763050079346
    3. '    
' → logprob: -8.270976066589355
    4. '```' → logprob: -9.270976066589355
    5. '<|end|>' → logprob: -10.270976066589355
    6. '       ' → logprob: -11.520976066589355
    7. ',' → logprob: -12.145976066589355
    8. '  
' → logprob: -12.395976066589355
    9. '<|end|>' → logprob: -12.645976066589355
    10. 'poly' → logprob: -12.645976066589355

Token 951: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2537831962108612
    2. '
' → logprob: -1.5037832260131836
    3. '    
' → logprob: -6.628783226013184
    4. '```' → logprob: -9.378783226013184
    5. '  
' → logprob: -9.503783226013184
    6. ' poly' → logprob: -9.753783226013184
    7. 'poly' → logprob: -9.753783226013184
    8. '       ' → logprob: -10.503783226013184
    9. '<|end|>' → logprob: -10.503783226013184
    10. ',' → logprob: -10.753783226013184

Token 952: ' res' (ID: 694)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.03011120855808258
    2. '   ' → logprob: -4.280111312866211
    3. 'normalized' → logprob: -4.405111312866211
    4. 'if' → logprob: -6.655111312866211
    5. 'norm' → logprob: -7.405111312866211
    6. 'rot' → logprob: -7.655111312866211
    7. '```' → logprob: -7.780111312866211
    8. '
' → logprob: -8.155111312866211
    9. ' poly' → logprob: -9.155111312866211
    10. 'n' → logprob: -9.155111312866211

Token 953: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38822707533836365
    2. '=' → logprob: -1.138227105140686
    3. '=[]' → logprob: -6.6382269859313965
    4. '=[]
' → logprob: -10.388227462768555
    5. '=[' → logprob: -12.138227462768555
    6. '={}' → logprob: -13.638227462768555
    7. ' =[' → logprob: -13.763227462768555
    8. '=array' → logprob: -13.763227462768555
    9. '=int' → logprob: -14.513227462768555
    10. '=res' → logprob: -14.638227462768555

Token 954: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -0.0007104054093360901
    2. ' poly' → logprob: -7.250710487365723
    3. '(poly' → logprob: -14.875710487365723
    4. '[' → logprob: -17.375709533691406
    5. 'pol' → logprob: -18.250709533691406
    6. ' ' → logprob: -19.125709533691406
    7. '   ' → logprob: -19.250709533691406
    8. '[]' → logprob: -19.500709533691406
    9. '[]
' → logprob: -20.000709533691406
    10. 'polygon' → logprob: -20.750709533691406

Token 955: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.5048530030981055e-06
    2. '[n' → logprob: -13.875001907348633
    3. '[-' → logprob: -15.875001907348633
    4. '[' → logprob: -16.000001907348633
    5. 'idx' → logprob: -16.125001907348633
    6. '[i' → logprob: -16.500001907348633
    7. '(idx' → logprob: -18.125001907348633
    8. '[id' → logprob: -18.375001907348633
    9. '```' → logprob: -18.625001907348633
    10. '[:]' → logprob: -18.625001907348633

Token 956: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.16023163497447968
    2. ':' → logprob: -1.910231590270996
    3. ':n' → logprob: -12.410231590270996
    4. 'n' → logprob: -12.785231590270996
    5. ':].' → logprob: -15.910231590270996
    6. '::' → logprob: -16.535232543945312
    7. ':i' → logprob: -16.660232543945312
    8. '[n' → logprob: -16.785232543945312
    9. ':]

' → logprob: -16.910232543945312
    10. ':]
' → logprob: -16.910232543945312

Token 957: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007174347410909832
    2. ' +' → logprob: -7.250717639923096
    3. '+p' → logprob: -11.875717163085938
    4. 'poly' → logprob: -14.875717163085938
    5. '+self' → logprob: -15.625717163085938
    6. '+
' → logprob: -17.125717163085938
    7. '+[' → logprob: -17.375717163085938
    8. '   ' → logprob: -17.750717163085938
    9. '＋' → logprob: -18.500717163085938
    10. ' poly' → logprob: -19.125717163085938

Token 958: ' poly' (ID: 14600)
  Prédit: 'poly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poly' → logprob: -3.547789674485102e-05
    2. ' poly' → logprob: -10.250035285949707
    3. '(poly' → logprob: -19.875036239624023
    4. 'pol' → logprob: -20.750036239624023
    5. '-poly' → logprob: -23.875036239624023
    6. 'Poly' → logprob: -24.500036239624023
    7. '_poly' → logprob: -24.625036239624023
    8. '.poly' → logprob: -26.000036239624023
    9. '/poly' → logprob: -26.500036239624023
    10. ' ' → logprob: -27.250036239624023

Token 959: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.625000953674316
    3. '[:-' → logprob: -17.0
    4. '[:]' → logprob: -19.25
    5. '][:' → logprob: -20.125
    6. ' [:' → logprob: -20.25
    7. '(:' → logprob: -20.875
    8. 's' → logprob: -21.125
    9. '[idx' → logprob: -21.375
    10. '[:,' → logprob: -21.5

Token 960: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -4.320199877838604e-07
    2. ' idx' → logprob: -14.75
    3. '	idx' → logprob: -18.25
    4. '(idx' → logprob: -20.375
    5. '_idx' → logprob: -21.375
    6. '[idx' → logprob: -21.5
    7. '   ' → logprob: -22.375
    8. '.idx' → logprob: -23.25
    9. 'index' → logprob: -23.375
    10. ' ' → logprob: -23.5

Token 961: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017475424334406853
    2. ']
' → logprob: -4.392475605010986
    3. ')' → logprob: -5.392475605010986
    4. '   ' → logprob: -8.267475128173828
    5. 'def' → logprob: -10.017475128173828
    6. ')
' → logprob: -10.142475128173828
    7. 'return' → logprob: -10.892475128173828
    8. ' ]' → logprob: -11.142475128173828
    9. ']

' → logprob: -12.142475128173828
    10. '<|end|>' → logprob: -12.267475128173828

Token 962: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0884048119187355
    2. ' if' → logprob: -3.088404893875122
    3. '
' → logprob: -3.963404893875122
    4. 'if' → logprob: -3.963404893875122
    5. '```' → logprob: -7.463404655456543
    6. '    
' → logprob: -8.338404655456543
    7. '[::-' → logprob: -9.213404655456543
    8. ',' → logprob: -10.588404655456543
    9. '	if' → logprob: -10.838404655456543
    10. '``' → logprob: -11.338404655456543

Token 963: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.016288429498672485
    2. '   ' → logprob: -4.5162882804870605
    3. ' if' → logprob: -5.2662882804870605
    4. 'p' → logprob: -10.891288757324219
    5. '
' → logprob: -11.641288757324219
    6. 'n' → logprob: -12.141288757324219
    7. 'reverse' → logprob: -12.391288757324219
    8. 'x' → logprob: -12.516288757324219
    9. 'import' → logprob: -12.766288757324219
    10. '#' (adapté à ' #') → logprob: -12.766288757324219

Token 964: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007874790579080582
    2. '   ' → logprob: -5.257874965667725
    3. 'area' → logprob: -7.007874965667725
    4. 'x' → logprob: -7.507874965667725
    5. ' if' → logprob: -8.007874488830566
    6. 'dx' → logprob: -8.257874488830566
    7. 'def' → logprob: -8.507874488830566
    8. '#' → logprob: -9.757874488830566
    9. 'return' → logprob: -10.132874488830566
    10. 'val' → logprob: -10.382874488830566

Token 965: ' area' (ID: 3624)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7213130593299866
    2. 'orientation' → logprob: -1.0963129997253418
    3. ' if' → logprob: -1.9713129997253418
    4. ' orientation' → logprob: -3.846312999725342
    5. 'val' → logprob: -4.846312999725342
    6. '   ' → logprob: -5.596312999725342
    7. 'def' → logprob: -5.846312999725342
    8. 'or' → logprob: -6.471312999725342
    9. '_orientation' → logprob: -7.596312999725342
    10. 'order' → logprob: -7.596312999725342

Token 966: ' sign' (ID: 2232)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3726788759231567
    2. '   ' → logprob: -1.4976788759231567
    3. 'if' → logprob: -1.6226788759231567
    4. '=' → logprob: -1.6226788759231567
    5. ' if' → logprob: -3.497678756713867
    6. 'res' → logprob: -3.997678756713867
    7. 'poly' → logprob: -3.997678756713867
    8. '>' → logprob: -4.247678756713867
    9. '(poly' → logprob: -4.247678756713867
    10. 'area' → logprob: -4.747678756713867

Token 967: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07924060523509979
    2. '
' → logprob: -3.204240560531616
    3. ' if' → logprob: -4.329240798950195
    4. 'if' → logprob: -4.579240798950195
    5. 'area' → logprob: -4.954240798950195
    6. '(area' → logprob: -5.454240798950195
    7. ' area' → logprob: -8.454240798950195
    8. ' =' → logprob: -8.829240798950195
    9. '=' → logprob: -9.204240798950195
    10. '(' → logprob: -9.579240798950195

Token 968: 'orientation' (ID: 65957)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.11823537200689316
    2. 'poly' → logprob: -3.4932353496551514
    3. ' polygon' → logprob: -3.9932353496551514
    4. 'area' → logprob: -4.1182355880737305
    5. 'def' → logprob: -4.2432355880737305
    6. '
' → logprob: -4.4932355880737305
    7. '   ' → logprob: -4.4932355880737305
    8. 'if' → logprob: -5.2432355880737305
    9. ')' → logprob: -5.9932355880737305
    10. ' if' → logprob: -7.6182355880737305

Token 969: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9211307764053345
    2. '   ' → logprob: -1.7961307764053345
    3. ')
' → logprob: -2.421130657196045
    4. 'def' → logprob: -2.421130657196045
    5. 'poly' → logprob: -2.671130657196045
    6. ' of' → logprob: -3.046130657196045
    7. '(poly' → logprob: -3.046130657196045
    8. '
' → logprob: -3.421130657196045
    9. ' poly' → logprob: -4.296130657196045
    10. '=' → logprob: -5.171130657196045

Token 970: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.9266199160483666e-05
    2. ' if' → logprob: -11.125019073486328
    3. 'if' → logprob: -12.750019073486328
    4. ',' → logprob: -14.125019073486328
    5. '
' → logprob: -14.875019073486328
    6. ')' → logprob: -15.875019073486328
    7. 'def' → logprob: -16.250019073486328
    8. '       ' → logprob: -16.875019073486328
    9. 'area' → logprob: -16.875019073486328
    10. '   ' → logprob: -16.875019073486328

Token 971: ' area' (ID: 3624)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25591447949409485
    2. '   ' → logprob: -2.1309144496917725
    3. 'area' (adapté à ' area') → logprob: -2.2559144496917725
    4. ' if' → logprob: -6.380914688110352
    5. ' area' → logprob: -8.505914688110352
    6. 'a' → logprob: -8.505914688110352
    7. 's' → logprob: -9.880914688110352
    8. 'def' → logprob: -9.880914688110352
    9. '
' → logprob: -11.130914688110352
    10. 'poly' → logprob: -11.505914688110352

Token 972: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3145206570625305
    2. ' =' → logprob: -1.3145205974578857
    3. '=sum' → logprob: -6.939520835876465
    4. '=res' → logprob: -9.314520835876465
    5. '(poly' → logprob: -9.939520835876465
    6. 'poly' → logprob: -10.564520835876465
    7. '=int' → logprob: -10.814520835876465
    8. '=float' → logprob: -11.314520835876465
    9. '_=' → logprob: -11.564520835876465
    10. '=_' → logprob: -11.689520835876465

Token 973: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013808291405439377
    2. 'sum' → logprob: -7.251380920410156
    3. 'poly' → logprob: -7.501380920410156
    4. '(poly' → logprob: -10.001380920410156
    5. 'polygon' → logprob: -10.376380920410156
    6. '(' → logprob: -10.876380920410156
    7. ' ' → logprob: -12.126380920410156
    8. '(sum' → logprob: -12.126380920410156
    9. '
' → logprob: -12.251380920410156
    10. '   ' → logprob: -13.126380920410156

Token 974: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5685165524482727
    2. '   ' → logprob: -0.9435165524482727
    3. 'for' → logprob: -3.443516492843628
    4. 'n' → logprob: -4.443516731262207
    5. ' for' → logprob: -7.568516731262207
    6. '
' → logprob: -10.443516731262207
    7. '	for' → logprob: -10.443516731262207
    8. '  ' → logprob: -11.193516731262207
    9. ',n' → logprob: -11.193516731262207
    10. '(n' → logprob: -11.568516731262207

Token 975: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15378808975219727
    2. 'for' → logprob: -2.6537880897521973
    3. '
' → logprob: -2.7787880897521973
    4. 'n' → logprob: -4.903788089752197
    5. ' for' → logprob: -6.028788089752197
    6. '	for' → logprob: -9.028787612915039
    7. '
' → logprob: -11.028787612915039
    8. '<|end|>' → logprob: -11.153787612915039
    9. '```' → logprob: -11.278787612915039
    10. ')' → logprob: -11.653787612915039

Token 976: ' for' (ID: 395)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03804183006286621
    2. 'for' (adapté à ' for') → logprob: -3.288041830062866
    3. ' for' → logprob: -15.288042068481445
    4. ' n' → logprob: -16.538042068481445
    5. '   ' → logprob: -17.163042068481445
    6. '```' → logprob: -18.788042068481445
    7. 'm' → logprob: -19.163042068481445
    8. '_n' → logprob: -21.413042068481445
    9. '
' → logprob: -21.413042068481445
    10. 'l' → logprob: -21.913042068481445

Token 977: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.848420551046729e-05
    2. ' i' → logprob: -9.7500581741333
    3. ' ' → logprob: -16.750059127807617
    4. '	i' → logprob: -16.750059127807617
    5. '   ' → logprob: -17.375059127807617
    6. '  ' → logprob: -18.875059127807617
    7. '(i' → logprob: -19.250059127807617
    8. 'I' → logprob: -19.375059127807617
    9. '_i' → logprob: -19.625059127807617
    10. 'in' → logprob: -20.125059127807617

Token 978: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12694543600082397
    2. 'in' → logprob: -2.1269454956054688
    3. 'range' → logprob: -11.876945495605469
    4. ' ' → logprob: -12.501945495605469
    5. 'i' → logprob: -12.626945495605469
    6. '   ' → logprob: -13.501945495605469
    7. '  ' → logprob: -14.251945495605469
    8. ' i' → logprob: -14.626945495605469
    9. ' range' → logprob: -15.001945495605469
    10. '	in' → logprob: -15.001945495605469

Token 979: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048170737922192
    2. ' range' → logprob: -4.511048316955566
    3. '   ' → logprob: -16.01104736328125
    4. '(range' → logprob: -16.13604736328125
    5. ' ' → logprob: -16.51104736328125
    6. '  ' → logprob: -18.13604736328125
    7. '	range' → logprob: -19.01104736328125
    8. '
' → logprob: -20.51104736328125
    9. '    ' → logprob: -21.63604736328125
    10. '0' → logprob: -21.63604736328125

Token 980: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18210308253765106
    2. 'range' → logprob: -2.182103157043457
    3. '(n' → logprob: -2.932103157043457
    4. 'res' → logprob: -8.932103157043457
    5. 'len' → logprob: -9.557103157043457
    6. '(len' → logprob: -9.682103157043457
    7. '(range' → logprob: -9.682103157043457
    8. ' range' → logprob: -9.932103157043457
    9. ' n' → logprob: -11.807103157043457
    10. '
' → logprob: -12.182103157043457

Token 981: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014805715531110764
    2. '):' → logprob: -4.389805793762207
    3. '-' → logprob: -7.014805793762207
    4. 'n' → logprob: -7.389805793762207
    5. '   ' → logprob: -7.514805793762207
    6. '):
' → logprob: -9.264805793762207
    7. '(n' → logprob: -9.764805793762207
    8. ':' → logprob: -10.139805793762207
    9. ':
' → logprob: -11.014805793762207
    10. ' ' → logprob: -12.014805793762207

Token 982: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019640708342194557
    2. '   ' → logprob: -4.519640922546387
    3. ' area' → logprob: -5.019640922546387
    4. '```' → logprob: -7.269640922546387
    5. 'area' → logprob: -7.269640922546387
    6. '<|end|>' → logprob: -8.519640922546387
    7. '    ' → logprob: -9.894640922546387
    8. '(area' → logprob: -10.144640922546387
    9. '[' → logprob: -10.519640922546387
    10. ' ' → logprob: -10.644640922546387

Token 983: ' x' (ID: 1215)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0817037895321846
    2. '   ' → logprob: -3.4567039012908936
    3. '       ' → logprob: -3.7067039012908936
    4. 'x' (adapté à ' x') → logprob: -4.0817036628723145
    5. ' j' → logprob: -5.8317036628723145
    6. 'a' → logprob: -6.5817036628723145
    7. 'area' → logprob: -7.2067036628723145
    8. 'jx' → logprob: -8.206704139709473
    9. ' x' → logprob: -9.331704139709473
    10. ' area' → logprob: -10.956704139709473

Token 984: '1' (ID: 16)
  Prédit: '=res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=res' → logprob: -0.43985864520072937
    2. '=' → logprob: -1.9398586750030518
    3. ' res' → logprob: -2.6898586750030518
    4. 'res' → logprob: -2.8148586750030518
    5. ',res' → logprob: -3.1898586750030518
    6. ' =' → logprob: -4.564858436584473
    7. '   ' → logprob: -4.689858436584473
    8. ' in' → logprob: -4.814858436584473
    9. ',' → logprob: -5.064858436584473
    10. '(res' → logprob: -5.189858436584473

Token 985: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4027678668498993
    2. ',y' → logprob: -1.1527678966522217
    3. '=' → logprob: -4.527767658233643
    4. ',res' → logprob: -5.527767658233643
    5. ' =' → logprob: -8.0277681350708
    6. '=res' → logprob: -8.1527681350708
    7. '   ' → logprob: -8.6527681350708
    8. ',p' → logprob: -9.6527681350708
    9. 'y' → logprob: -10.1527681350708
    10. ' ,' → logprob: -10.2777681350708

Token 986: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031886440701782703
    2. ' =' → logprob: -5.753188610076904
    3. '=p' → logprob: -12.378189086914062
    4. '=res' → logprob: -13.378189086914062
    5. 'poly' → logprob: -14.003189086914062
    6. ',' → logprob: -14.003189086914062
    7. '   ' → logprob: -14.753189086914062
    8. '=os' → logprob: -14.753189086914062
    9. '=_' → logprob: -15.003189086914062
    10. '=line' → logprob: -15.128189086914062

Token 987: '=res' (ID: 182169)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14409522712230682
    2. ' =' → logprob: -2.0190951824188232
    3. '   ' → logprob: -7.269095420837402
    4. ',' → logprob: -7.519095420837402
    5. '=res' → logprob: -8.769095420837402
    6. ',res' → logprob: -11.769095420837402
    7. ',p' → logprob: -12.644095420837402
    8. '=
' → logprob: -12.644095420837402
    9. '=p' → logprob: -13.144095420837402
    10. 'poly' → logprob: -13.894095420837402

Token 988: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4149879217147827
    2. '=' → logprob: -1.4149879217147827
    3. ' =' → logprob: -2.6649880409240723
    4. 'i' → logprob: -4.039988040924072
    5. '=i' → logprob: -5.289988040924072
    6. '   ' → logprob: -5.539988040924072
    7. '       ' → logprob: -8.414987564086914
    8. ',i' → logprob: -10.164987564086914
    9. '[' → logprob: -10.414987564086914
    10. '(i' → logprob: -10.414987564086914

Token 989: ']
' (ID: 1592)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -1.027645230293274
    2. '   ' → logprob: -1.402645230293274
    3. ']
' → logprob: -2.0276451110839844
    4. ']' → logprob: -2.1526451110839844
    5. '       ' → logprob: -2.5276451110839844
    6. '[' → logprob: -2.9026451110839844
    7. '0' → logprob: -5.652645111083984
    8. '
' → logprob: -5.902645111083984
    9. ' ' → logprob: -6.402645111083984
    10. 'x' → logprob: -7.152645111083984

Token 990: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5148014426231384
    2. '   ' → logprob: -1.5148015022277832
    3. ',' → logprob: -2.514801502227783
    4. '<|end|>' → logprob: -3.389801502227783
    5. '=' → logprob: -3.889801502227783
    6. ',x' → logprob: -4.014801502227783
    7. ' =' → logprob: -4.764801502227783
    8. ' x' → logprob: -5.139801502227783
    9. 'x' → logprob: -5.889801502227783
    10. '	x' → logprob: -6.139801502227783

Token 991: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0018434440717101097
    2. ' x' → logprob: -7.001843452453613
    3. '       ' → logprob: -7.001843452453613
    4. '	x' → logprob: -11.251843452453613
    5. '   ' → logprob: -12.001843452453613
    6. ',x' → logprob: -13.751843452453613
    7. '{x' → logprob: -14.876843452453613
    8. '(x' → logprob: -15.501843452453613
    9. '```' → logprob: -16.251842498779297
    10. '>x' → logprob: -16.251842498779297

Token 992: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01151778269559145
    2. '1' → logprob: -4.8865180015563965
    3. '0' → logprob: -6.1365180015563965
    4. ',' → logprob: -6.5115180015563965
    5. ',y' → logprob: -8.386517524719238
    6. ',x' → logprob: -12.261517524719238
    7. ' ' → logprob: -12.386517524719238
    8. '=' → logprob: -12.886517524719238
    9. ',res' → logprob: -13.011517524719238
    10. '[' → logprob: -13.386517524719238

Token 993: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0012446361361071467
    2. ',' → logprob: -6.87624454498291
    3. ',res' → logprob: -8.50124454498291
    4. ',
' → logprob: -12.37624454498291
    5. 'y' → logprob: -12.62624454498291
    6. ' ,' → logprob: -14.62624454498291
    7. 'res' → logprob: -15.50124454498291
    8. '
' → logprob: -16.126245498657227
    9. ',x' → logprob: -16.501245498657227
    10. ',v' → logprob: -17.251245498657227

Token 994: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09910358488559723
    2. '[i' → logprob: -2.9741036891937256
    3. '[' → logprob: -3.2241036891937256
    4. 'i' → logprob: -6.4741034507751465
    5. '(i' → logprob: -7.0991034507751465
    6. '
' → logprob: -8.349103927612305
    7. '```' → logprob: -8.849103927612305
    8. '0' → logprob: -9.224103927612305
    9. '=' → logprob: -9.474103927612305
    10. '   ' → logprob: -9.599103927612305

Token 995: '=res' (ID: 182169)
  Prédit: '=res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=res' → logprob: -0.0020045305136591196
    2. '=' → logprob: -6.252004623413086
    3. ' =' → logprob: -9.502004623413086
    4. '=
' → logprob: -13.627004623413086
    5. '   ' → logprob: -18.002004623413086
    6. ',res' → logprob: -18.252004623413086
    7. '=re' → logprob: -18.627004623413086
    8. '=

' → logprob: -18.627004623413086
    9. 'res' → logprob: -18.752004623413086
    10. '=_' → logprob: -18.877004623413086

Token 996: '[(' (ID: 20542)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.011426794342696667
    2. '[' → logprob: -4.63642692565918
    3. '=res' → logprob: -7.13642692565918
    4. ' res' → logprob: -7.88642692565918
    5. '=' → logprob: -8.01142692565918
    6. '   ' → logprob: -9.38642692565918
    7. '[i' → logprob: -10.51142692565918
    8. '	res' → logprob: -10.63642692565918
    9. ' =' → logprob: -11.26142692565918
    10. '(res' → logprob: -12.13642692565918

Token 997: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5760718584060669
    2. '(i' → logprob: -0.8260718584060669
    3. ' (' → logprob: -9.326071739196777
    4. '   ' → logprob: -10.826071739196777
    5. ' i' → logprob: -11.451071739196777
    6. '{i' → logprob: -11.826071739196777
    7. '_i' → logprob: -14.076071739196777
    8. '[i' → logprob: -14.201071739196777
    9. '(' → logprob: -14.326071739196777
    10. '       ' → logprob: -14.326071739196777

Token 998: '+' (ID: 10)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.1068916842341423
    2. '1' → logprob: -2.481891632080078
    3. '+' → logprob: -4.356891632080078
    4. 'i' → logprob: -6.106891632080078
    5. '(' → logprob: -6.606891632080078
    6. ' (' → logprob: -6.731891632080078
    7. '{i' → logprob: -9.731891632080078
    8. '+i' → logprob: -9.981891632080078
    9. '   ' → logprob: -10.106891632080078
    10. '[i' → logprob: -11.106891632080078

Token 999: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -14.12500286102295
    3. '```' → logprob: -14.50000286102295
    4. '(' → logprob: -15.00000286102295
    5. 'i' → logprob: -15.25000286102295
    6. '+' → logprob: -15.37500286102295
    7. '   ' → logprob: -16.562501907348633
    8. 'poly' → logprob: -16.687501907348633
    9. '(i' → logprob: -16.875001907348633
    10. 'def' → logprob: -17.187501907348633

Token 1000: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.002730217296630144
    2. '%n' → logprob: -6.502730369567871
    3. '%i' → logprob: -7.627730369567871
    4. ')' → logprob: -8.252730369567871
    5. '%' → logprob: -8.627730369567871
    6. ')i' → logprob: -8.752730369567871
    7. ']%' → logprob: -9.502730369567871
    8. ')n' → logprob: -10.502730369567871
    9. '1' → logprob: -11.627730369567871
    10. ' %' → logprob: -11.627730369567871

Token 1001: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0280383548888494e-06
    2. ' n' → logprob: -15.000000953674316
    3. '```' → logprob: -15.000000953674316
    4. 'res' → logprob: -15.500000953674316
    5. '(n' → logprob: -16.625001907348633
    6. '   ' → logprob: -17.125001907348633
    7. '``' → logprob: -17.125001907348633
    8. '
' → logprob: -18.375001907348633
    9. 'len' → logprob: -18.625001907348633
    10. '	n' → logprob: -19.250001907348633

Token 1002: ']
' (ID: 1592)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.07564060389995575
    2. ']' → logprob: -2.8256406784057617
    3. ']
' → logprob: -4.325640678405762
    4. '   ' → logprob: -9.200640678405762
    5. 'n' → logprob: -9.575640678405762
    6. ']
' → logprob: -9.950640678405762
    7. ']

' → logprob: -10.200640678405762
    8. '[' → logprob: -10.700640678405762
    9. 'res' → logprob: -11.450640678405762
    10. '1' → logprob: -11.700640678405762

Token 1003: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011968196369707584
    2. '   ' → logprob: -4.51196813583374
    3. ' area' → logprob: -7.51196813583374
    4. 'area' → logprob: -8.886968612670898
    5. '	' → logprob: -9.761968612670898
    6. '	   ' → logprob: -10.386968612670898
    7. '           ' → logprob: -10.386968612670898
    8. '<|end|>' → logprob: -10.511968612670898
    9. '     ' → logprob: -11.011968612670898
    10. ',' → logprob: -11.136968612670898

Token 1004: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' (adapté à ' area') → logprob: -0.216105654835701
    2. '       ' → logprob: -1.7161056995391846
    3. '   ' → logprob: -4.3411054611206055
    4. ' area' → logprob: -6.4661054611206055
    5. '           ' → logprob: -12.216105461120605
    6. '     ' → logprob: -14.841105461120605
    7. ' ' → logprob: -14.966105461120605
    8. '_area' → logprob: -14.966105461120605
    9. '(area' → logprob: -15.091105461120605
    10. '	' → logprob: -15.341105461120605

Token 1005: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2132757306098938
    2. '+=(' → logprob: -1.963275671005249
    3. ' +=' → logprob: -2.963275671005249
    4. '   ' → logprob: -11.588275909423828
    5. ']+=' → logprob: -12.213275909423828
    6. '+='' → logprob: -12.838275909423828
    7. '+="' → logprob: -13.588275909423828
    8. '+' → logprob: -14.588275909423828
    9. '```' → logprob: -14.963275909423828
    10. '=' → logprob: -15.338275909423828

Token 1006: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5771498680114746
    2. 'x' → logprob: -0.8271498680114746
    3. ' (' → logprob: -7.077149868011475
    4. '(' → logprob: -8.452150344848633
    5. ' x' → logprob: -8.952150344848633
    6. '   ' → logprob: -11.202150344848633
    7. ' ' → logprob: -12.452150344848633
    8. '  ' → logprob: -13.702150344848633
    9. '((' → logprob: -14.327150344848633
    10. '	x' → logprob: -14.327150344848633

Token 1007: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.319370302458992e-06
    2. ' x' → logprob: -12.250005722045898
    3. '(x' → logprob: -14.625005722045898
    4. '   ' → logprob: -18.3750057220459
    5. ' ' → logprob: -19.0000057220459
    6. ')x' → logprob: -19.5000057220459
    7. '	x' → logprob: -19.6250057220459
    8. '
' → logprob: -19.8750057220459
    9. '  ' → logprob: -20.3750057220459
    10. ' (' → logprob: -20.6250057220459

Token 1008: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '2' → logprob: -14.75
    3. '```' → logprob: -17.875
    4. 'res' → logprob: -18.5
    5. '１' → logprob: -21.4375
    6. '[' → logprob: -21.6875
    7. '_' → logprob: -21.6875
    8. '۱' → logprob: -21.75
    9. '১' → logprob: -21.875
    10. '१' → logprob: -22.0625

Token 1009: '*y' (ID: 83575)
  Prédit: '*y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*y' → logprob: -0.00018494461255613714
    2. 'y' → logprob: -8.625185012817383
    3. ' *' → logprob: -12.625185012817383
    4. ')*' → logprob: -14.125185012817383
    5. '```' → logprob: -14.250185012817383
    6. '**' → logprob: -15.750185012817383
    7. '   ' → logprob: -15.750185012817383
    8. '*' → logprob: -16.250185012817383
    9. '
' → logprob: -16.750185012817383
    10. '*x' → logprob: -17.125185012817383

Token 1010: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.861651490908116e-05
    2. '```' → logprob: -10.250068664550781
    3. '1' → logprob: -10.500068664550781
    4. '
' → logprob: -13.625068664550781
    5. '``' → logprob: -14.125068664550781
    6. '[' → logprob: -14.125068664550781
    7. '+' → logprob: -14.250068664550781
    8. 'ields' → logprob: -15.000068664550781
    9. 'Next' → logprob: -15.125068664550781
    10. 'res' → logprob: -15.625068664550781

Token 1011: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4068165421485901
    2. '-' → logprob: -1.1568164825439453
    3. ')-(' → logprob: -4.156816482543945
    4. '-x' → logprob: -6.031816482543945
    5. ')' → logprob: -7.156816482543945
    6. '-
' → logprob: -7.531816482543945
    7. '-y' → logprob: -8.406816482543945
    8. ' -
' → logprob: -9.656816482543945
    9. '-)' → logprob: -10.406816482543945
    10. '-(' → logprob: -11.031816482543945

Token 1012: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3870604634284973
    2. 'y' → logprob: -1.1370604038238525
    3. ' y' → logprob: -8.637060165405273
    4. ' x' → logprob: -11.512060165405273
    5. '   ' → logprob: -13.637060165405273
    6. '```' → logprob: -15.387060165405273
    7. ')y' → logprob: -16.012060165405273
    8. '	y' → logprob: -16.012060165405273
    9. '(x' → logprob: -16.137060165405273
    10. ')' → logprob: -16.387060165405273

Token 1013: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4039323627948761
    2. 'x' → logprob: -1.9039323329925537
    3. '2' → logprob: -2.0289323329925537
    4. 'y' → logprob: -3.4039323329925537
    5. '```' → logprob: -4.403932571411133
    6. '[' → logprob: -6.403932571411133
    7. '#' → logprob: -7.778932571411133
    8. ')' → logprob: -7.903932571411133
    9. 's' → logprob: -8.153932571411133
    10. '+' → logprob: -8.528932571411133

Token 1014: '*y' (ID: 83575)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.1888679839321412e-05
    2. ' y' → logprob: -10.750021934509277
    3. '*y' → logprob: -16.37502098083496
    4. 'x' → logprob: -16.62502098083496
    5. ')y' → logprob: -16.87502098083496
    6. '	y' → logprob: -17.25002098083496
    7. ''y' → logprob: -17.62502098083496
    8. '[y' → logprob: -17.75002098083496
    9. '   ' → logprob: -17.87502098083496
    10. '```' → logprob: -18.00002098083496

Token 1015: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.7729658540920354e-05
    2. ' y' → logprob: -10.625027656555176
    3. '1' → logprob: -13.625027656555176
    4. 'x' → logprob: -14.250027656555176
    5. '[' → logprob: -15.250027656555176
    6. ')y' → logprob: -15.250027656555176
    7. '   ' → logprob: -15.500027656555176
    8. ' ' → logprob: -16.000028610229492
    9. '[y' → logprob: -16.000028610229492
    10. '```' → logprob: -16.000028610229492

Token 1016: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25201526284217834
    2. ')
' → logprob: -1.502015233039856
    3. ')return' → logprob: -10.252015113830566
    4. '   ' → logprob: -10.627015113830566
    5. ')
' → logprob: -11.377015113830566
    6. ' )
' → logprob: -12.252015113830566
    7. ' )' → logprob: -12.252015113830566
    8. ')

' → logprob: -13.502015113830566
    9. '
' → logprob: -14.002015113830566
    10. ')>' → logprob: -14.127015113830566

Token 1017: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00254415487870574
    2. '
' → logprob: -6.127543926239014
    3. '    
' → logprob: -8.377544403076172
    4. '<|end|>' → logprob: -9.877544403076172
    5. ' if' → logprob: -11.502544403076172
    6. ' 
' → logprob: -11.752544403076172
    7. '  
' → logprob: -11.752544403076172
    8. '<|end|>' → logprob: -11.752544403076172
    9. ' return' → logprob: -11.877544403076172
    10. '    ' → logprob: -12.252544403076172

Token 1018: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002979240380227566
    2. ' if' → logprob: -8.750297546386719
    3. '
' → logprob: -9.000297546386719
    4. ' return' → logprob: -11.625297546386719
    5. ' area' → logprob: -12.250297546386719
    6. 'if' (adapté à ' if') → logprob: -14.125297546386719
    7. 'area' → logprob: -14.875297546386719
    8. '    
' → logprob: -14.875297546386719
    9. '```' → logprob: -15.375297546386719
    10. 'return' → logprob: -15.625297546386719

Token 1019: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.008874432183802128
    2. ' area' → logprob: -4.758874416351318
    3. '   ' → logprob: -8.258874893188477
    4. '(area' → logprob: -15.008874893188477
    5. ' ' → logprob: -15.383874893188477
    6. '  ' → logprob: -15.758874893188477
    7. '       ' → logprob: -16.133874893188477
    8. '    ' → logprob: -16.883874893188477
    9. '     ' → logprob: -17.258874893188477
    10. '
' → logprob: -17.883874893188477

Token 1020: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.030098486691713333
    2. ' <' → logprob: -3.5300984382629395
    3. '<=' → logprob: -8.655098915100098
    4. '()<' → logprob: -9.155098915100098
    5. '>' → logprob: -10.155098915100098
    6. ' <=' → logprob: -11.905098915100098
    7. ')<' → logprob: -12.030098915100098
    8. '   ' → logprob: -12.655098915100098
    9. ' >' → logprob: -12.905098915100098
    10. '<class' → logprob: -13.780098915100098

Token 1021: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -16.125001907348633
    4. '   ' → logprob: -16.875001907348633
    5. '=' → logprob: -16.875001907348633
    6. '۰' → logprob: -19.250001907348633
    7. '``' → logprob: -19.625001907348633
    8. '(' → logprob: -20.125001907348633
    9. '000' → logprob: -20.125001907348633
    10. '[' → logprob: -20.375001907348633

Token 1022: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.742501437664032
    2. '       ' → logprob: -0.742501437664032
    3. '   ' → logprob: -3.4925014972686768
    4. ':
' → logprob: -4.367501258850098
    5. ':return' → logprob: -6.617501258850098
    6. ',' → logprob: -6.742501258850098
    7. '<|end|>' → logprob: -7.367501258850098
    8. '[::-' → logprob: -7.617501258850098
    9. '):
' → logprob: -7.742501258850098
    10. '):' → logprob: -8.367501258850098

Token 1023: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10325022786855698
    2. ' res' → logprob: -2.85325026512146
    3. '   ' → logprob: -3.35325026512146
    4. 'res' → logprob: -5.228250026702881
    5. ' return' → logprob: -10.728250503540039
    6. '	res' → logprob: -10.853250503540039
    7. '```' → logprob: -10.853250503540039
    8. '[::-' → logprob: -11.853250503540039
    9. '           ' → logprob: -12.103250503540039
    10. '<|end|>' → logprob: -12.228250503540039

Token 1024: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.01983718015253544
    2. ' res' → logprob: -4.019837379455566
    3. '   ' → logprob: -6.394837379455566
    4. '       ' → logprob: -11.769837379455566
    5. '	res' → logprob: -12.269837379455566
    6. 'return' → logprob: -13.019837379455566
    7. '_res' → logprob: -15.644837379455566
    8. '    
' → logprob: -16.01983642578125
    9. '$res' → logprob: -16.01983642578125
    10. '```' → logprob: -16.14483642578125

Token 1025: '=res' (ID: 182169)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41332006454467773
    2. '=res' → logprob: -1.6633200645446777
    3. '.reverse' → logprob: -1.9133200645446777
    4. ' =' → logprob: -6.663320064544678
    5. '=re' → logprob: -9.413320541381836
    6. 'res' → logprob: -10.038320541381836
    7. '   ' → logprob: -10.663320541381836
    8. 'reverse' → logprob: -11.038320541381836
    9. '=.' → logprob: -12.788320541381836
    10. '[::-' → logprob: -13.288320541381836

Token 1026: '[:' (ID: 7808)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -3.8889261304575484e-06
    2. '.reverse' → logprob: -13.000003814697266
    3. 'res' → logprob: -14.250003814697266
    4. 're' → logprob: -14.625003814697266
    5. '[' → logprob: -15.625003814697266
    6. 'rev' → logprob: -16.500003814697266
    7. 'reverse' → logprob: -16.500003814697266
    8. '::-' → logprob: -16.875003814697266
    9. '[:' → logprob: -16.875003814697266
    10. '.re' → logprob: -17.125003814697266

Token 1027: '1' (ID: 16)
  Prédit: '::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::-' → logprob: -0.09133736789226532
    2. ':' → logprob: -2.5913374423980713
    3. ':-' → logprob: -5.341337203979492
    4. ' :' → logprob: -5.841337203979492
    5. ':
' → logprob: -6.466337203979492
    6. '[::-' → logprob: -6.966337203979492
    7. '1' → logprob: -7.091337203979492
    8. ':i' → logprob: -7.841337203979492
    9. '0' → logprob: -8.591337203979492
    10. '-' → logprob: -8.841337203979492

Token 1028: ']+' (ID: 15344)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.8378276824951172
    2. '-' → logprob: -1.9628276824951172
    3. '[::-' → logprob: -2.212827682495117
    4. ']' → logprob: -2.462827682495117
    5. '+' → logprob: -2.462827682495117
    6. ':-' → logprob: -2.587827682495117
    7. ']+' → logprob: -2.962827682495117
    8. '::-' → logprob: -4.337827682495117
    9. '   ' → logprob: -5.712827682495117
    10. '[' → logprob: -6.837827682495117

Token 1029: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0003357006062287837
    2. 'list' → logprob: -8.000335693359375
    3. 're' → logprob: -15.750335693359375
    4. ' res' → logprob: -16.500335693359375
    5. '[' → logprob: -19.375335693359375
    6. '(res' → logprob: -21.750335693359375
    7. '$res' → logprob: -22.000335693359375
    8. '[::-' → logprob: -22.125335693359375
    9. '	res' → logprob: -22.250335693359375
    10. ' list' → logprob: -22.750335693359375

Token 1030: '[:' (ID: 7808)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.0004097003838978708
    2. '[' → logprob: -8.250410079956055
    3. '[:-' → logprob: -9.750410079956055
    4. '::-' → logprob: -10.000410079956055
    5. '[:' → logprob: -10.125410079956055
    6. '[-' → logprob: -13.125410079956055
    7. '[i' → logprob: -14.250410079956055
    8. '```' → logprob: -14.375410079956055
    9. '-' → logprob: -14.625410079956055
    10. '1' → logprob: -15.000410079956055

Token 1031: '0' (ID: 15)
  Prédit: ':-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':-' → logprob: -0.7322162389755249
    2. '-' → logprob: -0.9822162389755249
    3. '0' → logprob: -2.4822163581848145
    4. '::-' → logprob: -3.2322163581848145
    5. ':' → logprob: -4.8572163581848145
    6. ' :-' → logprob: -4.9822163581848145
    7. '1' → logprob: -5.4822163581848145
    8. ' :' → logprob: -6.7322163581848145
    9. ':(' → logprob: -7.6072163581848145
    10. ' -' → logprob: -8.232215881347656

Token 1032: ':-' (ID: 20118)
  Prédit: ':-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':-' → logprob: -0.0422019362449646
    2. '-' → logprob: -3.2922019958496094
    3. '::-' → logprob: -5.667201995849609
    4. ' :-' → logprob: -7.417201995849609
    5. ':' → logprob: -9.91720199584961
    6. ' :' → logprob: -10.79220199584961
    7. ' -' → logprob: -11.91720199584961
    8. '-
' → logprob: -12.91720199584961
    9. '[::-' → logprob: -12.91720199584961
    10. ':i' → logprob: -13.04220199584961

Token 1033: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. '-' → logprob: -11.50001049041748
    3. '```' → logprob: -19.125009536743164
    4. '１' → logprob: -19.750009536743164
    5. ']' → logprob: -21.375009536743164
    6. '``' → logprob: -21.500009536743164
    7. '`' → logprob: -21.500009536743164
    8. '2' → logprob: -21.625009536743164
    9. ' ' → logprob: -21.875009536743164
    10. '"' → logprob: -21.875009536743164

Token 1034: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018690871074795723
    2. ']
' → logprob: -4.518691062927246
    3. '<|end|>' → logprob: -5.268691062927246
    4. '   ' → logprob: -6.643691062927246
    5. '[::-' → logprob: -8.018691062927246
    6. ')' → logprob: -8.768691062927246
    7. '<|end|>' → logprob: -9.143691062927246
    8. '+' → logprob: -9.268691062927246
    9. '
' → logprob: -9.268691062927246
    10. 'return' → logprob: -9.768691062927246

Token 1035: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04144887998700142
    2. '
' → logprob: -3.2914488315582275
    3. ' return' → logprob: -6.666449069976807
    4. '\n' → logprob: -7.791449069976807
    5. 'return' → logprob: -7.791449069976807
    6. '    
' → logprob: -8.166448593139648
    7. '[' → logprob: -8.291448593139648
    8. '<|end|>' → logprob: -8.791448593139648
    9. '```' → logprob: -9.041448593139648
    10. '  
' → logprob: -9.291448593139648

Token 1036: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005776273086667061
    2. 'return' (adapté à ' return') → logprob: -5.505776405334473
    3. ' return' → logprob: -6.630776405334473
    4. '
' → logprob: -8.130776405334473
    5. '	return' → logprob: -9.630776405334473
    6. '    
' → logprob: -12.630776405334473
    7. '```' → logprob: -12.755776405334473
    8. '<|end|>' → logprob: -13.255776405334473
    9. ':return' → logprob: -13.380776405334473
    10. '\n' → logprob: -13.630776405334473

Token 1037: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0206720617134124e-05
    2. ' res' → logprob: -11.50001049041748
    3. '(res' → logprob: -20.375009536743164
    4. 'tuple' → logprob: -21.500009536743164
    5. '	res' → logprob: -23.000009536743164
    6. '$res' → logprob: -24.125009536743164
    7. 'list' → logprob: -24.250009536743164
    8. 're' → logprob: -25.250009536743164
    9. '   ' → logprob: -25.750009536743164
    10. '```' → logprob: -25.875009536743164

Token 1038: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1039: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2716045379638672
    2. '<|end|>' → logprob: -1.5216045379638672
    3. ')' → logprob: -4.646604537963867
    4. '   ' → logprob: -6.146604537963867
    5. '<|end|>' → logprob: -6.271604537963867
    6. 'poly' → logprob: -6.271604537963867
    7. '```' → logprob: -6.521604537963867
    8. 'for' → logprob: -7.396604537963867
    9. '
' → logprob: -7.521604537963867
    10. ' def' → logprob: -9.021604537963867

Token 1040: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6360929012298584
    2. '=' → logprob: -0.7610929012298584
    3. ',' → logprob: -5.8860931396484375
    4. '=int' → logprob: -8.886093139648438
    5. ')' → logprob: -9.011093139648438
    6. ' ' → logprob: -9.386093139648438
    7. ' N' → logprob: -9.761093139648438
    8. '=N' → logprob: -9.761093139648438
    9. '=input' → logprob: -9.761093139648438
    10. ' ,' → logprob: -10.386093139648438

Token 1041: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.000988626852631569
    2. ' int' → logprob: -7.000988483428955
    3. '0' → logprob: -9.875988960266113
    4. 'input' → logprob: -11.500988960266113
    5. '[int' → logprob: -11.750988960266113
    6. '=int' → logprob: -13.000988960266113
    7. '(int' → logprob: -13.875988960266113
    8. '10' → logprob: -14.250988960266113
    9. '3' → logprob: -14.250988960266113
    10. '1' → logprob: -14.500988960266113

Token 1042: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.046716853976249695
    2. '()
' → logprob: -3.7967169284820557
    3. '
' → logprob: -4.296716690063477
    4. '(points' → logprob: -5.546716690063477
    5. '(N' → logprob: -6.046716690063477
    6. '_points' → logprob: -7.421716690063477
    7. 'points' → logprob: -7.796716690063477
    8. '<|end|>' → logprob: -8.046716690063477
    9. 'for' → logprob: -8.296716690063477
    10. '#' → logprob: -8.421716690063477

Token 1043: 'points' (ID: 14011)
  Prédit: 'points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.058372724801301956
    2. '=' → logprob: -3.308372735977173
    3. ' =' → logprob: -5.183372497558594
    4. 'N' → logprob: -5.308372497558594
    5. '_points' → logprob: -5.808372497558594
    6. ' points' → logprob: -5.933372497558594
    7. 'poly' → logprob: -6.183372497558594
    8. 'for' → logprob: -7.558372497558594
    9. '(points' → logprob: -8.183372497558594
    10. '
' → logprob: -8.308372497558594

Token 1044: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.021572822704911232
    2. '=[]' → logprob: -3.8965728282928467
    3. ' =' → logprob: -6.896572589874268
    4. '=[' → logprob: -11.646573066711426
    5. '=[]
' → logprob: -12.271573066711426
    6. '=list' → logprob: -13.021573066711426
    7. '[]' → logprob: -14.396573066711426
    8. ',' → logprob: -14.771573066711426
    9. '=[],' → logprob: -15.021573066711426
    10. '([]' → logprob: -15.021573066711426

Token 1045: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08785229921340942
    2. '[int' → logprob: -3.3378522396087646
    3. '[p' → logprob: -3.3378522396087646
    4. '[array' → logprob: -5.587852478027344
    5. '[]' → logprob: -6.587852478027344
    6. '[input' → logprob: -6.712852478027344
    7. '[list' → logprob: -7.212852478027344
    8. '[ip' → logprob: -7.462852478027344
    9. '[n' → logprob: -7.587852478027344
    10. '[str' → logprob: -7.712852478027344

Token 1046: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0055044605396687984
    2. '(tuple' → logprob: -5.255504608154297
    3. ' tuple' → logprob: -8.255504608154297
    4. 'input' → logprob: -11.630504608154297
    5. '(input' → logprob: -14.130504608154297
    6. '(' → logprob: -14.380504608154297
    7. '(*' → logprob: -15.755504608154297
    8. ']' → logprob: -16.380504608154297
    9. 'list' → logprob: -16.630504608154297
    10. '(int' → logprob: -16.755504608154297

Token 1047: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.688212614681106e-05
    2. 'map' → logprob: -11.250017166137695
    3. '(int' → logprob: -13.125017166137695
    4. '(input' → logprob: -14.000017166137695
    5. '(list' → logprob: -14.625017166137695
    6. '(' → logprob: -15.375017166137695
    7. '([' → logprob: -15.750017166137695
    8. '((' → logprob: -17.000017166137695
    9. '(sorted' → logprob: -17.625017166137695
    10. '(
' → logprob: -17.750017166137695

Token 1048: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5908459424972534
    2. '(int' → logprob: -0.8408459424972534
    3. 'input' → logprob: -4.465846061706543
    4. '(input' → logprob: -5.965846061706543
    5. '(map' → logprob: -7.965846061706543
    6. 'map' → logprob: -8.590846061706543
    7. '[int' → logprob: -8.840846061706543
    8. 'list' → logprob: -10.215846061706543
    9. '<int' → logprob: -11.965846061706543
    10. ',int' → logprob: -12.465846061706543

Token 1049: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.741144061088562
    2. '(input' → logprob: -0.991144061088562
    3. 'input' → logprob: -1.991144061088562
    4. ',' → logprob: -4.241144180297852
    5. 'sys' → logprob: -6.991144180297852
    6. '(sys' → logprob: -7.991144180297852
    7. ' input' → logprob: -10.116144180297852
    8. '=input' → logprob: -10.491144180297852
    9. ')' → logprob: -12.116144180297852
    10. '[input' → logprob: -12.491144180297852

Token 1050: 'sys' (ID: 17324)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -3.082895273109898e-05
    2. ' input' → logprob: -10.500030517578125
    3. 'sys' → logprob: -13.125030517578125
    4. ')' → logprob: -14.875030517578125
    5. ',input' → logprob: -14.875030517578125
    6. '(input' → logprob: -15.125030517578125
    7. '
' → logprob: -15.500030517578125
    8. '[input' → logprob: -17.500030517578125
    9. '   ' → logprob: -17.875030517578125
    10. '))' → logprob: -18.125030517578125

Token 1051: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.029781268909573555
    2. 'stdin' → logprob: -3.5297813415527344
    3. '(stdin' → logprob: -10.654781341552734
    4. '```' → logprob: -12.779781341552734
    5. '.readline' → logprob: -13.529781341552734
    6. '_st' → logprob: -13.904781341552734
    7. '[' → logprob: -14.654781341552734
    8. '.argv' → logprob: -15.154781341552734
    9. ' stdin' → logprob: -15.404781341552734
    10. '
' → logprob: -15.529781341552734

Token 1052: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.2664456789934775e-06
    2. '.' → logprob: -14.125000953674316
    3. '.readlines' → logprob: -15.250000953674316
    4. '.stdin' → logprob: -15.750000953674316
    5. ' readline' → logprob: -17.375001907348633
    6. '().' → logprob: -17.375001907348633
    7. ')' → logprob: -18.000001907348633
    8. ').' → logprob: -18.125001907348633
    9. '```' → logprob: -18.625001907348633
    10. '.read' → logprob: -19.875001907348633

Token 1053: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.027225754223764e-05
    2. '.readline' → logprob: -9.750060081481934
    3. '()))' → logprob: -13.375060081481934
    4. '()' → logprob: -15.500060081481934
    5. '()
' → logprob: -16.50006103515625
    6. '().__' → logprob: -18.12506103515625
    7. '()[' → logprob: -18.37506103515625
    8. ' ().' → logprob: -18.50006103515625
    9. '
' → logprob: -18.62506103515625
    10. '().
' → logprob: -18.75006103515625

Token 1054: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.5865320563316345
    2. 'strip' → logprob: -1.3365321159362793
    3. 'read' → logprob: -1.8365321159362793
    4. 'rstrip' → logprob: -3.8365321159362793
    5. '.readline' → logprob: -10.586531639099121
    6. 'decode' → logprob: -11.461531639099121
    7. ' readline' → logprob: -11.961531639099121
    8. ' strip' → logprob: -13.086531639099121
    9. 'replace' → logprob: -13.086531639099121
    10. ')' → logprob: -13.086531639099121

Token 1055: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.10084714740514755
    2. '))' → logprob: -2.3508472442626953
    3. '()' → logprob: -7.600847244262695
    4. '()))
' → logprob: -9.600847244262695
    5. '().' → logprob: -9.725847244262695
    6. '()
' → logprob: -12.600847244262695
    7. '())' → logprob: -13.225847244262695
    8. '))
' → logprob: -13.475847244262695
    9. '))]
' → logprob: -13.600847244262695
    10. '(' → logprob: -13.975847244262695

Token 1056: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1711481511592865
    2. ')' → logprob: -2.0461480617523193
    3. 'for' → logprob: -3.6711480617523193
    4. ' for' → logprob: -6.671148300170898
    5. '(N' → logprob: -7.296148300170898
    6. '())' → logprob: -7.546148300170898
    7. ']' → logprob: -10.046148300170898
    8. ')]' → logprob: -10.171148300170898
    9. '()]' → logprob: -10.296148300170898
    10. '(' → logprob: -11.296148300170898

Token 1057: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.2723104848410003e-05
    2. '_range' → logprob: -11.375022888183594
    3. '_in' → logprob: -12.125022888183594
    4. '_i' → logprob: -12.375022888183594
    5. '_=' → logprob: -14.875022888183594
    6. 'i' → logprob: -15.000022888183594
    7. 'in' → logprob: -15.625022888183594
    8. '_
' → logprob: -15.875022888183594
    9. ' in' → logprob: -16.000022888183594
    10. ' _' → logprob: -16.125022888183594

Token 1058: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.881560041918419e-05
    2. ' range' → logprob: -10.375039100646973
    3. '(range' → logprob: -11.875039100646973
    4. 'in' → logprob: -14.375039100646973
    5. '	range' → logprob: -18.500038146972656
    6. '(' → logprob: -18.625038146972656
    7. 'ange' → logprob: -18.875038146972656
    8. '(N' → logprob: -19.375038146972656
    9. '.range' → logprob: -19.500038146972656
    10. '0' → logprob: -19.750038146972656

Token 1059: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.5048530030981055e-06
    2. ' range' → logprob: -13.500001907348633
    3. '(range' → logprob: -17.750001907348633
    4. '
' → logprob: -18.875001907348633
    5. '	range' → logprob: -20.375001907348633
    6. '[' → logprob: -20.875001907348633
    7. 'r' → logprob: -21.250001907348633
    8. 'N' → logprob: -22.000001907348633
    9. 'rang' → logprob: -22.125001907348633
    10. '   ' → logprob: -22.625001907348633

Token 1060: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0007104054093360901
    2. 'N' → logprob: -7.250710487365723
    3. '(' → logprob: -14.875710487365723
    4. '(n' → logprob: -16.750709533691406
    5. '(
' → logprob: -17.250709533691406
    6. '	N' → logprob: -17.875709533691406
    7. '
' → logprob: -17.875709533691406
    8. '(int' → logprob: -18.375709533691406
    9. ' N' → logprob: -18.750709533691406
    10. ' (' → logprob: -19.250709533691406

Token 1061: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0031847211066633463
    2. ']' → logprob: -6.003184795379639
    3. ')' → logprob: -7.253184795379639
    4. ')],' → logprob: -15.75318431854248
    5. '()]' → logprob: -15.75318431854248
    6. '])]' → logprob: -16.128185272216797
    7. ')])' → logprob: -16.253185272216797
    8. '))' → logprob: -16.628185272216797
    9. ')]
' → logprob: -16.753185272216797
    10. '}]' → logprob: -17.003185272216797

Token 1062: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.03746797889471054
    2. 'if' → logprob: -4.537467956542969
    3. 'ch' → logprob: -4.787467956542969
    4. 'edges' → logprob: -5.912467956542969
    5. 'conv' → logprob: -5.912467956542969
    6. 'def' → logprob: -6.037467956542969
    7. '#' → logprob: -6.412467956542969
    8. 'from' → logprob: -6.662467956542969
    9. 'for' → logprob: -6.662467956542969
    10. 'lines' → logprob: -7.162467956542969

Token 1063: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -1.2664456789934775e-06
    2. '#' → logprob: -14.125000953674316
    3. 'ulls' → logprob: -15.250000953674316
    4. 'ULL' → logprob: -16.625001907348633
    5. 'ul' → logprob: -16.750001907348633
    6. '
' → logprob: -17.250001907348633
    7. 'u' → logprob: -17.625001907348633
    8. ' =' → logprob: -17.875001907348633
    9. '=' → logprob: -18.125001907348633
    10. 'ash' → logprob: -18.250001907348633

Token 1064: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0010910429991781712
    2. ' =' → logprob: -7.001091003417969
    3. '=h' → logprob: -8.626091003417969
    4. '=
' → logprob: -16.37609100341797
    5. '=[]' → logprob: -17.00109100341797
    6. '=

' → logprob: -17.25109100341797
    7. '＝' → logprob: -17.62609100341797
    8. 'points' → logprob: -18.12609100341797
    9. '=len' → logprob: -18.25109100341797
    10. '_points' → logprob: -18.25109100341797

Token 1065: ' convex' (ID: 142423)
  Prédit: 'conv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conv' → logprob: -3.7697225252486533e-06
    2. ' convex' → logprob: -12.500003814697266
    3. '(conv' → logprob: -20.500003814697266
    4. 'conc' → logprob: -22.375003814697266
    5. 'Conv' → logprob: -22.750003814697266
    6. 'polygon' → logprob: -24.000003814697266
    7. '.conv' → logprob: -24.000003814697266
    8. '_conv' → logprob: -24.375003814697266
    9. '   ' → logprob: -25.125003814697266
    10. '
' → logprob: -25.125003814697266

Token 1066: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -3.5716304410016164e-05
    2. 'h' → logprob: -10.250035285949707
    3. '_points' → logprob: -16.000036239624023
    4. '(h' → logprob: -16.625036239624023
    5. '	h' → logprob: -18.000036239624023
    6. 'points' → logprob: -18.375036239624023
    7. '(points' → logprob: -18.625036239624023
    8. '[h' → logprob: -19.875036239624023
    9. '_' → logprob: -20.125036239624023
    10. '```' → logprob: -20.375036239624023

Token 1067: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -5.9153885558771435e-06
    2. 'ul' → logprob: -12.500005722045898
    3. 'u' → logprob: -14.875005722045898
    4. 'h' → logprob: -15.125005722045898
    5. 'all' → logprob: -15.125005722045898
    6. '```' → logprob: -15.625005722045898
    7. '_' → logprob: -16.1250057220459
    8. '[' → logprob: -16.1250057220459
    9. 'ulls' → logprob: -16.3750057220459
    10. '#' → logprob: -16.3750057220459

Token 1068: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: 0.0
    2. 'points' → logprob: -17.5
    3. ' points' → logprob: -21.875
    4. '(point' → logprob: -22.875
    5. '	points' → logprob: -22.875
    6. ' (' → logprob: -24.625
    7. '(list' → logprob: -24.75
    8. '(parts' → logprob: -24.875
    9. '((' → logprob: -25.0
    10. '(lines' → logprob: -25.25

Token 1069: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15081721544265747
    2. '
' → logprob: -2.1508171558380127
    3. 'print' → logprob: -4.900817394256592
    4. ')
' → logprob: -5.025817394256592
    5. 'if' → logprob: -5.650817394256592
    6. 'poly' → logprob: -6.275817394256592
    7. '#' → logprob: -6.775817394256592
    8. '#print' → logprob: -7.650817394256592
    9. 'def' → logprob: -7.900817394256592
    10. 'h' → logprob: -7.900817394256592

Token 1070: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8225504755973816
    2. 'if' → logprob: -0.9475504755973816
    3. 'h' → logprob: -1.9475505352020264
    4. 'area' → logprob: -4.822550296783447
    5. 'normalized' → logprob: -5.947550296783447
    6. 'for' → logprob: -6.072550296783447
    7. 'norm' → logprob: -6.322550296783447
    8. 'from' → logprob: -6.322550296783447
    9. 'M' → logprob: -6.447550296783447
    10. 'ch' → logprob: -6.572550296783447

Token 1071: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.005338589660823345
    2. ' len' → logprob: -5.255338668823242
    3. 'not' → logprob: -10.380338668823242
    4. 'N' → logprob: -10.630338668823242
    5. '(len' → logprob: -10.880338668823242
    6. 'h' → logprob: -10.880338668823242
    7. ' not' → logprob: -12.255338668823242
    8. 'is' → logprob: -12.505338668823242
    9. 'equal' → logprob: -13.755338668823242
    10. 'True' → logprob: -14.880338668823242

Token 1072: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -3.416665640543215e-05
    2. '(points' → logprob: -10.37503433227539
    3. '(' → logprob: -12.87503433227539
    4. ' (' → logprob: -16.62503433227539
    5. 'points' → logprob: -16.62503433227539
    6. 'h' → logprob: -16.87503433227539
    7. '(
' → logprob: -16.87503433227539
    8. '<h' → logprob: -17.87503433227539
    9. '```' → logprob: -17.87503433227539
    10. '(s' → logprob: -18.50003433227539

Token 1073: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.00024524700711481273
    2. '(h' → logprob: -8.875245094299316
    3. 'h' → logprob: -10.125245094299316
    4. 'ul' → logprob: -10.625245094299316
    5. '```' → logprob: -11.000245094299316
    6. ')' → logprob: -11.750245094299316
    7. '>' → logprob: -12.375245094299316
    8. '(' → logprob: -12.375245094299316
    9. 'ulls' → logprob: -13.000245094299316
    10. '(points' → logprob: -14.125245094299316

Token 1074: ')<' (ID: 62287)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.01137117575854063
    2. ')' → logprob: -5.51137113571167
    3. '==' → logprob: -5.63637113571167
    4. ' <' → logprob: -6.26137113571167
    5. ')<' → logprob: -7.13637113571167
    6. '<=' → logprob: -7.51137113571167
    7. '>=' → logprob: -8.636371612548828
    8. '>' → logprob: -9.761371612548828
    9. '<N' → logprob: -9.886371612548828
    10. '<len' → logprob: -10.011371612548828

Token 1075: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.842555426876061e-06
    2. '2' → logprob: -13.000004768371582
    3. '4' → logprob: -13.000004768371582
    4. ' ' → logprob: -15.750004768371582
    5. '
' → logprob: -16.2500057220459
    6. '1' → logprob: -18.0000057220459
    7. '=' → logprob: -18.7500057220459
    8. '

' → logprob: -18.8750057220459
    9. '_' → logprob: -19.1250057220459
    10. '```' → logprob: -19.1250057220459

Token 1076: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07973694801330566
    2. ':' → logprob: -2.5797369480133057
    3. ' or' → logprob: -7.204736709594727
    4. '   ' → logprob: -9.579736709594727
    5. 'or' → logprob: -11.079736709594727
    6. 'print' → logprob: -11.454736709594727
    7. '):
' → logprob: -12.579736709594727
    8. ':
' → logprob: -12.704736709594727
    9. ':return' → logprob: -14.454736709594727
    10. '{
' → logprob: -14.704736709594727

Token 1077: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5779494643211365
    2. '   ' → logprob: -0.8279494643211365
    3. '
' → logprob: -6.452949523925781
    4. '```' → logprob: -8.452949523925781
    5. ':
' → logprob: -9.327949523925781
    6. '    
' → logprob: -9.702949523925781
    7. ' print' → logprob: -10.202949523925781
    8. '       ' → logprob: -12.077949523925781
    9. '):
' → logprob: -12.452949523925781
    10. '``' → logprob: -12.452949523925781

Token 1078: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0007519744685851038
    2. '   ' → logprob: -7.500751972198486
    3. ' print' → logprob: -9.000752449035645
    4. '
' → logprob: -9.750752449035645
    5. '```' → logprob: -12.125752449035645
    6. '0' → logprob: -12.625752449035645
    7. '    
' → logprob: -12.625752449035645
    8. ':
' → logprob: -13.125752449035645
    9. 'import' → logprob: -14.250752449035645
    10. 'for' → logprob: -14.875752449035645

Token 1079: '("' (ID: 568)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27516865730285645
    2. '(' → logprob: -1.5251686573028564
    3. '-' → logprob: -4.525168418884277
    4. '(-' → logprob: -5.275168418884277
    5. '(len' → logprob: -5.775168418884277
    6. 'len' → logprob: -6.400168418884277
    7. '("' → logprob: -6.775168418884277
    8. '(N' → logprob: -8.150168418884277
    9. '"' → logprob: -8.400168418884277
    10. 'N' → logprob: -8.650168418884277

Token 1080: 'No' (ID: 3160)
  Prédit: 'NO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.5545764565467834
    2. '0' → logprob: -1.1795763969421387
    3. 'No' → logprob: -2.9295763969421387
    4. '-' → logprob: -3.5545763969421387
    5. 'YES' → logprob: -4.929576396942139
    6. '"' → logprob: -4.929576396942139
    7. 'None' → logprob: -5.054576396942139
    8. 'Impossible' → logprob: -5.304576396942139
    9. 'NONE' → logprob: -6.054576396942139
    10. 'IMP' → logprob: -6.304576396942139

Token 1081: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.20790664851665497
    2. ' convex' → logprob: -2.207906723022461
    3. ' polygon' → logprob: -3.957906723022461
    4. '"' → logprob: -4.332906723022461
    5. ' solution' → logprob: -4.707906723022461
    6. ' valid' → logprob: -4.832906723022461
    7. ' Conv' → logprob: -5.332906723022461
    8. '\n' → logprob: -5.332906723022461
    9. 'conv' → logprob: -5.332906723022461
    10. 'Conv' → logprob: -5.457906723022461

Token 1082: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22950857877731323
    2. 'else' → logprob: -1.604508638381958
    3. 'elif' → logprob: -5.604508399963379
    4. '
' → logprob: -8.854508399963379
    5. 'exit' → logprob: -8.979508399963379
    6. '```' → logprob: -10.479508399963379
    7. '    
' → logprob: -10.604508399963379
    8. '	exit' → logprob: -10.729508399963379
    9. ' else' → logprob: -10.979508399963379
    10. 'import' → logprob: -11.229508399963379

Token 1083: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2321462631225586
    2. 'else' → logprob: -2.2321462631225586
    3. 'exit' → logprob: -2.7321462631225586
    4. 'sys' (adapté à ' sys') → logprob: -3.6071462631225586
    5. '
' → logprob: -5.107146263122559
    6. 'elif' → logprob: -7.482146263122559
    7. ' sys' → logprob: -8.107146263122559
    8. '```' → logprob: -8.607146263122559
    9. ' exit' → logprob: -8.732146263122559
    10. 'import' → logprob: -8.732146263122559

Token 1084: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.00010235115041723475
    2. '.stdout' → logprob: -10.000102043151855
    3. 'exit' → logprob: -10.000102043151855
    4. '	exit' → logprob: -12.500102043151855
    5. '   ' → logprob: -13.000102043151855
    6. '.stderr' → logprob: -13.250102043151855
    7. '_exit' → logprob: -14.250102043151855
    8. '
' → logprob: -14.250102043151855
    9. 'Exit' → logprob: -15.000102043151855
    10. '```' → logprob: -15.000102043151855

Token 1085: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5764118432998657
    2. '()' → logprob: -0.8264118432998657
    3. '()
' → logprob: -8.076412200927734
    4. '0' → logprob: -9.076412200927734
    5. '()`' → logprob: -10.701412200927734
    6. '()\' → logprob: -11.576412200927734
    7. '()

' → logprob: -12.451412200927734
    8. '())' → logprob: -12.576412200927734
    9. '()(' → logprob: -12.951412200927734
    10. '()"' → logprob: -13.201412200927734

Token 1086: 'polygon' (ID: 132859)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.6300750970840454
    2. 'def' → logprob: -1.6300750970840454
    3. 'lines' → logprob: -2.005074977874756
    4. 'for' → logprob: -2.380074977874756
    5. 'edges' → logprob: -2.755074977874756
    6. 'ref' → logprob: -2.755074977874756
    7. 'h' → logprob: -2.880074977874756
    8. 'poly' → logprob: -3.380074977874756
    9. '#' → logprob: -3.505074977874756
    10. 'M' → logprob: -4.255074977874756

Token 1087: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07046773284673691
    2. ' =' → logprob: -2.695467710494995
    3. '_area' → logprob: -8.320467948913574
    4. '=h' → logprob: -8.445467948913574
    5. '_points' → logprob: -9.945467948913574
    6. '=_' → logprob: -11.945467948913574
    7. '_poly' → logprob: -12.820467948913574
    8. '=
' → logprob: -12.820467948913574
    9. '=[]' → logprob: -12.945467948913574
    10. '=p' → logprob: -12.945467948913574

Token 1088: ' normalize' (ID: 44464)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.006179999094456434
    2. 'normalize' → logprob: -5.2561798095703125
    3. '[h' → logprob: -7.8811798095703125
    4. ' hull' → logprob: -8.131179809570312
    5. 'conv' → logprob: -9.131179809570312
    6. ' normalize' → logprob: -9.756179809570312
    7. 'points' → logprob: -9.756179809570312
    8. 'list' → logprob: -12.006179809570312
    9. 'hul' → logprob: -12.006179809570312
    10. 'normal' → logprob: -12.256179809570312

Token 1089: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.01816960796713829
    2. '(points' → logprob: -4.018169403076172
    3. '(p' → logprob: -11.268169403076172
    4. '([' → logprob: -13.268169403076172
    5. 'points' → logprob: -13.518169403076172
    6. '(poly' → logprob: -13.768169403076172
    7. 'h' → logprob: -13.893169403076172
    8. '(' → logprob: -14.268169403076172
    9. '[h' → logprob: -14.893169403076172
    10. '((' → logprob: -15.643169403076172

Token 1090: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -4.008129963040119e-06
    2. 'ul' → logprob: -13.250003814697266
    3. '(h' → logprob: -13.375003814697266
    4. 'h' → logprob: -15.750003814697266
    5. '(' → logprob: -16.000003814697266
    6. 'u' → logprob: -16.625003814697266
    7. '[' → logprob: -16.875003814697266
    8. '
' → logprob: -17.375003814697266
    9. 'all' → logprob: -17.500003814697266
    10. '```' → logprob: -17.875003814697266

Token 1091: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. ')
' → logprob: -13.000005722045898
    3. '())' → logprob: -13.500005722045898
    4. '()' → logprob: -14.125005722045898
    5. ' )' → logprob: -14.125005722045898
    6. 'def' → logprob: -17.0000057220459
    7. '))' → logprob: -17.1250057220459
    8. ')

' → logprob: -17.6250057220459
    9. ')`' → logprob: -18.2500057220459
    10. '#' → logprob: -18.7500057220459

Token 1092: 'n' (ID: 77)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.37117114663124084
    2. 'Q' → logprob: -1.8711711168289185
    3. 'def' → logprob: -2.621171236038208
    4. 'line' → logprob: -3.371171236038208
    5. 'for' → logprob: -4.496170997619629
    6. 'fold' → logprob: -5.121170997619629
    7. 'if' → logprob: -5.246170997619629
    8. 'print' → logprob: -5.246170997619629
    9. 'K' → logprob: -5.621170997619629
    10. 'edges' → logprob: -5.871170997619629

Token 1093: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.050521962344646454
    2. ' =' → logprob: -3.0505218505859375
    3. '=len' → logprob: -6.3005218505859375
    4. '=n' → logprob: -9.800521850585938
    5. '=int' → logprob: -10.175521850585938
    6. '=N' → logprob: -14.050521850585938
    7. '=size' → logprob: -14.300521850585938
    8. '=
' → logprob: -14.800521850585938
    9. '=num' → logprob: -14.925521850585938
    10. '=sys' → logprob: -15.550521850585938

Token 1094: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.1472419600977446e-06
    2. ' len' → logprob: -13.750000953674316
    3. '(len' → logprob: -18.000001907348633
    4. 'n' → logprob: -19.625001907348633
    5. '[len' → logprob: -20.125001907348633
    6. '```' → logprob: -20.625001907348633
    7. '=len' → logprob: -21.250001907348633
    8. 'N' → logprob: -21.375001907348633
    9. '   ' → logprob: -21.625001907348633
    10. '	len' → logprob: -21.875001907348633

Token 1095: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00015586259542033076
    2. 'polygon' → logprob: -9.625155448913574
    3. '(poly' → logprob: -9.625155448913574
    4. '(h' → logprob: -11.500155448913574
    5. '(points' → logprob: -11.625155448913574
    6. 'h' → logprob: -13.000155448913574
    7. ' polygon' → logprob: -13.625155448913574
    8. '(pol' → logprob: -14.625155448913574
    9. 'poly' → logprob: -15.125155448913574
    10. 'p' → logprob: -16.62515640258789

Token 1096: 'olygon' (ID: 80431)
  Prédit: 'olygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olygon' → logprob: -0.0001899511698866263
    2. 'oly' → logprob: -8.750189781188965
    3. 'ol' → logprob: -10.625189781188965
    4. 'polygon' → logprob: -12.000189781188965
    5. '(p' → logprob: -14.875189781188965
    6. '(' → logprob: -14.875189781188965
    7. '(poly' → logprob: -16.50019073486328
    8. '
' → logprob: -16.87519073486328
    9. ')' → logprob: -17.12519073486328
    10. ' polygon' → logprob: -17.37519073486328

Token 1097: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020153596997261047
    2. ')
' → logprob: -6.752015590667725
    3. ')n' → logprob: -7.127015590667725
    4. 'n' → logprob: -10.627015113830566
    5. '-' → logprob: -11.877015113830566
    6. '
' → logprob: -12.127015113830566
    7. 'def' → logprob: -13.127015113830566
    8. '#' → logprob: -14.752015113830566
    9. '(n' → logprob: -15.127015113830566
    10. '())' → logprob: -15.377015113830566

Token 1098: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5644247531890869
    2. 'def' → logprob: -2.314424753189087
    3. 'found' → logprob: -2.814424753189087
    4. 'possible' → logprob: -3.064424753189087
    5. 'mid' → logprob: -3.564424753189087
    6. 'ans' → logprob: -3.564424753189087
    7. 'm' → logprob: -4.189424514770508
    8. 'answer' → logprob: -4.189424514770508
    9. 'from' → logprob: -4.314424514770508
    10. 'line' → logprob: -4.314424514770508

Token 1099: ' Try' (ID: 14720)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2778074741363525
    2. 'for' → logprob: -1.9028074741363525
    3. 'ref' → logprob: -2.1528074741363525
    4. 'lines' → logprob: -2.5278074741363525
    5. 'edges' → logprob: -3.0278074741363525
    6. 'found' → logprob: -3.0278074741363525
    7. 'possible' → logprob: -3.0278074741363525
    8. 'if' → logprob: -3.6528074741363525
    9. 'ans' → logprob: -4.027807235717773
    10. 'from' → logprob: -4.402807235717773

Token 1100: ' symmetry' (ID: 90882)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017159679904580116
    2. 'reflect' → logprob: -5.017159461975098
    3. 'lines' → logprob: -5.892159461975098
    4. 'all' → logprob: -6.017159461975098
    5. 'ref' → logprob: -6.017159461975098
    6. 'edges' → logprob: -7.142159461975098
    7. 'fold' → logprob: -8.392159461975098
    8. 'i' → logprob: -8.517159461975098
    9. 'reflection' → logprob: -8.767159461975098
    10. 'line' → logprob: -8.767159461975098

Token 1101: ' axis' (ID: 16300)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0052572377026081085
    2. 'found' → logprob: -6.0052571296691895
    3. 'def' → logprob: -6.5052571296691895
    4. 'edges' → logprob: -8.005257606506348
    5. 'lines' → logprob: -8.255257606506348
    6. '
' → logprob: -8.505257606506348
    7. ' for' → logprob: -8.755257606506348
    8. 'line' → logprob: -9.130257606506348
    9. 'axis' → logprob: -9.755257606506348
    10. 'flag' → logprob: -9.880257606506348

Token 1102: ' through' (ID: 1819)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.47626737493556e-05
    2. '
' → logprob: -10.87503433227539
    3. 'found' → logprob: -11.75003433227539
    4. ' for' → logprob: -12.00003433227539
    5. 'axes' → logprob: -14.25003433227539
    6. 'edges' → logprob: -14.87503433227539
    7. 'axis' → logprob: -15.62503433227539
    8. 'def' → logprob: -16.00003433227539
    9. 'from' → logprob: -16.25003433227539
    10. 'ans' → logprob: -16.25003433227539

Token 1103: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5214940309524536
    2. 'range' → logprob: -1.3964940309524536
    3. 'i' → logprob: -2.646493911743164
    4. 'polygon' → logprob: -3.146493911743164
    5. 'pairs' → logprob: -4.771493911743164
    6. 'points' → logprob: -4.771493911743164
    7. ' for' → logprob: -5.146493911743164
    8. 'each' → logprob: -5.271493911743164
    9. 'edges' → logprob: -5.521493911743164
    10. 'poly' → logprob: -5.896493911743164

Token 1104: ' pairs' (ID: 24702)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2669103443622589
    2. 'pairs' → logprob: -2.0169103145599365
    3. 'range' → logprob: -2.7669103145599365
    4. 'i' → logprob: -3.6419103145599365
    5. 'points' → logprob: -4.891910552978516
    6. 'edges' → logprob: -6.141910552978516
    7. 'polygon' → logprob: -6.266910552978516
    8. 'vertices' → logprob: -8.266910552978516
    9. 'ranges' → logprob: -9.641910552978516
    10. ' for' → logprob: -9.766910552978516

Token 1105: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009338518721051514
    2. 'i' → logprob: -7.875933647155762
    3. 'range' → logprob: -8.000933647155762
    4. 'points' → logprob: -9.625933647155762
    5. ' for' → logprob: -10.125933647155762
    6. '
' → logprob: -10.500933647155762
    7. 'of' → logprob: -11.250933647155762
    8. 'or' → logprob: -11.250933647155762
    9. '   ' → logprob: -11.375933647155762
    10. 's' → logprob: -12.125933647155762

Token 1106: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.2983212471008301
    2. 'polygon' → logprob: -1.79832124710083
    3. 'range' → logprob: -2.92332124710083
    4. 'vertices' → logprob: -3.79832124710083
    5. 'for' → logprob: -4.29832124710083
    6. 'adj' → logprob: -6.79832124710083
    7. 'distinct' → logprob: -7.67332124710083
    8. 'poly' → logprob: -7.67332124710083
    9. 'indices' → logprob: -9.048320770263672
    10. ' polygon' → logprob: -9.048320770263672

Token 1107: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0016927925171330571
    2. 'found' → logprob: -7.251692771911621
    3. 'axes' → logprob: -8.376692771911621
    4. 'possible' → logprob: -8.501692771911621
    5. 'def' → logprob: -8.876692771911621
    6. 'ans' → logprob: -9.251692771911621
    7. 'answer' → logprob: -9.251692771911621
    8. 'sym' → logprob: -9.501692771911621
    9. 's' → logprob: -10.126692771911621
    10. 'axis' → logprob: -10.126692771911621

Token 1108: 'including' (ID: 26167)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00046987622044980526
    2. 'i' → logprob: -8.000470161437988
    3. '#' → logprob: -9.000470161437988
    4. ' for' → logprob: -13.000470161437988
    5. '
' → logprob: -13.250470161437988
    6. '   ' → logprob: -13.875470161437988
    7. 'def' → logprob: -14.000470161437988
    8. ')' → logprob: -14.000470161437988
    9. 'and' → logprob: -14.250470161437988
    10. 'axes' → logprob: -14.375470161437988

Token 1109: ' identical' (ID: 32820)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6548436880111694
    2. 'ident' → logprob: -1.0298436880111694
    3. 'equal' → logprob: -2.529843807220459
    4. 'adj' → logprob: -3.404843807220459
    5. '(i' → logprob: -6.154843807220459
    6. 'pairs' → logprob: -6.404843807220459
    7. 'the' → logprob: -6.779843807220459
    8. 'same' → logprob: -7.029843807220459
    9. 'edges' → logprob: -7.029843807220459
    10. 'duplicates' → logprob: -7.404843807220459

Token 1110: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.007915828377008438
    2. ' points' → logprob: -5.13291597366333
    3. 'point' → logprob: -7.25791597366333
    4. 'indices' → logprob: -7.75791597366333
    5. ')' → logprob: -8.132915496826172
    6. 'for' → logprob: -8.507915496826172
    7. 'p' → logprob: -9.382915496826172
    8. '(points' → logprob: -10.007915496826172
    9. 'pairs' → logprob: -10.132915496826172
    10. 'i' → logprob: -10.132915496826172

Token 1111: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14227713644504547
    2. ')' → logprob: -2.517277240753174
    3. '):' → logprob: -3.767277240753174
    4. 'i' → logprob: -4.642277240753174
    5. ' for' → logprob: -5.142277240753174
    6. ')
' → logprob: -5.517277240753174
    7. 'and' → logprob: -5.892277240753174
    8. '):
' → logprob: -6.017277240753174
    9. 'or' → logprob: -6.517277240753174
    10. ',' → logprob: -7.392277240753174

Token 1112: ' midpoint' (ID: 188667)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.016041642054915428
    2. ' i' → logprob: -5.0160417556762695
    3. 'reflection' → logprob: -5.8910417556762695
    4. '_ref' → logprob: -6.0160417556762695
    5. '_i' → logprob: -6.3910417556762695
    6. '_' → logprob: -7.1410417556762695
    7. ')' → logprob: -8.26604175567627
    8. ' reflection' → logprob: -8.51604175567627
    9. 'axis' → logprob: -8.89104175567627
    10. 'mid' → logprob: -9.01604175567627

Token 1113: ' axis' (ID: 16300)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2016843557357788
    2. ')' → logprob: -2.3266844749450684
    3. 'for' → logprob: -3.3266844749450684
    4. 'i' → logprob: -4.326684474945068
    5. 'pairs' → logprob: -4.576684474945068
    6. ' pairs' → logprob: -5.076684474945068
    7. ' for' → logprob: -5.201684474945068
    8. ' of' → logprob: -6.201684474945068
    9. 'of' → logprob: -6.326684474945068
    10. '(i' → logprob: -6.451684474945068

Token 1114: ')
' (ID: 446)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8747925162315369
    2. 's' → logprob: -1.2497925758361816
    3. ')' → logprob: -1.4997925758361816
    4. ')
' → logprob: -3.4997925758361816
    5. ' for' → logprob: -4.249792575836182
    6. '):' → logprob: -4.249792575836182
    7. '):
' → logprob: -4.749792575836182
    8. 'and' → logprob: -6.749792575836182
    9. 'i' → logprob: -7.124792575836182
    10. 'pairs' → logprob: -7.374792575836182

Token 1115: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.1424973713001236e-05
    2. 'found' → logprob: -11.500031471252441
    3. 'def' → logprob: -12.250031471252441
    4. '```' → logprob: -12.250031471252441
    5. 'axes' → logprob: -13.125031471252441
    6. 'i' → logprob: -13.125031471252441
    7. ' for' → logprob: -13.500031471252441
    8. 'possible' → logprob: -13.625031471252441
    9. 'sym' → logprob: -13.875031471252441
    10. 'axis' → logprob: -14.375031471252441

Token 1116: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011906705796718597
    2. 'axes' → logprob: -4.511906623840332
    3. 'axis' → logprob: -8.136906623840332
    4. 'def' → logprob: -8.761906623840332
    5. 'sym' → logprob: -9.386906623840332
    6. 'possible' → logprob: -9.761906623840332
    7. 'checked' → logprob: -9.886906623840332
    8. 'found' → logprob: -10.261906623840332
    9. 'from' → logprob: -10.261906623840332
    10. 'ans' → logprob: -10.386906623840332

Token 1117: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002270198310725391
    2. 'axis' → logprob: -8.750226974487305
    3. ' i' → logprob: -10.500226974487305
    4. 'def' → logprob: -11.625226974487305
    5. '_i' → logprob: -11.875226974487305
    6. 'mid' → logprob: -12.500226974487305
    7. '```' → logprob: -12.750226974487305
    8. 'a' → logprob: -12.750226974487305
    9. '
' → logprob: -13.000226974487305
    10. 'd' → logprob: -13.375226974487305

Token 1118: ' candidate' (ID: 17098)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005831766175106168
    2. ' i' → logprob: -7.875583171844482
    3. 'axis' → logprob: -9.25058364868164
    4. '```' → logprob: -10.25058364868164
    5. 'def' → logprob: -10.75058364868164
    6. 'p' → logprob: -10.87558364868164
    7. '   ' → logprob: -12.00058364868164
    8. ' axis' → logprob: -12.37558364868164
    9. 'pair' → logprob: -12.50058364868164
    10. '_i' → logprob: -12.87558364868164

Token 1119: ' axis' (ID: 16300)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14709773659706116
    2. 'for' → logprob: -2.6470978260040283
    3. 'axis' → logprob: -2.8970978260040283
    4. 'edge' → logprob: -6.022097587585449
    5. 'p' → logprob: -6.647097587585449
    6. 'point' → logprob: -6.897097587585449
    7. '
' → logprob: -6.897097587585449
    8. ' for' → logprob: -6.897097587585449
    9. ' i' → logprob: -7.022097587585449
    10. '   ' → logprob: -7.772097587585449

Token 1120: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0020497434306889772
    2. 'axis' → logprob: -6.877049922943115
    3. ' for' → logprob: -7.877049922943115
    4. ':
' → logprob: -8.252049446105957
    5. 'axes' → logprob: -9.127049446105957
    6. 'i' → logprob: -9.377049446105957
    7. '
' → logprob: -9.502049446105957
    8. ':' → logprob: -10.127049446105957
    9. 'found' → logprob: -11.252049446105957
    10. 'candidate' → logprob: -11.252049446105957

Token 1121: ' check' (ID: 2371)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -1.5108505487442017
    2. 'possible' → logprob: -1.6358505487442017
    3. 'for' → logprob: -2.385850429534912
    4. '   ' → logprob: -2.510850429534912
    5. 'axis' → logprob: -2.635850429534912
    6. 'valid' → logprob: -2.760850429534912
    7. 's' → logprob: -2.760850429534912
    8. 'sym' → logprob: -2.885850429534912
    9. 'def' → logprob: -3.135850429534912
    10. 'ans' → logprob: -3.385850429534912

Token 1122: ' if' (ID: 538)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -1.4660593271255493
    2. 'sym' → logprob: -1.5910593271255493
    3. 'axis' → logprob: -1.7160593271255493
    4. 'def' → logprob: -1.7160593271255493
    5. 's' → logprob: -2.5910592079162598
    6. '   ' → logprob: -2.7160592079162598
    7. 'possible' → logprob: -3.7160592079162598
    8. 'if' → logprob: -4.59105920791626
    9. 'ok' → logprob: -4.96605920791626
    10. 'for' → logprob: -5.46605920791626

Token 1123: ' polygon' (ID: 65081)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.10651860386133194
    2. ' all' → logprob: -3.481518507003784
    3. 'print' → logprob: -3.856518507003784
    4. '
' → logprob: -3.981518507003784
    5. 'True' → logprob: -4.356518745422363
    6. 'sym' → logprob: -5.481518745422363
    7. '#' → logprob: -5.856518745422363
    8. 'def' → logprob: -6.356518745422363
    9. 'valid' → logprob: -6.481518745422363
    10. 'the' → logprob: -6.481518745422363

Token 1124: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.16864646971225739
    2. 'points' → logprob: -2.7936465740203857
    3. ' is' → logprob: -3.0436465740203857
    4. 's' → logprob: -3.5436465740203857
    5. 'def' → logprob: -5.543646335601807
    6. '_points' → logprob: -5.668646335601807
    7. 'can' → logprob: -6.043646335601807
    8. 'vertices' → logprob: -6.293646335601807
    9. 'reflect' → logprob: -6.793646335601807
    10. ' points' → logprob: -7.293646335601807

Token 1125: ' symmetric' (ID: 123676)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.007814227603375912
    2. 'sym' → logprob: -6.132814407348633
    3. '```' → logprob: -6.257814407348633
    4. 'True' → logprob: -6.882814407348633
    5. '
' → logprob: -7.007814407348633
    6. 'centr' → logprob: -7.257814407348633
    7. 'reflect' → logprob: -8.382814407348633
    8. '"s' → logprob: -8.632814407348633
    9. '   ' → logprob: -9.257814407348633
    10. '1' → logprob: -9.632814407348633

Token 1126: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005818706005811691
    2. '
' → logprob: -5.630818843841553
    3. 'def' → logprob: -6.505818843841553
    4. 'found' → logprob: -8.005818367004395
    5. 'answer' → logprob: -9.630818367004395
    6. 'axis' → logprob: -9.755818367004395
    7. 's' → logprob: -9.880818367004395
    8. '```' → logprob: -9.880818367004395
    9. 'sym' → logprob: -10.255818367004395
    10. 'possible' → logprob: -10.380818367004395

Token 1127: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006705546751618385
    2. 'def' → logprob: -5.6317057609558105
    3. 's' → logprob: -7.0067057609558105
    4. 'found' → logprob: -7.5067057609558105
    5. 'axes' → logprob: -8.006705284118652
    6. 'axis' → logprob: -8.131705284118652
    7. 'sym' → logprob: -8.131705284118652
    8. 'possible' → logprob: -8.506705284118652
    9. 'answer' → logprob: -8.506705284118652
    10. 'ans' → logprob: -9.381705284118652

Token 1128: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.052614934742450714
    2. 'def' → logprob: -4.177615165710449
    3. 'axes' → logprob: -4.427615165710449
    4. 'ans' → logprob: -5.052615165710449
    5. 'checked' → logprob: -5.177615165710449
    6. 'found' → logprob: -5.677615165710449
    7. 's' → logprob: -5.802615165710449
    8. 'axis' → logprob: -6.802615165710449
    9. 'answer' → logprob: -7.052615165710449
    10. 'sym' → logprob: -7.177615165710449

Token 1129: ' verify' (ID: 14866)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8291292190551758
    2. 'axis' → logprob: -1.8291292190551758
    3. 'reflect' → logprob: -2.204129219055176
    4. 'check' → logprob: -2.454129219055176
    5. 'def' → logprob: -2.829129219055176
    6. 'from' → logprob: -3.204129219055176
    7. '_axis' → logprob: -3.704129219055176
    8. '
' → logprob: -3.954129219055176
    9. 'do' → logprob: -4.704129219055176
    10. 'sym' → logprob: -4.954129219055176

Token 1130: ' symmetry' (ID: 90882)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10358238220214844
    2. 'def' → logprob: -2.7285823822021484
    3. 'axis' → logprob: -4.103582382202148
    4. ' for' → logprob: -4.728582382202148
    5. 'each' → logprob: -6.103582382202148
    6. '```' → logprob: -6.228582382202148
    7. '
' → logprob: -6.728582382202148
    8. 'the' → logprob: -7.353582382202148
    9. ' axis' → logprob: -7.603582382202148
    10. '#' → logprob: -8.228582382202148

Token 1131: ' efficiently' (ID: 34229)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7178337574005127
    2. ':' → logprob: -1.4678337574005127
    3. ':
' → logprob: -1.8428337574005127
    4. ',' → logprob: -2.4678337574005127
    5. 'def' → logprob: -3.5928337574005127
    6. 'axis' → logprob: -4.842833518981934
    7. ' for' → logprob: -6.967833518981934
    8. '
' → logprob: -7.717833518981934
    9. 'axes' → logprob: -7.717833518981934
    10. ',
' → logprob: -7.842833518981934

Token 1132: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6093128323554993
    2. 'for' → logprob: -1.4843127727508545
    3. 'axis' → logprob: -2.8593127727508545
    4. 'visited' → logprob: -3.2343127727508545
    5. '#' → logprob: -3.3593127727508545
    6. 'from' → logprob: -3.4843127727508545
    7. 'point' → logprob: -4.359313011169434
    8. 'import' → logprob: -4.359313011169434
    9. '
' → logprob: -4.484313011169434
    10. 'axes' → logprob: -5.484313011169434

Token 1133: ' use' (ID: 1199)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3769935071468353
    2. 'def' → logprob: -1.5019935369491577
    3. 'checked' → logprob: -3.376993417739868
    4. 'axis' → logprob: -3.876993417739868
    5. 'visited' → logprob: -3.876993417739868
    6. 'axes' → logprob: -4.751993656158447
    7. 'used' → logprob: -6.501993656158447
    8. 'possible' → logprob: -6.626993656158447
    9. 'valid' → logprob: -6.876993656158447
    10. '#' → logprob: -7.251993656158447

Token 1134: ' set' (ID: 920)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17596131563186646
    2. 'import' → logprob: -2.8009612560272217
    3. 'set' → logprob: -3.1759612560272217
    4. 'two' → logprob: -3.6759612560272217
    5. 'from' → logprob: -3.9259612560272217
    6. 'def' → logprob: -4.925961494445801
    7. 'for' → logprob: -6.300961494445801
    8. 'binary' → logprob: -6.925961494445801
    9. 'the' → logprob: -7.050961494445801
    10. '```' → logprob: -7.050961494445801

Token 1135: ' of' (ID: 328)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.5478853583335876
    2. 'poly' → logprob: -1.7978854179382324
    3. '_polygon' → logprob: -2.4228854179382324
    4. 'points' → logprob: -2.4228854179382324
    5. 's' → logprob: -3.2978854179382324
    6. '_points' → logprob: -4.047885417938232
    7. 'of' → logprob: -5.047885417938232
    8. '_poly' → logprob: -5.172885417938232
    9. ' polygon' → logprob: -5.547885417938232
    10. '(poly' → logprob: -6.047885417938232

Token 1136: ' points' (ID: 5571)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.05392129346728325
    2. 'poly' → logprob: -3.3039212226867676
    3. 'points' → logprob: -4.178921222686768
    4. ' polygon' → logprob: -8.553921699523926
    5. 'point' → logprob: -9.303921699523926
    6. 'vertices' → logprob: -10.178921699523926
    7. 'pol' → logprob: -11.178921699523926
    8. 'pts' → logprob: -11.428921699523926
    9. 'set' → logprob: -11.428921699523926
    10. 'original' → logprob: -11.553921699523926

Token 1137: ' to' (ID: 316)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.1971719115972519
    2. 'point' → logprob: -1.947171926498413
    3. 'polygon' → logprob: -4.072171688079834
    4. 'poly' → logprob: -4.197171688079834
    5. 'pts' → logprob: -5.697171688079834
    6. 's' → logprob: -7.697171688079834
    7. 'all' → logprob: -9.197172164916992
    8. 'vertices' → logprob: -9.947172164916992
    9. '```' → logprob: -10.197172164916992
    10. 'pt' → logprob: -10.447172164916992

Token 1138: ' check' (ID: 2371)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.8325110673904419
    2. 'poly' → logprob: -1.207511067390442
    3. 'check' → logprob: -1.707511067390442
    4. 'polygon' → logprob: -3.2075109481811523
    5. 'points' → logprob: -4.707510948181152
    6. 'pol' → logprob: -5.082510948181152
    7. '
' → logprob: -5.082510948181152
    8. ' polygon' → logprob: -5.457510948181152
    9. ' check' → logprob: -5.957510948181152
    10. 'all' → logprob: -6.082510948181152

Token 1139: ' reflections' (ID: 99249)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.48086634278297424
    2. 'point' → logprob: -0.9808663129806519
    3. 'poly' → logprob: -5.855866432189941
    4. 'pts' → logprob: -5.980866432189941
    5. 'polygon' → logprob: -6.730866432189941
    6. 's' → logprob: -9.730866432189941
    7. ' points' → logprob: -10.605866432189941
    8. '```' → logprob: -10.855866432189941
    9. 'pt' → logprob: -11.230866432189941
    10. 'all' → logprob: -11.480866432189941

Token 1140: '
' (ID: 198)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.2034568041563034
    2. 'points' → logprob: -1.7034567594528198
    3. 'poly' → logprob: -6.828456878662109
    4. 'polygon' → logprob: -7.578456878662109
    5. 'pts' → logprob: -7.953456878662109
    6. 's' → logprob: -10.20345687866211
    7. '
' → logprob: -10.57845687866211
    8. 'pt' → logprob: -11.82845687866211
    9. 'vertices' → logprob: -12.45345687866211
    10. 'all' → logprob: -12.70345687866211

Token 1141: 'point' (ID: 4859)
  Prédit: 'point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.2591873109340668
    2. 'points' → logprob: -1.5091873407363892
    3. 'pts' → logprob: -5.6341872215271
    4. 'poly' → logprob: -6.6341872215271
    5. 'axis' → logprob: -6.7591872215271
    6. 's' → logprob: -8.009187698364258
    7. 'polygon' → logprob: -8.009187698364258
    8. '```' → logprob: -8.259187698364258
    9. 'pt' → logprob: -9.509187698364258
    10. 'all' → logprob: -10.009187698364258

Token 1142: 'set' (ID: 977)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0015222413931041956
    2. '_set' → logprob: -6.501522064208984
    3. 'set' → logprob: -10.876522064208984
    4. '_s' → logprob: -13.876522064208984
    5. 'Set' → logprob: -17.876522064208984
    6. ' s' → logprob: -18.001522064208984
    7. '_list' → logprob: -18.626522064208984
    8. '_points' → logprob: -18.626522064208984
    9. ' set' → logprob: -18.751522064208984
    10. '_positions' → logprob: -19.001522064208984

Token 1143: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002488618716597557
    2. ' =' → logprob: -6.002488613128662
    3. '=set' → logprob: -11.25248908996582
    4. '＝' → logprob: -18.87748908996582
    5. '={' → logprob: -19.37748908996582
    6. '={}' → logprob: -20.12748908996582
    7. '=

' → logprob: -20.62748908996582
    8. ',' → logprob: -20.75248908996582
    9. '=
' → logprob: -21.00248908996582
    10. '=create' → logprob: -21.00248908996582

Token 1144: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -2.339278580620885e-06
    2. ' set' → logprob: -13.250001907348633
    3. '{' → logprob: -14.500001907348633
    4. '(set' → logprob: -19.500001907348633
    5. '=set' → logprob: -20.125001907348633
    6. '	set' → logprob: -20.250001907348633
    7. '   ' → logprob: -24.375001907348633
    8. ')set' → logprob: -24.750001907348633
    9. '#set' → logprob: -25.125001907348633
    10. 'Set' → logprob: -25.125001907348633

Token 1145: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0005312294815666974
    2. '(points' → logprob: -7.875531196594238
    3. '(poly' → logprob: -9.250531196594238
    4. 'polygon' → logprob: -10.250531196594238
    5. '(point' → logprob: -11.375531196594238
    6. '(pol' → logprob: -12.625531196594238
    7. 'points' → logprob: -12.875531196594238
    8. 'poly' → logprob: -14.250531196594238
    9. '()' → logprob: -14.750531196594238
    10. '((' → logprob: -14.750531196594238

Token 1146: 'olygon' (ID: 80431)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.5794978141784668
    2. 'olygon' → logprob: -1.0794978141784668
    3. 'polygon' → logprob: -2.329497814178467
    4. 'oints' → logprob: -7.454497814178467
    5. 'points' → logprob: -7.579497814178467
    6. 'ol' → logprob: -7.829497814178467
    7. 'p' → logprob: -8.204498291015625
    8. '(points' → logprob: -8.329498291015625
    9. 'oly' → logprob: -8.579498291015625
    10. '(point' → logprob: -9.079498291015625

Token 1147: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1041145626222715e-05
    2. ')
' → logprob: -11.500011444091797
    3. ')

' → logprob: -15.000011444091797
    4. ')p' → logprob: -15.375011444091797
    5. ' )' → logprob: -15.500011444091797
    6. '))' → logprob: -16.625011444091797
    7. ')set' → logprob: -17.125011444091797
    8. '())' → logprob: -17.500011444091797
    9. 'points' → logprob: -18.625011444091797
    10. '(p' → logprob: -18.750011444091797

Token 1148: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09121984988451004
    2. 'ans' → logprob: -2.841219902038574
    3. 'answer' → logprob: -4.216219902038574
    4. 'found' → logprob: -5.091219902038574
    5. 'result' → logprob: -6.091219902038574
    6. 'sym' → logprob: -6.341219902038574
    7. 's' → logprob: -6.591219902038574
    8. 'axes' → logprob: -7.091219902038574
    9. 'res' → logprob: -7.341219902038574
    10. 'def' → logprob: -7.966219902038574

Token 1149: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.47476521134376526
    2. 'is' → logprob: -0.9747651815414429
    3. 'can' → logprob: -7.849765300750732
    4. ' is' → logprob: -9.724764823913574
    5. 'has' → logprob: -9.724764823913574
    6. 'valid' → logprob: -9.849764823913574
    7. ' check' → logprob: -9.849764823913574
    8. 'find' → logprob: -10.599764823913574
    9. 'try' → logprob: -11.099764823913574
    10. 'possible' → logprob: -11.349764823913574

Token 1150: '_axis' (ID: 50852)
  Prédit: '(axis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(axis' → logprob: -0.11723063886165619
    2. '_axis' → logprob: -3.1172306537628174
    3. '(' → logprob: -3.2422306537628174
    4. '(p' → logprob: -4.492230415344238
    5. '_sym' → logprob: -4.617230415344238
    6. '(points' → logprob: -6.742230415344238
    7. '(n' → logprob: -6.992230415344238
    8. '_s' → logprob: -7.242230415344238
    9. '(poly' → logprob: -7.367230415344238
    10. '(point' → logprob: -7.617230415344238

Token 1151: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.04400458186864853
    2. '(p' → logprob: -3.5440046787261963
    3. '(axis' → logprob: -4.294004440307617
    4. '(ax' → logprob: -8.044004440307617
    5. '(line' → logprob: -8.919004440307617
    6. '(point' → logprob: -11.169004440307617
    7. '((' → logprob: -11.419004440307617
    8. '(u' → logprob: -12.294004440307617
    9. '(' → logprob: -12.669004440307617
    10. '(points' → logprob: -12.919004440307617

Token 1152: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.47431302070617676
    2. ',' → logprob: -0.9743130207061768
    3. ',a' → logprob: -9.224312782287598
    4. ',p' → logprob: -9.349312782287598
    5. 'b' → logprob: -10.349312782287598
    6. ' ,' → logprob: -11.224312782287598
    7. ',B' → logprob: -12.974312782287598
    8. 'def' → logprob: -14.724312782287598
    9. ',q' → logprob: -15.099312782287598
    10. ',r' → logprob: -15.224312782287598

Token 1153: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030506495386362076
    2. '):
' → logprob: -3.5305066108703613
    3. '(p' → logprob: -7.280506610870361
    4. '   ' → logprob: -10.280506134033203
    5. ',p' → logprob: -10.905506134033203
    6. ',' → logprob: -12.155506134033203
    7. '):
' → logprob: -13.155506134033203
    8. ':' → logprob: -13.155506134033203
    9. ' ):' → logprob: -13.155506134033203
    10. ')' → logprob: -13.530506134033203

Token 1154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012487331696320325
    2. '```' → logprob: -10.12512493133545
    3. '   ' → logprob: -11.00012493133545
    4. ' for' → logprob: -11.00012493133545
    5. 'n' → logprob: -11.25012493133545
    6. '	n' → logprob: -11.25012493133545
    7. ' n' → logprob: -12.12512493133545
    8. 'for' → logprob: -12.62512493133545
    9. '   ' → logprob: -13.00012493133545
    10. '	for' → logprob: -13.12512493133545

Token 1155: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002777893329039216
    2. ' for' → logprob: -6.252778053283691
    3. ' n' → logprob: -7.877778053283691
    4. 'for' → logprob: -8.502778053283691
    5. 'n' → logprob: -8.752778053283691
    6. ' mid' → logprob: -10.252778053283691
    7. ' ' → logprob: -11.127778053283691
    8. '   ' → logprob: -11.127778053283691
    9. '```' → logprob: -11.627778053283691
    10. ' midpoint' → logprob: -11.877778053283691

Token 1156: ' check' (ID: 2371)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24930834770202637
    2. 'for' → logprob: -1.7493083477020264
    3. ' for' → logprob: -3.7493083477020264
    4. 'vec' → logprob: -5.3743085861206055
    5. 'n' → logprob: -5.6243085861206055
    6. 'mid' → logprob: -5.6243085861206055
    7. 'def' → logprob: -6.2493085861206055
    8. 'm' → logprob: -6.2493085861206055
    9. '#' → logprob: -6.7493085861206055
    10. 'if' → logprob: -6.7493085861206055

Token 1157: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1449083834886551
    2. 'def' → logprob: -3.0199084281921387
    3. ' p' → logprob: -3.8949084281921387
    4. '(p' → logprob: -4.019908428192139
    5. '
' → logprob: -4.144908428192139
    6. 'p' → logprob: -4.644908428192139
    7. 'points' → logprob: -5.269908428192139
    8. '```' → logprob: -5.644908428192139
    9. '    
' → logprob: -6.269908428192139
    10. ')' → logprob: -6.644908428192139

Token 1158: ' reflecting' (ID: 66890)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.567016363143921
    2. 'all' → logprob: -1.692016363143921
    3. 'point' → logprob: -1.817016363143921
    4. 'n' → logprob: -2.192016363143921
    5. 'polygon' → logprob: -2.317016363143921
    6. 'a' → logprob: -2.567016363143921
    7. '
' → logprob: -2.942016363143921
    8. ' all' → logprob: -3.192016363143921
    9. 'check' → logprob: -4.3170166015625
    10. ' polygon' → logprob: -4.5670166015625

Token 1159: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -1.0582025051116943
    2. 'p' → logprob: -1.3082025051116943
    3. 'point' → logprob: -1.8082025051116943
    4. 'poly' → logprob: -2.5582025051116943
    5. ' polygon' → logprob: -2.6832025051116943
    6. ')' → logprob: -3.3082025051116943
    7. '_polygon' → logprob: -4.683202743530273
    8. 'a' → logprob: -5.183202743530273
    9. 'all' → logprob: -5.308202743530273
    10. 'points' → logprob: -5.683202743530273

Token 1160: ' across' (ID: 5251)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -1.183324933052063
    2. 'around' → logprob: -1.308324933052063
    3. 'over' → logprob: -1.308324933052063
    4. ')' → logprob: -3.3083248138427734
    5. 'about' → logprob: -3.9333248138427734
    6. 'points' → logprob: -4.183324813842773
    7. 'poly' → logprob: -4.433324813842773
    8. 'through' → logprob: -4.558324813842773
    9. ' around' → logprob: -4.558324813842773
    10. '(poly' → logprob: -4.683324813842773

Token 1161: ' line' (ID: 2543)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0014804595848545432
    2. '(a' → logprob: -7.126480579376221
    3. ' a' → logprob: -7.501480579376221
    4. 'line' → logprob: -9.376480102539062
    5. ' (' → logprob: -10.751480102539062
    6. ' line' → logprob: -12.251480102539062
    7. 'lambda' → logprob: -12.376480102539062
    8. 'the' → logprob: -12.501480102539062
    9. 'ab' → logprob: -14.001480102539062
    10. '
' → logprob: -14.251480102539062

Token 1162: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23064765334129333
    2. '(a' → logprob: -1.7306476831436157
    3. '   ' → logprob: -4.605647563934326
    4. ' a' → logprob: -4.855647563934326
    5. 'ab' → logprob: -5.105647563934326
    6. ' (' → logprob: -6.605647563934326
    7. 'def' → logprob: -6.730647563934326
    8. '
' → logprob: -7.230647563934326
    9. 'through' → logprob: -7.855647563934326
    10. '(p' → logprob: -8.105648040771484

Token 1163: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.0003466673369985074
    2. ',' → logprob: -8.250347137451172
    3. 'b' → logprob: -9.375347137451172
    4. ' ,' → logprob: -15.250347137451172
    5. 'and' → logprob: -16.375347137451172
    6. ',p' → logprob: -16.875347137451172
    7. ',
' → logprob: -17.000347137451172
    8. '```' → logprob: -17.125347137451172
    9. '   ' → logprob: -17.750347137451172
    10. ',a' → logprob: -17.875347137451172

Token 1164: ' yields' (ID: 59684)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020494705066084862
    2. ' returns' → logprob: -4.3954949378967285
    3. ' points' → logprob: -6.7704949378967285
    4. ' for' → logprob: -6.8954949378967285
    5. ' def' → logprob: -7.2704949378967285
    6. ' causes' → logprob: -7.5204949378967285
    7. '
' → logprob: -7.6454949378967285
    8. ',' → logprob: -7.6454949378967285
    9. ' results' → logprob: -7.6454949378967285
    10. ')' → logprob: -7.6454949378967285

Token 1165: ' the' (ID: 290)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.24947546422481537
    2. 'polygon' → logprob: -2.4994754791259766
    3. 'all' → logprob: -2.6244754791259766
    4. ' True' → logprob: -3.2494754791259766
    5. 'the' → logprob: -4.874475479125977
    6. ' all' → logprob: -4.999475479125977
    7. 'a' → logprob: -5.499475479125977
    8. 'point' → logprob: -5.874475479125977
    9. ' polygon' → logprob: -6.249475479125977
    10. 'len' → logprob: -6.749475479125977

Token 1166: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.03772423788905144
    2. 'polygon' → logprob: -3.662724256515503
    3. 'len' → logprob: -5.537724018096924
    4. 'exact' → logprob: -5.662724018096924
    5. 'poly' → logprob: -6.537724018096924
    6. ' same' → logprob: -7.037724018096924
    7. 'True' → logprob: -7.287724018096924
    8. 'correct' → logprob: -7.662724018096924
    9. '
' → logprob: -9.287724494934082
    10. 'complete' → logprob: -9.662724494934082

Token 1167: ' polygon' (ID: 65081)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.7746239304542542
    2. 'point' → logprob: -1.5246238708496094
    3. 'polygon' → logprob: -1.8996238708496094
    4. 'if' → logprob: -2.8996238708496094
    5. 'poly' → logprob: -2.8996238708496094
    6. 'set' → logprob: -3.3996238708496094
    7. 'for' → logprob: -4.024623870849609
    8. '
' → logprob: -5.274623870849609
    9. '   ' → logprob: -6.774623870849609
    10. 'def' → logprob: -6.899623870849609

Token 1168: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044819872826337814
    2. '
' → logprob: -4.1698198318481445
    3. ':' → logprob: -4.6698198318481445
    4. '):
' → logprob: -5.2948198318481445
    5. ':
' → logprob: -5.2948198318481445
    6. '):' → logprob: -6.0448198318481445
    7. '    
' → logprob: -6.0448198318481445
    8. ')' → logprob: -6.1698198318481445
    9. '```' → logprob: -6.7948198318481445
    10. ',' → logprob: -8.419819831848145

Token 1169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025426088832318783
    2. '```' → logprob: -6.252542495727539
    3. ' for' → logprob: -7.752542495727539
    4. 'for' → logprob: -10.377542495727539
    5. 'tokens' → logprob: -10.627542495727539
    6. '    ' → logprob: -11.002542495727539
    7. '       ' → logprob: -11.002542495727539
    8. 'n' → logprob: -11.252542495727539
    9. '``' → logprob: -11.502542495727539
    10. ' points' → logprob: -11.502542495727539

Token 1170: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11375069618225098
    2. '   ' → logprob: -2.238750696182251
    3. 'ref' → logprob: -7.988750457763672
    4. ' for' → logprob: -8.613750457763672
    5. 'mid' → logprob: -8.863750457763672
    6. 'm' → logprob: -9.738750457763672
    7. 'mapped' → logprob: -9.863750457763672
    8. 'poly' → logprob: -10.113750457763672
    9. 'n' → logprob: -11.113750457763672
    10. 'mapping' → logprob: -11.363750457763672

Token 1171: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10116124898195267
    2. 'for' → logprob: -2.476161241531372
    3. 'ref' → logprob: -4.851161479949951
    4. 'poly' → logprob: -6.851161479949951
    5. 'if' → logprob: -7.226161479949951
    6. 'm' → logprob: -7.476161479949951
    7. 'mid' → logprob: -7.726161479949951
    8. ' reflected' → logprob: -7.976161479949951
    9. ' for' → logprob: -7.976161479949951
    10. 'mapped' → logprob: -9.101161003112793

Token 1172: ' each' (ID: 2454)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.002390398643910885
    2. 'pt' → logprob: -6.252390384674072
    3. 'i' → logprob: -8.00239086151123
    4. 'point' → logprob: -9.37739086151123
    5. ' p' → logprob: -11.12739086151123
    6. 'poly' → logprob: -11.50239086151123
    7. 'each' → logprob: -12.37739086151123
    8. 'idx' → logprob: -13.00239086151123
    9. 'v' → logprob: -13.25239086151123
    10. '
' → logprob: -13.50239086151123

Token 1173: ' vertex' (ID: 25363)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002523992152418941
    2. ' p' → logprob: -8.875252723693848
    3. 'point' → logprob: -9.875252723693848
    4. 'i' → logprob: -10.375252723693848
    5. '   ' → logprob: -10.875252723693848
    6. 'pt' → logprob: -12.375252723693848
    7. '```' → logprob: -12.500252723693848
    8. 'v' → logprob: -13.625252723693848
    9. '
' → logprob: -14.375252723693848
    10. '    
' → logprob: -14.875252723693848

Token 1174: ' p' (ID: 275)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1597459763288498
    2. '   ' → logprob: -2.659745931625366
    3. ' p' → logprob: -2.909745931625366
    4. 'in' → logprob: -4.284746170043945
    5. 'p' → logprob: -5.534746170043945
    6. 'v' → logprob: -5.659746170043945
    7. ' v' → logprob: -6.284746170043945
    8. ',' → logprob: -10.034746170043945
    9. ' for' → logprob: -11.284746170043945
    10. '
' → logprob: -11.659746170043945

Token 1175: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6694622039794922
    2. ' in' → logprob: -0.9194622039794922
    3. ':' → logprob: -2.669462203979492
    4. ':
' → logprob: -4.669462203979492
    5. ',' → logprob: -5.544462203979492
    6. '       ' → logprob: -5.669462203979492
    7. 'in' → logprob: -6.169462203979492
    8. '    ' → logprob: -8.544462203979492
    9. '):
' → logprob: -8.669462203979492
    10. ' :' → logprob: -9.044462203979492

Token 1176: ' reflected' (ID: 45264)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4477199614048004
    2. ' reflected' → logprob: -1.822719931602478
    3. 'ref' → logprob: -2.4477200508117676
    4. 'r' → logprob: -3.3227200508117676
    5. ' p' → logprob: -4.322720050811768
    6. ' rp' → logprob: -4.322720050811768
    7. ' r' → logprob: -4.572720050811768
    8. '       ' → logprob: -4.822720050811768
    9. 'rp' → logprob: -4.822720050811768
    10. 'p' → logprob: -5.072720050811768

Token 1177: ' p' (ID: 275)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06308548897504807
    2. 'p' → logprob: -2.9380855560302734
    3. ' =' → logprob: -4.938085556030273
    4. '=p' → logprob: -7.063085556030273
    5. '_p' → logprob: -9.563085556030273
    6. 'point' → logprob: -10.188085556030273
    7. '=
' → logprob: -11.438085556030273
    8. '_point' → logprob: -11.938085556030273
    9. '=(' → logprob: -12.188085556030273
    10. '```' → logprob: -12.938085556030273

Token 1178: ''' (ID: 6)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01817721500992775
    2. ' =' → logprob: -4.018177032470703
    3. '=r' → logprob: -12.018177032470703
    4. '=(' → logprob: -12.143177032470703
    5. '=
' → logprob: -12.518177032470703
    6. '=p' → logprob: -12.893177032470703
    7. '=re' → logprob: -13.018177032470703
    8. '=get' → logprob: -13.518177032470703
    9. '=set' → logprob: -13.768177032470703
    10. '=int' → logprob: -13.893177032470703

Token 1179: ' should' (ID: 1757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17988325655460358
    2. ' =' → logprob: -1.8048832416534424
    3. '   ' → logprob: -9.179883003234863
    4. '=p' → logprob: -10.929883003234863
    5. 'p' → logprob: -12.179883003234863
    6. '=
' → logprob: -12.804883003234863
    7. 'for' → logprob: -13.429883003234863
    8. '=(' → logprob: -13.554883003234863
    9. ')' → logprob: -13.804883003234863
    10. '=set' → logprob: -14.554883003234863

Token 1180: ' be' (ID: 413)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7124490141868591
    2. 'be' → logprob: -0.7124490141868591
    3. ' be' → logprob: -4.212449073791504
    4. ' in' → logprob: -5.587449073791504
    5. 'also' → logprob: -8.212449073791504
    6. 'return' → logprob: -9.087449073791504
    7. 'not' → logprob: -10.212449073791504
    8. 'have' → logprob: -10.337449073791504
    9. 'exist' → logprob: -10.462449073791504
    10. ')' → logprob: -10.837449073791504

Token 1181: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.01101682148873806
    2. 'tuple' → logprob: -5.136016845703125
    3. ' in' → logprob: -6.761016845703125
    4. 'point' → logprob: -7.011016845703125
    5. '
' → logprob: -7.261016845703125
    6. 'None' → logprob: -7.761016845703125
    7. 'next' → logprob: -7.886016845703125
    8. 'p' → logprob: -7.886016845703125
    9. ')' → logprob: -8.261016845703125
    10. 'polygon' → logprob: -8.261016845703125

Token 1182: ' polygon' (ID: 65081)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -2.093505099765025e-05
    2. ' point' → logprob: -10.875020980834961
    3. 'polygon' → logprob: -13.625020980834961
    4. '
' → logprob: -14.500020980834961
    5. '   ' → logprob: -15.375020980834961
    6. 'poly' → logprob: -17.00002098083496
    7. '	point' → logprob: -17.37502098083496
    8. 'points' → logprob: -17.50002098083496
    9. '(point' → logprob: -18.00002098083496
    10. '```' → logprob: -18.00002098083496

Token 1183: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004430627159308642
    2. '
' → logprob: -8.000443458557129
    3. '    
' → logprob: -10.000443458557129
    4. ')' → logprob: -11.375443458557129
    5. 'def' → logprob: -11.375443458557129
    6. ',' → logprob: -11.500443458557129
    7. ' for' → logprob: -12.250443458557129
    8. '<|end|>' → logprob: -12.625443458557129
    9. ':' → logprob: -12.750443458557129
    10. '.' → logprob: -12.875443458557129

Token 1184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.219262624857947e-05
    2. '    
' → logprob: -10.250072479248047
    3. '
' → logprob: -11.250072479248047
    4. ' for' → logprob: -11.875072479248047
    5. ',' → logprob: -12.250072479248047
    6. ')' → logprob: -12.375072479248047
    7. 'def' → logprob: -13.500072479248047
    8. '<|end|>' → logprob: -13.500072479248047
    9. '```' → logprob: -13.625072479248047
    10. 'import' → logprob: -14.250072479248047

Token 1185: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03909948095679283
    2. ' for' → logprob: -3.2890994548797607
    3. 'for' (adapté à ' for') → logprob: -6.91409969329834
    4. '    
' → logprob: -10.66409969329834
    5. '	for' → logprob: -10.78909969329834
    6. '
' → logprob: -12.16409969329834
    7. '    ' → logprob: -12.78909969329834
    8. '  ' → logprob: -13.03909969329834
    9. 'def' → logprob: -13.41409969329834
    10. '       ' → logprob: -13.41409969329834

Token 1186: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002639582962729037
    2. ' p' → logprob: -8.250264167785645
    3. '   ' → logprob: -12.875264167785645
    4. 'v' → logprob: -17.000263214111328
    5. 'point' → logprob: -17.375263214111328
    6. 'i' → logprob: -18.000263214111328
    7. ' ' → logprob: -18.625263214111328
    8. '       ' → logprob: -19.250263214111328
    9. '    ' → logprob: -19.375263214111328
    10. '	p' → logprob: -19.375263214111328

Token 1187: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20147950947284698
    2. 'in' → logprob: -1.7014795541763306
    3. '   ' → logprob: -10.9514799118042
    4. ',' → logprob: -11.0764799118042
    5. '(p' → logprob: -11.2014799118042
    6. ')' → logprob: -12.5764799118042
    7. '    ' → logprob: -12.9514799118042
    8. '  ' → logprob: -13.0764799118042
    9. '	in' → logprob: -13.0764799118042
    10. '):
' → logprob: -13.3264799118042

Token 1188: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.025137409567832947
    2. ' polygon' → logprob: -3.775137424468994
    3. 'point' → logprob: -6.275137424468994
    4. 'poly' → logprob: -12.775136947631836
    5. ' point' → logprob: -13.025136947631836
    6. 'pol' → logprob: -13.400136947631836
    7. '
' → logprob: -14.275136947631836
    8. '_polygon' → logprob: -15.650136947631836
    9. '(point' → logprob: -16.400136947631836
    10. ' ' → logprob: -16.900136947631836

Token 1189: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4749966263771057
    2. ':
' → logprob: -0.9749966263771057
    3. '   ' → logprob: -7.599996566772461
    4. '):
' → logprob: -8.349996566772461
    5. '       ' → logprob: -9.474996566772461
    6. '):' → logprob: -9.849996566772461
    7. ':
' → logprob: -11.474996566772461
    8. ':

' → logprob: -11.849996566772461
    9. ')' → logprob: -12.224996566772461
    10. ' in' → logprob: -12.349996566772461

Token 1190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.523948907968588e-05
    2. ',' → logprob: -11.250035285949707
    3. '   ' → logprob: -12.625035285949707
    4. ' if' → logprob: -12.875035285949707
    5. '    ' → logprob: -12.875035285949707
    6. '<|end|>' → logprob: -12.875035285949707
    7. '        
' → logprob: -13.000035285949707
    8. ' p' → logprob: -13.125035285949707
    9. '      ' → logprob: -13.750035285949707
    10. '```' → logprob: -13.750035285949707

Token 1191: ' rp' (ID: 64256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2859649062156677
    2. 'rp' (adapté à ' rp') → logprob: -2.5359649658203125
    3. 'p' → logprob: -2.7859649658203125
    4. ' rp' → logprob: -3.0359649658203125
    5. 'r' → logprob: -3.4109649658203125
    6. ' p' → logprob: -4.0359649658203125
    7. ' if' → logprob: -5.7859649658203125
    8. ' r' → logprob: -5.9109649658203125
    9. ' reflected' → logprob: -6.6609649658203125
    10. '   ' → logprob: -7.1609649658203125

Token 1192: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008621551096439362
    2. ' =' → logprob: -4.758621692657471
    3. '=r' → logprob: -12.633621215820312
    4. '=
' → logprob: -13.758621215820312
    5. 'r' → logprob: -14.008621215820312
    6. '=(' → logprob: -14.258621215820312
    7. '=

' → logprob: -15.008621215820312
    8. '=get' → logprob: -15.383621215820312
    9. '=p' → logprob: -15.633621215820312
    10. '=int' → logprob: -16.383621215820312

Token 1193: ' reflect' (ID: 12140)
  Prédit: 'reflect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reflect' → logprob: -0.011047814972698689
    2. ' reflect' → logprob: -4.511047840118408
    3. 'ref' → logprob: -17.38604736328125
    4. '   ' → logprob: -18.26104736328125
    5. '.reflect' → logprob: -18.51104736328125
    6. 'Reflect' → logprob: -19.01104736328125
    7. '    
' → logprob: -21.38604736328125
    8. ' refle' → logprob: -22.01104736328125
    9. '       ' → logprob: -22.38604736328125
    10. ' reflet' → logprob: -22.38604736328125

Token 1194: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.0013579712249338627
    2. '(p' → logprob: -6.7513580322265625
    3. '_p' → logprob: -8.876358032226562
    4. 'p' → logprob: -10.126358032226562
    5. 'point' → logprob: -13.126358032226562
    6. '_' → logprob: -13.251358032226562
    7. '_points' → logprob: -13.751358032226562
    8. '_token' → logprob: -13.876358032226562
    9. ' p' → logprob: -14.126358032226562
    10. '[p' → logprob: -15.126358032226562

Token 1195: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -5.836499985889532e-05
    2. '(' → logprob: -10.1250581741333
    3. 'p' → logprob: -11.1250581741333
    4. ' (' → logprob: -12.7500581741333
    5. ' p' → logprob: -15.3750581741333
    6. ',p' → logprob: -16.000059127807617
    7. ')' → logprob: -16.500059127807617
    8. '(
' → logprob: -17.000059127807617
    9. '
' → logprob: -17.375059127807617
    10. '```' → logprob: -17.500059127807617

Token 1196: ',a' (ID: 26776)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034963350743055344
    2. ',p' → logprob: -4.159963130950928
    3. '(p' → logprob: -4.159963130950928
    4. ',a' → logprob: -6.909963130950928
    5. '(' → logprob: -7.409963130950928
    6. 'p' → logprob: -7.534963130950928
    7. ')' → logprob: -7.784963130950928
    8. ' ,' → logprob: -8.409963607788086
    9. 'a' → logprob: -8.909963607788086
    10. '(a' → logprob: -9.034963607788086

Token 1197: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.006197656970471144
    2. ',' → logprob: -5.256197452545166
    3. ',p' → logprob: -7.131197452545166
    4. 'b' → logprob: -8.756197929382324
    5. ' ,' → logprob: -12.381197929382324
    6. ',r' → logprob: -13.881197929382324
    7. 'p' → logprob: -14.881197929382324
    8. ' b' → logprob: -15.756197929382324
    9. ',B' → logprob: -16.756196975708008
    10. ',
' → logprob: -16.756196975708008

Token 1198: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5786211490631104
    2. ')
' → logprob: -0.8286211490631104
    3. '       ' → logprob: -5.953620910644531
    4. ')
' → logprob: -9.578620910644531
    5. '   ' → logprob: -12.828620910644531
    6. '):
' → logprob: -13.078620910644531
    7. ' )
' → logprob: -13.203620910644531
    8. ')

' → logprob: -13.453620910644531
    9. '
' → logprob: -14.078620910644531
    10. ' )' → logprob: -14.078620910644531

Token 1199: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003420183784328401
    2. ' if' → logprob: -8.37534236907959
    3. 'if' → logprob: -9.62534236907959
    4. '<|end|>' → logprob: -11.12534236907959
    5. '        
' → logprob: -11.37534236907959
    6. ',' → logprob: -11.87534236907959
    7. ')' → logprob: -12.62534236907959
    8. '   ' → logprob: -13.25034236907959
    9. '```' → logprob: -13.87534236907959
    10. '	' → logprob: -14.00034236907959

Token 1200: ' #' (ID: 1069)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.6608136892318726
    2. 'if' → logprob: -0.7858136892318726
    3. '       ' → logprob: -3.660813808441162
    4. ' if' → logprob: -7.785813808441162
    5. '#' (adapté à ' #') → logprob: -7.910813808441162
    6. 'x' → logprob: -8.160813331604004
    7. 'rp' → logprob: -8.285813331604004
    8. ' found' → logprob: -8.410813331604004
    9. 'rounded' → logprob: -8.535813331604004
    10. 'exists' → logprob: -9.535813331604004

Token 1201: ' floating' (ID: 35887)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6629669666290283
    2. 'found' → logprob: -0.7879669666290283
    3. 'rp' → logprob: -4.662966728210449
    4. 'rx' → logprob: -5.037966728210449
    5. 'key' → logprob: -5.537966728210449
    6. '#' → logprob: -5.787966728210449
    7. 'x' → logprob: -6.162966728210449
    8. '       ' → logprob: -6.537966728210449
    9. 'rounded' → logprob: -6.912966728210449
    10. '   ' → logprob: -7.537966728210449

Token 1202: ' fix' (ID: 9295)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.46417808532714844
    2. ' for' → logprob: -2.2141780853271484
    3. 'for' → logprob: -2.2141780853271484
    4. ' point' → logprob: -3.0891780853271484
    5. 'point' → logprob: -4.214178085327148
    6. '-point' → logprob: -4.214178085327148
    7. '_error' → logprob: -4.464178085327148
    8. 'p' → logprob: -4.714178085327148
    9. 'rp' → logprob: -5.089178085327148
    10. '_tol' → logprob: -5.214178085327148

Token 1203: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6462694406509399
    2. '       ' → logprob: -1.39626944065094
    3. 'if' → logprob: -1.77126944065094
    4. '
' → logprob: -3.3962693214416504
    5. ' for' → logprob: -5.02126932144165
    6. 'for' → logprob: -5.52126932144165
    7. ' =' → logprob: -6.14626932144165
    8. 'x' → logprob: -6.52126932144165
    9. ' rp' → logprob: -6.52126932144165
    10. 'ed' → logprob: -6.77126932144165

Token 1204: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026989899575710297
    2. 'if' → logprob: -4.026989936828613
    3. ' if' → logprob: -5.776989936828613
    4. 'for' → logprob: -6.401989936828613
    5. ' for' → logprob: -7.276989936828613
    6. 'rp' → logprob: -7.276989936828613
    7. '```' → logprob: -7.651989936828613
    8. 'x' → logprob: -7.776989936828613
    9. 'ed' → logprob: -7.901989936828613
    10. ' rp' → logprob: -8.276989936828613

Token 1205: ' rp' (ID: 64256)
  Prédit: 'rp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rp' (adapté à ' rp') → logprob: -0.17433859407901764
    2. 'found' → logprob: -2.4243385791778564
    3. 'if' → logprob: -2.7993385791778564
    4. '       ' → logprob: -4.9243388175964355
    5. 'x' → logprob: -7.1743388175964355
    6. 'rx' → logprob: -7.2993388175964355
    7. 'key' → logprob: -8.299338340759277
    8. 'rounded' → logprob: -8.299338340759277
    9. 'xr' → logprob: -8.549338340759277
    10. 'r' → logprob: -8.549338340759277

Token 1206: '_round' (ID: 79298)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3587974011898041
    2. ' =' → logprob: -1.3587974309921265
    3. '_' → logprob: -3.983797311782837
    4. '=(' → logprob: -3.983797311782837
    5. '_int' → logprob: -5.858797550201416
    6. '=int' → logprob: -6.108797550201416
    7. 'rounded' → logprob: -6.483797550201416
    8. 'int' → logprob: -8.108797073364258
    9. 'r' → logprob: -8.733797073364258
    10. '_=' → logprob: -10.108797073364258

Token 1207: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.577832818031311
    2. '=' → logprob: -0.827832818031311
    3. 'ed' → logprob: -6.3278326988220215
    4. 'd' → logprob: -9.95283317565918
    5. '=(' → logprob: -10.70283317565918
    6. '=int' → logprob: -11.45283317565918
    7. '=r' → logprob: -11.82783317565918
    8. 'p' → logprob: -12.57783317565918
    9. '=p' → logprob: -13.07783317565918
    10. ' ' → logprob: -13.20283317565918

Token 1208: ' (' (ID: 350)
  Prédit: '(round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(round' → logprob: -0.060848187655210495
    2. '(rx' → logprob: -3.3108482360839844
    3. '(r' → logprob: -3.8108482360839844
    4. '(rt' → logprob: -9.560848236083984
    5. '(rs' → logprob: -9.685848236083984
    6. '(int' → logprob: -10.060848236083984
    7. '(rb' → logprob: -10.185848236083984
    8. '(tuple' → logprob: -10.185848236083984
    9. '(rr' → logprob: -10.310848236083984
    10. ' (' → logprob: -10.435848236083984

Token 1209: 'round' (ID: 1964)
  Prédit: 'round'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'round' → logprob: -0.00034845535992644727
    2. 'int' → logprob: -8.500348091125488
    3. '(round' → logprob: -9.000348091125488
    4. ' round' → logprob: -10.750348091125488
    5. 'float' → logprob: -17.375349044799805
    6. '(int' → logprob: -18.000349044799805
    7. ' int' → logprob: -18.250349044799805
    8. '.round' → logprob: -19.000349044799805
    9. 'rp' → logprob: -19.125349044799805
    10. '-round' → logprob: -19.250349044799805

Token 1210: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -4.513339445111342e-05
    2. 'rp' → logprob: -10.375044822692871
    3. '(round' → logprob: -12.000044822692871
    4. '(int' → logprob: -12.375044822692871
    5. ' rp' → logprob: -13.625044822692871
    6. 'r' → logprob: -14.375044822692871
    7. 'int' → logprob: -14.625044822692871
    8. '(rx' → logprob: -14.625044822692871
    9. '	r' → logprob: -15.250044822692871
    10. '[r' → logprob: -15.625044822692871

Token 1211: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00043007321073673666
    2. 'rp' → logprob: -8.7504301071167
    3. ')p' → logprob: -10.3754301071167
    4. 'r' → logprob: -10.5629301071167
    5. ')' → logprob: -10.6879301071167
    6. '[' → logprob: -10.7504301071167
    7. 'pr' → logprob: -11.3754301071167
    8. 'f' → logprob: -11.4379301071167
    9. '   ' → logprob: -11.4379301071167
    10. 'ep' → logprob: -11.5629301071167

Token 1212: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06696634739637375
    2. '0' → logprob: -2.8169662952423096
    3. '(' → logprob: -5.316966533660889
    4. ')' → logprob: -10.06696605682373
    5. ',' → logprob: -10.81696605682373
    6. '   ' → logprob: -12.94196605682373
    7. '
' → logprob: -13.31696605682373
    8. 'p' → logprob: -13.44196605682373
    9. '),' → logprob: -13.44196605682373
    10. ' (' → logprob: -13.44196605682373

Token 1213: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.875
    3. ' ' → logprob: -16.625
    4. '1' → logprob: -18.5
    5. '   ' → logprob: -19.125
    6. '00' → logprob: -19.375
    7. '```' → logprob: -19.8125
    8. '000' → logprob: -20.125
    9. '۰' → logprob: -20.1875
    10. '2' → logprob: -20.3125

Token 1214: '],' (ID: 2155)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.3138439655303955
    2. ',' → logprob: -1.3138439655303955
    3. ',),' → logprob: -8.813843727111816
    4. ' ),' → logprob: -8.938843727111816
    5. ' ,' → logprob: -8.938843727111816
    6. ')' → logprob: -9.688843727111816
    7. ',r' → logprob: -10.438843727111816
    8. '```' → logprob: -10.938843727111816
    9. '),
' → logprob: -11.313843727111816
    10. '),(' → logprob: -11.313843727111816

Token 1215: '6' (ID: 21)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.47448673844337463
    2. '8' → logprob: -0.9744867086410522
    3. '7' → logprob: -8.349486351013184
    4. '6' → logprob: -8.724486351013184
    5. '10' → logprob: -11.474486351013184
    6. '12' → logprob: -15.974486351013184
    7. ' ' → logprob: -16.5994873046875
    8. '
' → logprob: -19.2244873046875
    9. ' nine' → logprob: -19.4744873046875
    10. '15' → logprob: -19.5994873046875

Token 1216: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010032063350081444
    2. '),' → logprob: -4.6350321769714355
    3. ',r' → logprob: -8.510031700134277
    4. ' ,' → logprob: -9.760031700134277
    5. ',
' → logprob: -12.010031700134277
    6. ',),' → logprob: -12.510031700134277
    7. '),(' → logprob: -12.885031700134277
    8. ')' → logprob: -13.635031700134277
    9. ',p' → logprob: -14.135031700134277
    10. '   ' → logprob: -14.510031700134277

Token 1217: ' round' (ID: 7353)
  Prédit: 'round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'round' → logprob: -0.029750604182481766
    2. ' round' → logprob: -3.5297505855560303
    3. '(round' → logprob: -16.27975082397461
    4. 'rounded' → logprob: -22.40475082397461
    5. '.round' → logprob: -23.27975082397461
    6. '-round' → logprob: -23.65475082397461
    7. '    ' → logprob: -23.77975082397461
    8. '_round' → logprob: -24.02975082397461
    9. ' rounding' → logprob: -24.27975082397461
    10. 'Round' → logprob: -24.40475082397461

Token 1218: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0005542247672565281
    2. '(round' → logprob: -7.500554084777832
    3. '(' → logprob: -14.375554084777832
    4. 'r' → logprob: -15.375554084777832
    5. ' (' → logprob: -16.25055503845215
    6. 'round' → logprob: -16.37555503845215
    7. ')' → logprob: -16.37555503845215
    8. '   ' → logprob: -16.62555503845215
    9. ' ' → logprob: -17.75055503845215
    10. '((' → logprob: -17.87555503845215

Token 1219: 'p' (ID: 79)
  Prédit: 'rp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rp' → logprob: -0.005410553887486458
    2. 'p' → logprob: -5.255410671234131
    3. 'r' → logprob: -9.505410194396973
    4. ' rp' → logprob: -10.005410194396973
    5. '6' → logprob: -10.255410194396973
    6. '(r' → logprob: -11.755410194396973
    7. '-r' → logprob: -12.630410194396973
    8. '   ' → logprob: -13.380410194396973
    9. '2' → logprob: -13.880410194396973
    10. '(' → logprob: -13.880410194396973

Token 1220: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03375012427568436
    2. '1' → logprob: -3.408750057220459
    3. '(' → logprob: -9.783750534057617
    4. '```' → logprob: -10.408750534057617
    5. '0' → logprob: -11.408750534057617
    6. '   ' → logprob: -12.783750534057617
    7. '-' → logprob: -14.408750534057617
    8. ' ' → logprob: -14.783750534057617
    9. '2' → logprob: -14.908750534057617
    10. '#' → logprob: -14.908750534057617

Token 1221: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09801473468542099
    2. '6' → logprob: -2.5980148315429688
    3. '1' → logprob: -3.9730148315429688
    4. ' ' → logprob: -9.348014831542969
    5. '```' → logprob: -10.848014831542969
    6. '   ' → logprob: -11.348014831542969
    7. '[' → logprob: -12.598014831542969
    8. '-' → logprob: -13.348014831542969
    9. '3' → logprob: -14.473014831542969
    10. '(' → logprob: -14.598014831542969

Token 1222: '],' (ID: 2155)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014812873676419258
    2. '0' → logprob: -4.88981294631958
    3. '],' → logprob: -5.13981294631958
    4. '),' → logprob: -7.13981294631958
    5. ',' → logprob: -8.139812469482422
    6. '6' → logprob: -9.139812469482422
    7. '(' → logprob: -10.014812469482422
    8. '1' → logprob: -10.764812469482422
    9. ']),' → logprob: -11.139812469482422
    10. '```' → logprob: -11.389812469482422

Token 1223: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: 0.0
    2. ' ' → logprob: -19.25
    3. '```' → logprob: -19.875
    4. '   ' → logprob: -21.25
    5. '۶' → logprob: -23.25
    6. '' → logprob: -23.75
    7. '           ' → logprob: -23.75
    8. '`' → logprob: -24.0
    9. ')' → logprob: -24.125
    10. '٦' → logprob: -24.125

Token 1224: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.020218806341290474
    2. '))
' → logprob: -4.270218849182129
    3. ')' → logprob: -5.145218849182129
    4. '),' → logprob: -8.770218849182129
    5. ')
' → logprob: -10.895218849182129
    6. '       ' → logprob: -11.020218849182129
    7. '   ' → logprob: -11.645218849182129
    8. '))

' → logprob: -12.395218849182129
    9. '))
' → logprob: -13.145218849182129
    10. ')))' → logprob: -13.770218849182129

Token 1225: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010032468708232045
    2. ' if' → logprob: -9.875100135803223
    3. '<|end|>' → logprob: -10.250100135803223
    4. 'if' → logprob: -12.375100135803223
    5. ')' → logprob: -12.750100135803223
    6. '   ' → logprob: -13.000100135803223
    7. ',' → logprob: -13.250100135803223
    8. '        
' → logprob: -14.250100135803223
    9. '```' → logprob: -14.750100135803223
    10. '           ' → logprob: -14.875100135803223

Token 1226: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.024261416867375374
    2. '       ' → logprob: -3.774261474609375
    3. ' if' → logprob: -6.899261474609375
    4. '   ' → logprob: -12.399261474609375
    5. '```' → logprob: -14.399261474609375
    6. '	if' → logprob: -14.774261474609375
    7. 'If' → logprob: -14.899261474609375
    8. ' ' → logprob: -15.149261474609375
    9. '        
' → logprob: -15.274261474609375
    10. '
' → logprob: -15.274261474609375

Token 1227: ' not' (ID: 625)
  Prédit: 'rp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rp' → logprob: -0.00010986098641296849
    2. ' rp' → logprob: -9.250109672546387
    3. '   ' → logprob: -12.375109672546387
    4. '(r' → logprob: -12.875109672546387
    5. 'not' → logprob: -13.000109672546387
    6. 'all' → logprob: -13.375109672546387
    7. '(' → logprob: -14.125109672546387
    8. '     ' → logprob: -14.875109672546387
    9. 'tuple' → logprob: -14.875109672546387
    10. '       ' → logprob: -15.125109672546387

Token 1228: ' any' (ID: 1062)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.8112854361534119
    2. 'rp' → logprob: -0.8112854361534119
    3. 'any' → logprob: -2.5612854957580566
    4. '(any' → logprob: -3.5612854957580566
    5. ' rp' → logprob: -5.811285495758057
    6. '((' → logprob: -7.186285495758057
    7. '(' → logprob: -7.436285495758057
    8. '(
' → logprob: -8.311285018920898
    9. ' (' → logprob: -8.436285018920898
    10. 'all' → logprob: -8.436285018920898

Token 1229: '(abs' (ID: 71957)
  Prédit: '(equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(equal' → logprob: -0.5172731876373291
    2. '(abs' → logprob: -1.517273187637329
    3. 'equal' → logprob: -1.767273187637329
    4. 'abs' → logprob: -5.26727294921875
    5. '(
' → logprob: -5.51727294921875
    6. '(math' → logprob: -6.14227294921875
    7. '(' → logprob: -6.39227294921875
    8. '((' → logprob: -7.76727294921875
    9. '(e' → logprob: -8.51727294921875
    10. 'math' → logprob: -10.39227294921875

Token 1230: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.00839187391102314
    2. '(p' → logprob: -4.883391857147217
    3. '(x' → logprob: -7.633391857147217
    4. '(px' → logprob: -8.383392333984375
    5. '(pt' → logprob: -10.633392333984375
    6. '(rx' → logprob: -11.133392333984375
    7. '(pp' → logprob: -11.508392333984375
    8. '(tp' → logprob: -12.633392333984375
    9. '(point' → logprob: -12.758392333984375
    10. '(a' → logprob: -13.008392333984375

Token 1231: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4701135754585266
    2. '(r' → logprob: -1.4701135158538818
    3. 'rp' → logprob: -2.095113515853882
    4. 'r' → logprob: -5.095113754272461
    5. 'x' → logprob: -5.345113754272461
    6. '(p' → logprob: -5.345113754272461
    7. 'pp' → logprob: -6.720113754272461
    8. 'pt' → logprob: -6.720113754272461
    9. '(x' → logprob: -6.970113754272461
    10. '(pp' → logprob: -7.345113754272461

Token 1232: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03116561844944954
    2. '_round' → logprob: -3.531165599822998
    3. '(' → logprob: -7.281165599822998
    4. 'p' → logprob: -8.281166076660156
    5. '[i' → logprob: -8.781166076660156
    6. '(p' → logprob: -9.156166076660156
    7. 'Round' → logprob: -10.281166076660156
    8. 'round' → logprob: -10.531166076660156
    9. ')' → logprob: -10.656166076660156
    10. '[p' → logprob: -11.156166076660156

Token 1233: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5189356803894043
    2. 'p' → logprob: -1.3939356803894043
    3. 'x' → logprob: -2.5189356803894043
    4. '[' → logprob: -3.1439356803894043
    5. 'i' → logprob: -3.6439356803894043
    6. 'pt' → logprob: -6.143935680389404
    7. 'q' → logprob: -6.393935680389404
    8. 'round' → logprob: -7.518935680389404
    9. 'k' → logprob: -7.768935680389404
    10. 'point' → logprob: -8.018936157226562

Token 1234: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.30937495827674866
    2. '-p' → logprob: -1.4343749284744263
    3. ' -' → logprob: -3.809375047683716
    4. '-r' → logprob: -5.309374809265137
    5. '-round' → logprob: -7.559374809265137
    6. '[' → logprob: -9.059374809265137
    7. '-x' → logprob: -10.434374809265137
    8. '-k' → logprob: -12.059374809265137
    9. '-point' → logprob: -12.559374809265137
    10. ')' → logprob: -12.684374809265137

Token 1235: 'q' (ID: 80)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -1.230782151222229
    2. 'q' → logprob: -1.355782151222229
    3. 'pt' → logprob: -1.355782151222229
    4. 'x' → logprob: -2.1057820320129395
    5. 'p' → logprob: -2.9807820320129395
    6. 'px' → logprob: -4.7307820320129395
    7. 'v' → logprob: -4.9807820320129395
    8. 'op' → logprob: -5.9807820320129395
    9. 'vp' → logprob: -7.1057820320129395
    10. 'pi' → logprob: -8.855782508850098

Token 1236: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001732663222355768
    2. '[q' → logprob: -8.875173568725586
    3. 'q' → logprob: -11.000173568725586
    4. '[i' → logprob: -12.000173568725586
    5. ')' → logprob: -12.250173568725586
    6. 'for' → logprob: -13.500173568725586
    7. '
' → logprob: -14.125173568725586
    8. '[j' → logprob: -14.875173568725586
    9. '[
' → logprob: -14.875173568725586
    10. '   ' → logprob: -15.125173568725586

Token 1237: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003890854713972658
    2. '[' → logprob: -8.000389099121094
    3. 'q' → logprob: -10.000389099121094
    4. 'i' → logprob: -13.000389099121094
    5. '1' → logprob: -13.750389099121094
    6. 'x' → logprob: -13.875389099121094
    7. '
' → logprob: -14.000389099121094
    8. '   ' → logprob: -14.000389099121094
    9. '-' → logprob: -15.062889099121094
    10. '```' → logprob: -15.437889099121094

Token 1238: '])' (ID: 4636)
  Prédit: ')<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')<' → logprob: -0.5192781090736389
    2. ')' → logprob: -1.0192780494689941
    3. ')<=' → logprob: -3.144278049468994
    4. ')>' → logprob: -7.269278049468994
    5. '[' → logprob: -8.894278526306152
    6. '[q' → logprob: -9.019278526306152
    7. 'q' → logprob: -9.769278526306152
    8. ')+' → logprob: -10.644278526306152
    9. ')>=' → logprob: -11.644278526306152
    10. '])' → logprob: -12.394278526306152

Token 1239: '<' (ID: 27)
  Prédit: ')<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')<' → logprob: -0.05130278691649437
    2. ')<=' → logprob: -3.426302671432495
    3. ')' → logprob: -4.176302909851074
    4. '<' → logprob: -6.926302909851074
    5. '[' → logprob: -7.551302909851074
    6. '[q' → logprob: -7.801302909851074
    7. ')>' → logprob: -9.301302909851074
    8. 'q' → logprob: -9.676302909851074
    9. '<=' → logprob: -11.301302909851074
    10. '()<' → logprob: -11.676302909851074

Token 1240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -17.0
    3. '=' → logprob: -17.0
    4. '0' → logprob: -18.125
    5. '(' → logprob: -18.75
    6. '
' → logprob: -19.5
    7. '   ' → logprob: -19.625
    8. '`' → logprob: -19.75
    9. '```' → logprob: -19.75
    10. '2' → logprob: -20.25

Token 1241: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -6.623244553338736e-05
    2. '-' → logprob: -9.625065803527832
    3. '-e' → logprob: -16.62506675720215
    4. '1' → logprob: -17.25006675720215
    5. '```' → logprob: -17.62506675720215
    6. '.e' → logprob: -18.75006675720215
    7. '0' → logprob: -20.00006675720215
    8. '(e' → logprob: -20.62506675720215
    9. '
' → logprob: -21.00006675720215
    10. '[' → logprob: -21.00006675720215

Token 1242: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00020389800192788243
    2. '6' → logprob: -8.625204086303711
    3. '9' → logprob: -11.875204086303711
    4. '5' → logprob: -12.500204086303711
    5. '```' → logprob: -12.625204086303711
    6. '7' → logprob: -13.000204086303711
    7. '3' → logprob: -13.000204086303711
    8. '{-' → logprob: -13.375204086303711
    9. '4' → logprob: -13.625204086303711
    10. '8' → logprob: -14.437704086303711

Token 1243: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0178743414580822
    2. '5' → logprob: -4.142874240875244
    3. '7' → logprob: -7.017874240875244
    4. '8' → logprob: -7.642874240875244
    5. '9' → logprob: -8.142874717712402
    6. '4' → logprob: -8.892874717712402
    7. '3' → logprob: -10.517874717712402
    8. '-' → logprob: -12.142874717712402
    9. '2' → logprob: -14.205374717712402
    10. '```' → logprob: -14.517874717712402

Token 1244: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5768991708755493
    2. 'and' → logprob: -0.8268991708755493
    3. ' for' → logprob: -7.70189905166626
    4. 'for' → logprob: -7.82689905166626
    5. ' or' → logprob: -9.326899528503418
    6. 'or' → logprob: -11.201899528503418
    7. ')' → logprob: -13.201899528503418
    8. '       ' → logprob: -13.951899528503418
    9. '```' → logprob: -14.076899528503418
    10. '   ' → logprob: -14.451899528503418

Token 1245: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -4.6087021473795176e-05
    2. ' abs' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.250045776367188
    4. '    ' → logprob: -16.125045776367188
    5. '     ' → logprob: -16.875045776367188
    6. '           ' → logprob: -17.125045776367188
    7. '          ' → logprob: -17.250045776367188
    8. '(abs' → logprob: -17.250045776367188
    9. '       ' → logprob: -17.500045776367188
    10. '         ' → logprob: -17.625045776367188

Token 1246: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -7.493430894101039e-05
    2. '(q' → logprob: -9.625075340270996
    3. '(p' → logprob: -11.875075340270996
    4. '(' → logprob: -14.000075340270996
    5. '((' → logprob: -14.625075340270996
    6. 'r' → logprob: -15.750075340270996
    7. '(
' → logprob: -16.37507438659668
    8. ' (' → logprob: -16.62507438659668
    9. '```' → logprob: -16.62507438659668
    10. 'q' → logprob: -16.87507438659668

Token 1247: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.13603220880031586
    2. 'q' → logprob: -2.1360321044921875
    3. 'rp' → logprob: -4.7610321044921875
    4. '(r' → logprob: -8.261032104492188
    5. '(q' → logprob: -8.886032104492188
    6. 'r' → logprob: -9.636032104492188
    7. 'qp' → logprob: -11.511032104492188
    8. ' rp' → logprob: -11.636032104492188
    9. '(p' → logprob: -12.011032104492188
    10. '[r' → logprob: -12.636032104492188

Token 1248: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.692145012086257e-05
    2. '-' → logprob: -10.625046730041504
    3. '0' → logprob: -11.500046730041504
    4. 'q' → logprob: -11.625046730041504
    5. '[q' → logprob: -14.250046730041504
    6. '-q' → logprob: -14.250046730041504
    7. '#' → logprob: -14.375046730041504
    8. '1' → logprob: -15.125046730041504
    9. '```' → logprob: -15.375046730041504
    10. '(' → logprob: -15.750046730041504

Token 1249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006091965362429619
    2. '0' → logprob: -5.506092071533203
    3. '[' → logprob: -6.256092071533203
    4. 'q' → logprob: -9.381092071533203
    5. '-' → logprob: -12.506092071533203
    6. '2' → logprob: -13.631092071533203
    7. '
' → logprob: -14.506092071533203
    8. '   ' → logprob: -14.631092071533203
    9. ' ' → logprob: -14.756092071533203
    10. ' q' → logprob: -14.756092071533203

Token 1250: ']-' (ID: 27107)
  Prédit: '-q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-q' → logprob: -0.13744990527629852
    2. '-' → logprob: -2.5124499797821045
    3. '-r' → logprob: -4.387449741363525
    4. ' -' → logprob: -4.387449741363525
    5. '[' → logprob: -4.637449741363525
    6. '-p' → logprob: -4.762449741363525
    7. '[q' → logprob: -6.762449741363525
    8. '()-' → logprob: -6.887449741363525
    9. '<|end|>' → logprob: -7.637449741363525
    10. ']-' → logprob: -7.762449741363525

Token 1251: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.13388703338569e-06
    2. ' q' → logprob: -11.875009536743164
    3. 'p' → logprob: -13.250009536743164
    4. '1' → logprob: -15.500009536743164
    5. '
' → logprob: -16.500009536743164
    6. '   ' → logprob: -17.875009536743164
    7. '	q' → logprob: -18.750009536743164
    8. '(q' → logprob: -18.750009536743164
    9. '```' → logprob: -19.375009536743164
    10. ' ' → logprob: -19.875009536743164

Token 1252: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.466968650580384e-05
    2. '-' → logprob: -9.875054359436035
    3. '1' → logprob: -13.500054359436035
    4. '#' → logprob: -14.500054359436035
    5. '0' → logprob: -14.625054359436035
    6. '```' → logprob: -15.625054359436035
    7. 'q' → logprob: -15.750054359436035
    8. '   ' → logprob: -16.37505531311035
    9. ' -' → logprob: -16.62505531311035
    10. ')' → logprob: -16.87505531311035

Token 1253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.583550642360933e-05
    2. '6' → logprob: -10.500036239624023
    3. '[' → logprob: -12.250036239624023
    4. '-' → logprob: -13.375036239624023
    5. '0' → logprob: -13.625036239624023
    6. '   ' → logprob: -15.250036239624023
    7. ' ' → logprob: -15.625036239624023
    8. '```' → logprob: -16.125036239624023
    9. '9' → logprob: -17.687536239624023
    10. '#' → logprob: -17.687536239624023

Token 1254: '])' (ID: 4636)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.36152106523513794
    2. ']-' → logprob: -1.4865210056304932
    3. ']' → logprob: -3.486521005630493
    4. '-' → logprob: -3.486521005630493
    5. '-q' → logprob: -4.611521244049072
    6. '0' → logprob: -6.111521244049072
    7. '][' → logprob: -6.361521244049072
    8. '()-' → logprob: -7.486521244049072
    9. ' -' → logprob: -7.611521244049072
    10. 'q' → logprob: -7.861521244049072

Token 1255: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.12294331938028336
    2. '<p' → logprob: -2.49794340133667
    3. ')<' → logprob: -4.62294340133667
    4. '()<' → logprob: -4.74794340133667
    5. ' <' → logprob: -5.24794340133667
    6. '-' → logprob: -6.12294340133667
    7. '<=' → logprob: -6.37294340133667
    8. '<len' → logprob: -7.12294340133667
    9. 'for' → logprob: -7.49794340133667
    10. '<num' → logprob: -7.49794340133667

Token 1256: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7954958821064793e-05
    2. ' ' → logprob: -11.500018119812012
    3. '
' → logprob: -13.437518119812012
    4. '0' → logprob: -13.937518119812012
    5. '   ' → logprob: -13.937518119812012
    6. '```' → logprob: -14.125018119812012
    7. '(' → logprob: -14.437518119812012
    8. '2' → logprob: -14.500018119812012
    9. '6' → logprob: -15.437518119812012
    10. '3' → logprob: -15.500018119812012

Token 1257: 'e' (ID: 68)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007676895707845688
    2. '6' → logprob: -4.88267707824707
    3. '[' → logprob: -11.38267707824707
    4. 'e' → logprob: -11.63267707824707
    5. '```' → logprob: -11.63267707824707
    6. '
' → logprob: -12.00767707824707
    7. '_' → logprob: -12.13267707824707
    8. '   ' → logprob: -12.25767707824707
    9. ' -' → logprob: -12.88267707824707
    10. '[-' → logprob: -13.00767707824707

Token 1258: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0036308348644524813
    2. '6' → logprob: -5.628630638122559
    3. '{-' → logprob: -11.503630638122559
    4. '{' → logprob: -12.003630638122559
    5. '```' → logprob: -12.003630638122559
    6. '_' → logprob: -12.878630638122559
    7. '   ' → logprob: -13.753630638122559
    8. '=' → logprob: -14.128630638122559
    9. '−' → logprob: -14.566130638122559
    10. '06' → logprob: -14.691130638122559

Token 1259: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -4.723352049040841e-06
    2. '```' → logprob: -13.500004768371582
    3. '9' → logprob: -13.625004768371582
    4. '7' → logprob: -14.437504768371582
    5. '06' → logprob: -14.875004768371582
    6. '8' → logprob: -16.062503814697266
    7. '5' → logprob: -16.437503814697266
    8. '{' → logprob: -16.500003814697266
    9. 'p' → logprob: -16.500003814697266
    10. '   ' → logprob: -16.937503814697266

Token 1260: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20229965448379517
    2. 'for' → logprob: -1.7022995948791504
    3. '               ' → logprob: -8.202300071716309
    4. '           ' → logprob: -8.827300071716309
    5. '              ' → logprob: -8.827300071716309
    6. '       ' → logprob: -9.702300071716309
    7. ' and' → logprob: -9.952300071716309
    8. '          ' → logprob: -10.327300071716309
    9. '                ' → logprob: -10.452300071716309
    10. '             ' → logprob: -10.577300071716309

Token 1261: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.025705257430672646
    2. ' q' → logprob: -4.150705337524414
    3. 'point' → logprob: -4.775705337524414
    4. 'polygon' → logprob: -7.275705337524414
    5. ' point' → logprob: -8.650705337524414
    6. 'poly' → logprob: -9.025705337524414
    7. ' polygon' → logprob: -9.400705337524414
    8. '   ' → logprob: -9.775705337524414
    9. 'p' → logprob: -11.150705337524414
    10. '(point' → logprob: -11.650705337524414

Token 1262: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3132800757884979
    2. ' in' → logprob: -1.3132801055908203
    3. 'point' → logprob: -12.06328010559082
    4. '
' → logprob: -12.56328010559082
    5. ',' → logprob: -12.81328010559082
    6. '   ' → logprob: -13.31328010559082
    7. ' ' → logprob: -13.93828010559082
    8. 'import' → logprob: -14.06328010559082
    9. ')' → logprob: -14.31328010559082
    10. ' ' → logprob: -15.25078010559082

Token 1263: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.0625917986035347
    2. 'point' → logprob: -2.812591791152954
    3. ' polygon' → logprob: -7.437592029571533
    4. 'pol' → logprob: -11.312591552734375
    5. ' point' → logprob: -11.437591552734375
    6. 'poly' → logprob: -12.062591552734375
    7. '   ' → logprob: -12.937591552734375
    8. 'p' → logprob: -14.187591552734375
    9. '
' → logprob: -14.187591552734375
    10. 'polar' → logprob: -14.562591552734375

Token 1264: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.052812837064266205
    2. '       ' → logprob: -3.0528128147125244
    3. '):' → logprob: -5.5528130531311035
    4. '           ' → logprob: -8.677812576293945
    5. '   ' → logprob: -9.177812576293945
    6. ')' → logprob: -10.177812576293945
    7. ':
' → logprob: -11.052812576293945
    8. '):
' → logprob: -12.302812576293945
    9. ' ):
' → logprob: -13.302812576293945
    10. '):

' → logprob: -13.677812576293945

Token 1265: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.856408536899835e-05
    2. '               ' → logprob: -11.500028610229492
    3. ':' → logprob: -12.250028610229492
    4. ':
' → logprob: -12.625028610229492
    5. 'return' → logprob: -13.125028610229492
    6. '          ' → logprob: -13.250028610229492
    7. '       ' → logprob: -13.250028610229492
    8. ' return' → logprob: -13.500028610229492
    9. ':return' → logprob: -14.000028610229492
    10. ',' → logprob: -14.750028610229492

Token 1266: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020085759460926056
    2. 'return' (adapté à ' return') → logprob: -6.502008438110352
    3. ' return' → logprob: -8.252008438110352
    4. '               ' → logprob: -8.377008438110352
    5. '       ' → logprob: -11.127008438110352
    6. '          ' → logprob: -15.502008438110352
    7. '	       ' → logprob: -16.00200843811035
    8. '   ' → logprob: -16.37700843811035
    9. '		' → logprob: -16.50200843811035
    10. '         ' → logprob: -17.50200843811035

Token 1267: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.7697225252486533e-06
    2. ' False' → logprob: -12.500003814697266
    3. '(False' → logprob: -21.500003814697266
    4. 'True' → logprob: -23.125003814697266
    5. 'false' → logprob: -23.125003814697266
    6. '=False' → logprob: -24.375003814697266
    7. '   ' → logprob: -24.500003814697266
    8. '
' → logprob: -25.000003814697266
    9. 'None' → logprob: -25.875003814697266
    10. '_false' → logprob: -25.875003814697266

Token 1268: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006645413814112544
    2. '	return' → logprob: -7.375664710998535
    3. ' return' → logprob: -11.375664710998535
    4. '
' → logprob: -12.125664710998535
    5. '       ' → logprob: -12.125664710998535
    6. '<|end|>' → logprob: -12.125664710998535
    7. '    
' → logprob: -12.500664710998535
    8. 'return' → logprob: -13.375664710998535
    9. '	' → logprob: -14.500664710998535
    10. ')' → logprob: -14.750664710998535

Token 1269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009570781840011477
    2. '       ' → logprob: -7.125957012176514
    3. '<|end|>' → logprob: -9.250957489013672
    4. '	return' → logprob: -10.500957489013672
    5. '    
' → logprob: -11.500957489013672
    6. ' return' → logprob: -12.000957489013672
    7. 'return' → logprob: -13.250957489013672
    8. '‌' → logprob: -13.750957489013672
    9. '   ' → logprob: -14.000957489013672
    10. ')' → logprob: -14.000957489013672

Token 1270: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03030378185212612
    2. 'return' (adapté à ' return') → logprob: -3.530303716659546
    3. ' return' → logprob: -7.530303955078125
    4. '	return' → logprob: -11.405303955078125
    5. ' ' → logprob: -13.155303955078125
    6. '
' → logprob: -13.780303955078125
    7. '       ' → logprob: -14.030303955078125
    8. '  ' → logprob: -15.155303955078125
    9. '<|end|>' → logprob: -15.155303955078125
    10. '{return' → logprob: -15.405303955078125

Token 1271: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.5048530030981055e-06
    2. ' True' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.750001907348633
    4. 'False' → logprob: -19.000001907348633
    5. '(True' → logprob: -19.875001907348633
    6. '=True' → logprob: -23.250001907348633
    7. '
' → logprob: -23.375001907348633
    8. 'true' → logprob: -23.750001907348633
    9. '	' → logprob: -24.375001907348633
    10. '"' → logprob: -26.000001907348633

Token 1272: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00843573547899723
    2. 'c' → logprob: -5.1334357261657715
    3. 'if' → logprob: -6.5084357261657715
    4. 'ans' → logprob: -8.13343620300293
    5. 'candidate' → logprob: -8.63343620300293
    6. 'pairs' → logprob: -8.75843620300293
    7. 'axes' → logprob: -9.50843620300293
    8. 'possible' → logprob: -10.00843620300293
    9. 'indices' → logprob: -10.00843620300293
    10. 'axis' → logprob: -10.13343620300293

Token 1273: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0032797870226204395
    2. 'c' → logprob: -6.503279685974121
    3. 'if' → logprob: -6.878279685974121
    4. 'axes' → logprob: -8.253279685974121
    5. 'ans' → logprob: -8.878279685974121
    6. 'candidate' → logprob: -8.878279685974121
    7. 'possible' → logprob: -9.503279685974121
    8. '#' → logprob: -9.753279685974121
    9. 'answer' → logprob: -11.128279685974121
    10. 'axis' → logprob: -11.253279685974121

Token 1274: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39155375957489014
    2. 'axes' → logprob: -1.7665537595748901
    3. 'found' → logprob: -2.6415538787841797
    4. 'ans' → logprob: -3.1415538787841797
    5. 'c' → logprob: -4.01655387878418
    6. 'res' → logprob: -5.26655387878418
    7. 's' → logprob: -5.51655387878418
    8. 'axis' → logprob: -5.76655387878418
    9. 'candidate' → logprob: -6.01655387878418
    10. 'possible' → logprob: -6.39155387878418

Token 1275: ' reduce' (ID: 10389)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0652279406785965
    2. '
' → logprob: -4.31522798538208
    3. 'c' → logprob: -5.19022798538208
    4. '#' → logprob: -5.19022798538208
    5. 'checked' → logprob: -5.44022798538208
    6. 'pairs' → logprob: -5.44022798538208
    7. 'found' → logprob: -5.56522798538208
    8. 'points' → logprob: -5.69022798538208
    9. 'axes' → logprob: -5.69022798538208
    10. 'from' → logprob: -5.81522798538208

Token 1276: ' candidates' (ID: 18116)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16175375878810883
    2. 'c' → logprob: -2.4117536544799805
    3. 'checked' → logprob: -4.0367536544799805
    4. 'pairs' → logprob: -4.1617536544799805
    5. 'candidate' → logprob: -4.9117536544799805
    6. '#' → logprob: -5.0367536544799805
    7. 'points' → logprob: -5.5367536544799805
    8. 'axis' → logprob: -5.7867536544799805
    9. 'm' → logprob: -6.5367536544799805
    10. 'axes' → logprob: -6.6617536544799805

Token 1277: ':
' (ID: 734)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35080868005752563
    2. 'c' → logprob: -1.2258086204528809
    3. 'points' → logprob: -7.100808620452881
    4. '#' → logprob: -7.600808620452881
    5. 'candidate' → logprob: -7.850808620452881
    6. 'indices' → logprob: -8.850809097290039
    7. ' for' → logprob: -8.975809097290039
    8. 'axis' → logprob: -9.225809097290039
    9. 'axes' → logprob: -9.350809097290039
    10. 'vertices' → logprob: -9.725809097290039

Token 1278: '#' (ID: 2)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02290078066289425
    2. 'for' → logprob: -3.8979008197784424
    3. 'candidate' → logprob: -6.897900581359863
    4. 'axes' → logprob: -7.522900581359863
    5. 'points' → logprob: -7.897900581359863
    6. 'vertices' → logprob: -9.397900581359863
    7. '#' → logprob: -9.397900581359863
    8. 'pairs' → logprob: -9.522900581359863
    9. 'axis' → logprob: -10.397900581359863
    10. 'cand' → logprob: -10.522900581359863

Token 1279: ' The' (ID: 623)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.314981073141098
    2. 'for' → logprob: -1.4399811029434204
    3. 'axes' → logprob: -4.189980983734131
    4. '#' → logprob: -5.189980983734131
    5. 'candidate' → logprob: -5.439980983734131
    6. 'from' → logprob: -6.189980983734131
    7. 'points' → logprob: -6.689980983734131
    8. 'checked' → logprob: -7.064980983734131
    9. 'unique' → logprob: -7.314980983734131
    10. 'visited' → logprob: -7.439980983734131

Token 1280: ' symmetry' (ID: 90882)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17353245615959167
    2. '#' → logprob: -2.548532485961914
    3. 'c' → logprob: -2.673532485961914
    4. 'points' → logprob: -5.673532485961914
    5. 'candidate' → logprob: -6.423532485961914
    6. 'axes' → logprob: -6.673532485961914
    7. 'pairs' → logprob: -7.048532485961914
    8. 'm' → logprob: -7.173532485961914
    9. 'axis' → logprob: -7.423532485961914
    10. 'all' → logprob: -7.548532485961914

Token 1281: ' axis' (ID: 16300)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.7619452476501465
    2. 'axes' → logprob: -1.5119452476501465
    3. '_points' → logprob: -2.2619452476501465
    4. 'axis' → logprob: -2.3869452476501465
    5. 'c' → logprob: -2.7619452476501465
    6. '#' → logprob: -3.7619452476501465
    7. '_axes' → logprob: -4.6369452476501465
    8. '_candidates' → logprob: -5.0119452476501465
    9. '_axis' → logprob: -5.3869452476501465
    10. 'for' → logprob: -5.8869452476501465

Token 1282: ' passes' (ID: 29169)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6703929305076599
    2. '=' → logprob: -2.0453929901123047
    3. 'can' → logprob: -2.2953929901123047
    4. ' can' → logprob: -2.7953929901123047
    5. '#' → logprob: -3.2953929901123047
    6. 'c' → logprob: -3.5453929901123047
    7. 'points' → logprob: -3.5453929901123047
    8. '_candidates' → logprob: -3.9203929901123047
    9. 'could' → logprob: -3.9203929901123047
    10. 'through' → logprob: -4.420392990112305

Token 1283: ' through' (ID: 1819)
  Prédit: 'through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'through' → logprob: -0.014471390284597874
    2. ' through' → logprob: -4.514471530914307
    3. '#' → logprob: -5.889471530914307
    4. 'either' → logprob: -7.514471530914307
    5. 'between' → logprob: -10.014471054077148
    6. 'for' → logprob: -10.764471054077148
    7. 'Through' → logprob: -11.514471054077148
    8. ' either' → logprob: -12.389471054077148
    9. 'from' → logprob: -12.514471054077148
    10. ' ' → logprob: -12.639471054077148

Token 1284: '
' (ID: 198)
  Prédit: 'either'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'either' → logprob: -0.7936005592346191
    2. 'two' → logprob: -1.7936005592346191
    3. 'at' → logprob: -2.043600559234619
    4. 'each' → logprob: -2.543600559234619
    5. 'any' → logprob: -2.793600559234619
    6. 'pairs' → logprob: -3.043600559234619
    7. 'a' → logprob: -3.793600559234619
    8. ' either' → logprob: -4.043600559234619
    9. 'one' → logprob: -4.918600559234619
    10. ' at' → logprob: -5.418600559234619

Token 1285: '#' (ID: 2)
  Prédit: 'either'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'either' → logprob: -0.7699248790740967
    2. ' either' → logprob: -1.3949248790740967
    3. '#' → logprob: -2.6449248790740967
    4. 'each' → logprob: -3.0199248790740967
    5. 'pairs' → logprob: -3.5199248790740967
    6. 'a' → logprob: -3.5199248790740967
    7. 'two' → logprob: -3.6449248790740967
    8. 'any' → logprob: -3.8949248790740967
    9. 'p' → logprob: -4.394925117492676
    10. ' two' → logprob: -4.519925117492676

Token 1286: ' -' (ID: 533)
  Prédit: 'either'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'either' → logprob: -0.9647045731544495
    2. 'a' → logprob: -2.0897045135498047
    3. 'two' → logprob: -2.2147045135498047
    4. '#' → logprob: -2.3397045135498047
    5. 'pairs' → logprob: -2.7147045135498047
    6. 'any' → logprob: -2.8397045135498047
    7. 'each' → logprob: -2.8397045135498047
    8. ' either' → logprob: -3.3397045135498047
    9. 'at' → logprob: -3.5897045135498047
    10. 'p' → logprob: -4.714704513549805

Token 1287: ' midpoint' (ID: 188667)
  Prédit: 'either'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'either' → logprob: -1.1995067596435547
    2. 'any' → logprob: -1.5745067596435547
    3. 'each' → logprob: -1.9495067596435547
    4. 'a' → logprob: -1.9495067596435547
    5. 'two' → logprob: -2.6995067596435547
    6. 'pairs' → logprob: -2.9495067596435547
    7. '#' → logprob: -3.3245067596435547
    8. ' either' → logprob: -3.9495067596435547
    9. 'the' → logprob: -5.074506759643555
    10. 'one' → logprob: -5.449506759643555

Token 1288: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.018520381301641464
    2. ' of' → logprob: -4.768520355224609
    3. ' between' → logprob: -5.393520355224609
    4. 'of' → logprob: -6.018520355224609
    5. 'between' → logprob: -6.768520355224609
    6. '#' → logprob: -7.643520355224609
    7. ' or' → logprob: -8.26852035522461
    8. ' =' → logprob: -8.64352035522461
    9. 'pairs' → logprob: -8.64352035522461
    10. 'points' → logprob: -8.76852035522461

Token 1289: ' opposite' (ID: 23821)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8648630976676941
    2. 'two' → logprob: -1.1148631572723389
    3. 'pairs' → logprob: -2.239863157272339
    4. ' two' → logprob: -2.864863157272339
    5. '(p' → logprob: -3.364863157272339
    6. 'a' → logprob: -4.11486291885376
    7. 'each' → logprob: -4.73986291885376
    8. ' pairs' → logprob: -5.11486291885376
    9. 'pair' → logprob: -5.36486291885376
    10. 'any' → logprob: -5.36486291885376

Token 1290: ' vertices' (ID: 38360)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.3187149465084076
    2. 'vertices' → logprob: -1.31871497631073
    3. 'pairs' → logprob: -5.8187150955200195
    4. ' vertices' → logprob: -6.9437150955200195
    5. 'point' → logprob: -7.1937150955200195
    6. 'vertex' → logprob: -7.5687150955200195
    7. 'corn' → logprob: -9.19371509552002
    8. '_vertices' → logprob: -10.44371509552002
    9. ' points' → logprob: -10.44371509552002
    10. 'edges' → logprob: -10.69371509552002

Token 1291: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3372078537940979
    2. '#' → logprob: -1.5872077941894531
    3. ' for' → logprob: -3.837207794189453
    4. 'or' → logprob: -4.212207794189453
    5. 'pairs' → logprob: -4.712207794189453
    6. '
' → logprob: -4.837207794189453
    7. ' or' → logprob: -4.837207794189453
    8. ' and' → logprob: -5.087207794189453
    9. 'mid' → logprob: -5.587207794189453
    10. 'and' → logprob: -5.712207794189453

Token 1292: 'for' (ID: 1938)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0048178997822105885
    2. ')' → logprob: -6.754817962646484
    3. ' or' → logprob: -6.754817962646484
    4. 'or' → logprob: -7.004817962646484
    5. ' #' → logprob: -7.629817962646484
    6. '   ' → logprob: -7.879817962646484
    7. 'for' → logprob: -8.504817962646484
    8. ' for' → logprob: -9.379817962646484
    9. 'and' → logprob: -9.504817962646484
    10. 'pairs' → logprob: -9.754817962646484

Token 1293: ' even' (ID: 1952)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05303999036550522
    2. ' i' → logprob: -3.678040027618408
    3. 'even' → logprob: -4.428040027618408
    4. 'k' → logprob: -6.178040027618408
    5. 'mid' → logprob: -6.553040027618408
    6. ')' → logprob: -7.053040027618408
    7. 'axis' → logprob: -7.303040027618408
    8. 'm' → logprob: -7.428040027618408
    9. 'diam' → logprob: -7.428040027618408
    10. 'polygon' → logprob: -7.428040027618408

Token 1294: ' polygon' (ID: 65081)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07914446294307709
    2. ' n' → logprob: -3.7041444778442383
    3. 'number' → logprob: -3.7041444778442383
    4. 'len' → logprob: -4.579144477844238
    5. ' number' → logprob: -5.329144477844238
    6. 'length' → logprob: -5.454144477844238
    7. 'N' → logprob: -6.579144477844238
    8. '#' → logprob: -6.704144477844238
    9. ' sides' → logprob: -6.829144477844238
    10. 's' → logprob: -7.079144477844238

Token 1295: ')
' (ID: 446)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9690898060798645
    2. ')
' → logprob: -1.0940897464752197
    3. ')' → logprob: -1.5940897464752197
    4. 's' → logprob: -2.7190897464752197
    5. 'or' → logprob: -5.719089984893799
    6. ' sides' → logprob: -5.719089984893799
    7. '),' → logprob: -5.969089984893799
    8. 'n' → logprob: -5.969089984893799
    9. '   ' → logprob: -7.094089984893799
    10. ')#' → logprob: -7.094089984893799

Token 1296: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.00017910730093717575
    2. 'for' → logprob: -9.250179290771484
    3. 'or' → logprob: -9.625179290771484
    4. '```' → logprob: -11.625179290771484
    5. ' or' → logprob: -13.125179290771484
    6. '
' → logprob: -13.125179290771484
    7. '``' → logprob: -13.625179290771484
    8. 'and' → logprob: -13.875179290771484
    9. '   ' → logprob: -14.500179290771484
    10. '-' → logprob: -15.000179290771484

Token 1297: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0010699660051614046
    2. 'for' → logprob: -7.251070022583008
    3. 'or' → logprob: -8.376070022583008
    4. '
' → logprob: -9.626070022583008
    5. 'c' → logprob: -11.251070022583008
    6. 'points' → logprob: -11.626070022583008
    7. 'and' → logprob: -12.251070022583008
    8. '```' → logprob: -12.251070022583008
    9. ' #' → logprob: -12.501070022583008
    10. ' or' → logprob: -12.501070022583008

Token 1298: ' line' (ID: 2543)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.7151097059249878
    2. '#' → logprob: -1.8401097059249878
    3. 'pairs' → logprob: -2.2151098251342773
    4. 'mid' → logprob: -2.4651098251342773
    5. 'vertices' → logprob: -2.7151098251342773
    6. 'points' → logprob: -2.9651098251342773
    7. 'adj' → logprob: -3.0901098251342773
    8. 'the' → logprob: -3.0901098251342773
    9. 'edges' → logprob: -3.3401098251342773
    10. 'a' → logprob: -3.3401098251342773

Token 1299: ' through' (ID: 1819)
  Prédit: 'through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'through' → logprob: -0.2243201732635498
    2. 'between' → logprob: -2.84932017326355
    3. 'segments' → logprob: -3.09932017326355
    4. 'segment' → logprob: -3.22432017326355
    5. ' through' → logprob: -3.47432017326355
    6. ' segments' → logprob: -5.099320411682129
    7. 'from' → logprob: -5.474320411682129
    8. '(p' → logprob: -5.599320411682129
    9. 's' → logprob: -5.599320411682129
    10. 'points' → logprob: -6.349320411682129

Token 1300: ' mid' (ID: 6959)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.782015323638916
    2. 'two' → logprob: -1.657015323638916
    3. 'a' → logprob: -1.907015323638916
    4. 'adj' → logprob: -2.282015323638916
    5. 'any' → logprob: -3.032015323638916
    6. 'p' → logprob: -4.032015323638916
    7. 'each' → logprob: -4.407015323638916
    8. 'con' → logprob: -5.657015323638916
    9. 'polygon' → logprob: -5.657015323638916
    10. 'op' → logprob: -5.657015323638916

Token 1301: 'points' (ID: 14011)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.20157179236412048
    2. 'points' → logprob: -1.7015718221664429
    3. '#' → logprob: -9.576571464538574
    4. '
' → logprob: -10.201571464538574
    5. '+' → logprob: -11.576571464538574
    6. 'index' → logprob: -11.576571464538574
    7. 'poly' → logprob: -11.826571464538574
    8. '```' → logprob: -12.326571464538574
    9. '0' → logprob: -12.451571464538574
    10. 'p' → logprob: -12.826571464538574

Token 1302: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42697229981422424
    2. '#' → logprob: -1.3019722700119019
    3. ' for' → logprob: -4.051972389221191
    4. 'of' → logprob: -4.176972389221191
    5. 'points' → logprob: -4.176972389221191
    6. 's' → logprob: -4.551972389221191
    7. '
' → logprob: -6.051972389221191
    8. ')' → logprob: -6.301972389221191
    9. ' of' → logprob: -6.301972389221191
    10. 'or' → logprob: -6.551972389221191

Token 1303: ' opposite' (ID: 23821)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.2787603735923767
    2. 'pairs' → logprob: -1.9037604331970215
    3. 'adj' → logprob: -2.6537604331970215
    4. 'edges' → logprob: -4.2787604331970215
    5. ' opposite' → logprob: -5.7787604331970215
    6. ' pairs' → logprob: -5.9037604331970215
    7. 'polygon' → logprob: -6.5287604331970215
    8. ' edges' → logprob: -7.1537604331970215
    9. 'two' → logprob: -7.2787604331970215
    10. '
' → logprob: -7.5287604331970215

Token 1304: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.003360816277563572
    2. ' edges' → logprob: -6.378360748291016
    3. 'vertices' → logprob: -6.503360748291016
    4. 's' → logprob: -9.128360748291016
    5. 'edge' → logprob: -10.253360748291016
    6. ' sides' → logprob: -11.753360748291016
    7. '#' → logprob: -13.128360748291016
    8. 'vertex' → logprob: -13.503360748291016
    9. 'side' → logprob: -13.628360748291016
    10. ' vertices' → logprob: -14.128360748291016

Token 1305: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2826440334320068
    2. 'mid' → logprob: -1.2826440334320068
    3. '#' → logprob: -1.7826440334320068
    4. 'c' → logprob: -1.9076440334320068
    5. 'edges' → logprob: -2.657644033432007
    6. 'if' → logprob: -3.657644033432007
    7. 'def' → logprob: -4.282644271850586
    8. 'axes' → logprob: -5.407644271850586
    9. 'from' → logprob: -5.782644271850586
    10. 'pairs' → logprob: -5.907644271850586

Token 1306: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5363724231719971
    2. '#' → logprob: -0.9113724231719971
    3. ')' → logprob: -5.286372184753418
    4. ' for' → logprob: -5.661372184753418
    5. ')
' → logprob: -6.036372184753418
    6. 'edges' → logprob: -7.536372184753418
    7. '
' → logprob: -8.161372184753418
    8. 'points' → logprob: -8.286372184753418
    9. ')#' → logprob: -8.286372184753418
    10. 'poly' → logprob: -8.661372184753418

Token 1307: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.5079022645950317
    2. 'odd' → logprob: -1.8829022645950317
    3. 'i' → logprob: -2.007902145385742
    4. ' i' → logprob: -3.507902145385742
    5. 'edges' → logprob: -3.882902145385742
    6. ' odd' → logprob: -4.007902145385742
    7. 'edge' → logprob: -4.382902145385742
    8. ' even' → logprob: -4.632902145385742
    9. ' edge' → logprob: -5.507902145385742
    10. ' edges' → logprob: -5.757902145385742

Token 1308: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.27077969908714294
    2. 'poly' → logprob: -2.645779609680176
    3. ' polygon' → logprob: -2.770779609680176
    4. '#' → logprob: -3.020779609680176
    5. 'pol' → logprob: -3.020779609680176
    6. 's' → logprob: -6.520779609680176
    7. ' polygons' → logprob: -7.145779609680176
    8. 'n' → logprob: -7.145779609680176
    9. 'edges' → logprob: -7.270779609680176
    10. ' sides' → logprob: -7.520779609680176

Token 1309: ')
' (ID: 446)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1675328016281128
    2. ')' → logprob: -3.0425329208374023
    3. '
' → logprob: -3.1675329208374023
    4. 'for' → logprob: -3.4175329208374023
    5. ')
' → logprob: -3.6675329208374023
    6. 'def' → logprob: -6.417532920837402
    7. ')

' → logprob: -6.542532920837402
    8. '#
' → logprob: -7.542532920837402
    9. 'import' → logprob: -8.042532920837402
    10. ' for' → logprob: -8.167532920837402

Token 1310: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5271140933036804
    2. 'c' → logprob: -1.0271141529083252
    3. '#' → logprob: -3.652114152908325
    4. 'mid' → logprob: -4.527113914489746
    5. 'if' → logprob: -5.152113914489746
    6. 'edges' → logprob: -5.527113914489746
    7. 'candidate' → logprob: -6.902113914489746
    8. 'points' → logprob: -7.027113914489746
    9. 'axes' → logprob: -7.152113914489746
    10. 'axis' → logprob: -7.652113914489746

Token 1311: ' -' (ID: 533)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3027903139591217
    2. 'for' → logprob: -2.052790403366089
    3. '#' → logprob: -2.927790403366089
    4. 'axes' → logprob: -3.177790403366089
    5. 'edges' → logprob: -3.927790403366089
    6. 'mid' → logprob: -4.67779016494751
    7. 'candidate' → logprob: -5.80279016494751
    8. 'axis' → logprob: -6.42779016494751
    9. 'pairs' → logprob: -6.80279016494751
    10. 'from' → logprob: -7.67779016494751

Token 1312: ' line' (ID: 2543)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.011643990874290466
    2. 'for' → logprob: -4.761643886566162
    3. 'import' → logprob: -6.886643886566162
    4. '
' → logprob: -7.511643886566162
    5. 'pairs' → logprob: -8.01164436340332
    6. 'from' → logprob: -8.51164436340332
    7. 'mid' → logprob: -8.51164436340332
    8. 'line' → logprob: -8.51164436340332
    9. 'edges' → logprob: -9.13664436340332
    10. 'if' → logprob: -9.76164436340332

Token 1313: ' through' (ID: 1819)
  Prédit: 'through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'through' → logprob: -0.2523544132709503
    2. ' through' → logprob: -1.502354383468628
    3. '#' → logprob: -8.752354621887207
    4. '   ' → logprob: -9.377354621887207
    5. '_th' → logprob: -10.002354621887207
    6. 's' → logprob: -10.627354621887207
    7. 'segments' → logprob: -11.127354621887207
    8. 'Through' → logprob: -11.377354621887207
    9. '<|end|>' → logprob: -11.502354621887207
    10. '
' → logprob: -11.627354621887207

Token 1314: ' vertex' (ID: 25363)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.6339403390884399
    2. 'mid' → logprob: -1.38394033908844
    3. 'each' → logprob: -2.7589402198791504
    4. 'adj' → logprob: -2.8839402198791504
    5. 'vertices' → logprob: -3.6339402198791504
    6. 'a' → logprob: -4.00894021987915
    7. 'points' → logprob: -4.38394021987915
    8. 'all' → logprob: -5.00894021987915
    9. 'two' → logprob: -5.13394021987915
    10. 'p' → logprob: -5.25894021987915

Token 1315: ' and' (ID: 326)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009173806756734848
    2. 'for' → logprob: -5.50917387008667
    3. 'es' → logprob: -5.75917387008667
    4. 'pairs' → logprob: -7.25917387008667
    5. '#' → logprob: -8.009173393249512
    6. ',' → logprob: -9.134173393249512
    7. ' for' → logprob: -9.259173393249512
    8. 'def' → logprob: -9.509173393249512
    9. 'import' → logprob: -9.634173393249512
    10. ')' → logprob: -9.634173393249512

Token 1316: ' midpoint' (ID: 188667)
  Prédit: 'vertex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertex' → logprob: -0.9090859889984131
    2. 'next' → logprob: -1.534085988998413
    3. 'adj' → logprob: -1.909085988998413
    4. 'mid' → logprob: -2.034085988998413
    5. 'its' → logprob: -2.534085988998413
    6. 'the' → logprob: -4.909086227416992
    7. 'op' → logprob: -5.284086227416992
    8. ' midpoint' → logprob: -6.034086227416992
    9. ' next' → logprob: -6.159086227416992
    10. '#' → logprob: -6.534086227416992

Token 1317: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4391991198062897
    2. 'of' → logprob: -1.6891990900039673
    3. 'for' → logprob: -2.064199209213257
    4. '#' → logprob: -3.939199209213257
    5. ' of' → logprob: -4.689198970794678
    6. '_of' → logprob: -6.189198970794678
    7. ')' → logprob: -6.314198970794678
    8. '(s' → logprob: -6.564198970794678
    9. '...' → logprob: -6.689198970794678
    10. '_' → logprob: -6.814198970794678

Token 1318: ' opposite' (ID: 23821)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.036293767392635345
    2. 'next' → logprob: -3.5362937450408936
    3. 'edge' → logprob: -5.786293983459473
    4. 'op' → logprob: -5.911293983459473
    5. ' adjacent' → logprob: -8.036293983459473
    6. 'neighbor' → logprob: -8.411293983459473
    7. ' next' → logprob: -9.536293983459473
    8. 'the' → logprob: -9.911293983459473
    9. 'its' → logprob: -10.411293983459473
    10. 'edges' → logprob: -11.411293983459473

Token 1319: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.01285711582750082
    2. ' edge' → logprob: -4.387856960296631
    3. 'edges' → logprob: -8.137857437133789
    4. '_edge' → logprob: -11.012857437133789
    5. 'vertex' → logprob: -11.262857437133789
    6. '(edge' → logprob: -11.762857437133789
    7. ' edges' → logprob: -11.887857437133789
    8. '<|end|>' → logprob: -13.262857437133789
    9. 'egde' → logprob: -13.512857437133789
    10. 'side' → logprob: -13.637857437133789

Token 1320: ' (' (ID: 350)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.26914194226264954
    2. 'for' → logprob: -1.7691419124603271
    3. 'axes' → logprob: -3.519141912460327
    4. '#' → logprob: -4.019142150878906
    5. 'candidate' → logprob: -5.519142150878906
    6. 'def' → logprob: -5.644142150878906
    7. 'ans' → logprob: -5.644142150878906
    8. 'edges' → logprob: -6.019142150878906
    9. 'mid' → logprob: -7.269142150878906
    10. 'indices' → logprob: -7.269142150878906

Token 1321: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4739375114440918
    2. '#' → logprob: -1.7239375114440918
    3. ')' → logprob: -2.223937511444092
    4. ')
' → logprob: -3.723937511444092
    5. 'vertex' → logprob: -3.723937511444092
    6. ' for' → logprob: -3.848937511444092
    7. ')#' → logprob: -4.098937511444092
    8. '(vertex' → logprob: -7.473937511444092
    9. ' vertex' → logprob: -7.723937511444092
    10. 'line' → logprob: -7.848937511444092

Token 1322: ' odd' (ID: 14210)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.43919771909713745
    2. 'odd' → logprob: -1.4391977787017822
    3. '#' → logprob: -3.5641977787017822
    4. 'i' → logprob: -3.6891977787017822
    5. 'vertex' → logprob: -4.189197540283203
    6. 'edge' → logprob: -4.439197540283203
    7. 'v' → logprob: -4.689197540283203
    8. ' odd' → logprob: -5.189197540283203
    9. ' even' → logprob: -5.314197540283203
    10. 'p' → logprob: -5.689197540283203

Token 1323: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.7818053960800171
    2. '#' → logprob: -0.9068053960800171
    3. 'poly' → logprob: -2.9068055152893066
    4. ' polygon' → logprob: -2.9068055152893066
    5. ')' → logprob: -5.031805515289307
    6. 'pol' → logprob: -5.156805515289307
    7. ')
' → logprob: -5.781805515289307
    8. 'n' → logprob: -5.781805515289307
    9. '_polygon' → logprob: -6.031805515289307
    10. '```' → logprob: -6.531805515289307

Token 1324: ')

' (ID: 1029)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.757014811038971
    2. 'for' → logprob: -0.882014811038971
    3. ')' → logprob: -3.507014751434326
    4. 'def' → logprob: -3.757014751434326
    5. '
' → logprob: -4.132014751434326
    6. 'mid' → logprob: -4.132014751434326
    7. 'points' → logprob: -4.757014751434326
    8. 'c' → logprob: -5.257014751434326
    9. 'edges' → logprob: -5.757014751434326
    10. 'import' → logprob: -6.007014751434326

Token 1325: 'if' (ID: 366)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.46046632528305054
    2. 'if' → logprob: -1.7104663848876953
    3. 'for' → logprob: -2.3354663848876953
    4. '#' → logprob: -3.3354663848876953
    5. 'axes' → logprob: -3.3354663848876953
    6. 'candidate' → logprob: -5.085466384887695
    7. 'def' → logprob: -5.585466384887695
    8. 'ans' → logprob: -6.085466384887695
    9. 'mid' → logprob: -6.460466384887695
    10. 'indices' → logprob: -6.835466384887695

Token 1326: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.034940436482429504
    2. 'N' → logprob: -3.909940481185913
    3. ' n' → logprob: -4.284940242767334
    4. 'len' → logprob: -7.909940242767334
    5. ' N' → logprob: -9.159940719604492
    6. '(n' → logprob: -10.659940719604492
    7. ' len' → logprob: -11.409940719604492
    8. '2' → logprob: -12.159940719604492
    9. 'False' → logprob: -12.534940719604492
    10. ' ' → logprob: -13.159940719604492

Token 1327: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.049136366695165634
    2. ' %' → logprob: -3.0491364002227783
    3. '==' → logprob: -8.1741361618042
    4. '>=' → logprob: -9.0491361618042
    5. '>' → logprob: -9.7991361618042
    6. ' ==' → logprob: -9.9241361618042
    7. ' >=' → logprob: -10.9241361618042
    8. '2' → logprob: -11.7991361618042
    9. '```' → logprob: -11.7991361618042
    10. '%
' → logprob: -13.0491361618042

Token 1328: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.253713218029588e-05
    2. ' ' → logprob: -10.250062942504883
    3. '==' → logprob: -11.250062942504883
    4. '```' → logprob: -11.250062942504883
    5. '
' → logprob: -14.875062942504883
    6. '``' → logprob: -15.375062942504883
    7. ' ==' → logprob: -15.625062942504883
    8. '!=' → logprob: -15.625062942504883
    9. '=' → logprob: -16.250062942504883
    10. '0' → logprob: -16.500062942504883

Token 1329: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.009834716096520424
    2. ' ==' → logprob: -4.6348347663879395
    3. '```' → logprob: -10.384834289550781
    4. '!=' → logprob: -10.759834289550781
    5. '==
' → logprob: -11.134834289550781
    6. '=' → logprob: -11.884834289550781
    7. ')==' → logprob: -13.634834289550781
    8. ' !=' → logprob: -13.634834289550781
    9. ':' → logprob: -14.134834289550781
    10. '()==' → logprob: -14.884834289550781

Token 1330: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47409892082214355
    2. '2' → logprob: -0.9740989208221436
    3. '1' → logprob: -11.474099159240723
    4. ' ' → logprob: -11.474099159240723
    5. '
' → logprob: -14.849099159240723
    6. '   ' → logprob: -15.224099159240723
    7. '```' → logprob: -15.224099159240723
    8. '==' → logprob: -15.474099159240723
    9. '

' → logprob: -18.099098205566406
    10. ' ==' → logprob: -18.411598205566406

Token 1331: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.632871687412262
    2. ':
' → logprob: -0.757871687412262
    3. '   ' → logprob: -8.632871627807617
    4. ' and' → logprob: -10.757871627807617
    5. '):
' → logprob: -10.757871627807617
    6. '==' → logprob: -10.882871627807617
    7. ':

' → logprob: -11.257871627807617
    8. '=' → logprob: -12.507871627807617
    9. '():
' → logprob: -12.632871627807617
    10. ':
' → logprob: -12.882871627807617

Token 1332: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10171303898096085
    2. '   ' → logprob: -2.601712942123413
    3. 'mid' → logprob: -4.101713180541992
    4. '#' → logprob: -5.851713180541992
    5. ' for' → logprob: -6.976713180541992
    6. 'm' → logprob: -7.101713180541992
    7. 'half' → logprob: -7.976713180541992
    8. ' mid' → logprob: -8.351713180541992
    9. 'c' → logprob: -8.476713180541992
    10. 'edges' → logprob: -8.726713180541992

Token 1333: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015010541304945946
    2. '   ' → logprob: -4.640010356903076
    3. 'mid' → logprob: -5.515010356903076
    4. '#' (adapté à ' #') → logprob: -8.015010833740234
    5. 'half' → logprob: -8.140010833740234
    6. 'edges' → logprob: -8.640010833740234
    7. 'm' → logprob: -8.640010833740234
    8. ' for' → logprob: -9.640010833740234
    9. 'pairs' → logprob: -9.765010833740234
    10. 'c' → logprob: -9.890010833740234

Token 1334: ' even' (ID: 1952)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022014429792761803
    2. 'mid' → logprob: -4.772014617919922
    3. '#' → logprob: -5.772014617919922
    4. 'pairs' → logprob: -5.897014617919922
    5. 'edges' → logprob: -6.272014617919922
    6. 'c' → logprob: -6.272014617919922
    7. 'half' → logprob: -6.522014617919922
    8. '   ' → logprob: -6.772014617919922
    9. 'm' → logprob: -7.397014617919922
    10. 'candidate' → logprob: -9.022014617919922

Token 1335: ' number' (ID: 2086)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05892210081219673
    2. '   ' → logprob: -3.183922052383423
    3. ' for' → logprob: -4.183922290802002
    4. '
' → logprob: -8.058921813964844
    5. '#' → logprob: -9.683921813964844
    6. 'm' → logprob: -9.933921813964844
    7. 'mid' → logprob: -10.558921813964844
    8. 'half' → logprob: -10.808921813964844
    9. 'indices' → logprob: -10.933921813964844
    10. '    
' → logprob: -11.683921813964844

Token 1336: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020674197003245354
    2. 'for' → logprob: -4.145674228668213
    3. ' for' → logprob: -5.895674228668213
    4. 'n' → logprob: -8.145673751831055
    5. '#' → logprob: -8.270673751831055
    6. 'vertices' → logprob: -8.270673751831055
    7. 'points' → logprob: -8.520673751831055
    8. ' of' → logprob: -8.645673751831055
    9. '
' → logprob: -9.020673751831055
    10. ' vertices' → logprob: -9.145673751831055

Token 1337: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.5254844427108765
    2. 'points' → logprob: -0.9004844427108765
    3. 'polygon' → logprob: -6.900484561920166
    4. ' vertices' → logprob: -7.900484561920166
    5. 's' → logprob: -8.150484085083008
    6. 'poly' → logprob: -8.525484085083008
    7. '```' → logprob: -9.025484085083008
    8. 'verts' → logprob: -9.900484085083008
    9. 'vertex' → logprob: -9.900484085083008
    10. '
' → logprob: -9.900484085083008

Token 1338: ':' (ID: 25)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5776621103286743
    2. '   ' → logprob: -0.8276621103286743
    3. 'mid' → logprob: -6.702661991119385
    4. ' for' → logprob: -8.077662467956543
    5. 'half' → logprob: -9.702662467956543
    6. 'm' → logprob: -10.077662467956543
    7. '#' → logprob: -10.327662467956543
    8. 'edges' → logprob: -11.452662467956543
    9. '    
' → logprob: -11.827662467956543
    10. ' mid' → logprob: -11.952662467956543

Token 1339: ' axis' (ID: 16300)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0027447198517620564
    2. '   ' → logprob: -6.127744674682617
    3. 'mid' → logprob: -7.877744674682617
    4. 'half' → logprob: -9.877744674682617
    5. 'possible' → logprob: -10.752744674682617
    6. 'c' → logprob: -11.002744674682617
    7. '#' → logprob: -11.002744674682617
    8. 'm' → logprob: -11.377744674682617
    9. ' for' → logprob: -11.502744674682617
    10. 'pairs' → logprob: -11.627744674682617

Token 1340: ' passes' (ID: 29169)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.848437488079071
    2. 's' → logprob: -1.2234375476837158
    3. '_candidates' → logprob: -2.098437547683716
    4. 'for' → logprob: -2.848437547683716
    5. '   ' → logprob: -3.848437547683716
    6. '=' → logprob: -4.473437309265137
    7. 'through' → logprob: -4.473437309265137
    8. 'passes' → logprob: -4.473437309265137
    9. ' through' → logprob: -4.848437309265137
    10. ' =' → logprob: -4.973437309265137

Token 1341: ' through' (ID: 1819)
  Prédit: 'through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'through' → logprob: -0.002228406025096774
    2. ' through' → logprob: -6.127228260040283
    3. '#' → logprob: -10.252228736877441
    4. '   ' → logprob: -13.002228736877441
    5. '-through' → logprob: -13.502228736877441
    6. 'Through' → logprob: -13.627228736877441
    7. '```' → logprob: -14.002228736877441
    8. 's' → logprob: -14.502228736877441
    9. 'for' → logprob: -14.627228736877441
    10. 'either' → logprob: -15.377228736877441

Token 1342: ' mid' (ID: 6959)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.6038476824760437
    2. 'for' → logprob: -1.6038477420806885
    3. 'mid' → logprob: -1.7288477420806885
    4. '(p' → logprob: -3.4788477420806885
    5. 'poly' → logprob: -4.853847503662109
    6. ' polygon' → logprob: -5.353847503662109
    7. 'pairs' → logprob: -5.353847503662109
    8. '(n' → logprob: -5.603847503662109
    9. 'h' → logprob: -5.728847503662109
    10. '(' → logprob: -5.853847503662109

Token 1343: 'points' (ID: 14011)
  Prédit: 'points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.018778614699840546
    2. 'point' → logprob: -4.0187788009643555
    3. '0' → logprob: -8.518778800964355
    4. '=' → logprob: -9.018778800964355
    5. '```' → logprob: -9.268778800964355
    6. 'n' → logprob: -9.893778800964355
    7. '1' → logprob: -10.518778800964355
    8. '_points' → logprob: -10.893778800964355
    9. '
' → logprob: -11.143778800964355
    10. 'oints' → logprob: -11.143778800964355

Token 1344: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5464696884155273
    2. '   ' → logprob: -1.5464696884155273
    3. 'of' → logprob: -2.4214696884155273
    4. 'and' → logprob: -3.1714696884155273
    5. ' and' → logprob: -3.6714696884155273
    6. ' for' → logprob: -3.6714696884155273
    7. ' of' → logprob: -4.546469688415527
    8. 's' → logprob: -5.296469688415527
    9. 'mid' → logprob: -5.671469688415527
    10. '#' → logprob: -6.921469688415527

Token 1345: ' opposite' (ID: 23821)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.6126676797866821
    2. 'op' → logprob: -1.4876676797866821
    3. 'pairs' → logprob: -1.6126676797866821
    4. 'poly' → logprob: -4.737667560577393
    5. 'pol' → logprob: -4.862667560577393
    6. '(p' → logprob: -4.987667560577393
    7. 'h' → logprob: -6.112667560577393
    8. '#' → logprob: -6.862667560577393
    9. 'edges' → logprob: -6.987667560577393
    10. ' polygon' → logprob: -7.112667560577393

Token 1346: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.35890063643455505
    2. 'points' → logprob: -1.9839006662368774
    3. 'pairs' → logprob: -2.358900547027588
    4. 'edges' → logprob: -3.733900547027588
    5. ' vertices' → logprob: -3.858900547027588
    6. 'polygon' → logprob: -5.358900547027588
    7. 'poly' → logprob: -5.608900547027588
    8. ' pairs' → logprob: -5.983900547027588
    9. ' edges' → logprob: -6.108900547027588
    10. '```' → logprob: -6.233900547027588

Token 1347: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007086210534907877
    2. '
' → logprob: -8.00070858001709
    3. ' and' → logprob: -8.87570858001709
    4. 'for' → logprob: -9.12570858001709
    5. ' for' → logprob: -9.75070858001709
    6. 'and' → logprob: -10.12570858001709
    7. '    
' → logprob: -12.00070858001709
    8. ':' → logprob: -12.25070858001709
    9. '```' → logprob: -12.50070858001709
    10. ',' → logprob: -12.75070858001709

Token 1348: ' through' (ID: 1819)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.6024436950683594
    2. '#' → logprob: -1.8524436950683594
    3. 'through' → logprob: -1.9774436950683594
    4. 'mid' → logprob: -2.3524436950683594
    5. 'op' → logprob: -3.6024436950683594
    6. 'lines' → logprob: -4.477443695068359
    7. ' edges' → logprob: -4.602443695068359
    8. 'line' → logprob: -5.727443695068359
    9. ' through' → logprob: -5.852443695068359
    10. '   ' → logprob: -6.102443695068359

Token 1349: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.08689060807228088
    2. 'op' → logprob: -2.961890697479248
    3. 'edges' → logprob: -4.211890697479248
    4. '#' → logprob: -4.461890697479248
    5. ' mid' → logprob: -5.711890697479248
    6. 'pairs' → logprob: -7.211890697479248
    7. ' opposite' → logprob: -8.33689022064209
    8. '
' → logprob: -8.33689022064209
    9. ' edges' → logprob: -8.71189022064209
    10. 'edge' → logprob: -9.33689022064209

Token 1350: 'points' (ID: 14011)
  Prédit: 'points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00438667880371213
    2. 'edges' → logprob: -5.504386901855469
    3. 'point' → logprob: -8.504386901855469
    4. 'segments' → logprob: -9.754386901855469
    5. 'lines' → logprob: -11.004386901855469
    6. 'mid' → logprob: -11.879386901855469
    7. '#' → logprob: -12.254386901855469
    8. 'line' → logprob: -12.504386901855469
    9. 'edge' → logprob: -12.629386901855469
    10. 'vertices' → logprob: -13.004386901855469

Token 1351: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.02790558524429798
    2. ' of' → logprob: -3.6529057025909424
    3. '   ' → logprob: -6.527905464172363
    4. '#' → logprob: -9.777905464172363
    5. '	of' → logprob: -10.152905464172363
    6. '<|end|>' → logprob: -11.152905464172363
    7. ' ' → logprob: -11.652905464172363
    8. '  ' → logprob: -12.152905464172363
    9. '_of' → logprob: -12.402905464172363
    10. '```' → logprob: -12.902905464172363

Token 1352: ' opposite' (ID: 23821)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.08202770352363586
    2. 'edges' → logprob: -2.5820276737213135
    3. ' opposite' → logprob: -6.957027912139893
    4. 'adj' → logprob: -7.207027912139893
    5. 'con' → logprob: -7.457027912139893
    6. ' edges' → logprob: -7.957027912139893
    7. 'pairs' → logprob: -8.332027435302734
    8. '
' → logprob: -9.207027435302734
    9. '#' → logprob: -9.707027435302734
    10. 'mid' → logprob: -10.957027435302734

Token 1353: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0003827676991932094
    2. ' edges' → logprob: -7.875382900238037
    3. 'edge' → logprob: -13.125382423400879
    4. '(edges' → logprob: -15.875382423400879
    5. '.edges' → logprob: -16.000383377075195
    6. '_edges' → logprob: -16.000383377075195
    7. '```' → logprob: -16.250383377075195
    8. 's' → logprob: -16.375383377075195
    9. '#' → logprob: -16.625383377075195
    10. '
' → logprob: -17.250383377075195

Token 1354: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026944546028971672
    2. '
' → logprob: -4.151944637298584
    3. 'for' → logprob: -4.901944637298584
    4. ' for' → logprob: -6.026944637298584
    5. '    
' → logprob: -7.401944637298584
    6. 'mid' → logprob: -9.026944160461426
    7. '#' → logprob: -9.401944160461426
    8. ' mid' → logprob: -10.401944160461426
    9. '```' → logprob: -10.776944160461426
    10. 'edges' → logprob: -10.901944160461426

Token 1355: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03328336030244827
    2. 'for' → logprob: -3.5332834720611572
    3. ' for' → logprob: -5.783283233642578
    4. 'mid' → logprob: -8.533283233642578
    5. '
' → logprob: -9.408283233642578
    6. ' mid' → logprob: -10.158283233642578
    7. '```' → logprob: -10.533283233642578
    8. 'm' → logprob: -10.783283233642578
    9. 'edges' → logprob: -10.783283233642578
    10. '    
' → logprob: -10.908283233642578

Token 1356: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0412026084959507
    2. '   ' → logprob: -3.2912025451660156
    3. 'mid' → logprob: -6.041202545166016
    4. 'edges' → logprob: -7.916202545166016
    5. 'axes' → logprob: -9.416202545166016
    6. 'c' → logprob: -9.666202545166016
    7. ' for' → logprob: -9.666202545166016
    8. '#' (adapté à ' #') → logprob: -10.041202545166016
    9. 'm' → logprob: -10.166202545166016
    10. 'pairs' → logprob: -10.541202545166016

Token 1357: ' check' (ID: 2371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011176676489412785
    2. 'axes' → logprob: -5.511176586151123
    3. 'c' → logprob: -5.636176586151123
    4. 'mid' → logprob: -6.136176586151123
    5. '   ' → logprob: -7.386176586151123
    6. '#' → logprob: -8.261177062988281
    7. 'candidate' → logprob: -9.011177062988281
    8. 'edges' → logprob: -9.136177062988281
    9. 'pairs' → logprob: -9.636177062988281
    10. 'from' → logprob: -10.261177062988281

Token 1358: ' axis' (ID: 16300)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0022343553137034178
    2. '   ' → logprob: -6.37723445892334
    3. 'mid' → logprob: -8.00223445892334
    4. ' for' → logprob: -8.75223445892334
    5. '#' → logprob: -11.50223445892334
    6. '    
' → logprob: -11.87723445892334
    7. 'pairs' → logprob: -12.12723445892334
    8. 'half' → logprob: -12.25223445892334
    9. '
' → logprob: -12.87723445892334
    10. '```' → logprob: -13.37723445892334

Token 1359: ' passing' (ID: 21178)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28495389223098755
    2. '   ' → logprob: -2.1599538326263428
    3. ' for' → logprob: -2.5349538326263428
    4. '
' → logprob: -3.0349538326263428
    5. ' =' → logprob: -6.534954071044922
    6. '    
' → logprob: -7.409954071044922
    7. 'indices' → logprob: -8.034954071044922
    8. ':' → logprob: -8.284954071044922
    9. 'mid' → logprob: -8.409954071044922
    10. 'def' → logprob: -8.409954071044922

Token 1360: ' through' (ID: 1819)
  Prédit: 'through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'through' → logprob: -0.05996638908982277
    2. 'for' → logprob: -3.5599663257598877
    3. '   ' → logprob: -3.8099663257598877
    4. 'i' → logprob: -6.309966564178467
    5. '_th' → logprob: -6.809966564178467
    6. 'mid' → logprob: -7.184966564178467
    7. ' through' → logprob: -7.309966564178467
    8. '#' → logprob: -7.434966564178467
    9. '       ' → logprob: -7.559966564178467
    10. '(i' → logprob: -8.059966087341309

Token 1361: ' mid' (ID: 6959)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.04956357926130295
    2. 'mid' → logprob: -3.5495636463165283
    3. '(p' → logprob: -5.049563407897949
    4. 'for' → logprob: -5.299563407897949
    5. ' polygon' → logprob: -6.674563407897949
    6. 'h' → logprob: -6.674563407897949
    7. '
' → logprob: -6.799563407897949
    8. '((' → logprob: -7.049563407897949
    9. '(h' → logprob: -7.424563407897949
    10. 'i' → logprob: -8.04956340789795

Token 1362: 'points' (ID: 14011)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.7207982540130615
    2. 'points' → logprob: -0.7207982540130615
    3. '(p' → logprob: -4.720798492431641
    4. 'polygon' → logprob: -4.720798492431641
    5. '   ' → logprob: -6.470798492431641
    6. 'oints' → logprob: -6.845798492431641
    7. '(' → logprob: -6.970798492431641
    8. 'pairs' → logprob: -7.470798492431641
    9. 'd' → logprob: -7.720798492431641
    10. '(points' → logprob: -7.845798492431641

Token 1363: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6566373705863953
    2. '   ' → logprob: -0.7816373705863953
    3. ' for' → logprob: -4.281637191772461
    4. '
' → logprob: -4.906637191772461
    5. 'of' → logprob: -7.406637191772461
    6. 'and' → logprob: -8.031637191772461
    7. '    
' → logprob: -8.406637191772461
    8. 'mid' → logprob: -8.406637191772461
    9. ' of' → logprob: -8.531637191772461
    10. ':' → logprob: -8.906637191772461

Token 1364: ' vertex' (ID: 25363)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.6066221594810486
    2. 'op' → logprob: -0.9816221594810486
    3. 'pairs' → logprob: -2.8566222190856934
    4. 'points' → logprob: -4.981622219085693
    5. ' polygon' → logprob: -5.481622219085693
    6. 'h' → logprob: -5.606622219085693
    7. '(p' → logprob: -5.731622219085693
    8. 'poly' → logprob: -6.356622219085693
    9. 'pol' → logprob: -7.606622219085693
    10. 'pair' → logprob: -7.731622219085693

Token 1365: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.19831854104995728
    2. ' pairs' → logprob: -2.0733184814453125
    3. 'for' → logprob: -3.9483184814453125
    4. 's' → logprob: -4.1983184814453125
    5. 'i' → logprob: -4.6983184814453125
    6. 'es' → logprob: -4.9483184814453125
    7. '_pairs' → logprob: -6.8233184814453125
    8. ' for' → logprob: -7.4483184814453125
    9. '#' → logprob: -8.323318481445312
    10. 'and' → logprob: -8.323318481445312

Token 1366: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5572963953018188
    2. '   ' → logprob: -0.9322963953018188
    3. '
' → logprob: -3.9322962760925293
    4. ' for' → logprob: -4.307296276092529
    5. '```' → logprob: -8.182296752929688
    6. '    
' → logprob: -9.307296752929688
    7. 'mid' → logprob: -10.307296752929688
    8. '	for' → logprob: -10.807296752929688
    9. 'i' → logprob: -11.182296752929688
    10. ':' → logprob: -11.307296752929688

Token 1367: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20505912601947784
    2. '   ' → logprob: -1.7050591707229614
    3. ' for' → logprob: -5.705059051513672
    4. '```' → logprob: -8.830059051513672
    5. '
' → logprob: -9.705059051513672
    6. 'i' → logprob: -9.955059051513672
    7. '    
' → logprob: -10.830059051513672
    8. '	for' → logprob: -11.330059051513672
    9. 'mid' → logprob: -11.830059051513672
    10. '``' → logprob: -12.205059051513672

Token 1368: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0076528917998075485
    2. '   ' → logprob: -5.507652759552002
    3. ' for' → logprob: -5.757652759552002
    4. '
' → logprob: -8.00765323638916
    5. 'mid' → logprob: -9.88265323638916
    6. '```' → logprob: -11.50765323638916
    7. '    
' → logprob: -11.88265323638916
    8. 'i' → logprob: -12.38265323638916
    9. '``' → logprob: -13.75765323638916
    10. 'pairs' → logprob: -14.13265323638916

Token 1369: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0028074870351701975
    2. ' i' → logprob: -5.8778076171875
    3. '(i' → logprob: -14.2528076171875
    4. '```' → logprob: -14.2528076171875
    5. '   ' → logprob: -14.7528076171875
    6. '_i' → logprob: -15.2528076171875
    7. '	i' → logprob: -15.5028076171875
    8. ' ' → logprob: -16.3778076171875
    9. '`' → logprob: -16.5028076171875
    10. 'idx' → logprob: -16.6278076171875

Token 1370: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08900512009859085
    2. 'in' → logprob: -2.4640052318573
    3. '   ' → logprob: -10.589005470275879
    4. ',' → logprob: -11.089005470275879
    5. '	in' → logprob: -11.964005470275879
    6. ' ' → logprob: -12.339005470275879
    7. ')' → logprob: -12.714005470275879
    8. '```' → logprob: -13.214005470275879
    9. 'n' → logprob: -13.339005470275879
    10. '+' → logprob: -13.589005470275879

Token 1371: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.5491004129871726e-05
    2. ' range' → logprob: -10.000045776367188
    3. '(range' → logprob: -18.250045776367188
    4. '0' → logprob: -18.875045776367188
    5. '   ' → logprob: -19.625045776367188
    6. ' ' → logprob: -19.625045776367188
    7. '	range' → logprob: -20.000045776367188
    8. '```' → logprob: -20.750045776367188
    9. 'n' → logprob: -21.375045776367188
    10. 'in' → logprob: -21.750045776367188

Token 1372: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005307285115122795
    2. '(n' → logprob: -5.255307197570801
    3. '   ' → logprob: -9.6303071975708
    4. 'i' → logprob: -13.1303071975708
    5. ' n' → logprob: -13.1303071975708
    6. '
' → logprob: -13.5053071975708
    7. '0' → logprob: -13.8803071975708
    8. '(' → logprob: -13.8803071975708
    9. '(i' → logprob: -14.7553071975708
    10. '	n' → logprob: -16.505308151245117

Token 1373: '//' (ID: 393)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07263477146625519
    2. '//' → logprob: -2.697634696960449
    3. '   ' → logprob: -6.572634696960449
    4. '+' → logprob: -7.447634696960449
    5. '):' → logprob: -7.697634696960449
    6. '-' → logprob: -8.69763469696045
    7. ' //' → logprob: -9.69763469696045
    8. '```' → logprob: -12.07263469696045
    9. '):
' → logprob: -12.32263469696045
    10. '*' → logprob: -12.32263469696045

Token 1374: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.584239938296378e-06
    2. ' ' → logprob: -12.000007629394531
    3. '1' → logprob: -14.750007629394531
    4. 'n' → logprob: -15.000007629394531
    5. '```' → logprob: -15.625007629394531
    6. '   ' → logprob: -16.00000762939453
    7. '
' → logprob: -16.12500762939453
    8. '(' → logprob: -16.25000762939453
    9. 'i' → logprob: -16.50000762939453
    10. '0' → logprob: -17.00000762939453

Token 1375: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01750682108104229
    2. '):' → logprob: -4.1425065994262695
    3. '   ' → logprob: -7.0175065994262695
    4. '+' → logprob: -7.7675065994262695
    5. '):
' → logprob: -9.26750659942627
    6. '*' → logprob: -11.39250659942627
    7. ' ):
' → logprob: -11.39250659942627
    8. '+i' → logprob: -12.01750659942627
    9. ')' → logprob: -12.14250659942627
    10. '-' → logprob: -12.39250659942627

Token 1376: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008099827100522816
    2. '       ' → logprob: -7.375810146331787
    3. ' a' → logprob: -9.250809669494629
    4. 'a' → logprob: -9.500809669494629
    5. '```' → logprob: -12.250809669494629
    6. '	a' → logprob: -12.875809669494629
    7. '    
' → logprob: -13.750809669494629
    8. '   ' → logprob: -13.875809669494629
    9. '
' → logprob: -14.250809669494629
    10. ',' → logprob: -14.250809669494629

Token 1377: ' p' (ID: 275)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5405340194702148
    2. '   ' → logprob: -0.9155340194702148
    3. '       ' → logprob: -4.415534019470215
    4. 'mid' → logprob: -6.165534019470215
    5. ' a' → logprob: -6.290534019470215
    6. 'j' → logprob: -7.790534019470215
    7. 'm' → logprob: -8.415534019470215
    8. 'for' → logprob: -8.415534019470215
    9. 'p' (adapté à ' p') → logprob: -9.040534019470215
    10. ' ' → logprob: -9.415534019470215

Token 1378: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10982871055603027
    2. 'a' → logprob: -2.3598287105560303
    3. ' =' → logprob: -5.109828948974609
    4. '=' → logprob: -6.484828948974609
    5. 'i' → logprob: -7.109828948974609
    6. '_a' → logprob: -7.984828948974609
    7. '_i' → logprob: -8.73482894897461
    8. '0' → logprob: -8.85982894897461
    9. '
' → logprob: -9.10982894897461
    10. '```' → logprob: -9.23482894897461

Token 1379: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5255160331726074
    2. ' =' → logprob: -1.1505160331726074
    3. ',' → logprob: -3.0255160331726074
    4. '=p' → logprob: -3.2755160331726074
    5. ',p' → logprob: -5.150516033172607
    6. ' ,' → logprob: -9.900516510009766
    7. '=
' → logprob: -10.025516510009766
    8. '   ' → logprob: -10.525516510009766
    9. 'p' → logprob: -11.900516510009766
    10. ' p' → logprob: -12.525516510009766

Token 1380: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.001518907374702394
    2. ' polygon' → logprob: -6.501518726348877
    3. 'poly' → logprob: -11.126519203186035
    4. 'pol' → logprob: -13.501519203186035
    5. '   ' → logprob: -15.001519203186035
    6. 'normalize' → logprob: -17.00151824951172
    7. 'polar' → logprob: -17.50151824951172
    8. 'p' → logprob: -17.87651824951172
    9. '_polygon' → logprob: -18.25151824951172
    10. ' ' → logprob: -18.37651824951172

Token 1381: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00018852073117159307
    2. '[p' → logprob: -9.500188827514648
    3. '
' → logprob: -10.125188827514648
    4. 'i' → logprob: -10.875188827514648
    5. 'p' → logprob: -10.875188827514648
    6. ' =' → logprob: -11.000188827514648
    7. '=' → logprob: -11.375188827514648
    8. '[(' → logprob: -13.250188827514648
    9. '[' → logprob: -13.375188827514648
    10. '   ' → logprob: -14.000188827514648

Token 1382: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.017438754439353943
    2. ']
' → logprob: -4.392438888549805
    3. ')' → logprob: -5.892438888549805
    4. '       ' → logprob: -7.142438888549805
    5. ',' → logprob: -7.267438888549805
    6. ',p' → logprob: -8.642438888549805
    7. ']' → logprob: -8.892438888549805
    8. ')
' → logprob: -9.517438888549805
    9. '   ' → logprob: -9.642438888549805
    10. '])
' → logprob: -10.017438888549805

Token 1383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00040815072134137154
    2. ' p' → logprob: -8.875408172607422
    3. ',' → logprob: -9.125408172607422
    4. 'p' → logprob: -9.750408172607422
    5. '	' → logprob: -10.250408172607422
    6. ',p' → logprob: -10.500408172607422
    7. '	p' → logprob: -11.750408172607422
    8. '   ' → logprob: -11.750408172607422
    9. ' ,' → logprob: -12.250408172607422
    10. ' ' → logprob: -13.125408172607422

Token 1384: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -1.6047699318733066e-05
    2. '       ' → logprob: -11.625016212463379
    3. ' p' → logprob: -12.000016212463379
    4. 'q' → logprob: -14.875016212463379
    5. '   ' → logprob: -14.875016212463379
    6. '           ' → logprob: -16.250015258789062
    7. 'mid' → logprob: -17.500015258789062
    8. 'import' → logprob: -17.750015258789062
    9. '```' → logprob: -17.750015258789062
    10. 'op' → logprob: -18.125015258789062

Token 1385: '2' (ID: 17)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.024335265159607
    2. 'p' → logprob: -1.149335265159607
    3. 'n' → logprob: -1.649335265159607
    4. '(p' → logprob: -3.0243353843688965
    5. '+' → logprob: -4.3993353843688965
    6. '((' → logprob: -4.5243353843688965
    7. '(i' → logprob: -4.5243353843688965
    8. 'i' → logprob: -5.0243353843688965
    9. '   ' → logprob: -5.0243353843688965
    10. '(' → logprob: -5.1493353843688965

Token 1386: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31328192353248596
    2. '=' → logprob: -1.3132818937301636
    3. '=p' → logprob: -11.438282012939453
    4. '   ' → logprob: -12.063282012939453
    5. '=
' → logprob: -14.438282012939453
    6. ' ' → logprob: -14.688282012939453
    7. '    ' → logprob: -14.938282012939453
    8. '       ' → logprob: -14.938282012939453
    9. 'n' → logprob: -15.313282012939453
    10. ',' → logprob: -15.563282012939453

Token 1387: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.02975662797689438
    2. ' polygon' → logprob: -3.529756546020508
    3. 'poly' → logprob: -12.154756546020508
    4. 'pol' → logprob: -14.154756546020508
    5. '_polygon' → logprob: -16.154756546020508
    6. 'Polygon' → logprob: -17.779756546020508
    7. 'olygon' → logprob: -18.279756546020508
    8. 'p' → logprob: -18.529756546020508
    9. 'polar' → logprob: -18.904756546020508
    10. ' polygons' → logprob: -20.154756546020508

Token 1388: '[(' (ID: 20542)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.13320940732955933
    2. '[(' → logprob: -2.133209466934204
    3. '[n' → logprob: -6.008209228515625
    4. '   ' → logprob: -6.883209228515625
    5. ' polygon' → logprob: -6.883209228515625
    6. '[p' → logprob: -7.133209228515625
    7. 'poly' → logprob: -8.383209228515625
    8. '(n' → logprob: -8.508209228515625
    9. '(p' → logprob: -8.633209228515625
    10. 'pol' → logprob: -9.008209228515625

Token 1389: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012685754336416721
    2. '(i' → logprob: -4.387685775756836
    3. 'n' → logprob: -8.887685775756836
    4. '(n' → logprob: -11.512685775756836
    5. '   ' → logprob: -11.762685775756836
    6. '{i' → logprob: -11.762685775756836
    7. ' i' → logprob: -12.387685775756836
    8. ' (' → logprob: -13.012685775756836
    9. '```' → logprob: -13.637685775756836
    10. '
' → logprob: -13.637685775756836

Token 1390: '+n' (ID: 87683)
  Prédit: '+n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+n' → logprob: -0.017656400799751282
    2. '+' → logprob: -4.267656326293945
    3. 'n' → logprob: -6.017656326293945
    4. ' +' → logprob: -7.142656326293945
    5. '+(' → logprob: -9.017656326293945
    6. '+i' → logprob: -9.142656326293945
    7. '(n' → logprob: -11.017656326293945
    8. '+p' → logprob: -11.392656326293945
    9. '   ' → logprob: -12.767656326293945
    10. '[n' → logprob: -14.642656326293945

Token 1391: '//' (ID: 393)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03815142437815666
    2. '//' → logprob: -3.288151502609253
    3. ' ' → logprob: -9.663151741027832
    4. '```' → logprob: -10.413151741027832
    5. '   ' → logprob: -11.663151741027832
    6. '#' → logprob: -12.038151741027832
    7. '
' → logprob: -14.663151741027832
    8. '/' → logprob: -15.413151741027832
    9. '  ' → logprob: -15.413151741027832
    10. '1' → logprob: -15.538151741027832

Token 1392: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8312570318812504e-05
    2. ' ' → logprob: -11.000018119812012
    3. '1' → logprob: -13.750018119812012
    4. '```' → logprob: -15.250018119812012
    5. '   ' → logprob: -15.500018119812012
    6. '...' → logprob: -17.625019073486328
    7. '0' → logprob: -17.750019073486328
    8. '  ' → logprob: -17.875019073486328
    9. 'int' → logprob: -18.375019073486328
    10. 'n' → logprob: -18.375019073486328

Token 1393: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.46991658210754395
    2. ')]' → logprob: -1.594916582107544
    3. ')]
' → logprob: -2.094916582107544
    4. ')' → logprob: -3.094916582107544
    5. ')][' → logprob: -5.969916343688965
    6. ')]
' → logprob: -7.719916343688965
    7. ']%' → logprob: -8.094916343688965
    8. ')]

' → logprob: -9.219916343688965
    9. '%' → logprob: -9.844916343688965
    10. '```' → logprob: -10.219916343688965

Token 1394: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.1008713702030946e-06
    2. ' n' → logprob: -13.125001907348633
    3. '```' → logprob: -18.125001907348633
    4. '``' → logprob: -18.625001907348633
    5. ')n' → logprob: -20.125001907348633
    6. '   ' → logprob: -20.625001907348633
    7. '	n' → logprob: -20.750001907348633
    8. '(n' → logprob: -21.750001907348633
    9. '_n' → logprob: -21.875001907348633
    10. '0' → logprob: -21.875001907348633

Token 1395: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.007328913547098637
    2. ']' → logprob: -5.007328987121582
    3. ')
' → logprob: -8.507328987121582
    4. ']
' → logprob: -8.757328987121582
    5. '       ' → logprob: -8.882328987121582
    6. ']

' → logprob: -10.007328987121582
    7. '   ' → logprob: -10.132328987121582
    8. ' ]
' → logprob: -11.507328987121582
    9. ')' → logprob: -11.632328987121582
    10. ')]
' → logprob: -12.882328987121582

Token 1396: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012130910763517022
    2. '
' → logprob: -7.501213073730469
    3. ' midpoint' → logprob: -8.001213073730469
    4. 'mid' → logprob: -9.126213073730469
    5. '        
' → logprob: -9.751213073730469
    6. '   ' → logprob: -10.001213073730469
    7. ' mid' → logprob: -10.126213073730469
    8. 'm' → logprob: -10.501213073730469
    9. 'a' → logprob: -11.501213073730469
    10. '```' → logprob: -11.626213073730469

Token 1397: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.08964874595403671
    2. 'm' → logprob: -2.714648723602295
    3. 'axis' → logprob: -4.839648723602295
    4. 'a' → logprob: -5.464648723602295
    5. '   ' → logprob: -5.589648723602295
    6. 'mx' → logprob: -5.839648723602295
    7. ' mid' → logprob: -8.089649200439453
    8. 'mp' → logprob: -8.714649200439453
    9. '       ' → logprob: -9.464649200439453
    10. 'ax' → logprob: -9.589649200439453

Token 1398: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11032940447330475
    2. ' =' → logprob: -2.3603293895721436
    3. 'point' → logprob: -4.610329627990723
    4. 'p' → logprob: -9.860329627990723
    5. '=(' → logprob: -9.985329627990723
    6. '_point' → logprob: -11.735329627990723
    7. 'x' → logprob: -11.860329627990723
    8. '   ' → logprob: -12.985329627990723
    9. '=p' → logprob: -13.485329627990723
    10. '=((' → logprob: -13.860329627990723

Token 1399: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -7.588793960167095e-05
    2. ' ((' → logprob: -9.750076293945312
    3. '(' → logprob: -11.000076293945312
    4. '   ' → logprob: -14.625076293945312
    5. '(((' → logprob: -15.375076293945312
    6. ' ' → logprob: -16.000076293945312
    7. '(p' → logprob: -17.250076293945312
    8. '[(' → logprob: -18.125076293945312
    9. '((-' → logprob: -18.250076293945312
    10. '(
' → logprob: -18.375076293945312

Token 1400: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.12693975865840912
    2. '(p' → logprob: -2.1269397735595703
    3. ' (' → logprob: -11.87693977355957
    4. '   ' → logprob: -12.87693977355957
    5. ' p' → logprob: -13.62693977355957
    6. '(' → logprob: -14.25193977355957
    7. '[p' → logprob: -15.62693977355957
    8. '0' → logprob: -17.50193977355957
    9. '	p' → logprob: -17.50193977355957
    10. '
' → logprob: -17.50193977355957

Token 1401: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016099829226732254
    2. '1' → logprob: -4.14109992980957
    3. 'i' → logprob: -10.64109992980957
    4. 'p' → logprob: -11.01609992980957
    5. '[' → logprob: -11.64109992980957
    6. ' ' → logprob: -12.26609992980957
    7. '(' → logprob: -12.76609992980957
    8. '```' → logprob: -12.76609992980957
    9. '   ' → logprob: -13.26609992980957
    10. '(p' → logprob: -14.14109992980957

Token 1402: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00023166877508629113
    2. '0' → logprob: -8.375231742858887
    3. '   ' → logprob: -15.125231742858887
    4. '
' → logprob: -15.250231742858887
    5. '#' → logprob: -15.375231742858887
    6. '```' → logprob: -16.12523078918457
    7. '[
' → logprob: -16.62523078918457
    8. '1' → logprob: -16.87523078918457
    9. 'import' → logprob: -17.50023078918457
    10. '][' → logprob: -17.50023078918457

Token 1403: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.125001907348633
    3. '
' → logprob: -16.000001907348633
    4. '```' → logprob: -16.875001907348633
    5. ' ' → logprob: -17.375001907348633
    6. '   ' → logprob: -19.250001907348633
    7. '#' → logprob: -19.750001907348633
    8. '۰' → logprob: -19.750001907348633
    9. '{' → logprob: -20.125001907348633
    10. 'import' → logprob: -20.250001907348633

Token 1404: ']+' (ID: 15344)
  Prédit: '+p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+p' → logprob: -0.0009096754365600646
    2. '+' → logprob: -7.125909805297852
    3. ' +' → logprob: -9.250909805297852
    4. ')+' → logprob: -12.875909805297852
    5. '+
' → logprob: -12.875909805297852
    6. 'p' → logprob: -13.125909805297852
    7. '```' → logprob: -13.750909805297852
    8. ']+' → logprob: -14.750909805297852
    9. ')' → logprob: -16.00090980529785
    10. ',p' → logprob: -16.12590980529785

Token 1405: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.717296517104842e-05
    2. ' p' → logprob: -10.000057220458984
    3. '(p' → logprob: -11.375057220458984
    4. '0' → logprob: -15.125057220458984
    5. ')p' → logprob: -17.875057220458984
    6. '(' → logprob: -18.250057220458984
    7. ')' → logprob: -18.875057220458984
    8. ' (' → logprob: -18.875057220458984
    9. '```' → logprob: -19.125057220458984
    10. '``' → logprob: -19.750057220458984

Token 1406: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2948405128554441e-05
    2. 'p' → logprob: -12.37501335144043
    3. '[' → logprob: -12.62501335144043
    4. '1' → logprob: -12.87501335144043
    5. ' ' → logprob: -13.37501335144043
    6. '(' → logprob: -14.75001335144043
    7. '2' → logprob: -14.87501335144043
    8. '```' → logprob: -15.50001335144043
    9. '(p' → logprob: -15.87501335144043
    10. '   ' → logprob: -16.62501335144043

Token 1407: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.5491004129871726e-05
    2. '0' → logprob: -10.250045776367188
    3. ')/' → logprob: -11.750045776367188
    4. ')' → logprob: -14.000045776367188
    5. '```' → logprob: -14.000045776367188
    6. '   ' → logprob: -16.250045776367188
    7. '#' → logprob: -16.375045776367188
    8. '(' → logprob: -16.500045776367188
    9. '
' → logprob: -16.625045776367188
    10. '[
' → logprob: -17.000045776367188

Token 1408: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -12.625003814697266
    3. ' ' → logprob: -15.000003814697266
    4. '   ' → logprob: -16.250003814697266
    5. '```' → logprob: -16.750003814697266
    6. '#' → logprob: -16.875003814697266
    7. '۰' → logprob: -18.875003814697266
    8. '{' → logprob: -19.125003814697266
    9. '``' → logprob: -19.500003814697266
    10. '       ' → logprob: -20.125003814697266

Token 1409: '])/' (ID: 93047)
  Prédit: ')/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.004030195530503988
    2. '[' → logprob: -6.254030227661133
    3. ']/' → logprob: -7.129030227661133
    4. ')' → logprob: -7.254030227661133
    5. ')*' → logprob: -7.754030227661133
    6. '0' → logprob: -9.754030227661133
    7. '])/' → logprob: -10.254030227661133
    8. '   ' → logprob: -10.754030227661133
    9. ')//' → logprob: -11.004030227661133
    10. '```' → logprob: -11.379030227661133

Token 1410: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -15.000000953674316
    3. '```' → logprob: -15.125000953674316
    4. '   ' → logprob: -16.125
    5. '۲' → logprob: -18.625
    6. '``' → logprob: -19.125
    7. '２' → logprob: -19.4375
    8. '
' → logprob: -19.5625
    9. ',' → logprob: -20.0
    10. '     ' → logprob: -20.0625

Token 1411: ',(' (ID: 27243)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08492839336395264
    2. ',(' → logprob: -2.584928512573242
    3. ',
' → logprob: -5.834928512573242
    4. ',p' → logprob: -6.209928512573242
    5. ' ,' → logprob: -6.834928512573242
    6. '(p' → logprob: -12.334928512573242
    7. ',\
' → logprob: -12.584928512573242
    8. '```' → logprob: -13.959928512573242
    9. ',

' → logprob: -14.084928512573242
    10. '),(' → logprob: -15.084928512573242

Token 1412: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.001982402754947543
    2. '(p' → logprob: -6.25198221206665
    3. ' p' → logprob: -9.876982688903809
    4. ' (' → logprob: -13.876982688903809
    5. ' ' → logprob: -14.001982688903809
    6. '(' → logprob: -15.251982688903809
    7. '
' → logprob: -16.376981735229492
    8. '   ' → logprob: -16.376981735229492
    9. '	p' → logprob: -16.876981735229492
    10. ')p' → logprob: -17.251981735229492

Token 1413: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8908587662735954e-05
    2. '(p' → logprob: -11.500019073486328
    3. '(' → logprob: -12.000019073486328
    4. '[' → logprob: -13.500019073486328
    5. 'p' → logprob: -14.500019073486328
    6. '2' → logprob: -15.250019073486328
    7. '```' → logprob: -15.750019073486328
    8. '[p' → logprob: -16.000019073486328
    9. '   ' → logprob: -17.250019073486328
    10. '``' → logprob: -17.750019073486328

Token 1414: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08908603340387344
    2. '1' → logprob: -2.4640860557556152
    3. '   ' → logprob: -9.589085578918457
    4. '0' → logprob: -10.339085578918457
    5. ' ' → logprob: -11.089085578918457
    6. '```' → logprob: -11.714085578918457
    7. '2' → logprob: -12.089085578918457
    8. ')[' → logprob: -12.214085578918457
    9. ' [' → logprob: -12.589085578918457
    10. '(' → logprob: -13.214085578918457

Token 1415: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.375001907348633
    3. '
' → logprob: -15.500001907348633
    4. ' ' → logprob: -15.750001907348633
    5. '0' → logprob: -16.000001907348633
    6. '(' → logprob: -16.125001907348633
    7. '```' → logprob: -16.500001907348633
    8. '   ' → logprob: -18.375001907348633
    9. '１' → logprob: -18.875001907348633
    10. '۱' → logprob: -18.937501907348633

Token 1416: ']+' (ID: 15344)
  Prédit: '+p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+p' → logprob: -0.2055647373199463
    2. ']+' → logprob: -1.7055647373199463
    3. '+' → logprob: -5.830564498901367
    4. '[' → logprob: -7.580564498901367
    5. '0' → logprob: -8.205564498901367
    6. '```' → logprob: -9.080564498901367
    7. '()+' → logprob: -9.455564498901367
    8. '[p' → logprob: -9.580564498901367
    9. '(p' → logprob: -10.330564498901367
    10. ')+' → logprob: -10.330564498901367

Token 1417: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.008953125216066837
    2. '1' → logprob: -5.008953094482422
    3. '(p' → logprob: -6.383953094482422
    4. '
' → logprob: -8.758953094482422
    5. 'mid' → logprob: -8.883953094482422
    6. ' p' → logprob: -9.633953094482422
    7. '0' → logprob: -9.758953094482422
    8. '[p' → logprob: -9.883953094482422
    9. '$p' → logprob: -11.133953094482422
    10. '<p' → logprob: -11.508953094482422

Token 1418: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.666993507067673e-05
    2. '[' → logprob: -10.250036239624023
    3. '```' → logprob: -14.500036239624023
    4. '(' → logprob: -14.875036239624023
    5. '2' → logprob: -15.750036239624023
    6. ' ' → logprob: -16.375036239624023
    7. '   ' → logprob: -17.250036239624023
    8. '{' → logprob: -17.375036239624023
    9. '#' → logprob: -18.125036239624023
    10. ')' → logprob: -18.625036239624023

Token 1419: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5762229561805725
    2. '1' → logprob: -0.8262229561805725
    3. '0' → logprob: -8.451223373413086
    4. '(' → logprob: -10.451223373413086
    5. '```' → logprob: -11.201223373413086
    6. '
' → logprob: -11.451223373413086
    7. ' ' → logprob: -12.701223373413086
    8. '   ' → logprob: -12.826223373413086
    9. '#' → logprob: -13.076223373413086
    10. '{' → logprob: -13.201223373413086

Token 1420: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.703443770878948e-06
    2. '(' → logprob: -12.125007629394531
    3. '0' → logprob: -13.625007629394531
    4. '[' → logprob: -14.500007629394531
    5. ' ' → logprob: -15.750007629394531
    6. '```' → logprob: -15.750007629394531
    7. '
' → logprob: -16.25000762939453
    8. '   ' → logprob: -17.50000762939453
    9. '(i' → logprob: -17.62500762939453
    10. '...' → logprob: -17.75000762939453

Token 1421: '])/' (ID: 93047)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10101073235273361
    2. ')/' → logprob: -2.351010799407959
    3. ']/' → logprob: -7.976010799407959
    4. '])/' → logprob: -8.1010103225708
    5. '0' → logprob: -9.1010103225708
    6. '/' → logprob: -11.4760103225708
    7. '+)/' → logprob: -11.7260103225708
    8. 'def' → logprob: -12.1010103225708
    9. '))/' → logprob: -12.4760103225708
    10. ')' → logprob: -12.8510103225708

Token 1422: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '1' → logprob: -18.5
    4. '```' → logprob: -18.625
    5. '   ' → logprob: -19.125
    6. '
' → logprob: -19.625
    7. ')' → logprob: -19.875
    8. '۲' → logprob: -21.375
    9. ')
' → logprob: -21.625
    10. '２' → logprob: -21.625

Token 1423: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06218569725751877
    2. ')' → logprob: -2.812185764312744
    3. '       ' → logprob: -9.062185287475586
    4. ')
' → logprob: -9.937185287475586
    5. '   ' → logprob: -10.187185287475586
    6. '):
' → logprob: -11.687185287475586
    7. ' )
' → logprob: -13.062185287475586
    8. ')`
' → logprob: -13.062185287475586
    9. ')

' → logprob: -13.437185287475586
    10. ')`' → logprob: -14.062185287475586

Token 1424: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00026181264547631145
    2. '<|end|>' → logprob: -8.625262260437012
    3. '   ' → logprob: -10.500262260437012
    4. ',' → logprob: -10.875262260437012
    5. '        
' → logprob: -11.125262260437012
    6. ' for' → logprob: -11.750262260437012
    7. ')' → logprob: -12.625262260437012
    8. '<|end|>' → logprob: -13.250262260437012
    9. '
' → logprob: -13.375262260437012
    10. 'for' → logprob: -13.750262260437012

Token 1425: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02536001056432724
    2. 'for' → logprob: -3.775360107421875
    3. 'if' → logprob: -8.025360107421875
    4. '   ' → logprob: -8.150360107421875
    5. ' for' → logprob: -8.400360107421875
    6. 'import' → logprob: -8.525360107421875
    7. 'from' → logprob: -8.525360107421875
    8. 'line' → logprob: -8.775360107421875
    9. 'axis' → logprob: -8.900360107421875
    10. 'a' → logprob: -9.400360107421875

Token 1426: ' axis' (ID: 16300)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8281149864196777
    2. 'if' → logprob: -1.5781149864196777
    3. 'p' → logprob: -1.9531149864196777
    4. '       ' → logprob: -1.9531149864196777
    5. '#' → logprob: -3.5781149864196777
    6. 'q' → logprob: -4.078114986419678
    7. 'a' → logprob: -4.828114986419678
    8. 'check' → logprob: -5.578114986419678
    9. 'axis' → logprob: -5.828114986419678
    10. 'b' → logprob: -6.328114986419678

Token 1427: ' candidate' (ID: 17098)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4046301543712616
    2. '=' → logprob: -1.529630184173584
    3. '       ' → logprob: -2.779630184173584
    4. 'vector' → logprob: -4.154630184173584
    5. '   ' → logprob: -5.154630184173584
    6. '=line' → logprob: -5.154630184173584
    7. '_vector' → logprob: -5.529630184173584
    8. 'points' → logprob: -5.654630184173584
    9. 'direction' → logprob: -6.154630184173584
    10. 'v' → logprob: -6.529630184173584

Token 1428: ' as' (ID: 472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4325786232948303
    2. '       ' → logprob: -1.1825785636901855
    3. '=' → logprob: -3.9325785636901855
    4. ' for' → logprob: -5.3075785636901855
    5. ',' → logprob: -5.9325785636901855
    6. '=line' → logprob: -6.0575785636901855
    7. ':' → logprob: -6.1825785636901855
    8. 'for' → logprob: -6.1825785636901855
    9. '=p' → logprob: -6.4325785636901855
    10. 'points' → logprob: -6.6825785636901855

Token 1429: ' perpendicular' (ID: 137754)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.26567843556404114
    2. 'p' → logprob: -1.5156784057617188
    3. ' (' → logprob: -5.390678405761719
    4. ' p' → logprob: -6.140678405761719
    5. 'mid' → logprob: -6.140678405761719
    6. 'polygon' → logprob: -6.765678405761719
    7. 'a' → logprob: -7.390678405761719
    8. '(' → logprob: -7.390678405761719
    9. 'line' → logprob: -8.015678405761719
    10. '(mid' → logprob: -8.265678405761719

Token 1430: ' bis' (ID: 7204)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.309197336435318
    2. 'to' → logprob: -2.684197425842285
    3. 'vec' → logprob: -2.684197425842285
    4. ' to' → logprob: -3.559197425842285
    5. '_vector' → logprob: -3.559197425842285
    6. 'direction' → logprob: -4.059197425842285
    7. 'v' → logprob: -4.309197425842285
    8. ' vector' → logprob: -4.684197425842285
    9. 'line' → logprob: -5.059197425842285
    10. 'dir' → logprob: -5.184197425842285

Token 1431: 'ector' (ID: 2286)
  Prédit: 'ector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ector' → logprob: -6.349075556499884e-05
    2. '(p' → logprob: -10.6250638961792
    3. '       ' → logprob: -11.0000638961792
    4. 'ect' → logprob: -11.7500638961792
    5. '   ' → logprob: -12.2500638961792
    6. '(' → logprob: -13.2500638961792
    7. 'ec' → logprob: -13.3750638961792
    8. '((' → logprob: -13.8750638961792
    9. '=' → logprob: -14.1250638961792
    10. 'ectors' → logprob: -14.1250638961792

Token 1432: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.061930928379297256
    2. 'dx' → logprob: -4.186931133270264
    3. 'vx' → logprob: -4.186931133270264
    4. ',' → logprob: -4.811931133270264
    5. 'v' → logprob: -5.061931133270264
    6. ' vx' → logprob: -5.311931133270264
    7. ',v' → logprob: -6.561931133270264
    8. '(dx' → logprob: -6.686931133270264
    9. 'vec' → logprob: -6.936931133270264
    10. ' dx' → logprob: -7.061931133270264

Token 1433: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06255485117435455
    2. '(p' → logprob: -2.8125548362731934
    3. ' p' → logprob: -8.187555313110352
    4. ' (' → logprob: -8.937555313110352
    5. '   ' → logprob: -9.937555313110352
    6. 'mid' → logprob: -10.062555313110352
    7. '(' → logprob: -10.437555313110352
    8. '#' → logprob: -10.937555313110352
    9. '((' → logprob: -11.437555313110352
    10. '(
' → logprob: -12.062555313110352

Token 1434: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005476721096783876
    2. 'p' → logprob: -5.380476951599121
    3. '(p' → logprob: -7.130476951599121
    4. ' p' → logprob: -10.630476951599121
    5. '(' → logprob: -11.755476951599121
    6. '```' → logprob: -12.255476951599121
    7. ' ' → logprob: -13.505476951599121
    8. ' (' → logprob: -13.505476951599121
    9. 'oints' → logprob: -13.630476951599121
    10. '(i' → logprob: -13.630476951599121

Token 1435: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16887937486171722
    2. ',p' → logprob: -2.793879270553589
    3. '       ' → logprob: -3.293879270553589
    4. ' and' → logprob: -3.418879270553589
    5. 'p' → logprob: -4.543879508972168
    6. 'and' → logprob: -5.168879508972168
    7. ' =' → logprob: -6.543879508972168
    8. ' ,' → logprob: -6.668879508972168
    9. ',v' → logprob: -6.668879508972168
    10. '(p' → logprob: -7.293879508972168

Token 1436: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.055057406425476074
    2. '1' → logprob: -2.9300575256347656
    3. '```' → logprob: -9.055057525634766
    4. 'p' → logprob: -10.305057525634766
    5. 'r' → logprob: -12.430057525634766
    6. '
' → logprob: -12.555057525634766
    7. 'oints' → logprob: -12.555057525634766
    8. 'i' → logprob: -12.930057525634766
    9. '   ' → logprob: -13.305057525634766
    10. '``' → logprob: -13.305057525634766

Token 1437: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027350971940904856
    2. ',' → logprob: -6.377735137939453
    3. '        
' → logprob: -8.377735137939453
    4. ':' → logprob: -8.502735137939453
    5. ',v' → logprob: -9.002735137939453
    6. '
' → logprob: -9.252735137939453
    7. '<|end|>' → logprob: -9.377735137939453
    8. ')' → logprob: -10.377735137939453
    9. 'v' → logprob: -10.752735137939453
    10. '#' → logprob: -10.752735137939453

Token 1438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024168188974726945
    2. ',' → logprob: -9.50024127960205
    3. 'v' → logprob: -10.25024127960205
    4. '   ' → logprob: -10.37524127960205
    5. '        
' → logprob: -10.75024127960205
    6. 'import' → logprob: -11.00024127960205
    7. '#' → logprob: -11.37524127960205
    8. '```' → logprob: -11.75024127960205
    9. '
' → logprob: -11.87524127960205
    10. 'dx' → logprob: -12.12524127960205

Token 1439: ' #' (ID: 1069)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.33164966106414795
    2. 'dx' → logprob: -1.331649661064148
    3. '       ' → logprob: -4.3316497802734375
    4. 'v' → logprob: -6.4566497802734375
    5. ' vx' → logprob: -7.4566497802734375
    6. '#' (adapté à ' #') → logprob: -7.4566497802734375
    7. 'ax' → logprob: -7.7066497802734375
    8. 'vec' → logprob: -7.8316497802734375
    9. '   ' → logprob: -8.206649780273438
    10. 'axis' → logprob: -8.331649780273438

Token 1440: ' direction' (ID: 9262)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.4779047966003418
    2. 'dx' → logprob: -0.9779047966003418
    3. '       ' → logprob: -6.477904796600342
    4. 'vec' → logprob: -6.602904796600342
    5. 'dir' → logprob: -8.2279052734375
    6. '   ' → logprob: -8.4779052734375
    7. 'v' → logprob: -8.8529052734375
    8. '#' → logprob: -8.9779052734375
    9. ' vx' → logprob: -10.4779052734375
    10. 'ax' → logprob: -10.6029052734375

Token 1441: ' vector' (ID: 9727)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0624912977218628
    2. 'x' → logprob: -1.1874912977218628
    3. '=' → logprob: -1.9374912977218628
    4. 'dx' → logprob: -2.5624914169311523
    5. 'vx' → logprob: -2.9374914169311523
    6. '_x' → logprob: -4.062491416931152
    7. '_dx' → logprob: -4.062491416931152
    8. 'vector' → logprob: -4.437491416931152
    9. 'v' → logprob: -5.062491416931152
    10. '   ' → logprob: -5.187491416931152

Token 1442: ' perpendicular' (ID: 137754)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.9267138838768005
    2. ' =' → logprob: -1.1767139434814453
    3. 'vx' → logprob: -1.9267139434814453
    4. '=' → logprob: -3.1767139434814453
    5. ' vx' → logprob: -3.5517139434814453
    6. ' dx' → logprob: -3.6767139434814453
    7. 'v' → logprob: -4.176713943481445
    8. 'x' → logprob: -4.551713943481445
    9. '   ' → logprob: -4.801713943481445
    10. '(dx' → logprob: -5.676713943481445

Token 1443: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2001750469207764
    2. 'to' → logprob: -1.2001750469207764
    3. ' =' → logprob: -1.4501750469207764
    4. ' to' → logprob: -1.9501750469207764
    5. '   ' → logprob: -5.5751752853393555
    6. ',' → logprob: -5.5751752853393555
    7. 'vx' → logprob: -5.8251752853393555
    8. '(v' → logprob: -6.5751752853393555
    9. ' vx' → logprob: -6.7001752853393555
    10. ',v' → logprob: -6.9501752853393555

Token 1444: ' p' (ID: 275)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.17463995516300201
    2. '(b' → logprob: -2.299639940261841
    3. '(v' → logprob: -3.299639940261841
    4. ' (' → logprob: -4.67464017868042
    5. '((' → logprob: -4.92464017868042
    6. 'p' → logprob: -5.67464017868042
    7. '(' → logprob: -6.54964017868042
    8. 'vx' → logprob: -7.54964017868042
    9. 'b' → logprob: -8.174639701843262
    10. '(px' → logprob: -8.174639701843262

Token 1445: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7788791656494141
    2. '(p' → logprob: -0.9038791656494141
    3. '2' → logprob: -2.653879165649414
    4. '(' → logprob: -3.153879165649414
    5. 'p' → logprob: -4.903879165649414
    6. '   ' → logprob: -5.403879165649414
    7. 'x' → logprob: -6.153879165649414
    8. 'v' → logprob: -6.903879165649414
    9. '(v' → logprob: -7.028879165649414
    10. '`' → logprob: -7.528879165649414

Token 1446: '-p' (ID: 3161)
  Prédit: '-p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-p' → logprob: -1.0505890846252441
    2. '[' → logprob: -1.8005890846252441
    3. 'p' → logprob: -1.9255890846252441
    4. ',' → logprob: -2.300589084625244
    5. '-' → logprob: -2.675589084625244
    6. ':' → logprob: -3.300589084625244
    7. ' -' → logprob: -3.550589084625244
    8. ' =' → logprob: -3.925589084625244
    9. ',p' → logprob: -4.425589084625244
    10. '(p' → logprob: -4.925589084625244

Token 1447: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3220140337944031
    2. '2' → logprob: -1.3220140933990479
    3. '0' → logprob: -4.822013854980469
    4. 'oints' → logprob: -7.947013854980469
    5. '```' → logprob: -9.322013854980469
    6. '#' → logprob: -9.822013854980469
    7. 'oint' → logprob: -9.947013854980469
    8. '[' → logprob: -10.572013854980469
    9. 'p' → logprob: -10.947013854980469
    10. '`' → logprob: -11.947013854980469

Token 1448: '
' (ID: 198)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.14136844873428345
    2. 'vx' → logprob: -2.3913683891296387
    3. '       ' → logprob: -4.516368389129639
    4. ' dx' → logprob: -4.641368389129639
    5. '   ' → logprob: -5.266368389129639
    6. ' vx' → logprob: -5.641368389129639
    7. '(dx' → logprob: -6.266368389129639
    8. 'v' → logprob: -6.391368389129639
    9. '```' → logprob: -6.516368389129639
    10. 'd' → logprob: -6.766368389129639

Token 1449: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5094228982925415
    2. 'dx' → logprob: -1.0094228982925415
    3. 'x' → logprob: -5.009422779083252
    4. 'v' → logprob: -5.009422779083252
    5. 'vx' → logprob: -5.009422779083252
    6. ' dx' → logprob: -5.509422779083252
    7. 'd' → logprob: -5.634422779083252
    8. '(dx' → logprob: -6.009422779083252
    9. ' vx' → logprob: -7.259422779083252
    10. 'tx' → logprob: -7.384422779083252

Token 1450: ' vx' (ID: 93588)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.23444925248622894
    2. 'vx' (adapté à ' vx') → logprob: -1.6094492673873901
    3. 'dir' → logprob: -5.98444938659668
    4. '   ' → logprob: -6.10944938659668
    5. 'ax' → logprob: -6.48444938659668
    6. 'v' → logprob: -6.98444938659668
    7. 'axis' → logprob: -7.60944938659668
    8. ' dx' → logprob: -7.85944938659668
    9. ' vx' → logprob: -7.98444938659668
    10. 'd' → logprob: -8.48444938659668

Token 1451: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2838478088378906
    2. ' =' → logprob: -1.4088478088378906
    3. ',' → logprob: -6.033847808837891
    4. '=p' → logprob: -8.40884780883789
    5. ',p' → logprob: -11.15884780883789
    6. '=v' → logprob: -11.15884780883789
    7. ',y' → logprob: -11.65884780883789
    8. '=(' → logprob: -11.65884780883789
    9. ',v' → logprob: -12.03384780883789
    10. '=
' → logprob: -12.40884780883789

Token 1452: ' p' (ID: 275)
  Prédit: '-('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-(' → logprob: -0.2540116310119629
    2. 'p' → logprob: -1.504011631011963
    3. '-p' → logprob: -6.629011631011963
    4. '(p' → logprob: -8.254011154174805
    5. '-' → logprob: -8.504011154174805
    6. ' p' → logprob: -8.879011154174805
    7. ' -(' → logprob: -9.504011154174805
    8. '(-(' → logprob: -10.129011154174805
    9. '   ' → logprob: -10.754011154174805
    10. '	p' → logprob: -13.129011154174805

Token 1453: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03468484804034233
    2. '(p' → logprob: -3.909684896469116
    3. 'p' → logprob: -5.284684658050537
    4. '1' → logprob: -5.409684658050537
    5. '-(' → logprob: -6.784684658050537
    6. '(' → logprob: -6.909684658050537
    7. '[p' → logprob: -7.284684658050537
    8. '-p' → logprob: -7.284684658050537
    9. '[' → logprob: -8.159685134887695
    10. '=p' → logprob: -8.784685134887695

Token 1454: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.47495681833243e-05
    2. '```' → logprob: -11.750024795532227
    3. '0' → logprob: -12.250024795532227
    4. '   ' → logprob: -12.750024795532227
    5. '[
' → logprob: -13.000024795532227
    6. '#' → logprob: -13.625024795532227
    7. 'import' → logprob: -13.750024795532227
    8. 'y' → logprob: -14.250024795532227
    9. ' ' → logprob: -14.375024795532227
    10. '1' → logprob: -14.500024795532227

Token 1455: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005587508203461766
    2. '1' → logprob: -7.500558853149414
    3. '[' → logprob: -12.500558853149414
    4. '```' → logprob: -13.375558853149414
    5. '``' → logprob: -16.125558853149414
    6. ' ' → logprob: -16.250558853149414
    7. '
' → logprob: -16.500558853149414
    8. '-' → logprob: -16.625558853149414
    9. 'p' → logprob: -16.875558853149414
    10. '   ' → logprob: -17.250558853149414

Token 1456: ']-' (ID: 27107)
  Prédit: '-p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-p' → logprob: -0.5793142914772034
    2. ' -' → logprob: -1.4543142318725586
    3. '-' → logprob: -1.5793142318725586
    4. '-
' → logprob: -10.829314231872559
    5. '```' → logprob: -12.329314231872559
    6. 'p' → logprob: -12.454314231872559
    7. '[' → logprob: -12.829314231872559
    8. '()-' → logprob: -13.204314231872559
    9. '-v' → logprob: -13.329314231872559
    10. ' -
' → logprob: -13.704314231872559

Token 1457: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.5048530030981055e-06
    2. ' p' → logprob: -13.500001907348633
    3. '```' → logprob: -18.250001907348633
    4. '	p' → logprob: -19.750001907348633
    5. '(p' → logprob: -20.375001907348633
    6. '<p' → logprob: -21.375001907348633
    7. 'v' → logprob: -21.625001907348633
    8. '   ' → logprob: -21.750001907348633
    9. ')p' → logprob: -22.375001907348633
    10. '<|end|>' → logprob: -22.500001907348633

Token 1458: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036089823115617037
    2. 'p' → logprob: -5.6286091804504395
    3. 'i' → logprob: -12.378608703613281
    4. '```' → logprob: -13.503608703613281
    5. ' p' → logprob: -13.628608703613281
    6. 'v' → logprob: -14.753608703613281
    7. '`' → logprob: -14.753608703613281
    8. 'x' → logprob: -14.878608703613281
    9. '0' → logprob: -15.628608703613281
    10. 'q' → logprob: -15.753608703613281

Token 1459: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001132593723013997
    2. '1' → logprob: -7.126132488250732
    3. '```' → logprob: -8.50113296508789
    4. '0' → logprob: -9.12613296508789
    5. ',' → logprob: -12.25113296508789
    6. '#' → logprob: -12.87613296508789
    7. 'y' → logprob: -13.12613296508789
    8. '
' → logprob: -13.25113296508789
    9. 'v' → logprob: -13.37613296508789
    10. '[
' → logprob: -14.00113296508789

Token 1460: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -13.625000953674316
    3. '```' → logprob: -17.875001907348633
    4. ' ' → logprob: -18.000001907348633
    5. 'p' → logprob: -19.375001907348633
    6. '۰' → logprob: -19.500001907348633
    7. 'i' → logprob: -20.375001907348633
    8. 'x' → logprob: -20.375001907348633
    9. '   ' → logprob: -21.625001907348633
    10. '1' → logprob: -21.625001907348633

Token 1461: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028602764010429382
    2. ',y' → logprob: -3.9036028385162354
    3. ')
' → logprob: -5.778602600097656
    4. '       ' → logprob: -6.528602600097656
    5. ',
' → logprob: -6.903602600097656
    6. '
' → logprob: -7.028602600097656
    7. ',v' → logprob: -7.528602600097656
    8. 'y' → logprob: -8.278602600097656
    9. '```' → logprob: -8.653602600097656
    10. 'v' → logprob: -9.278602600097656

Token 1462: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29664134979248047
    2. 'vy' → logprob: -1.7966413497924805
    3. 'v' → logprob: -3.5466413497924805
    4. ' vy' → logprob: -4.4216413497924805
    5. '```' → logprob: -4.7966413497924805
    6. '	v' → logprob: -5.0466413497924805
    7. ',v' → logprob: -5.0466413497924805
    8. '   ' → logprob: -5.1716413497924805
    9. ',' → logprob: -5.1716413497924805
    10. ' vx' → logprob: -5.5466413497924805

Token 1463: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' (adapté à ' vy') → logprob: -0.07926340401172638
    2. ' vy' → logprob: -2.57926344871521
    3. 'vx' → logprob: -8.454263687133789
    4. ' vx' → logprob: -8.829263687133789
    5. '       ' → logprob: -12.579263687133789
    6. 'v' → logprob: -12.704263687133789
    7. '	v' → logprob: -12.954263687133789
    8. '   ' → logprob: -13.204263687133789
    9. ' v' → logprob: -13.704263687133789
    10. ' ' → logprob: -14.329263687133789

Token 1464: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.633385181427002
    2. '=' → logprob: -0.758385181427002
    3. '=p' → logprob: -7.633385181427002
    4. '=v' → logprob: -8.508384704589844
    5. ',' → logprob: -10.883384704589844
    6. ')' → logprob: -11.133384704589844
    7. 'v' → logprob: -11.258384704589844
    8. '<|end|>' → logprob: -11.883384704589844
    9. '='' → logprob: -12.133384704589844
    10. ' p' → logprob: -12.633384704589844

Token 1465: ' p' (ID: 275)
  Prédit: '-('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-(' → logprob: -0.6778650879859924
    2. 'p' → logprob: -0.8028650879859924
    3. '-p' → logprob: -3.1778650283813477
    4. ' p' → logprob: -6.677865028381348
    5. '-' → logprob: -7.177865028381348
    6. ' -(' → logprob: -8.302865028381348
    7. '-v' → logprob: -9.427865028381348
    8. '(-(' → logprob: -9.677865028381348
    9. ' -' → logprob: -9.927865028381348
    10. '   ' → logprob: -10.302865028381348

Token 1466: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001645644661039114
    2. '1' → logprob: -8.875164985656738
    3. 'p' → logprob: -11.375164985656738
    4. '0' → logprob: -11.750164985656738
    5. '```' → logprob: -12.875164985656738
    6. '-' → logprob: -14.500164985656738
    7. 'vy' → logprob: -14.625164985656738
    8. 'v' → logprob: -15.000164985656738
    9. '(' → logprob: -15.250164985656738
    10. '[' → logprob: -15.500164985656738

Token 1467: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013576137134805322
    2. '=' → logprob: -7.251357555389404
    3. '-' → logprob: -8.376358032226562
    4. '1' → logprob: -8.376358032226562
    5. '```' → logprob: -9.126358032226562
    6. '0' → logprob: -10.126358032226562
    7. '   ' → logprob: -11.876358032226562
    8. '#' → logprob: -11.876358032226562
    9. '[
' → logprob: -12.001358032226562
    10. '*' → logprob: -13.001358032226562

Token 1468: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005588700296357274
    2. '0' → logprob: -7.500558853149414
    3. 'p' → logprob: -12.875558853149414
    4. '```' → logprob: -13.250558853149414
    5. '[' → logprob: -14.000558853149414
    6. '-' → logprob: -16.125558853149414
    7. '(' → logprob: -16.250558853149414
    8. '   ' → logprob: -16.500558853149414
    9. ' ' → logprob: -16.500558853149414
    10. 'y' → logprob: -16.625558853149414

Token 1469: ']-' (ID: 27107)
  Prédit: '=-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=-' → logprob: -0.7939538955688477
    2. '*(-' → logprob: -1.6689538955688477
    3. ',' → logprob: -2.5439538955688477
    4. '=' → logprob: -2.6689538955688477
    5. '   ' → logprob: -2.9189538955688477
    6. '*' → logprob: -3.5439538955688477
    7. '*-' → logprob: -3.9189538955688477
    8. '=(-' → logprob: -4.043953895568848
    9. '```' → logprob: -4.293953895568848
    10. ',v' → logprob: -4.293953895568848

Token 1470: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.465036105713807e-06
    2. ' p' → logprob: -12.375007629394531
    3. '```' → logprob: -13.375007629394531
    4. '-p' → logprob: -13.875007629394531
    5. 'v' → logprob: -15.250007629394531
    6. '0' → logprob: -16.37500762939453
    7. ')p' → logprob: -16.75000762939453
    8. '   ' → logprob: -16.75000762939453
    9. '	p' → logprob: -17.12500762939453
    10. '(p' → logprob: -17.50000762939453

Token 1471: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003078142472077161
    2. '0' → logprob: -8.2503080368042
    3. '-' → logprob: -10.2503080368042
    4. '```' → logprob: -12.0003080368042
    5. '-p' → logprob: -13.2503080368042
    6. 'p' → logprob: -13.5003080368042
    7. 'y' → logprob: -15.0003080368042
    8. '[' → logprob: -15.3753080368042
    9. '-y' → logprob: -15.5003080368042
    10. '...' → logprob: -16.000307083129883

Token 1472: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13893014192581177
    2. '-' → logprob: -2.388930082321167
    3. '[' → logprob: -3.888930082321167
    4. '0' → logprob: -4.138930320739746
    5. '   ' → logprob: -7.763930320739746
    6. '```' → logprob: -7.888930320739746
    7. '(' → logprob: -8.388930320739746
    8. ' -' → logprob: -9.138930320739746
    9. '#' → logprob: -9.513930320739746
    10. '[
' → logprob: -9.638930320739746

Token 1473: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.960946772480384e-05
    2. '1' → logprob: -9.250099182128906
    3. 'i' → logprob: -13.500099182128906
    4. '```' → logprob: -13.875099182128906
    5. '-' → logprob: -14.375099182128906
    6. '   ' → logprob: -15.375099182128906
    7. '[' → logprob: -15.625099182128906
    8. ' ' → logprob: -16.375099182128906
    9. '``' → logprob: -16.625099182128906
    10. '۰' → logprob: -17.250099182128906

Token 1474: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9096890091896057
    2. ')' → logprob: -1.159688949584961
    3. '<|end|>' → logprob: -2.284688949584961
    4. '       ' → logprob: -2.534688949584961
    5. ')
' → logprob: -2.659688949584961
    6. ',
' → logprob: -4.784688949584961
    7. '<|end|>' → logprob: -5.034688949584961
    8. '```' → logprob: -6.034688949584961
    9. '   ' → logprob: -6.284688949584961
    10. ']
' → logprob: -6.534688949584961

Token 1475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05705226585268974
    2. 'dx' → logprob: -3.6820523738861084
    3. '   ' → logprob: -3.8070523738861084
    4. ' dx' → logprob: -5.557052135467529
    5. ' for' → logprob: -6.932052135467529
    6. 'for' → logprob: -7.057052135467529
    7. '```' → logprob: -7.182052135467529
    8. 'import' → logprob: -7.807052135467529
    9. 'ax' → logprob: -8.432052612304688
    10. 'tx' → logprob: -8.557052612304688

Token 1476: ' #' (ID: 1069)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.26013901829719543
    2. '       ' → logprob: -1.760138988494873
    3. 'for' → logprob: -3.885138988494873
    4. 'ax' → logprob: -4.010138988494873
    5. 'ux' → logprob: -4.635138988494873
    6. 'axis' → logprob: -6.885138988494873
    7. 'nx' → logprob: -7.010138988494873
    8. 'px' → logprob: -7.135138988494873
    9. '```' → logprob: -7.135138988494873
    10. 'dir' → logprob: -7.260138988494873

Token 1477: ' axis' (ID: 16300)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.21684394776821136
    2. 'axis' → logprob: -1.9668439626693726
    3. 'a' → logprob: -3.091843843460083
    4. 'for' → logprob: -5.841844081878662
    5. 'ay' → logprob: -6.216844081878662
    6. 'dx' → logprob: -6.841844081878662
    7. 'nx' → logprob: -7.716844081878662
    8. '#' → logprob: -7.841844081878662
    9. 'ux' → logprob: -7.966844081878662
    10. 'bx' → logprob: -8.216843605041504

Token 1478: ' line' (ID: 2543)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7263198494911194
    2. '=' → logprob: -0.8513198494911194
    3. ' =' → logprob: -2.8513197898864746
    4. 'ax' → logprob: -4.351319789886475
    5. '_ax' → logprob: -5.351319789886475
    6. '_a' → logprob: -5.851319789886475
    7. '_point' → logprob: -6.101319789886475
    8. 'point' → logprob: -6.601319789886475
    9. 'x' → logprob: -6.851319789886475
    10. '=ax' → logprob: -6.851319789886475

Token 1479: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8082032799720764
    2. 'a' → logprob: -1.1832032203674316
    3. '=' → logprob: -1.5582032203674316
    4. '       ' → logprob: -3.6832032203674316
    5. '=a' → logprob: -5.683203220367432
    6. 'x' → logprob: -5.933203220367432
    7. '```' → logprob: -6.433203220367432
    8. '   ' → logprob: -7.558203220367432
    9. '_a' → logprob: -7.683203220367432
    10. '#' → logprob: -7.933203220367432

Token 1480: ' through' (ID: 1819)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014129536226391792
    2. 'ax' → logprob: -5.264129638671875
    3. 'axis' → logprob: -5.514129638671875
    4. ' a' → logprob: -7.014129638671875
    5. 'p' → logprob: -7.264129638671875
    6. 'from' → logprob: -7.389129638671875
    7. '(a' → logprob: -7.514129638671875
    8. '   ' → logprob: -7.764129638671875
    9. 'mid' → logprob: -7.889129638671875
    10. 'point' → logprob: -8.389129638671875

Token 1481: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.001053530490025878
    2. '(mid' → logprob: -7.126053333282471
    3. ' mid' → logprob: -8.876053810119629
    4. '(' → logprob: -9.501053810119629
    5. '   ' → logprob: -11.126053810119629
    6. '(
' → logprob: -11.626053810119629
    7. ' (' → logprob: -12.501053810119629
    8. '```' → logprob: -13.376053810119629
    9. '
' → logprob: -13.751053810119629
    10. '       ' → logprob: -14.126053810119629

Token 1482: ' with' (ID: 483)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07500068098306656
    2. 'point' → logprob: -2.950000762939453
    3. ' =' → logprob: -4.200000762939453
    4. ' ,' → logprob: -6.325000762939453
    5. ' +' → logprob: -7.575000762939453
    6. 'oint' → logprob: -8.075000762939453
    7. ',
' → logprob: -8.200000762939453
    8. '
' → logprob: -8.200000762939453
    9. '(point' → logprob: -8.450000762939453
    10. '=' → logprob: -8.450000762939453

Token 1483: ' normal' (ID: 6078)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.005894903093576431
    2. 'vector' → logprob: -6.130895137786865
    3. 'dx' → logprob: -6.630895137786865
    4. ' direction' → logprob: -6.630895137786865
    5. 'vx' → logprob: -7.130895137786865
    6. 'dire' → logprob: -8.880894660949707
    7. 'dir' → logprob: -10.630894660949707
    8. '-direction' → logprob: -10.630894660949707
    9. '-v' → logprob: -10.630894660949707
    10. '(-' → logprob: -10.630894660949707

Token 1484: ' vector' (ID: 9727)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.226248636841774
    2. 'vector' → logprob: -2.3512487411499023
    3. '(' → logprob: -3.6012487411499023
    4. '=(' → logprob: -3.9762487411499023
    5. 'vx' → logprob: -4.351248741149902
    6. '(nx' → logprob: -4.351248741149902
    7. ' =' → logprob: -4.476248741149902
    8. '=' → logprob: -4.976248741149902
    9. ' (' → logprob: -5.601248741149902
    10. '_vector' → logprob: -5.851248741149902

Token 1485: ' (' (ID: 350)
  Prédit: '(nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.5256650447845459
    2. '(-' → logprob: -1.400665044784546
    3. '(' → logprob: -2.900665044784546
    4. '(v' → logprob: -3.150665044784546
    5. '   ' → logprob: -4.525665283203125
    6. 'nx' → logprob: -4.650665283203125
    7. 'vx' → logprob: -4.775665283203125
    8. ' (' → logprob: -5.025665283203125
    9. '(n' → logprob: -5.150665283203125
    10. ' =' → logprob: -5.275665283203125

Token 1486: 'vx' (ID: 96015)
  Prédit: '-v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-v' → logprob: -0.01999553106725216
    2. 'vy' → logprob: -4.89499568939209
    3. '(-' → logprob: -5.26999568939209
    4. ' -' → logprob: -5.51999568939209
    5. '-' → logprob: -5.89499568939209
    6. 'vx' → logprob: -9.39499568939209
    7. ' vy' → logprob: -9.64499568939209
    8. '```' → logprob: -10.14499568939209
    9. '[-' → logprob: -10.51999568939209
    10. 'v' → logprob: -11.01999568939209

Token 1487: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029534433037042618
    2. ',-' → logprob: -3.779534339904785
    3. ',y' → logprob: -5.279534339904785
    4. '```' → logprob: -7.654534339904785
    5. ',v' → logprob: -7.904534339904785
    6. ',
' → logprob: -9.154534339904785
    7. 'vy' → logprob: -9.154534339904785
    8. ' ,' → logprob: -9.904534339904785
    9. '=-' → logprob: -11.404534339904785
    10. '0' → logprob: -11.529534339904785

Token 1488: 'vy' (ID: 16670)
  Prédit: 'vy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.02953130379319191
    2. '-v' → logprob: -4.404531478881836
    3. '-' → logprob: -5.029531478881836
    4. ' -' → logprob: -5.279531478881836
    5. ' vy' → logprob: -5.279531478881836
    6. '```' → logprob: -9.904531478881836
    7. ' ' → logprob: -11.404531478881836
    8. '
' → logprob: -11.904531478881836
    9. '(-' → logprob: -11.904531478881836
    10. 'Vy' → logprob: -11.904531478881836

Token 1489: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03601827099919319
    2. ')
' → logprob: -3.4110183715820312
    3. ',' → logprob: -6.286018371582031
    4. '```' → logprob: -8.661018371582031
    5. '),' → logprob: -9.911018371582031
    6. '):
' → logprob: -10.411018371582031
    7. '[::-' → logprob: -10.536018371582031
    8. '   ' → logprob: -10.661018371582031
    9. '``' → logprob: -10.786018371582031
    10. ')

' → logprob: -10.911018371582031

Token 1490: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013834332639817148
    2. ',' → logprob: -10.125138282775879
    3. '   ' → logprob: -10.250138282775879
    4. '<|end|>' → logprob: -10.500138282775879
    5. '        
' → logprob: -10.875138282775879
    6. ' lines' → logprob: -12.750138282775879
    7. '```' → logprob: -13.500138282775879
    8. ' line' → logprob: -13.500138282775879
    9. ' for' → logprob: -13.625138282775879
    10. ':' → logprob: -13.625138282775879

Token 1491: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22438514232635498
    2. 'for' → logprob: -2.3493852615356445
    3. ' for' → logprob: -2.7243852615356445
    4. '   ' → logprob: -3.9743852615356445
    5. 'axis' → logprob: -5.5993852615356445
    6. 'dx' → logprob: -5.5993852615356445
    7. 'a' → logprob: -6.0993852615356445
    8. 'line' → logprob: -6.0993852615356445
    9. ' axis' → logprob: -6.8493852615356445
    10. ' line' → logprob: -6.9743852615356445

Token 1492: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0389240980148315
    2. 'for' → logprob: -1.0389240980148315
    3. 'a' → logprob: -2.163924217224121
    4. 'axis' → logprob: -2.663924217224121
    5. '   ' → logprob: -3.163924217224121
    6. 'ax' → logprob: -4.038924217224121
    7. 'dx' → logprob: -4.288924217224121
    8. 'if' → logprob: -4.538924217224121
    9. 'normal' → logprob: -4.788924217224121
    10. 'line' → logprob: -5.413924217224121

Token 1493: ' line' (ID: 2543)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5528900623321533
    2. 'for' → logprob: -1.8028900623321533
    3. 'axis' → logprob: -2.4278900623321533
    4. ' for' → logprob: -3.3028900623321533
    5. ' a' → logprob: -3.5528900623321533
    6. 'ax' → logprob: -3.5528900623321533
    7. ' axis' → logprob: -3.6778900623321533
    8. '   ' → logprob: -4.302889823913574
    9. '       ' → logprob: -4.552889823913574
    10. 'normal' → logprob: -4.927889823913574

Token 1494: ' through' (ID: 1819)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4255487024784088
    2. ' =' → logprob: -1.3005486726760864
    3. 'a' → logprob: -3.300548791885376
    4. 'p' → logprob: -4.800548553466797
    5. '_point' → logprob: -5.050548553466797
    6. '_p' → logprob: -5.925548553466797
    7. 'point' → logprob: -6.175548553466797
    8. '_direction' → logprob: -6.425548553466797
    9. '=a' → logprob: -6.675548553466797
    10. '   ' → logprob: -6.675548553466797

Token 1495: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -7.24310302757658e-05
    2. ' mid' → logprob: -9.625072479248047
    3. '(mid' → logprob: -12.500072479248047
    4. '
' → logprob: -13.500072479248047
    5. '```' → logprob: -14.875072479248047
    6. '   ' → logprob: -15.000072479248047
    7. '#' → logprob: -15.500072479248047
    8. '(' → logprob: -15.875072479248047
    9. 'midt' → logprob: -17.250072479248047
    10. 'a' → logprob: -17.375072479248047

Token 1496: ' and' (ID: 326)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -1.1404643058776855
    2. 'with' → logprob: -1.1404643058776855
    3. 'and' → logprob: -1.6404643058776855
    4. ',' → logprob: -2.3904643058776855
    5. ' and' → logprob: -2.7654643058776855
    6. 'point' → logprob: -5.8904643058776855
    7. '```' → logprob: -6.3904643058776855
    8. ' in' → logprob: -6.6404643058776855
    9. '#' → logprob: -6.8904643058776855
    10. 'in' → logprob: -7.1404643058776855

Token 1497: ' direction' (ID: 9262)
  Prédit: '(mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mid' → logprob: -0.5453839302062988
    2. '(v' → logprob: -0.9203839302062988
    3. ' (' → logprob: -4.295383930206299
    4. 'mid' → logprob: -5.795383930206299
    5. '(p' → logprob: -6.795383930206299
    6. '(a' → logprob: -7.045383930206299
    7. '(x' → logprob: -7.170383930206299
    8. '(m' → logprob: -7.545383930206299
    9. '(px' → logprob: -7.920383930206299
    10. '(mx' → logprob: -8.04538345336914

Token 1498: ' perpendicular' (ID: 137754)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.6925111413002014
    2. ' (' → logprob: -2.5675110816955566
    3. 'vector' → logprob: -2.5675110816955566
    4. '(' → logprob: -2.9425110816955566
    5. 'vx' → logprob: -3.0675110816955566
    6. ' (-' → logprob: -3.1925110816955566
    7. ' vx' → logprob: -3.3175110816955566
    8. ' =' → logprob: -3.4425110816955566
    9. ' vector' → logprob: -3.9425110816955566
    10. '(v' → logprob: -4.067511081695557

Token 1499: ' (-' (ID: 21382)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2898600399494171
    2. '(-' → logprob: -2.0398600101470947
    3. ' to' → logprob: -2.7898600101470947
    4. '(v' → logprob: -3.4148600101470947
    5. '       ' → logprob: -5.539860248565674
    6. 'vx' → logprob: -5.539860248565674
    7. '(' → logprob: -5.664860248565674
    8. ' (-' → logprob: -6.039860248565674
    9. '_to' → logprob: -6.164860248565674
    10. '   ' → logprob: -6.289860248565674

Token 1500: 'vy' (ID: 16670)
  Prédit: 'vy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -4.246537173457909e-06
    2. ' vy' → logprob: -12.500003814697266
    3. '```' → logprob: -15.250003814697266
    4. '   ' → logprob: -16.750003814697266
    5. 'vx' → logprob: -17.000003814697266
    6. '-v' → logprob: -17.875003814697266
    7. 'yv' → logprob: -17.875003814697266
    8. '(v' → logprob: -17.875003814697266
    9. 'uy' → logprob: -18.125003814697266
    10. '
' → logprob: -18.625003814697266

Token 1501: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015186689561232924
    2. ',v' → logprob: -6.501518726348877
    3. ',y' → logprob: -11.751518249511719
    4. ' ,' → logprob: -12.376518249511719
    5. ',-' → logprob: -13.126518249511719
    6. ',
' → logprob: -13.876518249511719
    7. '```' → logprob: -14.501518249511719
    8. ',p' → logprob: -14.876518249511719
    9. '`,' → logprob: -16.12651824951172
    10. ',+' → logprob: -16.25151824951172

Token 1502: ' vx' (ID: 93588)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.00673218397423625
    2. ' vx' → logprob: -5.006731986999512
    3. '-v' → logprob: -11.006731986999512
    4. '/v' → logprob: -16.256732940673828
    5. ' -' → logprob: -16.881732940673828
    6. '-' → logprob: -16.881732940673828
    7. 'vy' → logprob: -17.006732940673828
    8. ' ' → logprob: -17.631732940673828
    9. '
' → logprob: -17.756732940673828
    10. 'wx' → logprob: -18.631732940673828

Token 1503: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018499087542295456
    2. ')
' → logprob: -4.01849889755249
    3. '):
' → logprob: -8.893499374389648
    4. '),' → logprob: -9.768499374389648
    5. '):' → logprob: -10.143499374389648
    6. '       ' → logprob: -10.268499374389648
    7. ').' → logprob: -10.768499374389648
    8. '   ' → logprob: -11.018499374389648
    9. ')

' → logprob: -11.268499374389648
    10. '))' → logprob: -11.768499374389648

Token 1504: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000940642727073282
    2. '<|end|>' → logprob: -7.875940799713135
    3. '   ' → logprob: -8.250940322875977
    4. '        
' → logprob: -9.000940322875977
    5. ',' → logprob: -9.500940322875977
    6. '
' → logprob: -10.125940322875977
    7. '<|end|>' → logprob: -11.375940322875977
    8. ' for' → logprob: -11.750940322875977
    9. ')' → logprob: -12.250940322875977
    10. '           ' → logprob: -12.250940322875977

Token 1505: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0756494402885437
    2. 'for' → logprob: -2.8256494998931885
    3. 'dx' → logprob: -5.075649261474609
    4. '   ' → logprob: -5.450649261474609
    5. 'direction' → logprob: -7.325649261474609
    6. 'dir' → logprob: -7.450649261474609
    7. 'line' → logprob: -7.700649261474609
    8. 'from' → logprob: -7.950649261474609
    9. 'd' → logprob: -8.32564926147461
    10. ' for' → logprob: -8.82564926147461

Token 1506: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31357714533805847
    2. ' =' → logprob: -1.3135771751403809
    3. ',' → logprob: -8.688576698303223
    4. '=(' → logprob: -9.438576698303223
    5. '=
' → logprob: -10.813576698303223
    6. '=b' → logprob: -11.313576698303223
    7. ',b' → logprob: -11.813576698303223
    8. 'b' → logprob: -12.188576698303223
    9. '=a' → logprob: -12.188576698303223
    10. '=line' → logprob: -12.313576698303223

Token 1507: ' (' (ID: 350)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.9103688597679138
    2. '(mid' → logprob: -1.1603689193725586
    3. '(' → logprob: -1.2853689193725586
    4. '(p' → logprob: -5.160368919372559
    5. '(m' → logprob: -7.535368919372559
    6. ' (' → logprob: -7.910368919372559
    7. '(x' → logprob: -8.035368919372559
    8. '((' → logprob: -8.535368919372559
    9. '   ' → logprob: -8.785368919372559
    10. ' mid' → logprob: -9.160368919372559

Token 1508: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0006540587637573481
    2. '(mid' → logprob: -7.500654220581055
    3. '   ' → logprob: -9.625654220581055
    4. ' mid' → logprob: -11.625654220581055
    5. 'round' → logprob: -12.500654220581055
    6. 'min' → logprob: -12.750654220581055
    7. '[mid' → logprob: -13.125654220581055
    8. '(p' → logprob: -13.125654220581055
    9. '0' → logprob: -13.375654220581055
    10. '
' → logprob: -13.750654220581055

Token 1509: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000909913913346827
    2. ')' → logprob: -7.875909805297852
    3. 'x' → logprob: -8.000909805297852
    4. ',' → logprob: -9.000909805297852
    5. ')
' → logprob: -10.500909805297852
    6. '
' → logprob: -11.375909805297852
    7. 'def' → logprob: -11.875909805297852
    8. '0' → logprob: -12.000909805297852
    9. '#' → logprob: -12.750909805297852
    10. '[
' → logprob: -12.750909805297852

Token 1510: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.500000953674316
    3. '[' → logprob: -15.250000953674316
    4. '
' → logprob: -15.875000953674316
    5. '```' → logprob: -16.875001907348633
    6. '-' → logprob: -17.500001907348633
    7. '   ' → logprob: -17.750001907348633
    8. '#' → logprob: -18.625001907348633
    9. 'x' → logprob: -18.875001907348633
    10. '1' → logprob: -19.125001907348633

Token 1511: ']-' (ID: 27107)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018641138449311256
    2. '-' → logprob: -5.143640995025635
    3. ',m' → logprob: -5.518640995025635
    4. ' -' → logprob: -5.768640995025635
    5. '-mid' → logprob: -6.268640995025635
    6. 'mid' → logprob: -6.893640995025635
    7. '+' → logprob: -6.893640995025635
    8. ' ,' → logprob: -6.893640995025635
    9. ' +' → logprob: -9.143641471862793
    10. ',
' → logprob: -9.268641471862793

Token 1512: 'vy' (ID: 16670)
  Prédit: 'vy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.0008411920862272382
    2. '(-' → logprob: -7.62584114074707
    3. '-v' → logprob: -8.62584114074707
    4. ' vy' → logprob: -9.75084114074707
    5. '0' → logprob: -10.12584114074707
    6. '-' → logprob: -10.62584114074707
    7. '1' → logprob: -11.50084114074707
    8. '(' → logprob: -11.50084114074707
    9. '(v' → logprob: -11.75084114074707
    10. '   ' → logprob: -12.37584114074707

Token 1513: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030316898482851684
    2. ' ,' → logprob: -9.000303268432617
    3. '[mid' → logprob: -10.125303268432617
    4. 'mid' → logprob: -10.125303268432617
    5. '(mid' → logprob: -10.625303268432617
    6. '0' → logprob: -11.000303268432617
    7. '*' → logprob: -11.250303268432617
    8. ',
' → logprob: -11.250303268432617
    9. '```' → logprob: -12.000303268432617
    10. ' mid' → logprob: -12.000303268432617

Token 1514: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.00043102685594931245
    2. ' mid' → logprob: -7.750431060791016
    3. '(mid' → logprob: -15.625431060791016
    4. '   ' → logprob: -15.875431060791016
    5. '[mid' → logprob: -18.375431060791016
    6. ' ' → logprob: -19.125431060791016
    7. '    ' → logprob: -19.875431060791016
    8. '  ' → logprob: -20.125431060791016
    9. '     ' → logprob: -20.875431060791016
    10. '       ' → logprob: -20.875431060791016

Token 1515: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08803243190050125
    2. 'mid' → logprob: -2.8380324840545654
    3. '(mid' → logprob: -4.213032245635986
    4. '[mid' → logprob: -4.838032245635986
    5. '(' → logprob: -5.963032245635986
    6. '1' → logprob: -8.338032722473145
    7. '0' → logprob: -9.588032722473145
    8. ' mid' → logprob: -10.588032722473145
    9. '.mid' → logprob: -10.713032722473145
    10. 'y' → logprob: -11.963032722473145

Token 1516: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020630061626434326
    2. '0' → logprob: -3.895630121231079
    3. '[' → logprob: -9.3956298828125
    4. '-' → logprob: -13.3956298828125
    5. '```' → logprob: -13.7706298828125
    6. ' ' → logprob: -14.3956298828125
    7. '{' → logprob: -14.8956298828125
    8. '
' → logprob: -15.0206298828125
    9. '   ' → logprob: -15.1456298828125
    10. 'y' → logprob: -15.2706298828125

Token 1517: ']+' (ID: 15344)
  Prédit: '-v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-v' → logprob: -1.0679028034210205
    2. '[' → logprob: -1.1929028034210205
    3. '+' → logprob: -1.3179028034210205
    4. '-mid' → logprob: -2.6929028034210205
    5. ' -' → logprob: -4.567902565002441
    6. '-' → logprob: -5.192902565002441
    7. '[-' → logprob: -7.192902565002441
    8. '-y' → logprob: -8.067902565002441
    9. '[mid' → logprob: -9.067902565002441
    10. 'mid' → logprob: -9.817902565002441

Token 1518: 'vx' (ID: 96015)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.10041865706443787
    2. 'vx' → logprob: -2.3504185676574707
    3. ' vy' → logprob: -9.225419044494629
    4. '-v' → logprob: -9.350419044494629
    5. ' vx' → logprob: -10.975419044494629
    6. '0' → logprob: -12.475419044494629
    7. '-' → logprob: -13.225419044494629
    8. '(-' → logprob: -13.600419044494629
    9. '1' → logprob: -14.100419044494629
    10. ' ' → logprob: -14.725419044494629

Token 1519: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.0536883615423e-05
    2. ')
' → logprob: -9.500080108642578
    3. '   ' → logprob: -13.375080108642578
    4. '<|end|>' → logprob: -13.625080108642578
    5. ')a' → logprob: -13.750080108642578
    6. ')return' → logprob: -14.625080108642578
    7. ' )' → logprob: -14.625080108642578
    8. 'a' → logprob: -15.500080108642578
    9. '),' → logprob: -15.750080108642578
    10. '[' → logprob: -16.125080108642578

Token 1520: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1521: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2521638572216034
    2. 'b' (adapté à ' b') → logprob: -1.5021638870239258
    3. '   ' → logprob: -8.377163887023926
    4. '```' → logprob: -13.627163887023926
    5. '	b' → logprob: -13.752163887023926
    6. ' ' → logprob: -14.002163887023926
    7. '       ' → logprob: -14.877163887023926
    8. ',b' → logprob: -15.252163887023926
    9. '<|end|>' → logprob: -15.377163887023926
    10. ',' → logprob: -15.502163887023926

Token 1522: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018155092373490334
    2. ' =' → logprob: -4.018155097961426
    3. '=(' → logprob: -12.268155097961426
    4. '=
' → logprob: -14.643155097961426
    5. ' =(' → logprob: -17.89315414428711
    6. '=

' → logprob: -18.26815414428711
    7. '=line' → logprob: -18.51815414428711
    8. '=('' → logprob: -19.01815414428711
    9. '=b' → logprob: -19.14315414428711
    10. ' =
' → logprob: -19.26815414428711

Token 1523: ' (' (ID: 350)
  Prédit: '(mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -8.137130498653278e-05
    2. ' (' → logprob: -9.500081062316895
    3. '(m' → logprob: -12.250081062316895
    4. '[mid' → logprob: -13.625081062316895
    5. '((' → logprob: -15.500081062316895
    6. '   ' → logprob: -16.25008201599121
    7. '(' → logprob: -17.00008201599121
    8. ' ' → logprob: -17.12508201599121
    9. 'mid' → logprob: -17.12508201599121
    10. '(min' → logprob: -17.25008201599121

Token 1524: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0004915529862046242
    2. '(mid' → logprob: -7.750491619110107
    3. ' mid' → logprob: -9.75049114227295
    4. '[mid' → logprob: -13.62549114227295
    5. '   ' → logprob: -14.12549114227295
    6. ' ' → logprob: -15.75049114227295
    7. ' (' → logprob: -15.87549114227295
    8. '(m' → logprob: -16.000492095947266
    9. '  ' → logprob: -16.875492095947266
    10. '(' → logprob: -17.375492095947266

Token 1525: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4140441635390744e-05
    2. '0' → logprob: -11.625014305114746
    3. '(' → logprob: -13.750014305114746
    4. '   ' → logprob: -14.250014305114746
    5. '1' → logprob: -14.500014305114746
    6. '```' → logprob: -14.625014305114746
    7. 'import' → logprob: -14.875014305114746
    8. 'def' → logprob: -15.250014305114746
    9. '.' → logprob: -15.500014305114746
    10. '#' → logprob: -15.625014305114746

Token 1526: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.125001907348633
    3. '
' → logprob: -17.625001907348633
    4. '```' → logprob: -17.625001907348633
    5. ' ' → logprob: -18.250001907348633
    6. '(' → logprob: -19.000001907348633
    7. '   ' → logprob: -19.125001907348633
    8. '1' → logprob: -19.375001907348633
    9. 'x' → logprob: -19.875001907348633
    10. '۰' → logprob: -20.000001907348633

Token 1527: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008705453015863895
    2. '-' → logprob: -5.2587056159973145
    3. '-v' → logprob: -6.0087056159973145
    4. ' -' → logprob: -7.7587056159973145
    5. ',' → logprob: -8.133705139160156
    6. ' +' → logprob: -9.008705139160156
    7. '[' → logprob: -9.133705139160156
    8. '+y' → logprob: -10.258705139160156
    9. 'vy' → logprob: -12.633705139160156
    10. ' ' → logprob: -12.633705139160156

Token 1528: 'vy' (ID: 16670)
  Prédit: 'vy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.00034702493576332927
    2. ' vy' → logprob: -8.000347137451172
    3. '-v' → logprob: -11.625347137451172
    4. '(-' → logprob: -13.750347137451172
    5. '-' → logprob: -15.125347137451172
    6. ' ' → logprob: -15.125347137451172
    7. ' -' → logprob: -15.250347137451172
    8. 'vi' → logprob: -15.750347137451172
    9. 'wy' → logprob: -16.250347137451172
    10. '+' → logprob: -16.500347137451172

Token 1529: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0802738870552275e-05
    2. ' ,' → logprob: -12.87501049041748
    3. ',
' → logprob: -13.00001049041748
    4. 'mid' → logprob: -13.37501049041748
    5. 'a' → logprob: -14.12501049041748
    6. 'b' → logprob: -14.37501049041748
    7. ' mid' → logprob: -14.50001049041748
    8. ',b' → logprob: -14.62501049041748
    9. '[mid' → logprob: -14.62501049041748
    10. '```' → logprob: -15.00001049041748

Token 1530: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.03804171830415726
    2. ' mid' → logprob: -3.288041830062866
    3. '(mid' → logprob: -15.788042068481445
    4. '[mid' → logprob: -17.288042068481445
    5. '_mid' → logprob: -19.913042068481445
    6. ' midpoint' → logprob: -20.038042068481445
    7. '.mid' → logprob: -20.288042068481445
    8. 'Mid' → logprob: -22.288042068481445
    9. '   ' → logprob: -22.413042068481445
    10. ' ' → logprob: -22.413042068481445

Token 1531: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008718462660908699
    2. '1' → logprob: -4.758718490600586
    3. '(' → logprob: -9.258718490600586
    4. ' ' → logprob: -12.758718490600586
    5. '```' → logprob: -13.133718490600586
    6. '-' → logprob: -14.133718490600586
    7. '0' → logprob: -14.133718490600586
    8. '   ' → logprob: -14.258718490600586
    9. '[mid' → logprob: -14.258718490600586
    10. '(mid' → logprob: -15.008718490600586

Token 1532: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005642342148348689
    2. '0' → logprob: -7.875564098358154
    3. ' ' → logprob: -9.125564575195312
    4. '-' → logprob: -9.875564575195312
    5. '[' → logprob: -11.375564575195312
    6. 'b' → logprob: -12.000564575195312
    7. '(' → logprob: -13.125564575195312
    8. '```' → logprob: -13.250564575195312
    9. 'vy' → logprob: -14.125564575195312
    10. '   ' → logprob: -14.125564575195312

Token 1533: ']-' (ID: 27107)
  Prédit: '-v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-v' → logprob: -0.16103778779506683
    2. '+' → logprob: -2.6610376834869385
    3. '-' → logprob: -2.6610376834869385
    4. '-b' → logprob: -5.411037921905518
    5. ' -' → logprob: -6.036037921905518
    6. '-V' → logprob: -6.911037921905518
    7. '+b' → logprob: -7.661037921905518
    8. '-va' → logprob: -8.78603744506836
    9. '-y' → logprob: -9.16103744506836
    10. '[' → logprob: -9.28603744506836

Token 1534: 'vx' (ID: 96015)
  Prédit: 'vx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -1.1041145626222715e-05
    2. 'vy' → logprob: -12.000011444091797
    3. ' vx' → logprob: -12.875011444091797
    4. '1' → logprob: -14.000011444091797
    5. 'x' → logprob: -14.250011444091797
    6. '0' → logprob: -15.500011444091797
    7. 'kx' → logprob: -15.750011444091797
    8. 'qx' → logprob: -16.125011444091797
    9. 'v' → logprob: -16.625011444091797
    10. 'px' → logprob: -16.625011444091797

Token 1535: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4855663721391466e-05
    2. ')
' → logprob: -11.250015258789062
    3. '   ' → logprob: -13.500015258789062
    4. ' )' → logprob: -16.125015258789062
    5. ')

' → logprob: -16.375015258789062
    6. ')
' → logprob: -17.000015258789062
    7. ')return' → logprob: -17.375015258789062
    8. '<|end|>' → logprob: -17.375015258789062
    9. ')#' → logprob: -17.875015258789062
    10. '       ' → logprob: -18.250015258789062

Token 1536: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7197185158729553
    2. '       ' → logprob: -1.2197184562683105
    3. '<|end|>' → logprob: -1.9697184562683105
    4. '```' → logprob: -2.8447184562683105
    5. ' for' → logprob: -4.3447184562683105
    6. 'for' → logprob: -5.7197184562683105
    7. ')' → logprob: -6.5947184562683105
    8. '
' → logprob: -6.7197184562683105
    9. '<|end|>' → logprob: -7.9697184562683105
    10. '	for' → logprob: -8.719718933105469

Token 1537: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016112701268866658
    2. 'if' (adapté à ' if') → logprob: -7.126611232757568
    3. ' if' → logprob: -7.876611232757568
    4. '   ' → logprob: -7.876611232757568
    5. '
' → logprob: -11.251611709594727
    6. 'for' → logprob: -11.251611709594727
    7. ' for' → logprob: -11.876611709594727
    8. '        
' → logprob: -12.126611709594727
    9. '<|end|>' → logprob: -12.501611709594727
    10. '           ' → logprob: -13.001611709594727

Token 1538: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.31326398253440857
    2. ' check' → logprob: -1.313264012336731
    3. '           ' → logprob: -13.688263893127441
    4. '       ' → logprob: -14.688263893127441
    5. '(check' → logprob: -15.063263893127441
    6. '   ' → logprob: -15.563263893127441
    7. '	check' → logprob: -16.313264846801758
    8. ' not' → logprob: -17.938264846801758
    9. '               ' → logprob: -18.188264846801758
    10. '_check' → logprob: -18.313264846801758

Token 1539: '_axis' (ID: 50852)
  Prédit: '_axis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_axis' → logprob: -0.017602520063519478
    2. '(a' → logprob: -4.142602443695068
    3. 'a' → logprob: -6.767602443695068
    4. 'axis' → logprob: -7.892602443695068
    5. '_a' → logprob: -11.642602920532227
    6. '```' → logprob: -11.642602920532227
    7. '[a' → logprob: -12.142602920532227
    8. '(axis' → logprob: -12.892602920532227
    9. '(b' → logprob: -13.267602920532227
    10. '
' → logprob: -13.517602920532227

Token 1540: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.309382373117842e-05
    2. 'a' → logprob: -10.375033378601074
    3. '(p' → logprob: -13.875033378601074
    4. '((' → logprob: -14.875033378601074
    5. '(' → logprob: -15.250033378601074
    6. '(
' → logprob: -15.375033378601074
    7. '(mid' → logprob: -16.625032424926758
    8. ' a' → logprob: -17.625032424926758
    9. '(b' → logprob: -18.375032424926758
    10. ' (' → logprob: -18.750032424926758

Token 1541: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.048604074865579605
    2. ',' → logprob: -3.0486040115356445
    3. 'b' → logprob: -11.423604011535645
    4. ',
' → logprob: -12.548604011535645
    5. ' ,' → logprob: -14.173604011535645
    6. ',p' → logprob: -14.673604011535645
    7. ',a' → logprob: -15.673604011535645
    8. '       ' → logprob: -15.798604011535645
    9. ',v' → logprob: -15.798604011535645
    10. ',B' → logprob: -16.17360496520996

Token 1542: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04782750457525253
    2. '       ' → logprob: -3.9228274822235107
    3. ':
' → logprob: -4.42282772064209
    4. '):' → logprob: -4.54782772064209
    5. ':' → logprob: -6.04782772064209
    6. '==' → logprob: -7.04782772064209
    7. '           ' → logprob: -7.79782772064209
    8. ')==' → logprob: -8.79782772064209
    9. '():
' → logprob: -8.92282772064209
    10. '   ' → logprob: -9.04782772064209

Token 1543: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22763516008853912
    2. '       ' → logprob: -1.602635145187378
    3. '```' → logprob: -6.602635383605957
    4. '               ' → logprob: -7.727635383605957
    5. '	       ' → logprob: -7.977635383605957
    6. '<|end|>' → logprob: -10.227635383605957
    7. '``' → logprob: -12.102635383605957
    8. '                       ' → logprob: -12.227635383605957
    9. '		' → logprob: -12.477635383605957
    10. 'print' → logprob: -12.477635383605957

Token 1544: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0097806416451931
    2. '   ' → logprob: -5.259780406951904
    3. '           ' → logprob: -5.509780406951904
    4. ' print' → logprob: -8.009780883789062
    5. '       ' → logprob: -8.884780883789062
    6. '```' → logprob: -11.259780883789062
    7. '               ' → logprob: -12.884780883789062
    8. '	print' → logprob: -12.884780883789062
    9. '
' → logprob: -15.259780883789062
    10. '``' → logprob: -15.384780883789062

Token 1545: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.001203327439725399
    2. '"' → logprob: -7.126203536987305
    3. 'Yes' → logprob: -8.501203536987305
    4. '"No' → logprob: -9.126203536987305
    5. '('' → logprob: -9.626203536987305
    6. '(' → logprob: -11.376203536987305
    7. 'No' → logprob: -12.751203536987305
    8. '(No' → logprob: -13.001203536987305
    9. '(
' → logprob: -13.376203536987305
    10. '   ' → logprob: -14.376203536987305

Token 1546: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -4.596781946020201e-05
    2. 'YES' → logprob: -10.000045776367188
    3. ' Yes' → logprob: -14.750045776367188
    4. '"' → logprob: -16.625045776367188
    5. 'Y' → logprob: -17.250045776367188
    6. 'Sym' → logprob: -17.375045776367188
    7. '“Yes' → logprob: -18.250045776367188
    8. 'Ya' → logprob: -19.625045776367188
    9. 'yes' → logprob: -20.000045776367188
    10. 'Possible' → logprob: -20.125045776367188

Token 1547: '")
' (ID: 1896)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021177830174565315
    2. '")' → logprob: -4.521177768707275
    3. '")
' → logprob: -4.646177768707275
    4. ')' → logprob: -8.396178245544434
    5. ')
' → logprob: -8.771178245544434
    6. '               ' → logprob: -10.271178245544434
    7. '       ' → logprob: -10.521178245544434
    8. '");' → logprob: -11.271178245544434
    9. '<|end|>' → logprob: -12.396178245544434
    10. '```' → logprob: -12.896178245544434

Token 1548: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.941850526549388e-06
    2. '```' → logprob: -12.625007629394531
    3. '               ' → logprob: -13.500007629394531
    4. '       ' → logprob: -13.625007629394531
    5. '<|end|>' → logprob: -14.125007629394531
    6. '   ' → logprob: -14.875007629394531
    7. '	       ' → logprob: -15.250007629394531
    8. '		' → logprob: -15.250007629394531
    9. '            
' → logprob: -16.62500762939453
    10. '                   ' → logprob: -16.62500762939453

Token 1549: ' sys' (ID: 12228)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.874882430769503e-05
    2. 'sys' (adapté à ' sys') → logprob: -9.625079154968262
    3. 'import' → logprob: -12.375079154968262
    4. '   ' → logprob: -12.750079154968262
    5. '		' → logprob: -13.625079154968262
    6. ' sys' → logprob: -13.875079154968262
    7. '```' → logprob: -13.875079154968262
    8. '               ' → logprob: -14.250079154968262
    9. 'exit' → logprob: -14.625079154968262
    10. '
' → logprob: -14.875079154968262

Token 1550: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.006699857767671347
    2. 'exit' → logprob: -5.631700038909912
    3. 'it' → logprob: -6.381700038909912
    4. 'eturn' → logprob: -7.006700038909912
    5. '           ' → logprob: -9.381699562072754
    6. '_exit' → logprob: -9.756699562072754
    7. 'return' → logprob: -9.756699562072754
    8. '   ' → logprob: -10.256699562072754
    9. '	exit' → logprob: -10.256699562072754
    10. '       ' → logprob: -10.381699562072754

Token 1551: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18775574862957
    2. '()
' → logprob: -1.8127557039260864
    3. 'print' → logprob: -5.562755584716797
    4. '   ' → logprob: -5.812755584716797
    5. '()

' → logprob: -8.312755584716797
    6. '#' → logprob: -8.437755584716797
    7. '(True' → logprob: -8.437755584716797
    8. '(' → logprob: -8.687755584716797
    9. '()\' → logprob: -9.062755584716797
    10. '())' → logprob: -9.437755584716797

Token 1552: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10042718052864075
    2. '#' → logprob: -2.3504271507263184
    3. 'print' → logprob: -9.100427627563477
    4. '   ' → logprob: -9.475427627563477
    5. '```' → logprob: -10.475427627563477
    6. '
' → logprob: -13.725427627563477
    7. ' for' → logprob: -13.975427627563477
    8. '    
' → logprob: -14.225427627563477
    9. 'edge' → logprob: -15.475427627563477
    10. 'continue' → logprob: -15.600427627563477

Token 1553: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23957683145999908
    2. '#' (adapté à ' #') → logprob: -2.239576816558838
    3. 'for' → logprob: -2.239576816558838
    4. 'edge' → logprob: -11.239577293395996
    5. ' for' → logprob: -12.114577293395996
    6. '```' → logprob: -12.364577293395996
    7. '    
' → logprob: -12.614577293395996
    8. 'edges' → logprob: -13.364577293395996
    9. '
' → logprob: -13.864577293395996
    10. ' #' → logprob: -13.864577293395996

Token 1554: ' check' (ID: 2371)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0658947005867958
    2. '#' → logprob: -3.065894603729248
    3. 'for' → logprob: -4.065894603729248
    4. '```' → logprob: -12.440895080566406
    5. '       ' → logprob: -13.565895080566406
    6. '    
' → logprob: -13.690895080566406
    7. ' for' → logprob: -13.690895080566406
    8. ' #' → logprob: -14.315895080566406
    9. 'edge' → logprob: -14.440895080566406
    10. '
' → logprob: -14.440895080566406

Token 1555: ' axis' (ID: 16300)
  Prédit: 'axis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'axis' → logprob: -0.03739965334534645
    2. ' axis' → logprob: -3.4123997688293457
    3. '_axis' → logprob: -6.162399768829346
    4. '#' → logprob: -6.912399768829346
    5. '   ' → logprob: -8.537399291992188
    6. 'axes' → logprob: -8.662399291992188
    7. 'ax' → logprob: -9.412399291992188
    8. 'for' → logprob: -9.662399291992188
    9. ' #' → logprob: -10.162399291992188
    10. ' for' → logprob: -10.537399291992188

Token 1556: ' through' (ID: 1819)
  Prédit: 'passing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'passing' → logprob: -0.04617256298661232
    2. 'through' → logprob: -3.796172618865967
    3. '   ' → logprob: -4.171172618865967
    4. ' passing' → logprob: -5.046172618865967
    5. '#' → logprob: -7.921172618865967
    6. ' through' → logprob: -8.671172142028809
    7. 'pass' → logprob: -9.046172142028809
    8. 'passes' → logprob: -10.046172142028809
    9. '       ' → logprob: -10.671172142028809
    10. 'for' → logprob: -10.796172142028809

Token 1557: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.14810319244861603
    2. 'i' → logprob: -2.5231032371520996
    3. 'for' → logprob: -3.7731032371520996
    4. '(i' → logprob: -4.5231032371521
    5. '#' → logprob: -4.5231032371521
    6. 'range' → logprob: -5.1481032371521
    7. 'edges' → logprob: -6.2731032371521
    8. 'edge' → logprob: -6.6481032371521
    9. '((' → logprob: -6.8981032371521
    10. '(mid' → logprob: -7.5231032371521

Token 1558: 'points' (ID: 14011)
  Prédit: 'points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00021796036162413657
    2. 'point' → logprob: -8.500218391418457
    3. 'oints' → logprob: -12.000218391418457
    4. 'edges' → logprob: -13.000218391418457
    5. '#' → logprob: -13.375218391418457
    6. 'for' → logprob: -13.500218391418457
    7. 'pts' → logprob: -14.375218391418457
    8. 'p' → logprob: -14.625218391418457
    9. '(points' → logprob: -14.875218391418457
    10. '```' → logprob: -15.125218391418457

Token 1559: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.42848554253578186
    2. 'for' → logprob: -1.8034855127334595
    3. '   ' → logprob: -1.9284855127334595
    4. ' of' → logprob: -3.303485631942749
    5. ' for' → logprob: -7.42848539352417
    6. '#' → logprob: -7.80348539352417
    7. 's' → logprob: -9.053485870361328
    8. '[i' → logprob: -9.553485870361328
    9. 'from' → logprob: -10.053485870361328
    10. 'i' → logprob: -10.178485870361328

Token 1560: ' opposite' (ID: 23821)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.7067558765411377
    2. 'edges' → logprob: -0.9567558765411377
    3. '(p' → logprob: -2.3317558765411377
    4. 'range' → logprob: -5.081755638122559
    5. 'for' → logprob: -5.456755638122559
    6. '#' → logprob: -5.706755638122559
    7. '[(' → logprob: -5.831755638122559
    8. 'edge' → logprob: -5.831755638122559
    9. 'polygon' → logprob: -6.331755638122559
    10. ' edges' → logprob: -7.331755638122559

Token 1561: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.004079708829522133
    2. ' edges' → logprob: -5.504079818725586
    3. '_edges' → logprob: -14.254079818725586
    4. 'edge' → logprob: -15.129079818725586
    5. '.edges' → logprob: -15.629079818725586
    6. 's' → logprob: -16.254079818725586
    7. '(edges' → logprob: -16.504079818725586
    8. 'for' → logprob: -17.754079818725586
    9. 'Edges' → logprob: -17.879079818725586
    10. ' sides' → logprob: -17.879079818725586

Token 1562: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014585700118914247
    2. 'for' → logprob: -6.751458644866943
    3. ' for' → logprob: -8.251458168029785
    4. '
' → logprob: -11.376458168029785
    5. 'edges' → logprob: -12.501458168029785
    6. 'from' → logprob: -12.626458168029785
    7. '    
' → logprob: -12.751458168029785
    8. 'import' → logprob: -13.251458168029785
    9. '       ' → logprob: -14.001458168029785
    10. '#' → logprob: -14.376458168029785

Token 1563: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006922688335180283
    2. 'for' → logprob: -5.506922721862793
    3. ' for' → logprob: -5.881922721862793
    4. '```' → logprob: -10.881922721862793
    5. '
' → logprob: -11.131922721862793
    6. '       ' → logprob: -12.006922721862793
    7. 'edges' → logprob: -12.631922721862793
    8. '    
' → logprob: -13.006922721862793
    9. '	for' → logprob: -13.131922721862793
    10. 'from' → logprob: -14.131922721862793

Token 1564: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014788919128477573
    2. '   ' → logprob: -4.38978910446167
    3. ' for' → logprob: -6.38978910446167
    4. '```' → logprob: -7.88978910446167
    5. 'edges' → logprob: -9.014788627624512
    6. 'edge' → logprob: -9.389788627624512
    7. 'from' → logprob: -12.139788627624512
    8. '``' → logprob: -12.389788627624512
    9. 'e' → logprob: -12.639788627624512
    10. '	for' → logprob: -13.139788627624512

Token 1565: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2233183042553719e-05
    2. ' i' → logprob: -11.625012397766113
    3. '_i' → logprob: -13.250012397766113
    4. '```' → logprob: -13.875012397766113
    5. '(i' → logprob: -15.625012397766113
    6. '_' → logprob: -15.750012397766113
    7. '
' → logprob: -16.250011444091797
    8. '`' → logprob: -16.625011444091797
    9. '	i' → logprob: -17.875011444091797
    10. 'j' → logprob: -17.875011444091797

Token 1566: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3132893145084381
    2. 'in' → logprob: -1.3132892847061157
    3. 'range' → logprob: -11.688289642333984
    4. '(n' → logprob: -11.938289642333984
    5. '   ' → logprob: -12.563289642333984
    6. 'n' → logprob: -12.688289642333984
    7. '```' → logprob: -13.438289642333984
    8. '(range' → logprob: -13.813289642333984
    9. '(' → logprob: -13.938289642333984
    10. ' ' → logprob: -14.063289642333984

Token 1567: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00863111112266779
    2. ' range' → logprob: -4.758631229400635
    3. '(range' → logprob: -11.008630752563477
    4. '(' → logprob: -17.883630752563477
    5. '0' → logprob: -18.008630752563477
    6. 'n' → logprob: -18.508630752563477
    7. '   ' → logprob: -18.883630752563477
    8. 'in' → logprob: -19.008630752563477
    9. '	range' → logprob: -19.133630752563477
    10. ' ' → logprob: -19.383630752563477

Token 1568: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.34135282039642334
    2. 'n' → logprob: -1.3413528203964233
    3. 'range' → logprob: -3.591352939605713
    4. '0' → logprob: -9.716352462768555
    5. '(range' → logprob: -10.341352462768555
    6. '(' → logprob: -10.341352462768555
    7. ' range' → logprob: -11.966352462768555
    8. '
' → logprob: -13.091352462768555
    9. ' n' → logprob: -13.716352462768555
    10. '[n' → logprob: -13.841352462768555

Token 1569: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.011845688335597515
    2. '#' → logprob: -4.511845588684082
    3. '(n' → logprob: -7.886845588684082
    4. 'n' → logprob: -8.261845588684082
    5. '(' → logprob: -10.011845588684082
    6. '   ' → logprob: -10.261845588684082
    7. '(i' → logprob: -10.761845588684082
    8. '```' → logprob: -10.886845588684082
    9. '2' → logprob: -11.636845588684082
    10. 'i' → logprob: -11.761845588684082

Token 1570: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.375001907348633
    3. '1' → logprob: -15.750001907348633
    4. '(' → logprob: -16.375001907348633
    5. '   ' → logprob: -16.750001907348633
    6. '
' → logprob: -16.750001907348633
    7. '```' → logprob: -17.875001907348633
    8. '{' → logprob: -18.250001907348633
    9. '{
' → logprob: -19.562501907348633
    10. 'def' → logprob: -19.750001907348633

Token 1571: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.41276219487190247
    2. '):
' → logprob: -1.41276216506958
    3. '   ' → logprob: -2.66276216506958
    4. '-' → logprob: -4.41276216506958
    5. '):' → logprob: -5.53776216506958
    6. '       ' → logprob: -5.91276216506958
    7. ',' → logprob: -5.91276216506958
    8. ':
' → logprob: -7.28776216506958
    9. ' +' → logprob: -7.66276216506958
    10. ':' → logprob: -7.66276216506958

Token 1572: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43327412009239197
    2. '       ' → logprob: -1.1832741498947144
    3. ' p' → logprob: -3.558274030685425
    4. ' e' → logprob: -4.183274269104004
    5. ' edge' → logprob: -7.933274269104004
    6. '```' → logprob: -7.933274269104004
    7. ' a' → logprob: -8.183274269104004
    8. 'e' → logprob: -8.433274269104004
    9. 'a' → logprob: -9.308274269104004
    10. ' edges' → logprob: -9.558274269104004

Token 1573: ' e' (ID: 319)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5974400043487549
    2. 'e' (adapté à ' e') → logprob: -0.8474400043487549
    3. '       ' → logprob: -4.347439765930176
    4. 'a' → logprob: -4.847439765930176
    5. ' p' → logprob: -9.097439765930176
    6. '   ' → logprob: -9.097439765930176
    7. '           ' → logprob: -9.472439765930176
    8. ' e' → logprob: -9.972439765930176
    9. 'edge' → logprob: -10.097439765930176
    10. 'mid' → logprob: -10.597439765930176

Token 1574: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3850020468235016
    2. 'p' → logprob: -2.1350021362304688
    3. 'i' → logprob: -2.5100021362304688
    4. '_points' → logprob: -3.6350021362304688
    5. ' =' → logprob: -4.010002136230469
    6. 'x' → logprob: -4.260002136230469
    7. '=' → logprob: -4.635002136230469
    8. 'a' → logprob: -4.885002136230469
    9. '(' → logprob: -5.260002136230469
    10. ' p' → logprob: -5.385002136230469

Token 1575: 'p' (ID: 79)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16637973487377167
    2. '=' → logprob: -1.916379690170288
    3. '=p' → logprob: -6.041379928588867
    4. 'a' → logprob: -6.541379928588867
    5. '=(' → logprob: -6.666379928588867
    6. 'p' → logprob: -7.291379928588867
    7. '_p' → logprob: -8.916379928588867
    8. '=e' → logprob: -9.791379928588867
    9. '_start' → logprob: -10.166379928588867
    10. '=a' → logprob: -10.666379928588867

Token 1576: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.45929989218711853
    2. '=' → logprob: -1.334299921989441
    3. ' =' → logprob: -2.8342998027801514
    4. 'olygon' → logprob: -3.8342998027801514
    5. 'a' → logprob: -4.4593000411987305
    6. 'ol' → logprob: -5.9593000411987305
    7. 'e' → logprob: -6.3343000411987305
    8. '=e' → logprob: -6.4593000411987305
    9. '0' → logprob: -6.7093000411987305
    10. 'oly' → logprob: -6.8343000411987305

Token 1577: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4748971164226532
    2. ' =' → logprob: -0.9748971462249756
    3. '=e' → logprob: -7.7248969078063965
    4. '=p' → logprob: -8.474897384643555
    5. ',' → logprob: -8.974897384643555
    6. ',e' → logprob: -11.224897384643555
    7. 'p' → logprob: -11.349897384643555
    8. '=edge' → logprob: -11.974897384643555
    9. ',p' → logprob: -12.224897384643555
    10. '   ' → logprob: -13.224897384643555

Token 1578: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.029790882021188736
    2. ' polygon' → logprob: -3.5297908782958984
    3. 'poly' → logprob: -10.279790878295898
    4. '   ' → logprob: -12.404790878295898
    5. 'pol' → logprob: -13.404790878295898
    6. ' ' → logprob: -15.779790878295898
    7. 'p' → logprob: -16.5297908782959
    8. '(' → logprob: -16.9047908782959
    9. '(p' → logprob: -17.0297908782959
    10. '_polygon' → logprob: -17.1547908782959

Token 1579: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.31309977173805237
    2. '[(' → logprob: -1.43809974193573
    3. 'i' → logprob: -3.8130998611450195
    4. '(i' → logprob: -4.6880998611450195
    5. '((' → logprob: -9.31309986114502
    6. '   ' → logprob: -11.43809986114502
    7. '[
' → logprob: -11.43809986114502
    8. '[((' → logprob: -11.81309986114502
    9. ' (' → logprob: -11.93809986114502
    10. '[' → logprob: -12.06309986114502

Token 1580: ']
' (ID: 1592)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.49734121561050415
    2. ']
' → logprob: -0.9973412156105042
    3. '       ' → logprob: -3.8723411560058594
    4. ']' → logprob: -6.872341156005859
    5. '[(' → logprob: -7.747341156005859
    6. '[' → logprob: -8.12234115600586
    7. '   ' → logprob: -8.87234115600586
    8. ']
' → logprob: -10.12234115600586
    9. '][' → logprob: -10.24734115600586
    10. '(' → logprob: -10.24734115600586

Token 1581: '       ' (ID: 309)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.039819732308387756
    2. '       ' → logprob: -3.6648197174072266
    3. ' e' → logprob: -4.414819717407227
    4. '   ' → logprob: -7.164819717407227
    5. '	e' → logprob: -8.164819717407227
    6. '```' → logprob: -8.664819717407227
    7. '`' → logprob: -10.789819717407227
    8. ',e' → logprob: -10.914819717407227
    9. '``' → logprob: -11.164819717407227
    10. '        ' → logprob: -11.789819717407227

Token 1582: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' (adapté à ' e') → logprob: -0.0019844253547489643
    2. ' e' → logprob: -6.751984596252441
    3. '       ' → logprob: -7.126984596252441
    4. '   ' → logprob: -11.626984596252441
    5. '	e' → logprob: -14.001984596252441
    6. ' ' → logprob: -14.751984596252441
    7. '           ' → logprob: -15.126984596252441
    8. '```' → logprob: -16.376983642578125
    9. '`' → logprob: -16.626983642578125
    10. '     ' → logprob: -17.126983642578125

Token 1583: '1' (ID: 16)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.26547515392303467
    2. 'i' → logprob: -1.8904751539230347
    3. '(i' → logprob: -3.015475273132324
    4. '(e' → logprob: -3.765475273132324
    5. ' (' → logprob: -6.640475273132324
    6. '((' → logprob: -6.640475273132324
    7. '[i' → logprob: -6.765475273132324
    8. ' =' → logprob: -6.890475273132324
    9. ' e' → logprob: -6.890475273132324
    10. '```' → logprob: -7.015475273132324

Token 1584: 'p' (ID: 79)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4280383586883545
    2. 'p' → logprob: -1.8030383586883545
    3. '1' → logprob: -2.0530383586883545
    4. '=' → logprob: -4.178038597106934
    5. '(' → logprob: -4.678038597106934
    6. '0' → logprob: -4.928038597106934
    7. 'i' → logprob: -5.053038597106934
    8. '2' → logprob: -5.553038597106934
    9. '=(' → logprob: -5.678038597106934
    10. '
' → logprob: -6.053038597106934

Token 1585: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.288221538066864
    2. '0' → logprob: -1.4132215976715088
    3. '2' → logprob: -5.28822135925293
    4. 'i' → logprob: -7.66322135925293
    5. '(i' → logprob: -7.78822135925293
    6. 'e' → logprob: -8.03822135925293
    7. '+' → logprob: -8.03822135925293
    8. '(' → logprob: -9.03822135925293
    9. '[' → logprob: -9.78822135925293
    10. '```' → logprob: -10.03822135925293

Token 1586: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132924735546112
    2. ' =' → logprob: -1.3132925033569336
    3. '=p' → logprob: -10.438292503356934
    4. '=
' → logprob: -14.813292503356934
    5. '   ' → logprob: -15.313292503356934
    6. ' polygon' → logprob: -15.813292503356934
    7. '=e' → logprob: -15.813292503356934
    8. '```' → logprob: -15.938292503356934
    9. 'polygon' → logprob: -16.438291549682617
    10. ' ' → logprob: -16.813291549682617

Token 1587: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.1428690254688263
    2. ' polygon' → logprob: -2.017868995666504
    3. 'poly' → logprob: -8.642868995666504
    4. 'pol' → logprob: -12.392868995666504
    5. '   ' → logprob: -12.517868995666504
    6. '(p' → logprob: -12.767868995666504
    7. ' ' → logprob: -13.392868995666504
    8. '_polygon' → logprob: -13.392868995666504
    9. ' poly' → logprob: -14.142868995666504
    10. '(' → logprob: -14.392868995666504

Token 1588: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.004880181048065424
    2. '(i' → logprob: -5.754879951477051
    3. '[i' → logprob: -6.379879951477051
    4. '   ' → logprob: -13.50487995147705
    5. '((' → logprob: -13.50487995147705
    6. '[
' → logprob: -14.25487995147705
    7. '(' → logprob: -14.50487995147705
    8. ' (' → logprob: -14.75487995147705
    9. '(p' → logprob: -14.87987995147705
    10. '[' → logprob: -15.00487995147705

Token 1589: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0699642151594162
    2. '(i' → logprob: -2.6949641704559326
    3. ' (' → logprob: -11.194964408874512
    4. '[i' → logprob: -12.569964408874512
    5. '   ' → logprob: -12.694964408874512
    6. '{i' → logprob: -13.069964408874512
    7. ' i' → logprob: -13.194964408874512
    8. '```' → logprob: -13.569964408874512
    9. '(' → logprob: -13.819964408874512
    10. ')i' → logprob: -15.194964408874512

Token 1590: '+' (ID: 10)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.037759024649858475
    2. '(i' → logprob: -3.4127590656280518
    3. '1' → logprob: -6.287758827209473
    4. '+' → logprob: -6.662758827209473
    5. '(' → logprob: -7.412758827209473
    6. '[i' → logprob: -8.912758827209473
    7. '{i' → logprob: -9.162758827209473
    8. '+i' → logprob: -9.412758827209473
    9. ' (' → logprob: -10.912758827209473
    10. '[' → logprob: -11.912758827209473

Token 1591: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003537351731210947
    2. 'i' → logprob: -5.753537178039551
    3. '(i' → logprob: -8.00353717803955
    4. '(' → logprob: -10.62853717803955
    5. '```' → logprob: -15.25353717803955
    6. ' i' → logprob: -15.37853717803955
    7. ' ' → logprob: -15.50353717803955
    8. ' (' → logprob: -16.003538131713867
    9. 'n' → logprob: -16.628538131713867
    10. '
' → logprob: -16.878538131713867

Token 1592: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.1251237541437149
    2. '%n' → logprob: -2.2501237392425537
    3. 'n' → logprob: -5.250123977661133
    4. ')' → logprob: -5.375123977661133
    5. '(n' → logprob: -7.875123977661133
    6. ']%' → logprob: -7.875123977661133
    7. '%i' → logprob: -7.875123977661133
    8. '(i' → logprob: -8.375123977661133
    9. '```' → logprob: -8.500123977661133
    10. '%' → logprob: -8.750123977661133

Token 1593: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.173704271830502e-06
    2. '```' → logprob: -13.12500286102295
    3. '(n' → logprob: -14.37500286102295
    4. '``' → logprob: -15.25000286102295
    5. ' n' → logprob: -15.87500286102295
    6. '%n' → logprob: -16.500003814697266
    7. '   ' → logprob: -16.750003814697266
    8. '	n' → logprob: -17.750003814697266
    9. '(' → logprob: -18.125003814697266
    10. '`' → logprob: -18.750003814697266

Token 1594: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.04333028569817543
    2. ']' → logprob: -3.168330192565918
    3. '```' → logprob: -9.293330192565918
    4. 'n' → logprob: -9.418330192565918
    5. 'e' → logprob: -9.918330192565918
    6. '   ' → logprob: -11.168330192565918
    7. ']
' → logprob: -11.293330192565918
    8. ')
' → logprob: -11.543330192565918
    9. ']

' → logprob: -11.668330192565918
    10. 'i' → logprob: -11.793330192565918

Token 1595: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34918203949928284
    2. 'e' → logprob: -1.2241820096969604
    3. ' e' → logprob: -7.47418212890625
    4. '   ' → logprob: -8.97418212890625
    5. '```' → logprob: -10.72418212890625
    6. ' ' → logprob: -11.47418212890625
    7. '	e' → logprob: -12.72418212890625
    8. '``' → logprob: -13.34918212890625
    9. '           ' → logprob: -13.47418212890625
    10. '	' → logprob: -14.09918212890625

Token 1596: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' (adapté à ' e') → logprob: -0.0004282851587049663
    2. ' e' → logprob: -8.250428199768066
    3. '       ' → logprob: -8.750428199768066
    4. '   ' → logprob: -11.750428199768066
    5. '```' → logprob: -15.250428199768066
    6. '	e' → logprob: -15.500428199768066
    7. '``' → logprob: -16.125429153442383
    8. '           ' → logprob: -16.125429153442383
    9. ' ' → logprob: -17.000429153442383
    10. 'edge' → logprob: -17.000429153442383

Token 1597: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009569671005010605
    2. '2' → logprob: -4.7595696449279785
    3. 'e' → logprob: -7.2595696449279785
    4. 'p' → logprob: -9.384570121765137
    5. '(n' → logprob: -10.509570121765137
    6. '(e' → logprob: -10.509570121765137
    7. 'n' → logprob: -10.634570121765137
    8. ' =' → logprob: -11.134570121765137
    9. '(p' → logprob: -11.259570121765137
    10. '
' → logprob: -11.384570121765137

Token 1598: 'p' (ID: 79)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.040895409882068634
    2. '=' → logprob: -3.915895462036133
    3. 'p' → logprob: -3.915895462036133
    4. '   ' → logprob: -8.665895462036133
    5. ' ' → logprob: -11.165895462036133
    6. '=p' → logprob: -11.790895462036133
    7. '       ' → logprob: -11.915895462036133
    8. ' p' → logprob: -11.915895462036133
    9. '_p' → logprob: -12.165895462036133
    10. '  ' → logprob: -13.040895462036133

Token 1599: '1' (ID: 16)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.020061073824763298
    2. 'i' → logprob: -4.520061016082764
    3. ' (' → logprob: -5.770061016082764
    4. '(n' → logprob: -6.395061016082764
    5. 'p' → logprob: -7.020061016082764
    6. '```' → logprob: -7.145061016082764
    7. '[i' → logprob: -7.520061016082764
    8. '       ' → logprob: -7.645061016082764
    9. '((' → logprob: -7.770061016082764
    10. 'n' → logprob: -8.145061492919922

Token 1600: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687655329704285
    2. '=' → logprob: -1.1368765830993652
    3. '   ' → logprob: -13.011876106262207
    4. '=p' → logprob: -13.136876106262207
    5. '```' → logprob: -15.136876106262207
    6. '       ' → logprob: -15.386876106262207
    7. 'p' → logprob: -15.886876106262207
    8. ' ' → logprob: -15.886876106262207
    9. '=
' → logprob: -16.011877059936523
    10. 'polygon' → logprob: -16.136877059936523

Token 1601: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.5234084129333496
    2. ' polygon' → logprob: -0.8984084129333496
    3. '   ' → logprob: -9.273408889770508
    4. 'poly' → logprob: -9.648408889770508
    5. '(p' → logprob: -9.898408889770508
    6. 'pol' → logprob: -11.023408889770508
    7. '_polygon' → logprob: -11.148408889770508
    8. '       ' → logprob: -11.523408889770508
    9. '```' → logprob: -11.773408889770508
    10. ' (' → logprob: -12.523408889770508

Token 1602: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -2.0219828002154827e-05
    2. '[i' → logprob: -10.875020027160645
    3. '((' → logprob: -14.500020027160645
    4. '(i' → logprob: -15.250020027160645
    5. '```' → logprob: -16.00002098083496
    6. '[((' → logprob: -16.12502098083496
    7. '[
' → logprob: -16.37502098083496
    8. '   ' → logprob: -16.62502098083496
    9. '[' → logprob: -17.12502098083496
    10. '[j' → logprob: -17.62502098083496

Token 1603: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.062077928334474564
    2. 'i' → logprob: -2.8120779991149902
    3. ' (' → logprob: -9.562077522277832
    4. '{i' → logprob: -11.437077522277832
    5. '(n' → logprob: -12.062077522277832
    6. '   ' → logprob: -12.187077522277832
    7. '```' → logprob: -12.437077522277832
    8. '[i' → logprob: -12.562077522277832
    9. '           ' → logprob: -13.312077522277832
    10. '       ' → logprob: -13.812077522277832

Token 1604: '+n' (ID: 87683)
  Prédit: '+n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+n' → logprob: -0.6553901433944702
    2. '(n' → logprob: -1.1553901433944702
    3. 'n' → logprob: -2.1553902626037598
    4. '+(' → logprob: -3.2803902626037598
    5. '+' → logprob: -4.53039026260376
    6. ' +' → logprob: -6.90539026260376
    7. ' (' → logprob: -8.780389785766602
    8. '(' → logprob: -8.905389785766602
    9. '[n' → logprob: -9.655389785766602
    10. '   ' → logprob: -10.030389785766602

Token 1605: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.15899288654327393
    2. '2' → logprob: -2.4089927673339844
    3. '(' → logprob: -3.2839927673339844
    4. '[' → logprob: -4.658992767333984
    5. '(n' → logprob: -4.908992767333984
    6. '1' → logprob: -7.158992767333984
    7. 'n' → logprob: -7.158992767333984
    8. '```' → logprob: -7.158992767333984
    9. '[n' → logprob: -8.908992767333984
    10. '   ' → logprob: -9.408992767333984

Token 1606: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.0722858102526516e-05
    2. '1' → logprob: -10.375041007995605
    3. '```' → logprob: -12.625041007995605
    4. '(' → logprob: -13.000041007995605
    5. ' ' → logprob: -13.000041007995605
    6. '   ' → logprob: -15.125041007995605
    7. '...' → logprob: -15.500041007995605
    8. 'n' → logprob: -16.00004005432129
    9. '#' → logprob: -16.12504005432129
    10. 'def' → logprob: -16.18754005432129

Token 1607: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.0008310707635246217
    2. ')' → logprob: -8.00083065032959
    3. '%n' → logprob: -8.75083065032959
    4. '+' → logprob: -9.37583065032959
    5. ']%' → logprob: -9.50083065032959
    6. '%' → logprob: -9.75083065032959
    7. 'n' → logprob: -10.25083065032959
    8. '1' → logprob: -10.87583065032959
    9. ')n' → logprob: -11.37583065032959
    10. '(n' → logprob: -11.37583065032959

Token 1608: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.625000953674316
    3. ' n' → logprob: -16.125
    4. 'N' → logprob: -16.875
    5. ''n' → logprob: -17.0
    6. '(' → logprob: -17.375
    7. '   ' → logprob: -17.875
    8. '	n' → logprob: -18.0
    9. '%n' → logprob: -18.0
    10. '``' → logprob: -18.125

Token 1609: ']
' (ID: 1592)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4845474660396576
    2. ']
' → logprob: -0.98454749584198
    3. ']' → logprob: -4.6095476150512695
    4. ']
' → logprob: -9.10954761505127
    5. '%n' → logprob: -9.23454761505127
    6. '(n' → logprob: -9.35954761505127
    7. '(' → logprob: -10.23454761505127
    8. '][' → logprob: -10.35954761505127
    9. '((' → logprob: -11.10954761505127
    10. '   ' → logprob: -11.10954761505127

Token 1610: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039897624403238297
    2. 'e' → logprob: -3.2898976802825928
    3. ' e' → logprob: -6.914897441864014
    4. ',e' → logprob: -8.164897918701172
    5. '<|end|>' → logprob: -8.289897918701172
    6. ',' → logprob: -8.414897918701172
    7. '<|end|>' → logprob: -10.289897918701172
    8. '   ' → logprob: -10.289897918701172
    9. ' ' → logprob: -11.414897918701172
    10. ' =' → logprob: -12.289897918701172

Token 1611: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' (adapté à ' e') → logprob: -0.17928148806095123
    2. '(e' → logprob: -2.30428147315979
    3. ' e' → logprob: -3.17928147315979
    4. ' (' → logprob: -3.92928147315979
    5. '(p' → logprob: -6.679281711578369
    6. '((' → logprob: -6.929281711578369
    7. 'p' → logprob: -8.679281234741211
    8. '(n' → logprob: -9.179281234741211
    9. 'n' → logprob: -9.554281234741211
    10. '[(' → logprob: -9.554281234741211

Token 1612: '2' (ID: 17)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3296782672405243
    2. '1' → logprob: -2.0796782970428467
    3. '(' → logprob: -2.7046782970428467
    4. '((' → logprob: -3.4546782970428467
    5. '[(' → logprob: -3.9546782970428467
    6. '(n' → logprob: -4.204678058624268
    7. '(e' → logprob: -4.579678058624268
    8. '2' → logprob: -5.079678058624268
    9. '+' → logprob: -5.454678058624268
    10. '[i' → logprob: -6.954678058624268

Token 1613: 'p' (ID: 79)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.9437035322189331
    2. '((' → logprob: -1.568703532218933
    3. '1' → logprob: -1.693703532218933
    4. 'p' → logprob: -2.1937036514282227
    5. '+' → logprob: -3.3187036514282227
    6. '[' → logprob: -3.6937036514282227
    7. '(p' → logprob: -4.693703651428223
    8. '(' → logprob: -4.693703651428223
    9. '(e' → logprob: -5.068703651428223
    10. '(n' → logprob: -5.193703651428223

Token 1614: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04820926859974861
    2. '2' → logprob: -3.7982091903686523
    3. '[(' → logprob: -4.423209190368652
    4. '(' → logprob: -4.923209190368652
    5. '((' → logprob: -6.173209190368652
    6. '(i' → logprob: -6.423209190368652
    7. '[i' → logprob: -7.798209190368652
    8. '[' → logprob: -7.798209190368652
    9. 'p' → logprob: -8.298209190368652
    10. '(n' → logprob: -8.798209190368652

Token 1615: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759555101394653
    2. '=' → logprob: -0.8259555101394653
    3. '=p' → logprob: -11.200955390930176
    4. '=e' → logprob: -14.200955390930176
    5. '=(' → logprob: -14.325955390930176
    6. 'p' → logprob: -15.325955390930176
    7. '=
' → logprob: -16.200956344604492
    8. ' =(' → logprob: -16.450956344604492
    9. '=edge' → logprob: -16.575956344604492
    10. '=[' → logprob: -16.825956344604492

Token 1616: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.007780294865369797
    2. ' polygon' → logprob: -4.882780075073242
    3. 'poly' → logprob: -9.257780075073242
    4. '(p' → logprob: -9.632780075073242
    5. '   ' → logprob: -12.257780075073242
    6. ' (' → logprob: -12.382780075073242
    7. 'pol' → logprob: -13.257780075073242
    8. ' ' → logprob: -14.507780075073242
    9. '_polygon' → logprob: -14.882780075073242
    10. '(' → logprob: -15.132780075073242

Token 1617: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.001709805685095489
    2. '((' → logprob: -6.376709938049316
    3. '[
' → logprob: -13.001709938049316
    4. '[((' → logprob: -13.126709938049316
    5. '(n' → logprob: -14.001709938049316
    6. '(i' → logprob: -14.001709938049316
    7. '   ' → logprob: -14.626709938049316
    8. '[i' → logprob: -15.001709938049316
    9. '([(' → logprob: -15.501709938049316
    10. '`' → logprob: -15.751709938049316

Token 1618: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.066919301403686e-05
    2. 'i' → logprob: -10.000090599060059
    3. '((' → logprob: -10.500090599060059
    4. '[(' → logprob: -12.125090599060059
    5. '[i' → logprob: -12.375090599060059
    6. ' (' → logprob: -12.500090599060059
    7. '(' → logprob: -13.125090599060059
    8. '{i' → logprob: -13.875090599060059
    9. '   ' → logprob: -14.250090599060059
    10. ' ' → logprob: -16.500091552734375

Token 1619: '+n' (ID: 87683)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.32096433639526367
    2. '(i' → logprob: -1.4459643363952637
    3. '((' → logprob: -3.3209643363952637
    4. '(' → logprob: -6.445964336395264
    5. '[(' → logprob: -7.195964336395264
    6. 'n' → logprob: -8.320964813232422
    7. '+n' → logprob: -9.445964813232422
    8. ' (' → logprob: -9.570964813232422
    9. '1' → logprob: -9.695964813232422
    10. '+' → logprob: -9.945964813232422

Token 1620: '//' (ID: 393)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10128331184387207
    2. '//' → logprob: -2.726283311843872
    3. '(n' → logprob: -3.976283311843872
    4. '(' → logprob: -4.601283073425293
    5. 'n' → logprob: -6.476283073425293
    6. '((' → logprob: -8.351283073425293
    7. '1' → logprob: -8.726283073425293
    8. '```' → logprob: -10.851283073425293
    9. '
' → logprob: -10.976283073425293
    10. '(i' → logprob: -11.226283073425293

Token 1621: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002456046058796346
    2. '1' → logprob: -8.375246047973633
    3. 'n' → logprob: -12.000246047973633
    4. '(' → logprob: -12.875246047973633
    5. '%' → logprob: -13.125246047973633
    6. ' ' → logprob: -13.750246047973633
    7. '
' → logprob: -14.500246047973633
    8. '{' → logprob: -14.625246047973633
    9. '(n' → logprob: -15.000246047973633
    10. '```' → logprob: -15.000246047973633

Token 1622: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15038467943668365
    2. '1' → logprob: -2.1503846645355225
    3. '(' → logprob: -4.025384902954102
    4. '%' → logprob: -5.525384902954102
    5. ')%' → logprob: -7.150384902954102
    6. '[' → logprob: -8.275384902954102
    7. '(n' → logprob: -9.775384902954102
    8. '%n' → logprob: -10.025384902954102
    9. '()%' → logprob: -10.150384902954102
    10. '0' → logprob: -10.650384902954102

Token 1623: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020401719666551799
    2. 'n' → logprob: -8.500204086303711
    3. '%n' → logprob: -15.625204086303711
    4. '0' → logprob: -15.750204086303711
    5. '
' → logprob: -16.12520408630371
    6. '(n' → logprob: -17.12520408630371
    7. '(' → logprob: -18.00020408630371
    8. ' ' → logprob: -18.62520408630371
    9. '$n' → logprob: -18.75020408630371
    10. '2' → logprob: -19.12520408630371

Token 1624: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.4756881892681122
    2. '%n' → logprob: -0.9756882190704346
    3. ']%' → logprob: -6.6006879806518555
    4. '%' → logprob: -8.725687980651855
    5. ')' → logprob: -10.350687980651855
    6. 'n' → logprob: -10.725687980651855
    7. '```' → logprob: -11.475687980651855
    8. '()%' → logprob: -11.850687980651855
    9. '%b' → logprob: -12.350687980651855
    10. ' %' → logprob: -12.475687980651855

Token 1625: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.8624639324116288e-06
    2. '```' → logprob: -13.250001907348633
    3. '``' → logprob: -16.750001907348633
    4. '%n' → logprob: -17.500001907348633
    5. ''n' → logprob: -17.875001907348633
    6. ' n' → logprob: -18.625001907348633
    7. '	n' → logprob: -18.625001907348633
    8. '[' → logprob: -18.625001907348633
    9. '(' → logprob: -18.750001907348633
    10. '_n' → logprob: -19.125001907348633

Token 1626: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.43725472688674927
    2. 'n' → logprob: -1.1872546672821045
    3. ']
' → logprob: -3.1872546672821045
    4. ']%' → logprob: -5.687254905700684
    5. '```' → logprob: -5.812254905700684
    6. '%n' → logprob: -7.312254905700684
    7. '#' → logprob: -8.562254905700684
    8. '][' → logprob: -9.187254905700684
    9. ']
' → logprob: -9.437254905700684
    10. '%' → logprob: -9.562254905700684

Token 1627: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017624642350710928
    2. '```' → logprob: -9.375176429748535
    3. '   ' → logprob: -9.625176429748535
    4. 'e' → logprob: -11.125176429748535
    5. ' e' → logprob: -13.125176429748535
    6. '
' → logprob: -13.375176429748535
    7. '``' → logprob: -13.500176429748535
    8. '           ' → logprob: -13.750176429748535
    9. ',' → logprob: -13.875176429748535
    10. '#' → logprob: -14.000176429748535

Token 1628: ' m' (ID: 284)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.4602274000644684
    2. 'm' (adapté à ' m') → logprob: -1.085227370262146
    3. 'me' → logprob: -3.5852274894714355
    4. 'mp' → logprob: -6.5852274894714355
    5. 'e' → logprob: -6.8352274894714355
    6. 'em' → logprob: -8.085227012634277
    7. '   ' → logprob: -8.835227012634277
    8. 'a' → logprob: -8.835227012634277
    9. ' mid' → logprob: -9.710227012634277
    10. 'ma' → logprob: -9.835227012634277

Token 1629: '1' (ID: 16)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.09031801670789719
    2. '=' → logprob: -3.090317964553833
    3. '1' → logprob: -4.090318202972412
    4. ' =' → logprob: -4.215318202972412
    5. '((' → logprob: -5.590318202972412
    6. '=((' → logprob: -5.590318202972412
    7. '(' → logprob: -6.965318202972412
    8. '=(' → logprob: -7.465318202972412
    9. 'iddle' → logprob: -9.590317726135254
    10. '_' → logprob: -9.715317726135254

Token 1630: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2524300813674927
    2. ' =' → logprob: -1.5024300813674927
    3. '=((' → logprob: -7.627429962158203
    4. '=(' → logprob: -11.252429962158203
    5. ' =(' → logprob: -15.377429962158203
    6. '```' → logprob: -16.252429962158203
    7. '((' → logprob: -16.377429962158203
    8. 'x' → logprob: -16.627429962158203
    9. '=
' → logprob: -16.752429962158203
    10. '=('' → logprob: -16.752429962158203

Token 1631: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00010711929644457996
    2. '(((' → logprob: -9.250106811523438
    3. '(' → logprob: -12.125106811523438
    4. '(
' → logprob: -12.750106811523438
    5. ' ((' → logprob: -13.000106811523438
    6. '((-' → logprob: -15.500106811523438
    7. '   ' → logprob: -17.375106811523438
    8. '[((' → logprob: -18.125106811523438
    9. '(e' → logprob: -18.625106811523438
    10. '((((' → logprob: -18.875106811523438

Token 1632: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.22547511756420135
    2. '(e' → logprob: -1.6004750728607178
    3. ' (' → logprob: -10.225475311279297
    4. ' e' → logprob: -11.975475311279297
    5. '(p' → logprob: -12.350475311279297
    6. '((' → logprob: -12.600475311279297
    7. '(' → logprob: -12.725475311279297
    8. 'p' → logprob: -13.600475311279297
    9. '[e' → logprob: -13.600475311279297
    10. '   ' → logprob: -13.725475311279297

Token 1633: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7787503004074097
    2. 'e' → logprob: -0.7787503004074097
    3. '(e' → logprob: -2.528750419616699
    4. '0' → logprob: -6.778750419616699
    5. '(' → logprob: -7.528750419616699
    6. '[e' → logprob: -8.1537504196167
    7. '[' → logprob: -8.9037504196167
    8. '#' → logprob: -10.5287504196167
    9. ' e' → logprob: -10.6537504196167
    10. ' (' → logprob: -10.6537504196167

Token 1634: 'p' (ID: 79)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06392746418714523
    2. '[' → logprob: -3.188927412033081
    3. 'p' → logprob: -3.938927412033081
    4. 'i' → logprob: -7.93892765045166
    5. '1' → logprob: -7.93892765045166
    6. '[i' → logprob: -8.43892765045166
    7. '```' → logprob: -8.68892765045166
    8. '(i' → logprob: -10.81392765045166
    9. '(' → logprob: -11.06392765045166
    10. '   ' → logprob: -11.18892765045166

Token 1635: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.694766489090398e-05
    2. '[' → logprob: -9.625066757202148
    3. '(' → logprob: -14.250066757202148
    4. '   ' → logprob: -17.00006675720215
    5. '1' → logprob: -17.12506675720215
    6. ' ' → logprob: -17.62506675720215
    7. '
' → logprob: -18.12506675720215
    8. '{' → logprob: -19.75006675720215
    9. '۰' → logprob: -19.75006675720215
    10. 'i' → logprob: -19.87506675720215

Token 1636: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002188329817727208
    2. '0' → logprob: -6.127188205718994
    3. '```' → logprob: -13.377188682556152
    4. '#' → logprob: -14.502188682556152
    5. 'Sorry' → logprob: -15.127188682556152
    6. 'The' → logprob: -15.377188682556152
    7. 'Answer' → logprob: -16.127187728881836
    8. '(' → logprob: -16.877187728881836
    9. 'This' → logprob: -17.002187728881836
    10. 'Here's' → logprob: -17.127187728881836

Token 1637: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.060365608893335e-05
    2. '[' → logprob: -10.125041007995605
    3. '
' → logprob: -15.125041007995605
    4. ' ' → logprob: -16.00004005432129
    5. '```' → logprob: -16.25004005432129
    6. '   ' → logprob: -16.75004005432129
    7. '1' → logprob: -18.50004005432129
    8. '(' → logprob: -18.87504005432129
    9. '#' → logprob: -18.87504005432129
    10. '`' → logprob: -19.62504005432129

Token 1638: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00021331508469302207
    2. ' +' → logprob: -9.125213623046875
    3. '+
' → logprob: -9.750213623046875
    4. '[' → logprob: -10.875213623046875
    5. '[e' → logprob: -11.250213623046875
    6. 'e' → logprob: -11.750213623046875
    7. ']+' → logprob: -13.500213623046875
    8. '```' → logprob: -13.500213623046875
    9. ',e' → logprob: -13.875213623046875
    10. ')+' → logprob: -14.375213623046875

Token 1639: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -2.165027217415627e-05
    2. ' e' → logprob: -10.750021934509277
    3. '(e' → logprob: -15.875021934509277
    4. '   ' → logprob: -17.75002098083496
    5. '       ' → logprob: -18.50002098083496
    6. '	e' → logprob: -18.62502098083496
    7. '(' → logprob: -18.87502098083496
    8. '      ' → logprob: -19.00002098083496
    9. '  ' → logprob: -19.25002098083496
    10. ' ' → logprob: -19.37502098083496

Token 1640: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002964935847558081
    2. 'e' → logprob: -8.250296592712402
    3. '0' → logprob: -10.500296592712402
    4. '(e' → logprob: -12.125296592712402
    5. '(' → logprob: -13.500296592712402
    6. ' ' → logprob: -14.750296592712402
    7. '[' → logprob: -15.250296592712402
    8. '   ' → logprob: -16.750295639038086
    9. ' e' → logprob: -17.000295639038086
    10. '     ' → logprob: -18.125295639038086

Token 1641: 'p' (ID: 79)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07328272610902786
    2. '0' → logprob: -2.6982827186584473
    3. '[' → logprob: -5.823282718658447
    4. '(' → logprob: -7.948282718658447
    5. ' ' → logprob: -11.323283195495605
    6. '```' → logprob: -11.448283195495605
    7. '   ' → logprob: -13.073283195495605
    8. '((' → logprob: -14.198283195495605
    9. '
' → logprob: -14.573283195495605
    10. '(e' → logprob: -14.573283195495605

Token 1642: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016396844875998795
    2. '0' → logprob: -8.875164031982422
    3. '(' → logprob: -11.125164031982422
    4. '[' → logprob: -11.625164031982422
    5. ' ' → logprob: -15.375164031982422
    6. '
' → logprob: -16.375164031982422
    7. '```' → logprob: -16.750164031982422
    8. '   ' → logprob: -17.250164031982422
    9. '((' → logprob: -17.250164031982422
    10. '{' → logprob: -18.875164031982422

Token 1643: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08894698321819305
    2. '0' → logprob: -2.463947057723999
    3. '(' → logprob: -12.838947296142578
    4. '```' → logprob: -12.838947296142578
    5. '#' → logprob: -13.963947296142578
    6. ' ' → logprob: -14.963947296142578
    7. '   ' → logprob: -14.963947296142578
    8. '()[' → logprob: -15.838947296142578
    9. '1' → logprob: -15.963947296142578
    10. '
' → logprob: -16.463947296142578

Token 1644: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. '[' → logprob: -13.12500286102295
    3. '(' → logprob: -15.62500286102295
    4. ' ' → logprob: -15.62500286102295
    5. '1' → logprob: -16.125001907348633
    6. '
' → logprob: -16.875001907348633
    7. '   ' → logprob: -17.125001907348633
    8. '```' → logprob: -17.875001907348633
    9. '  ' → logprob: -18.875001907348633
    10. '{' → logprob: -19.625001907348633

Token 1645: '])/' (ID: 93047)
  Prédit: ')/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.0430959053337574
    2. '[' → logprob: -3.168095827102661
    3. ')' → logprob: -9.918095588684082
    4. '0' → logprob: -10.793095588684082
    5. ' )' → logprob: -11.793095588684082
    6. '```' → logprob: -12.168095588684082
    7. ')*' → logprob: -12.543095588684082
    8. '   ' → logprob: -12.668095588684082
    9. '1' → logprob: -13.543095588684082
    10. '*' → logprob: -13.918095588684082

Token 1646: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.3795937522663735e-05
    2. ' ' → logprob: -11.37502384185791
    3. '(' → logprob: -11.87502384185791
    4. '0' → logprob: -12.62502384185791
    5. '   ' → logprob: -14.12502384185791
    6. '```' → logprob: -14.87502384185791
    7. '1' → logprob: -15.50002384185791
    8. '[' → logprob: -15.87502384185791
    9. '((' → logprob: -16.625022888183594
    10. '  ' → logprob: -16.687522888183594

Token 1647: ',(' (ID: 27243)
  Prédit: ',('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',(' → logprob: -0.24886594712734222
    2. ',' → logprob: -1.6238659620285034
    3. ',e' → logprob: -3.873865842819214
    4. ',
' → logprob: -6.123866081237793
    5. ' ,' → logprob: -9.248866081237793
    6. ',m' → logprob: -10.373866081237793
    7. '),(' → logprob: -10.748866081237793
    8. '```' → logprob: -11.123866081237793
    9. 'm' → logprob: -11.623866081237793
    10. '(e' → logprob: -11.998866081237793

Token 1648: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.018152983859181404
    2. '(e' → logprob: -4.018153190612793
    3. ' (' → logprob: -13.518153190612793
    4. ' e' → logprob: -14.143153190612793
    5. '   ' → logprob: -15.393153190612793
    6. '```' → logprob: -15.393153190612793
    7. '	e' → logprob: -16.518152236938477
    8. ' ' → logprob: -16.518152236938477
    9. '
' → logprob: -16.643152236938477
    10. '[e' → logprob: -16.768152236938477

Token 1649: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.32363563776016235
    2. '(e' → logprob: -1.4486355781555176
    3. 'e' → logprob: -3.1986355781555176
    4. '[e' → logprob: -7.323635578155518
    5. '0' → logprob: -9.323636054992676
    6. '[' → logprob: -11.823636054992676
    7. '```' → logprob: -11.823636054992676
    8. '(' → logprob: -12.948636054992676
    9. ' (' → logprob: -12.948636054992676
    10. ' e' → logprob: -12.948636054992676

Token 1650: 'p' (ID: 79)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10110792517662048
    2. '[' → logprob: -3.1011078357696533
    3. '(' → logprob: -3.3511078357696533
    4. '(e' → logprob: -4.351108074188232
    5. '0' → logprob: -6.976108074188232
    6. 'p' → logprob: -7.351108074188232
    7. '(i' → logprob: -7.476108074188232
    8. 'e' → logprob: -7.726108074188232
    9. '[e' → logprob: -7.976108074188232
    10. '[i' → logprob: -8.726107597351074

Token 1651: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003939728485420346
    2. '[' → logprob: -8.125393867492676
    3. '(' → logprob: -9.375393867492676
    4. '0' → logprob: -11.750393867492676
    5. '   ' → logprob: -13.750393867492676
    6. 'p' → logprob: -14.250393867492676
    7. '     ' → logprob: -14.250393867492676
    8. '{' → logprob: -14.250393867492676
    9. ' ' → logprob: -14.500393867492676
    10. '(e' → logprob: -14.625393867492676

Token 1652: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0028227046132087708
    2. '0' → logprob: -5.8778228759765625
    3. '1' → logprob: -11.127822875976562
    4. '```' → logprob: -13.502822875976562
    5. '(' → logprob: -14.127822875976562
    6. '   ' → logprob: -15.252822875976562
    7. ' ' → logprob: -15.377822875976562
    8. '#' → logprob: -15.877822875976562
    9. '()[' → logprob: -15.877822875976562
    10. ' [' → logprob: -16.877822875976562

Token 1653: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020663689821958542
    2. '0' → logprob: -3.8956637382507324
    3. '[' → logprob: -9.020663261413574
    4. '
' → logprob: -15.020663261413574
    5. ' ' → logprob: -15.270663261413574
    6. '(' → logprob: -15.770663261413574
    7. '   ' → logprob: -16.02066421508789
    8. '```' → logprob: -16.52066421508789
    9. '	' → logprob: -18.52066421508789
    10. '01' → logprob: -18.70816421508789

Token 1654: ']+' (ID: 15344)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005868718726560473
    2. '0' → logprob: -7.500586986541748
    3. '1' → logprob: -11.25058650970459
    4. '+' → logprob: -11.75058650970459
    5. '```' → logprob: -12.00058650970459
    6. 'import' → logprob: -13.37558650970459
    7. '][' → logprob: -14.12558650970459
    8. '...' → logprob: -14.25058650970459
    9. 'Sorry' → logprob: -14.37558650970459
    10. '()[' → logprob: -14.62558650970459

Token 1655: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.4259644558478612e-05
    2. '(e' → logprob: -11.625014305114746
    3. ' e' → logprob: -12.625014305114746
    4. '   ' → logprob: -14.250014305114746
    5. '```' → logprob: -14.875014305114746
    6. '
' → logprob: -15.000014305114746
    7. '[e' → logprob: -16.37501335144043
    8. ' ' → logprob: -16.50001335144043
    9. '	e' → logprob: -16.75001335144043
    10. '       ' → logprob: -17.00001335144043

Token 1656: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.632542913896032e-05
    2. '[' → logprob: -10.375046730041504
    3. '(' → logprob: -12.000046730041504
    4. 'e' → logprob: -12.500046730041504
    5. '[i' → logprob: -13.750046730041504
    6. '2' → logprob: -14.000046730041504
    7. '(e' → logprob: -14.250046730041504
    8. '```' → logprob: -14.500046730041504
    9. 'p' → logprob: -14.750046730041504
    10. '(i' → logprob: -14.875046730041504

Token 1657: 'p' (ID: 79)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015490218065679073
    2. '[' → logprob: -6.501549243927002
    3. '(' → logprob: -10.501548767089844
    4. '0' → logprob: -12.001548767089844
    5. '2' → logprob: -12.376548767089844
    6. '```' → logprob: -12.876548767089844
    7. '   ' → logprob: -13.001548767089844
    8. ' ' → logprob: -13.126548767089844
    9. '
' → logprob: -14.251548767089844
    10. '#' → logprob: -15.376548767089844

Token 1658: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003100791363976896
    2. '[' → logprob: -8.500309944152832
    3. '(' → logprob: -9.250309944152832
    4. '```' → logprob: -12.375309944152832
    5. '0' → logprob: -12.625309944152832
    6. '
' → logprob: -14.000309944152832
    7. '   ' → logprob: -14.375309944152832
    8. '2' → logprob: -14.750309944152832
    9. '((' → logprob: -15.375309944152832
    10. '...' → logprob: -15.500309944152832

Token 1659: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05503642559051514
    2. '[' → logprob: -2.9300365447998047
    3. '0' → logprob: -9.055036544799805
    4. '(' → logprob: -10.805036544799805
    5. '
' → logprob: -12.555036544799805
    6. '```' → logprob: -12.555036544799805
    7. '   ' → logprob: -12.680036544799805
    8. ' ' → logprob: -13.305036544799805
    9. '#' → logprob: -13.805036544799805
    10. ')' → logprob: -14.430036544799805

Token 1660: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10022803395986557
    2. '0' → logprob: -2.3502280712127686
    3. '(' → logprob: -11.225228309631348
    4. '[' → logprob: -11.975228309631348
    5. '```' → logprob: -14.475228309631348
    6. ' ' → logprob: -14.600228309631348
    7. '   ' → logprob: -15.100228309631348
    8. '
' → logprob: -15.100228309631348
    9. '((' → logprob: -16.97522735595703
    10. '2' → logprob: -17.60022735595703

Token 1661: '])/' (ID: 93047)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005375341512262821
    2. '0' → logprob: -5.755375385284424
    3. '1' → logprob: -6.130375385284424
    4. '#' → logprob: -12.130374908447266
    5. '+' → logprob: -12.630374908447266
    6. '   ' → logprob: -12.755374908447266
    7. '```' → logprob: -13.130374908447266
    8. 'def' → logprob: -14.130374908447266
    9. 'import' → logprob: -14.380374908447266
    10. '])/' → logprob: -14.630374908447266

Token 1662: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0027402082923799753
    2. '1' → logprob: -6.377740383148193
    3. '0' → logprob: -6.877740383148193
    4. ' ' → logprob: -12.877739906311035
    5. '(' → logprob: -13.877739906311035
    6. 'm' → logprob: -14.127739906311035
    7. '   ' → logprob: -14.252739906311035
    8. '
' → logprob: -14.377739906311035
    9. '```' → logprob: -14.752739906311035
    10. '[' → logprob: -14.877739906311035

Token 1663: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.26401105523109436
    2. ')' → logprob: -1.889011025428772
    3. ',m' → logprob: -3.1390111446380615
    4. ',' → logprob: -3.3890111446380615
    5. '       ' → logprob: -6.139010906219482
    6. 'm' → logprob: -7.264010906219482
    7. ')m' → logprob: -7.889010906219482
    8. '   ' → logprob: -8.13901138305664
    9. ',
' → logprob: -9.63901138305664
    10. ')
' → logprob: -9.88901138305664

Token 1664: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036943741142749786
    2. 'm' → logprob: -5.628694534301758
    3. ' m' → logprob: -9.378694534301758
    4. '```' → logprob: -12.503694534301758
    5. '   ' → logprob: -13.253694534301758
    6. ',' → logprob: -13.253694534301758
    7. '           ' → logprob: -14.378694534301758
    8. ' ' → logprob: -14.628694534301758
    9. 'e' → logprob: -15.378694534301758
    10. ',m' → logprob: -15.503694534301758

Token 1665: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.020298253744840622
    2. ' m' → logprob: -4.020298480987549
    3. '       ' → logprob: -6.145298480987549
    4. ' ' → logprob: -14.27029800415039
    5. '	m' → logprob: -14.27029800415039
    6. '   ' → logprob: -14.77029800415039
    7. '           ' → logprob: -15.39529800415039
    8. '        ' → logprob: -15.64529800415039
    9. '```' → logprob: -15.64529800415039
    10. '     ' → logprob: -15.77029800415039

Token 1666: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6132122874259949
    2. '1' → logprob: -0.9882122874259949
    3. '=' → logprob: -3.1132123470306396
    4. ' =' → logprob: -3.2382123470306396
    5. '=(' → logprob: -6.6132121086120605
    6. 'for' → logprob: -7.6132121086120605
    7. '((' → logprob: -9.113212585449219
    8. '(' → logprob: -9.113212585449219
    9. '=((' → logprob: -9.238212585449219
    10. '(e' → logprob: -9.988212585449219

Token 1667: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12696443498134613
    2. '=' → logprob: -2.1269643306732178
    3. '=((' → logprob: -10.251964569091797
    4. '=(' → logprob: -15.126964569091797
    5. '   ' → logprob: -15.376964569091797
    6. '=
' → logprob: -15.876964569091797
    7. '```' → logprob: -16.001964569091797
    8. '((' → logprob: -16.126964569091797
    9. ' ' → logprob: -16.626964569091797
    10. ')' → logprob: -17.001964569091797

Token 1668: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.4498052223643754e-05
    2. ' ((' → logprob: -11.250014305114746
    3. '(((' → logprob: -14.625014305114746
    4. ' ' → logprob: -15.000014305114746
    5. '(
' → logprob: -15.250014305114746
    6. '(' → logprob: -15.750014305114746
    7. '   ' → logprob: -16.000015258789062
    8. '((-' → logprob: -16.625015258789062
    9. '  ' → logprob: -17.875015258789062
    10. '	' → logprob: -18.125015258789062

Token 1669: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.12699352204799652
    2. '(e' → logprob: -2.126993417739868
    3. ' (' → logprob: -9.876993179321289
    4. ' e' → logprob: -12.876993179321289
    5. '
' → logprob: -13.376993179321289
    6. '(' → logprob: -13.501993179321289
    7. '((' → logprob: -13.501993179321289
    8. '   ' → logprob: -13.876993179321289
    9. '(
' → logprob: -14.001993179321289
    10. '[e' → logprob: -14.439493179321289

Token 1670: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8973057270050049
    2. '(e' → logprob: -0.8973057270050049
    3. 'e' → logprob: -2.022305727005005
    4. '2' → logprob: -3.397305727005005
    5. '[e' → logprob: -4.647305488586426
    6. 'n' → logprob: -5.522305488586426
    7. 'p' → logprob: -5.647305488586426
    8. '(p' → logprob: -7.897305488586426
    9. '((' → logprob: -8.147305488586426
    10. '[(' → logprob: -8.397305488586426

Token 1671: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.000686817744281143
    2. '[' → logprob: -7.5006866455078125
    3. '(' → logprob: -9.875686645507812
    4. '(e' → logprob: -10.375686645507812
    5. '[(' → logprob: -11.375686645507812
    6. '0' → logprob: -11.500686645507812
    7. 'e' → logprob: -12.000686645507812
    8. '(p' → logprob: -12.125686645507812
    9. '[e' → logprob: -12.125686645507812
    10. '1' → logprob: -12.750686645507812

Token 1672: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.028589097782969475
    2. 'p' → logprob: -4.153589248657227
    3. '2' → logprob: -4.653589248657227
    4. '(' → logprob: -6.028589248657227
    5. '[' → logprob: -8.153589248657227
    6. '0' → logprob: -8.403589248657227
    7. '(p' → logprob: -11.153589248657227
    8. '```' → logprob: -12.653589248657227
    9. '((' → logprob: -12.903589248657227
    10. '{' → logprob: -13.153589248657227

Token 1673: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0087516784551553e-05
    2. '0' → logprob: -12.75001049041748
    3. '(' → logprob: -13.00001049041748
    4. '```' → logprob: -13.50001049041748
    5. 'm' → logprob: -13.62501049041748
    6. '#' → logprob: -14.75001049041748
    7. '   ' → logprob: -15.25001049041748
    8. 'e' → logprob: -15.62501049041748
    9. 'Sorry' → logprob: -15.87501049041748
    10. '...' → logprob: -16.000009536743164

Token 1674: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043555660522542894
    2. '[' → logprob: -7.7504353523254395
    3. '(' → logprob: -12.875435829162598
    4. '
' → logprob: -14.125435829162598
    5. ' ' → logprob: -14.625435829162598
    6. '#' → logprob: -15.250435829162598
    7. '   ' → logprob: -15.375435829162598
    8. '1' → logprob: -15.500435829162598
    9. '```' → logprob: -15.750435829162598
    10. '{' → logprob: -16.37543487548828

Token 1675: ']+' (ID: 15344)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -9.209963900502771e-05
    2. '+' → logprob: -9.375092506408691
    3. 'm' → logprob: -12.500092506408691
    4. '+[' → logprob: -13.750092506408691
    5. '][' → logprob: -14.375092506408691
    6. '#' → logprob: -15.250092506408691
    7. 'e' → logprob: -15.375092506408691
    8. '0' → logprob: -15.500092506408691
    9. '```' → logprob: -16.375091552734375
    10. '+m' → logprob: -16.500091552734375

Token 1676: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -6.392202976712724e-06
    2. '(e' → logprob: -12.250006675720215
    3. ' e' → logprob: -14.125006675720215
    4. '
' → logprob: -15.125006675720215
    5. '   ' → logprob: -15.625006675720215
    6. '(' → logprob: -16.3750057220459
    7. '[e' → logprob: -17.0000057220459
    8. '       ' → logprob: -17.1250057220459
    9. '     ' → logprob: -17.2500057220459
    10. '	e' → logprob: -17.2500057220459

Token 1677: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7174291014671326
    2. '2' → logprob: -0.9674291014671326
    3. '0' → logprob: -2.0924291610717773
    4. '[' → logprob: -5.217429161071777
    5. '(' → logprob: -6.217429161071777
    6. 'e' → logprob: -7.092429161071777
    7. ' ' → logprob: -9.342429161071777
    8. '```' → logprob: -9.717429161071777
    9. '
' → logprob: -9.967429161071777
    10. '   ' → logprob: -10.717429161071777

Token 1678: 'p' (ID: 79)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00019769940990954638
    2. '[' → logprob: -9.250197410583496
    3. '1' → logprob: -9.375197410583496
    4. '(' → logprob: -11.750197410583496
    5. 'p' → logprob: -12.250197410583496
    6. '[p' → logprob: -13.750197410583496
    7. '[(' → logprob: -14.250197410583496
    8. '((' → logprob: -14.625197410583496
    9. ' ' → logprob: -14.750197410583496
    10. '[i' → logprob: -15.125197410583496

Token 1679: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1014300137758255
    2. '1' → logprob: -2.3514299392700195
    3. '[' → logprob: -6.7264299392700195
    4. '(' → logprob: -11.35142993927002
    5. '```' → logprob: -12.72642993927002
    6. '0' → logprob: -13.10142993927002
    7. '<|end|>' → logprob: -13.10142993927002
    8. '   ' → logprob: -13.22642993927002
    9. ' ' → logprob: -13.72642993927002
    10. 'n' → logprob: -15.41392993927002

Token 1680: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000730185944121331
    2. '0' → logprob: -7.250730037689209
    3. '```' → logprob: -11.750730514526367
    4. '2' → logprob: -12.375730514526367
    5. '(' → logprob: -12.500730514526367
    6. '1' → logprob: -13.375730514526367
    7. '#' → logprob: -14.375730514526367
    8. '   ' → logprob: -14.750730514526367
    9. 'm' → logprob: -15.000730514526367
    10. 'def' → logprob: -15.750730514526367

Token 1681: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0234137661755085
    2. '[' → logprob: -3.77341365814209
    3. '(' → logprob: -8.77341365814209
    4. '1' → logprob: -11.77341365814209
    5. '((' → logprob: -12.27341365814209
    6. '   ' → logprob: -15.39841365814209
    7. '[i' → logprob: -15.52341365814209
    8. '[(' → logprob: -15.64841365814209
    9. '	' → logprob: -15.77341365814209
    10. ' ' → logprob: -15.89841365814209

Token 1682: '])/' (ID: 93047)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0024781543761491776
    2. '0' → logprob: -6.127478122711182
    3. '1' → logprob: -8.37747859954834
    4. '(' → logprob: -10.62747859954834
    5. '#' → logprob: -10.75247859954834
    6. ')/' → logprob: -12.00247859954834
    7. '   ' → logprob: -13.50247859954834
    8. ')' → logprob: -13.62747859954834
    9. '```' → logprob: -13.75247859954834
    10. 'def' → logprob: -13.87747859954834

Token 1683: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010123644955456257
    2. '0' → logprob: -4.8851237297058105
    3. '1' → logprob: -6.1351237297058105
    4. '(' → logprob: -8.135123252868652
    5. ' ' → logprob: -10.885123252868652
    6. '((' → logprob: -11.135123252868652
    7. '```' → logprob: -12.385123252868652
    8. '   ' → logprob: -12.510123252868652
    9. 'm' → logprob: -12.885123252868652
    10. '[' → logprob: -13.197623252868652

Token 1684: ',(' (ID: 27243)
  Prédit: ')/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.6008056998252869
    2. '[' → logprob: -0.9758056998252869
    3. 'm' → logprob: -3.4758057594299316
    4. '/' → logprob: -3.7258057594299316
    5. ',' → logprob: -4.475805759429932
    6. ')/(' → logprob: -5.475805759429932
    7. ',m' → logprob: -6.850805759429932
    8. '()/' → logprob: -7.100805759429932
    9. ')' → logprob: -7.225805759429932
    10. '(m' → logprob: -7.725805759429932

Token 1685: 'e' (ID: 68)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.002449969295412302
    2. '(e' → logprob: -6.377449989318848
    3. 'm' → logprob: -7.252449989318848
    4. ' (' → logprob: -10.377449989318848
    5. '((' → logprob: -13.002449989318848
    6. '```' → logprob: -13.627449989318848
    7. '``' → logprob: -14.127449989318848
    8. '(' → logprob: -14.377449989318848
    9. '
' → logprob: -14.377449989318848
    10. 'e' → logprob: -14.502449989318848

Token 1686: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2173827737569809
    2. '[' → logprob: -1.967382788658142
    3. 'e' → logprob: -3.7173826694488525
    4. '2' → logprob: -4.467382907867432
    5. '(' → logprob: -4.717382907867432
    6. '[e' → logprob: -5.092382907867432
    7. '(e' → logprob: -5.842382907867432
    8. '[i' → logprob: -6.717382907867432
    9. '(i' → logprob: -8.967382431030273
    10. '```' → logprob: -9.092382431030273

Token 1687: 'p' (ID: 79)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0176790002733469
    2. '[' → logprob: -4.517679214477539
    3. '0' → logprob: -5.142679214477539
    4. '(' → logprob: -7.642679214477539
    5. '[i' → logprob: -9.517679214477539
    6. 'p' → logprob: -9.642679214477539
    7. '```' → logprob: -10.392679214477539
    8. 'i' → logprob: -11.017679214477539
    9. ']' → logprob: -11.517679214477539
    10. '...' → logprob: -11.517679214477539

Token 1688: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.6457742175552994e-05
    2. '0' → logprob: -10.250056266784668
    3. '[' → logprob: -11.500056266784668
    4. '(' → logprob: -11.750056266784668
    5. '
' → logprob: -13.875056266784668
    6. '```' → logprob: -14.375056266784668
    7. 'i' → logprob: -15.000056266784668
    8. ' ' → logprob: -15.250056266784668
    9. '   ' → logprob: -15.375056266784668
    10. '-' → logprob: -16.062557220458984

Token 1689: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010998018842656165
    2. '0' → logprob: -9.250109672546387
    3. '(' → logprob: -12.375109672546387
    4. '```' → logprob: -13.000109672546387
    5. ')[' → logprob: -13.500109672546387
    6. '   ' → logprob: -14.000109672546387
    7. '#' → logprob: -14.250109672546387
    8. '1' → logprob: -14.250109672546387
    9. ' [' → logprob: -14.375109672546387
    10. '][' → logprob: -14.625109672546387

Token 1690: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1806134432554245
    2. '1' → logprob: -1.805613398551941
    3. '[' → logprob: -7.0556135177612305
    4. '
' → logprob: -13.30561351776123
    5. '```' → logprob: -13.55561351776123
    6. '(' → logprob: -14.05561351776123
    7. ' ' → logprob: -14.55561351776123
    8. '   ' → logprob: -15.05561351776123
    9. '-' → logprob: -15.18061351776123
    10. '...' → logprob: -15.43061351776123

Token 1691: ']+' (ID: 15344)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003189597511664033
    2. '+' → logprob: -5.753189563751221
    3. ']+' → logprob: -12.378190040588379
    4. '+[' → logprob: -12.878190040588379
    5. '][' → logprob: -13.628190040588379
    6. ' +' → logprob: -13.628190040588379
    7. '```' → logprob: -14.003190040588379
    8. ')[' → logprob: -14.753190040588379
    9. '()[' → logprob: -14.878190040588379
    10. ')+' → logprob: -14.878190040588379

Token 1692: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.029688935726881027
    2. 'm' → logprob: -4.154688835144043
    3. '0' → logprob: -4.779688835144043
    4. '(e' → logprob: -6.154688835144043
    5. '(' → logprob: -6.654688835144043
    6. '1' → logprob: -7.529688835144043
    7. '(m' → logprob: -8.029688835144043
    8. ' e' → logprob: -8.029688835144043
    9. '```' → logprob: -8.904688835144043
    10. '[e' → logprob: -9.029688835144043

Token 1693: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -3.273621405242011e-05
    2. '[' → logprob: -11.125032424926758
    3. '
' → logprob: -12.125032424926758
    4. '(' → logprob: -12.250032424926758
    5. '-' → logprob: -13.500032424926758
    6. '0' → logprob: -14.125032424926758
    7. '```' → logprob: -14.125032424926758
    8. '   ' → logprob: -14.375032424926758
    9. 'e' → logprob: -14.500032424926758
    10. '[i' → logprob: -14.750032424926758

Token 1694: 'p' (ID: 79)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5768685340881348
    2. '1' → logprob: -0.8268685340881348
    3. '[' → logprob: -7.451868534088135
    4. '(' → logprob: -9.201868057250977
    5. '%' → logprob: -9.326868057250977
    6. '+' → logprob: -10.451868057250977
    7. '[i' → logprob: -10.701868057250977
    8. '```' → logprob: -10.701868057250977
    9. 'p' → logprob: -10.826868057250977
    10. '   ' → logprob: -11.826868057250977

Token 1695: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1002325564622879
    2. '1' → logprob: -2.3502326011657715
    3. '[' → logprob: -11.225232124328613
    4. '   ' → logprob: -12.225232124328613
    5. '(' → logprob: -13.350232124328613
    6. '```' → logprob: -13.350232124328613
    7. '0' → logprob: -13.600232124328613
    8. '
' → logprob: -15.100232124328613
    9. ' ' → logprob: -15.100232124328613
    10. '...' → logprob: -15.912732124328613

Token 1696: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.034463297575712204
    2. '[' → logprob: -3.409463405609131
    3. '```' → logprob: -7.659463405609131
    4. '(' → logprob: -8.909462928771973
    5. '0' → logprob: -9.159462928771973
    6. '...' → logprob: -10.534462928771973
    7. '
' → logprob: -10.909462928771973
    8. '   ' → logprob: -11.034462928771973
    9. '2' → logprob: -11.534462928771973
    10. '``' → logprob: -11.909462928771973

Token 1697: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031818747520446777
    2. '0' → logprob: -5.7531819343566895
    3. '[' → logprob: -13.503181457519531
    4. '
' → logprob: -13.503181457519531
    5. '```' → logprob: -15.003181457519531
    6. '-' → logprob: -15.253181457519531
    7. '(' → logprob: -15.253181457519531
    8. ' ' → logprob: -15.628181457519531
    9. '   ' → logprob: -16.00318145751953
    10. '...' → logprob: -16.37818145751953

Token 1698: '])/' (ID: 93047)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.34918034076690674
    2. '0' → logprob: -1.2241803407669067
    3. '1' → logprob: -7.349180221557617
    4. '```' → logprob: -10.849180221557617
    5. '#' → logprob: -11.099180221557617
    6. ')' → logprob: -11.599180221557617
    7. ')][' → logprob: -11.599180221557617
    8. ')[' → logprob: -11.724180221557617
    9. '...' → logprob: -12.224180221557617
    10. '][' → logprob: -12.474180221557617

Token 1699: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10358711332082748
    2. '2' → logprob: -2.3535871505737305
    3. '0' → logprob: -5.8535871505737305
    4. '(' → logprob: -7.7285871505737305
    5. '[' → logprob: -10.60358715057373
    6. 'n' → logprob: -11.60358715057373
    7. '   ' → logprob: -12.10358715057373
    8. '```' → logprob: -12.22858715057373
    9. ' ' → logprob: -12.60358715057373
    10. '
' → logprob: -12.79108715057373

Token 1700: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05618433281779289
    2. ')
' → logprob: -3.4311842918395996
    3. ')' → logprob: -3.8061842918395996
    4. '
' → logprob: -11.056184768676758
    5. '):
' → logprob: -11.306184768676758
    6. '#' → logprob: -11.681184768676758
    7. ')
' → logprob: -12.806184768676758
    8. '   ' → logprob: -13.056184768676758
    9. 'if' → logprob: -13.431184768676758
    10. '```' → logprob: -13.681184768676758

Token 1701: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00041637211688794196
    2. '   ' → logprob: -8.37541675567627
    3. '<|end|>' → logprob: -9.50041675567627
    4. 'a' → logprob: -9.62541675567627
    5. ' a' → logprob: -11.00041675567627
    6. '        
' → logprob: -12.12541675567627
    7. ',' → logprob: -12.12541675567627
    8. '           ' → logprob: -12.75041675567627
    9. '```' → logprob: -12.75041675567627
    10. ')' → logprob: -12.87541675567627

Token 1702: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0080734733492136
    2. 'a' → logprob: -4.883073329925537
    3. ' a' → logprob: -8.383073806762695
    4. 'if' (adapté à ' if') → logprob: -8.758073806762695
    5. ' if' → logprob: -10.508073806762695
    6. '   ' → logprob: -10.883073806762695
    7. '#' → logprob: -11.133073806762695
    8. '        
' → logprob: -12.633073806762695
    9. '           ' → logprob: -12.633073806762695
    10. '```' → logprob: -12.633073806762695

Token 1703: ' equal' (ID: 12629)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0019288709154352546
    2. ' check' → logprob: -6.251928806304932
    3. 'not' → logprob: -16.251928329467773
    4. 'abs' → logprob: -16.626928329467773
    5. ' ' → logprob: -16.876928329467773
    6. '(check' → logprob: -17.001928329467773
    7. '   ' → logprob: -17.126928329467773
    8. '  ' → logprob: -18.251928329467773
    9. ' not' → logprob: -18.501928329467773
    10. 'all' → logprob: -19.001928329467773

Token 1704: '_points' (ID: 30070)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.000840715249069035
    2. 'm' → logprob: -7.375840663909912
    3. '((' → logprob: -9.50084114074707
    4. '(abs' → logprob: -10.00084114074707
    5. '_points' → logprob: -10.62584114074707
    6. 'abs' → logprob: -11.12584114074707
    7. 'def' → logprob: -11.12584114074707
    8. '   ' → logprob: -11.37584114074707
    9. '```' → logprob: -11.87584114074707
    10. '(
' → logprob: -12.25084114074707

Token 1705: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.2664456789934775e-06
    2. '       ' → logprob: -14.625000953674316
    3. ' (' → logprob: -15.375000953674316
    4. '((' → logprob: -15.750000953674316
    5. 'm' → logprob: -15.875000953674316
    6. '   ' → logprob: -15.875000953674316
    7. '           ' → logprob: -16.375001907348633
    8. '```' → logprob: -17.375001907348633
    9. '(' → logprob: -18.000001907348633
    10. '	m' → logprob: -18.875001907348633

Token 1706: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013779717264696956
    2. '(m' → logprob: -6.626378059387207
    3. 'm' → logprob: -10.251378059387207
    4. '```' → logprob: -12.251378059387207
    5. '[m' → logprob: -12.376378059387207
    6. '=m' → logprob: -12.751378059387207
    7. ',m' → logprob: -13.001378059387207
    8. ' m' → logprob: -13.626378059387207
    9. '   ' → logprob: -15.251378059387207
    10. '<m' → logprob: -15.751378059387207

Token 1707: ',m' (ID: 26648)
  Prédit: ',m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',m' → logprob: -0.4742324650287628
    2. ',' → logprob: -0.9742324352264404
    3. ' ,' → logprob: -9.47423267364502
    4. 'm' → logprob: -10.09923267364502
    5. ',
' → logprob: -11.09923267364502
    6. '(m' → logprob: -12.34923267364502
    7. ',(' → logprob: -12.47423267364502
    8. '       ' → logprob: -12.72423267364502
    9. '   ' → logprob: -13.22423267364502
    10. '```' → logprob: -13.72423267364502

Token 1708: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0025169195141643286
    2. '1' → logprob: -6.002516746520996
    3. 'm' → logprob: -10.127516746520996
    4. '```' → logprob: -14.377516746520996
    5. '(m' → logprob: -15.252516746520996
    6. '(' → logprob: -15.502516746520996
    7. '   ' → logprob: -16.377517700195312
    8. 'c' → logprob: -16.752517700195312
    9. '[' → logprob: -17.502517700195312
    10. '<|end|>' → logprob: -17.877517700195312

Token 1709: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2979009449481964
    2. '           ' → logprob: -1.922900915145874
    3. ':
' → logprob: -3.047900915145874
    4. '       ' → logprob: -3.172900915145874
    5. ':' → logprob: -5.172901153564453
    6. ')==' → logprob: -5.297901153564453
    7. '):' → logprob: -5.797901153564453
    8. ')' → logprob: -5.922901153564453
    9. ' and' → logprob: -6.422901153564453
    10. ' or' → logprob: -6.547901153564453

Token 1710: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003921847674064338
    2. '       ' → logprob: -8.625391960144043
    3. ' continue' → logprob: -9.125391960144043
    4. 'continue' → logprob: -10.000391960144043
    5. '```' → logprob: -10.625391960144043
    6. '               ' → logprob: -11.625391960144043
    7. '	       ' → logprob: -12.000391960144043
    8. ':' → logprob: -12.500391960144043
    9. '<|end|>' → logprob: -12.875391960144043
    10. '          ' → logprob: -13.125391960144043

Token 1711: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48689332604408264
    2. '       ' → logprob: -1.6118932962417603
    3. 'continue' → logprob: -2.23689341545105
    4. ' continue' → logprob: -2.73689341545105
    5. '               ' → logprob: -5.361893177032471
    6. 'a' → logprob: -5.486893177032471
    7. ' a' → logprob: -6.486893177032471
    8. '   ' → logprob: -6.486893177032471
    9. ' if' → logprob: -7.486893177032471
    10. 'if' → logprob: -7.611893177032471

Token 1712: ' axis' (ID: 16300)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08087313175201416
    2. '           ' → logprob: -2.9558730125427246
    3. 'continue' → logprob: -4.080873012542725
    4. '#' → logprob: -4.830873012542725
    5. 'if' → logprob: -8.330873489379883
    6. ' a' → logprob: -9.205873489379883
    7. '       ' → logprob: -9.330873489379883
    8. '   ' → logprob: -9.580873489379883
    9. ' continue' → logprob: -9.580873489379883
    10. 'vx' → logprob: -10.330873489379883

Token 1713: ' line' (ID: 2543)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40637993812561035
    2. ' =' → logprob: -1.6563799381256104
    3. '=' → logprob: -2.0313799381256104
    4. '=line' → logprob: -5.531379699707031
    5. '=a' → logprob: -6.156379699707031
    6. 'a' → logprob: -6.281379699707031
    7. 'continue' → logprob: -6.906379699707031
    8. '   ' → logprob: -7.781379699707031
    9. '               ' → logprob: -8.156379699707031
    10. '       ' → logprob: -8.281379699707031

Token 1714: ' through' (ID: 1819)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04251868277788162
    2. ' =' → logprob: -4.167518615722656
    3. '=' → logprob: -4.417518615722656
    4. 'a' → logprob: -5.417518615722656
    5. '               ' → logprob: -5.667518615722656
    6. '       ' → logprob: -6.167518615722656
    7. '=a' → logprob: -7.042518615722656
    8. 'continue' → logprob: -7.167518615722656
    9. '=line' → logprob: -7.167518615722656
    10. ':' → logprob: -8.417518615722656

Token 1715: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -8.65707261255011e-06
    2. '           ' → logprob: -12.500008583068848
    3. ' m' → logprob: -12.750008583068848
    4. '(m' → logprob: -13.625008583068848
    5. '```' → logprob: -15.250008583068848
    6. '       ' → logprob: -15.375008583068848
    7. '
' → logprob: -16.125009536743164
    8. 'e' → logprob: -16.375009536743164
    9. '   ' → logprob: -16.875009536743164
    10. 'a' → logprob: -17.250009536743164

Token 1716: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001783475512638688
    2. 'm' → logprob: -6.37678337097168
    3. '(m' → logprob: -9.50178337097168
    4. '(' → logprob: -12.62678337097168
    5. '=' → logprob: -13.87678337097168
    6. '           ' → logprob: -14.75178337097168
    7. ' =' → logprob: -14.87678337097168
    8. '=m' → logprob: -14.87678337097168
    9. 'for' → logprob: -15.62678337097168
    10. ',m' → logprob: -15.75178337097168

Token 1717: ',m' (ID: 26648)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04185789078474045
    2. ' and' → logprob: -3.666857957839966
    3. ',' → logprob: -5.791857719421387
    4. 'a' → logprob: -5.791857719421387
    5. ' a' → logprob: -5.916857719421387
    6. ' with' → logprob: -5.916857719421387
    7. ' =' → logprob: -5.916857719421387
    8. 'and' → logprob: -8.541857719421387
    9. ' (' → logprob: -8.541857719421387
    10. '(a' → logprob: -8.791857719421387

Token 1718: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '1' → logprob: -18.125
    3. '(m' → logprob: -20.125
    4. '۲' → logprob: -20.375
    5. '₂' → logprob: -20.625
    6. '２' → logprob: -20.875
    7. '```' → logprob: -21.0
    8. '(' → logprob: -21.5
    9. '
' → logprob: -22.125
    10. 'm' → logprob: -22.75

Token 1719: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04717625677585602
    2. ':' → logprob: -4.297176361083984
    3. '               ' → logprob: -4.672176361083984
    4. ':
' → logprob: -4.797176361083984
    5. '       ' → logprob: -5.422176361083984
    6. ' continue' → logprob: -5.547176361083984
    7. 'continue' → logprob: -5.797176361083984
    8. ',' → logprob: -6.672176361083984
    9. ' and' → logprob: -7.047176361083984
    10. '<|end|>' → logprob: -7.922176361083984

Token 1720: ' ill' (ID: 6486)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.7966483235359192
    2. 'm' → logprob: -1.5466482639312744
    3. 'print' → logprob: -1.6716482639312744
    4. 'False' → logprob: -3.1716482639312744
    5. 'None' → logprob: -3.2966482639312744
    6. '#' → logprob: -4.0466485023498535
    7. 'continue' → logprob: -4.1716485023498535
    8. 'e' → logprob: -4.6716485023498535
    9. '(e' → logprob: -5.1716485023498535
    10. '   ' → logprob: -5.4216485023498535

Token 1721: ' defined' (ID: 9113)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7595900297164917
    2. '           ' → logprob: -0.7595900297164917
    3. 'if' → logprob: -3.3845901489257812
    4. '1' → logprob: -4.759590148925781
    5. '(m' → logprob: -5.009590148925781
    6. 'continue' → logprob: -6.134590148925781
    7. '=' → logprob: -6.384590148925781
    8. '       ' → logprob: -6.384590148925781
    9. '(' → logprob: -6.634590148925781
    10. '#' → logprob: -7.009590148925781

Token 1722: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1490604132413864
    2. ' continue' → logprob: -2.5240604877471924
    3. 'continue' → logprob: -3.2740604877471924
    4. '       ' → logprob: -4.899060249328613
    5. ':
' → logprob: -5.274060249328613
    6. ':' → logprob: -5.774060249328613
    7. '               ' → logprob: -6.024060249328613
    8. '
' → logprob: -6.649060249328613
    9. ',' → logprob: -7.399060249328613
    10. ' (' → logprob: -8.899060249328613

Token 1723: 'same' (ID: 48581)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.03935371711850166
    2. '           ' → logprob: -3.664353609085083
    3. '               ' → logprob: -4.664353847503662
    4. ' continue' → logprob: -6.039353847503662
    5. '#' → logprob: -7.039353847503662
    6. '       ' → logprob: -9.164353370666504
    7. 'print' → logprob: -9.914353370666504
    8. 'pass' → logprob: -9.914353370666504
    9. '   ' → logprob: -10.539353370666504
    10. '
' → logprob: -10.664353370666504

Token 1724: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.05751381441950798
    2. 'm' → logprob: -3.30751371383667
    3. 'line' → logprob: -4.80751371383667
    4. 'points' → logprob: -5.43251371383667
    5. ')' → logprob: -5.68251371383667
    6. '#' → logprob: -7.18251371383667
    7. '
' → logprob: -7.55751371383667
    8. ' point' → logprob: -7.80751371383667
    9. '_point' → logprob: -8.057514190673828
    10. ' line' → logprob: -8.557514190673828

Token 1725: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5977621078491211
    2. ',' → logprob: -1.972762107849121
    3. '):
' → logprob: -2.222762107849121
    4. ')' → logprob: -2.597762107849121
    5. ')
' → logprob: -3.097762107849121
    6. ':
' → logprob: -3.472762107849121
    7. ':' → logprob: -3.597762107849121
    8. '):' → logprob: -4.972762107849121
    9. '),' → logprob: -5.222762107849121
    10. '       ' → logprob: -5.722762107849121

Token 1726: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007360394578427076
    2. 'continue' → logprob: -5.507360458374023
    3. ' continue' → logprob: -6.382360458374023
    4. '       ' → logprob: -6.632360458374023
    5. '               ' → logprob: -8.507360458374023
    6. '   ' → logprob: -10.507360458374023
    7. ',' → logprob: -11.007360458374023
    8. '	       ' → logprob: -12.257360458374023
    9. '		' → logprob: -13.007360458374023
    10. '#' → logprob: -13.132360458374023

Token 1727: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030285751447081566
    2. 'continue' (adapté à ' continue') → logprob: -3.6552858352661133
    3. '               ' → logprob: -6.030285835266113
    4. ' continue' → logprob: -7.030285835266113
    5. '       ' → logprob: -7.405285835266113
    6. '   ' → logprob: -9.530285835266113
    7. '```' → logprob: -13.155285835266113
    8. '
' → logprob: -13.405285835266113
    9. '	continue' → logprob: -14.405285835266113
    10. 'pass' → logprob: -14.530285835266113

Token 1728: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022055702283978462
    2. '        
' → logprob: -6.5022053718566895
    3. '
' → logprob: -7.6272053718566895
    4. 'a' → logprob: -9.377205848693848
    5. '<|end|>' → logprob: -10.002205848693848
    6. '```' → logprob: -10.877205848693848
    7. 'b' → logprob: -11.377205848693848
    8. '   ' → logprob: -11.502205848693848
    9. ',' → logprob: -11.627205848693848
    10. ')' → logprob: -12.627205848693848

Token 1729: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000317231344524771
    2. '   ' → logprob: -8.500317573547363
    3. '```' → logprob: -9.625317573547363
    4. '<|end|>' → logprob: -11.500317573547363
    5. '        
' → logprob: -11.625317573547363
    6. '           ' → logprob: -11.750317573547363
    7. '​' → logprob: -12.625317573547363
    8. 'continue' → logprob: -12.750317573547363
    9. ')' → logprob: -12.750317573547363
    10. '
' → logprob: -13.250317573547363

Token 1730: ' if' (ID: 538)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4218176603317261
    2. '       ' → logprob: -1.671817660331726
    3. 'if' (adapté à ' if') → logprob: -1.921817660331726
    4. '   ' → logprob: -4.921817779541016
    5. '           ' → logprob: -6.796817779541016
    6. ' if' → logprob: -7.921817779541016
    7. '```' → logprob: -7.921817779541016
    8. ' a' → logprob: -8.296817779541016
    9. 'for' → logprob: -8.546817779541016
    10. 'continue' → logprob: -9.046817779541016

Token 1731: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.10020828247070312
    2. ' check' → logprob: -2.350208282470703
    3. 'not' → logprob: -14.600208282470703
    4. ' not' → logprob: -14.975208282470703
    5. '   ' → logprob: -15.350208282470703
    6. '(check' → logprob: -15.475208282470703
    7. '           ' → logprob: -15.600208282470703
    8. ' ' → logprob: -16.100208282470703
    9. '       ' → logprob: -16.850208282470703
    10. '    ' → logprob: -17.100208282470703

Token 1732: '_axis' (ID: 50852)
  Prédit: '_axis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_axis' → logprob: -0.00016885579680092633
    2. 'axis' → logprob: -9.250168800354004
    3. '(a' → logprob: -10.000168800354004
    4. 'a' → logprob: -11.250168800354004
    5. '_line' → logprob: -12.875168800354004
    6. '_ax' → logprob: -13.000168800354004
    7. '```' → logprob: -13.125168800354004
    8. '_a' → logprob: -13.375168800354004
    9. 'Axis' → logprob: -13.875168800354004
    10. '   ' → logprob: -14.375168800354004

Token 1733: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -2.2200749754119897e-06
    2. '   ' → logprob: -13.500001907348633
    3. 'm' → logprob: -14.875001907348633
    4. '       ' → logprob: -15.375001907348633
    5. '(a' → logprob: -15.875001907348633
    6. '((' → logprob: -16.750001907348633
    7. '(' → logprob: -17.125001907348633
    8. ' (' → logprob: -17.250001907348633
    9. '```' → logprob: -17.750001907348633
    10. '	m' → logprob: -17.875001907348633

Token 1734: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006385732558555901
    2. '(m' → logprob: -7.375638484954834
    3. '(' → logprob: -12.000638961791992
    4. '((' → logprob: -12.750638961791992
    5. '```' → logprob: -14.000638961791992
    6. 'm' → logprob: -14.500638961791992
    7. '=(' → logprob: -15.000638961791992
    8. 'a' → logprob: -15.250638961791992
    9. ')' → logprob: -15.625638961791992
    10. ' (' → logprob: -15.875638961791992

Token 1735: ',m' (ID: 26648)
  Prédit: ',m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',m' → logprob: -0.0031812789384275675
    2. ',' → logprob: -5.753181457519531
    3. ',b' → logprob: -13.628181457519531
    4. 'm' → logprob: -14.503181457519531
    5. ' ,' → logprob: -14.628181457519531
    6. '(m' → logprob: -14.878181457519531
    7. ',
' → logprob: -15.253181457519531
    8. '   ' → logprob: -15.378181457519531
    9. ',(' → logprob: -16.37818145751953
    10. '       ' → logprob: -16.62818145751953

Token 1736: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.2020991056924686e-05
    2. '1' → logprob: -10.375032424926758
    3. 'm' → logprob: -14.875032424926758
    4. '```' → logprob: -15.125032424926758
    5. '
' → logprob: -16.500032424926758
    6. '0' → logprob: -17.125032424926758
    7. '(m' → logprob: -17.625032424926758
    8. '₂' → logprob: -19.125032424926758
    9. '۲' → logprob: -19.312532424926758
    10. '``' → logprob: -19.375032424926758

Token 1737: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014263410121202469
    2. '):' → logprob: -4.26426362991333
    3. '       ' → logprob: -9.639263153076172
    4. '           ' → logprob: -11.264263153076172
    5. '):
' → logprob: -11.639263153076172
    6. ':
' → logprob: -12.264263153076172
    7. '   ' → logprob: -13.014263153076172
    8. ')' → logprob: -13.389263153076172
    9. ':' → logprob: -13.764263153076172
    10. '):

' → logprob: -14.389263153076172

Token 1738: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004152360837906599
    2. ':' → logprob: -6.879152297973633
    3. ':
' → logprob: -7.004152297973633
    4. '               ' → logprob: -7.129152297973633
    5. '	       ' → logprob: -7.129152297973633
    6. '       ' → logprob: -8.254152297973633
    7. '		' → logprob: -9.254152297973633
    8. '                           ' → logprob: -10.004152297973633
    9. '                               ' → logprob: -10.754152297973633
    10. '```' → logprob: -10.879152297973633

Token 1739: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.33100730180740356
    2. '           ' → logprob: -1.3310072422027588
    3. '               ' → logprob: -4.081007480621338
    4. '```' → logprob: -7.456007480621338
    5. ' print' → logprob: -9.20600700378418
    6. '``' → logprob: -11.58100700378418
    7. '       ' → logprob: -12.20600700378418
    8. '                   ' → logprob: -13.08100700378418
    9. '   ' → logprob: -13.33100700378418
    10. '                       ' → logprob: -14.08100700378418

Token 1740: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00022928470571059734
    2. '(' → logprob: -8.500228881835938
    3. '('' → logprob: -11.250228881835938
    4. '(
' → logprob: -12.125228881835938
    5. '("("' → logprob: -12.625228881835938
    6. '()' → logprob: -13.000228881835938
    7. '   ' → logprob: -14.500228881835938
    8. '("""' → logprob: -14.625228881835938
    9. '("")' → logprob: -15.250228881835938
    10. '(True' → logprob: -15.500228881835938

Token 1741: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.023251185193657875
    2. '"' → logprob: -3.7732512950897217
    3. '("' → logprob: -12.6482515335083
    4. '“Yes' → logprob: -13.1482515335083
    5. ' Yes' → logprob: -15.5232515335083
    6. '   ' → logprob: -16.648250579833984
    7. ''' → logprob: -16.648250579833984
    8. 'YES' → logprob: -16.898250579833984
    9. '"No' → logprob: -17.648250579833984
    10. 'No' → logprob: -17.773250579833984

Token 1742: '")
' (ID: 1896)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005974736995995045
    2. '")
' → logprob: -8.00059700012207
    3. '")' → logprob: -8.37559700012207
    4. ')
' → logprob: -11.75059700012207
    5. '       ' → logprob: -11.87559700012207
    6. '               ' → logprob: -12.00059700012207
    7. '   ' → logprob: -12.62559700012207
    8. ')' → logprob: -13.00059700012207
    9. '<|end|>' → logprob: -13.87559700012207
    10. '```' → logprob: -14.00059700012207

Token 1743: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.1424973713001236e-05
    2. '```' → logprob: -10.625031471252441
    3. '       ' → logprob: -13.375031471252441
    4. '   ' → logprob: -13.375031471252441
    5. '               ' → logprob: -13.500031471252441
    6. 'sys' → logprob: -13.750031471252441
    7. '<|end|>' → logprob: -14.625031471252441
    8. '                           ' → logprob: -15.250031471252441
    9. '                   ' → logprob: -15.375031471252441
    10. '		' → logprob: -16.125030517578125

Token 1744: ' sys' (ID: 12228)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031893588602542877
    2. 'sys' (adapté à ' sys') → logprob: -5.753189563751221
    3. '   ' → logprob: -12.003189086914062
    4. ' sys' → logprob: -12.503189086914062
    5. 'import' → logprob: -14.128189086914062
    6. '               ' → logprob: -14.753189086914062
    7. '       ' → logprob: -14.878189086914062
    8. '	sys' → logprob: -16.878189086914062
    9. '=sys' → logprob: -17.003189086914062
    10. '(sys' → logprob: -17.253189086914062

Token 1745: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.0005513638607226312
    2. 'exit' → logprob: -7.625551223754883
    3. '.quit' → logprob: -10.500551223754883
    4. 'eturn' → logprob: -11.750551223754883
    5. '_exit' → logprob: -12.000551223754883
    6. '.return' → logprob: -12.000551223754883
    7. '	exit' → logprob: -12.875551223754883
    8. 'sys' → logprob: -13.125551223754883
    9. '.' → logprob: -13.125551223754883
    10. '.stdout' → logprob: -13.250551223754883

Token 1746: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.12701304256916046
    2. '()' → logprob: -2.1270129680633545
    3. '()

' → logprob: -9.502013206481934
    4. '()
' → logprob: -11.627013206481934
    5. '())
' → logprob: -14.377013206481934
    6. '())' → logprob: -15.502013206481934
    7. 'print' → logprob: -15.502013206481934
    8. '()`' → logprob: -16.377012252807617
    9. ' ()
' → logprob: -16.627012252807617
    10. '(' → logprob: -16.627012252807617

Token 1747: 'else' (ID: 2807)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -18.25
    3. ' print' → logprob: -19.5
    4. '#print' → logprob: -19.875
    5. '
' → logprob: -20.375
    6. '#' → logprob: -21.5
    7. 'for' → logprob: -21.75
    8. '    
' → logprob: -22.125
    9. '	print' → logprob: -23.125
    10. '  
' → logprob: -23.5

Token 1748: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5929959416389465
    2. ':' → logprob: -0.9679959416389465
    3. '   ' → logprob: -2.7179958820343018
    4. '():
' → logprob: -7.967996120452881
    5. '(
' → logprob: -8.467995643615723
    6. '):
' → logprob: -8.717995643615723
    7. '(' → logprob: -9.092995643615723
    8. '<|end|>' → logprob: -9.217995643615723
    9. '```' → logprob: -9.842995643615723
    10. '(n' → logprob: -9.842995643615723

Token 1749: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011119149625301361
    2. '#' → logprob: -4.511119365692139
    3. 'for' → logprob: -9.88611888885498
    4. '```' → logprob: -10.88611888885498
    5. ' for' → logprob: -14.26111888885498
    6. ' #' → logprob: -14.51111888885498
    7. '       ' → logprob: -15.51111888885498
    8. '
' → logprob: -15.63611888885498
    9. '``' → logprob: -16.136119842529297
    10. '    
' → logprob: -17.636119842529297

Token 1750: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7118942737579346
    2. '#' (adapté à ' #') → logprob: -0.9618942737579346
    3. 'for' → logprob: -2.0868942737579346
    4. ' for' → logprob: -6.0868940353393555
    5. ' #' → logprob: -7.7118940353393555
    6. '
' → logprob: -8.711894035339355
    7. '```' → logprob: -8.836894035339355
    8. '``' → logprob: -12.586894035339355
    9. '       ' → logprob: -12.836894035339355
    10. 'def' → logprob: -12.961894035339355

Token 1751: ' odd' (ID: 14210)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2749651074409485
    2. 'for' → logprob: -1.8999650478363037
    3. '   ' → logprob: -2.3999650478363037
    4. ' for' → logprob: -10.149965286254883
    5. ' #' → logprob: -10.649965286254883
    6. '
' → logprob: -11.024965286254883
    7. 'def' → logprob: -11.149965286254883
    8. '```' → logprob: -12.524965286254883
    9. '  ' → logprob: -13.274965286254883
    10. ' ' → logprob: -13.524965286254883

Token 1752: ' number' (ID: 2086)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1819889098405838
    2. '#' → logprob: -2.0569889545440674
    3. 'n' → logprob: -3.8069889545440674
    4. 'for' → logprob: -4.806988716125488
    5. 'number' → logprob: -6.056988716125488
    6. '```' → logprob: -6.056988716125488
    7. '
' → logprob: -6.681988716125488
    8. 'else' → logprob: -6.806988716125488
    9. 'num' → logprob: -7.681988716125488
    10. ' ' → logprob: -9.181988716125488

Token 1753: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017819060012698174
    2. 'of' → logprob: -4.392818927764893
    3. 'n' → logprob: -6.517818927764893
    4. '```' → logprob: -6.517818927764893
    5. '(n' → logprob: -7.142818927764893
    6. '  ' → logprob: -8.01781940460205
    7. '#' → logprob: -8.26781940460205
    8. '%' → logprob: -8.39281940460205
    9. '(' → logprob: -8.76781940460205
    10. ' of' → logprob: -9.01781940460205

Token 1754: ' vertices' (ID: 38360)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.0017355133313685656
    2. 'n' → logprob: -7.126735687255859
    3. ' vertices' → logprob: -7.626735687255859
    4. '_vertices' → logprob: -9.12673568725586
    5. 'points' → logprob: -9.37673568725586
    6. '```' → logprob: -9.37673568725586
    7. 'v' → logprob: -10.00173568725586
    8. '(vertices' → logprob: -10.50173568725586
    9. 'verts' → logprob: -10.75173568725586
    10. 'vertex' → logprob: -11.25173568725586

Token 1755: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005855320021510124
    2. ' for' → logprob: -5.255855083465576
    3. 'for' → logprob: -7.505855083465576
    4. '#' → logprob: -9.755855560302734
    5. '
' → logprob: -12.255855560302734
    6. '```' → logprob: -12.255855560302734
    7. ' #' → logprob: -13.130855560302734
    8. '	for' → logprob: -14.130855560302734
    9. '       ' → logprob: -14.880855560302734
    10. ':' → logprob: -15.255855560302734

Token 1756: ' axis' (ID: 16300)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17321503162384033
    2. '   ' → logprob: -1.9232150316238403
    3. ' for' → logprob: -5.048214912414551
    4. '#' → logprob: -5.048214912414551
    5. '```' → logprob: -10.42321491241455
    6. ' #' → logprob: -10.67321491241455
    7. '	for' → logprob: -12.67321491241455
    8. '
' → logprob: -12.67321491241455
    9. '``' → logprob: -13.17321491241455
    10. '       ' → logprob: -13.54821491241455

Token 1757: ' passes' (ID: 29169)
  Prédit: 'through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'through' → logprob: -0.9340342283248901
    2. ' through' → logprob: -1.4340342283248901
    3. 'passes' → logprob: -2.0590343475341797
    4. '=' → logprob: -2.4340343475341797
    5. ' passes' → logprob: -2.9340343475341797
    6. '   ' → logprob: -3.3090343475341797
    7. ' =' → logprob: -3.4340343475341797
    8. 'for' → logprob: -4.18403434753418
    9. '#' → logprob: -5.93403434753418
    10. ' for' → logprob: -6.68403434753418

Token 1758: ' through' (ID: 1819)
  Prédit: 'through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'through' → logprob: -0.0007978349458426237
    2. ' through' → logprob: -7.375797748565674
    3. '   ' → logprob: -9.125798225402832
    4. '#' → logprob: -9.750798225402832
    5. 'Through' → logprob: -13.375798225402832
    6. '
' → logprob: -13.625798225402832
    7. '       ' → logprob: -14.125798225402832
    8. '-through' → logprob: -14.500798225402832
    9. '    
' → logprob: -16.750797271728516
    10. '```' → logprob: -17.375797271728516

Token 1759: ' vertex' (ID: 25363)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.02197512425482273
    2. 'a' → logprob: -4.896975040435791
    3. ' polygon' → logprob: -4.896975040435791
    4. 'vertex' → logprob: -5.896975040435791
    5. 'for' → logprob: -6.146975040435791
    6. '#' → logprob: -7.646975040435791
    7. '   ' → logprob: -7.896975040435791
    8. 'poly' → logprob: -8.39697551727295
    9. 'mid' → logprob: -8.52197551727295
    10. 'pol' → logprob: -8.52197551727295

Token 1760: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5183879137039185
    2. 'and' → logprob: -1.0183879137039185
    3. ' and' → logprob: -3.268387794494629
    4. 'for' → logprob: -5.893387794494629
    5. '```' → logprob: -6.393387794494629
    6. '#' → logprob: -8.018387794494629
    7. ' for' → logprob: -8.893387794494629
    8. 'i' → logprob: -9.268387794494629
    9. '
' → logprob: -9.893387794494629
    10. ',' → logprob: -10.018387794494629

Token 1761: ' midpoint' (ID: 188667)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.001391900354065001
    2. ' midpoint' → logprob: -6.751391887664795
    3. '#' → logprob: -9.251392364501953
    4. 'the' → logprob: -9.376392364501953
    5. 'its' → logprob: -10.751392364501953
    6. 'adj' → logprob: -11.626392364501953
    7. 'middle' → logprob: -12.626392364501953
    8. ' mid' → logprob: -12.751392364501953
    9. 'op' → logprob: -12.751392364501953
    10. ' its' → logprob: -14.001392364501953

Token 1762: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.24661192297935486
    2. ' of' → logprob: -1.9966119527816772
    3. '   ' → logprob: -2.6216118335723877
    4. '#' → logprob: -4.621612071990967
    5. '```' → logprob: -8.621611595153809
    6. '	of' → logprob: -11.746611595153809
    7. '       ' → logprob: -11.871611595153809
    8. '  ' → logprob: -12.121611595153809
    9. ' ' → logprob: -12.121611595153809
    10. 'ofa' → logprob: -12.496611595153809

Token 1763: ' opposite' (ID: 23821)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.01419324241578579
    2. ' opposite' → logprob: -4.264193058013916
    3. 'the' → logprob: -10.889193534851074
    4. 'next' → logprob: -12.639193534851074
    5. '#' → logprob: -12.889193534851074
    6. '(op' → logprob: -12.889193534851074
    7. 'polygon' → logprob: -14.264193534851074
    8. 'edge' → logprob: -14.389193534851074
    9. ' the' → logprob: -14.889193534851074
    10. '
' → logprob: -15.139193534851074

Token 1764: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.001932205050252378
    2. ' edge' → logprob: -6.251932144165039
    3. '(edge' → logprob: -13.501932144165039
    4. 'e' → logprob: -14.126932144165039
    5. '```' → logprob: -14.251932144165039
    6. 'edges' → logprob: -15.251932144165039
    7. '#' → logprob: -15.626932144165039
    8. '_edge' → logprob: -15.876932144165039
    9. 'vertex' → logprob: -16.75193214416504
    10. '
' → logprob: -17.00193214416504

Token 1765: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022680165711790323
    2. ' for' → logprob: -6.127267837524414
    3. 'for' → logprob: -9.502267837524414
    4. '
' → logprob: -12.002267837524414
    5. '```' → logprob: -13.877267837524414
    6. '       ' → logprob: -15.127267837524414
    7. '	for' → logprob: -15.127267837524414
    8. '    
' → logprob: -15.877267837524414
    9. '#' → logprob: -16.252267837524414
    10. ',' → logprob: -16.439767837524414

Token 1766: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013859997503459454
    2. '```' → logprob: -4.88886022567749
    3. 'for' → logprob: -5.26386022567749
    4. ' for' → logprob: -6.88886022567749
    5. '``' → logprob: -10.638859748840332
    6. '	for' → logprob: -11.763859748840332
    7. '       ' → logprob: -12.263859748840332
    8. '#' → logprob: -13.888859748840332
    9. '   ' → logprob: -14.638859748840332
    10. '`' → logprob: -15.013859748840332

Token 1767: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.13677151501178741
    2. '   ' → logprob: -2.1367714405059814
    3. ' for' → logprob: -4.8867716789245605
    4. '```' → logprob: -6.1367716789245605
    5. 'i' → logprob: -10.136771202087402
    6. '	for' → logprob: -10.386771202087402
    7. '``' → logprob: -11.386771202087402
    8. '#' → logprob: -13.261771202087402
    9. '       ' → logprob: -13.636771202087402
    10. '
' → logprob: -14.261771202087402

Token 1768: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.176947600673884e-05
    2. ' i' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.625021934509277
    4. '```' → logprob: -16.62502098083496
    5. '(i' → logprob: -17.75002098083496
    6. '	i' → logprob: -17.75002098083496
    7. '0' → logprob: -18.12502098083496
    8. 'a' → logprob: -18.37502098083496
    9. '_i' → logprob: -18.37502098083496
    10. ' ' → logprob: -18.87502098083496

Token 1769: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002190352650359273
    2. 'in' → logprob: -6.127190589904785
    3. '   ' → logprob: -12.627190589904785
    4. 'In' → logprob: -14.502190589904785
    5. '```' → logprob: -14.752190589904785
    6. ' ' → logprob: -15.002190589904785
    7. 'n' → logprob: -16.00218963623047
    8. ' i' → logprob: -16.25218963623047
    9. 'range' → logprob: -16.50218963623047
    10. 'i' → logprob: -17.00218963623047

Token 1770: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.676292231422849e-05
    2. ' range' → logprob: -11.000017166137695
    3. 'in' → logprob: -18.000017166137695
    4. '(range' → logprob: -18.875017166137695
    5. '```' → logprob: -21.250017166137695
    6. '	range' → logprob: -22.125017166137695
    7. '0' → logprob: -22.500017166137695
    8. '
' → logprob: -22.500017166137695
    9. '   ' → logprob: -22.875017166137695
    10. 'n' → logprob: -23.125017166137695

Token 1771: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004002653993666172
    2. 'range' → logprob: -6.004002571105957
    3. '(n' → logprob: -6.504002571105957
    4. ' n' → logprob: -10.629002571105957
    5. ' range' → logprob: -12.504002571105957
    6. 'in' → logprob: -15.879002571105957
    7. '   ' → logprob: -16.004003524780273
    8. '
' → logprob: -16.754003524780273
    9. ' (' → logprob: -17.629003524780273
    10. '(range' → logprob: -17.879003524780273

Token 1772: '):
' (ID: 1883)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2798784077167511
    2. '):
' → logprob: -2.7798783779144287
    3. '   ' → logprob: -3.0298783779144287
    4. '//' → logprob: -3.4048783779144287
    5. '+' → logprob: -3.5298783779144287
    6. '```' → logprob: -3.5298783779144287
    7. '(' → logprob: -4.154878616333008
    8. '(i' → logprob: -4.654878616333008
    9. 'n' → logprob: -5.779878616333008
    10. '#' → logprob: -6.529878616333008

Token 1773: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.462186723947525
    2. ' p' → logprob: -1.5871866941452026
    3. '   ' → logprob: -1.8371866941452026
    4. 'p' → logprob: -6.087186813354492
    5. '```' → logprob: -6.462186813354492
    6. ' a' → logprob: -7.337186813354492
    7. ' mid' → logprob: -8.087186813354492
    8. ' edge' → logprob: -8.087186813354492
    9. 'v' → logprob: -8.212186813354492
    10. ' midpoint' → logprob: -8.337186813354492

Token 1774: ' vp' (ID: 55177)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2934860587120056
    2. 'p' → logprob: -1.4184861183166504
    3. 'a' → logprob: -5.29348611831665
    4. '   ' → logprob: -5.66848611831665
    5. '       ' → logprob: -6.16848611831665
    6. 'e' → logprob: -6.66848611831665
    7. 'mid' → logprob: -9.293485641479492
    8. 'vp' (adapté à ' vp') → logprob: -9.543485641479492
    9. 'm' → logprob: -9.918485641479492
    10. '```' → logprob: -10.168485641479492

Token 1775: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3496536910533905
    2. '=' → logprob: -1.224653720855713
    3. 'p' → logprob: -7.724653720855713
    4. '=p' → logprob: -8.599653244018555
    5. 'olygon' → logprob: -8.849653244018555
    6. '1' → logprob: -9.349653244018555
    7. 'v' → logprob: -9.349653244018555
    8. 'vertex' → logprob: -9.974653244018555
    9. '   ' → logprob: -10.099653244018555
    10. '=(' → logprob: -10.474653244018555

Token 1776: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.0549442321062088
    2. ' polygon' → logprob: -2.9299442768096924
    3. 'poly' → logprob: -10.054944038391113
    4. '   ' → logprob: -11.429944038391113
    5. '(p' → logprob: -13.304944038391113
    6. 'pol' → logprob: -13.554944038391113
    7. 'olygon' → logprob: -13.929944038391113
    8. '(' → logprob: -13.929944038391113
    9. 'p' → logprob: -14.179944038391113
    10. 'vertex' → logprob: -14.304944038391113

Token 1777: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.23056341707706451
    2. 'i' → logprob: -1.6055634021759033
    3. '(i' → logprob: -5.980563640594482
    4. '[(' → logprob: -6.230563640594482
    5. ' i' → logprob: -8.980563163757324
    6. '   ' → logprob: -9.105563163757324
    7. 'p' → logprob: -9.230563163757324
    8. '       ' → logprob: -9.855563163757324
    9. '[v' → logprob: -9.980563163757324
    10. 'v' → logprob: -10.105563163757324

Token 1778: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004746129736304283
    2. ')
' → logprob: -5.504745960235596
    3. ']
' → logprob: -8.004746437072754
    4. ')' → logprob: -9.004746437072754
    5. '   ' → logprob: -9.129746437072754
    6. '
' → logprob: -10.254746437072754
    7. ']' → logprob: -11.004746437072754
    8. ',' → logprob: -11.254746437072754
    9. 'e' → logprob: -11.629746437072754
    10. 'p' → logprob: -11.879746437072754

Token 1779: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07559064775705338
    2. 'ep' → logprob: -3.3255906105041504
    3. 'e' → logprob: -3.5755906105041504
    4. 'oe' → logprob: -5.70059061050415
    5. 'me' → logprob: -6.70059061050415
    6. 'op' → logprob: -6.70059061050415
    7. '   ' → logprob: -6.82559061050415
    8. ' ep' → logprob: -7.45059061050415
    9. 'edge' → logprob: -7.82559061050415
    10. 'm' → logprob: -8.450591087341309

Token 1780: ' e' (ID: 319)
  Prédit: 'ep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ep' → logprob: -0.011400997638702393
    2. 'e' (adapté à ' e') → logprob: -5.011401176452637
    3. 'op' → logprob: -5.636401176452637
    4. 'mp' → logprob: -7.261401176452637
    5. 'em' → logprob: -8.511401176452637
    6. 'edge' → logprob: -9.386401176452637
    7. 'mid' → logprob: -10.136401176452637
    8. 'm' → logprob: -10.636401176452637
    9. 'opp' → logprob: -11.511401176452637
    10. 'emp' → logprob: -11.636401176452637

Token 1781: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011138244532048702
    2. 'p' → logprob: -4.511138439178467
    3. 'm' → logprob: -10.636137962341309
    4. 'mp' → logprob: -11.136137962341309
    5. 'op' → logprob: -12.011137962341309
    6. '2' → logprob: -12.136137962341309
    7. 'e' → logprob: -12.136137962341309
    8. '```' → logprob: -12.136137962341309
    9. 'pt' → logprob: -12.386137962341309
    10. 'ip' → logprob: -12.886137962341309

Token 1782: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.5577775128767826e-06
    2. ' =' → logprob: -13.125005722045898
    3. 'start' → logprob: -13.875005722045898
    4. '_p' → logprob: -14.000005722045898
    5. 'pt' → logprob: -14.250005722045898
    6. '1' → logprob: -14.875005722045898
    7. '=' → logprob: -15.000005722045898
    8. 'point' → logprob: -16.0000057220459
    9. '```' → logprob: -16.1250057220459
    10. '   ' → logprob: -16.3750057220459

Token 1783: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029972974210977554
    2. '=' → logprob: -3.904973030090332
    3. ' =' → logprob: -4.904973030090332
    4. 'p' → logprob: -6.779973030090332
    5. '=(' → logprob: -8.154973030090332
    6. '   ' → logprob: -8.654973030090332
    7. '```' → logprob: -8.779973030090332
    8. 'olygon' → logprob: -10.154973030090332
    9. '2' → logprob: -10.904973030090332
    10. '(p' → logprob: -10.904973030090332

Token 1784: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023194789886475
    2. ' =' → logprob: -1.9102319478988647
    3. '=p' → logprob: -12.410231590270996
    4. 'p' → logprob: -13.285231590270996
    5. '   ' → logprob: -14.785231590270996
    6. '=e' → logprob: -15.035231590270996
    7. '=
' → logprob: -15.160231590270996
    8. ' ' → logprob: -15.410231590270996
    9. ',' → logprob: -15.535231590270996
    10. '```' → logprob: -15.660231590270996

Token 1785: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.023400846868753433
    2. ' polygon' → logprob: -3.7734007835388184
    3. 'poly' → logprob: -8.773401260375977
    4. 'pol' → logprob: -15.023401260375977
    5. '   ' → logprob: -16.148401260375977
    6. '_polygon' → logprob: -16.148401260375977
    7. 'olygon' → logprob: -16.773401260375977
    8. ' poly' → logprob: -16.898401260375977
    9. ' ' → logprob: -18.023401260375977
    10. 'polar' → logprob: -18.398401260375977

Token 1786: '[(' (ID: 20542)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.0012351145269349217
    2. ' polygon' → logprob: -7.126235008239746
    3. 'poly' → logprob: -8.376235008239746
    4. '[(' → logprob: -9.126235008239746
    5. '[' → logprob: -9.626235008239746
    6. '[i' → logprob: -11.376235008239746
    7. '[p' → logprob: -12.251235008239746
    8. 'pol' → logprob: -12.751235008239746
    9. 'olygon' → logprob: -13.001235008239746
    10. '   ' → logprob: -13.001235008239746

Token 1787: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12695078551769257
    2. '(i' → logprob: -2.126950740814209
    3. ' (' → logprob: -11.001951217651367
    4. ' i' → logprob: -13.251951217651367
    5. '{i' → logprob: -13.876951217651367
    6. '   ' → logprob: -14.126951217651367
    7. '(' → logprob: -14.126951217651367
    8. '[i' → logprob: -14.251951217651367
    9. ',i' → logprob: -14.876951217651367
    10. '```' → logprob: -15.501951217651367

Token 1788: '+(' (ID: 31717)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.07886874675750732
    2. 'i' → logprob: -3.078868865966797
    3. '+' → logprob: -3.703868865966797
    4. ' (' → logprob: -5.953868865966797
    5. '(' → logprob: -6.453868865966797
    6. '[i' → logprob: -8.203868865966797
    7. '0' → logprob: -8.828868865966797
    8. '1' → logprob: -9.078868865966797
    9. '```' → logprob: -9.078868865966797
    10. '   ' → logprob: -9.203868865966797

Token 1789: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.23734281957149506
    2. 'n' → logprob: -1.7373428344726562
    3. '1' → logprob: -3.3623428344726562
    4. ' (' → logprob: -7.987342834472656
    5. '(' → logprob: -8.737342834472656
    6. '(i' → logprob: -9.987342834472656
    7. '((' → logprob: -10.237342834472656
    8. '0' → logprob: -11.362342834472656
    9. '-' → logprob: -11.612342834472656
    10. ' n' → logprob: -11.612342834472656

Token 1790: '//' (ID: 393)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2603901015827432e-05
    2. '-' → logprob: -11.250022888183594
    3. '+' → logprob: -11.625022888183594
    4. '//' → logprob: -14.750022888183594
    5. '```' → logprob: -15.875022888183594
    6. '   ' → logprob: -16.250022888183594
    7. ' ' → logprob: -17.000022888183594
    8. '2' → logprob: -17.500022888183594
    9. '(' → logprob: -17.875022888183594
    10. '``' → logprob: -18.250022888183594

Token 1791: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00152009935118258
    2. '1' → logprob: -6.501520156860352
    3. '3' → logprob: -11.001520156860352
    4. '0' → logprob: -15.001520156860352
    5. '   ' → logprob: -15.751520156860352
    6. '```' → logprob: -15.751520156860352
    7. '(' → logprob: -16.00152015686035
    8. ' ' → logprob: -16.37652015686035
    9. '``' → logprob: -16.50152015686035
    10. ')' → logprob: -17.25152015686035

Token 1792: '))' (ID: 915)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3145707845687866
    2. '+' → logprob: -1.3145707845687866
    3. ')' → logprob: -7.064570903778076
    4. '   ' → logprob: -8.814570426940918
    5. '0' → logprob: -9.564570426940918
    6. '2' → logprob: -10.064570426940918
    7. ')+' → logprob: -10.314570426940918
    8. ' +' → logprob: -10.439570426940918
    9. '(' → logprob: -10.564570426940918
    10. '-' → logprob: -10.814570426940918

Token 1793: '%' (ID: 4)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07845509052276611
    2. ']%' → logprob: -3.5784549713134766
    3. ')%' → logprob: -3.8284549713134766
    4. '1' → logprob: -4.828454971313477
    5. '%n' → logprob: -5.078454971313477
    6. '(' → logprob: -5.578454971313477
    7. '```' → logprob: -5.828454971313477
    8. '+n' → logprob: -6.703454971313477
    9. 'n' → logprob: -7.078454971313477
    10. '(n' → logprob: -7.578454971313477

Token 1794: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.061054359131958e-06
    2. '```' → logprob: -12.375007629394531
    3. '(n' → logprob: -13.500007629394531
    4. '(' → logprob: -14.375007629394531
    5. 'polygon' → logprob: -14.375007629394531
    6. '``' → logprob: -15.000007629394531
    7. '   ' → logprob: -15.125007629394531
    8. ' n' → logprob: -15.625007629394531
    9. 'poly' → logprob: -15.625007629394531
    10. ']' → logprob: -15.750007629394531

Token 1795: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.05581889674067497
    2. ']' → logprob: -2.930818796157837
    3. '1' → logprob: -7.555819034576416
    4. '```' → logprob: -8.930818557739258
    5. '0' → logprob: -9.305818557739258
    6. ']
' → logprob: -10.055818557739258
    7. '(' → logprob: -10.555818557739258
    8. ']()
' → logprob: -10.680818557739258
    9. 'e' → logprob: -10.805818557739258
    10. '][' → logprob: -11.180818557739258

Token 1796: '       ' (ID: 309)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.18806110322475433
    2. '(p' → logprob: -3.063060998916626
    3. '```' → logprob: -3.063060998916626
    4. '(e' → logprob: -3.688060998916626
    5. ' e' → logprob: -4.188061237335205
    6. 'p' → logprob: -4.813061237335205
    7. ' (' → logprob: -5.188061237335205
    8. '[(' → logprob: -5.313061237335205
    9. '[e' → logprob: -5.938061237335205
    10. '<|end|>' → logprob: -5.938061237335205

Token 1797: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' (adapté à ' e') → logprob: -2.935296834039036e-06
    2. ' e' → logprob: -12.75000286102295
    3. '```' → logprob: -19.625003814697266
    4. '	e' → logprob: -19.750003814697266
    5. '   ' → logprob: -20.750003814697266
    6. '       ' → logprob: -21.625003814697266
    7. 'е' → logprob: -22.125003814697266
    8. '``' → logprob: -22.375003814697266
    9. '`' → logprob: -22.750003814697266
    10. ')e' → logprob: -22.875003814697266

Token 1798: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1439550369977951
    2. '(e' → logprob: -2.6439549922943115
    3. '2' → logprob: -3.1439549922943115
    4. '((' → logprob: -5.143955230712891
    5. 'e' → logprob: -5.393955230712891
    6. '```' → logprob: -5.643955230712891
    7. 'p' → logprob: -6.393955230712891
    8. '(p' → logprob: -6.893955230712891
    9. 'n' → logprob: -7.018955230712891
    10. '[(' → logprob: -7.143955230712891

Token 1799: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2119133323431015
    2. '2' → logprob: -2.3369133472442627
    3. '1' → logprob: -2.4619133472442627
    4. '+' → logprob: -5.086913108825684
    5. '(' → logprob: -7.086913108825684
    6. '((' → logprob: -7.461913108825684
    7. '(p' → logprob: -7.711913108825684
    8. '   ' → logprob: -8.211913108825684
    9. '```' → logprob: -8.336913108825684
    10. 'e' → logprob: -9.086913108825684

Token 1800: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5231775641441345
    2. '1' → logprob: -0.8981775641441345
    3. '(' → logprob: -10.898177146911621
    4. '+' → logprob: -11.023177146911621
    5. 'p' → logprob: -11.023177146911621
    6. '```' → logprob: -14.023177146911621
    7. '(p' → logprob: -14.773177146911621
    8. '[' → logprob: -14.898177146911621
    9. '((' → logprob: -15.148177146911621
    10. ' ' → logprob: -15.648177146911621

Token 1801: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46219325065612793
    2. ' =' → logprob: -2.087193250656128
    3. ' polygon' → logprob: -2.212193250656128
    4. 'polygon' → logprob: -2.462193250656128
    5. '(p' → logprob: -3.087193250656128
    6. '=(' → logprob: -5.962193489074707
    7. '(poly' → logprob: -6.837193489074707
    8. 'poly' → logprob: -7.587193489074707
    9. ' (' → logprob: -7.712193489074707
    10. '=p' → logprob: -8.087193489074707

Token 1802: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.12705767154693604
    2. ' polygon' → logprob: -2.1270575523376465
    3. 'poly' → logprob: -9.002058029174805
    4. '   ' → logprob: -13.377058029174805
    5. '_polygon' → logprob: -13.502058029174805
    6. '(p' → logprob: -13.877058029174805
    7. 'olygon' → logprob: -14.002058029174805
    8. 'pol' → logprob: -14.252058029174805
    9. '(poly' → logprob: -15.377058029174805
    10. 'polar' → logprob: -16.002058029174805

Token 1803: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.004101908300071955
    2. '((' → logprob: -5.504101753234863
    3. '(p' → logprob: -11.004101753234863
    4. '   ' → logprob: -12.879101753234863
    5. 'polygon' → logprob: -13.004101753234863
    6. '(i' → logprob: -14.254101753234863
    7. ' (' → logprob: -15.379101753234863
    8. '```' → logprob: -15.504101753234863
    9. '`' → logprob: -15.629101753234863
    10. '(' → logprob: -16.12910270690918

Token 1804: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.011108181439340115
    2. 'i' → logprob: -4.5111083984375
    3. ' (' → logprob: -9.8861083984375
    4. '[i' → logprob: -12.7611083984375
    5. '{i' → logprob: -13.3861083984375
    6. '(' → logprob: -13.5111083984375
    7. '((' → logprob: -13.6361083984375
    8. '   ' → logprob: -13.8861083984375
    9. ' i' → logprob: -14.6361083984375
    10. '[(' → logprob: -15.3861083984375

Token 1805: '+(' (ID: 31717)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2532428205013275
    2. '1' → logprob: -2.3782427310943604
    3. '+' → logprob: -2.7532427310943604
    4. '(' → logprob: -3.2532427310943604
    5. '+(' → logprob: -3.7532427310943604
    6. '((' → logprob: -5.6282429695129395
    7. '[(' → logprob: -7.5032429695129395
    8. '+n' → logprob: -7.6282429695129395
    9. '(i' → logprob: -8.128242492675781
    10. ' (' → logprob: -9.753242492675781

Token 1806: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2356327325105667
    2. 'n' → logprob: -1.6106327772140503
    3. '1' → logprob: -4.86063289642334
    4. '(' → logprob: -6.11063289642334
    5. '((' → logprob: -8.86063289642334
    6. ' (' → logprob: -9.86063289642334
    7. '   ' → logprob: -13.61063289642334
    8. '{' → logprob: -13.86063289642334
    9. '_n' → logprob: -13.86063289642334
    10. ' n' → logprob: -14.11063289642334

Token 1807: '//' (ID: 393)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4831632673740387
    2. '(' → logprob: -1.2331632375717163
    3. '1' → logprob: -3.108163356781006
    4. '//' → logprob: -3.108163356781006
    5. '(n' → logprob: -6.358163356781006
    6. '((' → logprob: -7.983163356781006
    7. '```' → logprob: -9.108162879943848
    8. 'n' → logprob: -9.233162879943848
    9. '#' → logprob: -10.483162879943848
    10. '   ' → logprob: -10.858162879943848

Token 1808: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.3438327843905427e-05
    2. '1' → logprob: -11.00002384185791
    3. '(' → logprob: -13.12502384185791
    4. '4' → logprob: -13.25002384185791
    5. '```' → logprob: -14.18752384185791
    6. '...' → logprob: -14.75002384185791
    7. '3' → logprob: -15.43752384185791
    8. ' ' → logprob: -15.56252384185791
    9. '[' → logprob: -16.000022888183594
    10. 'def' → logprob: -16.062522888183594

Token 1809: ')+' (ID: 16161)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31692880392074585
    2. '1' → logprob: -1.3169288635253906
    3. ')%' → logprob: -5.816928863525391
    4. '2' → logprob: -8.06692886352539
    5. ')' → logprob: -8.94192886352539
    6. 'n' → logprob: -9.19192886352539
    7. '(' → logprob: -10.31692886352539
    8. '   ' → logprob: -10.56692886352539
    9. '(n' → logprob: -10.94192886352539
    10. '+n' → logprob: -10.94192886352539

Token 1810: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. 'n' → logprob: -12.750004768371582
    3. '%n' → logprob: -13.500004768371582
    4. '2' → logprob: -16.750003814697266
    5. ' ' → logprob: -17.500003814697266
    6. '0' → logprob: -17.625003814697266
    7. ')%' → logprob: -18.125003814697266
    8. '%d' → logprob: -18.750003814697266
    9. '
' → logprob: -18.750003814697266
    10. '(n' → logprob: -18.875003814697266

Token 1811: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -1.7954958821064793e-05
    2. ')' → logprob: -11.500018119812012
    3. '%n' → logprob: -12.375018119812012
    4. ']%' → logprob: -12.875018119812012
    5. '```' → logprob: -15.625018119812012
    6. '%' → logprob: -15.625018119812012
    7. ')[' → logprob: -15.750018119812012
    8. '1' → logprob: -16.000017166137695
    9. '()%' → logprob: -16.250017166137695
    10. 'n' → logprob: -17.125017166137695

Token 1812: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.676981345459353e-06
    2. '%n' → logprob: -12.250005722045898
    3. '```' → logprob: -14.125005722045898
    4. ' n' → logprob: -17.1250057220459
    5. '``' → logprob: -18.2500057220459
    6. ' ' → logprob: -19.2500057220459
    7. '	n' → logprob: -19.2500057220459
    8. '   ' → logprob: -19.5000057220459
    9. '(n' → logprob: -19.8750057220459
    10. '%' → logprob: -20.0000057220459

Token 1813: ']
' (ID: 1592)
  Prédit: '%n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%n' → logprob: -0.039278872311115265
    2. 'n' → logprob: -3.539278984069824
    3. ']%' → logprob: -4.789278984069824
    4. ')%' → logprob: -7.539278984069824
    5. ']' → logprob: -8.289278984069824
    6. '(n' → logprob: -8.664278984069824
    7. '```' → logprob: -9.164278984069824
    8. '%' → logprob: -10.539278984069824
    9. '][' → logprob: -10.539278984069824
    10. ')n' → logprob: -11.289278984069824

Token 1814: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012046875432133675
    2. 'm' → logprob: -5.512046813964844
    3. 'mid' → logprob: -5.512046813964844
    4. 'e' → logprob: -5.637046813964844
    5. '```' → logprob: -8.637046813964844
    6. '   ' → logprob: -9.637046813964844
    7. 'v' → logprob: -10.387046813964844
    8. ' mid' → logprob: -11.262046813964844
    9. ' e' → logprob: -11.387046813964844
    10. '        
' → logprob: -11.887046813964844

Token 1815: ' mid' (ID: 6959)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0517268106341362
    2. 'mid' (adapté à ' mid') → logprob: -3.051726818084717
    3. 'mp' → logprob: -5.801726818084717
    4. 'e' → logprob: -9.676726341247559
    5. 'vp' → logprob: -11.051726341247559
    6. 'vm' → logprob: -11.051726341247559
    7. 'me' → logprob: -12.051726341247559
    8. '```' → logprob: -12.426726341247559
    9. '   ' → logprob: -13.676726341247559
    10. 'edge' → logprob: -13.801726341247559

Token 1816: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014462798833847
    2. ' =' → logprob: -1.701446294784546
    3. '=((' → logprob: -10.951446533203125
    4. '=(' → logprob: -11.201446533203125
    5. '```' → logprob: -14.451446533203125
    6. ' =(' → logprob: -14.451446533203125
    7. '   ' → logprob: -16.201446533203125
    8. ')' → logprob: -16.451446533203125
    9. 'x' → logprob: -16.701446533203125
    10. '=
' → logprob: -16.701446533203125

Token 1817: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00027111053350381553
    2. '(((' → logprob: -8.62527084350586
    3. ' ((' → logprob: -9.37527084350586
    4. '   ' → logprob: -12.62527084350586
    5. '(' → logprob: -13.12527084350586
    6. '(
' → logprob: -14.12527084350586
    7. '((-' → logprob: -15.12527084350586
    8. ' ' → logprob: -15.37527084350586
    9. '  ' → logprob: -17.25027084350586
    10. '[((' → logprob: -18.00027084350586

Token 1818: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03369053825736046
    2. '(e' → logprob: -3.4086904525756836
    3. ' (' → logprob: -10.658690452575684
    4. ' e' → logprob: -11.033690452575684
    5. '   ' → logprob: -13.283690452575684
    6. 'poly' → logprob: -13.533690452575684
    7. '(' → logprob: -14.658690452575684
    8. '((' → logprob: -14.783690452575684
    9. '(p' → logprob: -15.783690452575684
    10. '[e' → logprob: -15.783690452575684

Token 1819: '1' (ID: 16)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2663363814353943
    2. '1' → logprob: -1.516336441040039
    3. '(e' → logprob: -4.266336441040039
    4. ' e' → logprob: -8.641336441040039
    5. '(' → logprob: -10.266336441040039
    6. '[e' → logprob: -11.141336441040039
    7. 'poly' → logprob: -11.391336441040039
    8. ' (' → logprob: -12.016336441040039
    9. '((' → logprob: -12.016336441040039
    10. '```' → logprob: -12.266336441040039

Token 1820: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5764865279197693
    2. '1' → logprob: -0.8264865279197693
    3. 'e' → logprob: -8.076486587524414
    4. '(' → logprob: -9.826486587524414
    5. '[' → logprob: -10.201486587524414
    6. '```' → logprob: -10.201486587524414
    7. '(p' → logprob: -10.326486587524414
    8. '0' → logprob: -11.201486587524414
    9. '((' → logprob: -11.701486587524414
    10. '(e' → logprob: -11.701486587524414

Token 1821: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1551728993654251
    2. '(e' → logprob: -2.155172824859619
    3. 'p' → logprob: -3.655172824859619
    4. '0' → logprob: -7.280172824859619
    5. '(' → logprob: -7.280172824859619
    6. 'e' → logprob: -8.280173301696777
    7. '((' → logprob: -8.655173301696777
    8. '[' → logprob: -9.905173301696777
    9. '```' → logprob: -10.155173301696777
    10. '[e' → logprob: -10.280173301696777

Token 1822: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.9186317482963204e-05
    2. '0' → logprob: -10.000049591064453
    3. '(' → logprob: -13.750049591064453
    4. 'p' → logprob: -13.875049591064453
    5. '```' → logprob: -14.500049591064453
    6. '   ' → logprob: -14.875049591064453
    7. '#' → logprob: -15.125049591064453
    8. '[
' → logprob: -15.750049591064453
    9. 'def' → logprob: -15.875049591064453
    10. '
' → logprob: -16.500049591064453

Token 1823: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001414426224073395
    2. '[' → logprob: -8.875141143798828
    3. 'e' → logprob: -14.000141143798828
    4. '(' → logprob: -14.875141143798828
    5. 'p' → logprob: -15.875141143798828
    6. '
' → logprob: -16.000141143798828
    7. '```' → logprob: -16.500141143798828
    8. '   ' → logprob: -16.875141143798828
    9. ' ' → logprob: -16.875141143798828
    10. '۰' → logprob: -18.500141143798828

Token 1824: ']+' (ID: 15344)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0022031900007277727
    2. '+' → logprob: -6.127202987670898
    3. '0' → logprob: -11.502202987670898
    4. '[e' → logprob: -12.502202987670898
    5. ' +' → logprob: -12.877202987670898
    6. 'e' → logprob: -14.752202987670898
    7. '
' → logprob: -14.877202987670898
    8. '[
' → logprob: -15.252202987670898
    9. '+[' → logprob: -16.0022029876709
    10. ')+(' → logprob: -16.2522029876709

Token 1825: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0802738870552275e-05
    2. '(e' → logprob: -11.87501049041748
    3. ' e' → logprob: -12.50001049041748
    4. '   ' → logprob: -18.875011444091797
    5. '```' → logprob: -19.875011444091797
    6. '	e' → logprob: -20.250011444091797
    7. ' (' → logprob: -20.375011444091797
    8. '(' → logprob: -20.750011444091797
    9. '       ' → logprob: -21.125011444091797
    10. '      ' → logprob: -21.125011444091797

Token 1826: '1' (ID: 16)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.47724735736846924
    2. '1' → logprob: -0.9772473573684692
    3. '(e' → logprob: -5.85224723815918
    4. 'p' → logprob: -8.35224723815918
    5. ' e' → logprob: -10.85224723815918
    6. '[e' → logprob: -10.97724723815918
    7. '```' → logprob: -12.10224723815918
    8. '[' → logprob: -12.60224723815918
    9. '(' → logprob: -12.72724723815918
    10. ' ' → logprob: -13.35224723815918

Token 1827: 'p' (ID: 79)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00048119694110937417
    2. '[' → logprob: -8.625481605529785
    3. '(e' → logprob: -8.875481605529785
    4. '0' → logprob: -9.500481605529785
    5. 'e' → logprob: -9.875481605529785
    6. 'p' → logprob: -10.625481605529785
    7. '(' → logprob: -12.125481605529785
    8. '[e' → logprob: -12.625481605529785
    9. '```' → logprob: -13.125481605529785
    10. ' ' → logprob: -15.625481605529785

Token 1828: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003184244269505143
    2. '1' → logprob: -5.7531843185424805
    3. '[' → logprob: -12.62818431854248
    4. '(' → logprob: -13.25318431854248
    5. 'p' → logprob: -14.12818431854248
    6. ' ' → logprob: -14.62818431854248
    7. '   ' → logprob: -16.003183364868164
    8. '```' → logprob: -16.378183364868164
    9. '{' → logprob: -16.628183364868164
    10. '0' → logprob: -17.628183364868164

Token 1829: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008073674980551004
    2. '0' → logprob: -7.125807285308838
    3. '```' → logprob: -13.375807762145996
    4. '(' → logprob: -14.000807762145996
    5. '()[' → logprob: -15.500807762145996
    6. ')[' → logprob: -16.37580680847168
    7. '[
' → logprob: -17.62580680847168
    8. 'def' → logprob: -18.00080680847168
    9. '
' → logprob: -18.12580680847168
    10. '``' → logprob: -18.12580680847168

Token 1830: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00039409202872775495
    2. '[' → logprob: -7.875393867492676
    3. '1' → logprob: -11.250393867492676
    4. '(' → logprob: -14.625393867492676
    5. '```' → logprob: -15.375393867492676
    6. ' ' → logprob: -16.250394821166992
    7. '   ' → logprob: -16.250394821166992
    8. '
' → logprob: -18.125394821166992
    9. '((' → logprob: -19.000394821166992
    10. '{' → logprob: -19.250394821166992

Token 1831: '])/' (ID: 93047)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -5.085517113911919e-05
    2. '0' → logprob: -10.00005054473877
    3. 'def' → logprob: -13.37505054473877
    4. '1' → logprob: -13.75005054473877
    5. '```' → logprob: -13.87505054473877
    6. '#' → logprob: -14.00005054473877
    7. ')/' → logprob: -15.37505054473877
    8. '2' → logprob: -15.87505054473877
    9. '   ' → logprob: -15.87505054473877
    10. 'p' → logprob: -16.125051498413086

Token 1832: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20646736025810242
    2. '2' → logprob: -1.7064673900604248
    3. '(' → logprob: -5.706467151641846
    4. '1' → logprob: -6.831467151641846
    5. '[' → logprob: -8.331467628479004
    6. '((' → logprob: -8.456467628479004
    7. ' ' → logprob: -9.081467628479004
    8. '(p' → logprob: -10.206467628479004
    9. '   ' → logprob: -11.456467628479004
    10. '```' → logprob: -11.456467628479004

Token 1833: ',(' (ID: 27243)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -1.0200916528701782
    2. ',' → logprob: -1.1450916528701782
    3. ',(' → logprob: -1.6450916528701782
    4. ',e' → logprob: -2.2700915336608887
    5. '[' → logprob: -4.520091533660889
    6. '((' → logprob: -5.770091533660889
    7. 'mid' → logprob: -5.895091533660889
    8. ',p' → logprob: -6.145091533660889
    9. '[e' → logprob: -6.645091533660889
    10. ' ,' → logprob: -6.645091533660889

Token 1834: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.004080301150679588
    2. '(e' → logprob: -5.504080295562744
    3. ' e' → logprob: -13.254080772399902
    4. ' (' → logprob: -16.879079818725586
    5. ')e' → logprob: -17.754079818725586
    6. '(' → logprob: -18.129079818725586
    7. '[e' → logprob: -18.254079818725586
    8. ',e' → logprob: -19.754079818725586
    9. '	e' → logprob: -19.879079818725586
    10. '
' → logprob: -20.254079818725586

Token 1835: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004126249812543392
    2. '(e' → logprob: -5.879126071929932
    3. 'e' → logprob: -6.754126071929932
    4. '(' → logprob: -9.00412654876709
    5. '```' → logprob: -11.37912654876709
    6. '[e' → logprob: -11.62912654876709
    7. '[' → logprob: -13.12912654876709
    8. '``' → logprob: -13.25412654876709
    9. ' (' → logprob: -13.37912654876709
    10. '((' → logprob: -13.87912654876709

Token 1836: 'p' (ID: 79)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004676113894674927
    2. '[' → logprob: -8.625467300415039
    3. 'e' → logprob: -9.000467300415039
    4. '(' → logprob: -9.500467300415039
    5. '(e' → logprob: -10.500467300415039
    6. 'p' → logprob: -10.875467300415039
    7. '[e' → logprob: -10.875467300415039
    8. 'f' → logprob: -11.750467300415039
    9. '[(' → logprob: -12.625467300415039
    10. '(p' → logprob: -12.750467300415039

Token 1837: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017525337170809507
    2. 'p' → logprob: -6.3767523765563965
    3. '[' → logprob: -10.501752853393555
    4. '(' → logprob: -11.251752853393555
    5. '0' → logprob: -13.189252853393555
    6. '
' → logprob: -13.251752853393555
    7. '(p' → logprob: -13.376752853393555
    8. '```' → logprob: -14.001752853393555
    9. '[p' → logprob: -14.314252853393555
    10. '   ' → logprob: -14.501752853393555

Token 1838: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.126521035796031e-05
    2. '1' → logprob: -9.625091552734375
    3. '0' → logprob: -11.000091552734375
    4. 'p' → logprob: -12.750091552734375
    5. '(' → logprob: -13.250091552734375
    6. '```' → logprob: -13.250091552734375
    7. '
' → logprob: -14.250091552734375
    8. '   ' → logprob: -14.625091552734375
    9. 'def' → logprob: -15.625091552734375
    10. '#' → logprob: -16.250091552734375

Token 1839: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016274472698569298
    2. '0' → logprob: -4.141274452209473
    3. '[' → logprob: -8.891274452209473
    4. '(' → logprob: -9.641274452209473
    5. 'p' → logprob: -11.141274452209473
    6. '(p' → logprob: -11.766274452209473
    7. 'e' → logprob: -12.141274452209473
    8. '(e' → logprob: -12.516274452209473
    9. '[p' → logprob: -13.391274452209473
    10. '[e' → logprob: -13.891274452209473

Token 1840: ']+' (ID: 15344)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002764710516203195
    2. '+' → logprob: -8.250276565551758
    3. '0' → logprob: -11.875276565551758
    4. '][' → logprob: -12.125276565551758
    5. 'p' → logprob: -14.125276565551758
    6. '1' → logprob: -14.625276565551758
    7. 'e' → logprob: -14.750276565551758
    8. '(' → logprob: -15.250276565551758
    9. '```' → logprob: -15.375276565551758
    10. '
' → logprob: -15.750276565551758

Token 1841: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -7.896309739408025e-07
    2. '(e' → logprob: -14.625000953674316
    3. ' e' → logprob: -15.250000953674316
    4. '
' → logprob: -18.125
    5. '   ' → logprob: -19.25
    6. '[e' → logprob: -20.375
    7. ')e' → logprob: -20.625
    8. '```' → logprob: -20.625
    9. '	e' → logprob: -20.75
    10. '     ' → logprob: -20.875

Token 1842: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28129738569259644
    2. '2' → logprob: -1.4062974452972412
    3. 'p' → logprob: -9.40629768371582
    4. '[' → logprob: -10.28129768371582
    5. '0' → logprob: -11.03129768371582
    6. '
' → logprob: -12.28129768371582
    7. '```' → logprob: -12.28129768371582
    8. '   ' → logprob: -13.65629768371582
    9. '(' → logprob: -14.03129768371582
    10. ' ' → logprob: -14.40629768371582

Token 1843: 'p' (ID: 79)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004074839875102043
    2. '1' → logprob: -5.629075050354004
    3. 'p' → logprob: -8.004075050354004
    4. '[' → logprob: -9.129075050354004
    5. '(' → logprob: -11.129075050354004
    6. '```' → logprob: -11.879075050354004
    7. '   ' → logprob: -12.254075050354004
    8. ' ' → logprob: -13.754075050354004
    9. '
' → logprob: -13.754075050354004
    10. '{' → logprob: -14.129075050354004

Token 1844: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014265761710703373
    2. '[' → logprob: -4.389265537261963
    3. '2' → logprob: -6.639265537261963
    4. '(' → logprob: -8.014266014099121
    5. '```' → logprob: -9.514266014099121
    6. '0' → logprob: -10.764266014099121
    7. ' ' → logprob: -12.389266014099121
    8. '-' → logprob: -12.639266014099121
    9. '   ' → logprob: -13.014266014099121
    10. '+' → logprob: -13.139266014099121

Token 1845: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003618024929892272
    2. '0' → logprob: -8.250361442565918
    3. '1' → logprob: -9.250361442565918
    4. '```' → logprob: -12.625361442565918
    5. '2' → logprob: -14.625361442565918
    6. '(' → logprob: -15.375361442565918
    7. '-' → logprob: -16.000362396240234
    8. '[
' → logprob: -16.500362396240234
    9. '
' → logprob: -16.500362396240234
    10. ')[' → logprob: -16.750362396240234

Token 1846: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2352385965641588e-05
    2. '0' → logprob: -11.375012397766113
    3. '(' → logprob: -14.875012397766113
    4. '[' → logprob: -15.250012397766113
    5. '-' → logprob: -16.250011444091797
    6. '```' → logprob: -16.875011444091797
    7. ' ' → logprob: -17.000011444091797
    8. '   ' → logprob: -17.250011444091797
    9. '
' → logprob: -18.375011444091797
    10. '$' → logprob: -19.250011444091797

Token 1847: '])/' (ID: 93047)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01819630153477192
    2. '0' → logprob: -4.018196105957031
    3. '])/' → logprob: -11.018196105957031
    4. ')/' → logprob: -11.643196105957031
    5. '])' → logprob: -11.893196105957031
    6. ')' → logprob: -12.518196105957031
    7. '```' → logprob: -13.018196105957031
    8. '/' → logprob: -13.518196105957031
    9. '#' → logprob: -13.893196105957031
    10. ')[' → logprob: -13.893196105957031

Token 1848: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07167641073465347
    2. '0' → logprob: -2.69667649269104
    3. '2' → logprob: -6.446676254272461
    4. '(' → logprob: -9.196676254272461
    5. '   ' → logprob: -11.071676254272461
    6. '```' → logprob: -11.071676254272461
    7. ' ' → logprob: -11.821676254272461
    8. '01' → logprob: -13.071676254272461
    9. '4' → logprob: -13.196676254272461
    10. '[' → logprob: -13.321676254272461

Token 1849: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5708186626434326
    2. ')
' → logprob: -0.9458186626434326
    3. ')' → logprob: -3.0708186626434326
    4. '   ' → logprob: -9.570818901062012
    5. ')
' → logprob: -9.695818901062012
    6. '):
' → logprob: -10.695818901062012
    7. 'a' → logprob: -11.445818901062012
    8. '```' → logprob: -11.820818901062012
    9. ' )
' → logprob: -12.695818901062012
    10. '#' → logprob: -13.195818901062012

Token 1850: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06527853012084961
    2. 'a' → logprob: -3.0652785301208496
    3. ' a' → logprob: -4.44027853012085
    4. '   ' → logprob: -5.44027853012085
    5. ' if' → logprob: -8.440279006958008
    6. 'b' → logprob: -10.065279006958008
    7. 'if' → logprob: -10.190279006958008
    8. '	a' → logprob: -10.565279006958008
    9. '        
' → logprob: -10.565279006958008
    10. '<|end|>' → logprob: -11.190279006958008

Token 1851: ' if' (ID: 538)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.24753466248512268
    2. 'if' (adapté à ' if') → logprob: -1.7475346326828003
    3. '       ' → logprob: -3.12253475189209
    4. '   ' → logprob: -7.49753475189209
    5. ' if' → logprob: -7.87253475189209
    6. ' a' → logprob: -9.49753475189209
    7. '           ' → logprob: -12.24753475189209
    8. '```' → logprob: -12.24753475189209
    9. '        
' → logprob: -13.37253475189209
    10. '#' → logprob: -13.74753475189209

Token 1852: ' equal' (ID: 12629)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.016920607537031174
    2. ' check' → logprob: -4.141920566558838
    3. 'not' → logprob: -7.141920566558838
    4. ' not' → logprob: -9.391921043395996
    5. 'equal' → logprob: -12.266921043395996
    6. '   ' → logprob: -12.516921043395996
    7. ' ' → logprob: -14.141921043395996
    8. 'abs' → logprob: -14.516921043395996
    9. '(check' → logprob: -14.641921043395996
    10. '	check' → logprob: -15.266921043395996

Token 1853: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.001972288591787219
    2. 'points' → logprob: -6.251972198486328
    3. 'Points' → logprob: -10.251972198486328
    4. '(v' → logprob: -11.876972198486328
    5. '(points' → logprob: -15.001972198486328
    6. '(mid' → logprob: -15.126972198486328
    7. '(p' → logprob: -15.251972198486328
    8. ' points' → logprob: -16.251972198486328
    9. '(m' → logprob: -16.251972198486328
    10. '_POINTS' → logprob: -16.626972198486328

Token 1854: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -2.47495681833243e-05
    2. '(mid' → logprob: -11.500024795532227
    3. '(poly' → logprob: -11.750024795532227
    4. '(p' → logprob: -12.625024795532227
    5. 'vp' → logprob: -13.500024795532227
    6. '(' → logprob: -14.750024795532227
    7. '(vertex' → logprob: -14.875024795532227
    8. '(e' → logprob: -15.375024795532227
    9. '(pol' → logprob: -15.375024795532227
    10. 'poly' → logprob: -15.875024795532227

Token 1855: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.049956709146499634
    2. 'vp' → logprob: -3.049956798553467
    3. 'poly' → logprob: -7.049956798553467
    4. '(v' → logprob: -8.799956321716309
    5. 'polygon' → logprob: -9.049956321716309
    6. '(p' → logprob: -9.174956321716309
    7. ' vp' → logprob: -9.549956321716309
    8. 'v' → logprob: -10.174956321716309
    9. 'pol' → logprob: -11.924956321716309
    10. 'olygon' → logprob: -12.424956321716309

Token 1856: ',' (ID: 11)
  Prédit: ',v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.012681044638156891
    2. ',' → logprob: -4.387681007385254
    3. '(v' → logprob: -9.637681007385254
    4. ',m' → logprob: -9.887681007385254
    5. 'vp' → logprob: -10.137681007385254
    6. ',(' → logprob: -12.262681007385254
    7. '
' → logprob: -12.887681007385254
    8. ',p' → logprob: -13.012681007385254
    9. ',
' → logprob: -13.387681007385254
    10. ',tp' → logprob: -14.012681007385254

Token 1857: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -1.5048530030981055e-06
    2. ' mid' → logprob: -13.500001907348633
    3. '(mid' → logprob: -18.000001907348633
    4. 'poly' → logprob: -21.625001907348633
    5. 'm' → logprob: -23.000001907348633
    6. '[mid' → logprob: -23.250001907348633
    7. '   ' → logprob: -23.500001907348633
    8. '
' → logprob: -25.125001907348633
    9. ' ' → logprob: -25.125001907348633
    10. '     ' → logprob: -25.500001907348633

Token 1858: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18305650353431702
    2. '       ' → logprob: -2.558056592941284
    3. ':
' → logprob: -2.933056592941284
    4. '           ' → logprob: -3.808056592941284
    5. '):' → logprob: -4.808056354522705
    6. ':' → logprob: -6.058056354522705
    7. '          ' → logprob: -7.058056354522705
    8. '==' → logprob: -7.433056354522705
    9. '():
' → logprob: -7.433056354522705
    10. ')==' → logprob: -7.433056354522705

Token 1859: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030707605183124542
    2. '       ' → logprob: -6.378070831298828
    3. 'continue' → logprob: -7.253070831298828
    4. ' continue' → logprob: -7.378070831298828
    5. '   ' → logprob: -11.378070831298828
    6. '               ' → logprob: -12.003070831298828
    7. '```' → logprob: -12.128070831298828
    8. '	       ' → logprob: -12.628070831298828
    9. '	continue' → logprob: -12.878070831298828
    10. '_continue' → logprob: -13.378070831298828

Token 1860: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022064806893467903
    2. 'continue' → logprob: -4.272064685821533
    3. '       ' → logprob: -5.397064685821533
    4. ' continue' → logprob: -6.022064685821533
    5. '	       ' → logprob: -7.897064685821533
    6. '               ' → logprob: -8.397065162658691
    7. '   ' → logprob: -8.522065162658691
    8. '		' → logprob: -10.022065162658691
    9. '	continue' → logprob: -10.272065162658691
    10. '	' → logprob: -12.022065162658691

Token 1861: ' deg' (ID: 5597)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.149016872048378
    2. '           ' → logprob: -2.274016857147217
    3. '       ' → logprob: -3.524016857147217
    4. '   ' → logprob: -5.524016857147217
    5. ' continue' → logprob: -6.274016857147217
    6. '               ' → logprob: -9.524017333984375
    7. '#' → logprob: -10.024017333984375
    8. ' ' → logprob: -11.149017333984375
    9. '```' → logprob: -11.149017333984375
    10. '	continue' → logprob: -11.274017333984375

Token 1862: 'enerate' (ID: 15481)
  Prédit: 'enerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enerate' → logprob: -0.09253185242414474
    2. 'continue' → logprob: -2.96753191947937
    3. '           ' → logprob: -3.46753191947937
    4. '```' → logprob: -6.592531681060791
    5. 'enerated' → logprob: -6.717531681060791
    6. 'ate' → logprob: -7.342531681060791
    7. 'inue' → logprob: -7.842531681060791
    8. '#' → logprob: -7.967531681060791
    9. 'f' → logprob: -7.967531681060791
    10. ' continue' → logprob: -8.09253215789795

Token 1863: ' axis' (ID: 16300)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27028408646583557
    2. 'continue' → logprob: -1.5202840566635132
    3. ' continue' → logprob: -4.020284175872803
    4. '       ' → logprob: -8.895283699035645
    5. '               ' → logprob: -10.270283699035645
    6. '_continue' → logprob: -10.770283699035645
    7. '   ' → logprob: -11.270283699035645
    8. '	continue' → logprob: -11.395283699035645
    9. '          ' → logprob: -11.895283699035645
    10. '		' → logprob: -12.895283699035645

Token 1864: ' line' (ID: 2543)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014373736921697855
    2. 'continue' → logprob: -7.376437187194824
    3. ' continue' → logprob: -7.376437187194824
    4. '       ' → logprob: -9.126437187194824
    5. ',' → logprob: -10.376437187194824
    6. '               ' → logprob: -11.376437187194824
    7. ':' → logprob: -11.501437187194824
    8. ':
' → logprob: -11.876437187194824
    9. '#' → logprob: -12.876437187194824
    10. '_continue' → logprob: -12.876437187194824

Token 1865: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006664486136287451
    2. ' continue' → logprob: -7.875666618347168
    3. 'continue' → logprob: -8.750666618347168
    4. ',' → logprob: -10.000666618347168
    5. ':' → logprob: -10.125666618347168
    6. '               ' → logprob: -10.875666618347168
    7. '       ' → logprob: -11.875666618347168
    8. ':
' → logprob: -12.125666618347168
    9. ' continues' → logprob: -12.500666618347168
    10. '	       ' → logprob: -13.125666618347168

Token 1866: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006161870900541544
    2. 'continue' → logprob: -5.881161689758301
    3. ' continue' → logprob: -6.006161689758301
    4. '       ' → logprob: -7.256161689758301
    5. '               ' → logprob: -9.0061616897583
    6. ':' → logprob: -10.8811616897583
    7. '	continue' → logprob: -11.8811616897583
    8. '	       ' → logprob: -11.8811616897583
    9. '		' → logprob: -12.1311616897583
    10. ',' → logprob: -12.2561616897583

Token 1867: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.343158483505249
    2. 'continue' (adapté à ' continue') → logprob: -1.343158483505249
    3. '       ' → logprob: -3.718158483505249
    4. ' continue' → logprob: -5.468158721923828
    5. '   ' → logprob: -7.593158721923828
    6. '               ' → logprob: -8.218158721923828
    7. '	continue' → logprob: -8.968158721923828
    8. '		' → logprob: -10.843158721923828
    9. '	       ' → logprob: -11.343158721923828
    10. ' ' → logprob: -11.968158721923828

Token 1868: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005622646771371365
    2. 'a' → logprob: -5.380622863769531
    3. '   ' → logprob: -7.130622863769531
    4. ' a' → logprob: -10.005622863769531
    5. '```' → logprob: -10.130622863769531
    6. '<|end|>' → logprob: -10.255622863769531
    7. '        
' → logprob: -11.255622863769531
    8. '
' → logprob: -11.255622863769531
    9. 'b' → logprob: -11.380622863769531
    10. 'if' → logprob: -11.505622863769531

Token 1869: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00752263143658638
    2. 'a' → logprob: -5.0075225830078125
    3. '   ' → logprob: -7.3825225830078125
    4. '```' → logprob: -9.257522583007812
    5. ' a' → logprob: -11.007522583007812
    6. 'b' → logprob: -11.007522583007812
    7. 'if' → logprob: -11.382522583007812
    8. '        
' → logprob: -11.757522583007812
    9. '<|end|>' → logprob: -12.257522583007812
    10. '​' → logprob: -12.257522583007812

Token 1870: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.58407062292099
    2. 'a' → logprob: -0.95907062292099
    3. '       ' → logprob: -2.8340706825256348
    4. '   ' → logprob: -8.334070205688477
    5. ' if' → logprob: -9.334070205688477
    6. 'def' → logprob: -12.084070205688477
    7. ' a' → logprob: -12.084070205688477
    8. '```' → logprob: -12.709070205688477
    9. '           ' → logprob: -12.959070205688477
    10. '#' → logprob: -12.959070205688477

Token 1871: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.07889000326395035
    2. ' check' → logprob: -2.578890085220337
    3. '   ' → logprob: -16.703889846801758
    4. '(check' → logprob: -16.828889846801758
    5. '	check' → logprob: -17.078889846801758
    6. ' ' → logprob: -18.953889846801758
    7. '.check' → logprob: -19.078889846801758
    8. '    ' → logprob: -19.203889846801758
    9. '  ' → logprob: -19.453889846801758
    10. '           ' → logprob: -19.578889846801758

Token 1872: '_axis' (ID: 50852)
  Prédit: '_axis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_axis' → logprob: -7.3458322731312364e-06
    2. 'axis' → logprob: -12.875007629394531
    3. '(v' → logprob: -13.250007629394531
    4. '_line' → logprob: -14.125007629394531
    5. '_axes' → logprob: -14.875007629394531
    6. '```' → logprob: -15.000007629394531
    7. '_ax' → logprob: -15.125007629394531
    8. '(axis' → logprob: -15.375007629394531
    9. '(a' → logprob: -15.375007629394531
    10. '_axi' → logprob: -15.500007629394531

Token 1873: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.1637164789135568e-05
    2. 'vp' → logprob: -11.625011444091797
    3. '(' → logprob: -13.625011444091797
    4. 'v' → logprob: -14.375011444091797
    5. ' (' → logprob: -14.625011444091797
    6. ' vp' → logprob: -15.750011444091797
    7. '((' → logprob: -16.000011444091797
    8. '(p' → logprob: -16.750011444091797
    9. '   ' → logprob: -17.625011444091797
    10. '	v' → logprob: -18.250011444091797

Token 1874: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.009924896992743015
    2. 'vp' → logprob: -5.38492488861084
    3. '(v' → logprob: -5.50992488861084
    4. '(p' → logprob: -6.88492488861084
    5. 'poly' → logprob: -9.88492488861084
    6. 'v' → logprob: -10.50992488861084
    7. 'op' → logprob: -11.50992488861084
    8. 'polygon' → logprob: -11.82242488861084
    9. ' vp' → logprob: -11.88492488861084
    10. '((' → logprob: -11.94742488861084

Token 1875: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3133274018764496
    2. ',m' → logprob: -1.313327431678772
    3. ',
' → logprob: -10.18832778930664
    4. ',(' → logprob: -11.18832778930664
    5. '(mid' → logprob: -12.56332778930664
    6. ' ,' → logprob: -12.93832778930664
    7. ',a' → logprob: -13.06332778930664
    8. ',v' → logprob: -13.43832778930664
    9. '[mid' → logprob: -13.81332778930664
    10. '   ' → logprob: -14.43832778930664

Token 1876: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -2.15310683415737e-05
    2. ' mid' → logprob: -10.750021934509277
    3. '
' → logprob: -17.87502098083496
    4. 'poly' → logprob: -18.25002098083496
    5. '   ' → logprob: -18.37502098083496
    6. '(mid' → logprob: -19.00002098083496
    7. ' ' → logprob: -19.62502098083496
    8. '     ' → logprob: -20.62502098083496
    9. '           ' → logprob: -20.62502098083496
    10. '[mid' → logprob: -20.75002098083496

Token 1877: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.005250472575426102
    2. '):' → logprob: -5.255250453948975
    3. '):
' → logprob: -11.755250930786133
    4. ':
' → logprob: -12.505250930786133
    5. '       ' → logprob: -13.005250930786133
    6. '           ' → logprob: -13.505250930786133
    7. ':' → logprob: -14.755250930786133
    8. '():
' → logprob: -14.880250930786133
    9. '   ' → logprob: -15.255250930786133
    10. ')' → logprob: -15.880250930786133

Token 1878: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.841743303695694e-05
    2. '       ' → logprob: -9.75009822845459
    3. '               ' → logprob: -11.00009822845459
    4. 'print' → logprob: -11.37509822845459
    5. '```' → logprob: -12.37509822845459
    6. '   ' → logprob: -13.00009822845459
    7. '	       ' → logprob: -13.25009822845459
    8. '          ' → logprob: -13.87509822845459
    9. '                   ' → logprob: -14.50009822845459
    10. ' print' → logprob: -15.25009822845459

Token 1879: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.001229634741321206
    2. '           ' → logprob: -6.751229763031006
    3. ' print' → logprob: -9.751229286193848
    4. '   ' → logprob: -14.376229286193848
    5. '               ' → logprob: -14.626229286193848
    6. '       ' → logprob: -16.251230239868164
    7. '```' → logprob: -17.001230239868164
    8. '	print' → logprob: -17.376230239868164
    9. ' ' → logprob: -20.376230239868164
    10. '          ' → logprob: -20.876230239868164

Token 1880: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00018911674851551652
    2. '(' → logprob: -9.250188827514648
    3. '("("' → logprob: -9.375188827514648
    4. '('' → logprob: -12.000188827514648
    5. '("""' → logprob: -14.375188827514648
    6. '("(' → logprob: -14.625188827514648
    7. '(
' → logprob: -14.875188827514648
    8. '(("' → logprob: -15.750188827514648
    9. '("\' → logprob: -16.37518882751465
    10. '(""' → logprob: -16.62518882751465

Token 1881: 'Yes' (ID: 13022)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0220861434936523
    2. 'Yes' → logprob: -1.0220861434936523
    3. '("' → logprob: -1.2720861434936523
    4. '“Yes' → logprob: -10.272086143493652
    5. '('' → logprob: -11.772086143493652
    6. ''' → logprob: -11.897086143493652
    7. '"No' → logprob: -11.897086143493652
    8. '(' → logprob: -12.647086143493652
    9. '"You' → logprob: -13.647086143493652
    10. 'YES' → logprob: -13.647086143493652

Token 1882: '")
' (ID: 1896)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.153795766294934e-06
    2. ')
' → logprob: -13.125005722045898
    3. '       ' → logprob: -13.500005722045898
    4. '   ' → logprob: -14.125005722045898
    5. '               ' → logprob: -14.500005722045898
    6. '")
' → logprob: -14.625005722045898
    7. ')' → logprob: -15.000005722045898
    8. '
' → logprob: -16.1250057220459
    9. '")' → logprob: -16.1250057220459
    10. '<|end|>' → logprob: -16.2500057220459

Token 1883: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.941850526549388e-06
    2. '   ' → logprob: -12.625007629394531
    3. '       ' → logprob: -13.875007629394531
    4. 'sys' → logprob: -13.875007629394531
    5. '               ' → logprob: -14.375007629394531
    6. '<|end|>' → logprob: -14.375007629394531
    7. 'import' → logprob: -15.000007629394531
    8. '```' → logprob: -15.250007629394531
    9. '                           ' → logprob: -15.875007629394531
    10. '                   ' → logprob: -15.875007629394531

Token 1884: ' sys' (ID: 12228)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004083385691046715
    2. 'sys' (adapté à ' sys') → logprob: -5.504083156585693
    3. ' sys' → logprob: -13.129083633422852
    4. '```' → logprob: -14.254083633422852
    5. '               ' → logprob: -14.379083633422852
    6. 'import' → logprob: -14.379083633422852
    7. '   ' → logprob: -14.629083633422852
    8. '		' → logprob: -16.50408363342285
    9. '(sys' → logprob: -16.50408363342285
    10. 'exit' → logprob: -16.62908363342285

Token 1885: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -5.080963092041202e-06
    2. 'exit' → logprob: -12.500004768371582
    3. '_exit' → logprob: -14.500004768371582
    4. '.quit' → logprob: -15.500004768371582
    5. '.stdout' → logprob: -16.1250057220459
    6. '.Exit' → logprob: -16.2500057220459
    7. '```' → logprob: -16.3750057220459
    8. '	exit' → logprob: -16.5000057220459
    9. '.EXIT' → logprob: -16.8750057220459
    10. '.' → logprob: -17.3750057220459

Token 1886: '()

' (ID: 5874)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.11664820462465286
    2. '()' → logprob: -2.3666481971740723
    3. '()

' → logprob: -4.116648197174072
    4. 'print' → logprob: -12.61664867401123
    5. '()\' → logprob: -13.36664867401123
    6. '(' → logprob: -13.61664867401123
    7. '()
' → logprob: -14.24164867401123
    8. '())
' → logprob: -14.61664867401123
    9. '())' → logprob: -15.11664867401123
    10. 'import' → logprob: -15.99164867401123

Token 1887: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -21.0
    3. ' print' → logprob: -21.75
    4. '#print' → logprob: -25.5
    5. 'println' → logprob: -26.125
    6. '	print' → logprob: -26.375
    7. 'prints' → logprob: -27.5
    8. 'printf' → logprob: -28.625
    9. '-print' → logprob: -28.75
    10. '``' → logprob: -29.0

Token 1888: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -3.845798710244708e-05
    2. '('' → logprob: -10.625038146972656
    3. '(' → logprob: -11.250038146972656
    4. '(No' → logprob: -15.000038146972656
    5. '('"' → logprob: -15.625038146972656
    6. '("("' → logprob: -15.875038146972656
    7. '("""' → logprob: -16.250038146972656
    8. '("\"' → logprob: -16.375038146972656
    9. '(("' → logprob: -17.125038146972656
    10. '"No' → logprob: -17.250038146972656

Token 1889: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -1.9361264946837764e-07
    2. '"No' → logprob: -15.75
    3. 'NO' → logprob: -21.0
    4. ' No' → logprob: -21.125
    5. 'Yes' → logprob: -21.5
    6. '(No' → logprob: -22.375
    7. '>No' → logprob: -22.5
    8. '_No' → logprob: -23.0
    9. 'no' → logprob: -23.75
    10. '“No' → logprob: -23.75

Token 1890: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007943148724734783
    2. '")' → logprob: -4.882943153381348
    3. '<|end|>' → logprob: -8.507943153381348
    4. '())' → logprob: -9.382943153381348
    5. '```' → logprob: -10.757943153381348
    6. '')' → logprob: -11.632943153381348
    7. '()' → logprob: -11.757943153381348
    8. '
' → logprob: -12.507943153381348
    9. '`)' → logprob: -12.507943153381348
    10. ')
' → logprob: -13.132943153381348


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1888
Tokens correctement prédits (1ère position, stricte): 847
Tokens correctement prédits (1ère position, avec adaptation): 910
Tokens correctement prédits (top 10): 1586
Précision stricte (1ère position): 44.86%
Précision adaptée (1ère position): 48.20%
Précision (top 10): 84.00%
================================================================================
