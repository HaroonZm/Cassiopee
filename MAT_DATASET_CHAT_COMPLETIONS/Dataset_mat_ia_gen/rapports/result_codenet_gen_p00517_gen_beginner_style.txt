================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:14:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
W, H, N = map(int, input().split())
spots = [tuple(map(int, input().split())) for _ in range(N)]

total_steps = 0
for i in range(N - 1):
    x1, y1 = spots[i]
    x2, y2 = spots[i + 1]
    dx = abs(x2 - x1)
    dy = abs(y2 - y1)
    # Distance is max of dx and dy because diagonal moves are allowed
    total_steps += max(dx, dy)

print(total_steps)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'W' (ID: 54)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' H' (ID: 487)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3279529809951782
    2. ',' → logprob: -1.3279529809951782
    3. ' =' → logprob: -4.827952861785889
    4. ')' → logprob: -6.577952861785889
    5. '*' → logprob: -6.577952861785889
    6. ';' → logprob: -6.952952861785889
    7. '```' → logprob: -6.952952861785889
    8. '.' → logprob: -7.202952861785889
    9. ':' → logprob: -7.577952861785889
    10. '#' → logprob: -9.077953338623047

Token 4: ' N' (ID: 478)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20380574464797974
    2. ' =' → logprob: -1.703805685043335
    3. ',' → logprob: -6.078805923461914
    4. ' ' → logprob: -10.703805923461914
    5. ')' → logprob: -10.828805923461914
    6. '.' → logprob: -11.328805923461914
    7. ';' → logprob: -11.578805923461914
    8. ':' → logprob: -11.953805923461914
    9. '```' → logprob: -12.203805923461914
    10. ' ,' → logprob: -12.703805923461914

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02394581213593483
    2. ',' → logprob: -4.6489458084106445
    3. ' =' → logprob: -4.6489458084106445
    4. '```' → logprob: -5.8989458084106445
    5. '.' → logprob: -7.3989458084106445
    6. ';' → logprob: -7.7739458084106445
    7. ')' → logprob: -9.023945808410645
    8. '[' → logprob: -9.523945808410645
    9. '`' → logprob: -9.773945808410645
    10. ''' → logprob: -9.773945808410645

Token 6: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.356571227312088
    2. 'map' → logprob: -1.9815711975097656
    3. ' ' → logprob: -2.1065711975097656
    4. '10' → logprob: -3.9815711975097656
    5. '0' → logprob: -5.106571197509766
    6. '100' → logprob: -5.356571197509766
    7. ' input' → logprob: -6.231571197509766
    8. 'input' → logprob: -6.606571197509766
    9. '800' → logprob: -6.731571197509766
    10. '20' → logprob: -6.856571197509766

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.047704536467790604
    2. '(lambda' → logprob: -3.7977044582366943
    3. '<|end|>' → logprob: -4.297704696655273
    4. '(int' → logprob: -4.922704696655273
    5. '```' → logprob: -6.672704696655273
    6. '(str' → logprob: -7.047704696655273
    7. '(user' → logprob: -8.797704696655273
    8. '(input' → logprob: -9.297704696655273
    9. '(token' → logprob: -9.297704696655273
    10. '<|end|>' → logprob: -9.297704696655273

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.040657129138708115
    2. '(int' → logprob: -4.165657043457031
    3. ')' → logprob: -4.790657043457031
    4. '(' → logprob: -5.040657043457031
    5. '(str' → logprob: -5.290657043457031
    6. '```' → logprob: -6.290657043457031
    7. '(user' → logprob: -7.540657043457031
    8. 'input' → logprob: -7.790657043457031
    9. '(ord' → logprob: -8.415657043457031
    10. '`)' → logprob: -8.915657043457031

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759671330451965
    2. ' input' → logprob: -0.8259671330451965
    3. '(input' → logprob: -10.575966835021973
    4. ',input' → logprob: -13.700966835021973
    5. ')' → logprob: -14.700966835021973
    6. '=input' → logprob: -15.575966835021973
    7. '```' → logprob: -15.950966835021973
    8. '	input' → logprob: -16.45096778869629
    9. ' ' → logprob: -16.82596778869629
    10. ' (' → logprob: -16.95096778869629

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12098557502031326
    2. '())' → logprob: -2.245985507965088
    3. '().' → logprob: -5.995985507965088
    4. '('' → logprob: -6.370985507965088
    5. '(' → logprob: -6.620985507965088
    6. '());' → logprob: -7.245985507965088
    7. '(()' → logprob: -7.870985507965088
    8. '("")' → logprob: -8.620985984802246
    9. '();)' → logprob: -8.620985984802246
    10. '(),' → logprob: -8.870985984802246

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015309321461245418
    2. 'strip' → logprob: -6.50153112411499
    3. ')' → logprob: -11.126530647277832
    4. 'rstrip' → logprob: -11.876530647277832
    5. ' split' → logprob: -12.126530647277832
    6. 'read' → logprob: -14.001530647277832
    7. '(split' → logprob: -15.126530647277832
    8. 'spl' → logprob: -16.25153160095215
    9. 'startswith' → logprob: -17.12653160095215
    10. 'replace' → logprob: -17.12653160095215

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017150895670056343
    2. '())' → logprob: -4.39215087890625
    3. '))' → logprob: -5.89215087890625
    4. '(' → logprob: -6.89215087890625
    5. '()' → logprob: -8.01715087890625
    6. '`)' → logprob: -8.01715087890625
    7. '('' → logprob: -9.64215087890625
    8. '()))' → logprob: -10.89215087890625
    9. '')' → logprob: -10.89215087890625
    10. ')`' → logprob: -11.39215087890625

Token 13: 'spots' (ID: 102800)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40443718433380127
    2. 'x' → logprob: -2.1544370651245117
    3. 'r' → logprob: -2.9044370651245117
    4. ',' → logprob: -3.6544370651245117
    5. 'a' → logprob: -3.7794370651245117
    6. 'd' → logprob: -4.154437065124512
    7. 't' → logprob: -4.279437065124512
    8. 's' → logprob: -4.529437065124512
    9. 'b' → logprob: -4.779437065124512
    10. 'w' → logprob: -5.154437065124512

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3407878577709198
    2. '=' → logprob: -1.3407878875732422
    3. '[' → logprob: -4.090787887573242
    4. '_' → logprob: -5.090787887573242
    5. ')' → logprob: -6.715787887573242
    6. '.' → logprob: -7.215787887573242
    7. ' ' → logprob: -7.840787887573242
    8. '[]' → logprob: -7.965787887573242
    9. '=[]' → logprob: -8.090787887573242
    10. '[:]' → logprob: -8.090787887573242

Token 15: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.009239944629371166
    2. ' []' → logprob: -5.38424015045166
    3. '[' → logprob: -5.63424015045166
    4. 'set' → logprob: -7.88424015045166
    5. 'list' → logprob: -8.13424015045166
    6. '[int' → logprob: -8.38424015045166
    7. '{}' → logprob: -10.13424015045166
    8. '[list' → logprob: -10.50924015045166
    9. '[input' → logprob: -10.88424015045166
    10. '[][]' → logprob: -11.25924015045166

Token 16: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.3088642358779907
    2. 'list' → logprob: -1.8088642358779907
    3. 'map' → logprob: -2.308864116668701
    4. ' tuple' → logprob: -6.433864116668701
    5. ']' → logprob: -7.933864116668701
    6. '()]' → logprob: -8.80886459350586
    7. ' list' → logprob: -9.18386459350586
    8. ' map' → logprob: -9.30886459350586
    9. '[]' → logprob: -9.43386459350586
    10. '(tuple' → logprob: -9.80886459350586

Token 17: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -8.673547563375905e-05
    2. '(int' → logprob: -10.250086784362793
    3. 'map' → logprob: -10.750086784362793
    4. '(' → logprob: -11.125086784362793
    5. '(input' → logprob: -11.125086784362793
    6. '(
' → logprob: -16.000085830688477
    7. ',map' → logprob: -16.750085830688477
    8. 'int' → logprob: -17.125085830688477
    9. ' map' → logprob: -17.375085830688477
    10. 'input' → logprob: -17.500085830688477

Token 18: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.003737491322681308
    2. 'int' → logprob: -5.753737449645996
    3. '<int' → logprob: -7.878737449645996
    4. ',int' → logprob: -9.628737449645996
    5. '=int' → logprob: -10.503737449645996
    6. '[int' → logprob: -10.628737449645996
    7. ']int' → logprob: -11.003737449645996
    8. '(' → logprob: -11.378737449645996
    9. '<|end|>' → logprob: -11.878737449645996
    10. 'list' → logprob: -12.003737449645996

Token 19: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6368533968925476
    2. ',input' → logprob: -0.7618533968925476
    3. '(input' → logprob: -5.636853218078613
    4. 'input' → logprob: -8.386853218078613
    5. ',int' → logprob: -8.511853218078613
    6. ' ,' → logprob: -9.011853218078613
    7. '(' → logprob: -9.136853218078613
    8. '(int' → logprob: -12.261853218078613
    9. '```' → logprob: -12.261853218078613
    10. '(),' → logprob: -12.886853218078613

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20141851902008057
    2. ' input' → logprob: -1.7014185190200806
    3. '(input' → logprob: -13.07641887664795
    4. ')' → logprob: -14.32641887664795
    5. ',input' → logprob: -14.45141887664795
    6. '[input' → logprob: -14.70141887664795
    7. '	input' → logprob: -14.95141887664795
    8. '<input' → logprob: -14.95141887664795
    9. '=input' → logprob: -14.95141887664795
    10. '_input' → logprob: -15.57641887664795

Token 21: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.3856492842023727e-06
    2. ' ().' → logprob: -14.625000953674316
    3. '()' → logprob: -14.875000953674316
    4. ')' → logprob: -15.750000953674316
    5. '.readline' → logprob: -16.000001907348633
    6. '.split' → logprob: -16.375001907348633
    7. ').' → logprob: -16.625001907348633
    8. '.' → logprob: -16.750001907348633
    9. '>().' → logprob: -18.125001907348633
    10. '()))' → logprob: -18.625001907348633

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. ' split' → logprob: -14.500000953674316
    3. '(split' → logprob: -16.5
    4. 'strip' → logprob: -16.625
    5. 'rstrip' → logprob: -18.0
    6. 'spl' → logprob: -18.5
    7. '.split' → logprob: -19.0
    8. 'plit' → logprob: -20.75
    9. ' ' → logprob: -20.75
    10. 's' → logprob: -21.25

Token 23: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.06316662579774857
    2. '))' → logprob: -2.813166618347168
    3. '())' → logprob: -7.063166618347168
    4. '()' → logprob: -8.188166618347168
    5. ')' → logprob: -10.438166618347168
    6. '()))
' → logprob: -11.438166618347168
    7. '()));' → logprob: -12.063166618347168
    8. '(' → logprob: -12.188166618347168
    9. ''))' → logprob: -12.813166618347168
    10. '()),' → logprob: -13.063166618347168

Token 24: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1637870967388153
    2. ')]' → logprob: -2.0387871265411377
    3. 'for' → logprob: -4.913786888122559
    4. ']' → logprob: -4.913786888122559
    5. '()' → logprob: -5.913786888122559
    6. '()]' → logprob: -6.663786888122559
    7. '(' → logprob: -7.163786888122559
    8. '())' → logprob: -7.913786888122559
    9. '),' → logprob: -8.038786888122559
    10. ' for' → logprob: -8.163786888122559

Token 25: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005835060961544514
    2. '_' → logprob: -5.380835056304932
    3. ' _' → logprob: -7.380835056304932
    4. 'range' → logprob: -8.00583553314209
    5. '_range' → logprob: -8.75583553314209
    6. ' in' → logprob: -10.00583553314209
    7. ' ' → logprob: -10.50583553314209
    8. '(range' → logprob: -11.50583553314209
    9. ' xrange' → logprob: -11.63083553314209
    10. ' i' → logprob: -12.38083553314209

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12872637808322906
    2. 'in' → logprob: -2.1287264823913574
    3. 'range' → logprob: -6.503726482391357
    4. ' range' → logprob: -8.3787260055542
    5. ' ' → logprob: -9.8787260055542
    6. 'n' → logprob: -12.3787260055542
    7. '  ' → logprob: -13.0037260055542
    8. ')' → logprob: -13.2537260055542
    9. '```' → logprob: -13.8787260055542
    10. '_' → logprob: -13.8787260055542

Token 27: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014164687134325504
    2. ' range' → logprob: -4.264164924621582
    3. ' ' → logprob: -14.639164924621582
    4. '(range' → logprob: -15.139164924621582
    5. '	range' → logprob: -15.639164924621582
    6. '[' → logprob: -16.639163970947266
    7. 'r' → logprob: -17.014163970947266
    8. '  ' → logprob: -17.264163970947266
    9. 'rang' → logprob: -17.389163970947266
    10. '   ' → logprob: -17.764163970947266

Token 28: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0017155165551230311
    2. '(' → logprob: -6.376715660095215
    3. '(n' → logprob: -11.751715660095215
    4. 'N' → logprob: -12.501715660095215
    5. '(
' → logprob: -14.126715660095215
    6. ' (' → logprob: -15.376715660095215
    7. ')' → logprob: -15.376715660095215
    8. '(W' → logprob: -15.501715660095215
    9. '(int' → logprob: -15.751715660095215
    10. '(len' → logprob: -17.1267147064209

Token 29: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001093841710826382
    2. ')' → logprob: -9.250109672546387
    3. ']' → logprob: -11.750109672546387
    4. ' )' → logprob: -13.375109672546387
    5. ')])' → logprob: -13.500109672546387
    6. '))' → logprob: -14.250109672546387
    7. '])]' → logprob: -14.875109672546387
    8. '')]' → logprob: -14.875109672546387
    9. ')]
' → logprob: -15.500109672546387
    10. ')],' → logprob: -15.875109672546387

Token 30: 'total' (ID: 9577)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2596091628074646
    2. 'for' → logprob: -2.5096092224121094
    3. '```' → logprob: -3.1346092224121094
    4. '\n' → logprob: -3.8846092224121094
    5. 's' → logprob: -4.634609222412109
    6. '' → logprob: -4.759609222412109
    7. ' 
' → logprob: -4.884609222412109
    8. '#' → logprob: -4.884609222412109
    9. 'd' → logprob: -5.009609222412109
    10. '\' → logprob: -5.259609222412109

Token 31: '_steps' (ID: 52120)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.394922137260437
    2. '_area' → logprob: -1.269922137260437
    3. '_sp' → logprob: -4.269922256469727
    4. '_space' → logprob: -4.644922256469727
    5. '_sum' → logprob: -5.519922256469727
    6. '_height' → logprob: -5.769922256469727
    7. '_length' → logprob: -5.894922256469727
    8. '_count' → logprob: -6.269922256469727
    9. '_width' → logprob: -6.394922256469727
    10. '_size' → logprob: -6.894922256469727

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23956970870494843
    2. '=' → logprob: -2.364569664001465
    3. '_' → logprob: -2.614569664001465
    4. '(' → logprob: -3.864569664001465
    5. ' ' → logprob: -3.989569664001465
    6. ')' → logprob: -6.989569664001465
    7. ' +=' → logprob: -7.114569664001465
    8. '[' → logprob: -7.364569664001465
    9. '<|end|>' → logprob: -7.489569664001465
    10. '.' → logprob: -7.614569664001465

Token 33: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.298067569732666
    2. ' ' → logprob: -2.048067569732666
    3. ' W' → logprob: -2.423067569732666
    4. 'W' → logprob: -3.548067569732666
    5. ' H' → logprob: -5.173067569732666
    6. 'H' → logprob: -6.298067569732666
    7. 'sum' → logprob: -7.048067569732666
    8. ' sum' → logprob: -7.173067569732666
    9. ' max' → logprob: -7.923067569732666
    10. 'max' → logprob: -8.048067092895508

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07296772301197052
    2. 'W' → logprob: -2.947967767715454
    3. 'H' → logprob: -4.947967529296875
    4. 'sum' → logprob: -4.947967529296875
    5. 'max' → logprob: -6.697967529296875
    6. 'abs' → logprob: -7.447967529296875
    7. ' ' → logprob: -7.947967529296875
    8. 'min' → logprob: -7.947967529296875
    9. '(W' → logprob: -8.447967529296875
    10. 'spots' → logprob: -8.697967529296875

Token 35: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023507744073867798
    2. '
' → logprob: -4.523507595062256
    3. ' for' → logprob: -4.523507595062256
    4. '\n' → logprob: -6.898507595062256
    5. '```' → logprob: -8.148508071899414
    6. '\' → logprob: -9.148508071899414
    7. '' → logprob: -10.273508071899414
    8. '
' → logprob: -11.523508071899414
    9. '``' → logprob: -11.648508071899414
    10. 'prev' → logprob: -11.773508071899414

Token 36: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.8497312895488e-05
    2. ' for' → logprob: -9.625068664550781
    3. '
' → logprob: -14.125068664550781
    4. '```' → logprob: -14.125068664550781
    5. 'f' → logprob: -15.000068664550781
    6. '\' → logprob: -15.875068664550781
    7. 'd' → logprob: -16.12506866455078
    8. '\n' → logprob: -16.50006866455078
    9. 'fo' → logprob: -16.62506866455078
    10. '' → logprob: -16.75006866455078

Token 37: ' i' (ID: 575)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6950557827949524
    2. 'x' → logprob: -1.4450557231903076
    3. ' _' → logprob: -2.5700557231903076
    4. ' i' → logprob: -2.8200557231903076
    5. '_' → logprob: -2.9450557231903076
    6. 'i' → logprob: -4.070055961608887
    7. ' ' → logprob: -4.820055961608887
    8. ' w' → logprob: -4.820055961608887
    9. ' spot' → logprob: -4.945055961608887
    10. 'w' → logprob: -4.945055961608887

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015013597905635834
    2. 'in' → logprob: -4.265013694763184
    3. ' ' → logprob: -7.265013694763184
    4. '+' → logprob: -9.890013694763184
    5. ',' → logprob: -10.015013694763184
    6. 'n' → logprob: -10.265013694763184
    7. '  ' → logprob: -11.890013694763184
    8. '_' → logprob: -12.890013694763184
    9. ' n' → logprob: -13.265013694763184
    10. ' i' → logprob: -13.390013694763184

Token 39: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06994354724884033
    2. 'range' → logprob: -2.694943428039551
    3. ' ' → logprob: -12.69494342803955
    4. '	range' → logprob: -13.69494342803955
    5. '(range' → logprob: -13.94494342803955
    6. ' spots' → logprob: -14.06994342803955
    7. 'spots' → logprob: -14.94494342803955
    8. ' xrange' → logprob: -14.94494342803955
    9. '_range' → logprob: -16.319944381713867
    10. '  ' → logprob: -16.444944381713867

Token 40: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048847150057554245
    2. '(N' → logprob: -3.048847198486328
    3. '(len' → logprob: -8.923847198486328
    4. ' (' → logprob: -9.173847198486328
    5. '(n' → logprob: -11.923847198486328
    6. ' ' → logprob: -12.048847198486328
    7. '(
' → logprob: -13.173847198486328
    8. '(i' → logprob: -13.298847198486328
    9. '(W' → logprob: -13.923847198486328
    10. '((' → logprob: -14.298847198486328

Token 41: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11087916791439056
    2. ' -' → logprob: -2.3608791828155518
    3. '):' → logprob: -4.735878944396973
    4. ')' → logprob: -7.360878944396973
    5. '):
' → logprob: -7.610878944396973
    6. ' ' → logprob: -7.610878944396973
    7. '1' → logprob: -9.485878944396973
    8. ' ):' → logprob: -9.610878944396973
    9. '+' → logprob: -9.985878944396973
    10. '   ' → logprob: -11.860878944396973

Token 42: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6326053738594055
    2. '1' → logprob: -0.7576053738594055
    3. '  ' → logprob: -13.00760555267334
    4. '2' → logprob: -13.13260555267334
    5. '-' → logprob: -14.00760555267334
    6. ' ' → logprob: -14.50760555267334
    7. '   ' → logprob: -15.00760555267334
    8. ')' → logprob: -15.88260555267334
    9. '```' → logprob: -16.132604598999023
    10. '3' → logprob: -17.007604598999023

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043138445471413434
    2. ' ' → logprob: -7.750431537628174
    3. '2' → logprob: -14.625431060791016
    4. '-' → logprob: -17.125431060791016
    5. ')' → logprob: -17.437931060791016
    6. '   ' → logprob: -17.437931060791016
    7. '```' → logprob: -17.437931060791016
    8. '１' → logprob: -17.500431060791016
    9. '  ' → logprob: -17.687931060791016
    10. '

' → logprob: -17.937931060791016

Token 44: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003934967797249556
    2. ')' → logprob: -6.003934860229492
    3. '):
' → logprob: -7.003934860229492
    4. ':' → logprob: -8.253934860229492
    5. ' ):' → logprob: -8.253934860229492
    6. '+' → logprob: -11.253934860229492
    7. ',' → logprob: -12.503934860229492
    8. '):
' → logprob: -12.503934860229492
    9. ' )' → logprob: -13.003934860229492
    10. ' ' → logprob: -13.128934860229492

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061263129115104675
    2. ' total' → logprob: -3.186263084411621
    3. ' ' → logprob: -4.436263084411621
    4. '    
' → logprob: -6.686263084411621
    5. '```' → logprob: -7.061263084411621
    6. ' 
' → logprob: -7.186263084411621
    7. ' steps' → logprob: -7.436263084411621
    8. 'total' → logprob: -7.436263084411621
    9. '[' → logprob: -7.561263084411621
    10. ' if' → logprob: -7.811263084411621

Token 46: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5836889147758484
    2. 'x' (adapté à ' x') → logprob: -1.2086889743804932
    3. ' total' → logprob: -2.208688974380493
    4. '   ' → logprob: -4.583688735961914
    5. 'total' → logprob: -4.833688735961914
    6. ' if' → logprob: -5.458688735961914
    7. ' dx' → logprob: -5.458688735961914
    8. ' ' → logprob: -6.333688735961914
    9. ' y' → logprob: -6.583688735961914
    10. 'dx' → logprob: -7.083688735961914

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.24986711144447327
    2. ',' → logprob: -2.2498672008514404
    3. '_,' → logprob: -2.8748672008514404
    4. '2' → logprob: -3.8748672008514404
    5. '_' → logprob: -4.749866962432861
    6. '0' → logprob: -4.874866962432861
    7. ',y' → logprob: -5.249866962432861
    8. '[i' → logprob: -5.374866962432861
    9. '_diff' → logprob: -5.749866962432861
    10. '[' → logprob: -5.874866962432861

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001254634466022253
    2. ',y' → logprob: -6.751254558563232
    3. ',x' → logprob: -9.62625503540039
    4. ' ,' → logprob: -11.62625503540039
    5. '_,' → logprob: -12.12625503540039
    6. 'y' → logprob: -14.12625503540039
    7. '1' → logprob: -14.50125503540039
    8. '```' → logprob: -15.12625503540039
    9. ',
' → logprob: -15.25125503540039
    10. ',i' → logprob: -15.50125503540039

Token 49: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4321621060371399
    2. ' y' → logprob: -1.0571620464324951
    3. ',' → logprob: -6.182162284851074
    4. '<|end|>' → logprob: -7.682162284851074
    5. ' =' → logprob: -8.057162284851074
    6. ',y' → logprob: -8.682162284851074
    7. ' ' → logprob: -9.057162284851074
    8. '=' → logprob: -9.557162284851074
    9. ' ,' → logprob: -10.057162284851074
    10. 'x' → logprob: -10.307162284851074

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2961512513575144e-05
    2. ' =' → logprob: -11.500022888183594
    3. '=' → logprob: -12.375022888183594
    4. ',' → logprob: -12.375022888183594
    5. '_' → logprob: -13.125022888183594
    6. '<|end|>' → logprob: -14.375022888183594
    7. '0' → logprob: -14.625022888183594
    8. '```' → logprob: -14.750022888183594
    9. ' ' → logprob: -15.000022888183594
    10. ')' → logprob: -15.250022888183594

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07986043393611908
    2. '=' → logprob: -2.5798604488372803
    3. ',' → logprob: -6.954860210418701
    4. ' ' → logprob: -11.82986068725586
    5. ')' → logprob: -11.95486068725586
    6. ']' → logprob: -14.45486068725586
    7. ' =)' → logprob: -14.70486068725586
    8. ' ,' → logprob: -14.95486068725586
    9. '   ' → logprob: -15.07986068725586
    10. ' =
' → logprob: -15.82986068725586

Token 52: ' spots' (ID: 25522)
  Prédit: 'spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spots' → logprob: -0.5232680439949036
    2. ' spots' → logprob: -0.8982680439949036
    3. 'sp' → logprob: -9.64826774597168
    4. 'spot' → logprob: -9.89826774597168
    5. 's' → logprob: -11.89826774597168
    6. ' spot' → logprob: -12.33576774597168
    7. '   ' → logprob: -13.02326774597168
    8. '	sp' → logprob: -13.33576774597168
    9. 'spaces' → logprob: -13.46076774597168
    10. 'slots' → logprob: -13.71076774597168

Token 53: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.375
    3. '[x' → logprob: -18.75
    4. '[I' → logprob: -18.875
    5. '```' → logprob: -19.75
    6. 'i' → logprob: -20.0
    7. '   ' → logprob: -20.125
    8. ' [' → logprob: -21.25
    9. '[
' → logprob: -22.0
    10. '[...]' → logprob: -22.125

Token 54: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10044605284929276
    2. ']
' → logprob: -2.3504459857940674
    3. ']
' → logprob: -8.975445747375488
    4. ')' → logprob: -9.850445747375488
    5. '   ' → logprob: -10.600445747375488
    6. ']

' → logprob: -11.600445747375488
    7. ' ]' → logprob: -11.975445747375488
    8. ')
' → logprob: -12.100445747375488
    9. '],' → logprob: -12.475445747375488
    10. '];' → logprob: -12.975445747375488

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.296450138092041
    2. '    
' → logprob: -2.296450138092041
    3. '  
' → logprob: -3.171450138092041
    4. '
' → logprob: -3.421450138092041
    5. '   
' → logprob: -4.046450138092041
    6. ',' → logprob: -4.421450138092041
    7. '\n' → logprob: -4.796450138092041
    8. ' 
' → logprob: -4.796450138092041
    9. ' ' → logprob: -4.921450138092041
    10. '```' → logprob: -5.171450138092041

Token 56: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.3432033061981201
    2. ' x' → logprob: -1.5932033061981201
    3. '   ' → logprob: -3.09320330619812
    4. ' 
' → logprob: -4.093203544616699
    5. ' ' → logprob: -4.343203544616699
    6. ',' → logprob: -5.718203544616699
    7. '    
' → logprob: -5.843203544616699
    8. '  
' → logprob: -6.468203544616699
    9. '[' → logprob: -7.218203544616699
    10. '    ' → logprob: -7.343203544616699

Token 57: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017267032526433468
    2. ',' → logprob: -6.3767266273498535
    3. '1' → logprob: -11.626727104187012
    4. '_,' → logprob: -12.001727104187012
    5. ' ' → logprob: -12.751727104187012
    6. '0' → logprob: -13.126727104187012
    7. ' ,' → logprob: -13.251727104187012
    8. '```' → logprob: -13.626727104187012
    9. '+' → logprob: -15.001727104187012
    10. '+,' → logprob: -15.501727104187012

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3425219549390022e-05
    2. ' ,' → logprob: -12.00001335144043
    3. ',y' → logprob: -12.00001335144043
    4. '‌,' → logprob: -14.75001335144043
    5. '<|end|>' → logprob: -15.75001335144043
    6. '`,' → logprob: -15.87501335144043
    7. ',
' → logprob: -16.50001335144043
    8. ',x' → logprob: -16.62501335144043
    9. '```' → logprob: -17.37501335144043
    10. ',user' → logprob: -17.50001335144043

Token 59: ' y' (ID: 342)
  Prédit: ' spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spots' → logprob: -0.23622457683086395
    2. ' y' → logprob: -2.36122465133667
    3. ' ' → logprob: -2.86122465133667
    4. 'spots' → logprob: -3.11122465133667
    5. '<|end|>' → logprob: -4.98622465133667
    6. 'sp' → logprob: -6.23622465133667
    7. ' x' → logprob: -6.36122465133667
    8. 'y' → logprob: -7.23622465133667
    9. ' sp' → logprob: -7.23622465133667
    10. ' ' → logprob: -7.36122465133667

Token 60: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4035835564136505
    2. '2' → logprob: -1.7785835266113281
    3. '[i' → logprob: -2.153583526611328
    4. '1' → logprob: -3.403583526611328
    5. '+' → logprob: -5.778583526611328
    6. 'spots' → logprob: -6.278583526611328
    7. '[user' → logprob: -6.403583526611328
    8. 's' → logprob: -6.403583526611328
    9. ',' → logprob: -6.528583526611328
    10. '```' → logprob: -6.653583526611328

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009780056774616241
    2. '=' → logprob: -4.634779930114746
    3. ' ' → logprob: -11.009779930114746
    4. '<|end|>' → logprob: -12.384779930114746
    5. ' =)' → logprob: -13.759779930114746
    6. ')' → logprob: -13.759779930114746
    7. ' =
' → logprob: -14.384779930114746
    8. ',' → logprob: -15.134779930114746
    9. ' ' → logprob: -16.759780883789062
    10. '<|end|>' → logprob: -16.884780883789062

Token 62: ' spots' (ID: 25522)
  Prédit: ' spots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spots' → logprob: -0.05489548668265343
    2. 'spots' → logprob: -2.9298954010009766
    3. 'sp' → logprob: -11.929895401000977
    4. 'spot' → logprob: -13.429895401000977
    5. ' ' → logprob: -13.554895401000977
    6. ' spot' → logprob: -14.179895401000977
    7. '	sp' → logprob: -14.554895401000977
    8. 'spaces' → logprob: -14.929895401000977
    9. ' spaces' → logprob: -14.929895401000977
    10. ' ' → logprob: -15.054895401000977

Token 63: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.3596853831550106e-05
    2. '[' → logprob: -10.125053405761719
    3. '[j' → logprob: -11.625053405761719
    4. '[next' → logprob: -13.000053405761719
    5. '```' → logprob: -13.875053405761719
    6. '[I' → logprob: -15.250053405761719
    7. '[
' → logprob: -15.500053405761719
    8. 'i' → logprob: -15.625053405761719
    9. '[++' → logprob: -16.12505340576172
    10. '[x' → logprob: -16.50005340576172

Token 64: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11377835273742676
    2. '+' → logprob: -2.2387783527374268
    3. '+]' → logprob: -7.863778114318848
    4. '[' → logprob: -8.113778114318848
    5. '[i' → logprob: -9.488778114318848
    6. ' ]' → logprob: -10.238778114318848
    7. ' +' → logprob: -10.738778114318848
    8. ')' → logprob: -10.863778114318848
    9. '++]' → logprob: -10.988778114318848
    10. ']+' → logprob: -10.988778114318848

Token 65: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.64970643306151e-05
    2. ' ' → logprob: -9.375086784362793
    3. '```' → logprob: -14.125086784362793
    4. 'i' → logprob: -15.562586784362793
    5. '   ' → logprob: -15.625086784362793
    6. '  ' → logprob: -16.312585830688477
    7. ']' → logprob: -16.812585830688477
    8. ')' → logprob: -17.062585830688477
    9. '`' → logprob: -17.187585830688477
    10. '2' → logprob: -17.312585830688477

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -17.0
    4. '0' → logprob: -18.0625
    5. ']' → logprob: -18.1875
    6. '１' → logprob: -18.625
    7. '۱' → logprob: -19.375
    8. '2' → logprob: -19.4375
    9. 'i' → logprob: -19.5
    10. '``' → logprob: -19.6875

Token 67: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012023737654089928
    2. ')
' → logprob: -6.876202583312988
    3. ']' → logprob: -9.501202583312988
    4. '   ' → logprob: -9.626202583312988
    5. ')]' → logprob: -12.001202583312988
    6. '`)' → logprob: -12.501202583312988
    7. ')`' → logprob: -12.626202583312988
    8. ' )' → logprob: -13.126202583312988
    9. '```' → logprob: -13.376202583312988
    10. ')
' → logprob: -13.376202583312988

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17942506074905396
    2. '
' → logprob: -2.554425001144409
    3. 'total' → logprob: -2.804425001144409
    4. ' total' → logprob: -4.179425239562988
    5. '    
' → logprob: -5.179425239562988
    6. ' 
' → logprob: -5.929425239562988
    7. '  
' → logprob: -7.054425239562988
    8. '	total' → logprob: -7.554425239562988
    9. '```' → logprob: -8.679425239562988
    10. '   
' → logprob: -8.679425239562988

Token 69: ' dx' (ID: 29472)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.23714902997016907
    2. ' total' → logprob: -1.6121490001678467
    3. '   ' → logprob: -4.612149238586426
    4. 'steps' → logprob: -8.237149238586426
    5. 'distance' → logprob: -8.237149238586426
    6. '	total' → logprob: -8.737149238586426
    7. 'space' → logprob: -8.862149238586426
    8. '
' → logprob: -8.862149238586426
    9. ' steps' → logprob: -9.112149238586426
    10. '```' → logprob: -9.362149238586426

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014172444120049477
    2. '=' → logprob: -4.264172554016113
    3. ' ' → logprob: -12.014172554016113
    4. ' +=' → logprob: -14.014172554016113
    5. ',' → logprob: -14.139172554016113
    6. '_' → logprob: -15.389172554016113
    7. ' =)' → logprob: -15.389172554016113
    8. ')' → logprob: -15.514172554016113
    9. ' ==' → logprob: -15.889172554016113
    10. ' ,' → logprob: -16.014171600341797

Token 71: ' abs' (ID: 8443)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0175024271011353
    2. ' x' → logprob: -1.3925024271011353
    3. ' abs' → logprob: -1.5175024271011353
    4. 'abs' → logprob: -1.7675024271011353
    5. '   ' → logprob: -11.517502784729004
    6. '(abs' → logprob: -11.642502784729004
    7. ' ' → logprob: -12.267502784729004
    8. '	x' → logprob: -12.892502784729004
    9. '(x' → logprob: -12.892502784729004
    10. '```' → logprob: -14.267502784729004

Token 72: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0006303519476205111
    2. '(' → logprob: -7.3756303787231445
    3. 'x' → logprob: -12.500630378723145
    4. '(dx' → logprob: -17.375629425048828
    5. '(
' → logprob: -18.000629425048828
    6. '((' → logprob: -18.125629425048828
    7. ' (' → logprob: -19.000629425048828
    8. '(s' → logprob: -19.250629425048828
    9. '(nx' → logprob: -19.250629425048828
    10. '<|end|>' → logprob: -19.625629425048828

Token 73: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014163747429847717
    2. '1' → logprob: -4.264163970947266
    3. '```' → logprob: -16.139163970947266
    4. ' -' → logprob: -16.826663970947266
    5. '₂' → logprob: -17.014163970947266
    6. ' ' → logprob: -17.951663970947266
    7. ')' → logprob: -18.264163970947266
    8. '_' → logprob: -18.326663970947266
    9. '２' → logprob: -18.951663970947266
    10. 's' → logprob: -19.201663970947266

Token 74: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10021648555994034
    2. '-' → logprob: -2.3502163887023926
    3. '-x' → logprob: -12.22521686553955
    4. ' ' → logprob: -12.60021686553955
    5. 'x' → logprob: -13.85021686553955
    6. '   ' → logprob: -16.225215911865234
    7. '0' → logprob: -16.350215911865234
    8. ' ' → logprob: -16.600215911865234
    9. 'dx' → logprob: -16.850215911865234
    10. 's' → logprob: -17.100215911865234

Token 75: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.007607100997120142
    2. ' x' → logprob: -4.8826069831848145
    3. ')x' → logprob: -14.632607460021973
    4. ' ' → logprob: -15.507607460021973
    5. '	x' → logprob: -15.882607460021973
    6. ')' → logprob: -16.882606506347656
    7. '   ' → logprob: -16.882606506347656
    8. '(x' → logprob: -17.632606506347656
    9. ',x' → logprob: -18.257606506347656
    10. '>x' → logprob: -18.257606506347656

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002553793019615114
    2. ')' → logprob: -8.375255584716797
    3. 'x' → logprob: -12.125255584716797
    4. ' ' → logprob: -12.625255584716797
    5. '[' → logprob: -13.000255584716797
    6. '```' → logprob: -13.125255584716797
    7. '`)' → logprob: -13.250255584716797
    8. '')' → logprob: -13.875255584716797
    9. '])' → logprob: -13.875255584716797
    10. ']' → logprob: -14.000255584716797

Token 77: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.930552313453518e-05
    2. ')
' → logprob: -10.625049591064453
    3. ' )' → logprob: -11.125049591064453
    4. ')+' → logprob: -12.500049591064453
    5. '+' → logprob: -12.750049591064453
    6. ' +' → logprob: -13.000049591064453
    7. '   ' → logprob: -15.625049591064453
    8. ')

' → logprob: -15.625049591064453
    9. '))' → logprob: -15.625049591064453
    10. '),' → logprob: -15.625049591064453

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9516972303390503
    2. '    
' → logprob: -1.3266972303390503
    3. '<|end|>' → logprob: -2.07669734954834
    4. 'dy' → logprob: -2.95169734954834
    5. ' ' → logprob: -3.45169734954834
    6. '\' → logprob: -3.57669734954834
    7. '    ' → logprob: -4.07669734954834
    8. ' 
' → logprob: -4.20169734954834
    9. 'd' → logprob: -4.32669734954834
    10. '  
' → logprob: -4.82669734954834

Token 79: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' (adapté à ' dy') → logprob: -0.34685078263282776
    2. ' dy' → logprob: -1.3468507528305054
    3. ''' → logprob: -4.096850872039795
    4. '+' → logprob: -5.846850872039795
    5. '\' → logprob: -5.971850872039795
    6. '"' → logprob: -6.096850872039795
    7. '   ' → logprob: -6.846850872039795
    8. ' \' → logprob: -7.096850872039795
    9. ',' → logprob: -7.221850872039795
    10. '    ' → logprob: -7.346850872039795

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026300758123397827
    2. '=' → logprob: -3.6513006687164307
    3. ',' → logprob: -16.02630043029785
    4. ' ' → logprob: -16.40130043029785
    5. ' +=' → logprob: -16.65130043029785
    6. ')' → logprob: -16.65130043029785
    7. '<|end|>' → logprob: -16.65130043029785
    8. ' =)' → logprob: -16.90130043029785
    9. '  ' → logprob: -18.27630043029785
    10. '>' → logprob: -18.40130043029785

Token 81: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6931908130645752
    2. ' abs' → logprob: -0.6931908130645752
    3. '(abs' → logprob: -10.068190574645996
    4. '.abs' → logprob: -14.443190574645996
    5. 'y' → logprob: -15.443190574645996
    6. 'dy' → logprob: -15.568190574645996
    7. ' y' → logprob: -16.693191528320312
    8. 'max' → logprob: -16.693191528320312
    9. '_abs' → logprob: -16.943191528320312
    10. ' max' → logprob: -17.193191528320312

Token 82: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0009120595059357584
    2. '(' → logprob: -7.000912189483643
    3. '(d' → logprob: -14.875911712646484
    4. '(x' → logprob: -15.875911712646484
    5. '((' → logprob: -17.000911712646484
    6. ' (' → logprob: -17.375911712646484
    7. 'y' → logprob: -17.500911712646484
    8. '(dx' → logprob: -17.875911712646484
    9. '(z' → logprob: -18.250911712646484
    10. '(Y' → logprob: -18.250911712646484

Token 83: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0019680082332342863
    2. '-' → logprob: -7.001967906951904
    3. ' -' → logprob: -7.126967906951904
    4. 'y' → logprob: -9.251968383789062
    5. '1' → logprob: -10.001968383789062
    6. ' ' → logprob: -10.876968383789062
    7. ')' → logprob: -10.876968383789062
    8. 'dy' → logprob: -11.126968383789062
    9. ' y' → logprob: -11.251968383789062
    10. '[' → logprob: -11.876968383789062

Token 84: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0272885300219059
    2. ')' → logprob: -3.7772884368896484
    3. '-' → logprob: -5.527288436889648
    4. ' )' → logprob: -10.652288436889648
    5. '-)' → logprob: -11.152288436889648
    6. '-d' → logprob: -12.152288436889648
    7. ' ' → logprob: -12.402288436889648
    8. '[' → logprob: -13.402288436889648
    9. '   ' → logprob: -13.902288436889648
    10. '))' → logprob: -14.152288436889648

Token 85: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01817803643643856
    2. ' y' → logprob: -4.0181779861450195
    3. '(y' → logprob: -10.51817798614502
    4. ')y' → logprob: -14.89317798614502
    5. '<|end|>' → logprob: -15.14317798614502
    6. ')' → logprob: -15.39317798614502
    7. '	y' → logprob: -15.64317798614502
    8. ''y' → logprob: -17.393178939819336
    9. ' ' → logprob: -17.893178939819336
    10. '(' → logprob: -18.393178939819336

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004444931691978127
    2. '2' → logprob: -8.000444412231445
    3. ')' → logprob: -9.500444412231445
    4. '<|end|>' → logprob: -10.625444412231445
    5. ' ' → logprob: -12.625444412231445
    6. '```' → logprob: -13.625444412231445
    7. 'y' → logprob: -14.125444412231445
    8. '<|end|>' → logprob: -14.375444412231445
    9. 's' → logprob: -14.625444412231445
    10. 'i' → logprob: -14.750444412231445

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008099827100522816
    2. ')
' → logprob: -7.500810146331787
    3. ' )' → logprob: -8.750809669494629
    4. '   ' → logprob: -9.375809669494629
    5. ')

' → logprob: -13.125809669494629
    6. ')
' → logprob: -13.375809669494629
    7. '')' → logprob: -13.375809669494629
    8. ')**' → logprob: -13.500809669494629
    9. '`)' → logprob: -13.875809669494629
    10. '))' → logprob: -14.125809669494629

Token 88: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10929320752620697
    2. 'total' → logprob: -2.734293222427368
    3. ' total' → logprob: -4.609292984008789
    4. ' 
' → logprob: -4.859292984008789
    5. '\' → logprob: -5.234292984008789
    6. '\n' → logprob: -5.359292984008789
    7. '    
' → logprob: -5.609292984008789
    8. '   ' → logprob: -6.484292984008789
    9. 'n' → logprob: -6.484292984008789
    10. '```' → logprob: -7.484292984008789

Token 89: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.02065785974264145
    2. 'steps' → logprob: -4.270658016204834
    3. ' total' → logprob: -5.770658016204834
    4. 'if' → logprob: -6.270658016204834
    5. 'step' → logprob: -7.270658016204834
    6. 'max' → logprob: -8.145657539367676
    7. '   ' → logprob: -8.895657539367676
    8. 't' → logprob: -9.020657539367676
    9. ' steps' → logprob: -10.145657539367676
    10. 'min' → logprob: -10.145657539367676

Token 90: ' Distance' (ID: 53583)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.052628278732299805
    2. 'total' → logprob: -3.1776282787323
    3. ' steps' → logprob: -5.302628517150879
    4. ' step' → logprob: -6.177628517150879
    5. 'steps' → logprob: -7.052628517150879
    6. ' ' → logprob: -7.427628517150879
    7. ' max' → logprob: -8.052628517150879
    8. '   ' → logprob: -8.302628517150879
    9. ' min' → logprob: -9.302628517150879
    10. 'step' → logprob: -9.802628517150879

Token 91: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001441184664145112
    2. '=' → logprob: -7.12644100189209
    3. ' +=' → logprob: -7.50144100189209
    4. 's' → logprob: -11.62644100189209
    5. 'steps' → logprob: -11.75144100189209
    6. ' is' → logprob: -12.00144100189209
    7. '   ' → logprob: -12.12644100189209
    8. '_step' → logprob: -12.12644100189209
    9. '_steps' → logprob: -12.12644100189209
    10. ' ' → logprob: -12.37644100189209

Token 92: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3591982424259186
    2. 'max' → logprob: -1.2341982126235962
    3. ' dx' → logprob: -5.359198093414307
    4. ' min' → logprob: -5.984198093414307
    5. 'dx' → logprob: -6.109198093414307
    6. 'min' → logprob: -6.984198093414307
    7. '	max' → logprob: -8.859198570251465
    8. ' ' → logprob: -9.484198570251465
    9. '   ' → logprob: -10.421698570251465
    10. ' ' → logprob: -11.734198570251465

Token 93: ' of' (ID: 328)
  Prédit: '(dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.024748239666223526
    2. '(' → logprob: -3.7747483253479004
    3. ' of' → logprob: -7.0247483253479
    4. ' (' → logprob: -7.7747483253479
    5. 'of' → logprob: -9.149747848510742
    6. '(d' → logprob: -11.024747848510742
    7. '(distance' → logprob: -11.149747848510742
    8. ' between' → logprob: -11.149747848510742
    9. '(max' → logprob: -11.899747848510742
    10. 'dx' → logprob: -12.149747848510742

Token 94: ' dx' (ID: 29472)
  Prédit: '(dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.038114238530397415
    2. 'dx' → logprob: -3.288114309310913
    3. ' dx' → logprob: -9.538114547729492
    4. '(' → logprob: -15.038114547729492
    5. '_dx' → logprob: -15.163114547729492
    6. '```' → logprob: -15.913114547729492
    7. '.dx' → logprob: -16.913114547729492
    8. ' (' → logprob: -17.163114547729492
    9. '0' → logprob: -18.538114547729492
    10. 'dy' → logprob: -19.163114547729492

Token 95: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024724282324314117
    2. ' and' → logprob: -4.14972448348999
    3. ' ,' → logprob: -5.39972448348999
    4. '(dx' → logprob: -6.27472448348999
    5. 'and' → logprob: -6.64972448348999
    6. ' or' → logprob: -7.27472448348999
    7. '   ' → logprob: -9.399724006652832
    8. '(' → logprob: -10.149724006652832
    9. ' ' → logprob: -10.524724006652832
    10. 'or' → logprob: -10.649724006652832

Token 96: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.2519322335720062
    2. 'dy' → logprob: -1.5019322633743286
    3. ' ' → logprob: -14.126932144165039
    4. ' ' → logprob: -14.501932144165039
    5. '.dy' → logprob: -14.501932144165039
    6. 'd' → logprob: -14.626932144165039
    7. '	d' → logprob: -15.001932144165039
    8. '```' → logprob: -15.501932144165039
    9. '(d' → logprob: -16.50193214416504
    10. ' dyd' → logprob: -16.50193214416504

Token 97: ' because' (ID: 2236)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12580081820487976
    2. 'total' → logprob: -2.875800848007202
    3. ' ' → logprob: -3.625800848007202
    4. ' total' → logprob: -4.375800609588623
    5. ')' → logprob: -5.125800609588623
    6. '(total' → logprob: -5.500800609588623
    7. ',' → logprob: -5.750800609588623
    8. '    
' → logprob: -6.125800609588623
    9. '
' → logprob: -6.750800609588623
    10. '<|end|>' → logprob: -7.000800609588623

Token 98: ' diagonal' (ID: 71638)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.5976592302322388
    2. ' we' → logprob: -1.5976592302322388
    3. ' diagonal' → logprob: -1.9726592302322388
    4. ' you' → logprob: -2.097659111022949
    5. ' movement' → logprob: -2.472659111022949
    6. ' a' → logprob: -2.722659111022949
    7. ' of' → logprob: -2.972659111022949
    8. ' one' → logprob: -3.597659111022949
    9. ' in' → logprob: -4.222659111022949
    10. 'we' → logprob: -4.347659111022949

Token 99: ' moves' (ID: 19523)
  Prédit: ' moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moves' → logprob: -1.063944935798645
    2. 'moves' → logprob: -1.063944935798645
    3. ' movement' → logprob: -2.1889448165893555
    4. 'movement' → logprob: -2.5639448165893555
    5. 'steps' → logprob: -3.5639448165893555
    6. 'distance' → logprob: -3.5639448165893555
    7. ' steps' → logprob: -3.8139448165893555
    8. ' distance' → logprob: -4.3139448165893555
    9. ' move' → logprob: -5.0639448165893555
    10. '_moves' → logprob: -5.3139448165893555

Token 100: ' are' (ID: 553)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.2977849245071411
    2. ' total' → logprob: -2.5477848052978516
    3. '   ' → logprob: -3.0477848052978516
    4. 'can' → logprob: -3.2977848052978516
    5. ' can' → logprob: -3.4227848052978516
    6. 'allowed' → logprob: -4.172784805297852
    7. 'possible' → logprob: -4.297784805297852
    8. ' possible' → logprob: -5.047784805297852
    9. ' are' → logprob: -5.297784805297852
    10. 'distance' → logprob: -5.672784805297852

Token 101: ' allowed' (ID: 9279)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.587360143661499
    2. ' allowed' → logprob: -0.837360143661499
    3. ' possible' → logprob: -5.087360382080078
    4. 'possible' → logprob: -5.587360382080078
    5. ' counted' → logprob: -7.587360382080078
    6. '1' → logprob: -7.962360382080078
    7. ' ' → logprob: -8.837360382080078
    8. ' permitted' → logprob: -8.962360382080078
    9. 'count' → logprob: -9.712360382080078
    10. 'max' → logprob: -10.212360382080078

Token 102: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.520975649356842
    2. 'total' → logprob: -1.1459755897521973
    3. ' total' → logprob: -2.7709755897521973
    4. '
' → logprob: -3.7709755897521973
    5. '    
' → logprob: -6.645975589752197
    6. ' 
' → logprob: -8.770976066589355
    7. '(total' → logprob: -8.895976066589355
    8. ' ' → logprob: -9.020976066589355
    9. '```' → logprob: -9.145976066589355
    10. '	total' → logprob: -9.270976066589355

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3752728998661041
    2. 'total' → logprob: -1.5002728700637817
    3. '
' → logprob: -2.8752729892730713
    4. ' total' → logprob: -3.5002729892730713
    5. '    
' → logprob: -6.375272750854492
    6. '  
' → logprob: -7.375272750854492
    7. ' 
' → logprob: -8.375272750854492
    8. '   
' → logprob: -9.125272750854492
    9. '	total' → logprob: -9.125272750854492
    10. ' ' → logprob: -9.375272750854492

Token 104: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.0023119074758142233
    2. ' total' → logprob: -6.252311706542969
    3. '   ' → logprob: -8.502311706542969
    4. 'distance' → logprob: -8.877311706542969
    5. 'steps' → logprob: -11.127311706542969
    6. 'step' → logprob: -11.252311706542969
    7. '
' → logprob: -12.127311706542969
    8. ' ' → logprob: -13.252311706542969
    9. '    
' → logprob: -13.502311706542969
    10. 'max' → logprob: -14.002311706542969

Token 105: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -5.5577775128767826e-06
    2. '_' → logprob: -12.500005722045898
    3. '_step' → logprob: -14.000005722045898
    4. 'steps' → logprob: -15.125005722045898
    5. '_distance' → logprob: -15.125005722045898
    6. '_s' → logprob: -16.2500057220459
    7. '```' → logprob: -16.7500057220459
    8. '_moves' → logprob: -17.1250057220459
    9. 'Steps' → logprob: -17.2500057220459
    10. '_st' → logprob: -17.5000057220459

Token 106: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.005734078586101532
    2. '+=' → logprob: -5.255733966827393
    3. '+' → logprob: -7.755733966827393
    4. ' ' → logprob: -10.13073444366455
    5. ' +' → logprob: -10.50573444366455
    6. ' ' → logprob: -13.75573444366455
    7. '+=(' → logprob: -14.50573444366455
    8. ']+=' → logprob: -14.63073444366455
    9. '+='' → logprob: -14.75573444366455
    10. '	' → logprob: -15.25573444366455

Token 107: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.38687264919281006
    2. ' max' → logprob: -1.13687264919281
    3. 'min' → logprob: -14.261872291564941
    4. ' ' → logprob: -14.886872291564941
    5. '(max' → logprob: -15.386872291564941
    6. ' min' → logprob: -15.511872291564941
    7. '	max' → logprob: -15.761872291564941
    8. 'dx' → logprob: -16.511873245239258
    9. ' dx' → logprob: -16.761873245239258
    10. '[max' → logprob: -17.511873245239258

Token 108: '(dx' (ID: 124932)
  Prédit: '(dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.0009117019944824278
    2. '(' → logprob: -7.000911712646484
    3. ' (' → logprob: -15.875911712646484
    4. '(max' → logprob: -16.375911712646484
    5. '(nx' → logprob: -18.375911712646484
    6. '(d' → logprob: -18.375911712646484
    7. '(x' → logprob: -18.625911712646484
    8. '((' → logprob: -18.875911712646484
    9. '(ds' → logprob: -19.250911712646484
    10. '(diff' → logprob: -19.250911712646484

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004655118566006422
    2. ' ,' → logprob: -5.379654884338379
    3. ',d' → logprob: -10.379654884338379
    4. ')' → logprob: -12.879654884338379
    5. '(dx' → logprob: -15.254654884338379
    6. '(' → logprob: -15.504654884338379
    7. '(d' → logprob: -15.504654884338379
    8. ',
' → logprob: -15.629654884338379
    9. ' ' → logprob: -15.754654884338379
    10. '),' → logprob: -17.004655838012695

Token 110: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.2519318461418152
    2. 'dy' → logprob: -1.50193190574646
    3. ')' → logprob: -13.126932144165039
    4. '.dy' → logprob: -14.876932144165039
    5. ' ' → logprob: -16.12693214416504
    6. 'd' → logprob: -16.25193214416504
    7. 'Dy' → logprob: -16.50193214416504
    8. '-d' → logprob: -16.87693214416504
    9. '	d' → logprob: -17.25193214416504
    10. ' )' → logprob: -17.50193214416504

Token 111: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2948405128554441e-05
    2. ')
' → logprob: -11.37501335144043
    3. ' )' → logprob: -13.75001335144043
    4. '))' → logprob: -15.75001335144043
    5. ')return' → logprob: -17.25001335144043
    6. ')`' → logprob: -17.25001335144043
    7. ')

' → logprob: -17.37501335144043
    8. '')' → logprob: -17.50001335144043
    9. '`)' → logprob: -17.62501335144043
    10. ')#' → logprob: -18.12501335144043

Token 112: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003159201005473733
    2. '
' → logprob: -8.12531566619873
    3. '```' → logprob: -11.50031566619873
    4. ' print' → logprob: -11.87531566619873
    5. '\n' → logprob: -13.87531566619873
    6. '
' → logprob: -15.00031566619873
    7. '\' → logprob: -15.12531566619873
    8. '#print' → logprob: -15.25031566619873
    9. '`
' → logprob: -15.37531566619873
    10. '  
' → logprob: -15.75031566619873

Token 113: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008361928048543632
    2. '(total' → logprob: -7.125836372375488
    3. '("("' → logprob: -11.000836372375488
    4. '('' → logprob: -11.625836372375488
    5. '()' → logprob: -12.875836372375488
    6. '(
' → logprob: -13.875836372375488
    7. '(

' → logprob: -14.000836372375488
    8. '(`' → logprob: -14.500836372375488
    9. '((' → logprob: -14.625836372375488
    10. '(t' → logprob: -16.000835418701172

Token 114: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -5.676981345459353e-06
    2. '_' → logprob: -12.125005722045898
    3. ')_' → logprob: -16.5000057220459
    4. ')' → logprob: -17.2500057220459
    5. '_sn' → logprob: -17.3750057220459
    6. '_)' → logprob: -17.6250057220459
    7. '_total' → logprob: -17.8750057220459
    8. 'steps' → logprob: -18.1250057220459
    9. '_step' → logprob: -18.3750057220459
    10. '_lines' → logprob: -18.5000057220459

Token 115: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.75
    3. '))' → logprob: -16.25
    4. ')`' → logprob: -16.625
    5. ')}' → logprob: -18.25
    6. ')
' → logprob: -19.125
    7. '),' → logprob: -20.0
    8. ')**' → logprob: -20.75
    9. '`)' → logprob: -20.75
    10. '')' → logprob: -20.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 113
Tokens correctement prédits (1ère position, stricte): 57
Tokens correctement prédits (1ère position, avec adaptation): 60
Tokens correctement prédits (top 10): 100
Précision stricte (1ère position): 50.44%
Précision adaptée (1ère position): 53.10%
Précision (top 10): 88.50%
================================================================================
