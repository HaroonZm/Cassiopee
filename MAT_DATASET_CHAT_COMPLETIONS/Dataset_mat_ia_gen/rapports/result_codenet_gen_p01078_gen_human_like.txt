================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

def main():
    N, K = map(int, input().split())
    # Le nombre de sommets du polygone est N
    # Chaque sommet est relié au (K-1)-ième point suivant
    # L'angle entre deux sommets consécutifs (dans l'ordre du polygone étoilé) est 2*pi*K/N
    # L'aire peut être calculée par la formule de l'aire d'un polygone régulier étoilé inscrit dans un cercle de rayon 1 :
    # aire = (N/2)*sin(2*pi*K/N)
    area = (N/2)*math.sin(2*math.pi*K/N)
    print(f"{area:.8f}")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002112551126629114
    2. '```' → logprob: -7.37711238861084
    3. '\n' → logprob: -7.62711238861084
    4. 'import' → logprob: -7.75211238861084
    5. '\' → logprob: -8.75211238861084
    6. '<|end|>' → logprob: -9.62711238861084
    7. '.pi' → logprob: -10.00211238861084
    8. 'as' → logprob: -10.37711238861084
    9. '.e' → logprob: -10.75211238861084
    10. 'a' → logprob: -10.87711238861084

Token 4: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0004903609515167773
    2. '_' → logprob: -9.000490188598633
    3. ' math' → logprob: -9.125490188598633
    4. ' space' → logprob: -9.250490188598633
    5. ' sqrt' → logprob: -10.250490188598633
    6. ' calculate' → logprob: -10.375490188598633
    7. ' _' → logprob: -11.000490188598633
    8. '_space' → logprob: -11.625490188598633
    9. ' ' → logprob: -11.625490188598633
    10. '  ' → logprob: -11.750490188598633

Token 5: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023790961131453514
    2. '():' → logprob: -7.002378940582275
    3. '(:' → logprob: -7.627378940582275
    4. ':' → logprob: -7.627378940582275
    5. '(
' → logprob: -8.502379417419434
    6. '```' → logprob: -8.877379417419434
    7. ' (' → logprob: -9.877379417419434
    8. '):' → logprob: -11.127379417419434
    9. '(`' → logprob: -11.252379417419434
    10. '(":' → logprob: -11.877379417419434

Token 6: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023909036070108414
    2. '(' → logprob: -4.398909091949463
    3. '    ' → logprob: -5.273909091949463
    4. ' ' → logprob: -5.648909091949463
    5. '\' → logprob: -7.648909091949463
    6. '    
' → logprob: -7.773909091949463
    7. 'print' → logprob: -8.523908615112305
    8. '  ' → logprob: -8.773908615112305
    9. '(space' → logprob: -8.773908615112305
    10. '```' → logprob: -8.773908615112305

Token 7: ' N' (ID: 478)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8501377105712891
    2. 'radius' → logprob: -1.225137710571289
    3. 'x' → logprob: -2.225137710571289
    4. 'print' → logprob: -2.850137710571289
    5. '   ' → logprob: -3.600137710571289
    6. 'n' → logprob: -3.975137710571289
    7. 'r' → logprob: -4.100137710571289
    8. ' result' → logprob: -4.475137710571289
    9. ' radius' → logprob: -4.475137710571289
    10. 's' → logprob: -5.350137710571289

Token 8: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21916928887367249
    2. '=' → logprob: -2.0941693782806396
    3. ' ' → logprob: -2.8441693782806396
    4. ')' → logprob: -5.2191691398620605
    5. '_' → logprob: -5.7191691398620605
    6. ' )' → logprob: -6.3441691398620605
    7. '  ' → logprob: -6.9691691398620605
    8. '   ' → logprob: -7.2191691398620605
    9. '.' → logprob: -7.2191691398620605
    10. ',' → logprob: -7.3441691398620605

Token 9: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.15665537118911743
    2. 'K' → logprob: -2.7816553115844727
    3. ' M' → logprob: -3.1566553115844727
    4. ' ' → logprob: -3.4066553115844727
    5. 'M' → logprob: -5.781655311584473
    6. ' k' → logprob: -6.906655311584473
    7. 'a' → logprob: -8.031655311584473
    8. 'x' → logprob: -8.156655311584473
    9. ' x' → logprob: -8.156655311584473
    10. 'input' → logprob: -8.281655311584473

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016037186607718468
    2. '=' → logprob: -4.1410369873046875
    3. ' ' → logprob: -13.641036987304688
    4. ',' → logprob: -13.641036987304688
    5. ')' → logprob: -15.266036987304688
    6. ' =
' → logprob: -16.391036987304688
    7. '=input' → logprob: -16.516036987304688
    8. '  ' → logprob: -17.141036987304688
    9. ' ,' → logprob: -17.266036987304688
    10. '=int' → logprob: -17.266036987304688

Token 11: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.043127648532390594
    2. 'map' → logprob: -3.1681275367736816
    3. ' ' → logprob: -9.79312801361084
    4. ' list' → logprob: -10.66812801361084
    5. ' input' → logprob: -10.91812801361084
    6. 'input' → logprob: -11.91812801361084
    7. '0' → logprob: -12.41812801361084
    8. 'int' → logprob: -12.54312801361084
    9. '10' → logprob: -12.54312801361084
    10. 'list' → logprob: -12.54312801361084

Token 12: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.6484843492507935
    2. '(' → logprob: -0.7734843492507935
    3. '(str' → logprob: -4.773484230041504
    4. '(lambda' → logprob: -5.023484230041504
    5. 'int' → logprob: -8.148484230041504
    6. '(input' → logprob: -8.523484230041504
    7. '(
' → logprob: -9.148484230041504
    8. ' (' → logprob: -11.148484230041504
    9. '```' → logprob: -11.148484230041504
    10. '(list' → logprob: -11.273484230041504

Token 13: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4430488646030426
    2. ',' → logprob: -1.4430488348007202
    3. ')' → logprob: -2.8180489540100098
    4. ',input' → logprob: -3.1930489540100098
    5. 'input' → logprob: -4.31804895401001
    6. '(' → logprob: -5.06804895401001
    7. ' input' → logprob: -6.94304895401001
    8. '),' → logprob: -8.693048477172852
    9. '=input' → logprob: -10.068048477172852
    10. ' ,' → logprob: -10.068048477172852

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4740813970565796
    2. ' input' → logprob: -0.9740813970565796
    3. ')' → logprob: -12.724081039428711
    4. '(input' → logprob: -14.349081039428711
    5. ' )' → logprob: -14.599081039428711
    6. '=input' → logprob: -15.974081039428711
    7. ',input' → logprob: -16.34908103942871
    8. '	input' → logprob: -16.97408103942871
    9. '```' → logprob: -17.34908103942871
    10. ' ' → logprob: -17.34908103942871

Token 15: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00437766732648015
    2. '())' → logprob: -5.504377841949463
    3. '()' → logprob: -8.254377365112305
    4. ')' → logprob: -11.004377365112305
    5. '()))' → logprob: -11.254377365112305
    6. '());' → logprob: -12.379377365112305
    7. '()),' → logprob: -14.129377365112305
    8. '(' → logprob: -14.504377365112305
    9. '()));' → logprob: -14.504377365112305
    10. '()>' → logprob: -14.629377365112305

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.931863051955588e-05
    2. 'strip' → logprob: -9.750059127807617
    3. 'rstrip' → logprob: -14.500059127807617
    4. ' split' → logprob: -14.875059127807617
    5. '(split' → logprob: -16.500059127807617
    6. 'read' → logprob: -16.750059127807617
    7. ')' → logprob: -17.250059127807617
    8. 'spl' → logprob: -17.500059127807617
    9. '_split' → logprob: -20.375059127807617
    10. '().' → logprob: -20.500059127807617

Token 17: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34896376729011536
    2. '))' → logprob: -1.223963737487793
    3. '())' → logprob: -8.098963737487793
    4. '()' → logprob: -9.598963737487793
    5. '()))' → logprob: -9.723963737487793
    6. ')))' → logprob: -10.223963737487793
    7. '),' → logprob: -11.098963737487793
    8. '))
' → logprob: -12.098963737487793
    9. ''))' → logprob: -12.473963737487793
    10. '(' → logprob: -12.598963737487793

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18230129778385162
    2. '    
' → logprob: -2.4323012828826904
    3. '```' → logprob: -3.6823012828826904
    4. '
' → logprob: -4.0573015213012695
    5. ')' → logprob: -4.9323015213012695
    6. ' 
' → logprob: -5.8073015213012695
    7. '``' → logprob: -5.8073015213012695
    8. '\' → logprob: -5.9323015213012695
    9. '`' → logprob: -6.0573015213012695
    10. '<|end|>' → logprob: -6.4323015213012695

Token 19: ' #' (ID: 1069)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6842166781425476
    2. 'dp' → logprob: -2.0592167377471924
    3. ' result' → logprob: -2.1842167377471924
    4. 'result' → logprob: -3.1842167377471924
    5. ' s' → logprob: -3.6842167377471924
    6. ' max' → logprob: -3.8092167377471924
    7. '   ' → logprob: -4.059216499328613
    8. ' count' → logprob: -4.184216499328613
    9. 's' → logprob: -4.434216499328613
    10. ' a' → logprob: -4.809216499328613

Token 20: ' Le' (ID: 2018)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -1.1465179920196533
    2. ' result' → logprob: -1.7715179920196533
    3. 'dp' → logprob: -2.5215179920196533
    4. ' max' → logprob: -2.8965179920196533
    5. ' ans' → logprob: -3.0215179920196533
    6. 'result' → logprob: -3.5215179920196533
    7. ' for' → logprob: -3.8965179920196533
    8. ' count' → logprob: -4.021517753601074
    9. 's' → logprob: -4.021517753601074
    10. ' s' → logprob: -4.021517753601074

Token 21: ' nombre' (ID: 9733)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5887678265571594
    2. 'n' → logprob: -0.9637678265571594
    3. 'ft' → logprob: -3.7137677669525146
    4. 'ng' → logprob: -4.338768005371094
    5. 'ast' → logprob: -4.463768005371094
    6. 's' → logprob: -5.088768005371094
    7. 'ss' → logprob: -5.838768005371094
    8. 'g' → logprob: -6.213768005371094
    9. 'aves' → logprob: -7.713768005371094
    10. 'st' → logprob: -7.963768005371094

Token 22: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8182622790336609
    2. 'de' → logprob: -1.1932623386383057
    3. 's' → logprob: -2.1932623386383057
    4. ' de' → logprob: -2.5682623386383057
    5. ' d' → logprob: -4.318262100219727
    6. ' ' → logprob: -4.693262100219727
    7. 'maximum' → logprob: -4.818262100219727
    8. ' maximal' → logprob: -4.943262100219727
    9. 'total' → logprob: -5.443262100219727
    10. '_' → logprob: -5.568262100219727

Token 23: ' somm' (ID: 44830)
  Prédit: ' façons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' façons' → logprob: -2.261275053024292
    2. 'man' → logprob: -2.386275053024292
    3. 's' → logprob: -2.511275053024292
    4. 'div' → logprob: -2.636275053024292
    5. 'm' → logprob: -3.136275053024292
    6. 'c' → logprob: -3.261275053024292
    7. 'comb' → logprob: -3.511275053024292
    8. 'p' → logprob: -3.511275053024292
    9. 'élé' → logprob: -3.636275053024292
    10. ' ways' → logprob: -3.636275053024292

Token 24: 'ets' (ID: 1719)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.19270925223827362
    2. 's' → logprob: -1.81770920753479
    3. 't' → logprob: -5.317709445953369
    4. 'es' → logprob: -5.442709445953369
    5. 'ets' → logprob: -6.692709445953369
    6. 'tes' → logprob: -7.692709445953369
    7. 'urs' → logprob: -8.442708969116211
    8. 'ttes' → logprob: -8.692708969116211
    9. 'ds' → logprob: -8.942708969116211
    10. '```' → logprob: -8.942708969116211

Token 25: ' du' (ID: 1462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04707595333456993
    2. ' ,' → logprob: -4.7970757484436035
    3. ',' → logprob: -5.1720757484436035
    4. '<|end|>' → logprob: -5.5470757484436035
    5. ' dans' → logprob: -5.6720757484436035
    6. '  ' → logprob: -5.7970757484436035
    7. ' =' → logprob: -5.7970757484436035
    8. ' de' → logprob: -5.9220757484436035
    9. ' is' → logprob: -6.2970757484436035
    10. ' )' → logprob: -6.2970757484436035

Token 26: ' pol' (ID: 1823)
  Prédit: ' grap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grap' → logprob: -0.36874616146087646
    2. ' graph' → logprob: -1.6187461614608765
    3. ' hyper' → logprob: -2.743746280670166
    4. ' cube' → logprob: -4.618746280670166
    5. ' cycle' → logprob: -5.243746280670166
    6. ' arbre' → logprob: -5.368746280670166
    7. 'graph' → logprob: -5.743746280670166
    8. 's' → logprob: -5.993746280670166
    9. ' poly' → logprob: -6.243746280670166
    10. ' triangle' → logprob: -6.243746280670166

Token 27: 'yg' (ID: 8408)
  Prédit: 'yg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yg' → logprob: -0.006782046519219875
    2. 'ygon' → logprob: -6.131782054901123
    3. 'y' → logprob: -6.506782054901123
    4. '```' → logprob: -6.756782054901123
    5. '   ' → logprob: -7.506782054901123
    6. '``' → logprob: -9.131781578063965
    7. 'yt' → logprob: -9.381781578063965
    8. 'yn' → logprob: -9.381781578063965
    9. 'ygons' → logprob: -9.381781578063965
    10. '-' → logprob: -9.506781578063965

Token 28: 'one' (ID: 690)
  Prédit: 'yg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yg' → logprob: -0.0063107931055128574
    2. 'y' → logprob: -5.131310939788818
    3. 'ygon' → logprob: -8.38131046295166
    4. '#' → logprob: -11.00631046295166
    5. '```' → logprob: -11.00631046295166
    6. '   ' → logprob: -11.50631046295166
    7. 'ygons' → logprob: -11.88131046295166
    8. 'yc' → logprob: -11.88131046295166
    9. 'yl' → logprob: -12.00631046295166
    10. '\xc8' → logprob: -12.00631046295166

Token 29: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9268730282783508
    2. ',' → logprob: -1.301872968673706
    3. 'n' → logprob: -2.176872968673706
    4. ' is' → logprob: -3.176872968673706
    5. ' ,' → logprob: -3.426872968673706
    6. '.' → logprob: -3.426872968673706
    7. ' =' → logprob: -3.676872968673706
    8. ' n' → logprob: -4.176873207092285
    9. 's' → logprob: -4.301873207092285
    10. '<|end|>' → logprob: -4.426873207092285

Token 30: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10999071598052979
    2. ' N' → logprob: -2.6099905967712402
    3. ' K' → logprob: -4.10999059677124
    4. '    ' → logprob: -4.73499059677124
    5. '   ' → logprob: -5.98499059677124
    6. 'N' → logprob: -7.23499059677124
    7. '  ' → logprob: -7.35999059677124
    8. ' ' → logprob: -7.85999059677124
    9. 'K' → logprob: -8.984991073608398
    10. ' len' → logprob: -9.359991073608398

Token 31: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9551114439964294
    2. ',' → logprob: -1.4551115036010742
    3. '<|end|>' → logprob: -1.7051115036010742
    4. '.' → logprob: -2.330111503601074
    5. '*' → logprob: -3.705111503601074
    6. '<|end|>' → logprob: -4.080111503601074
    7. ' ' → logprob: -4.580111503601074
    8. '    ' → logprob: -5.080111503601074
    9. ')' → logprob: -5.080111503601074
    10. '  ' → logprob: -5.205111503601074

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06325089931488037
    2. ',' → logprob: -3.81325101852417
    3. '    
' → logprob: -3.93825101852417
    4. '<|end|>' → logprob: -4.93825101852417
    5. '.' → logprob: -5.06325101852417
    6. '
' → logprob: -7.06325101852417
    7. '    ' → logprob: -7.06325101852417
    8. ')' → logprob: -7.31325101852417
    9. '<|end|>' → logprob: -7.31325101852417
    10. '  ' → logprob: -7.43825101852417

Token 33: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1883101761341095
    2. ' ' → logprob: -3.438310146331787
    3. 'n' → logprob: -4.063310146331787
    4. 's' → logprob: -4.188310146331787
    5. '.' → logprob: -4.313310146331787
    6. ')' → logprob: -4.688310146331787
    7. '    ' → logprob: -4.938310146331787
    8. ',' → logprob: -4.938310146331787
    9. '    
' → logprob: -5.063310146331787
    10. '<|end|>' → logprob: -5.063310146331787

Token 34: ' Chaque' (ID: 94758)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -1.2764184474945068
    2. ' max' → logprob: -2.026418447494507
    3. ' result' → logprob: -2.151418447494507
    4. ' d' → logprob: -2.401418447494507
    5. 'dp' → logprob: -2.651418447494507
    6. ' c' → logprob: -3.276418447494507
    7. '   ' → logprob: -3.901418447494507
    8. ' ans' → logprob: -3.901418447494507
    9. 'c' → logprob: -4.151418685913086
    10. 'result' → logprob: -4.276418685913086

Token 35: ' sommet' (ID: 130502)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5855553150177002
    2. ' sommet' → logprob: -1.5855553150177002
    3. ' point' → logprob: -1.7105553150177002
    4. 'c' → logprob: -3.0855553150177
    5. ' triangle' → logprob: -3.0855553150177
    6. 'point' → logprob: -3.0855553150177
    7. 's' → logprob: -3.4605553150177
    8. ' ar' → logprob: -3.5855553150177
    9. ' angle' → logprob: -3.7730553150177
    10. ' ' → logprob: -3.8355553150177

Token 36: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5351155996322632
    2. ' a' → logprob: -1.7851155996322632
    3. ' est' → logprob: -2.2851157188415527
    4. ' possède' → logprob: -4.160115718841553
    5. ' peut' → logprob: -4.410115718841553
    6. ' has' → logprob: -4.660115718841553
    7. ' représente' → logprob: -4.660115718841553
    8. ' ,' → logprob: -4.660115718841553
    9. 's' → logprob: -4.785115718841553
    10. ' is' → logprob: -4.910115718841553

Token 37: ' reli' (ID: 10856)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.7475619316101074
    2. 'un' → logprob: -2.1225619316101074
    3. ' représent' → logprob: -2.4975619316101074
    4. ' num' → logprob: -2.6225619316101074
    5. ' connecté' → logprob: -2.6225619316101074
    6. ' ' → logprob: -3.4975619316101074
    7. 'num' → logprob: -3.6225619316101074
    8. ' reli' → logprob: -3.9975619316101074
    9. ' une' → logprob: -4.122561931610107
    10. ' index' → logprob: -4.372561931610107

Token 38: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.00027444821898825467
    2. 'e' → logprob: -8.250274658203125
    3. 'ée' → logprob: -12.750274658203125
    4. 'és' → logprob: -13.000274658203125
    5. 'év' → logprob: -13.375274658203125
    6. 'éf' → logprob: -13.625274658203125
    7. 'è' → logprob: -14.250274658203125
    8. '&eacute' → logprob: -14.375274658203125
    9. 'ié' → logprob: -14.375274658203125
    10. 'lié' → logprob: -14.500274658203125

Token 39: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.24195271730422974
    2. ' aux' → logprob: -2.241952657699585
    3. ' par' → logprob: -2.991952657699585
    4. ' ' → logprob: -3.366952657699585
    5. ' au' → logprob: -4.116952896118164
    6. '<|end|>' → logprob: -5.741952896118164
    7. ' a' → logprob: -6.741952896118164
    8. 'à' → logprob: -6.741952896118164
    9. 'aux' → logprob: -7.866952896118164
    10. ' ' → logprob: -8.241952896118164

Token 40: ' (' (ID: 350)
  Prédit: ' sommet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.8275476098060608
    2. ' K' → logprob: -1.077547550201416
    3. 'K' → logprob: -2.452547550201416
    4. 's' → logprob: -3.327547550201416
    5. 'k' → logprob: -3.952547550201416
    6. ' suivant' → logprob: -4.077547550201416
    7. 'som' → logprob: -4.077547550201416
    8. '2' → logprob: -4.702547550201416
    9. ' ' → logprob: -4.827547550201416
    10. ' prochain' → logprob: -5.202547550201416

Token 41: 'K' (ID: 42)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.8093902468681335
    2. ' sommet' → logprob: -1.4343903064727783
    3. ' (' → logprob: -1.9343903064727783
    4. 'K' → logprob: -2.9343903064727783
    5. '(s' → logprob: -3.5593903064727783
    6. ')' → logprob: -4.434390068054199
    7. '(' → logprob: -4.559390068054199
    8. ' next' → logprob: -4.559390068054199
    9. 'k' → logprob: -4.684390068054199
    10. ' i' → logprob: -5.059390068054199

Token 42: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.32946836948394775
    2. ')' → logprob: -2.204468250274658
    3. ' +' → logprob: -2.329468250274658
    4. '-' → logprob: -3.579468250274658
    5. '+i' → logprob: -4.079468250274658
    6. ')-' → logprob: -4.454468250274658
    7. ' )' → logprob: -5.204468250274658
    8. ' -' → logprob: -5.204468250274658
    9. '+)' → logprob: -6.329468250274658
    10. '-)' → logprob: -7.079468250274658

Token 43: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8222706913948059
    2. '+' → logprob: -1.0722706317901611
    3. '1' → logprob: -2.572270631790161
    4. ')-' → logprob: -3.072270631790161
    5. '-' → logprob: -3.447270631790161
    6. ' )' → logprob: -3.822270631790161
    7. '2' → logprob: -4.07227087020874
    8. ' +' → logprob: -5.19727087020874
    9. ' ' → logprob: -5.69727087020874
    10. '/' → logprob: -5.94727087020874

Token 44: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01013792585581541
    2. ')-' → logprob: -4.635138034820557
    3. 'e' → logprob: -8.760137557983398
    4. 'ème' → logprob: -9.135137557983398
    5. ' )' → logprob: -10.260137557983398
    6. ')i' → logprob: -10.760137557983398
    7. ')e' → logprob: -11.260137557983398
    8. 'è' → logprob: -11.260137557983398
    9. ' ' → logprob: -12.510137557983398
    10. ' ' → logprob: -12.760137557983398

Token 45: 'ième' (ID: 41126)
  Prédit: ' voisin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voisin' → logprob: -0.5254732966423035
    2. 'ème' → logprob: -2.4004733562469482
    3. 'ième' → logprob: -2.5254733562469482
    4. '<|end|>' → logprob: -2.7754733562469482
    5. ')' → logprob: -3.2754733562469482
    6. ' voisins' → logprob: -4.025473117828369
    7. 'vo' → logprob: -4.275473117828369
    8. ' ' → logprob: -4.525473117828369
    9. 'ieme' → logprob: -4.775473117828369
    10. ' sommet' → logprob: -4.900473117828369

Token 46: ' point' (ID: 2438)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: ' suivant' (ID: 68705)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33411651849746704
    2. ')' → logprob: -2.5841164588928223
    3. '<|end|>' → logprob: -2.5841164588928223
    4. 's' → logprob: -2.7091164588928223
    5. ' adjacent' → logprob: -4.209116458892822
    6. '_' → logprob: -4.584116458892822
    7. ' )' → logprob: -4.959116458892822
    8. ',' → logprob: -5.334116458892822
    9. ' voisin' → logprob: -5.834116458892822
    10. ' suivant' → logprob: -5.959116458892822

Token 48: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4593590199947357
    2. ',' → logprob: -2.3343589305877686
    3. ' ' → logprob: -2.9593589305877686
    4. ' ,' → logprob: -2.9593589305877686
    5. '.' → logprob: -3.2093589305877686
    6. ')' → logprob: -3.5843589305877686
    7. '<|end|>' → logprob: -3.5843589305877686
    8. '(s' → logprob: -4.334359169006348
    9. '```' → logprob: -4.709359169006348
    10. 'def' → logprob: -5.334359169006348

Token 49: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.8251221179962158
    2. ',' → logprob: -2.075122117996216
    3. 's' → logprob: -2.200122117996216
    4. '.' → logprob: -2.325122117996216
    5. ' ,' → logprob: -2.325122117996216
    6. '\' → logprob: -2.450122117996216
    7. '<|end|>' → logprob: -2.575122117996216
    8. '  ' → logprob: -2.825122117996216
    9. '   ' → logprob: -3.200122117996216
    10. ')' → logprob: -3.575122117996216

Token 50: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0722694396972656
    2. ')' → logprob: -1.6972694396972656
    3. ' ' → logprob: -2.3222694396972656
    4. '\' → logprob: -2.4472694396972656
    5. '\n' → logprob: -2.8222694396972656
    6. '.' → logprob: -3.0722694396972656
    7. ',' → logprob: -3.4472694396972656
    8. '_' → logprob: -3.5722694396972656
    9. '   ' → logprob: -3.8222694396972656
    10. '<|end|>' → logprob: -3.9472694396972656

Token 51: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1195791959762573
    2. ' ' → logprob: -1.2445791959762573
    3. '#' → logprob: -2.744579315185547
    4. '    ' → logprob: -2.994579315185547
    5. ' #' → logprob: -3.369579315185547
    6. '\' → logprob: -3.494579315185547
    7. 'n' → logprob: -3.619579315185547
    8. ' \' → logprob: -3.744579315185547
    9. ')' → logprob: -3.869579315185547
    10. '<|end|>' → logprob: -3.994579315185547

Token 52: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6619374752044678
    2. 'a' → logprob: -1.2869374752044678
    3. 'i' → logprob: -3.1619374752044678
    4. 'ignes' → logprob: -3.1619374752044678
    5. 'es' → logprob: -3.9119374752044678
    6. 'ine' → logprob: -4.161937713623047
    7. 'ien' → logprob: -4.536937713623047
    8. 'iné' → logprob: -4.911937713623047
    9. 'et' → logprob: -5.411937713623047
    10. ''' → logprob: -5.411937713623047

Token 53: 'angle' (ID: 7140)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.15309102833271027
    2. 'e' → logprob: -3.1530909538269043
    3. 'i' → logprob: -4.403090953826904
    4. 'ar' → logprob: -4.653090953826904
    5. 'é' → logprob: -5.028090953826904
    6. 'angle' → logprob: -5.278090953826904
    7. 'import' → logprob: -5.403090953826904
    8. ''' → logprob: -5.590590953826904
    9. ''ensemble' → logprob: -5.653090953826904
    10. 'arc' → logprob: -5.840590953826904

Token 54: ' entre' (ID: 3853)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30413535237312317
    2. '_' → logprob: -1.5541353225708008
    3. 's' → logprob: -4.304135322570801
    4. ' de' → logprob: -4.429135322570801
    5. ' d' → logprob: -5.429135322570801
    6. ' =' → logprob: -5.429135322570801
    7. '  ' → logprob: -6.054135322570801
    8. ' _' → logprob: -6.179135322570801
    9. ' entre' → logprob: -6.554135322570801
    10. '_de' → logprob: -6.679135322570801

Token 55: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39023447036743164
    2. ' deux' → logprob: -1.3902344703674316
    3. ' les' → logprob: -3.2652344703674316
    4. ' two' → logprob: -4.640234470367432
    5. ' l' → logprob: -5.390234470367432
    6. ' points' → logprob: -5.765234470367432
    7. ' le' → logprob: -5.890234470367432
    8. 'les' → logprob: -6.140234470367432
    9. 's' → logprob: -6.390234470367432
    10. '<|end|>' → logprob: -6.515234470367432

Token 56: ' somm' (ID: 44830)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.11754005402326584
    2. ' somm' → logprob: -3.242540121078491
    3. 'points' → logprob: -3.867540121078491
    4. ' sommet' → logprob: -3.867540121078491
    5. ' ' → logprob: -4.617539882659912
    6. 's' → logprob: -5.117539882659912
    7. '_s' → logprob: -5.617539882659912
    8. ' voisins' → logprob: -6.242539882659912
    9. ' vertices' → logprob: -6.742539882659912
    10. '_' → logprob: -6.742539882659912

Token 57: 'ets' (ID: 1719)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7453657984733582
    2. 'es' → logprob: -0.7453657984733582
    3. 'ets' → logprob: -3.120365858078003
    4. 'et' → logprob: -5.745365619659424
    5. 'és' → logprob: -5.995365619659424
    6. 'i' → logprob: -8.120366096496582
    7. 'a' → logprob: -8.370366096496582
    8. 'é' → logprob: -9.120366096496582
    9. 'è' → logprob: -9.745366096496582
    10. 'ètres' → logprob: -9.870366096496582

Token 58: ' cons' (ID: 1473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5536705255508423
    2. 's' → logprob: -1.5536705255508423
    3. '_' → logprob: -3.3036704063415527
    4. ' =' → logprob: -3.3036704063415527
    5. ' s' → logprob: -3.5536704063415527
    6. '  ' → logprob: -4.053670406341553
    7. ' ,' → logprob: -4.053670406341553
    8. '   ' → logprob: -4.428670406341553
    9. ' is' → logprob: -4.553670406341553
    10. ',' → logprob: -4.928670406341553

Token 59: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.048823993653059006
    2. 'é' → logprob: -3.6738240718841553
    3. 't' → logprob: -4.048823833465576
    4. 'e' → logprob: -6.423823833465576
    5. 'tit' → logprob: -7.298823833465576
    6. 'ecut' → logprob: -7.548823833465576
    7. 'u' → logprob: -8.048824310302734
    8. 'éc' → logprob: -8.173824310302734
    9. 'truct' → logprob: -8.798824310302734
    10. 'équ' → logprob: -8.798824310302734

Token 60: 'ifs' (ID: 14119)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0029267107602208853
    2. 'u' → logprob: -6.377926826477051
    3. 'i' → logprob: -7.752926826477051
    4. 'ifs' → logprob: -8.50292682647705
    5. ' ' → logprob: -8.75292682647705
    6. '   ' → logprob: -9.25292682647705
    7. 'if' → logprob: -9.50292682647705
    8. 'e' → logprob: -10.25292682647705
    9. 't' → logprob: -10.62792682647705
    10. ' i' → logprob: -11.00292682647705

Token 61: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2353687733411789
    2. ' est' → logprob: -2.4853687286376953
    3. ' =' → logprob: -3.3603687286376953
    4. 's' → logprob: -3.6103687286376953
    5. ',' → logprob: -3.9853687286376953
    6. ' is' → logprob: -5.235368728637695
    7. ' s' → logprob: -5.360368728637695
    8. ')' → logprob: -5.360368728637695
    9. '   ' → logprob: -5.360368728637695
    10. '  ' → logprob: -5.735368728637695

Token 62: 'dans' (ID: 108151)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38905689120292664
    2. ' )' → logprob: -1.389056921005249
    3. ' ' → logprob: -4.38905668258667
    4. ' est' → logprob: -4.51405668258667
    5. ' en' → logprob: -4.76405668258667
    6. 'de' → logprob: -5.38905668258667
    7. 'l' → logprob: -5.38905668258667
    8. 's' → logprob: -5.51405668258667
    9. ' les' → logprob: -6.13905668258667
    10. ',' → logprob: -6.26405668258667

Token 63: ' l' (ID: 305)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.8397321701049805
    2. 'le' → logprob: -1.4647321701049805
    3. ' la' → logprob: -1.9647321701049805
    4. ' radians' → logprob: -2.4647321701049805
    5. 'la' → logprob: -3.4647321701049805
    6. ' une' → logprob: -3.5897321701049805
    7. ' un' → logprob: -4.4647321701049805
    8. ')' → logprob: -4.7147321701049805
    9. 'l' → logprob: -4.9647321701049805
    10. 'r' → logprob: -5.0897321701049805

Token 64: ''ordre' (ID: 124753)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1801401525735855
    2. ''' → logprob: -2.430140256881714
    3. ''espace' → logprob: -3.430140256881714
    4. '')' → logprob: -4.430140018463135
    5. ''ordre' → logprob: -4.680140018463135
    6. ''a' → logprob: -4.930140018463135
    7. 'e' → logprob: -5.055140018463135
    8. ''é' → logprob: -5.805140018463135
    9. ''ap' → logprob: -6.180140018463135
    10. ''esp' → logprob: -7.055140018463135

Token 65: ' du' (ID: 1462)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.428335428237915
    2. ' du' → logprob: -1.428335428237915
    3. ')' → logprob: -1.678335428237915
    4. ' autour' → logprob: -2.053335428237915
    5. ' )' → logprob: -2.928335428237915
    6. 'de' → logprob: -3.428335428237915
    7. 'd' → logprob: -3.428335428237915
    8. 'des' → logprob: -3.928335428237915
    9. ' de' → logprob: -4.178335189819336
    10. 'du' → logprob: -4.303335189819336

Token 66: ' pol' (ID: 1823)
  Prédit: 'pol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pol' → logprob: -0.3298308849334717
    2. ' pol' → logprob: -1.4548308849334717
    3. ' polygon' → logprob: -3.9548308849334717
    4. ' sens' → logprob: -4.579831123352051
    5. 'polygon' → logprob: -4.704831123352051
    6. 'sens' → logprob: -5.579831123352051
    7. 'c' → logprob: -6.954831123352051
    8. '```' → logprob: -6.954831123352051
    9. ' code' → logprob: -7.079831123352051
    10. 'poly' → logprob: -8.26733112335205

Token 67: 'yg' (ID: 8408)
  Prédit: 'yg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yg' → logprob: -0.0021926139015704393
    2. 'ygon' → logprob: -6.377192497253418
    3. 'y' → logprob: -7.752192497253418
    4. '```' → logprob: -11.502192497253418
    5. 'YGON' → logprob: -11.752192497253418
    6. ')' → logprob: -12.252192497253418
    7. '``' → logprob: -12.627192497253418
    8. 'ys' → logprob: -12.752192497253418
    9. '\' → logprob: -12.877192497253418
    10. '   ' → logprob: -13.127192497253418

Token 68: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.001976095838472247
    2. '```' → logprob: -7.251976013183594
    3. 'on' → logprob: -7.626976013183594
    4. ')' → logprob: -8.626976013183594
    5. '#' → logprob: -8.751976013183594
    6. 'ône' → logprob: -9.001976013183594
    7. '``' → logprob: -10.001976013183594
    8. 'оне' → logprob: -10.001976013183594
    9. 'onne' → logprob: -10.251976013183594
    10. '`' → logprob: -10.626976013183594

Token 69: ' éto' (ID: 76515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0668242871761322
    2. ' )' → logprob: -2.816824197769165
    3. ' est' → logprob: -6.441824436187744
    4. '   ' → logprob: -7.191824436187744
    5. ',' → logprob: -7.316824436187744
    6. 's' → logprob: -7.941824436187744
    7. ' ' → logprob: -8.191823959350586
    8. ' de' → logprob: -8.691823959350586
    9. '')' → logprob: -8.691823959350586
    10. ' du' → logprob: -9.066823959350586

Token 70: 'ilé' (ID: 156760)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -1.6285815238952637
    2. '`' → logprob: -1.7535815238952637
    3. 'o' → logprob: -2.1285815238952637
    4. 'one' → logprob: -2.7535815238952637
    5. '``' → logprob: -3.0035815238952637
    6. 'ône' → logprob: -3.0035815238952637
    7. '```' → logprob: -3.1285815238952637
    8. '�' → logprob: -3.2535815238952637
    9. 'оне' → logprob: -3.5035815238952637
    10. '{' → logprob: -3.8785815238952637

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14469407498836517
    2. ' )' → logprob: -2.0196940898895264
    3. ' est' → logprob: -6.644693851470947
    4. ' ' → logprob: -8.269694328308105
    5. '   ' → logprob: -9.394694328308105
    6. 's' → logprob: -9.394694328308105
    7. ',' → logprob: -9.519694328308105
    8. ' en' → logprob: -9.894694328308105
    9. '')' → logprob: -10.769694328308105
    10. ' de' → logprob: -10.894694328308105

Token 72: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5171980261802673
    2. ' est' → logprob: -2.142198085784912
    3. '   ' → logprob: -2.517198085784912
    4. ' =' → logprob: -2.767198085784912
    5. ')' → logprob: -3.142198085784912
    6. 's' → logprob: -3.392198085784912
    7. ',' → logprob: -3.767198085784912
    8. ' )' → logprob: -4.767198085784912
    9. ' s' → logprob: -4.892198085784912
    10. '=' → logprob: -4.892198085784912

Token 73: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7567795515060425
    2. '360' → logprob: -1.2567795515060425
    3. '2' → logprob: -1.8817795515060425
    4. ' (' → logprob: -3.506779670715332
    5. ' math' → logprob: -3.756779670715332
    6. '    ' → logprob: -4.381779670715332
    7. '(' → logprob: -4.381779670715332
    8. '   ' → logprob: -5.881779670715332
    9. '0' → logprob: -6.131779670715332
    10. '32' → logprob: -6.381779670715332

Token 74: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.45821908116340637
    2. '360' → logprob: -1.458219051361084
    3. ' ' → logprob: -2.458219051361084
    4. '(' → logprob: -3.958219051361084
    5. ' (' → logprob: -3.958219051361084
    6. ' math' → logprob: -5.208219051361084
    7. 'math' → logprob: -5.958219051361084
    8. '   ' → logprob: -7.208219051361084
    9. '"' → logprob: -7.458219051361084
    10. ''' → logprob: -7.583219051361084

Token 75: '*pi' (ID: 112844)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.28313177824020386
    2. ' *' → logprob: -1.4081318378448486
    3. '*pi' → logprob: -6.2831315994262695
    4. '.' → logprob: -10.28313159942627
    5. 'import' → logprob: -10.65813159942627
    6. 'pi' → logprob: -11.28313159942627
    7. ' ' → logprob: -11.28313159942627
    8. '*Math' → logprob: -11.90813159942627
    9. '**' → logprob: -12.28313159942627
    10. '*object' → logprob: -12.90813159942627

Token 76: '*K' (ID: 167586)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.2134360820055008
    2. '/K' → logprob: -2.3384361267089844
    3. '*' → logprob: -2.9634361267089844
    4. ' /' → logprob: -3.2134361267089844
    5. '/N' → logprob: -6.213436126708984
    6. ' *' → logprob: -6.588436126708984
    7. '*K' → logprob: -8.838436126708984
    8. '/k' → logprob: -9.588436126708984
    9. 'K' → logprob: -9.963436126708984
    10. ' ' → logprob: -10.213436126708984

Token 77: '/N' (ID: 33677)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0302980225533247
    2. ' /' → logprob: -3.7802979946136475
    3. ')' → logprob: -5.405298233032227
    4. '/N' → logprob: -6.905298233032227
    5. '*' → logprob: -7.405298233032227
    6. '   ' → logprob: -7.655298233032227
    7. '/math' → logprob: -9.030298233032227
    8. ' ' → logprob: -9.280298233032227
    9. ' )' → logprob: -10.530298233032227
    10. '/
' → logprob: -10.655298233032227

Token 78: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03973999246954918
    2. ')' → logprob: -3.5397400856018066
    3. '    
' → logprob: -5.414740085601807
    4. 'n' → logprob: -6.539740085601807
    5. 'angle' → logprob: -7.289740085601807
    6. ',' → logprob: -7.664740085601807
    7. '    ' → logprob: -8.164739608764648
    8. '#' → logprob: -8.414739608764648
    9. '```' → logprob: -8.414739608764648
    10. '.' → logprob: -8.789739608764648

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009337326046079397
    2. '    
' → logprob: -7.750933647155762
    3. ')' → logprob: -8.250933647155762
    4. '    ' → logprob: -10.500933647155762
    5. 'for' → logprob: -10.625933647155762
    6. '```' → logprob: -10.750933647155762
    7. 's' → logprob: -10.875933647155762
    8. ' for' → logprob: -11.000933647155762
    9. 'n' → logprob: -11.125933647155762
    10. 'angle' → logprob: -11.250933647155762

Token 80: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020053839311003685
    2. ')' → logprob: -4.895053863525391
    3. 'angle' → logprob: -5.145053863525391
    4. '    
' → logprob: -5.895053863525391
    5. 'n' → logprob: -7.645053863525391
    6. ' angle' → logprob: -7.895053863525391
    7. 'v' → logprob: -8.02005386352539
    8. 's' → logprob: -8.14505386352539
    9. 'p' → logprob: -8.52005386352539
    10. '    ' → logprob: -8.52005386352539

Token 81: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33992111682891846
    2. 'angle' → logprob: -1.8399211168289185
    3. ' angle' → logprob: -2.964920997619629
    4. 'n' → logprob: -4.714920997619629
    5. ')' → logprob: -4.964920997619629
    6. 'theta' → logprob: -4.964920997619629
    7. ' theta' → logprob: -5.214920997619629
    8. ' for' → logprob: -5.214920997619629
    9. '    ' → logprob: -5.339920997619629
    10. ' step' → logprob: -5.589920997619629

Token 82: ''' (ID: 6)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2653111219406128
    2. 'e' → logprob: -1.3903111219406128
    3. 'angle' → logprob: -1.5153111219406128
    4. 'ine' → logprob: -3.0153112411499023
    5. 'a' → logprob: -3.1403112411499023
    6. 'p' → logprob: -3.5153112411499023
    7. 'i' → logprob: -3.6403112411499023
    8. 'n' → logprob: -3.8903112411499023
    9. 'ength' → logprob: -4.015311241149902
    10. '#' → logprob: -4.765311241149902

Token 83: 'aire' (ID: 8189)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.27091261744499207
    2. 'a' → logprob: -2.6459126472473145
    3. 'n' → logprob: -2.7709126472473145
    4. 'r' → logprob: -3.8959126472473145
    5. 'c' → logprob: -4.3959126472473145
    6. 'p' → logprob: -4.6459126472473145
    7. ' angle' → logprob: -4.8959126472473145
    8. 'import' → logprob: -5.0209126472473145
    9. 'x' → logprob: -5.0209126472473145
    10. 'ang' → logprob: -5.3959126472473145

Token 84: ' peut' (ID: 9216)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5076470375061035
    2. ' =' → logprob: -1.2576470375061035
    3. '_' → logprob: -2.6326470375061035
    4. '(' → logprob: -3.5076470375061035
    5. '<|end|>' → logprob: -5.6326470375061035
    6. ')' → logprob: -5.8826470375061035
    7. '<|end|>' → logprob: -7.1326470375061035
    8. '_total' → logprob: -7.1326470375061035
    9. ' of' → logprob: -7.5076470375061035
    10. '*' → logprob: -7.8826470375061035

Token 85: ' être' (ID: 9104)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5341881513595581
    2. ' =' → logprob: -0.9091881513595581
    3. '   ' → logprob: -6.034188270568848
    4. ' être' → logprob: -6.159188270568848
    5. 'être' → logprob: -6.284188270568848
    6. ' ' → logprob: -6.409188270568848
    7. '  ' → logprob: -7.409188270568848
    8. '_' → logprob: -7.534188270568848
    9. ')' → logprob: -7.784188270568848
    10. 's' → logprob: -8.034188270568848

Token 86: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.1731196939945221
    2. 'calcul' → logprob: -2.0481197834014893
    3. 'cal' → logprob: -4.67311954498291
    4. '0' → logprob: -5.04811954498291
    5. ' computed' → logprob: -5.79811954498291
    6. 'appro' → logprob: -5.92311954498291
    7. ' ' → logprob: -6.42311954498291
    8. '```' → logprob: -6.54811954498291
    9. ' calculated' → logprob: -6.79811954498291
    10. 'computed' → logprob: -7.29811954498291

Token 87: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.18897219002246857
    2. 'ée' → logprob: -2.188972234725952
    3. 'e' → logprob: -3.188972234725952
    4. 'er' → logprob: -5.688971996307373
    5. '(' → logprob: -5.813971996307373
    6. '_' → logprob: -5.938971996307373
    7. 'u' → logprob: -6.438971996307373
    8. 'a' → logprob: -6.438971996307373
    9. 'ated' → logprob: -7.063971996307373
    10. '=' → logprob: -7.438971996307373

Token 88: ' par' (ID: 686)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.806594967842102
    2. ')' → logprob: -2.0565948486328125
    3. '   ' → logprob: -2.3065948486328125
    4. ' =' → logprob: -2.5565948486328125
    5. ' ' → logprob: -2.6815948486328125
    6. ' (' → logprob: -3.1815948486328125
    7. 'import' → logprob: -3.6815948486328125
    8. 'def' → logprob: -4.3065948486328125
    9. '    ' → logprob: -4.6815948486328125
    10. '*' → logprob: -4.6815948486328125

Token 89: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.487066388130188
    2. 'abs' → logprob: -1.862066388130188
    3. ' math' → logprob: -2.1120662689208984
    4. ' la' → logprob: -2.3620662689208984
    5. ' ' → logprob: -2.6120662689208984
    6. ' abs' → logprob: -2.8620662689208984
    7. 'math' → logprob: -3.4870662689208984
    8. '1' → logprob: -3.7370662689208984
    9. '"' → logprob: -3.9870662689208984
    10. '    ' → logprob: -4.112066268920898

Token 90: ' formule' (ID: 84316)
  Prédit: 'form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'form' → logprob: -0.41838228702545166
    2. ' formule' → logprob: -1.9183822870254517
    3. 's' → logprob: -2.043382167816162
    4. 'suite' → logprob: -3.668382167816162
    5. 'import' → logprob: -4.918382167816162
    6. ' somme' → logprob: -5.043382167816162
    7. 'f' → logprob: -5.043382167816162
    8. 'mé' → logprob: -5.918382167816162
    9. 'som' → logprob: -5.918382167816162
    10. 'formula' → logprob: -6.043382167816162

Token 91: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32881468534469604
    2. ' :' → logprob: -2.578814744949341
    3. ':' → logprob: -2.953814744949341
    4. ' *' → logprob: -3.578814744949341
    5. '   ' → logprob: -3.703814744949341
    6. '(' → logprob: -4.203814506530762
    7. ' =' → logprob: -4.328814506530762
    8. '*' → logprob: -4.828814506530762
    9. 's' → logprob: -5.078814506530762
    10. ' (' → logprob: -5.203814506530762

Token 92: ' l' (ID: 305)
  Prédit: 'Sho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sho' → logprob: -0.7284533381462097
    2. 'l' → logprob: -0.9784533381462097
    3. ' l' → logprob: -3.4784533977508545
    4. ' la' → logprob: -3.4784533977508545
    5. 'sho' → logprob: -3.6034533977508545
    6. ' Sho' → logprob: -4.103453159332275
    7. 'la' → logprob: -4.103453159332275
    8. ' sho' → logprob: -4.853453159332275
    9. 'Sh' → logprob: -6.603453159332275
    10. 'La' → logprob: -6.603453159332275

Token 93: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3827728033065796
    2. ''' → logprob: -1.6327728033065796
    3. 'e' → logprob: -2.132772922515869
    4. 'oi' → logprob: -2.132772922515869
    5. '')' → logprob: -3.382772922515869
    6. '```' → logprob: -3.382772922515869
    7. ''o' → logprob: -3.757772922515869
    8. ''*' → logprob: -3.757772922515869
    9. 'ei' → logprob: -4.257772922515869
    10. 'i' → logprob: -4.507772922515869

Token 94: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.11932547390460968
    2. ''' → logprob: -2.3693253993988037
    3. 'a' → logprob: -5.244325637817383
    4. '')' → logprob: -5.494325637817383
    5. 'A' → logprob: -6.119325637817383
    6. '’' → logprob: -6.244325637817383
    7. ''air' → logprob: -6.369325637817383
    8. '')
' → logprob: -7.494325637817383
    9. 'pol' → logprob: -7.744325637817383
    10. ' aire' → logprob: -8.369325637817383

Token 95: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22867129743099213
    2. '_' → logprob: -1.9786713123321533
    3. ' (' → logprob: -4.478671073913574
    4. ' ' → logprob: -4.978671073913574
    5. '_polygon' → logprob: -5.103671073913574
    6. '=' → logprob: -5.353671073913574
    7. ')' → logprob: -5.353671073913574
    8. ' polygon' → logprob: -5.978671073913574
    9. '_conv' → logprob: -6.103671073913574
    10. '*' → logprob: -6.228671073913574

Token 96: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.05435098335146904
    2. 'e' → logprob: -3.8043510913848877
    3. ''' → logprob: -3.9293510913848877
    4. ''une' → logprob: -5.179350852966309
    5. 'a' → logprob: -6.304350852966309
    6. 'un' → logprob: -6.429350852966309
    7. '’un' → logprob: -7.304350852966309
    8. 'u' → logprob: -7.304350852966309
    9. '')' → logprob: -8.929350852966309
    10. 'i' → logprob: -9.054350852966309

Token 97: ' pol' (ID: 1823)
  Prédit: ' pol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pol' → logprob: -0.5256087183952332
    2. 'pol' → logprob: -0.9006087183952332
    3. '```' → logprob: -7.150608539581299
    4. 'polygon' → logprob: -7.400608539581299
    5. 'pent' → logprob: -8.525609016418457
    6. ' polygon' → logprob: -8.525609016418457
    7. 'poly' → logprob: -8.900609016418457
    8. 'triangle' → logprob: -9.025609016418457
    9. ' triangle' → logprob: -9.025609016418457
    10. '   ' → logprob: -10.150609016418457

Token 98: 'yg' (ID: 8408)
  Prédit: 'yg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yg' → logprob: -0.03326041251420975
    2. 'ygon' → logprob: -3.5332603454589844
    3. 'y' → logprob: -5.783260345458984
    4. '```' → logprob: -8.908260345458984
    5. 'YGON' → logprob: -9.408260345458984
    6. '``' → logprob: -10.408260345458984
    7. 'ys' → logprob: -10.783260345458984
    8. '}' → logprob: -10.783260345458984
    9. 'yn' → logprob: -11.283260345458984
    10. '}
' → logprob: -11.283260345458984

Token 99: 'one' (ID: 690)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.2111940383911133
    2. 'og' → logprob: -1.3361940383911133
    3. 'on' → logprob: -2.0861940383911133
    4. 'g' → logprob: -2.4611940383911133
    5. '`' → logprob: -3.0861940383911133
    6. 'ône' → logprob: -3.2111940383911133
    7. 'gone' → logprob: -3.8361940383911133
    8. '```' → logprob: -4.086194038391113
    9. 'one' → logprob: -4.461194038391113
    10. '   ' → logprob: -4.586194038391113

Token 100: ' rég' (ID: 14467)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35643476247787476
    2. ')' → logprob: -1.8564348220825195
    3. ' ' → logprob: -2.6064348220825195
    4. 'n' → logprob: -3.7314348220825195
    5. '_' → logprob: -5.2314348220825195
    6. ' points' → logprob: -5.3564348220825195
    7. ':' → logprob: -5.4814348220825195
    8. '    ' → logprob: -5.4814348220825195
    9. ',' → logprob: -5.4814348220825195
    10. 'import' → logprob: -5.8564348220825195

Token 101: 'ulier' (ID: 32659)
  Prédit: 'ulier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulier' → logprob: -0.004293630365282297
    2. 'ul' → logprob: -5.629293441772461
    3. 'ulaire' → logprob: -8.254293441772461
    4. 'u' → logprob: -8.504293441772461
    5. '```' → logprob: -9.629293441772461
    6. '}' → logprob: -10.129293441772461
    7. 'uli' → logprob: -10.504293441772461
    8. '{' → logprob: -11.004293441772461
    9. 'ular' → logprob: -11.129293441772461
    10. 'uil' → logprob: -11.879293441772461

Token 102: ' éto' (ID: 76515)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5063343048095703
    2. ')' → logprob: -1.0063343048095703
    3. 'n' → logprob: -5.00633430480957
    4. '
' → logprob: -5.63133430480957
    5. '    
' → logprob: -5.75633430480957
    6. ' ' → logprob: -5.88133430480957
    7. ' 
' → logprob: -5.88133430480957
    8. ':' → logprob: -6.38133430480957
    9. ',' → logprob: -6.50633430480957
    10. ' )' → logprob: -7.00633430480957

Token 103: 'ilé' (ID: 156760)
  Prédit: 'aire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aire' → logprob: -1.0051980018615723
    2. 'taire' → logprob: -1.6301980018615723
    3. '```' → logprob: -2.2551980018615723
    4. 'la' → logprob: -3.0051980018615723
    5. 'g' → logprob: -3.2551980018615723
    6. 'ulaire' → logprob: -3.3801980018615723
    7. 'tri' → logprob: -3.7551980018615723
    8. 'naire' → logprob: -3.7551980018615723
    9. 'le' → logprob: -4.130198001861572
    10. 'culaire' → logprob: -4.130198001861572

Token 104: ' inscrit' (ID: 141862)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007438970264047384
    2. ')' → logprob: -6.382439136505127
    3. '    
' → logprob: -6.757439136505127
    4. '
' → logprob: -7.257439136505127
    5. 'angle' → logprob: -7.632439136505127
    6. 'import' → logprob: -7.757439136505127
    7. ' ' → logprob: -8.007438659667969
    8. 'n' → logprob: -8.132438659667969
    9. ' points' → logprob: -8.132438659667969
    10. '#' → logprob: -8.507438659667969

Token 105: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3335055708885193
    2. ')' → logprob: -1.833505630493164
    3. ':' → logprob: -3.083505630493164
    4. '):' → logprob: -3.833505630493164
    5. ',' → logprob: -4.208505630493164
    6. 'import' → logprob: -4.458505630493164
    7. 'def' → logprob: -4.833505630493164
    8. ' ' → logprob: -5.208505630493164
    9. ' :' → logprob: -6.333505630493164
    10. ' =' → logprob: -6.458505630493164

Token 106: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.3093217611312866
    2. 'un' → logprob: -1.6843217611312866
    3. ' a' → logprob: -3.684321880340576
    4. 'le' → logprob: -4.059321880340576
    5. 'c' → logprob: -4.559321880340576
    6. ''un' → logprob: -4.559321880340576
    7. 'a' → logprob: -5.184321880340576
    8. 'circle' → logprob: -6.184321880340576
    9. 'la' → logprob: -6.684321880340576
    10. ' le' → logprob: -6.934321880340576

Token 107: ' cercle' (ID: 172399)
  Prédit: ' cercle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cercle' → logprob: -0.041537392884492874
    2. ' circle' → logprob: -3.416537284851074
    3. 'c' → logprob: -5.291537284851074
    4. 'circle' → logprob: -6.541537284851074
    5. ' cer' → logprob: -7.166537284851074
    6. 'cer' → logprob: -7.916537284851074
    7. ' Cerc' → logprob: -8.916537284851074
    8. ' cerc' → logprob: -9.916537284851074
    9. ' círculo' → logprob: -11.291537284851074
    10. 'circ' → logprob: -11.541537284851074

Token 108: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16756607592105865
    2. ')' → logprob: -2.2925660610198975
    3. '    
' → logprob: -4.667566299438477
    4. '
' → logprob: -4.792566299438477
    5. ',' → logprob: -5.167566299438477
    6. ':' → logprob: -5.167566299438477
    7. 'radius' → logprob: -5.667566299438477
    8. ')
' → logprob: -6.042566299438477
    9. 'n' → logprob: -6.417566299438477
    10. ' 
' → logprob: -6.792566299438477

Token 109: ' rayon' (ID: 80967)
  Prédit: ' rayon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rayon' → logprob: -0.6063047051429749
    2. 'ray' → logprob: -1.10630464553833
    3. 'radius' → logprob: -3.10630464553833
    4. ' ' → logprob: -3.23130464553833
    5. ' radius' → logprob: -3.85630464553833
    6. ' ray' → logprob: -4.48130464553833
    7. '```' → logprob: -5.98130464553833
    8. ' unit' → logprob: -6.73130464553833
    9. '   ' → logprob: -7.48130464553833
    10. '  ' → logprob: -7.60630464553833

Token 110: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47625428438186646
    2. ' ' → logprob: -0.9762542843818665
    3. ' math' → logprob: -6.726254463195801
    4. 'math' → logprob: -8.1012544631958
    5. ' R' → logprob: -8.2262544631958
    6. ' `' → logprob: -9.3512544631958
    7. ' ' → logprob: -9.6012544631958
    8. 'r' → logprob: -9.7262544631958
    9. '   ' → logprob: -11.1012544631958
    10. 'R' → logprob: -11.1012544631958

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007704468909651041
    2. ' ' → logprob: -4.882704257965088
    3. 'math' → logprob: -9.882704734802246
    4. ' math' → logprob: -10.382704734802246
    5. '   ' → logprob: -12.007704734802246
    6. '  ' → logprob: -13.007704734802246
    7. '"' → logprob: -13.757704734802246
    8. '(' → logprob: -14.007704734802246
    9. '100' → logprob: -14.007704734802246
    10. '`' → logprob: -14.507704734802246

Token 112: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019661281257867813
    2. '
' → logprob: -5.2696614265441895
    3. '    
' → logprob: -5.6446614265441895
    4. ')' → logprob: -5.7696614265441895
    5. 'angle' → logprob: -6.7696614265441895
    6. 'r' → logprob: -7.0196614265441895
    7. 'n' → logprob: -7.2696614265441895
    8. 'area' → logprob: -7.3946614265441895
    9. 'R' → logprob: -7.7696614265441895
    10. ' area' → logprob: -8.019660949707031

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011474648490548134
    2. ' area' → logprob: -4.761474609375
    3. 'area' → logprob: -6.261474609375
    4. '    ' → logprob: -8.261474609375
    5. ' return' → logprob: -8.636474609375
    6. 'angle' → logprob: -9.261474609375
    7. ' angle' → logprob: -10.261474609375
    8. 's' → logprob: -10.386474609375
    9. 'return' → logprob: -10.511474609375
    10. ' result' → logprob: -10.636474609375

Token 114: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6276536583900452
    2. ' area' → logprob: -0.8776536583900452
    3. 'area' → logprob: -3.5026535987854004
    4. ' return' → logprob: -4.5026535987854
    5. ' A' → logprob: -6.6276535987854
    6. 'return' → logprob: -6.7526535987854
    7. 'A' → logprob: -6.8776535987854
    8. '    ' → logprob: -7.2526535987854
    9. ' R' → logprob: -7.3776535987854
    10. ' a' → logprob: -7.5026535987854

Token 115: ' aire' (ID: 37016)
  Prédit: ' area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.12071682512760162
    2. 'area' → logprob: -2.2457168102264404
    3. '   ' → logprob: -5.4957170486450195
    4. ' A' → logprob: -6.6207170486450195
    5. 'A' → logprob: -6.7457170486450195
    6. ' return' → logprob: -8.24571704864502
    7. 'angle' → logprob: -8.74571704864502
    8. ' angle' → logprob: -8.74571704864502
    9. ' ' → logprob: -9.49571704864502
    10. ' R' → logprob: -9.62071704864502

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020862184464931488
    2. '=' → logprob: -3.895862102508545
    3. 's' → logprob: -8.395862579345703
    4. '_' → logprob: -10.020862579345703
    5. ' ' → logprob: -10.770862579345703
    6. ' ' → logprob: -11.395862579345703
    7. '_=' → logprob: -13.145862579345703
    8. '	' → logprob: -13.270862579345703
    9. '_de' → logprob: -13.770862579345703
    10. ' =(' → logprob: -13.895862579345703

Token 117: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20218339562416077
    2. ' (' → logprob: -2.952183485031128
    3. ' ' → logprob: -3.202183485031128
    4. '(' → logprob: -3.327183485031128
    5. '(N' → logprob: -3.702183485031128
    6. 'N' → logprob: -3.827183485031128
    7. ' N' → logprob: -5.327183246612549
    8. 'math' → logprob: -7.077183246612549
    9. '   ' → logprob: -7.827183246612549
    10. ' math' → logprob: -7.952183246612549

Token 118: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.05014198645949364
    2. '0' → logprob: -3.0501420497894287
    3. ' N' → logprob: -6.92514181137085
    4. '1' → logprob: -8.675142288208008
    5. '(N' → logprob: -9.175142288208008
    6. ' ' → logprob: -9.175142288208008
    7. 'math' → logprob: -9.425142288208008
    8. '(' → logprob: -9.675142288208008
    9. '   ' → logprob: -10.550142288208008
    10. '  ' → logprob: -12.550142288208008

Token 119: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.4296706020832062
    2. '*' → logprob: -1.3046705722808838
    3. ' *' → logprob: -2.929670572280884
    4. ' ' → logprob: -4.804670810699463
    5. ' /' → logprob: -5.179670810699463
    6. ')' → logprob: -5.304670810699463
    7. '   ' → logprob: -5.429670810699463
    8. '  ' → logprob: -7.554670810699463
    9. ' )' → logprob: -8.179670333862305
    10. '*/' → logprob: -8.929670333862305

Token 120: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.162282367469743e-05
    2. ' ' → logprob: -9.750091552734375
    3. '4' → logprob: -10.875091552734375
    4. ')' → logprob: -11.500091552734375
    5. '(' → logprob: -12.625091552734375
    6. '   ' → logprob: -15.000091552734375
    7. '8' → logprob: -15.250091552734375
    8. '/' → logprob: -16.000091552734375
    9. '```' → logprob: -16.250091552734375
    10. '  ' → logprob: -16.625091552734375

Token 121: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033784033730626106
    2. ' )' → logprob: -6.378378391265869
    3. ')*' → logprob: -6.503378391265869
    4. '*' → logprob: -9.128378868103027
    5. '*)' → logprob: -10.128378868103027
    6. ' *' → logprob: -11.003378868103027
    7. '   ' → logprob: -12.128378868103027
    8. ' ' → logprob: -12.628378868103027
    9. ' *)' → logprob: -14.128378868103027
    10. '    ' → logprob: -15.128378868103027

Token 122: 'sin' (ID: 23516)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0016386464703828096
    2. ' math' → logprob: -6.876638412475586
    3. 'sin' → logprob: -7.751638412475586
    4. 'abs' → logprob: -9.251638412475586
    5. '(math' → logprob: -10.126638412475586
    6. '1' → logprob: -11.001638412475586
    7. '(' → logprob: -12.126638412475586
    8. 'ma' → logprob: -12.626638412475586
    9. 'cmath' → logprob: -12.626638412475586
    10. '   ' → logprob: -13.126638412475586

Token 123: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009718484943732619
    2. '(math' → logprob: -7.125971794128418
    3. '((' → logprob: -9.375971794128418
    4. '(
' → logprob: -9.625971794128418
    5. ' (' → logprob: -11.500971794128418
    6. '(

' → logprob: -13.000971794128418
    7. ')' → logprob: -14.250971794128418
    8. 'math' → logprob: -14.375971794128418
    9. '2' → logprob: -14.750971794128418
    10. '```' → logprob: -15.000971794128418

Token 124: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022197965532541275
    2. '2' → logprob: -4.02219820022583
    3. ')' → logprob: -6.02219820022583
    4. '(math' → logprob: -6.77219820022583
    5. '((' → logprob: -8.022197723388672
    6. 'math' → logprob: -9.147197723388672
    7. '(
' → logprob: -10.647197723388672
    8. ' (' → logprob: -12.522197723388672
    9. '```' → logprob: -13.147197723388672
    10. ' ' → logprob: -13.647197723388672

Token 125: '*pi' (ID: 112844)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0003502434410620481
    2. 'math' → logprob: -8.500349998474121
    3. '*pi' → logprob: -9.250349998474121
    4. ' *' → logprob: -10.125349998474121
    5. ' math' → logprob: -12.875349998474121
    6. '(math' → logprob: -13.000349998474121
    7. '*K' → logprob: -13.125349998474121
    8. '*Math' → logprob: -13.875349998474121
    9. '   ' → logprob: -14.750349998474121
    10. '*m' → logprob: -14.875349998474121

Token 126: '*K' (ID: 167586)
  Prédit: '*K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*K' → logprob: -0.10037823021411896
    2. '*' → logprob: -2.3503782749176025
    3. '*k' → logprob: -9.850378036499023
    4. ' *' → logprob: -9.975378036499023
    5. 'K' → logprob: -9.975378036499023
    6. '*N' → logprob: -11.100378036499023
    7. '*Math' → logprob: -12.850378036499023
    8. '*(' → logprob: -13.600378036499023
    9. '*C' → logprob: -13.975378036499023
    10. '()*' → logprob: -13.975378036499023

Token 127: '/N' (ID: 33677)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.005147300660610199
    2. '*N' → logprob: -5.880147457122803
    3. '/N' → logprob: -6.755147457122803
    4. '*K' → logprob: -8.255146980285645
    5. '/' → logprob: -8.505146980285645
    6. ')' → logprob: -8.630146980285645
    7. '*/' → logprob: -9.130146980285645
    8. '*)' → logprob: -9.255146980285645
    9. ' *' → logprob: -9.255146980285645
    10. ')*' → logprob: -9.630146980285645

Token 128: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018565983918961138
    2. '))' → logprob: -9.1251859664917
    3. ' )' → logprob: -9.7501859664917
    4. '*' → logprob: -11.7501859664917
    5. ')*' → logprob: -12.5001859664917
    6. ')**' → logprob: -13.3751859664917
    7. '*)' → logprob: -13.6251859664917
    8. ' ' → logprob: -14.1251859664917
    9. ')))' → logprob: -14.1251859664917
    10. ')
' → logprob: -14.2501859664917

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007503578905016184
    2. ')' → logprob: -5.257503509521484
    3. '(' → logprob: -6.882503509521484
    4. '    
' → logprob: -8.507503509521484
    5. 'import' → logprob: -9.007503509521484
    6. ':' → logprob: -9.007503509521484
    7. ',' → logprob: -9.507503509521484
    8. '*' → logprob: -9.507503509521484
    9. 'return' → logprob: -9.632503509521484
    10. '.' → logprob: -9.632503509521484

Token 130: ' area' (ID: 3624)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00821170024573803
    2. ')' → logprob: -5.383211612701416
    3. '    
' → logprob: -5.883211612701416
    4. '
' → logprob: -8.133212089538574
    5. '  
' → logprob: -9.133212089538574
    6. '    ' → logprob: -9.883212089538574
    7. 'return' → logprob: -9.883212089538574
    8. ' 
' → logprob: -10.133212089538574
    9. '   
' → logprob: -10.258212089538574
    10. 'result' → logprob: -10.508212089538574

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.297250896692276
    2. '=' → logprob: -1.6722508668899536
    3. '(' → logprob: -3.547250986099243
    4. '_' → logprob: -3.797250986099243
    5. ' ' → logprob: -4.422250747680664
    6. ')' → logprob: -5.672250747680664
    7. 's' → logprob: -6.422250747680664
    8. '  ' → logprob: -8.547250747680664
    9. '()' → logprob: -8.797250747680664
    10. '   ' → logprob: -8.922250747680664

Token 132: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.34849730134010315
    2. '(N' → logprob: -1.2234972715377808
    3. '(math' → logprob: -10.72349739074707
    4. '   ' → logprob: -11.34849739074707
    5. 'N' → logprob: -12.47349739074707
    6. 'math' → logprob: -12.59849739074707
    7. ' ' → logprob: -12.97349739074707
    8. '(' → logprob: -12.97349739074707
    9. '(n' → logprob: -13.47349739074707
    10. '(float' → logprob: -13.72349739074707

Token 133: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.000763510703109e-05
    2. ' N' → logprob: -10.500040054321289
    3. '   ' → logprob: -11.375040054321289
    4. 'math' → logprob: -14.000040054321289
    5. '(N' → logprob: -17.00004005432129
    6. ' ' → logprob: -17.12504005432129
    7. '	N' → logprob: -17.62504005432129
    8. '    ' → logprob: -17.87504005432129
    9. ')' → logprob: -18.12504005432129
    10. 'n' → logprob: -18.37504005432129

Token 134: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.14273571968078613
    2. ' /' → logprob: -2.017735719680786
    3. ' ' → logprob: -10.142735481262207
    4. ')' → logprob: -11.392735481262207
    5. ')/' → logprob: -12.517735481262207
    6. ' )' → logprob: -13.017735481262207
    7. '   ' → logprob: -13.142735481262207
    8. ')/(' → logprob: -15.017735481262207
    9. '/
' → logprob: -15.017735481262207
    10. '*' → logprob: -15.267735481262207

Token 135: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '(' → logprob: -17.250045776367188
    4. '1' → logprob: -17.750045776367188
    5. '  ' → logprob: -17.750045776367188
    6. '   ' → logprob: -17.875045776367188
    7. 'math' → logprob: -18.250045776367188
    8. '```' → logprob: -18.250045776367188
    9. ')' → logprob: -18.500045776367188
    10. '
' → logprob: -19.375045776367188

Token 136: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3134065270423889
    2. ')*' → logprob: -1.3134064674377441
    3. '*)' → logprob: -9.563406944274902
    4. ' )' → logprob: -9.813406944274902
    5. '*' → logprob: -11.063406944274902
    6. '   ' → logprob: -12.938406944274902
    7. ')*(' → logprob: -13.938406944274902
    8. ' ' → logprob: -15.188406944274902
    9. ')
' → logprob: -16.563405990600586
    10. ' *' → logprob: -16.688405990600586

Token 137: 'math' (ID: 20310)
  Prédit: 'math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0005582740413956344
    2. ' math' → logprob: -7.500558376312256
    3. '(math' → logprob: -12.500557899475098
    4. '   ' → logprob: -14.375557899475098
    5. 'import' → logprob: -14.500557899475098
    6. 'Math' → logprob: -16.125558853149414
    7. 'sin' → logprob: -16.375558853149414
    8. 'ma' → logprob: -16.875558853149414
    9. '.math' → logprob: -17.000558853149414
    10. 'm' → logprob: -17.250558853149414

Token 138: '.sin' (ID: 35734)
  Prédit: '.sin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sin' → logprob: -0.023313263431191444
    2. '.' → logprob: -3.773313283920288
    3. ' .' → logprob: -10.523313522338867
    4. '.sqrt' → logprob: -11.398313522338867
    5. '.pi' → logprob: -11.523313522338867
    6. '.s' → logprob: -11.898313522338867
    7. '.Sin' → logprob: -12.273313522338867
    8. '*sin' → logprob: -12.398313522338867
    9. 'sin' → logprob: -14.273313522338867
    10. '.py' → logprob: -14.398313522338867

Token 139: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.1054253011243418e-05
    2. '(
' → logprob: -11.375020980834961
    3. ' (' → logprob: -12.000020980834961
    4. '((' → logprob: -12.875020980834961
    5. '(math' → logprob: -14.750020980834961
    6. '(

' → logprob: -15.375020980834961
    7. '(`' → logprob: -17.25002098083496
    8. '(.' → logprob: -17.50002098083496
    9. '('' → logprob: -17.87502098083496
    10. '(Math' → logprob: -18.37502098083496

Token 140: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011050531640648842
    2. '(' → logprob: -4.511050701141357
    3. ' ' → logprob: -13.1360502243042
    4. ' (' → logprob: -15.3860502243042
    5. 'math' → logprob: -15.3860502243042
    6. '   ' → logprob: -15.8860502243042
    7. '(
' → logprob: -16.261051177978516
    8. '(math' → logprob: -16.511051177978516
    9. ')' → logprob: -16.761051177978516
    10. '((' → logprob: -17.386051177978516

Token 141: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.046417489647865295
    2. '*pi' → logprob: -3.171417474746704
    3. '.' → logprob: -6.546417713165283
    4. '.pi' → logprob: -6.921417713165283
    5. ' *' → logprob: -7.671417713165283
    6. '.*' → logprob: -8.796417236328125
    7. '*Math' → logprob: -9.171417236328125
    8. ')*' → logprob: -10.046417236328125
    9. '*(' → logprob: -10.171417236328125
    10. ')' → logprob: -10.171417236328125

Token 142: 'math' (ID: 20310)
  Prédit: 'math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.00033415461075492203
    2. ' math' → logprob: -8.125333786010742
    3. 'pi' → logprob: -10.250333786010742
    4. '(math' → logprob: -13.625333786010742
    5. '.math' → logprob: -14.000333786010742
    6. 'cmath' → logprob: -14.750333786010742
    7. 'm' → logprob: -16.375333786010742
    8. 'import' → logprob: -16.500333786010742
    9. 'mat' → logprob: -16.875333786010742
    10. '/math' → logprob: -17.125333786010742

Token 143: '.pi' (ID: 55497)
  Prédit: '.pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pi' → logprob: -0.0006401229766197503
    2. '.' → logprob: -7.375639915466309
    3. '.p' → logprob: -12.000639915466309
    4. '.py' → logprob: -12.375639915466309
    5. '.PI' → logprob: -13.250639915466309
    6. ' .' → logprob: -14.875639915466309
    7. '.sin' → logprob: -15.125639915466309
    8. '*pi' → logprob: -15.250639915466309
    9. 'pi' → logprob: -15.750639915466309
    10. '.atan' → logprob: -16.375640869140625

Token 144: '*K' (ID: 167586)
  Prédit: '*K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*K' → logprob: -0.20143644511699677
    2. '*' → logprob: -1.7014364004135132
    3. ' *' → logprob: -11.451436042785645
    4. '*k' → logprob: -11.826436042785645
    5. '*N' → logprob: -13.201436042785645
    6. '*(' → logprob: -13.951436042785645
    7. '**' → logprob: -14.451436042785645
    8. 'K' → logprob: -14.451436042785645
    9. '*C' → logprob: -14.451436042785645
    10. '*A' → logprob: -15.701436042785645

Token 145: '/N' (ID: 33677)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.47559401392936707
    2. '/N' → logprob: -0.9755940437316895
    3. ' /' → logprob: -6.6005940437316895
    4. '/
' → logprob: -9.350593566894531
    5. '/n' → logprob: -9.975593566894531
    6. '/
/' → logprob: -11.225593566894531
    7. '/
' → logprob: -13.225593566894531
    8. '   ' → logprob: -13.475593566894531
    9. '/

' → logprob: -13.725593566894531
    10. ')/' → logprob: -13.850593566894531

Token 146: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.749814019713085e-06
    2. '))' → logprob: -12.500006675720215
    3. ' )' → logprob: -12.875006675720215
    4. ')
' → logprob: -15.750006675720215
    5. '   ' → logprob: -16.25000762939453
    6. ')))' → logprob: -17.37500762939453
    7. ')}' → logprob: -17.75000762939453
    8. ')`' → logprob: -17.87500762939453
    9. ')**' → logprob: -18.12500762939453
    10. '())' → logprob: -19.25000762939453

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015248429961502552
    2. '
' → logprob: -4.7652482986450195
    3. 'print' → logprob: -5.1402482986450195
    4. '<|end|>' → logprob: -8.14024829864502
    5. ' print' → logprob: -8.26524829864502
    6. '    
' → logprob: -8.76524829864502
    7. ')' → logprob: -10.64024829864502
    8. '	print' → logprob: -11.64024829864502
    9. '```' → logprob: -12.51524829864502
    10. ' 
' → logprob: -12.89024829864502

Token 148: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5766778588294983
    2. '   ' → logprob: -0.8266778588294983
    3. ' print' → logprob: -7.3266777992248535
    4. '    
' → logprob: -10.201678276062012
    5. 'return' → logprob: -11.076678276062012
    6. '
' → logprob: -11.201678276062012
    7. '	print' → logprob: -12.576678276062012
    8. ')' → logprob: -12.701678276062012
    9. '```' → logprob: -13.326678276062012
    10. '  
' → logprob: -14.076678276062012

Token 149: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3868825435638428
    2. '(area' → logprob: -1.1368825435638428
    3. '(
' → logprob: -12.386882781982422
    4. 'area' → logprob: -12.761882781982422
    5. '()' → logprob: -14.011882781982422
    6. ' (' → logprob: -14.511882781982422
    7. '(

' → logprob: -14.511882781982422
    8. '("("' → logprob: -14.886882781982422
    9. '(a' → logprob: -15.011882781982422
    10. '(angle' → logprob: -15.011882781982422

Token 150: '"{' (ID: 27510)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.5286986231803894
    2. '"{' → logprob: -1.1536986827850342
    3. '"' → logprob: -3.153698682785034
    4. '(' → logprob: -3.278698682785034
    5. '({' → logprob: -5.153698444366455
    6. '("{' → logprob: -6.028698444366455
    7. 'area' → logprob: -6.403698444366455
    8. '(area' → logprob: -6.528698444366455
    9. '")' → logprob: -6.778698444366455
    10. ''{' → logprob: -6.903698444366455

Token 151: 'area' (ID: 7502)
  Prédit: 'area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.0002314303710591048
    2. ' area' → logprob: -8.375231742858887
    3. 'are' → logprob: -14.375231742858887
    4. '   ' → logprob: -16.25023078918457
    5. ' ' → logprob: -16.50023078918457
    6. '  ' → logprob: -18.37523078918457
    7. '(area' → logprob: -18.37523078918457
    8. 'abs' → logprob: -18.62523078918457
    9. '.area' → logprob: -18.75023078918457
    10. 'a' → logprob: -18.75023078918457

Token 152: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.004355583339929581
    2. ':' → logprob: -5.504355430603027
    3. ' :.' → logprob: -8.879355430603027
    4. '}")' → logprob: -9.004355430603027
    5. ' :' → logprob: -11.629355430603027
    6. ':f' → logprob: -13.379355430603027
    7. ')' → logprob: -14.004355430603027
    8. ' )' → logprob: -14.129355430603027
    9. ':e' → logprob: -14.379355430603027
    10. ' }' → logprob: -14.379355430603027

Token 153: '8' (ID: 23)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.030684882774949074
    2. '9' → logprob: -4.655684947967529
    3. '10' → logprob: -4.780684947967529
    4. '7' → logprob: -5.030684947967529
    5. '8' → logprob: -5.530684947967529
    6. '15' → logprob: -7.530684947967529
    7. '5' → logprob: -7.530684947967529
    8. '12' → logprob: -8.030684471130371
    9. '3' → logprob: -8.655684471130371
    10. '4' → logprob: -8.905684471130371

Token 154: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -7.896309739408025e-07
    2. 'g' → logprob: -14.625000953674316
    3. 'e' → logprob: -15.125000953674316
    4. ' f' → logprob: -20.375
    5. '}' → logprob: -21.375
    6. '6' → logprob: -22.125
    7. 'lf' → logprob: -22.875
    8. '
' → logprob: -23.25
    9. '```' → logprob: -23.375
    10. 'F' → logprob: -24.25

Token 155: '}")

' (ID: 119200)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -1.3425219549390022e-05
    2. '")' → logprob: -11.50001335144043
    3. '}")
' → logprob: -13.25001335144043
    4. ')")' → logprob: -14.00001335144043
    5. '}' → logprob: -15.37501335144043
    6. ' }' → logprob: -15.75001335144043
    7. '}")

' → logprob: -16.12501335144043
    8. '}"' → logprob: -16.75001335144043
    9. '}")
' → logprob: -17.12501335144043
    10. '})' → logprob: -17.37501335144043

Token 156: 'if' (ID: 366)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37143880128860474
    2. 'if' → logprob: -1.87143874168396
    3. '<|end|>' → logprob: -2.37143874168396
    4. '\n' → logprob: -2.99643874168396
    5. '\' → logprob: -4.996438980102539
    6. '```' → logprob: -6.871438980102539
    7. ' if' → logprob: -7.121438980102539
    8. ')' → logprob: -7.371438980102539
    9. '  
' → logprob: -7.496438980102539
    10. ' ' → logprob: -7.496438980102539

Token 157: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.016020642593503
    2. '__' → logprob: -4.266020774841309
    3. '_' → logprob: -6.641020774841309
    4. ' _' → logprob: -8.141020774841309
    5. ' main' → logprob: -8.891020774841309
    6. ' ' → logprob: -10.266020774841309
    7. ' ' → logprob: -10.391020774841309
    8. '_main' → logprob: -10.766020774841309
    9. ' ___' → logprob: -11.391020774841309
    10. '_name' → logprob: -11.891020774841309

Token 158: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2772502303123474
    2. '.__' → logprob: -2.277250289916992
    3. '__.__' → logprob: -2.402250289916992
    4. '__.' → logprob: -3.402250289916992
    5. '.' → logprob: -4.402250289916992
    6. '==' → logprob: -7.027250289916992
    7. ' ==' → logprob: -7.652250289916992
    8. ' __' → logprob: -8.027250289916992
    9. '().__' → logprob: -8.402250289916992
    10. '__["' → logprob: -8.527250289916992

Token 159: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.802049756515771e-05
    2. '__.__' → logprob: -9.750067710876465
    3. '__.' → logprob: -11.625067710876465
    4. '____' → logprob: -14.875067710876465
    5. '__
' → logprob: -15.750067710876465
    6. '___' → logprob: -16.25006866455078
    7. '_' → logprob: -17.12506866455078
    8. '__["' → logprob: -17.50006866455078
    9. '==' → logprob: -17.87506866455078
    10. '__

' → logprob: -18.12506866455078

Token 160: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.45776742696762085
    2. '==' → logprob: -1.5827674865722656
    3. ' ==' → logprob: -1.8327674865722656
    4. '=="' → logprob: -6.957767486572266
    5. '.__' → logprob: -7.957767486572266
    6. '.' → logprob: -8.582767486572266
    7. '_' → logprob: -8.582767486572266
    8. '__.__' → logprob: -8.957767486572266
    9. '=' → logprob: -10.457767486572266
    10. ' =="' → logprob: -11.332767486572266

Token 161: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00032879042555578053
    2. ''' → logprob: -8.12532901763916
    3. ' "__' → logprob: -10.37532901763916
    4. '__' → logprob: -13.37532901763916
    5. '"user' → logprob: -17.375328063964844
    6. ' '__' → logprob: -17.750328063964844
    7. '"name' → logprob: -18.125328063964844
    8. '"_' → logprob: -18.625328063964844
    9. ' "' → logprob: -18.625328063964844
    10. ' ' → logprob: -19.375328063964844

Token 162: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.12724032998085022
    2. '__' → logprob: -2.1272404193878174
    3. 'name' → logprob: -8.127240180969238
    4. '"' → logprob: -12.252240180969238
    5. '__":
' → logprob: -12.877240180969238
    6. '_main' → logprob: -13.002240180969238
    7. '__
' → logprob: -13.127240180969238
    8. ' main' → logprob: -13.502240180969238
    9. 'built' → logprob: -13.627240180969238
    10. '__':
' → logprob: -14.627240180969238

Token 163: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.006737035233527422
    2. '__' → logprob: -5.006737232208252
    3. '__':
' → logprob: -10.756736755371094
    4. '_' → logprob: -15.881736755371094
    5. '__["' → logprob: -16.256736755371094
    6. '__.' → logprob: -16.381736755371094
    7. '__.__' → logprob: -17.506736755371094
    8. '__:' → logprob: -17.756736755371094
    9. '"' → logprob: -18.131736755371094
    10. '```' → logprob: -18.506736755371094

Token 164: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.10041940957307816
    2. ' main' → logprob: -2.350419521331787
    3. '	main' → logprob: -8.850419044494629
    4. '   ' → logprob: -9.600419044494629
    5. '_main' → logprob: -13.350419044494629
    6. '.main' → logprob: -17.225419998168945
    7. '(main' → logprob: -17.350419998168945
    8. ' ' → logprob: -17.350419998168945
    9. '  ' → logprob: -17.850419998168945
    10. '    
' → logprob: -18.225419998168945

Token 165: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -2.339278580620885e-06
    2. ' main' → logprob: -13.000001907348633
    3. '	main' → logprob: -20.125001907348633
    4. '   ' → logprob: -23.250001907348633
    5. 'ma' → logprob: -24.125001907348633
    6. '.main' → logprob: -24.375001907348633
    7. '_main' → logprob: -24.500001907348633
    8. 'mai' → logprob: -24.750001907348633
    9. '(main' → logprob: -25.250001907348633
    10. 'Main' → logprob: -25.500001907348633

Token 166: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 164
Tokens correctement prédits (1ère position, stricte): 57
Tokens correctement prédits (1ère position, avec adaptation): 59
Tokens correctement prédits (top 10): 115
Précision stricte (1ère position): 34.76%
Précision adaptée (1ère position): 35.98%
Précision (top 10): 70.12%
================================================================================
