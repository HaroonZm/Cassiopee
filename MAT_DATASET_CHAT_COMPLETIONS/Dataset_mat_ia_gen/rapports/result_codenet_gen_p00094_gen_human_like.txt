================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:56:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b = map(int, input().split())
area_m2 = a * b
tsubo = area_m2 / 3.305785
print(tsubo)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07676442712545395
    2. '+' → logprob: -2.7017643451690674
    3. ' =' → logprob: -5.2017645835876465
    4. ',' → logprob: -7.7017645835876465
    5. '+=' → logprob: -8.201764106750488
    6. ' +' → logprob: -8.701764106750488
    7. ' ' → logprob: -9.451764106750488
    8. '*' → logprob: -9.576764106750488
    9. '```' → logprob: -10.201764106750488
    10. '.' → logprob: -10.576764106750488

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.651124894618988
    2. '0' → logprob: -1.1511249542236328
    3. '1' → logprob: -1.9011249542236328
    4. '10' → logprob: -4.776124954223633
    5. '5' → logprob: -6.026124954223633
    6. '42' → logprob: -7.776124954223633
    7. '3' → logprob: -8.151124954223633
    8. '2' → logprob: -8.526124954223633
    9. ' b' → logprob: -8.526124954223633
    10. '[' → logprob: -8.776124954223633

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47542017698287964
    2. '(lambda' → logprob: -1.3504202365875244
    3. '```' → logprob: -2.9754202365875244
    4. '<|end|>' → logprob: -2.9754202365875244
    5. '(int' → logprob: -5.475419998168945
    6. '<|end|>' → logprob: -6.850419998168945
    7. '()' → logprob: -7.225419998168945
    8. '(token' → logprob: -7.225419998168945
    9. '`' → logprob: -7.475419998168945
    10. 'user' → logprob: -7.537919998168945

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.37451139092445374
    2. ')' → logprob: -1.2495113611221313
    3. '(' → logprob: -4.624511241912842
    4. 'input' → logprob: -5.374511241912842
    5. ',' → logprob: -5.624511241912842
    6. '`)' → logprob: -6.249511241912842
    7. '`' → logprob: -7.124511241912842
    8. ',input' → logprob: -7.124511241912842
    9. '(raw' → logprob: -7.249511241912842
    10. '(user' → logprob: -7.249511241912842

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.039313144981861115
    2. ' input' → logprob: -3.4143130779266357
    3. '(input' → logprob: -5.664313316345215
    4. ')' → logprob: -6.164313316345215
    5. '<input' → logprob: -10.789313316345215
    6. '=input' → logprob: -11.289313316345215
    7. ' )' → logprob: -11.539313316345215
    8. ',input' → logprob: -11.539313316345215
    9. '```' → logprob: -11.914313316345215
    10. '[input' → logprob: -12.289313316345215

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.8765158653259277
    2. '(' → logprob: -1.3765158653259277
    3. '()' → logprob: -1.7515158653259277
    4. ')' → logprob: -2.1265158653259277
    5. '('' → logprob: -4.626515865325928
    6. '(()' → logprob: -5.126515865325928
    7. '(""))' → logprob: -5.751515865325928
    8. '());' → logprob: -5.876515865325928
    9. '(token' → logprob: -6.001515865325928
    10. '```' → logprob: -6.376515865325928

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005678066518157721
    2. 'strip' → logprob: -7.50056791305542
    3. 'rstrip' → logprob: -11.375567436218262
    4. ' split' → logprob: -13.250567436218262
    5. ')' → logprob: -14.125567436218262
    6. 'read' → logprob: -14.875567436218262
    7. '(split' → logprob: -15.250567436218262
    8. 'spl' → logprob: -16.000568389892578
    9. 'startswith' → logprob: -16.125568389892578
    10. 'replace' → logprob: -17.875568389892578

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13553567230701447
    2. '())' → logprob: -2.385535717010498
    3. '))' → logprob: -3.385535717010498
    4. '()' → logprob: -7.760535717010498
    5. '()))' → logprob: -8.26053524017334
    6. '`)' → logprob: -9.76053524017334
    7. '(' → logprob: -10.38553524017334
    8. ')`' → logprob: -10.51053524017334
    9. ')))' → logprob: -11.76053524017334
    10. ' )' → logprob: -11.76053524017334

Token 11: 'area' (ID: 7502)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012353538535535336
    2. '*' → logprob: -5.137353420257568
    3. '#' → logprob: -5.512353420257568
    4. '+
' → logprob: -7.262353420257568
    5. ',' → logprob: -8.137353897094727
    6. '[' → logprob: -8.262353897094727
    7. '=' → logprob: -8.887353897094727
    8. 'a' → logprob: -9.012353897094727
    9. '-' → logprob: -9.137353897094727
    10. '**' → logprob: -9.637353897094727

Token 12: '_m' (ID: 1285)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18491479754447937
    2. '_' → logprob: -1.8099148273468018
    3. '_area' → logprob: -5.934914588928223
    4. ')' → logprob: -7.309914588928223
    5. '(a' → logprob: -7.809914588928223
    6. '[' → logprob: -7.934914588928223
    7. '=' → logprob: -8.059914588928223
    8. '()' → logprob: -8.809914588928223
    9. '(area' → logprob: -8.809914588928223
    10. 'area' → logprob: -9.684914588928223

Token 13: '2' (ID: 17)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4339267313480377
    2. '=' → logprob: -1.6839267015457153
    3. 'ethod' → logprob: -3.058926820755005
    4. ' =' → logprob: -3.558926820755005
    5. '²' → logprob: -3.683926820755005
    6. '^' → logprob: -3.808926820755005
    7. 'as' → logprob: -5.058926582336426
    8. '2' → logprob: -5.183926582336426
    9. 'an' → logprob: -5.183926582336426
    10. '_squared' → logprob: -5.183926582336426

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7628833055496216
    2. '=' → logprob: -0.8878833055496216
    3. '_' → logprob: -2.137883186340332
    4. '[' → logprob: -7.262883186340332
    5. '*' → logprob: -7.512883186340332
    6. ')' → logprob: -7.512883186340332
    7. ' ' → logprob: -7.512883186340332
    8. '**' → logprob: -7.887883186340332
    9. '_=' → logprob: -8.262883186340332
    10. '_space' → logprob: -8.637883186340332

Token 15: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3133690655231476
    2. ' a' → logprob: -1.3133690357208252
    3. ' ' → logprob: -9.688368797302246
    4. '0' → logprob: -11.188368797302246
    5. ' float' → logprob: -12.563368797302246
    6. 'ab' → logprob: -12.688368797302246
    7. 'area' → logprob: -12.813368797302246
    8. '(a' → logprob: -12.813368797302246
    9. 'b' → logprob: -13.063368797302246
    10. ' area' → logprob: -13.188368797302246

Token 16: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.47454261779785156
    2. '*' → logprob: -0.9745426177978516
    3. '**' → logprob: -8.724542617797852
    4. ' ' → logprob: -9.224542617797852
    5. ' **' → logprob: -9.224542617797852
    6. '_' → logprob: -11.224542617797852
    7. ')' → logprob: -11.474542617797852
    8. ''' → logprob: -11.474542617797852
    9. '"' → logprob: -11.599542617797852
    10. '`' → logprob: -11.724542617797852

Token 17: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04300639405846596
    2. ' b' → logprob: -3.168006420135498
    3. ' ' → logprob: -12.04300594329834
    4. '100' → logprob: -13.91800594329834
    5. '	b' → logprob: -15.79300594329834
    6. '_b' → logprob: -15.91800594329834
    7. 'a' → logprob: -16.918006896972656
    8. '  ' → logprob: -17.918006896972656
    9. '```' → logprob: -18.355506896972656
    10. ' ' → logprob: -18.480506896972656

Token 18: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6583149433135986
    2. '\n' → logprob: -1.6583149433135986
    3. '**' → logprob: -2.5333149433135986
    4. 'print' → logprob: -3.1583149433135986
    5. '*' → logprob: -3.5333149433135986
    6. '<|end|>' → logprob: -3.7833149433135986
    7. '+' → logprob: -4.0333147048950195
    8. '\' → logprob: -4.1583147048950195
    9. 'area' → logprob: -4.1583147048950195
    10. '#' → logprob: -4.1583147048950195

Token 19: 'ts' (ID: 1561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18526549637317657
    2. '\n' → logprob: -2.68526554107666
    3. 'print' → logprob: -3.31026554107666
    4. 'area' → logprob: -3.81026554107666
    5. '  
' → logprob: -4.31026554107666
    6. '\' → logprob: -4.56026554107666
    7. ' 
' → logprob: -5.56026554107666
    8. '*' → logprob: -5.93526554107666
    9. '```' → logprob: -6.31026554107666
    10. '#' → logprob: -6.81026554107666

Token 20: 'ubo' (ID: 56298)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7454556822776794
    2. '_area' → logprob: -1.9954557418823242
    3. 'h' → logprob: -2.495455741882324
    4. '=' → logprob: -2.745455741882324
    5. 'q' → logprob: -2.995455741882324
    6. '.' → logprob: -3.120455741882324
    7. ' =' → logprob: -3.120455741882324
    8. 'quare' → logprob: -3.745455741882324
    9. '_total' → logprob: -4.370455741882324
    10. 'qrt' → logprob: -4.495455741882324

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6735500693321228
    2. '_' → logprob: -0.7985500693321228
    3. '_area' → logprob: -3.4235501289367676
    4. '=' → logprob: -5.173550128936768
    5. '_space' → logprob: -6.923550128936768
    6. '_per' → logprob: -8.42354965209961
    7. ' _' → logprob: -8.54854965209961
    8. '_=' → logprob: -8.92354965209961
    9. '_to' → logprob: -9.67354965209961
    10. '_m' → logprob: -9.67354965209961

Token 22: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.04307227209210396
    2. 'area' → logprob: -3.16807222366333
    3. ' ' → logprob: -9.793072700500488
    4. '0' → logprob: -11.918072700500488
    5. ' a' → logprob: -12.793072700500488
    6. '(area' → logprob: -13.168072700500488
    7. '  ' → logprob: -14.043072700500488
    8. '   ' → logprob: -14.168072700500488
    9. '1' → logprob: -14.418072700500488
    10. ' (' → logprob: -14.668072700500488

Token 23: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.010064641013741493
    2. '_' → logprob: -4.635064601898193
    3. '_s' → logprob: -9.260065078735352
    4. '_n' → logprob: -10.885065078735352
    5. '_ts' → logprob: -11.010065078735352
    6. '_t' → logprob: -11.135065078735352
    7. '_x' → logprob: -11.510065078735352
    8. '/' → logprob: -11.635065078735352
    9. '_area' → logprob: -11.635065078735352
    10. '_to' → logprob: -11.635065078735352

Token 24: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0012080918531864882
    2. '_' → logprob: -6.751208305358887
    3. ' ' → logprob: -10.876208305358887
    4. '²' → logprob: -12.001208305358887
    5. '```' → logprob: -12.376208305358887
    6. '₂' → logprob: -12.626208305358887
    7. '２' → logprob: -13.501208305358887
    8. '^' → logprob: -13.626208305358887
    9. 'o' → logprob: -14.251208305358887
    10. '​' → logprob: -15.126208305358887

Token 25: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.0353742279112339
    2. '/' → logprob: -4.035374164581299
    3. ' *' → logprob: -4.410374164581299
    4. '*' → logprob: -6.160374164581299
    5. ' //' → logprob: -6.160374164581299
    6. ' ' → logprob: -7.410374164581299
    7. ' ' → logprob: -10.285374641418457
    8. '//' → logprob: -11.535374641418457
    9. '0' → logprob: -11.785374641418457
    10. '```' → logprob: -12.035374641418457

Token 26: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '３' → logprob: -16.25
    4. '33' → logprob: -18.0
    5. '0' → logprob: -18.25
    6. '   ' → logprob: -18.75
    7. '  ' → logprob: -19.5
    8. '三' → logprob: -20.25
    9. 'approximately' → logprob: -20.5
    10. '.' → logprob: -20.75

Token 27: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.125000953674316
    3. '0' → logprob: -15.250000953674316
    4. '３' → logprob: -17.875
    5. '33' → logprob: -17.875
    6. '   ' → logprob: -18.5
    7. 'approximately' → logprob: -18.5
    8. '.' → logprob: -19.25
    9. '```' → logprob: -19.25
    10. '{' → logprob: -19.75

Token 28: '.' (ID: 13)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4748156666755676
    2. '.' → logprob: -0.9748156666755676
    3. '31' → logprob: -8.599815368652344
    4. '```' → logprob: -8.849815368652344
    5. ' ' → logprob: -9.224815368652344
    6. '305' → logprob: -9.974815368652344
    7. '1' → logprob: -10.099815368652344
    8. '306' → logprob: -10.099815368652344
    9. '<|end|>' → logprob: -10.224815368652344
    10. '㎡' → logprob: -11.037315368652344

Token 29: '305' (ID: 24531)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00037728800089098513
    2. '305' → logprob: -8.250377655029297
    3. '31' → logprob: -9.875377655029297
    4. '306' → logprob: -10.250377655029297
    5. '30' → logprob: -11.750377655029297
    6. '0' → logprob: -12.000377655029297
    7. '３' → logprob: -12.500377655029297
    8. '坪' → logprob: -12.500377655029297
    9. '```' → logprob: -12.750377655029297
    10. '.' → logprob: -14.500377655029297

Token 30: '785' (ID: 45085)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.38029998540878296
    2. '\n' → logprob: -1.3803000450134277
    3. '
' → logprob: -3.5053000450134277
    4. ')' → logprob: -4.130300045013428
    5. '<|end|>' → logprob: -5.880300045013428
    6. '' → logprob: -6.005300045013428
    7. '```' → logprob: -6.130300045013428
    8. ' ' → logprob: -6.255300045013428
    9. '#' → logprob: -6.630300045013428
    10. '  
' → logprob: -6.755300045013428

Token 31: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20758609473705292
    2. '\' → logprob: -2.7075860500335693
    3. '7' → logprob: -3.2075860500335693
    4. '6' → logprob: -4.582586288452148
    5. ')' → logprob: -4.707586288452148
    6. 'print' → logprob: -4.707586288452148
    7. '\r' → logprob: -4.707586288452148
    8. '```' → logprob: -4.832586288452148
    9. '<|end|>' → logprob: -5.082586288452148
    10. '4' → logprob: -5.207586288452148

Token 32: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006489329971373081
    2. ' print' → logprob: -8.250648498535156
    3. '\n' → logprob: -9.125648498535156
    4. '
' → logprob: -10.375648498535156
    5. '  
' → logprob: -10.375648498535156
    6. '```' → logprob: -10.375648498535156
    7. '' → logprob: -10.375648498535156
    8. ' ' → logprob: -10.625648498535156
    9. '<|end|>' → logprob: -10.625648498535156
    10. '7' → logprob: -11.000648498535156

Token 33: '(ts' (ID: 70166)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0510571151971817
    2. '(ts' → logprob: -3.0510571002960205
    3. '(area' → logprob: -6.0510573387146
    4. '(t' → logprob: -9.676056861877441
    5. '("("' → logprob: -11.176056861877441
    6. '(`' → logprob: -11.551056861877441
    7. '('' → logprob: -11.926056861877441
    8. '()' → logprob: -12.426056861877441
    9. '((' → logprob: -13.051056861877441
    10. '("' → logprob: -13.426056861877441

Token 34: 'ubo' (ID: 56298)
  Prédit: 'ubo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ubo' → logprob: -0.14897507429122925
    2. 'u' → logprob: -2.023975133895874
    3. 'bo' → logprob: -5.773974895477295
    4. 'ub' → logprob: -6.523974895477295
    5. 'o' → logprob: -6.898974895477295
    6. 'bu' → logprob: -7.898974895477295
    7. 'b' → logprob: -9.648975372314453
    8. ' ' → logprob: -9.898975372314453
    9. 'бо' → logprob: -10.273975372314453
    10. 'obo' → logprob: -10.648975372314453

Token 35: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. '))' → logprob: -13.75000286102295
    3. '）' → logprob: -14.50000286102295
    4. ' )' → logprob: -14.62500286102295
    5. '`)' → logprob: -15.25000286102295
    6. ')`' → logprob: -15.37500286102295
    7. '')' → logprob: -16.375001907348633
    8. ')**' → logprob: -17.000001907348633
    9. '**' → logprob: -17.750001907348633
    10. '")' → logprob: -17.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 33
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 13
Tokens correctement prédits (top 10): 24
Précision stricte (1ère position): 39.39%
Précision adaptée (1ère position): 39.39%
Précision (top 10): 72.73%
================================================================================
