================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    a_score = 0
    b_score = 0
    for _ in range(n):
        a_card, b_card = map(int, input().split())
        if a_card > b_card:
            a_score += a_card + b_card
        elif b_card > a_card:
            b_score += a_card + b_card
        else:
            a_score += a_card
            b_score += b_card
    print(a_score, b_score)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1197752952575684
    2. '\' → logprob: -1.7447752952575684
    3. ' ' → logprob: -1.9947752952575684
    4. '    ' → logprob: -2.1197752952575684
    5. '\n' → logprob: -2.9947752952575684
    6. '    
' → logprob: -3.1197752952575684
    7. '```' → logprob: -3.1197752952575684
    8. ' 
' → logprob: -3.8697752952575684
    9. '<|end|>' → logprob: -3.9947752952575684
    10. '     
' → logprob: -4.869775295257568

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26164835691452026
    2. '    ' → logprob: -1.761648416519165
    3. ' ' → logprob: -3.761648416519165
    4. '```' → logprob: -3.886648416519165
    5. '    
' → logprob: -5.511648178100586
    6. '       ' → logprob: -6.386648178100586
    7. '  ' → logprob: -6.386648178100586
    8. 'pass' → logprob: -6.761648178100586
    9. ' pass' → logprob: -6.761648178100586
    10. ' 
' → logprob: -7.386648178100586

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2774713039398193
    2. 'u' → logprob: -1.4024713039398193
    3. '   ' → logprob: -2.1524713039398193
    4. '=' → logprob: -2.4024713039398193
    5. 'o' → logprob: -2.6524713039398193
    6. '+' → logprob: -3.0274713039398193
    7. 'e' → logprob: -4.027471542358398
    8. ' =' → logprob: -4.027471542358398
    9. 'ext' → logprob: -4.027471542358398
    10. '  ' → logprob: -4.277471542358398

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.391121506690979
    2. ' input' → logprob: -1.266121506690979
    3. 'input' → logprob: -3.5161213874816895
    4. 'int' → logprob: -4.6411213874816895
    5. ' n' → logprob: -6.3911213874816895
    6. ' ' → logprob: -7.8911213874816895
    7. 'n' → logprob: -9.391121864318848
    8. ' randint' → logprob: -9.766121864318848
    9. '```' → logprob: -11.016121864318848
    10. ' a' → logprob: -11.016121864318848

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006758829578757286
    2. '(input' → logprob: -5.006758689880371
    3. '()' → logprob: -11.131758689880371
    4. 'input' → logprob: -11.756758689880371
    5. '(n' → logprob: -12.256758689880371
    6. '(
' → logprob: -12.381758689880371
    7. ' (' → logprob: -12.506758689880371
    8. '('' → logprob: -12.631758689880371
    9. '(int' → logprob: -14.756758689880371
    10. ''' → logprob: -14.756758689880371

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12420543283224106
    2. ')' → logprob: -2.4992053508758545
    3. '()' → logprob: -3.6242053508758545
    4. '())' → logprob: -5.124205589294434
    5. '))' → logprob: -6.999205589294434
    6. '(
' → logprob: -8.249205589294434
    7. '()))' → logprob: -8.749205589294434
    8. '('' → logprob: -8.749205589294434
    9. ' ' → logprob: -9.249205589294434
    10. '```' → logprob: -9.749205589294434

Token 9: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 10: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5625182390213013
    2. ' if' → logprob: -1.1875182390213013
    3. '<|end|>' → logprob: -3.4375181198120117
    4. ')' → logprob: -3.8125181198120117
    5. ' ' → logprob: -3.9375181198120117
    6. '```' → logprob: -4.187518119812012
    7. '    ' → logprob: -4.437518119812012
    8. 'if' (adapté à ' if') → logprob: -5.437518119812012
    9. '\n' → logprob: -5.937518119812012
    10. '  ' → logprob: -6.062518119812012

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.004031026270240545
    2. ' ' → logprob: -5.754031181335449
    3. ' not' → logprob: -7.504031181335449
    4. 'n' → logprob: -8.12903118133545
    5. '  ' → logprob: -13.00403118133545
    6. ' ' → logprob: -13.37903118133545
    7. ' (' → logprob: -14.12903118133545
    8. 'not' → logprob: -14.12903118133545
    9. '(n' → logprob: -14.62903118133545
    10. '	n' → logprob: -15.75403118133545

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3223670423030853
    2. ' >' → logprob: -2.072366952896118
    3. ' <=' → logprob: -2.447366952896118
    4. ' <' → logprob: -3.572366952896118
    5. '==' → logprob: -3.822366952896118
    6. '>' → logprob: -5.197367191314697
    7. ' ' → logprob: -5.447367191314697
    8. ' >=' → logprob: -7.197367191314697
    9. '<=' → logprob: -7.197367191314697
    10. '<' → logprob: -7.447367191314697

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.018151111900806427
    2. '0' → logprob: -4.01815128326416
    3. '  ' → logprob: -15.39315128326416
    4. '1' → logprob: -15.39315128326416
    5. ')' → logprob: -15.64315128326416
    6. ' ' → logprob: -15.83065128326416
    7. ' )' → logprob: -16.143150329589844
    8. ' -' → logprob: -17.018150329589844
    9. ' EOF' → logprob: -17.080650329589844
    10. '=' → logprob: -17.580650329589844

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006742842961102724
    2. ' ' → logprob: -5.00674295425415
    3. '-' → logprob: -11.131742477416992
    4. '1' → logprob: -12.631742477416992
    5. ' -' → logprob: -12.631742477416992
    6. '42' → logprob: -13.006742477416992
    7. '4' → logprob: -14.631742477416992
    8. '   ' → logprob: -14.631742477416992
    9. '    ' → logprob: -14.756742477416992
    10. 's' → logprob: -15.256742477416992

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.572941179503687e-05
    2. ':
' → logprob: -10.625045776367188
    3. ' :' → logprob: -11.625045776367188
    4. '   ' → logprob: -12.625045776367188
    5. '       ' → logprob: -13.000045776367188
    6. ':return' → logprob: -13.000045776367188
    7. ':\' → logprob: -13.375045776367188
    8. '):' → logprob: -13.625045776367188
    9. '    ' → logprob: -14.625045776367188
    10. ':**' → logprob: -15.125045776367188

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003570343542378396
    2. '   ' → logprob: -8.750356674194336
    3. ' break' → logprob: -9.500356674194336
    4. '    ' → logprob: -10.000356674194336
    5. '\n' → logprob: -10.625356674194336
    6. '      ' → logprob: -11.500356674194336
    7. '        ' → logprob: -11.750356674194336
    8. '	break' → logprob: -12.250356674194336
    9. '<|end|>' → logprob: -12.375356674194336
    10. '     ' → logprob: -12.500356674194336

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.014878070913255215
    2. '       ' → logprob: -4.514878273010254
    3. 'break' (adapté à ' break') → logprob: -5.889878273010254
    4. '   ' → logprob: -7.264878273010254
    5. '\n' → logprob: -8.889878273010254
    6. '	break' → logprob: -9.014878273010254
    7. '    ' → logprob: -10.764878273010254
    8. '```' → logprob: -10.764878273010254
    9. '_break' → logprob: -11.514878273010254
    10. ' ' → logprob: -11.514878273010254

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4778728783130646
    2. '\n' → logprob: -1.6028728485107422
    3. ':' → logprob: -2.227872848510742
    4. '    
' → logprob: -4.352872848510742
    5. '\' → logprob: -4.477872848510742
    6. '<|end|>' → logprob: -4.602872848510742
    7. '#' → logprob: -5.227872848510742
    8. ')' → logprob: -5.352872848510742
    9. '\r' → logprob: -5.477872848510742
    10. ' 
' → logprob: -5.477872848510742

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4786057472229004
    2. '\n' → logprob: -1.9786057472229004
    3. '<|end|>' → logprob: -1.9786057472229004
    4. '
' → logprob: -3.6036057472229004
    5. '    
' → logprob: -3.7286057472229004
    6. '#' → logprob: -4.6036057472229
    7. '```' → logprob: -4.6036057472229
    8. ':' → logprob: -4.7286057472229
    9. '\' → logprob: -5.2286057472229
    10. ')' → logprob: -5.3536057472229

Token 20: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27328136563301086
    2. '\n' → logprob: -2.1482813358306885
    3. ' ' → logprob: -3.5232813358306885
    4. '<|end|>' → logprob: -3.6482813358306885
    5. '\' → logprob: -3.7732813358306885
    6. '    ' → logprob: -4.523281574249268
    7. '    
' → logprob: -5.023281574249268
    8. '```' → logprob: -5.398281574249268
    9. ')' → logprob: -5.773281574249268
    10. '\r' → logprob: -5.773281574249268

Token 21: '_score' (ID: 22555)
  Prédit: 'rr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rr' → logprob: -0.40718287229537964
    2. 'rray' → logprob: -1.7821829319000244
    3. 'r' → logprob: -2.4071829319000244
    4. ' =' → logprob: -3.4071829319000244
    5. ' ' → logprob: -4.282182693481445
    6. '[' → logprob: -5.032182693481445
    7. '=' → logprob: -5.157182693481445
    8. ',' → logprob: -5.407182693481445
    9. ' +=' → logprob: -5.657182693481445
    10. 'dd' → logprob: -6.657182693481445

Token 22: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20833446085453033
    2. ' +=' → logprob: -2.083334445953369
    3. ' =' → logprob: -3.458334445953369
    4. 's' → logprob: -4.708334445953369
    5. '=' → logprob: -4.833334445953369
    6. ' ' → logprob: -4.958334445953369
    7. '+=' → logprob: -6.333334445953369
    8. ',' → logprob: -6.708334445953369
    9. '+' → logprob: -6.958334445953369
    10. '_' → logprob: -7.083334445953369

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18446971476078033
    2. '0' → logprob: -1.8094696998596191
    3. ' n' → logprob: -6.434469699859619
    4. ' a' → logprob: -6.809469699859619
    5. ' []' → logprob: -7.184469699859619
    6. 'a' → logprob: -7.434469699859619
    7. '[]' → logprob: -8.809470176696777
    8. ' int' → logprob: -9.059470176696777
    9. 'n' → logprob: -9.184470176696777
    10. ' [' → logprob: -9.684470176696777

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11149293184280396
    2. ' ' → logprob: -2.361492872238159
    3. 'a' → logprob: -5.361493110656738
    4. ' a' → logprob: -6.236493110656738
    5. ' int' → logprob: -6.986493110656738
    6. 'int' → logprob: -7.236493110656738
    7. ' n' → logprob: -7.486493110656738
    8. 'n' → logprob: -7.986493110656738
    9. '[]' → logprob: -8.111493110656738
    10. '1' → logprob: -8.236493110656738

Token 25: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35384076833724976
    2. '<|end|>' → logprob: -1.3538408279418945
    3. ' ' → logprob: -3.9788408279418945
    4. '    ' → logprob: -5.4788408279418945
    5. ' 
' → logprob: -5.7288408279418945
    6. '    
' → logprob: -5.7288408279418945
    7. '<|end|>' → logprob: -5.7288408279418945
    8. 'a' → logprob: -5.9788408279418945
    9. '  ' → logprob: -6.9788408279418945
    10. 'n' → logprob: -7.1038408279418945

Token 27: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.8868018984794617
    2. ' ' → logprob: -1.2618019580841064
    3. ' for' → logprob: -2.0118019580841064
    4. 'for' → logprob: -2.3868019580841064
    5. '   ' → logprob: -3.0118019580841064
    6. 't' → logprob: -5.386801719665527
    7. 's' → logprob: -5.511801719665527
    8. '<|end|>' → logprob: -5.511801719665527
    9. '    ' → logprob: -5.636801719665527
    10. ' b' → logprob: -5.636801719665527

Token 28: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.048741791397333145
    2. '_' → logprob: -3.0487418174743652
    3. '_scores' → logprob: -9.673741340637207
    4. ' _' → logprob: -10.048741340637207
    5. '_s' → logprob: -10.298741340637207
    6. '_sc' → logprob: -12.048741340637207
    7. '_space' → logprob: -13.048741340637207
    8. '_code' → logprob: -13.798741340637207
    9. 'score' → logprob: -14.173741340637207
    10. ' ' → logprob: -14.423741340637207

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010000666603446007
    2. '=' → logprob: -4.760000705718994
    3. ' +=' → logprob: -6.635000705718994
    4. ' ' → logprob: -9.635000228881836
    5. '+=' → logprob: -13.135000228881836
    6. ' |=' → logprob: -14.010000228881836
    7. '<|end|>' → logprob: -14.510000228881836
    8. ' +' → logprob: -14.760000228881836
    9. '    ' → logprob: -14.885000228881836
    10. ' ==' → logprob: -15.135000228881836

Token 30: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1269562542438507
    2. '0' → logprob: -2.1269562244415283
    3. '<|end|>' → logprob: -12.12695598602295
    4. ' a' → logprob: -12.25195598602295
    5. '    ' → logprob: -12.50195598602295
    6. 'a' → logprob: -12.62695598602295
    7. '1' → logprob: -13.00195598602295
    8. ' ' → logprob: -13.62695598602295
    9. '  ' → logprob: -13.81445598602295
    10. ' n' → logprob: -14.37695598602295

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011107946746051311
    2. ' ' → logprob: -4.511107921600342
    3. 'a' → logprob: -10.6361083984375
    4. '1' → logprob: -10.7611083984375
    5. '   ' → logprob: -13.1361083984375
    6. '  ' → logprob: -13.3236083984375
    7. '10' → logprob: -13.3236083984375
    8. '3' → logprob: -13.3861083984375
    9. '100' → logprob: -14.0111083984375
    10. 'n' → logprob: -14.0111083984375

Token 32: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05076107755303383
    2. '<|end|>' → logprob: -3.0507609844207764
    3. '    
' → logprob: -7.3007612228393555
    4. '<|end|>' → logprob: -7.6757612228393555
    5. '
' → logprob: -7.8007612228393555
    6. ')' → logprob: -9.175761222839355
    7. '\n' → logprob: -9.300761222839355
    8. '    ' → logprob: -9.300761222839355
    9. ' ' → logprob: -9.300761222839355
    10. '  ' → logprob: -10.175761222839355

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04401267692446709
    2. '<|end|>' → logprob: -3.2940127849578857
    3. ' ' → logprob: -6.419012546539307
    4. '\n' → logprob: -6.919012546539307
    5. '    
' → logprob: -6.919012546539307
    6. '  ' → logprob: -7.669012546539307
    7. '    ' → logprob: -7.794012546539307
    8. '\' → logprob: -7.919012546539307
    9. ')' → logprob: -8.294013023376465
    10. '<|end|>' → logprob: -8.419013023376465

Token 34: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2682991027832031
    2. 'for' (adapté à ' for') → logprob: -1.7682991027832031
    3. ' for' → logprob: -3.018299102783203
    4. ' ' → logprob: -5.393299102783203
    5. '```' → logprob: -6.518299102783203
    6. '    ' → logprob: -6.643299102783203
    7. 'i' → logprob: -6.893299102783203
    8. '    
' → logprob: -6.893299102783203
    9. '<|end|>' → logprob: -7.143299102783203
    10. '  ' → logprob: -7.143299102783203

Token 35: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7538059949874878
    2. ' i' → logprob: -0.7538059949874878
    3. ' _' → logprob: -2.8788061141967773
    4. '_' → logprob: -6.253806114196777
    5. ' range' → logprob: -8.253806114196777
    6. 'i' → logprob: -8.628806114196777
    7. '  ' → logprob: -9.003806114196777
    8. ' ‌' → logprob: -9.753806114196777
    9. ' ▁' → logprob: -10.128806114196777
    10. ' n' → logprob: -11.003806114196777

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010803856886923313
    2. 'in' → logprob: -5.010803699493408
    3. ' ' → logprob: -5.510803699493408
    4. ' i' → logprob: -11.385804176330566
    5. '  ' → logprob: -11.885804176330566
    6. '_' → logprob: -12.760804176330566
    7. '    ' → logprob: -13.010804176330566
    8. 'range' → logprob: -13.010804176330566
    9. ' n' → logprob: -13.385804176330566
    10. ',' → logprob: -13.385804176330566

Token 37: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.42874205112457275
    2. 'range' → logprob: -1.0537420511245728
    3. ' ' → logprob: -11.178742408752441
    4. '	range' → logprob: -11.553742408752441
    5. 'rang' → logprob: -12.678742408752441
    6. 'r' → logprob: -12.678742408752441
    7. 'ran' → logprob: -13.053742408752441
    8. '(range' → logprob: -13.428742408752441
    9. ' ran' → logprob: -13.678742408752441
    10. ' ' → logprob: -14.178742408752441

Token 38: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.12853559851646423
    2. '(' → logprob: -2.628535509109497
    3. ' (' → logprob: -3.503535509109497
    4. ' n' → logprob: -4.003535747528076
    5. 'n' → logprob: -9.628535270690918
    6. ' ' → logprob: -11.378535270690918
    7. ')' → logprob: -12.503535270690918
    8. '()' → logprob: -12.628535270690918
    9. ' ()' → logprob: -13.753535270690918
    10. '	n' → logprob: -14.003535270690918

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001058890949934721
    2. ':' → logprob: -7.501059055328369
    3. ')' → logprob: -7.876059055328369
    4. ' ):' → logprob: -9.126058578491211
    5. '):
' → logprob: -11.876058578491211
    6. '   ' → logprob: -12.876058578491211
    7. ' ' → logprob: -13.501058578491211
    8. '+' → logprob: -13.626058578491211
    9. ',' → logprob: -13.876058578491211
    10. ' )' → logprob: -14.501058578491211

Token 40: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9429015517234802
    2. '       ' → logprob: -1.192901611328125
    3. ' ' → logprob: -1.942901611328125
    4. '    ' → logprob: -2.067901611328125
    5. '<|end|>' → logprob: -3.442901611328125
    6. ' 
' → logprob: -6.692901611328125
    7. '    
' → logprob: -7.067901611328125
    8. ')' → logprob: -7.442901611328125
    9. '  ' → logprob: -7.567901611328125
    10. '<|end|>' → logprob: -7.692901611328125

Token 41: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3813357651233673
    2. ' s' → logprob: -1.381335735321045
    3. '   ' → logprob: -3.881335735321045
    4. '    ' → logprob: -4.256335735321045
    5. ' x' → logprob: -5.256335735321045
    6. '       ' → logprob: -5.881335735321045
    7. ' line' → logprob: -6.006335735321045
    8. ' a' → logprob: -6.131335735321045
    9. ' input' → logprob: -6.131335735321045
    10. ' player' → logprob: -6.131335735321045

Token 42: '_card' (ID: 37760)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6199830770492554
    2. '_' → logprob: -1.2449830770492554
    3. ' ' → logprob: -3.119983196258545
    4. ' ,' → logprob: -3.244983196258545
    5. '_score' → logprob: -3.619983196258545
    6. '_,' → logprob: -4.494983196258545
    7. ',_' → logprob: -4.619983196258545
    8. ' _' → logprob: -4.869983196258545
    9. ',b' → logprob: -5.119983196258545
    10. '_input' → logprob: -5.244983196258545

Token 43: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6962183713912964
    2. ',' → logprob: -0.9462183713912964
    3. ' ,' → logprob: -2.571218490600586
    4. '=' → logprob: -3.321218490600586
    5. 's' → logprob: -7.696218490600586
    6. ' ' → logprob: -8.571218490600586
    7. '_' → logprob: -10.946218490600586
    8. ')' → logprob: -11.196218490600586
    9. '   ' → logprob: -11.196218490600586
    10. ',s' → logprob: -11.446218490600586

Token 44: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.1100090816617012
    2. 'b' → logprob: -2.36000919342041
    3. ' ' → logprob: -4.98500919342041
    4. '<|end|>' → logprob: -5.86000919342041
    5. '<|end|>' → logprob: -10.48500919342041
    6. '  ' → logprob: -11.61000919342041
    7. 'space' → logprob: -12.11000919342041
    8. '    ' → logprob: -12.48500919342041
    9. '_b' → logprob: -12.61000919342041
    10. '	b' → logprob: -12.86000919342041

Token 45: '_card' (ID: 37760)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.016972173005342484
    2. '_card' → logprob: -4.141972064971924
    3. ' _' → logprob: -7.266972064971924
    4. '_score' → logprob: -9.266972541809082
    5. ' =' → logprob: -10.641972541809082
    6. '_cards' → logprob: -10.641972541809082
    7. '<|end|>' → logprob: -10.891972541809082
    8. '_space' → logprob: -11.641972541809082
    9. '_code' → logprob: -11.766972541809082
    10. '=' → logprob: -12.141972541809082

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11283848434686661
    2. '=' → logprob: -2.2378385066986084
    3. ',' → logprob: -11.612838745117188
    4. ' ' → logprob: -12.237838745117188
    5. '=input' → logprob: -14.362838745117188
    6. ')' → logprob: -14.612838745117188
    7. '<|end|>' → logprob: -14.737838745117188
    8. ' ,' → logprob: -15.862838745117188
    9. '    ' → logprob: -15.987838745117188
    10. '   ' → logprob: -15.987838745117188

Token 47: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.31446704268455505
    2. ' input' → logprob: -1.3144670724868774
    3. 'map' → logprob: -7.439466953277588
    4. 'input' → logprob: -7.564466953277588
    5. ' ' → logprob: -9.689467430114746
    6. ' list' → logprob: -11.439467430114746
    7. '   ' → logprob: -11.814467430114746
    8. ' [' → logprob: -12.189467430114746
    9. '    ' → logprob: -12.314467430114746
    10. '[' → logprob: -13.064467430114746

Token 48: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00697276322171092
    2. '(' → logprob: -5.006972789764404
    3. '(str' → logprob: -8.381972312927246
    4. '(input' → logprob: -10.881972312927246
    5. 'int' → logprob: -12.006972312927246
    6. '(lambda' → logprob: -13.631972312927246
    7. '(list' → logprob: -14.131972312927246
    8. '(
' → logprob: -14.381972312927246
    9. '<int' → logprob: -15.006972312927246
    10. '(eval' → logprob: -15.756972312927246

Token 49: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.18094892799854279
    2. ',input' → logprob: -2.3059489727020264
    3. ',' → logprob: -2.9309489727020264
    4. '(' → logprob: -4.555948734283447
    5. ')' → logprob: -6.680948734283447
    6. 'input' → logprob: -7.305948734283447
    7. ' input' → logprob: -11.055949211120605
    8. ' ,' → logprob: -11.180949211120605
    9. '=input' → logprob: -11.305949211120605
    10. ' (' → logprob: -11.680949211120605

Token 50: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6931560039520264
    2. ' input' → logprob: -0.6931560039520264
    3. ')' → logprob: -12.443156242370605
    4. ' ' → logprob: -13.318156242370605
    5. '	input' → logprob: -13.568156242370605
    6. '=input' → logprob: -14.193156242370605
    7. ',input' → logprob: -14.818156242370605
    8. '(input' → logprob: -15.193156242370605
    9. ' )' → logprob: -15.568156242370605
    10. '<input' → logprob: -16.06815528869629

Token 51: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9385402993066236e-05
    2. '()' → logprob: -10.875019073486328
    3. ' ().' → logprob: -15.625019073486328
    4. '())' → logprob: -16.250019073486328
    5. '()
' → logprob: -17.500019073486328
    6. ')' → logprob: -17.625019073486328
    7. '(' → logprob: -17.750019073486328
    8. '()

' → logprob: -19.625019073486328
    9. '()))' → logprob: -19.625019073486328
    10. '()[' → logprob: -20.000019073486328

Token 52: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.889424836728722e-05
    2. 'strip' → logprob: -9.250099182128906
    3. 'rstrip' → logprob: -13.625099182128906
    4. ' split' → logprob: -14.000099182128906
    5. '(split' → logprob: -14.250099182128906
    6. 'spl' → logprob: -17.750099182128906
    7. '.split' → logprob: -18.625099182128906
    8. 'sp' → logprob: -19.500099182128906
    9. 'plit' → logprob: -19.500099182128906
    10. ')' → logprob: -20.000099182128906

Token 53: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008276253938674927
    2. '()' → logprob: -5.508276462554932
    3. ')' → logprob: -6.133276462554932
    4. '()))' → logprob: -6.258276462554932
    5. '))' → logprob: -9.633275985717773
    6. '())
' → logprob: -10.508275985717773
    7. '(' → logprob: -12.133275985717773
    8. '())

' → logprob: -13.883275985717773
    9. '('' → logprob: -14.008275985717773
    10. ' ())' → logprob: -14.008275985717773

Token 54: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5767766237258911
    2. '       ' → logprob: -1.4517766237258911
    3. '   ' → logprob: -2.3267765045166016
    4. '    
' → logprob: -3.4517765045166016
    5. '<|end|>' → logprob: -4.076776504516602
    6. ' 
' → logprob: -4.451776504516602
    7. '  
' → logprob: -5.076776504516602
    8. '        
' → logprob: -5.076776504516602
    9. '   
' → logprob: -5.076776504516602
    10. ')' → logprob: -5.326776504516602

Token 55: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2532649338245392
    2. ' if' → logprob: -2.003264904022217
    3. 'if' (adapté à ' if') → logprob: -3.253264904022217
    4. ' 
' → logprob: -3.628264904022217
    5. '       ' → logprob: -4.878264904022217
    6. '    ' → logprob: -5.003264904022217
    7. '        ' → logprob: -5.503264904022217
    8. '<|end|>' → logprob: -6.253264904022217
    9. '        
' → logprob: -7.128264904022217
    10. '
' → logprob: -7.253264904022217

Token 56: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.002740089315921068
    2. 'a' → logprob: -6.002739906311035
    3. ' ' → logprob: -8.252739906311035
    4. ' ' → logprob: -12.752739906311035
    5. '	a' → logprob: -14.377739906311035
    6. '<|end|>' → logprob: -16.75274085998535
    7. '>a' → logprob: -16.87774085998535
    8. '    ' → logprob: -17.12774085998535
    9. '(a' → logprob: -17.37774085998535
    10. '_a' → logprob: -17.50274085998535

Token 57: '_card' (ID: 37760)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7374782562255859
    2. '_card' → logprob: -0.7374782562255859
    3. '_score' → logprob: -3.362478256225586
    4. ' _' → logprob: -4.862478256225586
    5. '_code' → logprob: -8.487478256225586
    6. ''_' → logprob: -8.862478256225586
    7. '_s' → logprob: -9.237478256225586
    8. '_cards' → logprob: -9.362478256225586
    9. '_c' → logprob: -9.862478256225586
    10. '_car' → logprob: -9.862478256225586

Token 58: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.12701870501041412
    2. ' >' → logprob: -2.127018690109253
    3. ' ' → logprob: -9.502018928527832
    4. ' ' → logprob: -12.002018928527832
    5. '&gt' → logprob: -13.752018928527832
    6. '<|end|>' → logprob: -13.752018928527832
    7. '>`' → logprob: -13.877018928527832
    8. '">' → logprob: -13.877018928527832
    9. '<' → logprob: -14.252018928527832
    10. '```' → logprob: -14.377018928527832

Token 59: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.12695467472076416
    2. 'b' → logprob: -2.1269545555114746
    3. ' ' → logprob: -10.876955032348633
    4. '<|end|>' → logprob: -12.251955032348633
    5. '    ' → logprob: -14.126955032348633
    6. '  ' → logprob: -15.251955032348633
    7. '	b' → logprob: -15.376955032348633
    8. ' б' → logprob: -15.626955032348633
    9. '   ' → logprob: -15.689455032348633
    10. '<|end|>' → logprob: -15.939455032348633

Token 60: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.0001576506474521011
    2. '_' → logprob: -9.125157356262207
    3. '_score' → logprob: -11.000157356262207
    4. 'card' → logprob: -11.250157356262207
    5. '_cards' → logprob: -11.625157356262207
    6. '_code' → logprob: -13.000157356262207
    7. '_b' → logprob: -13.750157356262207
    8. '_token' → logprob: -14.125157356262207
    9. ' _' → logprob: -14.250157356262207
    10. ''_' → logprob: -14.625157356262207

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00368368998169899
    2. ':
' → logprob: -5.753683567047119
    3. '       ' → logprob: -8.128684043884277
    4. '):' → logprob: -9.253684043884277
    5. '           ' → logprob: -9.378684043884277
    6. '<|end|>' → logprob: -10.878684043884277
    7. '):
' → logprob: -12.378684043884277
    8. ')' → logprob: -13.003684043884277
    9. '   ' → logprob: -14.128684043884277
    10. '<|end|>' → logprob: -14.378684043884277

Token 62: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5336036086082458
    2. '           ' → logprob: -0.9086036086082458
    3. ':' → logprob: -5.533603668212891
    4. '<|end|>' → logprob: -6.033603668212891
    5. 'a' → logprob: -7.283603668212891
    6. ' a' → logprob: -7.533603668212891
    7. '```' → logprob: -7.658603668212891
    8. ' ' → logprob: -7.658603668212891
    9. '   ' → logprob: -8.03360366821289
    10. '               ' → logprob: -8.15860366821289

Token 63: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.23775850236415863
    2. '           ' → logprob: -1.8627585172653198
    3. 'a' (adapté à ' a') → logprob: -3.2377583980560303
    4. '               ' → logprob: -4.362758636474609
    5. ' 
' → logprob: -6.487758636474609
    6. '       ' → logprob: -7.112758636474609
    7. '            ' → logprob: -7.487758636474609
    8. '   ' → logprob: -7.862758636474609
    9. ' ' → logprob: -7.987758636474609
    10. '    ' → logprob: -8.73775863647461

Token 64: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -3.333223139634356e-05
    2. '_' → logprob: -10.625033378601074
    3. '_s' → logprob: -12.375033378601074
    4. '_scores' → logprob: -12.875033378601074
    5. '_code' → logprob: -13.875033378601074
    6. ' _' → logprob: -14.250033378601074
    7. '_sc' → logprob: -15.625033378601074
    8. 'score' → logprob: -15.750033378601074
    9. '_answer' → logprob: -16.625032424926758
    10. '```' → logprob: -17.375032424926758

Token 65: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2520192563533783
    2. '+=' → logprob: -1.5020192861557007
    3. '+' → logprob: -9.377018928527832
    4. '=' → logprob: -12.752018928527832
    5. ']+=' → logprob: -13.877018928527832
    6. ' +' → logprob: -14.127018928527832
    7. ' ' → logprob: -15.127018928527832
    8. ' =' → logprob: -15.127018928527832
    9. '+='' → logprob: -16.00201988220215
    10. '+="' → logprob: -16.75201988220215

Token 66: ' a' (ID: 261)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.025296786800026894
    2. ' ' → logprob: -3.900296688079834
    3. '2' → logprob: -5.650296688079834
    4. '3' → logprob: -6.775296688079834
    5. '10' → logprob: -9.650297164916992
    6. 'a' → logprob: -11.275297164916992
    7. '100' → logprob: -13.150297164916992
    8. '5' → logprob: -13.525297164916992
    9. 'w' → logprob: -14.275297164916992
    10. '  ' → logprob: -14.400297164916992

Token 67: '_card' (ID: 37760)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.6725383400917053
    2. '_card' → logprob: -0.9225383400917053
    3. '1' → logprob: -2.6725382804870605
    4. '_' → logprob: -4.1725382804870605
    5. ' ' → logprob: -5.6725382804870605
    6. '<|end|>' → logprob: -6.6725382804870605
    7. '_token' → logprob: -7.9225382804870605
    8. '```' → logprob: -7.9225382804870605
    9. '_cards' → logprob: -8.422538757324219
    10. ' _' → logprob: -8.547538757324219

Token 68: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08438412100076675
    2. '       ' → logprob: -2.8343842029571533
    3. 'elif' → logprob: -5.084383964538574
    4. 'else' → logprob: -5.209383964538574
    5. ' else' → logprob: -5.459383964538574
    6. ' elif' → logprob: -6.209383964538574
    7. '<|end|>' → logprob: -6.459383964538574
    8. '    
' → logprob: -7.584383964538574
    9. '
' → logprob: -7.584383964538574
    10. '+' → logprob: -7.834383964538574

Token 69: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16035927832126617
    2. ' b' → logprob: -1.910359263420105
    3. ' ' → logprob: -10.035359382629395
    4. '0' → logprob: -10.410359382629395
    5. '1' → logprob: -10.660359382629395
    6. '10' → logprob: -10.910359382629395
    7. '20' → logprob: -12.285359382629395
    8. '<|end|>' → logprob: -13.160359382629395
    9. '5' → logprob: -13.285359382629395
    10. '50' → logprob: -13.660359382629395

Token 70: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.0036778708454221487
    2. '_score' → logprob: -5.628677845001221
    3. '_' → logprob: -10.253678321838379
    4. 'card' → logprob: -10.253678321838379
    5. 'score' → logprob: -12.503678321838379
    6. '_code' → logprob: -13.878678321838379
    7. '_token' → logprob: -14.253678321838379
    8. '_cards' → logprob: -14.378678321838379
    9. '_CARD' → logprob: -15.503678321838379
    10. '_c' → logprob: -15.753678321838379

Token 71: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014012470841407776
    2. 'elif' → logprob: -4.514012336730957
    3. ' elif' → logprob: -6.764012336730957
    4. '
' → logprob: -6.889012336730957
    5. 'else' → logprob: -7.514012336730957
    6. ' else' → logprob: -9.014012336730957
    7. '        
' → logprob: -10.389012336730957
    8. '<|end|>' → logprob: -11.014012336730957
    9. '	elif' → logprob: -11.139012336730957
    10. '```' → logprob: -11.514012336730957

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01215240266174078
    2. 'elif' → logprob: -4.512152194976807
    3. ' elif' → logprob: -7.012152194976807
    4. '<|end|>' → logprob: -9.137152671813965
    5. '```' → logprob: -10.012152671813965
    6. '	elif' → logprob: -10.262152671813965
    7. '
' → logprob: -12.387152671813965
    8. '   ' → logprob: -12.637152671813965
    9. 'else' → logprob: -13.012152671813965
    10. ' else' → logprob: -13.512152671813965

Token 73: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.10645569860935211
    2. '       ' → logprob: -2.6064558029174805
    3. ' elif' → logprob: -3.6064558029174805
    4. '	elif' → logprob: -10.48145580291748
    5. '```' → logprob: -12.23145580291748
    6. '<|end|>' → logprob: -12.23145580291748
    7. 'else' → logprob: -13.48145580291748
    8. '   ' → logprob: -13.60645580291748
    9. '#elif' → logprob: -14.85645580291748
    10. 'el' → logprob: -15.60645580291748

Token 74: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.027675211429595947
    2. ' a' → logprob: -3.652675151824951
    3. 'b' → logprob: -6.777675151824951
    4. ' ' → logprob: -8.90267562866211
    5. 'a' → logprob: -9.27767562866211
    6. '	b' → logprob: -13.02767562866211
    7. '  ' → logprob: -13.52767562866211
    8. ' ' → logprob: -14.15267562866211
    9. '	a' → logprob: -15.40267562866211
    10. '_b' → logprob: -15.40267562866211

Token 75: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.0008728709071874619
    2. '_' → logprob: -7.87587308883667
    3. '_score' → logprob: -8.250872611999512
    4. '_code' → logprob: -9.375872611999512
    5. '>' → logprob: -9.500872611999512
    6. '_cards' → logprob: -11.000872611999512
    7. ' _' → logprob: -11.125872611999512
    8. '_car' → logprob: -11.500872611999512
    9. '_c' → logprob: -12.250872611999512
    10. '   ' → logprob: -12.375872611999512

Token 76: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.006723771803081036
    2. '>' → logprob: -5.006723880767822
    3. ' ' → logprob: -11.756723403930664
    4. ' ' → logprob: -15.256723403930664
    5. ':' → logprob: -16.506723403930664
    6. '   ' → logprob: -16.756723403930664
    7. '  ' → logprob: -16.881723403930664
    8. ' >
' → logprob: -17.131723403930664
    9. ' >

' → logprob: -17.381723403930664
    10. '    ' → logprob: -17.631723403930664

Token 77: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.474097341299057
    2. 'a' → logprob: -0.9740973711013794
    3. ' ' → logprob: -11.22409725189209
    4. '	a' → logprob: -12.34909725189209
    5. '>a' → logprob: -14.34909725189209
    6. '  ' → logprob: -14.59909725189209
    7. '<|end|>' → logprob: -14.84909725189209
    8. '#a' → logprob: -15.59909725189209
    9. ' ' → logprob: -15.72409725189209
    10. '   ' → logprob: -15.84909725189209

Token 78: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -4.6087021473795176e-05
    2. '_' → logprob: -10.500045776367188
    3. '_score' → logprob: -11.500045776367188
    4. 'card' → logprob: -11.875045776367188
    5. ' _' → logprob: -14.625045776367188
    6. 'Card' → logprob: -15.750045776367188
    7. '_CARD' → logprob: -15.750045776367188
    8. ' card' → logprob: -15.875045776367188
    9. '_cards' → logprob: -15.875045776367188
    10. '_car' → logprob: -16.125045776367188

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02066882885992527
    2. ':
' → logprob: -3.8956687450408936
    3. '       ' → logprob: -9.645668983459473
    4. '           ' → logprob: -10.645668983459473
    5. '<|end|>' → logprob: -11.020668983459473
    6. ' :' → logprob: -11.520668983459473
    7. ' :
' → logprob: -12.770668983459473
    8. '   ' → logprob: -13.020668983459473
    9. ':

' → logprob: -13.020668983459473
    10. ' ' → logprob: -13.645668983459473

Token 80: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00883579347282648
    2. ' b' → logprob: -5.383835792541504
    3. 'b' → logprob: -5.633835792541504
    4. ' ' → logprob: -8.133835792541504
    5. '```' → logprob: -8.633835792541504
    6. '          ' → logprob: -10.383835792541504
    7. '       ' → logprob: -10.508835792541504
    8. '<|end|>' → logprob: -10.758835792541504
    9. '               ' → logprob: -10.883835792541504
    10. ' ' → logprob: -11.383835792541504

Token 81: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.0567343533039093
    2. 'b' (adapté à ' b') → logprob: -2.931734323501587
    3. '           ' → logprob: -6.306734561920166
    4. ' ' → logprob: -11.181734085083008
    5. '            ' → logprob: -12.681734085083008
    6. '       ' → logprob: -13.681734085083008
    7. '               ' → logprob: -13.681734085083008
    8. '```' → logprob: -13.681734085083008
    9. '	b' → logprob: -14.181734085083008
    10. '          ' → logprob: -14.181734085083008

Token 82: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -1.8312570318812504e-05
    2. '_' → logprob: -11.750018119812012
    3. '_scores' → logprob: -12.250018119812012
    4. '_code' → logprob: -12.875018119812012
    5. '_s' → logprob: -13.875018119812012
    6. 'score' → logprob: -14.000018119812012
    7. ' _' → logprob: -14.625018119812012
    8. ''_' → logprob: -15.500018119812012
    9. '```' → logprob: -15.625018119812012
    10. '_answer' → logprob: -16.125019073486328

Token 83: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03805778920650482
    2. '+=' → logprob: -3.288057804107666
    3. '+' → logprob: -11.538057327270508
    4. ' ' → logprob: -13.038057327270508
    5. ' +' → logprob: -13.163057327270508
    6. ']+=' → logprob: -14.288057327270508
    7. '    ' → logprob: -14.788057327270508
    8. '        ' → logprob: -15.038057327270508
    9. '   ' → logprob: -15.288057327270508
    10. '=' → logprob: -15.288057327270508

Token 84: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4296676814556122
    2. ' a' → logprob: -1.0546677112579346
    3. 'b' → logprob: -7.4296674728393555
    4. ' b' → logprob: -7.9296674728393555
    5. ' ' → logprob: -11.679667472839355
    6. '	a' → logprob: -13.429667472839355
    7. '   ' → logprob: -13.679667472839355
    8. '(a' → logprob: -14.179667472839355
    9. '    ' → logprob: -14.804667472839355
    10. '  ' → logprob: -15.429667472839355

Token 85: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.4432063400745392
    2. 'b' → logprob: -1.8182063102722168
    3. ' b' → logprob: -1.9432063102722168
    4. '_' → logprob: -3.443206310272217
    5. '_b' → logprob: -4.318206310272217
    6. ' ' → logprob: -5.693206310272217
    7. ' _' → logprob: -6.068206310272217
    8. 'a' → logprob: -8.193206787109375
    9. ' a' → logprob: -8.568206787109375
    10. '   ' → logprob: -8.943206787109375

Token 86: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5232834219932556
    2. ' +' → logprob: -0.8982834219932556
    3. ' ' → logprob: -9.773283004760742
    4. ' +
' → logprob: -9.773283004760742
    5. '+
' → logprob: -10.273283004760742
    6. '+b' → logprob: -12.273283004760742
    7. '`' → logprob: -13.273283004760742
    8. ' +

' → logprob: -14.148283004760742
    9. ' plus' → logprob: -14.273283004760742
    10. ' +
' → logprob: -14.648283004760742

Token 87: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3868740200996399
    2. 'b' → logprob: -1.1368739604949951
    3. ' ' → logprob: -13.011874198913574
    4. '	b' → logprob: -15.386874198913574
    5. ' ' → logprob: -16.261873245239258
    6. ')b' → logprob: -16.386873245239258
    7. ' б' → logprob: -16.511873245239258
    8. '```' → logprob: -16.699373245239258
    9. '>b' → logprob: -16.761873245239258
    10. '   ' → logprob: -17.074373245239258

Token 88: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.004962150938808918
    2. '_' → logprob: -5.504961967468262
    3. '_c' → logprob: -7.754961967468262
    4. 'card' → logprob: -8.254961967468262
    5. '_car' → logprob: -9.879961967468262
    6. 'c' → logprob: -10.129961967468262
    7. '_ca' → logprob: -10.379961967468262
    8. ' _' → logprob: -10.504961967468262
    9. 'o' → logprob: -11.879961967468262
    10. '_cards' → logprob: -12.004961967468262

Token 89: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24871070683002472
    2. '   ' → logprob: -1.8737107515335083
    3. '    
' → logprob: -3.7487106323242188
    4. '\n' → logprob: -3.7487106323242188
    5. 'print' → logprob: -4.373710632324219
    6. '  
' → logprob: -5.998710632324219
    7. 'n' → logprob: -6.873710632324219
    8. '```' → logprob: -6.873710632324219
    9. '
' → logprob: -7.498710632324219
    10. '   
' → logprob: -7.873710632324219

Token 90: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29240456223487854
    2. '
' → logprob: -1.6674045324325562
    3. '    
' → logprob: -3.2924046516418457
    4. '  
' → logprob: -4.917404651641846
    5. 'print' → logprob: -5.042404651641846
    6. 'if' → logprob: -5.542404651641846
    7. '\n' → logprob: -6.042404651641846
    8. '```' → logprob: -6.167404651641846
    9. ' 
' → logprob: -6.792404651641846
    10. '   
' → logprob: -6.792404651641846

Token 91: ' else' (ID: 1203)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0592267513275146
    2. '   ' → logprob: -1.4342267513275146
    3. 'if' → logprob: -1.5592267513275146
    4. ' if' → logprob: -3.0592267513275146
    5. 'p' → logprob: -3.4342267513275146
    6. '```' → logprob: -3.5592267513275146
    7. 'else' (adapté à ' else') → logprob: -4.309226989746094
    8. '
' → logprob: -4.309226989746094
    9. '    
' → logprob: -4.434226989746094
    10. ' 
' → logprob: -4.559226989746094

Token 92: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012804759899154305
    2. ':
' → logprob: -6.751280307769775
    3. '<|end|>' → logprob: -9.376280784606934
    4. ' :' → logprob: -11.251280784606934
    5. '       ' → logprob: -12.501280784606934
    6. '   ' → logprob: -13.751280784606934
    7. ',' → logprob: -13.751280784606934
    8. '```' → logprob: -13.876280784606934
    9. '<|end|>' → logprob: -13.876280784606934
    10. ':

' → logprob: -14.001280784606934

Token 93: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10037855058908463
    2. '   ' → logprob: -2.7253785133361816
    3. ' continue' → logprob: -3.9753785133361816
    4. ' 
' → logprob: -5.225378513336182
    5. '           ' → logprob: -6.225378513336182
    6. '        
' → logprob: -6.975378513336182
    7. ' ' → logprob: -7.350378513336182
    8. '    
' → logprob: -7.475378513336182
    9. ' pass' → logprob: -7.725378513336182
    10. '    ' → logprob: -8.10037899017334

Token 94: ' a' (ID: 261)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.3136078715324402
    2. ' pass' → logprob: -1.438607931137085
    3. 'pass' → logprob: -4.313607692718506
    4. ' ' → logprob: -4.813607692718506
    5. 'continue' → logprob: -5.313607692718506
    6. ' a' → logprob: -6.563607692718506
    7. '   ' → logprob: -6.688607692718506
    8. 'n' → logprob: -7.313607692718506
    9. ' 
' → logprob: -7.688607692718506
    10. '0' → logprob: -7.813607692718506

Token 95: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.012748368084430695
    2. '_' → logprob: -4.3877482414245605
    3. '_s' → logprob: -8.512748718261719
    4. '_scores' → logprob: -10.762748718261719
    5. ' _' → logprob: -12.387748718261719
    6. 'score' → logprob: -12.762748718261719
    7. 's' → logprob: -13.262748718261719
    8. '_sc' → logprob: -13.387748718261719
    9. '<|end|>' → logprob: -13.637748718261719
    10. '_code' → logprob: -14.137748718261719

Token 96: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0032159762922674417
    2. '+=' → logprob: -5.753215789794922
    3. '+' → logprob: -10.753215789794922
    4. ' -=' → logprob: -11.753215789794922
    5. ' +' → logprob: -12.503215789794922
    6. ' ' → logprob: -13.003215789794922
    7. ' =' → logprob: -14.503215789794922
    8. ',' → logprob: -14.503215789794922
    9. '=' → logprob: -14.628215789794922
    10. ' >' → logprob: -15.253215789794922

Token 97: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.055307839065790176
    2. ' a' → logprob: -2.9303078651428223
    3. '0' → logprob: -8.430307388305664
    4. ' ' → logprob: -8.805307388305664
    5. '1' → logprob: -10.055307388305664
    6. '(a' → logprob: -11.805307388305664
    7. ' (' → logprob: -12.930307388305664
    8. '(' → logprob: -13.930307388305664
    9. '	a' → logprob: -14.180307388305664
    10. '   ' → logprob: -14.180307388305664

Token 98: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.005325427744537592
    2. '_' → logprob: -5.5053253173828125
    3. '_score' → logprob: -7.1303253173828125
    4. '_c' → logprob: -8.630325317382812
    5. ' _' → logprob: -9.380325317382812
    6. ' ' → logprob: -9.880325317382812
    7. '_car' → logprob: -10.255325317382812
    8. '1' → logprob: -10.880325317382812
    9. '_cards' → logprob: -11.005325317382812
    10. '_cart' → logprob: -11.880325317382812

Token 99: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022439735766965896
    2. '       ' → logprob: -8.875224113464355
    3. '   ' → logprob: -10.000224113464355
    4. ' ' → logprob: -11.625224113464355
    5. ' and' → logprob: -11.750224113464355
    6. '<|end|>' → logprob: -12.125224113464355
    7. '          ' → logprob: -12.875224113464355
    8. 'b' → logprob: -13.000224113464355
    9. '               ' → logprob: -13.625224113464355
    10. '         ' → logprob: -13.625224113464355

Token 101: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.01423285249620676
    2. ' b' → logprob: -4.264232635498047
    3. '           ' → logprob: -9.639232635498047
    4. '	b' → logprob: -12.764232635498047
    5. ' ' → logprob: -14.764232635498047
    6. ' 
' → logprob: -15.139232635498047
    7. ' ' → logprob: -15.639232635498047
    8. '       ' → logprob: -15.889232635498047
    9. '   ' → logprob: -16.139232635498047
    10. '            ' → logprob: -16.139232635498047

Token 102: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -3.8889261304575484e-06
    2. '_' → logprob: -12.750003814697266
    3. '_code' → logprob: -15.250003814697266
    4. 'score' → logprob: -15.500003814697266
    5. ' _' → logprob: -15.875003814697266
    6. '_scores' → logprob: -16.000003814697266
    7. '_card' → logprob: -16.000003814697266
    8. '_s' → logprob: -17.375003814697266
    9. 'else' → logprob: -17.375003814697266
    10. '```' → logprob: -17.375003814697266

Token 103: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.024771850556135178
    2. '+=' → logprob: -3.7747719287872314
    3. '+' → logprob: -6.649771690368652
    4. ' +' → logprob: -8.399771690368652
    5. '<|end|>' → logprob: -13.274771690368652
    6. '+='' → logprob: -13.399771690368652
    7. ']+=' → logprob: -14.149771690368652
    8. ' ' → logprob: -14.524771690368652
    9. '+="' → logprob: -14.649771690368652
    10. '```' → logprob: -15.649771690368652

Token 104: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2520391643047333
    2. ' b' → logprob: -1.5020391941070557
    3. 'a' → logprob: -9.627038955688477
    4. ' a' → logprob: -10.252038955688477
    5. ' ' → logprob: -11.752038955688477
    6. '0' → logprob: -15.252038955688477
    7. '1' → logprob: -15.377038955688477
    8. '   ' → logprob: -15.877038955688477
    9. '	b' → logprob: -16.127038955688477
    10. ' ' → logprob: -16.252038955688477

Token 105: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.007751317694783211
    2. '_score' → logprob: -5.25775146484375
    3. '_' → logprob: -6.63275146484375
    4. 'a' → logprob: -7.25775146484375
    5. '_c' → logprob: -8.75775146484375
    6. 'card' → logprob: -9.25775146484375
    7. '_a' → logprob: -9.63275146484375
    8. ' _' → logprob: -9.88275146484375
    9. '_ca' → logprob: -10.13275146484375
    10. '_car' → logprob: -10.75775146484375

Token 106: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4248408377170563
    2. '
' → logprob: -1.6748408079147339
    3. '   ' → logprob: -1.9248408079147339
    4. '    
' → logprob: -4.549840927124023
    5. '\n' → logprob: -7.424840927124023
    6. ' print' → logprob: -7.674840927124023
    7. 'if' → logprob: -8.049840927124023
    8. '```' → logprob: -8.174840927124023
    9. '  
' → logprob: -8.674840927124023
    10. '        
' → logprob: -9.299840927124023

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8416872620582581
    2. 'if' → logprob: -1.3416872024536133
    3. '
' → logprob: -1.7166872024536133
    4. ' if' → logprob: -2.7166872024536133
    5. 'print' → logprob: -2.9666872024536133
    6. '    
' → logprob: -5.216687202453613
    7. '```' → logprob: -6.466687202453613
    8. '  
' → logprob: -7.091687202453613
    9. ' print' → logprob: -7.091687202453613
    10. ' 
' → logprob: -7.341687202453613

Token 108: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5219817161560059
    2. ' if' → logprob: -1.6469817161560059
    3. '   ' → logprob: -2.021981716156006
    4. 'print' (adapté à ' print') → logprob: -3.021981716156006
    5. '
' → logprob: -3.521981716156006
    6. ' print' → logprob: -6.396981716156006
    7. '    
' → logprob: -6.896981716156006
    8. '```' → logprob: -7.896981716156006
    9. ' 
' → logprob: -8.271982192993164
    10. '  
' → logprob: -10.771982192993164

Token 109: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4785580337047577
    2. '('' → logprob: -1.47855806350708
    3. '(a' → logprob: -2.60355806350708
    4. '()' → logprob: -3.10355806350708
    5. '("' → logprob: -3.47855806350708
    6. '(f' → logprob: -6.35355806350708
    7. '("("' → logprob: -7.72855806350708
    8. '("")' → logprob: -8.728557586669922
    9. '((' → logprob: -8.853557586669922
    10. '(max' → logprob: -10.603557586669922

Token 110: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -1.1160349458805285e-05
    2. '_' → logprob: -12.000011444091797
    3. '_scores' → logprob: -13.250011444091797
    4. '_s' → logprob: -13.625011444091797
    5. 'score' → logprob: -13.750011444091797
    6. ')' → logprob: -15.375011444091797
    7. ' _' → logprob: -15.500011444091797
    8. ''_' → logprob: -15.750011444091797
    9. '"_' → logprob: -16.375011444091797
    10. ')_' → logprob: -16.375011444091797

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11569173634052277
    2. ')' → logprob: -2.240691661834717
    3. ' ,' → logprob: -6.615691661834717
    4. '>' → logprob: -7.115691661834717
    5. ' >' → logprob: -8.115692138671875
    6. '   ' → logprob: -8.740692138671875
    7. ',b' → logprob: -9.240692138671875
    8. ' if' → logprob: -9.865692138671875
    9. ' )' → logprob: -10.365692138671875
    10. ' >=' → logprob: -11.615692138671875

Token 112: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004078639671206474
    2. ' b' → logprob: -5.5040788650512695
    3. ''' → logprob: -16.504077911376953
    4. '"' → logprob: -17.629077911376953
    5. '    ' → logprob: -17.629077911376953
    6. '   ' → logprob: -18.004077911376953
    7. ')' → logprob: -18.379077911376953
    8. ' ' → logprob: -18.629077911376953
    9. ''b' → logprob: -19.379077911376953
    10. ' 
' → logprob: -19.504077911376953

Token 113: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.00022547018306795508
    2. '_' → logprob: -8.500225067138672
    3. '_scores' → logprob: -12.250225067138672
    4. ''_' → logprob: -12.500225067138672
    5. '_)' → logprob: -12.750225067138672
    6. 'score' → logprob: -12.875225067138672
    7. ')' → logprob: -12.875225067138672
    8. '_code' → logprob: -13.750225067138672
    9. '_space' → logprob: -13.875225067138672
    10. ')_' → logprob: -14.000225067138672

Token 114: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. ' )' → logprob: -12.750004768371582
    3. ')
' → logprob: -13.500004768371582
    4. '')' → logprob: -15.500004768371582
    5. ')`' → logprob: -15.875004768371582
    6. '))' → logprob: -16.0000057220459
    7. '   ' → logprob: -16.0000057220459
    8. '`)' → logprob: -16.2500057220459
    9. '```' → logprob: -16.8750057220459
    10. ',' → logprob: -16.8750057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 112
Tokens correctement prédits (1ère position, stricte): 59
Tokens correctement prédits (1ère position, avec adaptation): 62
Tokens correctement prédits (top 10): 100
Précision stricte (1ère position): 52.68%
Précision adaptée (1ère position): 55.36%
Précision (top 10): 89.29%
================================================================================
