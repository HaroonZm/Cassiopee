================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
from abc import ABC, abstractmethod
from typing import List, Tuple

# Constants
GRAVITY = 1.0

# ======= Core Physics Abstractions =======

class ParabolicTrajectory:
    """Represents a single parabolic flight segment of the bullet."""
    def __init__(self, horizontal_distance: float, initial_vx: float, initial_vy: float):
        self.l = horizontal_distance
        self.vx = initial_vx
        self.vy = initial_vy
        # For given vx, vy, l must satisfy l = 2 * vx * vy / g
        # Parabola equation: y = -(g/(2 vx^2)) x^2 + (vy/vx) x
    
    def height_at(self, x: float) -> float:
        """Return the height of bullet at horizontal distance x."""
        if x < 0 or x > self.l:
            return float('-inf')  # outside flight segment
        return -(GRAVITY / (2 * self.vx ** 2)) * (x ** 2) + (self.vy / self.vx) * x

    def is_clear_of_obstacle(self, obstacles: List['Obstacle']) -> bool:
        """Check trajectory does not hit obstacles in [0, l]."""
        for obs in obstacles:
            if 0 < obs.position < self.l:
                h = self.height_at(obs.position)
                if h <= obs.height + 1e-14:  # touch or below obstacle height means fail
                    return False
        return True


class VelocityComponents:
    """Utility class for velocity components calculation and magnitude."""
    def __init__(self, vx: float, vy: float):
        self.vx = vx
        self.vy = vy
    
    @property
    def magnitude(self) -> float:
        return math.sqrt(self.vx ** 2 + self.vy ** 2)


# ======= Input Data Abstractions =======

class Obstacle:
    def __init__(self, position: int, height: int):
        self.position = position
        self.height = height
    
    def __repr__(self):
        return f"Obstacle(pos={self.position}, h={self.height})"

class ProblemInput:
    def __init__(self, distance: int, obstacles: List[Obstacle], max_bounces: int):
        self.distance = distance
        self.obstacles = obstacles
        self.max_bounces = max_bounces


# ======= Strategy Pattern for Bounce Splitting =======

class BounceSplitter(ABC):
    """Abstract strategy that determines how to split total distance into segments."""
    @abstractmethod
    def generate_splits(self, total_distance: int, bounces: int) -> List[List[int]]:
        pass

class SimpleSplitGenerator(BounceSplitter):
    """
    Generate all b-splits of total_distance into b+1 segments with positions increasing
    This enumerative approach supports future extension (dynamic obstacle avoidance)
    """
    def generate_splits(self, total_distance: int, bounces: int) -> List[List[int]]:
        if bounces == 0:
            return [[total_distance]]
        # Generate all possible sorted tuples of bounce positions between 0 and total_distance
        results = []
        def backtrack(start: int, depth: int, path: List[int]):
            if depth == bounces:
                # last segment length from last bounce to target
                last_segment = total_distance - path[-1]
                if last_segment > 0:
                    results.append([path[0]] + [path[i] - path[i-1] for i in range(1, len(path))] + [last_segment])
                return
            for next_pos in range(start + 1, total_distance):
                backtrack(next_pos, depth + 1, path + [next_pos])
        if bounces > 0:
            backtrack(0,0,[])
        else:
            results.append([total_distance])
        return results

# ======= Core Solver Logic =======

class TrajectoryPlanner:
    def __init__(self, problem_input: ProblemInput):
        self.d = problem_input.distance
        self.max_bounces = problem_input.max_bounces
        self.obstacles = problem_input.obstacles
        # Speed precision control
        self.epsilon = 1e-7
    
    def obstacles_in_segment(self, start: int, end: int) -> List[Obstacle]:
        return [o for o in self.obstacles if start < o.position < end]

    def can_make_segment(self, length: int, initial_speed: float, obstacles: List[Obstacle]) -> bool:
        """
        Check if possible to make a parabolic shot over segment length under initial_speed avoiding obstacles.
        We want to find if exists (vx, vy) with sqrt(vx^2 + vy^2) <= initial_speed with
        length = 2 * vx * vy, and all obstacles are cleared.
        """
        # Let the parabola parameters vx, vy >= 0 satisfy 2 vx vy = length.
        # Also vx^2 + vy^2 <= initial_speed^2.
        # For given length and initial_speed, vx must satisfy:
        # vx^2 + (length / (2 vx))^2 <= initial_speed^2
        # Rewrite as vx^2 + length^2 / (4 vx^2) <= initial_speed^2
        # Define f(vx) = vx^2 + length^2 / (4 vx^2)
        # We want to find vx > 0 such that f(vx) <= initial_speed^2
        
        # To solve, binary search vx in (0, initial_speed] to find a feasible parabola
        left, right = 1e-10, initial_speed
        feasible_found = False
        
        def check_vx(vx):
            vy = length / (2 * vx)
            if vy < 0:
                return False
            if vx**2 + vy**2 > initial_speed**2 + 1e-14:
                return False
            traj = ParabolicTrajectory(length, vx, vy)
            return traj.is_clear_of_obstacle(obstacles)
        
        # Because parabola shape changes with vx, do a binary search to find if any vx makes trajectory clear
        for _ in range(60):
            mid = (left + right) / 2
            if check_vx(mid):
                feasible_found = True
                right = mid
            else:
                left = mid
        return feasible_found

    def feasible(self, initial_speed: float) -> bool:
        """
        Check if there exists a way to break flight into segments (bounces+1 parts),
        each segment flyable with initial_speed avoiding obstacles,
        so bullet reaches target position hitting ground at last.
        """
        # Dynamic programming approach:
        # dp[bounce][pos] = True if can reach pos with bounce bounces within initial_speed
        # But we do not have many discrete positions; need logic friendlier.
        #
        # Instead, we try all bounce splits (positions of bounce points)
        # Because number of bounces max 15, and distance max 10000, enumerating all splits is huge.
        #
        # Instead, we try recursive DFS with memoization on bounce count and last position:
        # Since obstacles <= 10 and bounces <= 15, let's memo on bounce count and last bounce position
        
        cache = {}
        obstacles_positions = [o.position for o in self.obstacles]
        
        def dfs(remaining_bounces: int, from_pos: int, to_pos: int, obstacles_section: List[Obstacle]) -> bool:
            # Base: if no bounces left, check can make from_pos->to_pos segment flight
            segment_length = to_pos - from_pos
            return self.can_make_segment(segment_length, initial_speed, obstacles_section)
        
        # Since bounces can be up to 15, and obstacles fixed, naive complete enumeration is huge.
        # We'll perform a binary-search on number of splits positions only up to bounces allowed
        # We instead use a BFS with states: position and bounces left
        
        # Positions important to check bounces: obstacle positions and target position
        # To allow bounces only at integer positions, we choose bounces at positions between launcher and target.
        # We search bounce placements only at obstacle positions (since between obstacles no need for bounces)
        # Actually, the problem states bounces anywhere on surface, but for minimal initial speed,
        # bounces should be on ground, so can be anywhere between 0 and d.
        #
        # For complexity, we try all bounce partitions with bounces inserted only at obstacles positions or zero/distance.
        
        # We create candidate bounce positions list = [0] + obstacle positions + [d]
        points = [0] + obstacles_positions + [self.d]
        
        from collections import deque
        queue = deque()
        # tuple: (bounce used, current position index in points)
        queue.append((0, 0))  # start at launcher, no bounce used
        visited = set()
        
        while queue:
            bounces_used, idx = queue.popleft()
            if (bounces_used, idx) in visited:
                continue
            visited.add((bounces_used, idx))
            
            current_pos = points[idx]
            # Try jumping to all further points (simulate bounces)
            for next_idx in range(idx + 1, len(points)):
                next_pos = points[next_idx]
                if next_pos <= current_pos:
                    continue
                if bounces_used + 1 > self.max_bounces + 1:
                    break  # no more bounces allowed

                # Get obstacles between current_pos and next_pos
                obstacles_section = self.obstacles_in_segment(current_pos, next_pos)
                length = next_pos - current_pos
                if not self.can_make_segment(length, initial_speed, obstacles_section):
                    continue
                # If next_pos == target(d), we can succeed
                if next_pos == self.d:
                    return True
                # Otherwise we can bounce here if not exceed bounces allowed
                # bounces_used counts starting from zero, but max bounces exclude last bounce at target
                if bounces_used < self.max_bounces + 1:
                    queue.append((bounces_used + 1, next_idx))
        return False

    def solve(self) -> float:
        left = 0.0
        right = 1e5  # large upper bound for speed guess
        for _ in range(100):
            mid = (left + right) / 2
            if self.feasible(mid):
                right = mid
            else:
                left = mid
        return right


def parse_input() -> ProblemInput:
    d, n, b = map(int, sys.stdin.readline().split())
    obstacles = []
    for _ in range(n):
        p, h = map(int, sys.stdin.readline().split())
        obstacles.append(Obstacle(p, h))
    return ProblemInput(d, obstacles, b)

def main():
    problem = parse_input()
    planner = TrajectoryPlanner(problem)
    ans = planner.solve()
    print(f"{ans:.5f}")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183791756629944
    2. '.' → logprob: -2.3368380069732666
    3. '<|end|>' → logprob: -2.8368380069732666
    4. '\' → logprob: -4.7118377685546875
    5. 'newline' → logprob: -5.0868377685546875
    6. 'import' → logprob: -5.0868377685546875
    7. '
' → logprob: -5.7118377685546875
    8. '' → logprob: -5.8368377685546875
    9. '<|end|>' → logprob: -5.8368377685546875
    10. '\r' → logprob: -6.3368377685546875

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2597518861293793
    2. 'import' → logprob: -2.634751796722412
    3. '\n' → logprob: -2.759751796722412
    4. '\' → logprob: -3.259751796722412
    5. '```' → logprob: -4.009751796722412
    6. '
' → logprob: -4.134751796722412
    7. '<|end|>' → logprob: -4.759751796722412
    8. ',' → logprob: -5.384751796722412
    9. '

' → logprob: -5.759751796722412
    10. '<|end|>' → logprob: -7.009751796722412

Token 6: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4083114266395569
    2. '\n' → logprob: -2.408311367034912
    3. 'import' → logprob: -2.533311367034912
    4. '
' → logprob: -3.033311367034912
    5. '\' → logprob: -3.408311367034912
    6. '```' → logprob: -3.658311367034912
    7. '<|end|>' → logprob: -3.783311367034912
    8. '

' → logprob: -4.408311367034912
    9. ',' → logprob: -4.533311367034912
    10. '<|end|>' → logprob: -6.158311367034912

Token 7: ' abc' (ID: 75094)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.6536340117454529
    2. ' os' → logprob: -0.7786340117454529
    3. 'collections' → logprob: -4.903634071350098
    4. 'os' → logprob: -5.278634071350098
    5. ' datetime' → logprob: -5.778634071350098
    6. ' itertools' → logprob: -6.653634071350098
    7. ' typing' → logprob: -6.778634071350098
    8. ' numpy' → logprob: -7.528634071350098
    9. ' statistics' → logprob: -7.653634071350098
    10. ' math' → logprob: -7.778634071350098

Token 8: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7436841726303101
    2. ' import' → logprob: -0.7436841726303101
    3. 'import' → logprob: -3.3686842918395996
    4. ' .' → logprob: -4.3686842918396
    5. ' ' → logprob: -6.7436842918396
    6. '	import' → logprob: -7.7436842918396
    7. '.import' → logprob: -8.243683815002441
    8. '.abstract' → logprob: -9.243683815002441
    9. 'space' → logprob: -10.118683815002441
    10. '<|end|>' → logprob: -10.118683815002441

Token 9: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.04463453218340874
    2. ' A' → logprob: -3.1696345806121826
    3. 'ABC' → logprob: -6.9196343421936035
    4. ' ' → logprob: -7.5446343421936035
    5. ' ' → logprob: -10.044634819030762
    6. ' AB' → logprob: -10.544634819030762
    7. 'A' → logprob: -11.294634819030762
    8. ' abstract' → logprob: -11.919634819030762
    9. '	' → logprob: -11.919634819030762
    10. '	A' → logprob: -12.544634819030762

Token 10: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.007598699536174536
    2. ',' → logprob: -5.757598876953125
    3. 'import' → logprob: -6.007598876953125
    4. '.A' → logprob: -8.132598876953125
    5. '```' → logprob: -8.132598876953125
    6. '.I' → logprob: -8.257598876953125
    7. '<|end|>' → logprob: -8.507598876953125
    8. ' import' → logprob: -8.757598876953125
    9. ' .' → logprob: -9.132598876953125
    10. ' ' → logprob: -9.382598876953125

Token 11: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.014163863845169544
    2. ' abstract' → logprob: -4.264163970947266
    3. 'Abstract' → logprob: -15.389163970947266
    4. '.abstract' → logprob: -17.014163970947266
    5. '```' → logprob: -17.514163970947266
    6. ' ABC' → logprob: -18.014163970947266
    7. 'ABC' → logprob: -18.514163970947266
    8. 'abc' → logprob: -18.639163970947266
    9. '123' → logprob: -19.389163970947266
    10. ' ' → logprob: -19.514163970947266

Token 12: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0008344047237187624
    2. 'classmethod' → logprob: -7.2508344650268555
    3. 'class' → logprob: -9.375834465026855
    4. 'staticmethod' → logprob: -11.625834465026855
    5. '_method' → logprob: -11.875834465026855
    6. 'meth' → logprob: -12.000834465026855
    7. 'm' → logprob: -12.625834465026855
    8. '	method' → logprob: -12.750834465026855
    9. 'base' → logprob: -12.750834465026855
    10. '<|end|>' → logprob: -13.000834465026855

Token 13: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8978989124298096
    2. 'class' → logprob: -0.8978989124298096
    3. '```' → logprob: -2.2728989124298096
    4. '

' → logprob: -3.0228989124298096
    5. '\n' → logprob: -4.2728986740112305
    6. '<|end|>' → logprob: -4.8978986740112305
    7. ' class' → logprob: -5.2728986740112305
    8. '' → logprob: -5.7728986740112305
    9. '
' → logprob: -6.8978986740112305
    10. 'import' → logprob: -7.1478986740112305

Token 14: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.11051355302333832
    2. '
' → logprob: -2.61051344871521
    3. 'class' → logprob: -3.61051344871521
    4. '```' → logprob: -5.735513687133789
    5. '
' → logprob: -8.110513687133789
    6. '


' → logprob: -8.735513687133789
    7. '``' → logprob: -9.235513687133789
    8. '\n' → logprob: -9.360513687133789
    9. '

' → logprob: -9.860513687133789
    10. ' class' → logprob: -9.860513687133789

Token 15: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.3914477825164795
    2. ' collections' → logprob: -2.0164477825164795
    3. 'typing' → logprob: -2.2664477825164795
    4. 'collections' → logprob: -2.5164477825164795
    5. ' dat' → logprob: -6.141448020935059
    6. ' enum' → logprob: -6.641448020935059
    7. 'dat' → logprob: -8.016448020935059
    8. ' ' → logprob: -8.391448020935059
    9. ' random' → logprob: -8.516448020935059
    10. ' pathlib' → logprob: -8.516448020935059

Token 16: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.026804931461811066
    2. 'import' → logprob: -3.6518049240112305
    3. ' ' → logprob: -8.15180492401123
    4. '.' → logprob: -9.40180492401123
    5. '<|end|>' → logprob: -9.52680492401123
    6. '_import' → logprob: -11.65180492401123
    7. '	import' → logprob: -12.02680492401123
    8. ' as' → logprob: -12.15180492401123
    9. '.import' → logprob: -12.15180492401123
    10. '```' → logprob: -12.15180492401123

Token 17: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.5627115964889526
    2. ' Any' → logprob: -1.0627115964889526
    3. ' Union' → logprob: -2.562711715698242
    4. 'Any' → logprob: -5.687711715698242
    5. ' Iterable' → logprob: -6.812711715698242
    6. ' Optional' → logprob: -7.187711715698242
    7. ' Callable' → logprob: -7.562711715698242
    8. ' ' → logprob: -7.687711715698242
    9. ' Protocol' → logprob: -7.937711715698242
    10. 'List' → logprob: -7.937711715698242

Token 18: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.1279582381248474
    2. 'class' → logprob: -2.252958297729492
    3. '
' → logprob: -4.252958297729492
    4. '


' → logprob: -8.002958297729492
    5. '```' → logprob: -8.627958297729492
    6. ' class' → logprob: -8.877958297729492
    7. '\n' → logprob: -10.002958297729492
    8. '<class' → logprob: -10.627958297729492
    9. 'import' → logprob: -11.377958297729492
    10. '
' → logprob: -11.377958297729492

Token 19: ' Tuple' (ID: 50841)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Union' → logprob: -0.5420199632644653
    2. ' Optional' → logprob: -1.1670199632644653
    3. ' Any' → logprob: -3.292019844055176
    4. ' Tuple' → logprob: -3.542019844055176
    5. 'Optional' → logprob: -4.042019844055176
    6. 'Union' → logprob: -4.667019844055176
    7. 'Any' → logprob: -5.417019844055176
    8. 'Tuple' → logprob: -5.792019844055176
    9. ' Dict' → logprob: -6.042019844055176
    10. ' Callable' → logprob: -6.292019844055176

Token 20: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.21026577055454254
    2. '
' → logprob: -2.085265874862671
    3. 'class' → logprob: -2.835265874862671
    4. '


' → logprob: -5.835265636444092
    5. '\n' → logprob: -6.710265636444092
    6. '```' → logprob: -6.835265636444092
    7. '' → logprob: -7.585265636444092
    8. ' class' → logprob: -8.33526611328125
    9. '



' → logprob: -9.08526611328125
    10. '
' → logprob: -9.21026611328125

Token 21: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.551655113697052
    2. 'c' → logprob: -1.3016550540924072
    3. '
' → logprob: -1.9266550540924072
    4. '

' → logprob: -5.551655292510986
    5. '\n' → logprob: -7.551655292510986
    6. '```' → logprob: -7.676655292510986
    7. '' → logprob: -7.926655292510986
    8. 'C' → logprob: -8.301654815673828
    9. 'cla' → logprob: -9.051654815673828
    10. '#' → logprob: -9.301654815673828

Token 22: ' Constants' (ID: 31976)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012607370503246784
    2. 'class' → logprob: -4.762607574462891
    3. 'c' → logprob: -6.137607574462891
    4. ' class' → logprob: -6.637607574462891
    5. ' ﻿' → logprob: -8.38760757446289
    6. ' c' → logprob: -9.76260757446289
    7. '_' → logprob: -10.01260757446289
    8. 'C' → logprob: -10.01260757446289
    9. ' ​' → logprob: -10.38760757446289
    10. ' 
' → logprob: -10.63760757446289

Token 23: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07352066040039062
    2. '_SPACE' → logprob: -3.8235206604003906
    3. 'S' → logprob: -4.948520660400391
    4. '```' → logprob: -5.448520660400391
    5. 'PI' → logprob: -5.573520660400391
    6. 'E' → logprob: -5.948520660400391
    7. '_RADIUS' → logprob: -6.073520660400391
    8. '_PI' → logprob: -6.073520660400391
    9. '_S' → logprob: -6.198520660400391
    10. 'SPACE' → logprob: -6.198520660400391

Token 24: 'GR' (ID: 13905)
  Prédit: 'PI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'PI' → logprob: -0.15437394380569458
    2. ' PI' → logprob: -3.02937388420105
    3. '_PI' → logprob: -3.77937388420105
    4. ' ' → logprob: -4.029374122619629
    5. 'MAX' → logprob: -4.279374122619629
    6. 'E' → logprob: -4.779374122619629
    7. '_' → logprob: -4.779374122619629
    8. '`' → logprob: -5.904374122619629
    9. 'S' → logprob: -6.154374122619629
    10. 'DEFAULT' → logprob: -6.779374122619629

Token 25: 'AV' (ID: 5345)
  Prédit: 'AV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AV' → logprob: -0.00014919086243025959
    2. 'AD' → logprob: -9.87514877319336
    3. 'A' → logprob: -10.50014877319336
    4. 'ADIUS' → logprob: -10.87514877319336
    5. 'AVI' → logprob: -11.00014877319336
    6. 'ADE' → logprob: -12.00014877319336
    7. 'AVL' → logprob: -12.12514877319336
    8. 'E' → logprob: -12.25014877319336
    9. 'avity' → logprob: -12.37514877319336
    10. 'APH' → logprob: -13.12514877319336

Token 26: 'ITY' (ID: 6161)
  Prédit: 'ITY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ITY' → logprob: -0.0001478796184528619
    2. 'IT' → logprob: -9.000147819519043
    3. 'ity' → logprob: -10.875147819519043
    4. 'I' → logprob: -13.625147819519043
    5. '```' → logprob: -13.875147819519043
    6. '1' → logprob: -14.375147819519043
    7. 'it' → logprob: -15.000147819519043
    8. '_' → logprob: -15.125147819519043
    9. '*' → logprob: -15.250147819519043
    10. '2' → logprob: -15.250147819519043

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003516329685226083
    2. '_' → logprob: -6.00351619720459
    3. '=' → logprob: -7.37851619720459
    4. ' ' → logprob: -8.12851619720459
    5. '_SPACE' → logprob: -9.50351619720459
    6. ' _' → logprob: -10.62851619720459
    7. '_ACCEL' → logprob: -12.87851619720459
    8. '_GR' → logprob: -13.00351619720459
    9. ' ='' → logprob: -13.62851619720459
    10. ' =
' → logprob: -13.75351619720459

Token 28: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005929863080382347
    2. '9' → logprob: -5.130929946899414
    3. '0' → logprob: -14.755929946899414
    4. ' ' → logprob: -15.005929946899414
    5. '  ' → logprob: -16.130929946899414
    6. ' "' → logprob: -17.068429946899414
    7. '1' → logprob: -17.318429946899414
    8. '<|end|>' → logprob: -17.443429946899414
    9. '10' → logprob: -18.005929946899414
    10. ' ,' → logprob: -18.068429946899414

Token 29: '1' (ID: 16)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '	' → logprob: -21.0000057220459
    4. '-' → logprob: -21.3750057220459
    5. '   ' → logprob: -21.3750057220459
    6. '0' → logprob: -21.5000057220459
    7. '  ' → logprob: -22.0000057220459
    8. '```' → logprob: -22.0000057220459
    9. '1' → logprob: -22.7500057220459
    10. ' ' → logprob: -22.8750057220459

Token 30: '.' (ID: 13)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16606445610523224
    2. '9' → logprob: -1.9160645008087158
    3. '.' → logprob: -5.166064262390137
    4. '2' → logprob: -10.416064262390137
    5. ' .' → logprob: -10.791064262390137
    6. '3' → logprob: -10.916064262390137
    7. '4' → logprob: -11.541064262390137
    8. '5' → logprob: -11.541064262390137
    9. ' ' → logprob: -12.166064262390137
    10. ''' → logprob: -12.416064262390137

Token 31: '0' (ID: 15)
  Prédit: '62'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '62' → logprob: -0.14332795143127441
    2. '6' → logprob: -2.0183279514312744
    3. '625' → logprob: -8.393327713012695
    4. '622' → logprob: -8.893327713012695
    5. '61' → logprob: -9.143327713012695
    6. '618' → logprob: -10.018327713012695
    7. '616' → logprob: -10.643327713012695
    8. '624' → logprob: -10.768327713012695
    9. '620' → logprob: -11.143327713012695
    10. '621' → logprob: -11.393327713012695

Token 32: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.023715917021036148
    2. '
' → logprob: -3.7737159729003906
    3. '


' → logprob: -8.89871597290039
    4. '
' → logprob: -9.02371597290039
    5. '\n' → logprob: -10.14871597290039
    6. '' → logprob: -10.27371597290039
    7. '#' → logprob: -10.64871597290039
    8. 'class' → logprob: -10.77371597290039
    9. '

' → logprob: -10.77371597290039
    10. '\' → logprob: -10.89871597290039

Token 33: '#' (ID: 2)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.0843840092420578
    2. '
' → logprob: -3.209383964538574
    3. 'class' → logprob: -3.209383964538574
    4. '


' → logprob: -9.459383964538574
    5. '
' → logprob: -10.084383964538574
    6. ' class' → logprob: -11.334383964538574
    7. '```' → logprob: -11.459383964538574
    8. 'c' → logprob: -12.459383964538574
    9. '#' → logprob: -12.834383964538574
    10. '

' → logprob: -13.209383964538574

Token 34: ' =====' (ID: 71502)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0010780644370242953
    2. ' class' → logprob: -6.876078128814697
    3. '
' → logprob: -10.376077651977539
    4. '

' → logprob: -11.626077651977539
    5. '```' → logprob: -13.626077651977539
    6. '-class' → logprob: -14.251077651977539
    7. 'cl' → logprob: -14.376077651977539
    8. '#' → logprob: -15.001077651977539
    9. '"class' → logprob: -15.001077651977539
    10. 'clas' → logprob: -15.376077651977539

Token 35: '==' (ID: 560)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.011154872365295887
    2. ' class' → logprob: -4.636154651641846
    3. '
' → logprob: -6.761154651641846
    4. '

' → logprob: -8.886155128479004
    5. ' 
' → logprob: -9.886155128479004
    6. '```' → logprob: -10.886155128479004
    7. ' 

' → logprob: -11.511155128479004
    8. '-class' → logprob: -12.011155128479004
    9. 'from' → logprob: -12.261155128479004
    10. 'abstract' → logprob: -13.136155128479004

Token 36: ' Core' (ID: 16309)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.01441417820751667
    2. ' class' → logprob: -4.264414310455322
    3. '
' → logprob: -8.514413833618164
    4. ' 
' → logprob: -11.014413833618164
    5. '

' → logprob: -11.639413833618164
    6. '#' → logprob: -11.639413833618164
    7. '-class' → logprob: -12.389413833618164
    8. '```' → logprob: -12.639413833618164
    9. 'from' → logprob: -13.389413833618164
    10. ' 

' → logprob: -13.514413833618164

Token 37: ' Physics' (ID: 48711)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.05615727975964546
    2. ' class' → logprob: -3.431157350540161
    3. '
' → logprob: -5.056157112121582
    4. ' 

' → logprob: -5.556157112121582
    5. '

' → logprob: -5.806157112121582
    6. '```' → logprob: -5.931157112121582
    7. ' 
' → logprob: -6.806157112121582
    8. ' ' → logprob: -7.056157112121582
    9. '-class' → logprob: -7.306157112121582
    10. '' → logprob: -7.806157112121582

Token 38: ' Ab' (ID: 3483)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6138113737106323
    2. ' class' → logprob: -1.6138113737106323
    3. 'Classes' → logprob: -2.738811492919922
    4. ' classes' → logprob: -3.113811492919922
    5. '

' → logprob: -3.238811492919922
    6. 'Engine' → logprob: -3.488811492919922
    7. '_classes' → logprob: -4.113811492919922
    8. ' Classes' → logprob: -4.738811492919922
    9. '_' → logprob: -4.863811492919922
    10. '```' → logprob: -5.363811492919922

Token 39: 'stra' (ID: 14867)
  Prédit: 'stract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stract' → logprob: -0.03996669128537178
    2. 's' → logprob: -4.414966583251953
    3. 'straction' → logprob: -4.539966583251953
    4. 'stra' → logprob: -5.039966583251953
    5. 'st' → logprob: -5.164966583251953
    6. 'str' → logprob: -5.539966583251953
    7. 'class' → logprob: -8.914966583251953
    8. 'STRACT' → logprob: -9.664966583251953
    9. 'c' → logprob: -10.414966583251953
    10. 'struction' → logprob: -11.164966583251953

Token 40: 'ctions' (ID: 2620)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.012598535045981407
    2. 'ctions' → logprob: -4.637598514556885
    3. 'ction' → logprob: -6.887598514556885
    4. 'cts' → logprob: -7.012598514556885
    5. '#' → logprob: -7.387598514556885
    6. 'ctr' → logprob: -8.637598991394043
    7. '```' → logprob: -9.762598991394043
    8. 'cture' → logprob: -11.387598991394043
    9. 'tract' → logprob: -11.637598991394043
    10. '``' → logprob: -11.887598991394043

Token 41: ' =====' (ID: 71502)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.46506407856941223
    2. 'class' → logprob: -1.4650640487670898
    3. '
' → logprob: -1.9650640487670898
    4. '
' → logprob: -8.34006404876709
    5. '```' → logprob: -8.84006404876709
    6. ' class' → logprob: -9.09006404876709
    7. '\n' → logprob: -9.34006404876709
    8. '


' → logprob: -10.71506404876709
    9. '' → logprob: -10.84006404876709
    10. '<|end|>' → logprob: -11.21506404876709

Token 42: '==' (ID: 560)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18675953149795532
    2. 'class' → logprob: -2.0617594718933105
    3. '

' → logprob: -3.3117594718933105
    4. '
' → logprob: -5.5617594718933105
    5. '```' → logprob: -6.6867594718933105
    6. '' → logprob: -7.8117594718933105
    7. '-' → logprob: -8.061759948730469
    8. '\n' → logprob: -8.936759948730469
    9. '-class' → logprob: -9.061759948730469
    10. '=' → logprob: -9.061759948730469

Token 43: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7947310209274292
    2. '

' → logprob: -1.2947310209274292
    3. 'class' → logprob: -1.2947310209274292
    4. '
' → logprob: -8.294731140136719
    5. ' class' → logprob: -10.419731140136719
    6. '


' → logprob: -10.544731140136719
    7. '```' → logprob: -10.669731140136719
    8. '' → logprob: -12.044731140136719
    9. ' 

' → logprob: -12.294731140136719
    10. '\n' → logprob: -12.544731140136719

Token 44: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.06278549879789352
    2. '
' → logprob: -2.8127853870391846
    3. '

' → logprob: -7.437785625457764
    4. 'c' → logprob: -8.687785148620605
    5. '
' → logprob: -11.437785148620605
    6. '\n' → logprob: -11.812785148620605
    7. ' class' → logprob: -11.812785148620605
    8. '' → logprob: -11.937785148620605
    9. 'clas' → logprob: -11.937785148620605
    10. '```' → logprob: -11.937785148620605

Token 45: ' Par' (ID: 3371)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.029617056250572205
    2. ' Physics' → logprob: -3.6546170711517334
    3. ' Space' → logprob: -6.154616832733154
    4. ' Phys' → logprob: -8.654617309570312
    5. ' Physical' → logprob: -8.654617309570312
    6. ' Basic' → logprob: -8.904617309570312
    7. ' Particle' → logprob: -9.029617309570312
    8. ' ‌' → logprob: -9.529617309570312
    9. ' ﻿' → logprob: -9.529617309570312
    10. 'Physics' → logprob: -9.779617309570312

Token 46: 'abolic' (ID: 39100)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.028893839567899704
    2. 't' → logprob: -3.7788939476013184
    3. 'am' → logprob: -5.278893947601318
    4. 'e' → logprob: -9.02889347076416
    5. 'en' → logprob: -9.15389347076416
    6. 'ents' → logprob: -9.15389347076416
    7. 'cel' → logprob: -10.15389347076416
    8. 'se' → logprob: -10.15389347076416
    9. 'ts' → logprob: -10.65389347076416
    10. 'ams' → logprob: -10.90389347076416

Token 47: 'Trajectory' (ID: 137663)
  Prédit: 'Trajectory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Trajectory' → logprob: -0.0728704184293747
    2. 'Motion' → logprob: -2.9478704929351807
    3. 'Projectile' → logprob: -4.072870254516602
    4. 'Flight' → logprob: -8.072870254516602
    5. 'Arc' → logprob: -9.072870254516602
    6. 'Path' → logprob: -9.322870254516602
    7. 'Curve' → logprob: -9.447870254516602
    8. 'Orbit' → logprob: -10.197870254516602
    9. 'Movement' → logprob: -10.322870254516602
    10. 'Shot' → logprob: -10.822870254516602

Token 48: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07012137770652771
    2. ':' → logprob: -2.6951212882995605
    3. '(Abstract' → logprob: -8.945121765136719
    4. ' :' → logprob: -10.945121765136719
    5. '(object' → logprob: -10.945121765136719
    6. ' (' → logprob: -12.070121765136719
    7. ':
' → logprob: -12.945121765136719
    8. '():' → logprob: -13.070121765136719
    9. '```' → logprob: -13.570121765136719
    10. '(Exception' → logprob: -14.070121765136719

Token 49: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002695505041629076
    2. '(' → logprob: -6.877695560455322
    3. ':
' → logprob: -7.377695560455322
    4. ' :' → logprob: -7.502695560455322
    5. '   ' → logprob: -8.752695083618164
    6. '(object' → logprob: -9.002695083618164
    7. '<|end|>' → logprob: -9.252695083618164
    8. '():' → logprob: -9.877695083618164
    9. '<|end|>' → logprob: -11.627695083618164
    10. '  ' → logprob: -12.002695083618164

Token 50: ' """' (ID: 9280)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1405799239873886
    2. '   ' → logprob: -3.01557993888855
    3. '(' → logprob: -3.76557993888855
    4. ' :' → logprob: -3.76557993888855
    5. '(object' → logprob: -4.640579700469971
    6. ':
' → logprob: -4.890579700469971
    7. 'def' → logprob: -5.140579700469971
    8. ' def' → logprob: -5.390579700469971
    9. ' (' → logprob: -6.015579700469971
    10. ' ' → logprob: -6.140579700469971

Token 51: 'Rep' (ID: 17265)
  Prédit: ' Represents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Represents' → logprob: -1.420630931854248
    2. ' """' → logprob: -2.045630931854248
    3. 'Trajectory' → logprob: -2.045630931854248
    4. ' A' → logprob: -2.170630931854248
    5. 'Rep' → logprob: -2.170630931854248
    6. '"""' → logprob: -2.670630931854248
    7. ' trajectory' → logprob: -3.420630931854248
    8. ' Calculates' → logprob: -3.545630931854248
    9. ' Calculate' → logprob: -4.045630931854248
    10. 'Calculate' → logprob: -4.170630931854248

Token 52: 'resents' (ID: 16483)
  Prédit: 'resents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resents' → logprob: -0.00016396844875998795
    2. 'res' → logprob: -9.500164031982422
    3. 'resentation' → logprob: -10.000164031982422
    4. 'resent' → logprob: -11.125164031982422
    5. 're' → logprob: -11.625164031982422
    6. 'rep' → logprob: -12.125164031982422
    7. 'ro' → logprob: -12.500164031982422
    8. 'rese' → logprob: -12.500164031982422
    9. 'r' → logprob: -13.125164031982422
    10. ' res' → logprob: -14.125164031982422

Token 53: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.012233543209731579
    2. ' the' → logprob: -4.762233734130859
    3. ' an' → logprob: -5.637233734130859
    4. 'a' → logprob: -10.76223373413086
    5. ' ' → logprob: -10.88723373413086
    6. 'the' → logprob: -12.38723373413086
    7. ' par' → logprob: -13.13723373413086
    8. ' trajectories' → logprob: -13.76223373413086
    9. ' projectile' → logprob: -14.76223373413086
    10. '<|end|>' → logprob: -15.01223373413086

Token 54: ' single' (ID: 4590)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.15542417764663696
    2. ' projectile' → logprob: -2.655424118041992
    3. ' parab' → logprob: -3.155424118041992
    4. ' ' → logprob: -4.030424118041992
    5. ' trajectory' → logprob: -5.280424118041992
    6. ' two' → logprob: -6.405424118041992
    7. ' param' → logprob: -6.405424118041992
    8. ' point' → logprob: -7.030424118041992
    9. 'par' → logprob: -7.155424118041992
    10. ' parameter' → logprob: -7.405424118041992

Token 55: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.1928940713405609
    2. ' parab' → logprob: -2.4428939819335938
    3. ' projectile' → logprob: -3.4428939819335938
    4. ' point' → logprob: -3.8178939819335938
    5. ' trajectory' → logprob: -3.8178939819335938
    6. ' ' → logprob: -5.442893981933594
    7. ' quadratic' → logprob: -6.067893981933594
    8. ' Par' → logprob: -6.817893981933594
    9. ' space' → logprob: -6.942893981933594
    10. ' segment' → logprob: -7.692893981933594

Token 56: 'abolic' (ID: 39100)
  Prédit: 'abolic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abolic' → logprob: -0.12173965573310852
    2. 'a' → logprob: -2.496739625930786
    3. 'ab' → logprob: -3.746739625930786
    4. 'abol' → logprob: -4.996739864349365
    5. 'abo' → logprob: -6.871739864349365
    6. 't' → logprob: -7.871739864349365
    7. ' a' → logprob: -8.246739387512207
    8. ' ab' → logprob: -9.871739387512207
    9. '```' → logprob: -10.434239387512207
    10. 'abor' → logprob: -10.871739387512207

Token 57: ' flight' (ID: 15243)
  Prédit: ' trajectory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trajectory' → logprob: -0.0369449146091938
    2. ' path' → logprob: -3.91194486618042
    3. 'trajectory' → logprob: -5.28694486618042
    4. ' curve' → logprob: -5.41194486618042
    5. 'Trajectory' → logprob: -5.78694486618042
    6. ' projectile' → logprob: -6.41194486618042
    7. ' motion' → logprob: -6.78694486618042
    8. ' segment' → logprob: -8.536945343017578
    9. ' ' → logprob: -8.536945343017578
    10. '   ' → logprob: -8.911945343017578

Token 58: ' segment' (ID: 14806)
  Prédit: ' trajectory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trajectory' → logprob: -0.2629629373550415
    2. ' path' → logprob: -1.5129629373550415
    3. ' """' → logprob: -5.262962818145752
    4. 'trajectory' → logprob: -6.262962818145752
    5. 'path' → logprob: -7.012962818145752
    6. ' segment' → logprob: -7.137962818145752
    7. '   ' → logprob: -7.137962818145752
    8. ' ' → logprob: -7.262962818145752
    9. '"""' → logprob: -8.88796329498291
    10. ' of' → logprob: -9.01296329498291

Token 59: ' of' (ID: 328)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.3157138526439667
    2. ' """' → logprob: -1.940713882446289
    3. '.' → logprob: -2.940713882446289
    4. '."""' → logprob: -3.440713882446289
    5. ' of' → logprob: -4.940713882446289
    6. '"' → logprob: -4.940713882446289
    7. '   ' → logprob: -4.940713882446289
    8. ' with' → logprob: -5.065713882446289
    9. ' starting' → logprob: -5.690713882446289
    10. ' in' → logprob: -6.065713882446289

Token 60: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.031476862728595734
    2. ' an' → logprob: -3.5314769744873047
    3. ' the' → logprob: -6.531476974487305
    4. 'a' → logprob: -9.156476974487305
    5. ' ' → logprob: -9.281476974487305
    6. ' projectile' → logprob: -9.906476974487305
    7. 'the' → logprob: -11.531476974487305
    8. ')' → logprob: -13.656476974487305
    9. ' project' → logprob: -13.906476974487305
    10. ' two' → logprob: -14.031476974487305

Token 61: ' bullet' (ID: 31926)
  Prédit: ' projectile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' projectile' → logprob: -0.04045439511537552
    2. ' trajectory' → logprob: -3.540454387664795
    3. ' ball' → logprob: -6.040454387664795
    4. ' object' → logprob: -6.165454387664795
    5. 'trajectory' → logprob: -6.290454387664795
    6. ' spacecraft' → logprob: -6.790454387664795
    7. ' path' → logprob: -7.290454387664795
    8. ' par' → logprob: -7.915454387664795
    9. ' soccer' → logprob: -8.415454864501953
    10. ' motion' → logprob: -8.540454864501953

Token 62: '."""
' (ID: 33044)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.0957999974489212
    2. ' """' → logprob: -2.8457999229431152
    3. '."""' → logprob: -4.345799922943115
    4. '.' → logprob: -4.595799922943115
    5. '   ' → logprob: -6.095799922943115
    6. '"""
' → logprob: -6.220799922943115
    7. ' """
' → logprob: -6.345799922943115
    8. '"' → logprob: -6.595799922943115
    9. ' in' → logprob: -7.845799922943115
    10. ' with' → logprob: -7.970799922943115

Token 63: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7542571425437927
    2. ' 
' → logprob: -0.7542571425437927
    3. '
' → logprob: -3.5042572021484375
    4. '   ' → logprob: -4.6292572021484375
    5. '    
' → logprob: -5.5042572021484375
    6. '<|end|>' → logprob: -5.5042572021484375
    7. '\' → logprob: -6.1292572021484375
    8. '  
' → logprob: -6.3792572021484375
    9. ' 

' → logprob: -6.6292572021484375
    10. '    ' → logprob: -6.6292572021484375

Token 64: ' def' (ID: 1056)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.05042131617665291
    2. '
' → logprob: -3.1754212379455566
    3. '    
' → logprob: -5.925421237945557
    4. ' ' → logprob: -6.550421237945557
    5. ' def' → logprob: -6.800421237945557
    6. '  
' → logprob: -7.675421237945557
    7. 'def' (adapté à ' def') → logprob: -7.800421237945557
    8. ' 

' → logprob: -8.050421714782715
    9. '   ' → logprob: -8.175421714782715
    10. '     
' → logprob: -8.425421714782715

Token 65: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.3895263969898224
    2. ' def' → logprob: -2.1395263671875
    3. 'def' → logprob: -2.1395263671875
    4. '_init' → logprob: -3.1395263671875
    5. ' __' → logprob: -3.7645263671875
    6. '__' → logprob: -4.3895263671875
    7. ' init' → logprob: -5.2645263671875
    8. 'n' → logprob: -6.6395263671875
    9. '_' → logprob: -7.5145263671875
    10. 'et' → logprob: -8.6395263671875

Token 66: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.9888433093437925e-05
    2. 'doc' → logprob: -10.250040054321289
    3. 'i' → logprob: -13.000040054321289
    4. 'ini' → logprob: -13.500040054321289
    5. 'in' → logprob: -14.375040054321289
    6. ' init' → logprob: -15.375040054321289
    7. 'int' → logprob: -17.25004005432129
    8. 'inite' → logprob: -19.12504005432129
    9. 'c' → logprob: -19.50004005432129
    10. '	init' → logprob: -19.75004005432129

Token 67: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.04492701217532158
    2. '(' → logprob: -3.9199271202087402
    3. '__' → logprob: -3.9199271202087402
    4. '__(
' → logprob: -6.04492712020874
    5. '__((' → logprob: -7.04492712020874
    6. '__('' → logprob: -8.169926643371582
    7. '(self' → logprob: -8.419926643371582
    8. '__(*' → logprob: -8.544926643371582
    9. ' (' → logprob: -9.044926643371582
    10. '<|end|>' → logprob: -10.044926643371582

Token 68: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5759432315826416
    2. ' self' → logprob: -0.8259432315826416
    3. '0' → logprob: -14.325942993164062
    4. '	self' → logprob: -14.450942993164062
    5. ' ' → logprob: -14.575942993164062
    6. 's' → logprob: -14.825942993164062
    7. ')' → logprob: -14.950942993164062
    8. ' )' → logprob: -15.700942993164062
    9. '_self' → logprob: -15.700942993164062
    10. ' position' → logprob: -16.075942993164062

Token 69: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18149639666080475
    2. ' (' → logprob: -2.4314963817596436
    3. ',' → logprob: -2.6814963817596436
    4. ')' → logprob: -5.431496620178223
    5. '(self' → logprob: -6.056496620178223
    6. ' ,' → logprob: -7.306496620178223
    7. '(space' → logprob: -7.306496620178223
    8. ' )' → logprob: -7.431496620178223
    9. ')(' → logprob: -8.431496620178223
    10. '_' → logprob: -8.931496620178223

Token 70: ' horizontal' (ID: 25511)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.39331263303756714
    2. ' initial' → logprob: -2.018312692642212
    3. ' position' → logprob: -3.143312692642212
    4. ' origin' → logprob: -3.643312692642212
    5. ' x' → logprob: -3.768312692642212
    6. ' self' → logprob: -3.893312692642212
    7. 'start' → logprob: -4.018312454223633
    8. 'self' → logprob: -4.393312454223633
    9. 'initial' → logprob: -4.893312454223633
    10. ' velocity' → logprob: -4.893312454223633

Token 71: '_distance' (ID: 45537)
  Prédit: '_velocity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_velocity' → logprob: -0.17194107174873352
    2. '_distance' → logprob: -2.171941041946411
    3. '_speed' → logprob: -3.171941041946411
    4. '_position' → logprob: -6.79694128036499
    5. '_angle' → logprob: -8.171940803527832
    6. '_' → logprob: -8.171940803527832
    7. ' velocity' → logprob: -9.546940803527832
    8. '_initial' → logprob: -10.296940803527832
    9. '_vel' → logprob: -10.296940803527832
    10. '_start' → logprob: -10.421940803527832

Token 72: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11391208320856094
    2. ',' → logprob: -2.2389121055603027
    3. ' ,' → logprob: -7.113912105560303
    4. '=' → logprob: -9.238911628723145
    5. '):' → logprob: -9.613911628723145
    6. ' :' → logprob: -9.738911628723145
    7. ':int' → logprob: -11.113911628723145
    8. ')' → logprob: -11.488911628723145
    9. ':,' → logprob: -11.738911628723145
    10. ' ):' → logprob: -12.363911628723145

Token 73: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.03816312924027443
    2. 'float' → logprob: -3.288163185119629
    3. ' ' → logprob: -10.288163185119629
    4. '=float' → logprob: -10.663163185119629
    5. '	float' → logprob: -10.913163185119629
    6. ',float' → logprob: -11.163163185119629
    7. ' int' → logprob: -11.538163185119629
    8. '(float' → logprob: -11.788163185119629
    9. 'int' → logprob: -12.163163185119629
    10. ')' → logprob: -12.913163185119629

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004790512612089515
    2. ' ,' → logprob: -7.750479221343994
    3. '):' → logprob: -10.375478744506836
    4. ')' → logprob: -11.125478744506836
    5. '   ' → logprob: -13.875478744506836
    6. ' ):' → logprob: -15.250478744506836
    7. ':' → logprob: -15.500478744506836
    8. ' )' → logprob: -15.625478744506836
    9. '‌,' → logprob: -15.625478744506836
    10. ',
' → logprob: -16.000478744506836

Token 75: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.2818674147129059
    2. ' max' → logprob: -2.281867504119873
    3. ' vertical' → logprob: -2.281867504119873
    4. 'initial' → logprob: -4.656867504119873
    5. ' peak' → logprob: -4.781867504119873
    6. ' time' → logprob: -5.656867504119873
    7. 'max' → logprob: -5.781867504119873
    8. ' maximum' → logprob: -5.781867504119873
    9. 'vertical' → logprob: -6.031867504119873
    10. ' apex' → logprob: -6.031867504119873

Token 76: '_v' (ID: 5390)
  Prédit: '_velocity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_velocity' → logprob: -0.012589824385941029
    2. '_speed' → logprob: -4.512589931488037
    3. '_height' → logprob: -7.012589931488037
    4. '_angle' → logprob: -8.012589454650879
    5. '_vertical' → logprob: -8.637589454650879
    6. ' velocity' → logprob: -9.762589454650879
    7. '_' → logprob: -10.387589454650879
    8. 'velocity' → logprob: -11.262589454650879
    9. '_vel' → logprob: -11.512589454650879
    10. '_v' → logprob: -11.762589454650879

Token 77: 'x' (ID: 87)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.005195216741412878
    2. 'ert' → logprob: -5.505195140838623
    3. 'velocity' → logprob: -7.255195140838623
    4. '_velocity' → logprob: -8.505195617675781
    5. 'y' → logprob: -10.005195617675781
    6. 'x' → logprob: -10.005195617675781
    7. 'speed' → logprob: -10.255195617675781
    8. 'e' → logprob: -11.130195617675781
    9. 'elo' → logprob: -11.130195617675781
    10. '_speed' → logprob: -11.755195617675781

Token 78: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001226062304340303
    2. ',' → logprob: -7.25122594833374
    3. '):' → logprob: -8.751226425170898
    4. ')' → logprob: -9.001226425170898
    5. ' :' → logprob: -9.001226425170898
    6. ' )' → logprob: -9.876226425170898
    7. ' ):' → logprob: -10.126226425170898
    8. '=' → logprob: -12.001226425170898
    9. ' ,' → logprob: -12.251226425170898
    10. '=float' → logprob: -12.376226425170898

Token 79: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.12728829681873322
    2. 'float' → logprob: -2.127288341522217
    3. ')' → logprob: -8.752287864685059
    4. '=float' → logprob: -9.002287864685059
    5. ',float' → logprob: -10.377287864685059
    6. '<|end|>' → logprob: -11.127287864685059
    7. '	float' → logprob: -11.127287864685059
    8. '(float' → logprob: -12.127287864685059
    9. ' )' → logprob: -12.752287864685059
    10. '<float' → logprob: -12.752287864685059

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005519277416169643
    2. '):' → logprob: -5.255519390106201
    3. ')' → logprob: -8.755518913269043
    4. ' ,' → logprob: -9.255518913269043
    5. ':' → logprob: -11.130518913269043
    6. ' ):' → logprob: -12.130518913269043
    7. '   ' → logprob: -12.630518913269043
    8. ',
' → logprob: -13.005518913269043
    9. '):
' → logprob: -13.380518913269043
    10. ',float' → logprob: -13.505518913269043

Token 81: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.025664128363132477
    2. 'initial' → logprob: -3.7756640911102295
    3. ' vertical' → logprob: -7.150664329528809
    4. ' time' → logprob: -7.900664329528809
    5. ' ' → logprob: -8.025664329528809
    6. '   ' → logprob: -8.525664329528809
    7. ' max' → logprob: -8.900664329528809
    8. ' horizontal' → logprob: -9.275664329528809
    9. 'vertical' → logprob: -9.900664329528809
    10. 'time' → logprob: -9.900664329528809

Token 82: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.07973507791757584
    2. '_velocity' → logprob: -2.704735040664673
    3. '_y' → logprob: -5.079735279083252
    4. '_vel' → logprob: -6.579735279083252
    5. 'vy' → logprob: -7.454735279083252
    6. '_py' → logprob: -7.704735279083252
    7. '_vertical' → logprob: -8.204734802246094
    8. ' _' → logprob: -8.704734802246094
    9. '_' → logprob: -8.954734802246094
    10. '_speed' → logprob: -9.079734802246094

Token 83: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.050548259168863297
    2. 'x' → logprob: -3.5505483150482178
    3. 'el' → logprob: -3.9255483150482178
    4. '0' → logprob: -8.050548553466797
    5. '_y' → logprob: -8.300548553466797
    6. '_velocity' → logprob: -10.175548553466797
    7. '```' → logprob: -10.300548553466797
    8. ' y' → logprob: -10.550548553466797
    9. 'velocity' → logprob: -11.050548553466797
    10. ')' → logprob: -11.050548553466797

Token 84: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032294096890836954
    2. '):' → logprob: -5.87822961807251
    3. ')' → logprob: -8.128229141235352
    4. ',' → logprob: -9.253229141235352
    5. ' ):' → logprob: -10.878229141235352
    6. ' :' → logprob: -11.503229141235352
    7. '):
' → logprob: -13.003229141235352
    8. ' )' → logprob: -13.753229141235352
    9. '),' → logprob: -15.628229141235352
    10. ' ,' → logprob: -16.00322914123535

Token 85: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.011100166477262974
    2. 'float' → logprob: -4.5111002922058105
    3. ')' → logprob: -11.011099815368652
    4. '=float' → logprob: -11.261099815368652
    5. ',float' → logprob: -11.886099815368652
    6. ' ' → logprob: -12.261099815368652
    7. '(float' → logprob: -12.636099815368652
    8. '	float' → logprob: -12.636099815368652
    9. ' )' → logprob: -13.261099815368652
    10. ' flo' → logprob: -14.511099815368652

Token 86: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.017736973240971565
    2. ')' → logprob: -4.642736911773682
    3. ',' → logprob: -4.892736911773682
    4. ' ):' → logprob: -8.14273738861084
    5. ':' → logprob: -9.01773738861084
    6. '):
' → logprob: -11.01773738861084
    7. ' ,' → logprob: -12.14273738861084
    8. ' )' → logprob: -12.14273738861084
    9. ' ' → logprob: -12.14273738861084
    10. '   ' → logprob: -13.76773738861084

Token 87: '       ' (ID: 309)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2488260567188263
    2. ':' → logprob: -1.873826026916504
    3. ')' → logprob: -3.373826026916504
    4. '       ' → logprob: -3.998826026916504
    5. ' :' → logprob: -5.498826026916504
    6. ' ):' → logprob: -5.748826026916504
    7. ',' → logprob: -6.123826026916504
    8. '   ' → logprob: -6.123826026916504
    9. '):
' → logprob: -7.248826026916504
    10. ' )' → logprob: -7.498826026916504

Token 88: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04757928475737572
    2. 'self' (adapté à ' self') → logprob: -3.297579288482666
    3. ' self' → logprob: -5.422579288482666
    4. '        ' → logprob: -6.422579288482666
    5. '\' → logprob: -7.172579288482666
    6. '<|end|>' → logprob: -7.172579288482666
    7. ' ' → logprob: -7.672579288482666
    8. '        
' → logprob: -8.047578811645508
    9. ' 
' → logprob: -8.547578811645508
    10. '\n' → logprob: -8.797578811645508

Token 89: '.l' (ID: 1000)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003465952118858695
    2. ' .' → logprob: -6.2534661293029785
    3. '.horizontal' → logprob: -6.5034661293029785
    4. ' ' → logprob: -11.00346565246582
    5. '.initial' → logprob: -12.62846565246582
    6. '.h' → logprob: -12.87846565246582
    7. '.user' → logprob: -13.50346565246582
    8. '.py' → logprob: -14.00346565246582
    9. '.​' → logprob: -14.00346565246582
    10. '.vertical' → logprob: -14.12846565246582

Token 90: ' =' (ID: 314)
  Prédit: 'ength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ength' → logprob: -0.0038944955449551344
    2. 'eft' → logprob: -5.753894329071045
    3. 'e' → logprob: -8.128894805908203
    4. 'engt' → logprob: -9.503894805908203
    5. 'oad' → logprob: -9.753894805908203
    6. 'ocal' → logprob: -9.878894805908203
    7. 'abel' → logprob: -10.253894805908203
    8. 'ifetime' → logprob: -10.253894805908203
    9. 'eg' → logprob: -10.503894805908203
    10. 'en' → logprob: -10.878894805908203

Token 91: ' horizontal' (ID: 25511)
  Prédit: ' horizontal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' horizontal' → logprob: -0.06214592605829239
    2. 'horizontal' → logprob: -2.812145948410034
    3. 'orizontal' → logprob: -9.437146186828613
    4. ' ' → logprob: -9.937146186828613
    5. '_horizontal' → logprob: -10.062146186828613
    6. '.horizontal' → logprob: -13.312146186828613
    7. ' ' → logprob: -13.562146186828613
    8. '(horizontal' → logprob: -13.687146186828613
    9. '_' → logprob: -14.562146186828613
    10. '   ' → logprob: -14.687146186828613

Token 92: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.001730987336486578
    2. '_' → logprob: -6.376730918884277
    3. '_dist' → logprob: -11.501730918884277
    4. '_velocity' → logprob: -11.876730918884277
    5. ' _' → logprob: -12.376730918884277
    6. '_length' → logprob: -12.751730918884277
    7. '_direction' → logprob: -13.626730918884277
    8. '_d' → logprob: -14.126730918884277
    9. '_angle' → logprob: -14.751730918884277
    10. '_DISTANCE' → logprob: -15.501730918884277

Token 93: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01818717084825039
    2. '
' → logprob: -4.768187046051025
    3. ' self' → logprob: -5.393187046051025
    4. ' ' → logprob: -6.018187046051025
    5. 'self' (adapté à ' self') → logprob: -6.643187046051025
    6. '        ' → logprob: -8.143187522888184
    7. '        
' → logprob: -8.268187522888184
    8. ' 
' → logprob: -8.768187522888184
    9. '<|end|>' → logprob: -9.018187522888184
    10. ',' → logprob: -9.018187522888184

Token 96: '.v' (ID: 5520)
  Prédit: '.initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.initial' → logprob: -0.7252206206321716
    2. '.' → logprob: -0.9752206206321716
    3. '.v' → logprob: -2.1002206802368164
    4. '.x' → logprob: -5.475220680236816
    5. ' .' → logprob: -5.975220680236816
    6. '._' → logprob: -6.100220680236816
    7. '.h' → logprob: -6.350220680236816
    8. '.i' → logprob: -7.100220680236816
    9. '.velocity' → logprob: -7.350220680236816
    10. '.horizontal' → logprob: -7.600220680236816

Token 97: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00019269285257905722
    2. '_x' → logprob: -8.625192642211914
    3. '0' → logprob: -11.375192642211914
    4. ' x' → logprob: -14.250192642211914
    5. '_' → logprob: -15.500192642211914
    6. '	x' → logprob: -15.625192642211914
    7. 'y' → logprob: -15.750192642211914
    8. 'el' → logprob: -16.500192642211914
    9. '```' → logprob: -16.625192642211914
    10. '
' → logprob: -16.750192642211914

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013492840807884932
    2. '=' → logprob: -6.626349449157715
    3. ' ' → logprob: -11.501349449157715
    4. ',' → logprob: -12.251349449157715
    5. '_initial' → logprob: -12.876349449157715
    6. '_' → logprob: -12.876349449157715
    7. '<|end|>' → logprob: -14.126349449157715
    8. 'initial' → logprob: -14.251349449157715
    9. '0' → logprob: -14.751349449157715
    10. '_init' → logprob: -15.001349449157715

Token 99: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.31327295303344727
    2. 'initial' → logprob: -1.3132729530334473
    3. '	initial' → logprob: -11.563272476196289
    4. ' ' → logprob: -14.188272476196289
    5. '(initial' → logprob: -14.813272476196289
    6. '_initial' → logprob: -15.313272476196289
    7. ' inicial' → logprob: -15.438272476196289
    8. 'Initial' → logprob: -16.18827247619629
    9. '.initial' → logprob: -17.18827247619629
    10. ' ' → logprob: -17.93827247619629

Token 100: '_v' (ID: 5390)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.40072527527809143
    2. 'x' → logprob: -1.150725245475769
    3. '_v' → logprob: -4.400725364685059
    4. 'vx' → logprob: -7.025725364685059
    5. '_' → logprob: -7.650725364685059
    6. 'v' → logprob: -9.775725364685059
    7. ' ' → logprob: -11.400725364685059
    8. ' _' → logprob: -11.525725364685059
    9. '_velocity' → logprob: -11.525725364685059
    10. '_vel' → logprob: -11.900725364685059

Token 101: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3856492842023727e-06
    2. ' x' → logprob: -14.500000953674316
    3. 'el' → logprob: -15.000000953674316
    4. 'y' → logprob: -15.000000953674316
    5. '_x' → logprob: -16.000001907348633
    6. ',' → logprob: -18.375001907348633
    7. ' ' → logprob: -18.875001907348633
    8. 'х' → logprob: -19.250001907348633
    9. '```' → logprob: -19.750001907348633
    10. ''x' → logprob: -20.000001907348633

Token 102: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08545156568288803
    2. '<|end|>' → logprob: -2.585451602935791
    3. ' 
' → logprob: -6.335451602935791
    4. '        
' → logprob: -6.585451602935791
    5. ' ' → logprob: -6.960451602935791
    6. ',' → logprob: -7.460451602935791
    7. ')' → logprob: -7.585451602935791
    8. '        ' → logprob: -7.960451602935791
    9. '<|end|>' → logprob: -8.210451126098633
    10. '   ' → logprob: -9.085451126098633

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001165461027994752
    2. '<|end|>' → logprob: -7.126165390014648
    3. 'self' → logprob: -8.626165390014648
    4. ',' → logprob: -9.751165390014648
    5. ' self' → logprob: -10.626165390014648
    6. '        
' → logprob: -10.751165390014648
    7. '
' → logprob: -11.001165390014648
    8. ' ' → logprob: -11.126165390014648
    9. '      ' → logprob: -11.751165390014648
    10. ')' → logprob: -12.001165390014648

Token 104: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07128796726465225
    2. ' self' → logprob: -3.3212878704071045
    3. 'self' (adapté à ' self') → logprob: -3.4462878704071045
    4. '
' → logprob: -7.321288108825684
    5. ' ' → logprob: -9.446288108825684
    6. ',' → logprob: -10.571288108825684
    7. '<|end|>' → logprob: -11.321288108825684
    8. '   ' → logprob: -11.696288108825684
    9. '	self' → logprob: -11.821288108825684
    10. ' 
' → logprob: -11.821288108825684

Token 105: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.0017850141739472747
    2. '.' → logprob: -6.876784801483154
    3. ' .' → logprob: -7.376784801483154
    4. '.py' → logprob: -10.001785278320312
    5. '.y' → logprob: -10.251785278320312
    6. '.vel' → logprob: -11.251785278320312
    7. '.space' → logprob: -11.251785278320312
    8. 'vy' → logprob: -12.876785278320312
    9. '.ly' → logprob: -13.126785278320312
    10. '.vi' → logprob: -13.126785278320312

Token 106: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.023293538717553e-05
    2. '_y' → logprob: -10.875030517578125
    3. '=' → logprob: -12.250030517578125
    4. ' y' → logprob: -13.500030517578125
    5. 'el' → logprob: -13.750030517578125
    6. ' =' → logprob: -13.750030517578125
    7. '=y' → logprob: -14.250030517578125
    8. '	y' → logprob: -14.750030517578125
    9. 'x' → logprob: -15.250030517578125
    10. '   ' → logprob: -15.375030517578125

Token 107: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.31326842308044434
    2. ' initial' → logprob: -1.3132684230804443
    3. '	initial' → logprob: -12.688268661499023
    4. '(initial' → logprob: -13.063268661499023
    5. '_initial' → logprob: -14.188268661499023
    6. '.initial' → logprob: -15.438268661499023
    7. ' ' → logprob: -15.563268661499023
    8. ' inicial' → logprob: -15.688268661499023
    9. 'Initial' → logprob: -15.813268661499023
    10. 'init' → logprob: -18.063268661499023

Token 109: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.004887773655354977
    2. '_y' → logprob: -5.629887580871582
    3. '_' → logprob: -6.754887580871582
    4. '_velocity' → logprob: -10.004887580871582
    5. '_vel' → logprob: -10.879887580871582
    6. '_f' → logprob: -11.004887580871582
    7. ' _' → logprob: -11.629887580871582
    8. '_py' → logprob: -12.004887580871582
    9. '_w' → logprob: -12.879887580871582
    10. '_b' → logprob: -13.004887580871582

Token 110: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -6.659005157416686e-05
    2. '_y' → logprob: -9.875066757202148
    3. 'el' → logprob: -11.625066757202148
    4. 'x' → logprob: -12.875066757202148
    5. '   ' → logprob: -13.625066757202148
    6. '0' → logprob: -14.250066757202148
    7. 'z' → logprob: -15.000066757202148
    8. ' y' → logprob: -15.000066757202148
    9. 'v' → logprob: -15.125066757202148
    10. '

' → logprob: -16.25006675720215

Token 111: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15478667616844177
    2. '<|end|>' → logprob: -2.1547865867614746
    3. '   ' → logprob: -4.154786586761475
    4. '    
' → logprob: -5.654786586761475
    5. ' 
' → logprob: -5.904786586761475
    6. '       ' → logprob: -5.904786586761475
    7. '<|end|>' → logprob: -7.404786586761475
    8. '  
' → logprob: -7.404786586761475
    9. ' ' → logprob: -7.529786586761475
    10. '

' → logprob: -8.654787063598633

Token 113: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3919813930988312
    2. '       ' → logprob: -1.8919813632965088
    3. '   ' → logprob: -2.141981363296509
    4. '

' → logprob: -3.766981363296509
    5. 'def' → logprob: -4.391981601715088
    6. '    
' → logprob: -4.641981601715088
    7. ' def' → logprob: -5.641981601715088
    8. '<|end|>' → logprob: -5.766981601715088
    9. '        
' → logprob: -7.016981601715088
    10. 'self' → logprob: -7.266981601715088

Token 114: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0434843301773071
    2. ' def' → logprob: -1.2934843301773071
    3. '    ' → logprob: -1.9184843301773071
    4. ' self' → logprob: -2.7934842109680176
    5. '   ' → logprob: -3.2934842109680176
    6. '        ' → logprob: -3.5434842109680176
    7. 'def' → logprob: -3.9184842109680176
    8. 'self' → logprob: -4.043484210968018
    9. ' #' → logprob: -4.418484210968018
    10. ' pass' → logprob: -4.418484210968018

Token 115: ' given' (ID: 4335)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.09223414957523346
    2. 'self' → logprob: -2.5922341346740723
    3. ' now' → logprob: -6.592234134674072
    4. ' the' → logprob: -6.592234134674072
    5. ' this' → logprob: -6.842234134674072
    6. ' y' → logprob: -6.842234134674072
    7. ' a' → logprob: -7.217234134674072
    8. ' debugging' → logprob: -7.467234134674072
    9. ' simplicity' → logprob: -7.467234134674072
    10. ' par' → logprob: -7.717234134674072

Token 116: ' vx' (ID: 93588)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.499646782875061
    2. ' the' → logprob: -1.749646782875061
    3. ' time' → logprob: -1.874646782875061
    4. ' self' → logprob: -2.3746466636657715
    5. ' t' → logprob: -3.1246466636657715
    6. ' initial' → logprob: -3.2496466636657715
    7. ' l' → logprob: -3.6246466636657715
    8. ' given' → logprob: -3.6246466636657715
    9. ' horizontal' → logprob: -3.6246466636657715
    10. 't' → logprob: -3.9996466636657715

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06288334727287292
    2. ' and' → logprob: -3.0628833770751953
    3. 'and' → logprob: -4.687883377075195
    4. ' ,' → logprob: -5.937883377075195
    5. '       ' → logprob: -7.187883377075195
    6. 'self' → logprob: -8.312883377075195
    7. '   ' → logprob: -8.562883377075195
    8. ':' → logprob: -8.687883377075195
    9. '<|end|>' → logprob: -8.687883377075195
    10. ',self' → logprob: -8.937883377075195

Token 118: ' vy' (ID: 14190)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.626112163066864
    2. ' self' → logprob: -0.876112163066864
    3. '#' → logprob: -3.626112222671509
    4. '       ' → logprob: -4.87611198425293
    5. ' the' → logprob: -5.25111198425293
    6. ' #' → logprob: -5.62611198425293
    7. 'def' → logprob: -6.37611198425293
    8. ' def' → logprob: -6.75111198425293
    9. 'the' → logprob: -7.37611198425293
    10. ' a' → logprob: -8.00111198425293

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007545222993940115
    2. ' and' → logprob: -5.757544994354248
    3. ' self' → logprob: -6.632544994354248
    4. 'self' → logprob: -6.757544994354248
    5. '       ' → logprob: -7.882544994354248
    6. ',
' → logprob: -7.882544994354248
    7. ' ,' → logprob: -8.257545471191406
    8. ' the' → logprob: -9.007545471191406
    9. '<|end|>' → logprob: -9.132545471191406
    10. 'def' → logprob: -9.132545471191406

Token 120: ' l' (ID: 305)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5884137153625488
    2. 'self' → logprob: -0.9634137153625488
    3. ' the' → logprob: -3.713413715362549
    4. '       ' → logprob: -4.588413715362549
    5. '#' → logprob: -4.713413715362549
    6. ' we' → logprob: -5.588413715362549
    7. ' def' → logprob: -5.838413715362549
    8. 'def' → logprob: -5.963413715362549
    9. ' #' → logprob: -6.088413715362549
    10. ' and' → logprob: -6.338413715362549

Token 121: ' must' (ID: 2804)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01671617664396763
    2. ' ,' → logprob: -5.016716003417969
    3. '       ' → logprob: -6.016716003417969
    4. ' self' → logprob: -6.266716003417969
    5. 'self' → logprob: -6.516716003417969
    6. ' the' → logprob: -6.516716003417969
    7. ':' → logprob: -7.016716003417969
    8. ' we' → logprob: -8.016716003417969
    9. ',
' → logprob: -8.141716003417969
    10. 'def' → logprob: -8.516716003417969

Token 122: ' satisfy' (ID: 35441)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.014629756100475788
    2. '=' → logprob: -4.88962984085083
    3. ' =' → logprob: -6.26462984085083
    4. '>' → logprob: -7.13962984085083
    5. ' not' → logprob: -7.13962984085083
    6. '>=' → logprob: -7.51462984085083
    7. 'be' → logprob: -7.88962984085083
    8. 'n't' → logprob: -8.014629364013672
    9. ' satisfy' → logprob: -8.389629364013672
    10. ' >' → logprob: -8.389629364013672

Token 123: ' l' (ID: 305)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.24767814576625824
    2. 'self' → logprob: -2.37267804145813
    3. ' the' → logprob: -3.12267804145813
    4. ' y' → logprob: -3.62267804145813
    5. '       ' → logprob: -3.87267804145813
    6. ':' → logprob: -4.747678279876709
    7. 'y' → logprob: -5.247678279876709
    8. ' ' → logprob: -5.872678279876709
    9. ' math' → logprob: -5.997678279876709
    10. '0' → logprob: -6.122678279876709

Token 124: ' =' (ID: 314)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.9348710775375366
    2. ' <=' → logprob: -1.0598710775375366
    3. '/' → logprob: -2.059871196746826
    4. ' =' → logprob: -3.309871196746826
    5. '<=' → logprob: -3.309871196746826
    6. '=' → logprob: -4.184871196746826
    7. '**' → logprob: -4.309871196746826
    8. '*' → logprob: -4.684871196746826
    9. ' *' → logprob: -4.809871196746826
    10. ' <' → logprob: -5.934871196746826

Token 125: ' ' (ID: 220)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8654205799102783
    2. ' (' → logprob: -1.6154205799102783
    3. ' vx' → logprob: -1.7404205799102783
    4. 'self' → logprob: -2.1154205799102783
    5. ' vy' → logprob: -3.7404205799102783
    6. 'vx' → logprob: -3.8654205799102783
    7. 'vy' → logprob: -4.240420341491699
    8. '(' → logprob: -4.865420341491699
    9. ' ' → logprob: -5.740420341491699
    10. ' abs' → logprob: -5.990420341491699

Token 126: '2' (ID: 17)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1433991193771362
    2. ' vx' → logprob: -1.7683991193771362
    3. 'vx' → logprob: -2.018399238586426
    4. ' self' → logprob: -2.018399238586426
    5. ' (' → logprob: -2.268399238586426
    6. 'vy' → logprob: -3.018399238586426
    7. '(' → logprob: -3.268399238586426
    8. '(v' → logprob: -4.018399238586426
    9. '(self' → logprob: -4.393399238586426
    10. '2' → logprob: -4.893399238586426

Token 127: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5272079110145569
    2. '*' → logprob: -0.9022079110145569
    3. '*self' → logprob: -5.902207851409912
    4. '*v' → logprob: -6.777207851409912
    5. '*object' → logprob: -9.65220832824707
    6. '*(' → logprob: -10.15220832824707
    7. 'vy' → logprob: -10.27720832824707
    8. '.' → logprob: -11.27720832824707
    9. ' ' → logprob: -11.77720832824707
    10. '0' → logprob: -12.02720832824707

Token 128: ' vx' (ID: 93588)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7550751566886902
    2. 'self' → logprob: -1.505075216293335
    3. ' vy' → logprob: -1.755075216293335
    4. 'vy' → logprob: -3.505075216293335
    5. ' initial' → logprob: -3.505075216293335
    6. ' vx' → logprob: -3.755075216293335
    7. 'vx' → logprob: -4.005074977874756
    8. ' (' → logprob: -4.380074977874756
    9. 'initial' → logprob: -4.630074977874756
    10. '(self' → logprob: -5.755074977874756

Token 129: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3160834312438965
    2. '*' → logprob: -1.3160834312438965
    3. '*self' → logprob: -6.6910834312438965
    4. ' /' → logprob: -7.5660834312438965
    5. '/' → logprob: -7.6910834312438965
    6. '**' → logprob: -8.941083908081055
    7. '*v' → logprob: -9.066083908081055
    8. '*object' → logprob: -9.191083908081055
    9. ' ' → logprob: -9.316083908081055
    10. '*time' → logprob: -10.566083908081055

Token 130: ' vy' (ID: 14190)
  Prédit: ' vy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vy' → logprob: -0.5613734722137451
    2. ' self' → logprob: -1.1863734722137451
    3. 'vy' → logprob: -2.686373472213745
    4. 'self' → logprob: -2.936373472213745
    5. ' (' → logprob: -6.436373710632324
    6. '(self' → logprob: -7.936373710632324
    7. ' math' → logprob: -8.311373710632324
    8. ' ' → logprob: -9.061373710632324
    9. '   ' → logprob: -9.436373710632324
    10. '/v' → logprob: -9.623873710632324

Token 131: ' /' (ID: 820)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7631313800811768
    2. '<|end|>' → logprob: -0.7631313800811768
    3. ' ' → logprob: -4.638131141662598
    4. ')' → logprob: -4.763131141662598
    5. '

' → logprob: -4.763131141662598
    6. '<|end|>' → logprob: -4.888131141662598
    7. ' *' → logprob: -5.263131141662598
    8. '       ' → logprob: -5.513131141662598
    9. '.' → logprob: -5.638131141662598
    10. ' /' → logprob: -5.888131141662598

Token 132: ' g' (ID: 329)
  Prédit: 'GR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'GR' → logprob: -0.062389224767684937
    2. ' GR' → logprob: -2.8123891353607178
    3. ' (' → logprob: -8.937389373779297
    4. '(' → logprob: -9.312389373779297
    5. ' ' → logprob: -10.062389373779297
    6. 'g' → logprob: -10.312389373779297
    7. ' gravity' → logprob: -10.437389373779297
    8. 'gravity' → logprob: -10.687389373779297
    9. '9' → logprob: -11.062389373779297
    10. '(G' → logprob: -11.687389373779297

Token 133: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5847623944282532
    2. '<|end|>' → logprob: -0.8347623944282532
    3. '<|end|>' → logprob: -5.5847625732421875
    4. ')' → logprob: -6.3347625732421875
    5. '   ' → logprob: -7.8347625732421875
    6. '\n' → logprob: -7.8347625732421875
    7. '.' → logprob: -7.9597625732421875
    8. ',' → logprob: -7.9597625732421875
    9. ' ' → logprob: -8.334762573242188
    10. '```' → logprob: -8.584762573242188

Token 134: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14535020291805267
    2. '<|end|>' → logprob: -2.020350217819214
    3. '   ' → logprob: -7.270349979400635
    4. '<|end|>' → logprob: -7.770349979400635
    5. ')' → logprob: -8.145350456237793
    6. '\n' → logprob: -8.395350456237793
    7. '  
' → logprob: -8.895350456237793
    8. '    
' → logprob: -8.895350456237793
    9. ' 
' → logprob: -8.895350456237793
    10. ' ' → logprob: -9.020350456237793

Token 135: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 136: ' Par' (ID: 3371)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1836065649986267
    2. ' assert' → logprob: -2.3086066246032715
    3. '   ' → logprob: -4.5586066246032715
    4. 'assert' → logprob: -4.5586066246032715
    5. ' ' → logprob: -4.8086066246032715
    6. ' if' → logprob: -4.9336066246032715
    7. ' def' → logprob: -5.0586066246032715
    8. ')' → logprob: -5.5586066246032715
    9. '        ' → logprob: -5.8086066246032715
    10. '<|end|>' → logprob: -6.0586066246032715

Token 137: 'ab' (ID: 378)
  Prédit: 'abolic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abolic' → logprob: -0.29547318816185
    2. 'a' → logprob: -1.9204732179641724
    3. 'ab' → logprob: -3.045473098754883
    4. 'am' → logprob: -3.420473098754883
    5. 't' → logprob: -4.295473098754883
    6. 'abol' → logprob: -4.545473098754883
    7. 'e' → logprob: -7.170473098754883
    8. '_' → logprob: -7.170473098754883
    9. 's' → logprob: -7.920473098754883
    10. 'ent' → logprob: -8.045473098754883

Token 138: 'ola' (ID: 5204)
  Prédit: 'ola'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ola' → logprob: -1.3182554244995117
    2. 'olic' → logprob: -1.3182554244995117
    3. '   ' → logprob: -1.8182554244995117
    4. 'ol' → logprob: -2.1932554244995117
    5. 'abolic' → logprob: -2.6932554244995117
    6. '       ' → logprob: -3.0682554244995117
    7. ')' → logprob: -3.6932554244995117
    8. 'a' → logprob: -4.068255424499512
    9. ' ' → logprob: -5.318255424499512
    10. '           ' → logprob: -5.568255424499512

Token 139: ' equation' (ID: 42006)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45305749773979187
    2. '<|end|>' → logprob: -1.9530575275421143
    3. '   ' → logprob: -2.8280575275421143
    4. '_height' → logprob: -3.3280575275421143
    5. '       ' → logprob: -4.203057289123535
    6. '_' → logprob: -4.328057289123535
    7. '_length' → logprob: -4.578057289123535
    8. '.' → logprob: -4.703057289123535
    9. ' ' → logprob: -4.828057289123535
    10. ' =' → logprob: -5.203057289123535

Token 140: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6778347492218018
    2. '       ' → logprob: -2.1778347492218018
    3. '   ' → logprob: -2.1778347492218018
    4. ' =' → logprob: -2.9278347492218018
    5. '\' → logprob: -3.3028347492218018
    6. '
' → logprob: -3.4278347492218018
    7. ' :' → logprob: -3.8028347492218018
    8. '<|end|>' → logprob: -3.9278347492218018
    9. ',' → logprob: -4.302834510803223
    10. ' ' → logprob: -4.552834510803223

Token 141: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.9735472202301025
    2. '   ' → logprob: -1.7235472202301025
    3. ' def' → logprob: -2.2235472202301025
    4. '<|end|>' → logprob: -2.3485472202301025
    5. '       ' → logprob: -2.5985472202301025
    6. ' self' → logprob: -2.8485472202301025
    7. 'y' → logprob: -3.4735472202301025
    8. '<|end|>' → logprob: -3.7235472202301025
    9. '
' → logprob: -4.223546981811523
    10. ' ' → logprob: -4.723546981811523

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27026206254959106
    2. '=' → logprob: -1.6452620029449463
    3. '(t' → logprob: -3.7702620029449463
    4. '(x' → logprob: -4.020262241363525
    5. '(' → logprob: -6.145262241363525
    6. '0' → logprob: -8.645261764526367
    7. '_max' → logprob: -9.145261764526367
    8. '   ' → logprob: -9.145261764526367
    9. 'max' → logprob: -9.645261764526367
    10. ' ' → logprob: -9.645261764526367

Token 143: ' -(' (ID: 66319)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.759979784488678
    2. '-' → logprob: -2.259979724884033
    3. ' -' → logprob: -2.384979724884033
    4. 'self' → logprob: -2.384979724884033
    5. ' (' → logprob: -2.884979724884033
    6. ' lambda' → logprob: -3.259979724884033
    7. '(' → logprob: -3.759979724884033
    8. '0' → logprob: -4.009979724884033
    9. 'x' → logprob: -4.009979724884033
    10. 'lambda' → logprob: -4.009979724884033

Token 144: 'g' (ID: 70)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.2724201679229736
    2. 'GR' → logprob: -1.3974201679229736
    3. 'g' → logprob: -1.5224201679229736
    4. '(g' → logprob: -2.3974201679229736
    5. '(G' → logprob: -2.8974201679229736
    6. ' GR' → logprob: -3.1474201679229736
    7. '4' → logprob: -4.0224199295043945
    8. '0' → logprob: -4.5224199295043945
    9. ' g' → logprob: -4.6474199295043945
    10. '(' → logprob: -4.6474199295043945

Token 145: '/(' (ID: 27334)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.697263777256012
    2. ' *' → logprob: -0.947263777256012
    3. ' /' → logprob: -2.572263717651367
    4. '/(' → logprob: -4.072263717651367
    5. '*x' → logprob: -4.822263717651367
    6. '*t' → logprob: -5.197263717651367
    7. '*' → logprob: -5.447263717651367
    8. ')' → logprob: -6.197263717651367
    9. '*(' → logprob: -8.447263717651367
    10. '   ' → logprob: -8.447263717651367

Token 146: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0016305516473948956
    2. '(' → logprob: -7.251630783081055
    3. ' ' → logprob: -7.626630783081055
    4. 'vx' → logprob: -8.126630783081055
    5. '   ' → logprob: -10.376630783081055
    6. ')' → logprob: -10.501630783081055
    7. 'v' → logprob: -10.876630783081055
    8. '

' → logprob: -11.001630783081055
    9. ' (' → logprob: -11.501630783081055
    10. 'self' → logprob: -11.751630783081055

Token 147: ' vx' (ID: 93588)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5832089781761169
    2. ' *' → logprob: -0.8332089781761169
    3. '*v' → logprob: -5.458209037780762
    4. 'vx' → logprob: -6.208209037780762
    5. '*self' → logprob: -7.458209037780762
    6. ' vx' → logprob: -8.458209037780762
    7. '*x' → logprob: -9.208209037780762
    8. 'v' → logprob: -10.583209037780762
    9. '*(' → logprob: -10.958209037780762
    10. ')' → logprob: -11.583209037780762

Token 148: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.006756340153515339
    2. ' **' → logprob: -5.38175630569458
    3. '2' → logprob: -7.00675630569458
    4. '*' → logprob: -7.13175630569458
    5. '^' → logprob: -8.381756782531738
    6. ' *' → logprob: -9.506756782531738
    7. '²' → logprob: -10.006756782531738
    8. '*x' → logprob: -10.881756782531738
    9. ' ' → logprob: -11.381756782531738
    10. 'x' → logprob: -11.756756782531738

Token 149: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015261677326634526
    2. ' ' → logprob: -6.501526355743408
    3. '**' → logprob: -11.75152587890625
    4. ')' → logprob: -12.25152587890625
    5. '
' → logprob: -12.62652587890625
    6. '

' → logprob: -12.75152587890625
    7. '^' → logprob: -13.25152587890625
    8. '²' → logprob: -14.00152587890625
    9. ' )' → logprob: -14.75152587890625
    10. ' 

' → logprob: -15.25152587890625

Token 150: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.029711956158280373
    2. ')' → logprob: -3.904711961746216
    3. ' ))' → logprob: -5.029711723327637
    4. '))*' → logprob: -6.029711723327637
    5. ' )' → logprob: -8.904711723327637
    6. ' ' → logprob: -11.029711723327637
    7. '*' → logprob: -12.029711723327637
    8. '2' → logprob: -12.654711723327637
    9. ')*' → logprob: -13.029711723327637
    10. '*))' → logprob: -13.029711723327637

Token 151: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8552558422088623
    2. ' *' → logprob: -1.1052558422088623
    3. ')' → logprob: -2.1052558422088623
    4. ' x' → logprob: -2.6052558422088623
    5. '*' → logprob: -3.6052558422088623
    6. '*x' → logprob: -4.355256080627441
    7. 't' → logprob: -6.230256080627441
    8. '*t' → logprob: -6.605256080627441
    9. ' )' → logprob: -6.855256080627441
    10. ')x' → logprob: -6.980256080627441

Token 152: '^' (ID: 61)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1259048879146576
    2. '^' → logprob: -2.7509047985076904
    3. '²' → logprob: -3.0009047985076904
    4. '**' → logprob: -5.5009050369262695
    5. ' ' → logprob: -7.8759050369262695
    6. ')' → logprob: -9.12590503692627
    7. '*' → logprob: -10.37590503692627
    8. 's' → logprob: -11.37590503692627
    9. '<|end|>' → logprob: -11.62590503692627
    10. '.' → logprob: -11.62590503692627

Token 153: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.123899558791891e-05
    2. ' ' → logprob: -10.12507152557373
    3. '
' → logprob: -11.50007152557373
    4. ')' → logprob: -12.37507152557373
    5. '{' → logprob: -12.50007152557373
    6. '   ' → logprob: -13.18757152557373
    7. '²' → logprob: -13.31257152557373
    8. '```' → logprob: -13.31257152557373
    9. '

' → logprob: -13.62507152557373
    10. '​' → logprob: -14.00007152557373

Token 154: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6731898188591003
    2. ' +' → logprob: -1.6731898784637451
    3. ' ' → logprob: -2.423189878463745
    4. ' *' → logprob: -3.048189878463745
    5. ' )' → logprob: -3.423189878463745
    6. '   ' → logprob: -3.423189878463745
    7. '**' → logprob: -3.923189878463745
    8. '+' → logprob: -4.548189640045166
    9. '

' → logprob: -4.673189640045166
    10. '\n' → logprob: -4.923189640045166

Token 155: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04168056324124336
    2. '(' → logprob: -3.4166805744171143
    3. '(v' → logprob: -5.791680335998535
    4. '(s' → logprob: -6.041680335998535
    5. ' ' → logprob: -7.416680335998535
    6. '(self' → logprob: -7.666680335998535
    7. '<|end|>' → logprob: -8.291680335998535
    8. '(f' → logprob: -8.541680335998535
    9. ' ((' → logprob: -8.791680335998535
    10. '((' → logprob: -8.791680335998535

Token 156: 'vy' (ID: 16670)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.13108491897583
    2. ' vy' → logprob: -1.50608491897583
    3. 'vy' → logprob: -1.63108491897583
    4. '(v' → logprob: -1.63108491897583
    5. '(' → logprob: -3.00608491897583
    6. '(self' → logprob: -5.25608491897583
    7. ')' → logprob: -6.25608491897583
    8. 'v' → logprob: -6.50608491897583
    9. ' ' → logprob: -6.50608491897583
    10. '2' → logprob: -7.13108491897583

Token 157: '/v' (ID: 10315)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3791789710521698
    2. ' /' → logprob: -1.8791790008544922
    3. '*' → logprob: -2.004179000854492
    4. ')' → logprob: -4.504179000854492
    5. '/' → logprob: -5.004179000854492
    6. ' )' → logprob: -5.254179000854492
    7. '/v' → logprob: -5.629179000854492
    8. ' ' → logprob: -7.379179000854492
    9. '/g' → logprob: -7.879179000854492
    10. ')/' → logprob: -8.504179000854492

Token 158: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: 0.0
    2. '_x' → logprob: -17.125
    3. ')' → logprob: -19.0
    4. ' x' → logprob: -19.625
    5. '_' → logprob: -20.25
    6. ')x' → logprob: -20.25
    7. '
' → logprob: -20.375
    8. '```' → logprob: -20.5
    9. ' ' → logprob: -20.75
    10. 'х' → logprob: -21.875

Token 159: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030498430132865906
    2. ' )' → logprob: -5.878049850463867
    3. ')*' → logprob: -8.378049850463867
    4. '*)' → logprob: -12.128049850463867
    5. '*' → logprob: -12.503049850463867
    6. ')x' → logprob: -13.503049850463867
    7. ' ' → logprob: -14.253049850463867
    8. ' *' → logprob: -14.503049850463867
    9. '1' → logprob: -15.128049850463867
    10. ' *)' → logprob: -15.128049850463867

Token 160: ' x' (ID: 1215)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4788499176502228
    2. ')' → logprob: -1.7288498878479004
    3. ' x' → logprob: -2.4788498878479004
    4. 'x' → logprob: -3.2288498878479004
    5. ' )' → logprob: -3.9788498878479004
    6. ' ' → logprob: -4.2288498878479
    7. '*' → logprob: -4.7288498878479
    8. '2' → logprob: -4.8538498878479
    9. '   ' → logprob: -5.2288498878479
    10. '*x' → logprob: -5.4788498878479

Token 161: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20270340144634247
    2. '   ' → logprob: -2.5777034759521484
    3. '<|end|>' → logprob: -2.9527034759521484
    4. ')' → logprob: -4.202703475952148
    5. '\n' → logprob: -4.702703475952148
    6. ' 
' → logprob: -5.077703475952148
    7. '<|end|>' → logprob: -5.077703475952148
    8. '    
' → logprob: -5.452703475952148
    9. '  
' → logprob: -5.702703475952148
    10. ' ' → logprob: -5.952703475952148

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17046572268009186
    2. '    
' → logprob: -2.4204657077789307
    3. '
' → logprob: -3.4204657077789307
    4. 'def' → logprob: -4.17046594619751
    5. '<|end|>' → logprob: -4.54546594619751
    6. ' def' → logprob: -5.79546594619751
    7. '        
' → logprob: -5.92046594619751
    8. ' 
' → logprob: -7.29546594619751
    9. '    
    
' → logprob: -7.54546594619751
    10. '
    
' → logprob: -7.79546594619751

Token 163: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.12199895083904266
    2. ' def' → logprob: -2.6219990253448486
    3. '   ' → logprob: -3.2469990253448486
    4. '    
' → logprob: -5.8719987869262695
    5. '
' → logprob: -8.62199878692627
    6. ' ' → logprob: -9.87199878692627
    7. '        
' → logprob: -10.12199878692627
    8. ')' → logprob: -10.37199878692627
    9. ' 
' → logprob: -10.62199878692627
    10. '

' → logprob: -10.74699878692627

Token 164: ' height' (ID: 4679)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.2142301797866821
    2. ' height' → logprob: -1.5892301797866821
    3. ' time' → logprob: -1.9642301797866821
    4. ' y' → logprob: -1.9642301797866821
    5. ' get' → logprob: -2.2142300605773926
    6. ' maximum' → logprob: -3.9642300605773926
    7. ' calculate' → logprob: -4.714230060577393
    8. 'max' → logprob: -4.839230060577393
    9. ' vertical' → logprob: -4.839230060577393
    10. ' displacement' → logprob: -4.964230060577393

Token 165: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.1438879370689392
    2. '(' → logprob: -2.143887996673584
    3. '(self' → logprob: -4.143887996673584
    4. '_' → logprob: -7.143887996673584
    5. '_(' → logprob: -9.768887519836426
    6. ' (' → logprob: -10.143887519836426
    7. 'at' → logprob: -10.518887519836426
    8. 'At' → logprob: -10.768887519836426
    9. ' at' → logprob: -12.268887519836426
    10. '_a' → logprob: -12.768887519836426

Token 166: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5760331749916077
    2. '(self' → logprob: -0.8260331749916077
    3. ' (' → logprob: -9.826033592224121
    4. '(
' → logprob: -10.951033592224121
    5. '(x' → logprob: -11.326033592224121
    6. 'self' → logprob: -11.701033592224121
    7. '(

' → logprob: -13.701033592224121
    8. '(s' → logprob: -15.451033592224121
    9. ' self' → logprob: -16.201032638549805
    10. 'x' → logprob: -17.076032638549805

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20840200781822205
    2. '(' → logprob: -2.083401918411255
    3. ' (' → logprob: -3.208401918411255
    4. ' ,' → logprob: -4.208402156829834
    5. ')' → logprob: -5.208402156829834
    6. '(x' → logprob: -6.708402156829834
    7. ' )' → logprob: -7.083402156829834
    8. ' x' → logprob: -8.208401679992676
    9. 'x' → logprob: -8.833401679992676
    10. ')(' → logprob: -8.958401679992676

Token 168: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.47414258122444153
    2. 'x' → logprob: -0.9741425514221191
    3. ' self' → logprob: -10.724143028259277
    4. 'self' → logprob: -10.724143028259277
    5. '   ' → logprob: -11.599143028259277
    6. ' ' → logprob: -12.349143028259277
    7. '	x' → logprob: -13.099143028259277
    8. ')' → logprob: -13.474143028259277
    9. '    ' → logprob: -13.724143028259277
    10. '       ' → logprob: -14.099143028259277

Token 169: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31869274377822876
    2. ':' → logprob: -1.318692684173584
    3. ')' → logprob: -6.068692684173584
    4. ' ):' → logprob: -6.193692684173584
    5. '):
' → logprob: -6.943692684173584
    6. ' :' → logprob: -9.943693161010742
    7. '   ' → logprob: -10.943693161010742
    8. ' )' → logprob: -10.943693161010742
    9. ' ):
' → logprob: -12.818693161010742
    10. ':int' → logprob: -12.818693161010742

Token 170: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.10170980542898178
    2. ' float' → logprob: -2.3517098426818848
    3. ')' → logprob: -6.601709842681885
    4. ' )' → logprob: -10.226709365844727
    5. '(float' → logprob: -10.226709365844727
    6. 'x' → logprob: -10.851709365844727
    7. 'int' → logprob: -11.226709365844727
    8. '_float' → logprob: -11.226709365844727
    9. '=float' → logprob: -12.226709365844727
    10. '):' → logprob: -12.226709365844727

Token 171: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014241776429116726
    2. '):' → logprob: -4.264241695404053
    3. ' )' → logprob: -10.264242172241211
    4. '):
' → logprob: -10.389242172241211
    5. ')->' → logprob: -12.014242172241211
    6. ' ):' → logprob: -12.389242172241211
    7. '):
' → logprob: -14.139242172241211
    8. ':' → logprob: -14.514242172241211
    9. '):

' → logprob: -14.639242172241211
    10. '   ' → logprob: -14.764242172241211

Token 172: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010648438474163413
    2. ' :' → logprob: -7.001064777374268
    3. '):' → logprob: -9.251065254211426
    4. '():' → logprob: -10.876065254211426
    5. ' ->' → logprob: -11.001065254211426
    6. ')' → logprob: -11.376065254211426
    7. '->' → logprob: -13.001065254211426
    8. ':return' → logprob: -13.126065254211426
    9. ':**' → logprob: -13.126065254211426
    10. '   ' → logprob: -13.626065254211426

Token 173: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.1270221769809723
    2. 'float' → logprob: -2.1270222663879395
    3. '(float' → logprob: -10.002021789550781
    4. ' Optional' → logprob: -10.502021789550781
    5. '	float' → logprob: -12.127021789550781
    6. ' max' → logprob: -12.377021789550781
    7. 'Optional' → logprob: -12.627021789550781
    8. ' int' → logprob: -13.627021789550781
    9. ' return' → logprob: -13.877021789550781
    10. '=float' → logprob: -14.127021789550781

Token 174: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00024025145103223622
    2. '):' → logprob: -8.625240325927734
    3. ':
' → logprob: -10.000240325927734
    4. '():' → logprob: -12.000240325927734
    5. '   ' → logprob: -12.875240325927734
    6. ':**' → logprob: -13.500240325927734
    7. ' :' → logprob: -13.500240325927734
    8. ':return' → logprob: -13.625240325927734
    9. '       ' → logprob: -14.375240325927734
    10. ')' → logprob: -14.625240325927734

Token 175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38977015018463135
    2. ':' → logprob: -1.1397701501846313
    3. ' :' → logprob: -6.639770030975342
    4. '):' → logprob: -6.764770030975342
    5. ')' → logprob: -9.1397705078125
    6. ' ):' → logprob: -9.7647705078125
    7. '   ' → logprob: -9.8897705078125
    8. '        ' → logprob: -10.1397705078125
    9. '():' → logprob: -10.3897705078125
    10. '    ' → logprob: -11.0147705078125

Token 176: ' """' (ID: 9280)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010410488583147526
    2. ' ' → logprob: -6.135410308837891
    3. '        ' → logprob: -6.135410308837891
    4. ':' → logprob: -6.385410308837891
    5. ' 
' → logprob: -7.010410308837891
    6. '   ' → logprob: -7.010410308837891
    7. '    ' → logprob: -7.135410308837891
    8. ')' → logprob: -8.01041030883789
    9. ' if' → logprob: -8.26041030883789
    10. ' return' → logprob: -8.38541030883789

Token 177: 'Return' (ID: 8191)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8618791103363037
    2. 'g' → logprob: -1.1118791103363037
    3. '       ' → logprob: -2.2368791103363037
    4. 'return' → logprob: -2.7368791103363037
    5. ' if' → logprob: -3.3618791103363037
    6. 'a' → logprob: -3.9868791103363037
    7. '   ' → logprob: -4.486879348754883
    8. ' g' → logprob: -5.611879348754883
    9. ' return' → logprob: -5.736879348754883
    10. ')' → logprob: -6.236879348754883

Token 178: ' the' (ID: 290)
  Prédit: ' -('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -(' → logprob: -0.4478541910648346
    2. '-(' → logprob: -1.3228541612625122
    3. ' -' → logprob: -2.5728542804718018
    4. '-' → logprob: -4.322854042053223
    5. '(-(' → logprob: -6.822854042053223
    6. '   ' → logprob: -7.197854042053223
    7. ' ' → logprob: -7.197854042053223
    8. ' (' → logprob: -7.572854042053223
    9. ' max' → logprob: -7.697854042053223
    10. 'max' → logprob: -8.322854042053223

Token 179: ' height' (ID: 4679)
  Prédit: '-('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-(' → logprob: -0.004379567224532366
    2. '-' → logprob: -5.629379749298096
    3. ' -(' → logprob: -7.879379749298096
    4. '-G' → logprob: -8.879379272460938
    5. ' -' → logprob: -9.754379272460938
    6. '-g' → logprob: -10.004379272460938
    7. '(-(' → logprob: -10.129379272460938
    8. '(' → logprob: -10.629379272460938
    9. '-self' → logprob: -11.129379272460938
    10. '(-' → logprob: -11.254379272460938

Token 180: ' of' (ID: 328)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.20376937091350555
    2. '       ' → logprob: -2.0787694454193115
    3. '   ' → logprob: -3.3287694454193115
    4. ' of' → logprob: -5.578769207000732
    5. ' (' → logprob: -5.578769207000732
    6. ' ' → logprob: -5.703769207000732
    7. ' *' → logprob: -5.703769207000732
    8. '(' → logprob: -6.453769207000732
    9. ' given' → logprob: -6.703769207000732
    10. ' if' → logprob: -6.828769207000732

Token 181: ' bullet' (ID: 31926)
  Prédit: '-('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-(' → logprob: -1.1721060276031494
    2. ' -' → logprob: -1.2971060276031494
    3. '-' → logprob: -1.7971060276031494
    4. ' -(' → logprob: -2.0471060276031494
    5. 'self' → logprob: -3.0471060276031494
    6. ' self' → logprob: -3.2971060276031494
    7. '-self' → logprob: -4.29710578918457
    8. '   ' → logprob: -5.04710578918457
    9. '(self' → logprob: -5.17210578918457
    10. ' (' → logprob: -5.67210578918457

Token 182: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.005985797382891178
    2. '   ' → logprob: -5.755985736846924
    3. 'at' → logprob: -7.130985736846924
    4. ',' → logprob: -7.630985736846924
    5. '_at' → logprob: -7.630985736846924
    6. ')' → logprob: -7.880985736846924
    7. ' ' → logprob: -8.755986213684082
    8. '       ' → logprob: -9.130986213684082
    9. '	at' → logprob: -9.880986213684082
    10. ' *' → logprob: -9.880986213684082

Token 183: ' horizontal' (ID: 25511)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3868737816810608
    2. ' x' → logprob: -1.136873722076416
    3. ' self' → logprob: -14.011874198913574
    4. 'self' → logprob: -14.136874198913574
    5. '   ' → logprob: -14.511874198913574
    6. '       ' → logprob: -15.011874198913574
    7. ' ' → logprob: -15.886874198913574
    8. ' the' → logprob: -16.511873245239258
    9. '	x' → logprob: -16.636873245239258
    10. '(x' → logprob: -16.761873245239258

Token 184: ' distance' (ID: 9324)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.083156704902649
    2. ' position' → logprob: -1.083156704902649
    3. 'x' → logprob: -1.833156704902649
    4. 'position' → logprob: -2.0831565856933594
    5. 'distance' → logprob: -3.5831565856933594
    6. ' distance' → logprob: -4.708156585693359
    7. 'point' → logprob: -7.833156585693359
    8. ' point' → logprob: -7.958156585693359
    9. '   ' → logprob: -8.08315658569336
    10. '_position' → logprob: -8.33315658569336

Token 185: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.841350257396698
    2. 'x' → logprob: -1.2163503170013428
    3. ' from' → logprob: -1.4663503170013428
    4. 'from' → logprob: -3.9663503170013428
    5. '   ' → logprob: -4.091350078582764
    6. ' ' → logprob: -5.716350078582764
    7. '    ' → logprob: -7.466350078582764
    8. ' (' → logprob: -7.466350078582764
    9. ' )' → logprob: -8.091350555419922
    10. ')' → logprob: -8.216350555419922

Token 186: '."""
' (ID: 33044)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25795888900756836
    2. '):' → logprob: -2.1329588890075684
    3. ')' → logprob: -2.8829588890075684
    4. '   ' → logprob: -4.132958889007568
    5. ',' → logprob: -4.382958889007568
    6. '.' → logprob: -5.007958889007568
    7. ' from' → logprob: -5.632958889007568
    8. '<|end|>' → logprob: -5.632958889007568
    9. ' ' → logprob: -6.507958889007568
    10. ' :' → logprob: -6.632958889007568

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04554543271660805
    2. ':' → logprob: -3.4205453395843506
    3. '        ' → logprob: -6.04554557800293
    4. ')' → logprob: -6.04554557800293
    5. ' 
' → logprob: -6.54554557800293
    6. ' return' → logprob: -7.29554557800293
    7. ' :' → logprob: -7.54554557800293
    8. '=' → logprob: -7.67054557800293
    9. '   ' → logprob: -7.67054557800293
    10. '<|end|>' → logprob: -7.67054557800293

Token 188: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.454310804605484
    2. 'g' → logprob: -1.2043107748031616
    3. 'a' → logprob: -3.329310894012451
    4. '   ' → logprob: -4.579310894012451
    5. '       ' → logprob: -4.954310894012451
    6. ' if' → logprob: -5.204310894012451
    7. 'return' → logprob: -5.329310894012451
    8. ' g' → logprob: -7.579310894012451
    9. 'coeff' → logprob: -8.454310417175293
    10. 'term' → logprob: -8.829310417175293

Token 189: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.09013208746910095
    2. 'x' → logprob: -2.465131998062134
    3. ' self' → logprob: -7.340132236480713
    4. '0' → logprob: -8.215131759643555
    5. 'self' → logprob: -8.965131759643555
    6. ' not' → logprob: -9.340131759643555
    7. ' ' → logprob: -9.965131759643555
    8. 'not' → logprob: -12.840131759643555
    9. '   ' → logprob: -13.340131759643555
    10. '       ' → logprob: -13.715131759643555

Token 190: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.061656489968299866
    2. ' >' → logprob: -3.4366564750671387
    3. '<' → logprob: -3.6866564750671387
    4. ' <=' → logprob: -6.561656475067139
    5. '>' → logprob: -6.936656475067139
    6. ' ' → logprob: -10.061656951904297
    7. '<=' → logprob: -10.436656951904297
    8. '<|end|>' → logprob: -10.561656951904297
    9. ' ==' → logprob: -10.811656951904297
    10. ')' → logprob: -11.061656951904297

Token 191: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014166327193379402
    2. ' ' → logprob: -4.264166355133057
    3. '   ' → logprob: -13.764165878295898
    4. '       ' → logprob: -14.639165878295898
    5. '=' → logprob: -14.764165878295898
    6. ' or' → logprob: -15.264165878295898
    7. ')' → logprob: -16.3266658782959
    8. ' ' → logprob: -16.3266658782959
    9. '-' → logprob: -16.5141658782959
    10. '  ' → logprob: -16.7016658782959

Token 192: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.643152740551159e-05
    2. ' ' → logprob: -10.250036239624023
    3. '=' → logprob: -14.500036239624023
    4. '       ' → logprob: -15.500036239624023
    5. '   ' → logprob: -15.625036239624023
    6. '-' → logprob: -15.875036239624023
    7. 'self' → logprob: -17.625036239624023
    8. '```' → logprob: -17.625036239624023
    9. '           ' → logprob: -18.437536239624023
    10. ')' → logprob: -18.687536239624023

Token 193: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.000229046301683411
    2. 'or' → logprob: -8.625228881835938
    3. ':' → logprob: -10.250228881835938
    4. '	or' → logprob: -12.375228881835938
    5. '       ' → logprob: -12.625228881835938
    6. '<|end|>' → logprob: -13.500228881835938
    7. ' ' → logprob: -13.625228881835938
    8. ':
' → logprob: -13.750228881835938
    9. '   ' → logprob: -13.875228881835938
    10. '0' → logprob: -13.875228881835938

Token 194: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0010329303331673145
    2. ' x' → logprob: -6.876032829284668
    3. '       ' → logprob: -16.626033782958984
    4. 'self' → logprob: -17.126033782958984
    5. '	x' → logprob: -17.376033782958984
    6. '               ' → logprob: -17.751033782958984
    7. '           ' → logprob: -18.001033782958984
    8. ' ' → logprob: -18.626033782958984
    9. '        ' → logprob: -19.126033782958984
    10. '   ' → logprob: -19.126033782958984

Token 195: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.47408327460289
    2. ' >' → logprob: -0.9740833044052124
    3. ' ' → logprob: -12.599082946777344
    4. ' or' → logprob: -13.849082946777344
    5. '>=' → logprob: -14.474082946777344
    6. ' >=' → logprob: -15.224082946777344
    7. ' ' → logprob: -15.599082946777344
    8. ' >
' → logprob: -16.224082946777344
    9. '<|end|>' → logprob: -16.474082946777344
    10. '   ' → logprob: -16.724082946777344

Token 196: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023245826363563538
    2. ' self' → logprob: -3.7732458114624023
    3. '       ' → logprob: -15.648245811462402
    4. '	self' → logprob: -16.27324676513672
    5. '(self' → logprob: -16.89824676513672
    6. '[self' → logprob: -19.02324676513672
    7. '=self' → logprob: -19.39824676513672
    8. '   ' → logprob: -20.02324676513672
    9. '_self' → logprob: -20.02324676513672
    10. ':self' → logprob: -20.39824676513672

Token 197: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.0007304243044927716
    2. '.' → logprob: -7.250730514526367
    3. 'l' → logprob: -11.000730514526367
    4. ' .' → logprob: -12.750730514526367
    5. ' l' → logprob: -14.250730514526367
    6. '	l' → logprob: -16.250730514526367
    7. '`.' → logprob: -17.375730514526367
    8. ').' → logprob: -17.625730514526367
    9. ' ' → logprob: -17.875730514526367
    10. '   ' → logprob: -17.875730514526367

Token 198: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07115118950605392
    2. ':
' → logprob: -2.6961512565612793
    3. ' or' → logprob: -7.321151256561279
    4. ':return' → logprob: -7.821151256561279
    5. ' :' → logprob: -9.196150779724121
    6. '       ' → logprob: -10.446150779724121
    7. ' :
' → logprob: -11.196150779724121
    8. ':
' → logprob: -12.821150779724121
    9. '):
' → logprob: -13.821150779724121
    10. '   ' → logprob: -13.946150779724121

Token 199: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13854339718818665
    2. '       ' → logprob: -2.3885433673858643
    3. ':' → logprob: -4.013543605804443
    4. '
' → logprob: -4.138543605804443
    5. '\n' → logprob: -7.388543605804443
    6. '        
' → logprob: -7.638543605804443
    7. ' return' → logprob: -7.888543605804443
    8. '        ' → logprob: -7.888543605804443
    9. ':
' → logprob: -8.388543128967285
    10. ' 
' → logprob: -8.513543128967285

Token 200: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.200778067111969
    2. ' ' → logprob: -2.575778007507324
    3. ' raise' → logprob: -3.325778007507324
    4. '           ' → logprob: -3.950778007507324
    5. ' return' → logprob: -3.950778007507324
    6. ' None' → logprob: -4.200778007507324
    7. 'raise' → logprob: -4.575778007507324
    8. 'return' (adapté à ' return') → logprob: -5.825778007507324
    9. 'None' → logprob: -6.075778007507324
    10. '       ' → logprob: -7.950778007507324

Token 201: ' float' (ID: 4428)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5403478741645813
    2. 'None' → logprob: -1.2903478145599365
    3. ' None' → logprob: -2.2903478145599365
    4. 'float' → logprob: -3.6653478145599365
    5. ' float' → logprob: -4.915348052978516
    6. ' ' → logprob: -5.040348052978516
    7. '-' → logprob: -6.790348052978516
    8. ' -' → logprob: -8.790348052978516
    9. 'math' → logprob: -8.915348052978516
    10. 'nan' → logprob: -9.290348052978516

Token 202: '('-' (ID: 33343)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.2014482170343399
    2. '('-' → logprob: -1.7014482021331787
    3. '(' → logprob: -10.326448440551758
    4. '("' → logprob: -13.951448440551758
    5. '("-' → logprob: -14.201448440551758
    6. '('--' → logprob: -15.576448440551758
    7. '(
' → logprob: -16.326448440551758
    8. '('+' → logprob: -16.701448440551758
    9. ' ('' → logprob: -16.826448440551758
    10. '('='' → logprob: -17.201448440551758

Token 203: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: 0.0
    2. 'nan' → logprob: -20.125
    3. 'math' → logprob: -20.125
    4. 'in' → logprob: -20.75
    5. '_inf' → logprob: -20.75
    6. '.inf' → logprob: -20.875
    7. '-inf' → logprob: -22.0
    8. 'Inf' → logprob: -22.0
    9. ' inf' → logprob: -22.25
    10. '

' → logprob: -22.625

Token 204: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.03203301131725311
    2. '')
' → logprob: -3.5320329666137695
    3. ')' → logprob: -6.1570329666137695
    4. '       ' → logprob: -8.90703296661377
    5. ')')
' → logprob: -11.90703296661377
    6. '')
' → logprob: -12.03203296661377
    7. ' ')' → logprob: -12.65703296661377
    8. ')
' → logprob: -12.78203296661377
    9. ' ')
' → logprob: -13.28203296661377
    10. '()' → logprob: -13.28203296661377

Token 205: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47580069303512573
    2. '       ' → logprob: -0.9758006930351257
    3. '        
' → logprob: -6.850800514221191
    4. '\n' → logprob: -8.350800514221191
    5. '    
' → logprob: -8.725800514221191
    6. '  
' → logprob: -9.600800514221191
    7. ')' → logprob: -9.725800514221191
    8. '   ' → logprob: -10.225800514221191
    9. ')
' → logprob: -10.600800514221191
    10. '
' → logprob: -10.975800514221191

Token 206: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.585422694683075
    2. '       ' → logprob: -0.835422694683075
    3. '        
' → logprob: -4.960422515869141
    4. ')' → logprob: -7.210422515869141
    5. '\n' → logprob: -7.210422515869141
    6. '    
' → logprob: -7.835422515869141
    7. ')
' → logprob: -8.83542251586914
    8. '
' → logprob: -9.71042251586914
    9. '   ' → logprob: -9.83542251586914
    10. '  
' → logprob: -9.83542251586914

Token 207: ' outside' (ID: 7539)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11332821846008301
    2. '0' → logprob: -2.363328218460083
    3. ' ' → logprob: -5.488327980041504
    4. '
' → logprob: -5.488327980041504
    5. ' raise' → logprob: -6.363327980041504
    6. ' return' → logprob: -6.863327980041504
    7. ' None' → logprob: -7.738327980041504
    8. '#' → logprob: -8.113327980041504
    9. '   ' → logprob: -8.363327980041504
    10. '        ' → logprob: -8.613327980041504

Token 208: ' flight' (ID: 15243)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.019726155325770378
    2. ' of' → logprob: -5.269726276397705
    3. 'the' → logprob: -5.519726276397705
    4. ' self' → logprob: -6.394726276397705
    5. ' bounds' → logprob: -6.394726276397705
    6. ' segment' → logprob: -6.394726276397705
    7. '<|end|>' → logprob: -6.644726276397705
    8. ' parab' → logprob: -6.769726276397705
    9. ' trajectory' → logprob: -6.894726276397705
    10. ' this' → logprob: -7.519726276397705

Token 209: ' segment' (ID: 14806)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011206917697563767
    2. '
' → logprob: -8.001120567321777
    3. ' return' → logprob: -8.251120567321777
    4. '        
' → logprob: -8.876120567321777
    5. ',' → logprob: -9.126120567321777
    6. ' or' → logprob: -9.751120567321777
    7. '   ' → logprob: -9.751120567321777
    8. ')' → logprob: -10.876120567321777
    9. 'return' → logprob: -11.251120567321777
    10. '0' → logprob: -11.626120567321777

Token 210: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005860412959009409
    2. '
' → logprob: -5.380860328674316
    3. '        
' → logprob: -6.880860328674316
    4. '    
' → logprob: -9.630860328674316
    5. ' return' → logprob: -10.505860328674316
    6. ',' → logprob: -10.505860328674316
    7. '  
' → logprob: -10.880860328674316
    8. ')' → logprob: -11.255860328674316
    9. 'return' → logprob: -11.255860328674316
    10. '   ' → logprob: -11.755860328674316

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009223767556250095
    2. '
' → logprob: -5.134223937988281
    3. '        
' → logprob: -5.884223937988281
    4. '  
' → logprob: -9.134223937988281
    5. '    
' → logprob: -9.134223937988281
    6. ')' → logprob: -9.634223937988281
    7. ' 
' → logprob: -9.884223937988281
    8. '\n' → logprob: -10.134223937988281
    9. ' return' → logprob: -10.759223937988281
    10. 'n' → logprob: -10.884223937988281

Token 212: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1915082931518555
    2. ' g' → logprob: -1.4415082931518555
    3. 'g' → logprob: -1.5665082931518555
    4. 'return' (adapté à ' return') → logprob: -2.4415082931518555
    5. ' return' → logprob: -2.9415082931518555
    6. 'a' → logprob: -3.1915082931518555
    7. ' a' → logprob: -3.9415082931518555
    8. '   ' → logprob: -3.9415082931518555
    9. ' y' → logprob: -4.8165082931518555
    10. 'h' → logprob: -5.5665082931518555

Token 213: ' -(' (ID: 66319)
  Prédit: ' -('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -(' → logprob: -0.7273070216178894
    2. '-(' → logprob: -1.3523070812225342
    3. ' -' → logprob: -1.6023070812225342
    4. '-' → logprob: -3.352307081222534
    5. ' self' → logprob: -4.727306842803955
    6. '-self' → logprob: -5.602306842803955
    7. '(-' → logprob: -6.227306842803955
    8. '(-(' → logprob: -6.227306842803955
    9. ' ' → logprob: -6.602306842803955
    10. ' (' → logprob: -6.852306842803955

Token 214: 'GR' (ID: 13905)
  Prédit: 'GR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'GR' → logprob: -0.0016510180430486798
    2. '(G' → logprob: -6.626650810241699
    3. ' GR' → logprob: -8.1266508102417
    4. '(' → logprob: -11.5016508102417
    5. 'G' → logprob: -12.1266508102417
    6. ' (' → logprob: -12.3766508102417
    7. '0' → logprob: -12.8766508102417
    8. '   ' → logprob: -13.5016508102417
    9. '_GR' → logprob: -13.6266508102417
    10. ' ' → logprob: -14.1266508102417

Token 215: 'AV' (ID: 5345)
  Prédit: 'AV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AV' → logprob: -7.896309739408025e-07
    2. 'avity' → logprob: -14.625000953674316
    3. 'A' → logprob: -16.0
    4. ' AV' → logprob: -17.0
    5. 'Av' → logprob: -17.875
    6. '_AV' → logprob: -18.125
    7. 'V' → logprob: -18.5
    8. 'AL' → logprob: -18.75
    9. '
' → logprob: -18.875
    10. 'ACITY' → logprob: -19.25

Token 216: 'ITY' (ID: 6161)
  Prédit: 'ITY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ITY' → logprob: 0.0
    2. 'IT' → logprob: -18.125
    3. 'ity' → logprob: -18.875
    4. ' ity' → logprob: -20.25
    5. '   ' → logprob: -21.375
    6. 'I' → logprob: -21.5
    7. 'ITI' → logprob: -21.75
    8. '__' → logprob: -21.75
    9. '\' → logprob: -22.0
    10. '_' → logprob: -22.125

Token 217: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.5071896910667419
    2. ' *' → logprob: -1.6321897506713867
    3. '/' → logprob: -2.3821897506713867
    4. '/(' → logprob: -2.3821897506713867
    5. '*' → logprob: -4.757189750671387
    6. ' /(' → logprob: -5.507189750671387
    7. ')' → logprob: -6.132189750671387
    8. '   ' → logprob: -6.882189750671387
    9. '*(' → logprob: -7.382189750671387
    10. ')/(' → logprob: -7.632189750671387

Token 218: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04862404614686966
    2. ' (' → logprob: -3.048624038696289
    3. '2' → logprob: -10.298624038696289
    4. ' ' → logprob: -13.298624038696289
    5. '   ' → logprob: -14.798624038696289
    6. '(
' → logprob: -14.923624038696289
    7. ')' → logprob: -15.048624038696289
    8. '  ' → logprob: -15.798624038696289
    9. '
' → logprob: -17.17362403869629
    10. ' (
' → logprob: -17.17362403869629

Token 219: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001566045917570591
    2. '(' → logprob: -6.626565933227539
    3. ' ' → logprob: -8.376565933227539
    4. ' (' → logprob: -12.251565933227539
    5. '   ' → logprob: -12.376565933227539
    6. '  ' → logprob: -14.376565933227539
    7. '    ' → logprob: -16.75156593322754
    8. '
' → logprob: -17.00156593322754
    9. '           ' → logprob: -17.00156593322754
    10. '     ' → logprob: -17.37656593322754

Token 220: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0006531051476486027
    2. '*self' → logprob: -8.125653266906738
    3. '*' → logprob: -8.250653266906738
    4. ' ' → logprob: -9.500653266906738
    5. ' self' → logprob: -11.625653266906738
    6. '   ' → logprob: -12.375653266906738
    7. 'self' → logprob: -13.000653266906738
    8. '    ' → logprob: -13.250653266906738
    9. '*(' → logprob: -13.500653266906738
    10. ')' → logprob: -14.250653266906738

Token 221: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.31188616156578064
    2. 'self' → logprob: -1.436886191368103
    3. '(self' → logprob: -3.5618860721588135
    4. ' (' → logprob: -6.311886310577393
    5. '(' → logprob: -10.686885833740234
    6. ' ' → logprob: -10.686885833740234
    7. '*self' → logprob: -11.311885833740234
    8. ')' → logprob: -12.686885833740234
    9. '	self' → logprob: -12.811885833740234
    10. '   ' → logprob: -13.436885833740234

Token 222: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.0012103531043976545
    2. 'vx' → logprob: -6.7512102127075195
    3. ' vx' → logprob: -10.25121021270752
    4. '.' → logprob: -13.37621021270752
    5. 'v' → logprob: -13.50121021270752
    6. ' .' → logprob: -13.62621021270752
    7. '*' → logprob: -15.62621021270752
    8. '*v' → logprob: -16.001211166381836
    9. 'VX' → logprob: -16.876211166381836
    10. '(v' → logprob: -16.876211166381836

Token 223: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.134509021649137e-05
    2. 'self' → logprob: -9.75006103515625
    3. '(self' → logprob: -13.87506103515625
    4. ' self' → logprob: -14.12506103515625
    5. '
' → logprob: -14.62506103515625
    6. '**' → logprob: -15.12506103515625
    7. '_x' → logprob: -15.87506103515625
    8. '   ' → logprob: -16.62506103515625
    9. '(' → logprob: -17.00006103515625
    10. 'el' → logprob: -17.37506103515625

Token 224: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0486329011619091
    2. ' **' → logprob: -3.048632860183716
    3. '*' → logprob: -10.298632621765137
    4. ' ' → logprob: -12.173632621765137
    5. '2' → logprob: -12.298632621765137
    6. ' *' → logprob: -13.548632621765137
    7. ' **)' → logprob: -15.673632621765137
    8. ')**' → logprob: -15.673632621765137
    9. ')' → logprob: -15.923632621765137
    10. '**)' → logprob: -16.423633575439453

Token 225: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014025058771949261
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -15.000140190124512
    4. '  ' → logprob: -17.625141143798828
    5. ')' → logprob: -17.875141143798828
    6. '     ' → logprob: -18.500141143798828
    7. '```' → logprob: -18.500141143798828
    8. '       ' → logprob: -18.750141143798828
    9. '    ' → logprob: -18.750141143798828
    10. '           ' → logprob: -19.000141143798828

Token 226: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.250051498413086
    4. '  ' → logprob: -19.375051498413086
    5. ')' → logprob: -19.375051498413086
    6. '```' → logprob: -20.250051498413086
    7. '²' → logprob: -20.500051498413086
    8. '۲' → logprob: -20.625051498413086
    9. '    ' → logprob: -20.687551498413086
    10. '
' → logprob: -20.687551498413086

Token 227: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007624607533216476
    2. ' ))' → logprob: -7.625762462615967
    3. ')' → logprob: -8.250761985778809
    4. '))*' → logprob: -11.500761985778809
    5. ' )' → logprob: -13.375761985778809
    6. '   ' → logprob: -13.750761985778809
    7. ' ' → logprob: -15.250761985778809
    8. '    ' → logprob: -16.000762939453125
    9. ')))' → logprob: -16.625762939453125
    10. '*))' → logprob: -16.875762939453125

Token 228: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -7.755678961984813e-05
    2. '*' → logprob: -9.500077247619629
    3. ' ' → logprob: -13.875077247619629
    4. ' x' → logprob: -14.000077247619629
    5. '*x' → logprob: -14.625077247619629
    6. ')' → logprob: -15.125077247619629
    7. '   ' → logprob: -16.750078201293945
    8. 'x' → logprob: -17.125078201293945
    9. ' ' → logprob: -17.875078201293945
    10. '    ' → logprob: -18.375078201293945

Token 229: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01417702715843916
    2. ' x' → logprob: -4.264176845550537
    3. '(x' → logprob: -11.264177322387695
    4. ' (' → logprob: -14.389177322387695
    5. '(' → logprob: -15.889177322387695
    6. '   ' → logprob: -17.139177322387695
    7. ' ' → logprob: -18.389177322387695
    8. '	x' → logprob: -18.389177322387695
    9. ')x' → logprob: -18.889177322387695
    10. '{x' → logprob: -20.139177322387695

Token 230: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0206720617134124e-05
    2. ' x' → logprob: -11.50001049041748
    3. ')x' → logprob: -19.000009536743164
    4. '   ' → logprob: -21.750009536743164
    5. '	x' → logprob: -22.250009536743164
    6. '(x' → logprob: -22.375009536743164
    7. '{x' → logprob: -23.500009536743164
    8. '"x' → logprob: -23.750009536743164
    9. ')' → logprob: -24.125009536743164
    10. '*x' → logprob: -24.125009536743164

Token 231: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.050272136926651
    2. ' **' → logprob: -3.050272226333618
    3. ')**' → logprob: -6.675271987915039
    4. ')' → logprob: -7.800271987915039
    5. '**)' → logprob: -12.675271987915039
    6. ' ' → logprob: -12.800271987915039
    7. ' )' → logprob: -12.925271987915039
    8. ' **)' → logprob: -13.300271987915039
    9. '   ' → logprob: -14.175271987915039
    10. '2' → logprob: -14.925271987915039

Token 232: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.4868770196917467e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -14.625024795532227
    4. '  ' → logprob: -17.250024795532227
    5. '۲' → logprob: -18.875024795532227
    6. '```' → logprob: -18.875024795532227
    7. '    ' → logprob: -19.750024795532227
    8. ')' → logprob: -19.750024795532227
    9. '     ' → logprob: -20.125024795532227
    10. '{' → logprob: -20.875024795532227

Token 233: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -16.12504005432129
    4. ')' → logprob: -16.50004005432129
    5. '۲' → logprob: -17.37504005432129
    6. '  ' → logprob: -17.75004005432129
    7. '²' → logprob: -17.87504005432129
    8. '{' → logprob: -18.12504005432129
    9. '```' → logprob: -18.37504005432129
    10. '
' → logprob: -19.12504005432129

Token 234: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007756813429296017
    2. ' )' → logprob: -7.7507758140563965
    3. ' +' → logprob: -8.250775337219238
    4. '+' → logprob: -9.625775337219238
    5. ')+' → logprob: -11.000775337219238
    6. ' ' → logprob: -15.000775337219238
    7. '）' → logprob: -15.500775337219238
    8. '   ' → logprob: -15.750775337219238
    9. ')+(' → logprob: -15.750775337219238
    10. '+)' → logprob: -16.000776290893555

Token 235: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10022101551294327
    2. '+' → logprob: -2.3502209186553955
    3. ' ' → logprob: -11.725220680236816
    4. ' plus' → logprob: -13.225220680236816
    5. '    ' → logprob: -13.600220680236816
    6. '        ' → logprob: -14.350220680236816
    7. ' +(' → logprob: -14.725220680236816
    8. '+(' → logprob: -14.850220680236816
    9. '   ' → logprob: -14.975220680236816
    10. '<|end|>' → logprob: -15.100220680236816

Token 236: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0006836029351688921
    2. '(' → logprob: -7.875683784484863
    3. '(self' → logprob: -8.375683784484863
    4. ' ' → logprob: -10.375683784484863
    5. '(s' → logprob: -10.500683784484863
    6. '(x' → logprob: -12.250683784484863
    7. '(space' → logprob: -12.625683784484863
    8. ' ((' → logprob: -12.875683784484863
    9. ' self' → logprob: -14.000683784484863
    10. '((' → logprob: -14.250683784484863

Token 237: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0028589628636837006
    2. ' self' → logprob: -5.877859115600586
    3. '(self' → logprob: -9.877859115600586
    4. ' ' → logprob: -13.502859115600586
    5. '	self' → logprob: -14.627859115600586
    6. '   ' → logprob: -14.752859115600586
    7. ' (' → logprob: -16.252859115600586
    8. '  ' → logprob: -16.377859115600586
    9. '[self' → logprob: -16.627859115600586
    10. '
' → logprob: -17.002859115600586

Token 238: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -5.478889215737581e-05
    2. '.' → logprob: -9.875054359436035
    3. '.y' → logprob: -13.375054359436035
    4. ' .' → logprob: -13.750054359436035
    5. ').' → logprob: -15.375054359436035
    6. ' ' → logprob: -15.625054359436035
    7. '`.' → logprob: -16.50005531311035
    8. '   ' → logprob: -17.25005531311035
    9. ''.' → logprob: -17.75005531311035
    10. '```' → logprob: -18.00005531311035

Token 239: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.1008713702030946e-06
    2. ' y' → logprob: -13.625001907348633
    3. '_y' → logprob: -15.250001907348633
    4. '	y' → logprob: -15.250001907348633
    5. '   ' → logprob: -16.000001907348633
    6. '.y' → logprob: -16.125001907348633
    7. 'vy' → logprob: -17.500001907348633
    8. 'yv' → logprob: -17.750001907348633
    9. '
' → logprob: -17.875001907348633
    10. '    ' → logprob: -18.125001907348633

Token 240: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.06262998282909393
    2. '/' → logprob: -2.8126299381256104
    3. ' *' → logprob: -7.4376301765441895
    4. ' ' → logprob: -10.687629699707031
    5. ')' → logprob: -11.062629699707031
    6. '/v' → logprob: -11.437629699707031
    7. '<|end|>' → logprob: -11.437629699707031
    8. '*' → logprob: -11.812629699707031
    9. ' /
' → logprob: -13.937629699707031
    10. '   ' → logprob: -14.187629699707031

Token 241: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.20153796672821045
    2. 'self' → logprob: -1.7015379667282104
    3. '<|end|>' → logprob: -9.7015380859375
    4. ' ' → logprob: -9.9515380859375
    5. '(self' → logprob: -12.3265380859375
    6. ')' → logprob: -12.3265380859375
    7. '	self' → logprob: -13.0765380859375
    8. '_self' → logprob: -13.4515380859375
    9. ' )' → logprob: -14.0765380859375
    10. ' (' → logprob: -14.7015380859375

Token 242: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.0016312669031322002
    2. '.x' → logprob: -6.501631259918213
    3. 'x' → logprob: -9.126631736755371
    4. '.' → logprob: -11.251631736755371
    5. 'v' → logprob: -12.626631736755371
    6. ' .' → logprob: -13.251631736755371
    7. 'vx' → logprob: -13.376631736755371
    8. ' ' → logprob: -15.751631736755371
    9. ').' → logprob: -16.251630783081055
    10. '.va' → logprob: -16.626630783081055

Token 243: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: 0.0
    2. ' x' → logprob: -21.375
    3. ' ' → logprob: -22.0
    4. ')x' → logprob: -22.375
    5. ''x' → logprob: -22.875
    6. '_x' → logprob: -22.875
    7. '   ' → logprob: -23.0
    8. 'х' → logprob: -23.625
    9. 'y' → logprob: -23.625
    10. ')' → logprob: -23.625

Token 244: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015684263780713081
    2. ' )' → logprob: -6.50156831741333
    3. ')*' → logprob: -10.001568794250488
    4. '*' → logprob: -11.001568794250488
    5. ' *' → logprob: -13.126568794250488
    6. '*)' → logprob: -13.251568794250488
    7. ' ' → logprob: -16.251567840576172
    8. ')
' → logprob: -17.001567840576172
    9. ' *)' → logprob: -17.126567840576172
    10. '```' → logprob: -17.501567840576172

Token 245: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0005657802103087306
    2. '*' → logprob: -8.125565528869629
    3. ' ' → logprob: -8.625565528869629
    4. ' x' → logprob: -9.375565528869629
    5. ' ' → logprob: -12.625565528869629
    6. ' _' → logprob: -14.500565528869629
    7. ')' → logprob: -14.500565528869629
    8. 'x' → logprob: -15.000565528869629
    9. ' **' → logprob: -15.500565528869629
    10. ' ×' → logprob: -16.500566482543945

Token 246: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5759411454200745
    2. 'x' → logprob: -0.8259411454200745
    3. '(x' → logprob: -13.70094108581543
    4. ' ' → logprob: -15.32594108581543
    5. '	x' → logprob: -16.07594108581543
    6. '<|end|>' → logprob: -16.82594108581543
    7. ')x' → logprob: -16.95094108581543
    8. '(' → logprob: -17.07594108581543
    9. ' (' → logprob: -17.20094108581543
    10. '{x' → logprob: -19.32594108581543

Token 247: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 248: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 249: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20977991819381714
    2. '<|end|>' → logprob: -1.834779977798462
    3. 'class' → logprob: -5.084779739379883
    4. '#' → logprob: -5.459779739379883
    5. '\n' → logprob: -5.584779739379883
    6. '   ' → logprob: -5.709779739379883
    7. '

' → logprob: -5.959779739379883
    8. ' ' → logprob: -6.084779739379883
    9. '<|end|>' → logprob: -6.709779739379883
    10. '```' → logprob: -6.834779739379883

Token 250: ' is' (ID: 382)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3011154532432556
    2. ' time' → logprob: -2.1761155128479004
    3. ' total' → logprob: -3.1761155128479004
    4. 'max' → logprob: -3.5511155128479004
    5. ' maximum' → logprob: -3.6761155128479004
    6. ' range' → logprob: -4.1761155128479
    7. ' flight' → logprob: -5.5511155128479
    8. ' landing' → logprob: -5.5511155128479
    9. 'time' → logprob: -5.6761155128479
    10. ' end' → logprob: -6.0511155128479

Token 251: '_clear' (ID: 51408)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0782288312911987
    2. '_valid' → logprob: -1.3282288312911987
    3. '_flat' → logprob: -2.0782289505004883
    4. '_complete' → logprob: -2.8282289505004883
    5. '_finished' → logprob: -3.0782289505004883
    6. '_in' → logprob: -3.4532289505004883
    7. '_ground' → logprob: -3.8282289505004883
    8. '_inside' → logprob: -3.9532289505004883
    9. '_point' → logprob: -4.953228950500488
    10. '_at' → logprob: -5.078228950500488

Token 252: '_of' (ID: 8023)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0744918584823608
    2. '_of' → logprob: -1.3244918584823608
    3. '_path' → logprob: -1.4494918584823608
    4. '(' → logprob: -2.9494919776916504
    5. 'ance' → logprob: -2.9494919776916504
    6. '_at' → logprob: -3.8244919776916504
    7. '_clear' → logprob: -4.57449197769165
    8. '()' → logprob: -4.94949197769165
    9. '_' → logprob: -5.44949197769165
    10. '_ob' → logprob: -5.82449197769165

Token 253: '_ob' (ID: 46416)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08998469263315201
    2. '_ob' → logprob: -2.964984655380249
    3. '_ground' → logprob: -4.089984893798828
    4. 'ob' → logprob: -5.214984893798828
    5. '_target' → logprob: -5.714984893798828
    6. '(' → logprob: -6.089984893798828
    7. 'ground' → logprob: -6.839984893798828
    8. '(ob' → logprob: -7.339984893798828
    9. '(int' → logprob: -7.464984893798828
    10. 'self' → logprob: -7.464984893798828

Token 254: 'stacle' (ID: 69123)
  Prédit: 'stacle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stacle' → logprob: -0.08263297379016876
    2. 'stacles' → logprob: -2.7076330184936523
    3. 'struction' → logprob: -4.457633018493652
    4. 'st' → logprob: -7.457633018493652
    5. 'structions' → logprob: -8.082633018493652
    6. 'stance' → logprob: -10.332633018493652
    7. 'ject' → logprob: -10.957633018493652
    8. 'stal' → logprob: -11.707633018493652
    9. 'stack' → logprob: -12.082633018493652
    10. '

' → logprob: -12.082633018493652

Token 255: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.641376256942749
    2. '(' → logprob: -0.766376256942749
    3. ' (' → logprob: -4.766376495361328
    4. '_at' → logprob: -9.016376495361328
    5. '_' → logprob: -9.891376495361328
    6. '_(' → logprob: -11.266376495361328
    7. ' ' → logprob: -11.391376495361328
    8. '(x' → logprob: -12.391376495361328
    9. '(
' → logprob: -12.391376495361328
    10. '(s' → logprob: -12.391376495361328

Token 256: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6138701438903809
    2. ',' → logprob: -0.8638701438903809
    3. 'self' → logprob: -3.613870143890381
    4. ' ,' → logprob: -5.488870143890381
    5. ',self' → logprob: -5.863870143890381
    6. ')(' → logprob: -7.113870143890381
    7. '(' → logprob: -7.363870143890381
    8. ')' → logprob: -7.488870143890381
    9. '_at' → logprob: -7.863870143890381
    10. ' (' → logprob: -8.363870620727539

Token 257: ' obstacles' (ID: 46430)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.49784934520721436
    2. ' self' → logprob: -1.2478493452072144
    3. 'ob' → logprob: -2.872849464416504
    4. ' obstacle' → logprob: -3.122849464416504
    5. 'x' → logprob: -6.247849464416504
    6. ' x' → logprob: -7.122849464416504
    7. ' obstacles' → logprob: -7.247849464416504
    8. ' ob' → logprob: -7.872849464416504
    9. '   ' → logprob: -8.997849464416504
    10. ')' → logprob: -8.997849464416504

Token 258: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008111552335321903
    2. ',' → logprob: -5.008111476898193
    3. ')' → logprob: -7.383111476898193
    4. '):' → logprob: -7.883111476898193
    5. ' :' → logprob: -8.508111953735352
    6. ' ,' → logprob: -9.008111953735352
    7. ' )' → logprob: -10.508111953735352
    8. ':list' → logprob: -11.258111953735352
    9. '):
' → logprob: -11.883111953735352
    10. '[' → logprob: -11.883111953735352

Token 259: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.03841496258974075
    2. ' List' → logprob: -3.28841495513916
    3. ')' → logprob: -8.66341495513916
    4. '[List' → logprob: -8.66341495513916
    5. 'list' → logprob: -11.03841495513916
    6. 'float' → logprob: -12.91341495513916
    7. '	List' → logprob: -13.16341495513916
    8. ' list' → logprob: -13.66341495513916
    9. ',List' → logprob: -14.03841495513916
    10. ',' → logprob: -14.28841495513916

Token 260: '['' (ID: 1181)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002502771094441414
    2. '[List' → logprob: -6.377502918243408
    3. '[int' → logprob: -7.502502918243408
    4. ')' → logprob: -8.62750244140625
    5. '):' → logprob: -11.12750244140625
    6. ' [' → logprob: -11.75250244140625
    7. ',' → logprob: -12.12750244140625
    8. ':' → logprob: -12.25250244140625
    9. '[
' → logprob: -12.25250244140625
    10. '   ' → logprob: -12.50250244140625

Token 261: 'Obstacle' (ID: 134296)
  Prédit: 'Par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Par' → logprob: -0.018412012606859207
    2. 'float' → logprob: -4.268412113189697
    3. 'Obstacle' → logprob: -6.268412113189697
    4. 'Tuple' → logprob: -6.768412113189697
    5. 'Rectangle' → logprob: -7.893412113189697
    6. 'Ob' → logprob: -8.518411636352539
    7. ' Par' → logprob: -9.018411636352539
    8. 'Rect' → logprob: -9.393411636352539
    9. 'A' → logprob: -9.643411636352539
    10. 'Bounding' → logprob: -9.768411636352539

Token 262: ''])' (ID: 11775)
  Prédit: ''])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''])' → logprob: -0.12957905232906342
    2. '',' → logprob: -2.6295790672302246
    3. ''],' → logprob: -3.3795790672302246
    4. '']' → logprob: -4.504579067230225
    5. ')' → logprob: -6.379579067230225
    6. '])' → logprob: -7.379579067230225
    7. ',' → logprob: -7.504579067230225
    8. '']):
' → logprob: -7.629579067230225
    9. ''' → logprob: -8.004578590393066
    10. '')' → logprob: -8.754578590393066

Token 263: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003987927455455065
    2. ':' → logprob: -6.003987789154053
    3. '(' → logprob: -7.003987789154053
    4. ',' → logprob: -8.753988265991211
    5. '       ' → logprob: -8.753988265991211
    6. ' (' → logprob: -9.503988265991211
    7. ')' → logprob: -9.753988265991211
    8. '   ' → logprob: -10.003988265991211
    9. 'self' → logprob: -10.253988265991211
    10. ' ->' → logprob: -10.378988265991211

Token 264: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.20161721110343933
    2. ' bool' → logprob: -1.7016172409057617
    3. ' all' → logprob: -9.451617240905762
    4. 'True' → logprob: -10.076617240905762
    5. 'all' → logprob: -10.701617240905762
    6. ')' → logprob: -11.326617240905762
    7. '   ' → logprob: -11.326617240905762
    8. ' ' → logprob: -11.451617240905762
    9. ' True' → logprob: -11.576617240905762
    10. '	bool' → logprob: -12.576617240905762

Token 265: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024594606831669807
    2. '(self' → logprob: -4.274594783782959
    3. '(' → logprob: -4.649594783782959
    4. ',' → logprob: -8.6495943069458
    5. ':
' → logprob: -8.6495943069458
    6. '):' → logprob: -9.0245943069458
    7. '   ' → logprob: -9.3995943069458
    8. 'self' → logprob: -9.7745943069458
    9. '(
' → logprob: -10.1495943069458
    10. ')' → logprob: -10.6495943069458

Token 266: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47409185767173767
    2. '       ' → logprob: -1.34909188747406
    3. '(' → logprob: -3.4740917682647705
    4. '<|end|>' → logprob: -3.4740917682647705
    5. '    ' → logprob: -3.5990917682647705
    6. ' ' → logprob: -4.47409200668335
    7. '   ' → logprob: -4.72409200668335
    8. ' :' → logprob: -5.97409200668335
    9. ' (' → logprob: -7.09909200668335
    10. ')' → logprob: -7.09909200668335

Token 267: ' """' (ID: 9280)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.410491943359375
    2. ' for' → logprob: -1.160491943359375
    3. 'for' → logprob: -3.785491943359375
    4. ' step' → logprob: -8.410491943359375
    5. ' x' → logprob: -8.660491943359375
    6. 'x' → logprob: -9.285491943359375
    7. '   ' → logprob: -9.910491943359375
    8. 'step' → logprob: -10.285491943359375
    9. ' steps' → logprob: -11.410491943359375
    10. 'steps' → logprob: -11.660491943359375

Token 268: 'Check' (ID: 4383)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009450533543713391
    2. ' for' → logprob: -7.000945091247559
    3. '   ' → logprob: -10.625945091247559
    4. '       ' → logprob: -12.375945091247559
    5. 'step' → logprob: -13.500945091247559
    6. 'def' → logprob: -13.750945091247559
    7. 'return' → logprob: -14.625945091247559
    8. 'x' → logprob: -14.625945091247559
    9. 'For' → logprob: -15.000945091247559
    10. '"""' → logprob: -15.000945091247559

Token 269: ' trajectory' (ID: 70764)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20380009710788727
    2. '<|end|>' → logprob: -2.4538002014160156
    3. ' if' → logprob: -3.0788002014160156
    4. ' for' → logprob: -3.4538002014160156
    5. ' that' → logprob: -5.453800201416016
    6. '    ' → logprob: -5.453800201416016
    7. '        ' → logprob: -5.828800201416016
    8. '       ' → logprob: -6.203800201416016
    9. 'for' → logprob: -6.328800201416016
    10. '  ' → logprob: -6.953800201416016

Token 270: ' does' (ID: 2226)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.29270145297050476
    2. ' for' → logprob: -1.9177014827728271
    3. ' at' → logprob: -3.542701482772827
    4. '   ' → logprob: -3.667701482772827
    5. '<|end|>' → logprob: -4.167701244354248
    6. '       ' → logprob: -4.667701244354248
    7. '    ' → logprob: -4.667701244354248
    8. ' that' → logprob: -5.417701244354248
    9. ' whether' → logprob: -5.667701244354248
    10. ' ' → logprob: -5.917701244354248

Token 271: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07002434879541397
    2. 'not' → logprob: -2.695024251937866
    3. 'n't' → logprob: -9.695024490356445
    4. ' all' → logprob: -11.070024490356445
    5. '   ' → logprob: -12.695024490356445
    6. '    ' → logprob: -13.320024490356445
    7. '_not' → logprob: -13.570024490356445
    8. 'n' → logprob: -13.820024490356445
    9. ' ' → logprob: -14.320024490356445
    10. 's' → logprob: -14.445024490356445

Token 272: ' hit' (ID: 7103)
  Prédit: ' intersect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intersect' → logprob: -0.6017649173736572
    2. ' collide' → logprob: -1.2267649173736572
    3. ' pass' → logprob: -2.8517649173736572
    4. ' hit' → logprob: -2.8517649173736572
    5. 'inter' → logprob: -4.226764678955078
    6. 'hit' → logprob: -4.601764678955078
    7. ' cross' → logprob: -5.851764678955078
    8. 'pass' → logprob: -5.851764678955078
    9. ' encounter' → logprob: -5.851764678955078
    10. ' have' → logprob: -5.976764678955078

Token 273: ' obstacles' (ID: 46430)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.0024875495582818985
    2. ' obstacles' → logprob: -6.502487659454346
    3. ' an' → logprob: -7.252487659454346
    4. ' the' → logprob: -8.627487182617188
    5. 'any' → logprob: -9.877487182617188
    6. ' for' → logprob: -11.627487182617188
    7. '<|end|>' → logprob: -11.627487182617188
    8. ' a' → logprob: -11.877487182617188
    9. ' obstacle' → logprob: -12.752487182617188
    10. ')' → logprob: -12.877487182617188

Token 274: ' in' (ID: 306)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.0463460683822632
    2. '.' → logprob: -1.2963460683822632
    3. ' for' → logprob: -1.2963460683822632
    4. '       ' → logprob: -3.1713461875915527
    5. '   ' → logprob: -3.2963461875915527
    6. ',' → logprob: -4.421346187591553
    7. ':' → logprob: -5.421346187591553
    8. ' throughout' → logprob: -6.296346187591553
    9. '<|end|>' → logprob: -7.046346187591553
    10. ' in' → logprob: -7.171346187591553

Token 275: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.765342652797699
    2. ' obstacles' → logprob: -1.3903427124023438
    3. 'ob' → logprob: -1.7653427124023438
    4. ' range' → logprob: -2.5153427124023438
    5. 'self' → logprob: -3.7653427124023438
    6. ')' → logprob: -5.140342712402344
    7. 'the' → logprob: -6.640342712402344
    8. ' ob' → logprob: -7.015342712402344
    9. ' the' → logprob: -7.140342712402344
    10. '   ' → logprob: -8.140342712402344

Token 276: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00047607114538550377
    2. ' ' → logprob: -7.875475883483887
    3. '   ' → logprob: -10.250475883483887
    4. ')' → logprob: -10.250475883483887
    5. 'self' → logprob: -12.000475883483887
    6. '       ' → logprob: -12.375475883483887
    7. ']' → logprob: -13.125475883483887
    8. '[' → logprob: -13.250475883483887
    9. 'x' → logprob: -13.437975883483887
    10. '(' → logprob: -13.437975883483887

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001221178681589663
    2. 'self' → logprob: -7.501221179962158
    3. ' ,' → logprob: -7.876221179962158
    4. ',self' → logprob: -8.251220703125
    5. '.' → logprob: -11.626220703125
    6. ' self' → logprob: -12.126220703125
    7. '..' → logprob: -12.501220703125
    8. ':self' → logprob: -13.251220703125
    9. ',
' → logprob: -13.626220703125
    10. ':' → logprob: -14.751220703125

Token 278: ' l' (ID: 305)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011054662987589836
    2. ' self' → logprob: -4.511054515838623
    3. '       ' → logprob: -12.136054992675781
    4. '   ' → logprob: -14.261054992675781
    5. '	self' → logprob: -14.511054992675781
    6. '(self' → logprob: -16.51105499267578
    7. ' ' → logprob: -16.76105499267578
    8. '[self' → logprob: -17.38605499267578
    9. '$self' → logprob: -17.51105499267578
    10. '    ' → logprob: -17.63605499267578

Token 279: '].' (ID: 1651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007920678704977036
    2. '].' → logprob: -5.132920742034912
    3. ']:' → logprob: -6.382920742034912
    4. ' ]' → logprob: -8.632920265197754
    5. ')' → logprob: -9.382920265197754
    6. '],' → logprob: -12.007920265197754
    7. ']:
' → logprob: -12.382920265197754
    8. '   ' → logprob: -12.507920265197754
    9. '.' → logprob: -12.882920265197754
    10. '):' → logprob: -13.007920265197754

Token 280: '"""
' (ID: 15611)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8294084668159485
    2. '   ' → logprob: -1.0794084072113037
    3. ' for' → logprob: -1.7044084072113037
    4. ' x' → logprob: -3.9544084072113037
    5. '    ' → logprob: -4.329408645629883
    6. 'x' → logprob: -6.204408645629883
    7. '\t' → logprob: -6.954408645629883
    8. ' ' → logprob: -7.079408645629883
    9. 'for' → logprob: -7.204408645629883
    10. ' 
' → logprob: -7.454408645629883

Token 282: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.012330691330134869
    2. 'step' → logprob: -4.637330532073975
    3. 'steps' → logprob: -6.637330532073975
    4. '       ' → logprob: -7.137330532073975
    5. ' for' → logprob: -8.512331008911133
    6. 'x' → logprob: -8.887331008911133
    7. '   ' → logprob: -9.512331008911133
    8. 'check' → logprob: -11.262331008911133
    9. 'def' → logprob: -11.887331008911133
    10. 'dx' → logprob: -12.137331008911133

Token 283: ' obs' (ID: 24339)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.469641774892807
    2. 'x' → logprob: -1.4696418046951294
    3. 'obs' → logprob: -2.21964168548584
    4. ' obstacle' → logprob: -3.71964168548584
    5. ' x' → logprob: -4.96964168548584
    6. ' obs' → logprob: -5.84464168548584
    7. 'dist' → logprob: -7.34464168548584
    8. 'step' → logprob: -8.21964168548584
    9. 'i' → logprob: -8.46964168548584
    10. 'distance' → logprob: -8.71964168548584

Token 284: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2865544855594635
    2. 't' → logprob: -1.4115544557571411
    3. 'stacle' → logprob: -5.786554336547852
    4. 'acle' → logprob: -6.411554336547852
    5. 'in' → logprob: -8.536554336547852
    6. 'ule' → logprob: -9.536554336547852
    7. 'tle' → logprob: -9.786554336547852
    8. 'ulate' → logprob: -9.786554336547852
    9. '```' → logprob: -10.286554336547852
    10. 'ult' → logprob: -10.411554336547852

Token 285: ' obstacles' (ID: 46430)
  Prédit: ' obstacles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obstacles' → logprob: -0.030124396085739136
    2. 'ob' → logprob: -3.5301244258880615
    3. ' ob' → logprob: -8.53012466430664
    4. '	ob' → logprob: -10.40512466430664
    5. ' obstáculos' → logprob: -10.53012466430664
    6. ')' → logprob: -10.78012466430664
    7. '(ob' → logprob: -10.78012466430664
    8. ' obstacle' → logprob: -11.28012466430664
    9. ' obst' → logprob: -11.40512466430664
    10. ' ' → logprob: -11.78012466430664

Token 286: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.281350314617157
    2. ':
' → logprob: -1.4063503742218018
    3. '       ' → logprob: -9.781350135803223
    4. '):
' → logprob: -9.906350135803223
    5. ',' → logprob: -10.406350135803223
    6. ' :' → logprob: -11.031350135803223
    7. ' :
' → logprob: -11.156350135803223
    8. '<|end|>' → logprob: -11.781350135803223
    9. ':

' → logprob: -11.906350135803223
    10. ':
' → logprob: -12.406350135803223

Token 287: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012509774416685104
    2. '       ' → logprob: -4.762509822845459
    3. '
' → logprob: -6.137509822845459
    4. '	       ' → logprob: -7.262509822845459
    5. '	   ' → logprob: -8.3875093460083
    6. ' if' → logprob: -8.6375093460083
    7. '   ' → logprob: -9.0125093460083
    8. ':
' → logprob: -9.3875093460083
    9. '		' → logprob: -9.6375093460083
    10. ':' → logprob: -9.8875093460083

Token 288: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.9649404883384705
    2. ' if' → logprob: -1.3399405479431152
    3. 'for' → logprob: -1.8399405479431152
    4. 'x' → logprob: -2.3399405479431152
    5. '           ' → logprob: -2.9649405479431152
    6. ' for' → logprob: -3.3399405479431152
    7. ' x' → logprob: -4.714940547943115
    8. 'step' → logprob: -6.964940547943115
    9. 'import' → logprob: -7.089940547943115
    10. ' ' → logprob: -7.089940547943115

Token 289: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.749839186668396
    2. 'obs' → logprob: -0.749839186668396
    3. ' obs' → logprob: -3.1248393058776855
    4. ' ' → logprob: -4.7498393058776855
    5. 'self' → logprob: -6.3748393058776855
    6. 'ob' → logprob: -8.624838829040527
    7. ' self' → logprob: -8.624838829040527
    8. '(obs' → logprob: -8.874838829040527
    9. 'any' → logprob: -9.562338829040527
    10. 'abs' → logprob: -10.249838829040527

Token 290: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08980229496955872
    2. 'obs' → logprob: -2.4648022651672363
    3. 'self' → logprob: -8.589802742004395
    4. 'not' → logprob: -8.839802742004395
    5. '(obs' → logprob: -9.214802742004395
    6. ' ' → logprob: -9.339802742004395
    7. 'ob' → logprob: -9.464802742004395
    8. ' obs' → logprob: -9.464802742004395
    9. 'abs' → logprob: -10.152302742004395
    10. '(' → logprob: -10.152302742004395

Token 291: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.020606936886906624
    2. '<=' → logprob: -3.8956069946289062
    3. ' <' → logprob: -9.895606994628906
    4. '.' → logprob: -11.895606994628906
    5. ' ' → logprob: -12.520606994628906
    6. ')<=' → logprob: -13.895606994628906
    7. '<' → logprob: -14.020606994628906
    8. ' ≤' → logprob: -14.270606994628906
    9. '<|end|>' → logprob: -14.270606994628906
    10. '0' → logprob: -15.520606994628906

Token 292: ' obs' (ID: 24339)
  Prédit: 'obs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'obs' → logprob: -0.0032253677491098642
    2. ' obs' → logprob: -5.753225326538086
    3. '=' → logprob: -10.878225326538086
    4. '.obs' → logprob: -11.378225326538086
    5. '(obs' → logprob: -11.878225326538086
    6. 'self' → logprob: -12.378225326538086
    7. '_obs' → logprob: -12.753225326538086
    8. 'Obs' → logprob: -14.753225326538086
    9. '
' → logprob: -14.753225326538086
    10. 'ob' → logprob: -15.253225326538086

Token 293: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.1516890972852707
    2. '.x' → logprob: -2.026689052581787
    3. '.left' → logprob: -5.526689052581787
    4. '.pos' → logprob: -6.026689052581787
    5. '.start' → logprob: -6.401689052581787
    6. '.l' → logprob: -8.151689529418945
    7. '.distance' → logprob: -8.276689529418945
    8. '.location' → logprob: -9.151689529418945
    9. '.center' → logprob: -9.901689529418945
    10. 'x' → logprob: -10.151689529418945

Token 294: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.014301019720733166
    2. ' <' → logprob: -4.26430082321167
    3. 'and' → logprob: -9.264301300048828
    4. ' and' → logprob: -10.264301300048828
    5. '<=' → logprob: -12.139301300048828
    6. '<|end|>' → logprob: -14.264301300048828
    7. ' ' → logprob: -14.639301300048828
    8. ' <=' → logprob: -14.764301300048828
    9. '()<' → logprob: -15.389301300048828
    10. '<
' → logprob: -15.639301300048828

Token 295: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0036161087919026613
    2. ' self' → logprob: -5.8786163330078125
    3. '=self' → logprob: -7.1286163330078125
    4. '=' → logprob: -11.753616333007812
    5. '	self' → logprob: -15.003616333007812
    6. '           ' → logprob: -15.128616333007812
    7. '(self' → logprob: -15.628616333007812
    8. '+self' → logprob: -15.628616333007812
    9. '[self' → logprob: -16.003616333007812
    10. '_self' → logprob: -16.878616333007812

Token 296: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -5.12127808178775e-05
    2. 'l' → logprob: -10.375051498413086
    3. '.' → logprob: -10.875051498413086
    4. ' .' → logprob: -14.000051498413086
    5. ' l' → logprob: -17.625051498413086
    6. '	l' → logprob: -17.625051498413086
    7. '·l' → logprob: -17.875051498413086
    8. '_l' → logprob: -18.000051498413086
    9. '   ' → logprob: -18.125051498413086
    10. ').' → logprob: -18.125051498413086

Token 297: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.017694225534796715
    2. ':
' → logprob: -4.767693996429443
    3. ':' → logprob: -5.392693996429443
    4. 'and' → logprob: -5.517693996429443
    5. '           ' → logprob: -7.767693996429443
    6. ' ' → logprob: -10.642694473266602
    7. ' :
' → logprob: -11.767694473266602
    8. ' :' → logprob: -12.267694473266602
    9. '               ' → logprob: -12.392694473266602
    10. '       ' → logprob: -12.642694473266602

Token 298: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03616223856806755
    2. '               ' → logprob: -3.4111621379852295
    3. ' if' → logprob: -7.286162376403809
    4. ' and' → logprob: -7.661162376403809
    5. ' ' → logprob: -8.161162376403809
    6. ' at' → logprob: -8.411162376403809
    7. '<|end|>' → logprob: -8.411162376403809
    8. ',' → logprob: -8.786162376403809
    9. '       ' → logprob: -9.411162376403809
    10. '	       ' → logprob: -9.536162376403809

Token 299: ' h' (ID: 312)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9836280345916748
    2. ' if' → logprob: -1.3586280345916748
    3. 'height' → logprob: -1.7336280345916748
    4. 'if' → logprob: -2.358628034591675
    5. ' y' → logprob: -3.608628034591675
    6. 'y' → logprob: -3.983628034591675
    7. ' height' → logprob: -4.108628273010254
    8. '                   ' → logprob: -4.608628273010254
    9. 'x' → logprob: -4.733628273010254
    10. ' x' → logprob: -4.983628273010254

Token 300: ' =' (ID: 314)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.327226459980011
    2. ' =' → logprob: -1.9522264003753662
    3. 't' → logprob: -2.202226400375366
    4. 'e' → logprob: -4.327226638793945
    5. '=' → logprob: -5.202226638793945
    6. '_t' → logprob: -5.327226638793945
    7. 'eight' → logprob: -7.452226638793945
    8. '_e' → logprob: -7.702226638793945
    9. '_obs' → logprob: -7.702226638793945
    10. 'at' → logprob: -8.327226638793945

Token 301: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018154270946979523
    2. ' self' → logprob: -4.018154144287109
    3. '               ' → logprob: -12.51815414428711
    4. '           ' → logprob: -14.64315414428711
    5. '                   ' → logprob: -15.64315414428711
    6. '(self' → logprob: -15.89315414428711
    7. '	self' → logprob: -17.39315414428711
    8. ' ' → logprob: -18.26815414428711
    9. '=self' → logprob: -19.01815414428711
    10. '
' → logprob: -19.26815414428711

Token 302: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.00043138445471413434
    2. 'height' → logprob: -7.750431537628174
    3. ' height' → logprob: -15.000431060791016
    4. '.' → logprob: -15.000431060791016
    5. ' .' → logprob: -15.875431060791016
    6. '	height' → logprob: -18.250431060791016
    7. ',height' → logprob: -18.875431060791016
    8. '.he' → logprob: -19.375431060791016
    9. ';height' → logprob: -19.500431060791016
    10. '   ' → logprob: -19.875431060791016

Token 303: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: 0.0
    2. 'at' → logprob: -16.875
    3. '_' → logprob: -18.5
    4. '	at' → logprob: -18.75
    5. '_a' → logprob: -19.125
    6. 'At' → logprob: -19.625
    7. '   ' → logprob: -19.75
    8. ' at' → logprob: -19.875
    9. 's' → logprob: -20.0
    10. '_AT' → logprob: -20.375

Token 304: '(obs' (ID: 151514)
  Prédit: '(obs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(obs' → logprob: -9.722539834911004e-05
    2. 'obs' → logprob: -9.250097274780273
    3. '(' → logprob: -14.500097274780273
    4. ' obs' → logprob: -14.750097274780273
    5. '(abs' → logprob: -16.250097274780273
    6. '(ob' → logprob: -16.500097274780273
    7. ' (' → logprob: -17.375097274780273
    8. '.obs' → logprob: -18.750097274780273
    9. '_obs' → logprob: -19.000097274780273
    10. '(
' → logprob: -19.125097274780273

Token 305: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.0001984146365430206
    2. 'position' → logprob: -8.625198364257812
    3. '(position' → logprob: -11.000198364257812
    4. ' .' → logprob: -14.125198364257812
    5. '.' → logprob: -14.375198364257812
    6. 'osition' → logprob: -15.250198364257812
    7. ' position' → logprob: -15.250198364257812
    8. ')' → logprob: -15.750198364257812
    9. '	position' → logprob: -16.125198364257812
    10. '[position' → logprob: -16.875198364257812

Token 306: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5029390454292297
    2. ')
' → logprob: -1.002938985824585
    3. ' )
' → logprob: -4.377939224243164
    4. '               ' → logprob: -4.752939224243164
    5. ' )' → logprob: -5.127939224243164
    6. '<|end|>' → logprob: -7.502939224243164
    7. '                ' → logprob: -8.502939224243164
    8. '
' → logprob: -9.127939224243164
    9. '):
' → logprob: -9.127939224243164
    10. '           ' → logprob: -9.502939224243164

Token 307: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00373784895054996
    2. '           ' → logprob: -5.628737926483154
    3. ' if' → logprob: -9.503737449645996
    4. '<|end|>' → logprob: -10.753737449645996
    5. 'if' → logprob: -10.878737449645996
    6. '       ' → logprob: -11.753737449645996
    7. ' ' → logprob: -13.003737449645996
    8. '			' → logprob: -13.128737449645996
    9. '                   ' → logprob: -13.378737449645996
    10. '	           ' → logprob: -13.503737449645996

Token 308: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6695275902748108
    2. 'if' (adapté à ' if') → logprob: -0.9195275902748108
    3. '               ' → logprob: -2.419527530670166
    4. '           ' → logprob: -8.044528007507324
    5. 'If' → logprob: -10.669528007507324
    6. ' ' → logprob: -10.919528007507324
    7. '              ' → logprob: -12.044528007507324
    8. '	if' → logprob: -13.044528007507324
    9. '                
' → logprob: -13.419528007507324
    10. '                   ' → logprob: -13.544528007507324

Token 309: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.42870765924453735
    2. ' h' → logprob: -1.0537075996398926
    3. ' obs' → logprob: -12.67870807647705
    4. 'obs' → logprob: -13.30370807647705
    5. '<h' → logprob: -14.42870807647705
    6. '	h' → logprob: -14.67870807647705
    7. ' ' → logprob: -15.17870807647705
    8. ' not' → logprob: -15.67870807647705
    9. ' ' → logprob: -15.80370807647705
    10. 'not' → logprob: -16.428707122802734

Token 310: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5769827961921692
    2. ' <=' → logprob: -0.8269827961921692
    3. ' <' → logprob: -7.0769829750061035
    4. '<' → logprob: -8.576982498168945
    5. ')<=' → logprob: -12.576982498168945
    6. '<|end|>' → logprob: -12.576982498168945
    7. ']<=' → logprob: -14.326982498168945
    8. '≤' → logprob: -14.576982498168945
    9. ' ' → logprob: -14.701982498168945
    10. ' ≤' → logprob: -15.326982498168945

Token 311: ' obs' (ID: 24339)
  Prédit: 'obs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'obs' → logprob: -0.6931517124176025
    2. ' obs' → logprob: -0.6931517124176025
    3. 'ob' → logprob: -13.568151473999023
    4. '(obs' → logprob: -13.943151473999023
    5. '0' → logprob: -14.318151473999023
    6. '_obs' → logprob: -14.443151473999023
    7. '.obs' → logprob: -14.443151473999023
    8. '
' → logprob: -15.068151473999023
    9. 'Obs' → logprob: -16.318151473999023
    10. ' obstacles' → logprob: -16.443151473999023

Token 312: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.0022391125094145536
    2. 'height' → logprob: -6.377239227294922
    3. '.' → logprob: -7.627239227294922
    4. '_height' → logprob: -10.752239227294922
    5. ' height' → logprob: -11.252239227294922
    6. '.width' → logprob: -13.127239227294922
    7. ' .' → logprob: -13.377239227294922
    8. '	height' → logprob: -13.377239227294922
    9. '.size' → logprob: -13.752239227294922
    10. '.he' → logprob: -13.877239227294922

Token 313: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07513759285211563
    2. ':
' → logprob: -3.2001376152038574
    3. ' +' → logprob: -3.8251376152038574
    4. '+' → logprob: -5.325137615203857
    5. ' :' → logprob: -5.825137615203857
    6. ' or' → logprob: -7.325137615203857
    7. ' :
' → logprob: -7.825137615203857
    8. '):' → logprob: -8.5751371383667
    9. ':return' → logprob: -8.7001371383667
    10. '+:' → logprob: -9.3251371383667

Token 314: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1577889323234558
    2. '0' → logprob: -2.2827889919281006
    3. ' ' → logprob: -3.1577889919281006
    4. '-' → logprob: -7.5327887535095215
    5. 'sys' → logprob: -8.15778923034668
    6. 'obs' → logprob: -8.40778923034668
    7. 'eps' → logprob: -9.03278923034668
    8. '   ' → logprob: -9.90778923034668
    9. ' sys' → logprob: -10.28278923034668
    10. 'EPS' → logprob: -10.28278923034668

Token 315: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0391281396150589
    2. '0' → logprob: -3.289128065109253
    3. ' ' → logprob: -7.539128303527832
    4. 'sys' → logprob: -8.164128303527832
    5. '-' → logprob: -8.789128303527832
    6. 'eps' → logprob: -10.289128303527832
    7. 'obs' → logprob: -10.914128303527832
    8. 'EPS' → logprob: -10.914128303527832
    9. '   ' → logprob: -11.789128303527832
    10. '10' → logprob: -11.914128303527832

Token 316: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0007297091069631279
    2. '.' → logprob: -7.375729560852051
    3. 'E' → logprob: -9.50072956085205
    4. ':' → logprob: -11.00072956085205
    5. '.e' → logprob: -11.87572956085205
    6. '5' → logprob: -13.37572956085205
    7. '0' → logprob: -13.87572956085205
    8. ':
' → logprob: -14.12572956085205
    9. '6' → logprob: -14.25072956085205
    10. '-' → logprob: -14.87572956085205

Token 317: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: 0.0
    2. 'e' → logprob: -17.875
    3. ' -' → logprob: -18.0
    4. '```' → logprob: -18.125
    5. '3' → logprob: -18.625
    6. '6' → logprob: -19.375
    7. '9' → logprob: -20.0
    8. '
' → logprob: -20.0
    9. '   ' → logprob: -20.125
    10. '2' → logprob: -20.5

Token 318: '14' (ID: 1265)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.5896596908569336
    2. '9' → logprob: -1.9646596908569336
    3. '-' → logprob: -2.2146596908569336
    4. '7' → logprob: -2.7146596908569336
    5. '8' → logprob: -2.7146596908569336
    6. '5' → logprob: -3.4646596908569336
    7. '3' → logprob: -3.5896596908569336
    8. '4' → logprob: -5.589659690856934
    9. '10' → logprob: -7.839659690856934
    10. '12' → logprob: -7.839659690856934

Token 319: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08820389956235886
    2. ':
' → logprob: -2.7132039070129395
    3. ' :' → logprob: -4.3382039070129395
    4. ' :
' → logprob: -5.3382039070129395
    5. ':return' → logprob: -8.588203430175781
    6. ':
' → logprob: -10.963203430175781
    7. ' :
' → logprob: -11.588203430175781
    8. ' or' → logprob: -11.963203430175781
    9. ' and' → logprob: -12.088203430175781
    10. '):' → logprob: -13.088203430175781

Token 320: ' ' (ID: 220)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.18811196088790894
    2. ' return' → logprob: -1.8131120204925537
    3. '               ' → logprob: -5.563111782073975
    4. ' 
' → logprob: -6.188111782073975
    5. 'return' → logprob: -6.813111782073975
    6. '                    
' → logprob: -7.313111782073975
    7. '                       ' → logprob: -9.188112258911133
    8. '           ' → logprob: -9.313112258911133
    9. '                ' → logprob: -9.313112258911133
    10. '
' → logprob: -9.438112258911133

Token 321: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6714134812355042
    2. ' return' → logprob: -1.4214134216308594
    3. 'return' → logprob: -1.4214134216308594
    4. '               ' → logprob: -5.171413421630859
    5. ':return' → logprob: -8.92141342163086
    6. '
' → logprob: -9.29641342163086
    7. '           ' → logprob: -9.67141342163086
    8. '0' → logprob: -9.67141342163086
    9. 'False' → logprob: -9.79641342163086
    10. '                       ' → logprob: -9.79641342163086

Token 322: ' touch' (ID: 7381)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0011849920265376568
    2. 'return' → logprob: -7.126184940338135
    3. '               ' → logprob: -8.376185417175293
    4. '           ' → logprob: -10.001185417175293
    5. ' False' → logprob: -10.126185417175293
    6. '                   ' → logprob: -10.626185417175293
    7. '
' → logprob: -11.001185417175293
    8. 'False' → logprob: -11.501185417175293
    9. ' 
' → logprob: -12.501185417175293
    10. '                ' → logprob: -12.876185417175293

Token 323: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.019315233454108238
    2. 'or' → logprob: -5.394315242767334
    3. '               ' → logprob: -5.894315242767334
    4. 's' → logprob: -5.894315242767334
    5. '=' → logprob: -6.269315242767334
    6. '           ' → logprob: -6.269315242767334
    7. ':' → logprob: -6.894315242767334
    8. '<|end|>' → logprob: -7.019315242767334
    9. ' and' → logprob: -7.144315242767334
    10. ' =' → logprob: -7.644315242767334

Token 324: ' below' (ID: 4895)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.9989058375358582
    2. ' pass' → logprob: -1.623905897140503
    3. '<' → logprob: -2.873905897140503
    4. '=' → logprob: -2.873905897140503
    5. 'below' → logprob: -2.998905897140503
    6. '-' → logprob: -3.123905897140503
    7. ' below' → logprob: -3.123905897140503
    8. '<|end|>' → logprob: -3.623905897140503
    9. ' exceed' → logprob: -3.748905897140503
    10. ' surpass' → logprob: -3.998905897140503

Token 325: ' obstacle' (ID: 57212)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5238814949989319
    2. '               ' → logprob: -1.273881435394287
    3. ' return' → logprob: -2.523881435394287
    4. ':' → logprob: -3.648881435394287
    5. ':
' → logprob: -4.523881435394287
    6. '                       ' → logprob: -5.773881435394287
    7. ':return' → logprob: -6.398881435394287
    8. ' or' → logprob: -6.648881435394287
    9. 'return' → logprob: -6.773881435394287
    10. '                ' → logprob: -6.773881435394287

Token 326: ' height' (ID: 4679)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4236542284488678
    2. ':
' → logprob: -1.7986541986465454
    3. '               ' → logprob: -2.048654317855835
    4. '                   ' → logprob: -3.423654317855835
    5. '           ' → logprob: -4.798654079437256
    6. ':return' → logprob: -5.548654079437256
    7. '                       ' → logprob: -6.048654079437256
    8. '<|end|>' → logprob: -7.298654079437256
    9. ' return' → logprob: -7.798654079437256
    10. ' :' → logprob: -7.923654079437256

Token 327: ' means' (ID: 4748)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6342983841896057
    2. ':' → logprob: -1.634298324584961
    3. '               ' → logprob: -1.634298324584961
    4. '                   ' → logprob: -2.884298324584961
    5. ':return' → logprob: -4.259298324584961
    6. '           ' → logprob: -6.009298324584961
    7. '                       ' → logprob: -6.009298324584961
    8. ' :
' → logprob: -6.384298324584961
    9. ' return' → logprob: -6.884298324584961
    10. '                           ' → logprob: -7.759298324584961

Token 328: ' fail' (ID: 7111)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.12700717151165009
    2. ' False' → logprob: -2.127007246017456
    3. 'True' → logprob: -10.752007484436035
    4. 'return' → logprob: -11.002007484436035
    5. '               ' → logprob: -11.127007484436035
    6. ' True' → logprob: -11.752007484436035
    7. 'not' → logprob: -12.252007484436035
    8. ' return' → logprob: -12.377007484436035
    9. '           ' → logprob: -13.002007484436035
    10. ' not' → logprob: -13.252007484436035

Token 329: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12453008443117142
    2. '               ' → logprob: -2.499530076980591
    3. ':
' → logprob: -3.624530076980591
    4. '                       ' → logprob: -5.87453031539917
    5. ':' → logprob: -5.99953031539917
    6. '           ' → logprob: -7.12453031539917
    7. ':return' → logprob: -7.49953031539917
    8. '
' → logprob: -7.74953031539917
    9. ' return' → logprob: -7.99953031539917
    10. '                           ' → logprob: -8.749529838562012

Token 330: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008738785050809383
    2. '               ' → logprob: -5.008738994598389
    3. ' return' → logprob: -7.508738994598389
    4. '           ' → logprob: -7.758738994598389
    5. '                       ' → logprob: -8.38373851776123
    6. '
' → logprob: -8.63373851776123
    7. 'return' → logprob: -8.63373851776123
    8. '                    
' → logprob: -8.63373851776123
    9. '                  ' → logprob: -9.00873851776123
    10. ' 
' → logprob: -9.88373851776123

Token 331: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0055104997009038925
    2. ' return' → logprob: -5.255510330200195
    3. '                   ' → logprob: -8.255510330200195
    4. '                       ' → logprob: -11.505510330200195
    5. '	return' → logprob: -12.505510330200195
    6. '               ' → logprob: -12.755510330200195
    7. '   ' → logprob: -16.755510330200195
    8. '           ' → logprob: -16.755510330200195
    9. '
' → logprob: -17.005510330200195
    10. ' ' → logprob: -18.130510330200195

Token 332: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.15310683415737e-05
    2. ' False' → logprob: -10.750021934509277
    3. 'True' → logprob: -22.37502098083496
    4. 'false' → logprob: -22.62502098083496
    5. 'F' → logprob: -23.50002098083496
    6. '(False' → logprob: -23.62502098083496
    7. '=False' → logprob: -23.75002098083496
    8. 'FALSE' → logprob: -26.12502098083496
    9. '_false' → logprob: -26.25002098083496
    10. '.False' → logprob: -27.37502098083496

Token 333: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008268986130133271
    2. '
' → logprob: -8.000826835632324
    3. 'return' → logprob: -8.625826835632324
    4. '<|end|>' → logprob: -8.875826835632324
    5. ' return' → logprob: -9.750826835632324
    6. '           ' → logprob: -10.250826835632324
    7. '        
' → logprob: -10.750826835632324
    8. '   ' → logprob: -11.375826835632324
    9. '	' → logprob: -11.625826835632324
    10. '	return' → logprob: -11.750826835632324

Token 334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005132370279170573
    2. 'return' → logprob: -8.250513076782227
    3. ' return' → logprob: -9.250513076782227
    4. '
' → logprob: -9.625513076782227
    5. '	return' → logprob: -10.625513076782227
    6. '   ' → logprob: -10.875513076782227
    7. '	' → logprob: -11.500513076782227
    8. '        
' → logprob: -11.625513076782227
    9. '<|end|>' → logprob: -11.625513076782227
    10. '           ' → logprob: -12.000513076782227

Token 335: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48008474707603455
    2. 'return' (adapté à ' return') → logprob: -1.605084776878357
    3. ' return' → logprob: -1.730084776878357
    4. '
' → logprob: -6.6050848960876465
    5. '   ' → logprob: -6.8550848960876465
    6. '	return' → logprob: -7.9800848960876465
    7. 'eturn' → logprob: -8.980084419250488
    8. '           ' → logprob: -10.105084419250488
    9. '               ' → logprob: -10.230084419250488
    10. '        
' → logprob: -10.355084419250488

Token 336: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.47407710552215576
    2. ' True' → logprob: -0.9740771055221558
    3. ' ' → logprob: -16.974077224731445
    4. '(True' → logprob: -18.599077224731445
    5. '=True' → logprob: -19.724077224731445
    6. '   ' → logprob: -20.974077224731445
    7. '.True' → logprob: -21.474077224731445
    8. ' Tru' → logprob: -21.849077224731445
    9. 'False' → logprob: -22.724077224731445
    10. '	' → logprob: -22.849077224731445

Token 337: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 338: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0018985291244462132
    2. 'c' → logprob: -6.376898765563965
    3. '
' → logprob: -9.126898765563965
    4. ' class' → logprob: -10.001898765563965
    5. '#' → logprob: -10.876898765563965
    6. '<|end|>' → logprob: -12.376898765563965
    7. '```' → logprob: -12.626898765563965
    8. ' ' → logprob: -12.876898765563965
    9. 'clas' → logprob: -12.876898765563965
    10. ' 
' → logprob: -13.251898765563965

Token 339: ' Velocity' (ID: 109464)
  Prédit: 'Obstacle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Obstacle' → logprob: -0.8323507905006409
    2. ' Bullet' → logprob: -1.457350730895996
    3. 'Trajectory' → logprob: -2.707350730895996
    4. ' Ob' → logprob: -2.832350730895996
    5. 'Bullet' → logprob: -2.832350730895996
    6. ' Projectile' → logprob: -3.707350730895996
    7. ' Par' → logprob: -3.832350730895996
    8. 'Projectile' → logprob: -3.957350730895996
    9. ' Shot' → logprob: -4.582350730895996
    10. 'Ball' → logprob: -4.582350730895996

Token 340: 'Components' (ID: 15937)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4923737049102783
    2. 'Vector' → logprob: -1.8673737049102783
    3. '(' → logprob: -2.3673737049102783
    4. 'Profile' → logprob: -3.1173737049102783
    5. ':
' → logprob: -3.7423737049102783
    6. 'Calculator' → logprob: -4.242373466491699
    7. 'Range' → logprob: -4.617373466491699
    8. 'Trajectory' → logprob: -4.742373466491699
    9. 'Generator' → logprob: -5.617373466491699
    10. 'Estimator' → logprob: -5.992373466491699

Token 341: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002624169923365116
    2. ':
' → logprob: -6.502624034881592
    3. '(' → logprob: -6.877624034881592
    4. ' :' → logprob: -9.75262451171875
    5. '(Abstract' → logprob: -10.87762451171875
    6. ':

' → logprob: -12.37762451171875
    7. '():' → logprob: -12.50262451171875
    8. '(object' → logprob: -13.37762451171875
    9. '<|end|>' → logprob: -13.62762451171875
    10. '):' → logprob: -14.00262451171875

Token 342: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012259445153176785
    2. ':
' → logprob: -4.637259483337402
    3. '   ' → logprob: -6.387259483337402
    4. '<|end|>' → logprob: -7.387259483337402
    5. '(' → logprob: -9.012259483337402
    6. '  ' → logprob: -10.762259483337402
    7. ' :' → logprob: -11.887259483337402
    8. '):' → logprob: -12.262259483337402
    9. '<|end|>' → logprob: -12.262259483337402
    10. ' ' → logprob: -12.262259483337402

Token 343: ' """' (ID: 9280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24968919157981873
    2. ':' → logprob: -1.7496892213821411
    3. ':
' → logprob: -3.2496891021728516
    4. '(' → logprob: -6.249689102172852
    5. 'def' → logprob: -6.249689102172852
    6. ' ' → logprob: -6.874689102172852
    7. 'from' → logprob: -6.999689102172852
    8. 'class' → logprob: -6.999689102172852
    9. '  ' → logprob: -7.499689102172852
    10. '@dat' → logprob: -7.624689102172852

Token 344: 'Utility' (ID: 26749)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.20907588303089142
    2. 'from' → logprob: -2.709075927734375
    3. '
' → logprob: -2.834075927734375
    4. '   ' → logprob: -3.584075927734375
    5. '@dat' → logprob: -4.209075927734375
    6. ' class' → logprob: -5.584075927734375
    7. '<|end|>' → logprob: -5.959075927734375
    8. ' ' → logprob: -6.209075927734375
    9. '#' → logprob: -6.334075927734375
    10. ' Represents' → logprob: -6.334075927734375

Token 345: ' class' (ID: 744)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6398026943206787
    2. ' class' → logprob: -1.5148026943206787
    3. 'class' → logprob: -2.0148026943206787
    4. ':
' → logprob: -3.0148026943206787
    5. ' to' → logprob: -3.2648026943206787
    6. ' for' → logprob: -3.7648026943206787
    7. '<|end|>' → logprob: -5.389802932739258
    8. ' of' → logprob: -7.014802932739258
    9. '
' → logprob: -7.264802932739258
    10. 'to' → logprob: -7.889802932739258

Token 346: ' for' (ID: 395)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6488742232322693
    2. ' for' → logprob: -0.8988742232322693
    3. ':' → logprob: -3.273874282836914
    4. '<|end|>' → logprob: -4.023874282836914
    5. ':
' → logprob: -5.273874282836914
    6. 'to' → logprob: -6.023874282836914
    7. 'for' → logprob: -6.148874282836914
    8. '   ' → logprob: -6.148874282836914
    9. '<|end|>' → logprob: -6.898874282836914
    10. ' that' → logprob: -7.273874282836914

Token 347: ' velocity' (ID: 30061)
  Prédit: ' calculating'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculating' → logprob: -1.0405462980270386
    2. ' handling' → logprob: -1.4155462980270386
    3. ' representing' → logprob: -2.790546417236328
    4. 'calcul' → logprob: -3.040546417236328
    5. ' storing' → logprob: -3.165546417236328
    6. ' the' → logprob: -3.415546417236328
    7. ' vector' → logprob: -3.790546417236328
    8. ' managing' → logprob: -3.915546417236328
    9. ' calculations' → logprob: -4.040546417236328
    10. ' par' → logprob: -4.040546417236328

Token 348: ' components' (ID: 10674)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0385538712143898
    2. ' components' → logprob: -4.163553714752197
    3. ':
' → logprob: -4.663553714752197
    4. ' calculations' → logprob: -5.538553714752197
    5. ' vectors' → logprob: -5.913553714752197
    6. ' vector' → logprob: -7.038553714752197
    7. ',' → logprob: -7.163553714752197
    8. 'components' → logprob: -7.288553714752197
    9. ' decomposition' → logprob: -7.538553714752197
    10. '(' → logprob: -7.663553714752197

Token 349: ' calculation' (ID: 40722)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17745523154735565
    2. ' of' → logprob: -3.177455186843872
    3. ' to' → logprob: -3.427455186843872
    4. ' with' → logprob: -3.927455186843872
    5. ':
' → logprob: -4.052455425262451
    6. ' and' → logprob: -4.177455425262451
    7. '.' → logprob: -4.802455425262451
    8. '<|end|>' → logprob: -5.052455425262451
    9. ' for' → logprob: -5.552455425262451
    10. ' in' → logprob: -5.552455425262451

Token 350: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5838078260421753
    2. ':' → logprob: -1.2088078260421753
    3. ' and' → logprob: -2.958807945251465
    4. '.' → logprob: -3.333807945251465
    5. '<|end|>' → logprob: -3.958807945251465
    6. '."""' → logprob: -4.958807945251465
    7. ' at' → logprob: -5.083807945251465
    8. ' in' → logprob: -5.583807945251465
    9. ' of' → logprob: -5.833807945251465
    10. ' with' → logprob: -5.958807945251465

Token 351: ' magnitude' (ID: 49895)
  Prédit: ' manipulation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' manipulation' → logprob: -1.9070879220962524
    2. ' decomposition' → logprob: -2.032087802886963
    3. ' adjustment' → logprob: -2.282087802886963
    4. ' updates' → logprob: -2.407087802886963
    5. 'composition' → logprob: -3.157087802886963
    6. 'updates' → logprob: -3.282087802886963
    7. 'de' → logprob: -3.282087802886963
    8. ' vector' → logprob: -3.407087802886963
    9. 'vector' → logprob: -3.407087802886963
    10. 'representation' → logprob: -3.532087802886963

Token 352: '."""
' (ID: 33044)
  Prédit: '."""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '."""' → logprob: -1.032227873802185
    2. '.' → logprob: -1.157227873802185
    3. ' calculations' → logprob: -1.532227873802185
    4. '"""' → logprob: -2.7822279930114746
    5. ' calculation' → logprob: -3.7822279930114746
    6. ' and' → logprob: -4.532227993011475
    7. ' """' → logprob: -5.907227993011475
    8. '."""
' → logprob: -6.407227993011475
    9. ' analysis' → logprob: -6.407227993011475
    10. ' of' → logprob: -6.782227993011475

Token 353: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.626909613609314
    2. ':' → logprob: -1.501909613609314
    3. '
' → logprob: -2.0019097328186035
    4. ':
' → logprob: -3.1269097328186035
    5. '<|end|>' → logprob: -3.2519097328186035
    6. ' 
' → logprob: -4.7519097328186035
    7. '    
' → logprob: -4.8769097328186035
    8. '  
' → logprob: -5.8769097328186035
    9. 'class' → logprob: -6.5019097328186035
    10. '<|end|>' → logprob: -6.6269097328186035

Token 354: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.03034946881234646
    2. 'def' (adapté à ' def') → logprob: -3.5303494930267334
    3. '   ' → logprob: -7.905349254608154
    4. 'class' → logprob: -9.030349731445312
    5. ' @' → logprob: -9.655349731445312
    6. ' ' → logprob: -11.155349731445312
    7. '@dat' → logprob: -11.655349731445312
    8. ' __' → logprob: -11.780349731445312
    9. ' class' → logprob: -12.155349731445312
    10. '@' → logprob: -12.530349731445312

Token 355: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3641931116580963
    2. '__' → logprob: -1.239193081855774
    3. 'staticmethod' → logprob: -4.614192962646484
    4. ' def' → logprob: -5.739192962646484
    5. 'def' → logprob: -7.114192962646484
    6. 'property' → logprob: -7.239192962646484
    7. 'classmethod' → logprob: -7.364192962646484
    8. 'init' → logprob: -8.989192962646484
    9. '@property' → logprob: -9.614192962646484
    10. '_init' → logprob: -10.614192962646484

Token 356: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.796184723294573e-06
    2. 'int' → logprob: -13.000005722045898
    3. ' init' → logprob: -13.125005722045898
    4. '```' → logprob: -14.750005722045898
    5. 'new' → logprob: -15.125005722045898
    6. 'mul' → logprob: -15.500005722045898
    7. 'add' → logprob: -15.875005722045898
    8. '   ' → logprob: -16.0000057220459
    9. '``' → logprob: -16.7500057220459
    10. 'ini' → logprob: -17.1250057220459

Token 357: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3853108882904053
    2. '__(' → logprob: -1.5103108882904053
    3. '(self' → logprob: -2.3853108882904053
    4. ' (' → logprob: -5.385311126708984
    5. ',' → logprob: -6.635311126708984
    6. '_(' → logprob: -7.385311126708984
    7. '=' → logprob: -9.385311126708984
    8. '__(
' → logprob: -9.760311126708984
    9. '=(' → logprob: -9.885311126708984
    10. '__' → logprob: -10.010311126708984

Token 358: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.7888184528565034e-05
    2. ' self' → logprob: -9.8750581741333
    3. ',' → logprob: -12.6250581741333
    4. '0' → logprob: -13.1250581741333
    5. '(self' → logprob: -14.0000581741333
    6. ',self' → logprob: -17.000057220458984
    7. '1' → logprob: -17.125057220458984
    8. '	self' → logprob: -17.250057220458984
    9. 's' → logprob: -17.375057220458984
    10. '   ' → logprob: -17.625057220458984

Token 359: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.334533878136426e-05
    2. ' ,' → logprob: -10.375042915344238
    3. 'self' → logprob: -11.875042915344238
    4. ',float' → logprob: -12.875042915344238
    5. ',self' → logprob: -14.750042915344238
    6. ',
' → logprob: -14.875042915344238
    7. ',width' → logprob: -15.250042915344238
    8. ',v' → logprob: -15.250042915344238
    9. '<|end|>' → logprob: -15.250042915344238
    10. ',double' → logprob: -15.250042915344238

Token 360: ' vx' (ID: 93588)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.06111174449324608
    2. 'v' → logprob: -3.8111116886138916
    3. 'speed' → logprob: -4.061111927032471
    4. ' vx' → logprob: -4.311111927032471
    5. 'm' → logprob: -5.811111927032471
    6. 'angle' → logprob: -6.811111927032471
    7. ' speed' → logprob: -6.936111927032471
    8. 'initial' → logprob: -8.436111450195312
    9. 'V' → logprob: -8.811111450195312
    10. ' v' → logprob: -9.061111450195312

Token 361: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08921404182910919
    2. ',' → logprob: -2.4642140865325928
    3. ' ,' → logprob: -8.839214324951172
    4. '=' → logprob: -9.714214324951172
    5. ' :' → logprob: -10.464214324951172
    6. ':int' → logprob: -11.339214324951172
    7. ':,' → logprob: -11.589214324951172
    8. '):' → logprob: -12.089214324951172
    9. ',v' → logprob: -12.964214324951172
    10. ',float' → logprob: -13.214214324951172

Token 362: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.04319009929895401
    2. ' float' → logprob: -3.1681900024414062
    3. '0' → logprob: -9.418190002441406
    4. ',float' → logprob: -9.793190002441406
    5. '=float' → logprob: -10.918190002441406
    6. '(float' → logprob: -11.043190002441406
    7. '	float' → logprob: -12.543190002441406
    8. '<float' → logprob: -12.668190002441406
    9. ',' → logprob: -12.793190002441406
    10. 'None' → logprob: -13.293190002441406

Token 363: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000739707553293556
    2. ' ,' → logprob: -7.375739574432373
    3. ',v' → logprob: -9.125740051269531
    4. ',
' → logprob: -13.000740051269531
    5. ',float' → logprob: -14.375740051269531
    6. '   ' → logprob: -14.500740051269531
    7. '):' → logprob: -15.375740051269531
    8. ':' → logprob: -15.500740051269531
    9. '‌,' → logprob: -15.625740051269531
    10. ' ' → logprob: -16.37574005126953

Token 364: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.0031897129956632853
    2. ' vy' → logprob: -5.753189563751221
    3. ' ' → logprob: -12.253190040588379
    4. '   ' → logprob: -12.878190040588379
    5. '  ' → logprob: -13.628190040588379
    6. 'vx' → logprob: -14.378190040588379
    7. 'v' → logprob: -14.378190040588379
    8. 'Vy' → logprob: -14.628190040588379
    9. ' ' → logprob: -15.253190040588379
    10. '    ' → logprob: -15.253190040588379

Token 365: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11323412507772446
    2. '):' → logprob: -2.238234043121338
    3. '):
' → logprob: -7.988234043121338
    4. ')' → logprob: -9.988234519958496
    5. ' ):' → logprob: -11.113234519958496
    6. ',' → logprob: -12.238234519958496
    7. ' :' → logprob: -12.988234519958496
    8. '<|end|>' → logprob: -13.113234519958496
    9. '):
' → logprob: -14.613234519958496
    10. ':int' → logprob: -14.988234519958496

Token 366: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.012518009170889854
    2. ' float' → logprob: -4.387517929077148
    3. '=float' → logprob: -12.637517929077148
    4. '	float' → logprob: -13.512517929077148
    5. ',float' → logprob: -13.762517929077148
    6. ')' → logprob: -14.262517929077148
    7. '<float' → logprob: -14.387517929077148
    8. '(float' → logprob: -14.637517929077148
    9. 'flo' → logprob: -15.262517929077148
    10. '.float' → logprob: -15.262517929077148

Token 367: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10028786957263947
    2. '):
' → logprob: -2.350287914276123
    3. '):
' → logprob: -10.100287437438965
    4. ')' → logprob: -11.225287437438965
    5. ' ):' → logprob: -11.225287437438965
    6. ':' → logprob: -11.725287437438965
    7. '   ' → logprob: -13.100287437438965
    8. ' ):
' → logprob: -13.475287437438965
    9. ',' → logprob: -13.600287437438965
    10. ' ' → logprob: -15.725287437438965

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010912814177572727
    2. ' self' → logprob: -8.251091003417969
    3. 'self' → logprob: -8.251091003417969
    4. '<|end|>' → logprob: -8.251091003417969
    5. ',' → logprob: -9.626091003417969
    6. '):
' → logprob: -9.751091003417969
    7. ')' → logprob: -9.876091003417969
    8. '):' → logprob: -10.001091003417969
    9. 'v' → logprob: -11.376091003417969
    10. ':' → logprob: -11.376091003417969

Token 369: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08964809030294418
    2. ' self' → logprob: -2.4646480083465576
    3. '       ' → logprob: -7.714648246765137
    4. 'vx' → logprob: -8.964648246765137
    5. ' vx' → logprob: -9.089648246765137
    6. '	self' → logprob: -11.589648246765137
    7. '   ' → logprob: -11.839648246765137
    8. ' ' → logprob: -13.589648246765137
    9. '    ' → logprob: -14.214648246765137
    10. 'v' → logprob: -14.589648246765137

Token 370: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.0001239196863025427
    2. '.' → logprob: -9.000123977661133
    3. ' .' → logprob: -14.875123977661133
    4. '.x' → logprob: -16.750123977661133
    5. 'vx' → logprob: -18.000123977661133
    6. 'v' → logprob: -18.125123977661133
    7. '.
' → logprob: -18.750123977661133
    8. '._' → logprob: -18.750123977661133
    9. '	v' → logprob: -19.000123977661133
    10. '.V' → logprob: -19.875123977661133

Token 371: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.128163257315464e-07
    2. '_x' → logprob: -15.5
    3. ' =' → logprob: -16.75
    4. '=' → logprob: -17.0
    5. ' x' → logprob: -17.0
    6. '
' → logprob: -17.75
    7. '   ' → logprob: -18.125
    8. 'el' → logprob: -18.375
    9. ' ' → logprob: -18.625
    10. '	x' → logprob: -18.75

Token 372: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31341752409935
    2. '=' → logprob: -1.3134175539016724
    3. '=v' → logprob: -9.313417434692383
    4. ',' → logprob: -9.938417434692383
    5. ' ' → logprob: -11.313417434692383
    6. ' =
' → logprob: -13.313417434692383
    7. '<|end|>' → logprob: -13.563417434692383
    8. ',v' → logprob: -14.063417434692383
    9. ':' → logprob: -14.563417434692383
    10. 'v' → logprob: -15.563417434692383

Token 373: ' vx' (ID: 93588)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.00280558317899704
    2. ' vx' → logprob: -5.877805709838867
    3. 'v' → logprob: -15.127805709838867
    4. 'vy' → logprob: -15.252805709838867
    5. 'x' → logprob: -16.752805709838867
    6. 'vz' → logprob: -16.877805709838867
    7. '
' → logprob: -17.252805709838867
    8. 'VX' → logprob: -18.002805709838867
    9. ' ' → logprob: -18.252805709838867
    10. 'vw' → logprob: -18.377805709838867

Token 374: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11624564975500107
    2. '<|end|>' → logprob: -3.116245746612549
    3. ',' → logprob: -3.241245746612549
    4. '
' → logprob: -3.991245746612549
    5. ',
' → logprob: -5.616245746612549
    6. '        
' → logprob: -6.866245746612549
    7. '  
' → logprob: -7.741245746612549
    8. ' 
' → logprob: -7.741245746612549
    9. '    
' → logprob: -7.866245746612549
    10. ' ' → logprob: -7.866245746612549

Token 375: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04072877764701843
    2. '
' → logprob: -3.915728807449341
    3. ',' → logprob: -4.790728569030762
    4. '<|end|>' → logprob: -4.915728569030762
    5. '        
' → logprob: -7.040728569030762
    6. ' ' → logprob: -7.290728569030762
    7. ',
' → logprob: -7.540728569030762
    8. '   ' → logprob: -7.665728569030762
    9. ' 
' → logprob: -7.915728569030762
    10. '    
' → logprob: -8.415728569030762

Token 376: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.019335580989718437
    2. ' self' → logprob: -4.269335746765137
    3. '       ' → logprob: -5.269335746765137
    4. '   ' → logprob: -12.019335746765137
    5. '	self' → logprob: -13.019335746765137
    6. '     ' → logprob: -14.394335746765137
    7. ' ' → logprob: -14.769335746765137
    8. '
' → logprob: -14.769335746765137
    9. '      ' → logprob: -14.894335746765137
    10. '        
' → logprob: -15.019335746765137

Token 377: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.6566761136054993
    2. '.' → logprob: -1.5316760540008545
    3. ',' → logprob: -2.1566760540008545
    4. '=' → logprob: -3.1566760540008545
    5. 'vy' → logprob: -3.5316760540008545
    6. ' =' → logprob: -3.7816760540008545
    7. '
' → logprob: -4.156676292419434
    8. 'v' → logprob: -4.406676292419434
    9. '<|end|>' → logprob: -5.281676292419434
    10. ' vy' → logprob: -5.406676292419434

Token 378: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.621933451038785e-05
    2. 'x' → logprob: -10.000056266784668
    3. 'vy' → logprob: -11.750056266784668
    4. 'v' → logprob: -13.250056266784668
    5. '_y' → logprob: -15.250056266784668
    6. ' y' → logprob: -15.250056266784668
    7. '   ' → logprob: -16.12505531311035
    8. 'yv' → logprob: -16.12505531311035
    9. '```' → logprob: -16.50005531311035
    10. '=' → logprob: -16.75005531311035

Token 379: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5678765177726746
    2. '<|end|>' → logprob: -1.3178765773773193
    3. '=' → logprob: -1.8178765773773193
    4. ' ' → logprob: -6.31787633895874
    5. ')' → logprob: -6.81787633895874
    6. '<|end|>' → logprob: -8.567876815795898
    7. ',' → logprob: -10.442876815795898
    8. ' )' → logprob: -10.817876815795898
    9. '=v' → logprob: -11.192876815795898
    10. '
' → logprob: -11.567876815795898

Token 380: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.3868741989135742
    2. ' vy' → logprob: -1.1368741989135742
    3. 'v' → logprob: -13.886874198913574
    4. 'uy' → logprob: -14.511874198913574
    5. 'Vy' → logprob: -15.011874198913574
    6. 'yv' → logprob: -15.136874198913574
    7. 'vyk' → logprob: -15.136874198913574
    8. ' ' → logprob: -15.761874198913574
    9. 'y' → logprob: -16.01187515258789
    10. ' ' → logprob: -16.13687515258789

Token 381: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47832661867141724
    2. '<|end|>' → logprob: -0.9783266186714172
    3. '   ' → logprob: -5.853326797485352
    4. '<|end|>' → logprob: -6.978326797485352
    5. ' ' → logprob: -9.228326797485352
    6. '       ' → logprob: -9.353326797485352
    7. '    
' → logprob: -9.353326797485352
    8. ' 
' → logprob: -10.103326797485352
    9. '

' → logprob: -10.353326797485352
    10. '  
' → logprob: -10.353326797485352

Token 382: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006576700136065483
    2. ' def' → logprob: -5.3815765380859375
    3. 'def' → logprob: -6.3815765380859375
    4. '@property' → logprob: -9.006576538085938
    5. '    
' → logprob: -9.756576538085938
    6. ' @' → logprob: -10.131576538085938
    7. '       ' → logprob: -10.506576538085938
    8. '
' → logprob: -11.881576538085938
    9. '        
' → logprob: -12.881576538085938
    10. ' ' → logprob: -12.881576538085938

Token 383: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1764087826013565
    2. '@property' → logprob: -1.9264087677001953
    3. ' def' → logprob: -4.176408767700195
    4. '   ' → logprob: -7.676408767700195
    5. ' @' → logprob: -8.426408767700195
    6. '@' (adapté à ' @') → logprob: -12.426408767700195
    7. ' ' → logprob: -12.426408767700195
    8. 'import' → logprob: -12.551408767700195
    9. 'property' → logprob: -13.176408767700195
    10. '    
' → logprob: -13.551408767700195

Token 384: 'property' (ID: 8813)
  Prédit: 'property'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -0.0033912332728505135
    2. 'staticmethod' → logprob: -6.003391265869141
    3. 'abstract' → logprob: -7.003391265869141
    4. 'classmethod' → logprob: -12.12839126586914
    5. ' property' → logprob: -14.25339126586914
    6. 'proper' → logprob: -15.62839126586914
    7. '@property' → logprob: -15.62839126586914
    8. 'abs' → logprob: -16.62839126586914
    9. 'static' → logprob: -18.62839126586914
    10. 'abc' → logprob: -19.00339126586914

Token 385: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6369506120681763
    2. 'def' → logprob: -0.7619506120681763
    3. ' def' → logprob: -5.761950492858887
    4. '   ' → logprob: -7.886950492858887
    5. '<|end|>' → logprob: -7.886950492858887
    6. '    
' → logprob: -8.386950492858887
    7. '  
' → logprob: -9.136950492858887
    8. '<|end|>' → logprob: -9.886950492858887
    9. ' ' → logprob: -11.261950492858887
    10. '   
' → logprob: -11.511950492858887

Token 386: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006602391600608826
    2. '
' → logprob: -5.6316022872924805
    3. '   ' → logprob: -6.2566022872924805
    4. ' def' → logprob: -6.8816022872924805
    5. '    
' → logprob: -10.75660228729248
    6. '<|end|>' → logprob: -11.00660228729248
    7. '<|end|>' → logprob: -12.13160228729248
    8. '	def' → logprob: -12.50660228729248
    9. '  
' → logprob: -13.38160228729248
    10. ' ' → logprob: -13.63160228729248

Token 387: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.16116289794445038
    2. '
' → logprob: -1.9111628532409668
    3. '   ' → logprob: -7.661162853240967
    4. 'm' → logprob: -8.661163330078125
    5. 'import' → logprob: -9.036163330078125
    6. ' def' → logprob: -9.411163330078125
    7. '    
' → logprob: -9.661163330078125
    8. '
' → logprob: -12.536163330078125
    9. 'math' → logprob: -12.786163330078125
    10. '  
' → logprob: -12.911163330078125

Token 388: ' magnitude' (ID: 49895)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0062703937292099
    2. 'speed' → logprob: -5.506270408630371
    3. ' magnitude' → logprob: -6.381270408630371
    4. ' speed' → logprob: -8.881270408630371
    5. 'mag' → logprob: -9.006270408630371
    6. 'v' → logprob: -9.381270408630371
    7. 'velocity' → logprob: -9.881270408630371
    8. ' ' → logprob: -11.006270408630371
    9. 'length' → logprob: -11.381270408630371
    10. 'abs' → logprob: -11.381270408630371

Token 389: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.475370317697525
    2. '()' → logprob: -1.7253702878952026
    3. '():' → logprob: -1.9753702878952026
    4. '(' → logprob: -3.350370407104492
    5. '():
' → logprob: -3.725370407104492
    6. ':' → logprob: -6.725370407104492
    7. '<|end|>' → logprob: -7.225370407104492
    8. '()
' → logprob: -10.100370407104492
    9. ' (' → logprob: -10.100370407104492
    10. '   ' → logprob: -10.475370407104492

Token 390: ')' (ID: 8)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.142743468284607
    2. '()' → logprob: -1.517743468284607
    3. '():
' → logprob: -1.642743468284607
    4. '(self' → logprob: -2.5177435874938965
    5. '):' → logprob: -3.0177435874938965
    6. ':' → logprob: -3.1427435874938965
    7. '):
' → logprob: -3.3927435874938965
    8. '<|end|>' → logprob: -3.6427435874938965
    9. ')' → logprob: -3.7677435874938965
    10. '```' → logprob: -5.8927435874938965

Token 391: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7644076943397522
    2. '():' → logprob: -1.1394076347351074
    3. '():
' → logprob: -1.7644076347351074
    4. '()' → logprob: -3.3894076347351074
    5. '       ' → logprob: -6.264407634735107
    6. '   ' → logprob: -6.639407634735107
    7. '(' → logprob: -6.764407634735107
    8. ')' → logprob: -7.014407634735107
    9. '):
' → logprob: -7.139407634735107
    10. '):' → logprob: -7.264407634735107

Token 392: ' float' (ID: 4428)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.0047419723123312
    2. ' (' → logprob: -5.87974214553833
    3. '(math' → logprob: -6.50474214553833
    4. 'math' → logprob: -7.75474214553833
    5. '(' → logprob: -11.754741668701172
    6. ' ((' → logprob: -14.004741668701172
    7. ' float' → logprob: -14.129741668701172
    8. ' ' → logprob: -15.254741668701172
    9. ' return' → logprob: -16.004741668701172
    10. '(m' → logprob: -16.254741668701172

Token 393: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2442893087863922
    2. ':
' → logprob: -1.9942892789840698
    3. '():
' → logprob: -2.6192893981933594
    4. '       ' → logprob: -5.994289398193359
    5. '():' → logprob: -6.244289398193359
    6. '   ' → logprob: -6.369289398193359
    7. '):
' → logprob: -6.869289398193359
    8. '()' → logprob: -8.61928939819336
    9. '<|end|>' → logprob: -9.49428939819336
    10. '):' → logprob: -9.61928939819336

Token 394: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10747523605823517
    2. ' return' → logprob: -2.7324752807617188
    3. ' math' → logprob: -3.6074752807617188
    4. 'return' → logprob: -4.857475280761719
    5. 'math' → logprob: -7.732475280761719
    6. '(math' → logprob: -7.732475280761719
    7. ' (' → logprob: -8.232475280761719
    8. '        ' → logprob: -8.232475280761719
    9. '<|end|>' → logprob: -8.607475280761719
    10. ' ' → logprob: -9.732475280761719

Token 395: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.040676239877939224
    2. 'return' (adapté à ' return') → logprob: -3.4156763553619385
    3. ' math' → logprob: -5.165676116943359
    4. '       ' → logprob: -7.415676116943359
    5. '   ' → logprob: -7.540676116943359
    6. 'import' → logprob: -9.41567611694336
    7. 'math' → logprob: -10.04067611694336
    8. '	return' → logprob: -11.16567611694336
    9. ' import' → logprob: -11.41567611694336
    10. '    ' → logprob: -12.29067611694336

Token 396: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.7397767305374146
    2. 'math' → logprob: -0.7397767305374146
    3. '(math' → logprob: -3.239776611328125
    4. ' (' → logprob: -5.489776611328125
    5. '(self' → logprob: -6.114776611328125
    6. ' self' → logprob: -10.614776611328125
    7. 'self' → logprob: -10.864776611328125
    8. '.math' → logprob: -13.489776611328125
    9. '   ' → logprob: -13.489776611328125
    10. '_math' → logprob: -14.864776611328125

Token 397: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.0005106182070448995
    2. '.' → logprob: -8.125510215759277
    3. '.h' → logprob: -8.500510215759277
    4. '.s' → logprob: -11.875510215759277
    5. '.Sqrt' → logprob: -12.875510215759277
    6. '.pow' → logprob: -14.125510215759277
    7. '.atan' → logprob: -14.875510215759277
    8. ' .' → logprob: -15.125510215759277
    9. '.sin' → logprob: -17.125511169433594
    10. 'sqrt' → logprob: -17.250511169433594

Token 398: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001613459608051926
    2. '(' → logprob: -8.750161170959473
    3. 'self' → logprob: -12.875161170959473
    4. '(s' → logprob: -16.00016212463379
    5. '((' → logprob: -16.12516212463379
    6. '(
' → logprob: -18.00016212463379
    7. ' self' → logprob: -18.25016212463379
    8. ' (' → logprob: -19.37516212463379
    9. '{' → logprob: -19.75016212463379
    10. '(sel' → logprob: -20.25016212463379

Token 399: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.00014931005716789514
    2. '.' → logprob: -8.875149726867676
    3. '.x' → logprob: -12.250149726867676
    4. ' .' → logprob: -13.000149726867676
    5. 'self' → logprob: -13.625149726867676
    6. '.s' → logprob: -14.625149726867676
    7. '.vi' → logprob: -15.500149726867676
    8. '.self' → logprob: -16.12514877319336
    9. '.V' → logprob: -16.50014877319336
    10. '.vue' → logprob: -17.00014877319336

Token 400: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.961759259458631e-06
    2. 'self' → logprob: -12.875004768371582
    3. '(self' → logprob: -13.875004768371582
    4. '.x' → logprob: -15.375004768371582
    5. '[self' → logprob: -15.500004768371582
    6. '.v' → logprob: -15.625004768371582
    7. 'el' → logprob: -16.7500057220459
    8. '```' → logprob: -16.8125057220459
    9. '   ' → logprob: -16.8750057220459
    10. '**' → logprob: -16.9375057220459

Token 401: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.048589304089546204
    2. ' **' → logprob: -3.0485892295837402
    3. '*' → logprob: -13.423589706420898
    4. ' ' → logprob: -15.548589706420898
    5. ' *' → logprob: -16.1735897064209
    6. '²' → logprob: -16.7985897064209
    7. '*self' → logprob: -16.9235897064209
    8. '2' → logprob: -17.0485897064209
    9. '```' → logprob: -17.6735897064209
    10. '
' → logprob: -17.9235897064209

Token 402: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.500009536743164
    4. '
' → logprob: -16.875009536743164
    5. '```' → logprob: -18.125009536743164
    6. '

' → logprob: -18.375009536743164
    7. '  ' → logprob: -18.750009536743164
    8. ' ' → logprob: -19.750009536743164
    9. '۲' → logprob: -20.250009536743164
    10. '{' → logprob: -20.250009536743164

Token 403: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.620622712536715e-05
    2. ' ' → logprob: -10.000045776367188
    3. '
' → logprob: -15.125045776367188
    4. '   ' → logprob: -15.875045776367188
    5. '```' → logprob: -16.000045776367188
    6. '

' → logprob: -16.625045776367188
    7. '{' → logprob: -16.812545776367188
    8. '  ' → logprob: -17.500045776367188
    9. '۲' → logprob: -18.312545776367188
    10. ' ' → logprob: -18.500045776367188

Token 404: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3869970142841339
    2. ' +' → logprob: -1.1369969844818115
    3. '+self' → logprob: -9.01199722290039
    4. ',' → logprob: -13.88699722290039
    5. '   ' → logprob: -14.01199722290039
    6. ' ' → logprob: -14.63699722290039
    7. '<|end|>' → logprob: -15.13699722290039
    8. 'import' → logprob: -15.38699722290039
    9. 'self' → logprob: -15.38699722290039
    10. ' plus' → logprob: -16.13699722290039

Token 405: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.038042984902858734
    2. ' self' → logprob: -3.2880430221557617
    3. '       ' → logprob: -13.663043022155762
    4. '	self' → logprob: -15.538043022155762
    5. '   ' → logprob: -16.663042068481445
    6. '(self' → logprob: -16.913042068481445
    7. '
' → logprob: -17.288042068481445
    8. ' ' → logprob: -18.038042068481445
    9. '  ' → logprob: -19.288042068481445
    10. '_self' → logprob: -19.413042068481445

Token 406: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -4.143808109802194e-05
    2. '.' → logprob: -10.750041007995605
    3. ' .' → logprob: -11.500041007995605
    4. 'vy' → logprob: -12.000041007995605
    5. ' vy' → logprob: -13.000041007995605
    6. '.vi' → logprob: -14.375041007995605
    7. '.ve' → logprob: -15.125041007995605
    8. '.y' → logprob: -15.625041007995605
    9. '.py' → logprob: -15.875041007995605
    10. ' ' → logprob: -16.625041961669922

Token 407: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00015419373812619597
    2. '.y' → logprob: -9.125154495239258
    3. '_y' → logprob: -10.125154495239258
    4. 'vy' → logprob: -14.125154495239258
    5. '	y' → logprob: -14.125154495239258
    6. ' y' → logprob: -14.375154495239258
    7. 'yv' → logprob: -14.500154495239258
    8. '   ' → logprob: -15.000154495239258
    9. '{' → logprob: -15.250154495239258
    10. '```' → logprob: -15.375154495239258

Token 408: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.2872234284877777
    2. '**' → logprob: -1.4122234582901
    3. '2' → logprob: -5.1622233390808105
    4. ' ' → logprob: -8.412223815917969
    5. ' **)' → logprob: -9.912223815917969
    6. ')' → logprob: -10.037223815917969
    7. '**)' → logprob: -12.412223815917969
    8. '²' → logprob: -13.287223815917969
    9. '<|end|>' → logprob: -13.412223815917969
    10. ')**' → logprob: -14.037223815917969

Token 409: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014013137842994183
    2. ' ' → logprob: -8.875140190124512
    3. '۲' → logprob: -16.500139236450195
    4. '```' → logprob: -17.000139236450195
    5. '20' → logprob: -17.562639236450195
    6. '²' → logprob: -17.687639236450195
    7. '   ' → logprob: -17.937639236450195
    8. '２' → logprob: -18.562639236450195
    9. '1' → logprob: -18.687639236450195
    10. '0' → logprob: -18.812639236450195

Token 410: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.52919222577475e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.62507438659668
    4. '```' → logprob: -16.75007438659668
    5. '{' → logprob: -17.50007438659668
    6. '  ' → logprob: -17.68757438659668
    7. '۲' → logprob: -17.75007438659668
    8. '4' → logprob: -17.81257438659668
    9. '22' → logprob: -17.93757438659668
    10. '²' → logprob: -18.06257438659668

Token 411: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001637300301808864
    2. ' )' → logprob: -8.750164031982422
    3. ')
' → logprob: -13.375164031982422
    4. '}' → logprob: -13.875164031982422
    5. '   ' → logprob: -14.250164031982422
    6. ')}' → logprob: -14.375164031982422
    7. '       ' → logprob: -15.000164031982422
    8. '())' → logprob: -15.125164031982422
    9. ')return' → logprob: -15.125164031982422
    10. '()' → logprob: -15.500164031982422

Token 412: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35834383964538574
    2. '<|end|>' → logprob: -1.2333438396453857
    3. ')' → logprob: -5.358344078063965
    4. '

' → logprob: -6.358344078063965
    5. 'class' → logprob: -6.608344078063965
    6. '<|end|>' → logprob: -6.858344078063965
    7. '```' → logprob: -8.483344078063965
    8. ' ' → logprob: -8.983344078063965
    9. 'newline' → logprob: -8.983344078063965
    10. '   ' → logprob: -9.733344078063965

Token 413: ' =====' (ID: 71502)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00937824510037899
    2. '
' → logprob: -4.759378433227539
    3. ' class' → logprob: -7.759378433227539
    4. '

' → logprob: -8.509378433227539
    5. '<|end|>' → logprob: -9.509378433227539
    6. '#' → logprob: -10.384378433227539
    7. '```' → logprob: -12.384378433227539
    8. 'import' → logprob: -12.509378433227539
    9. 'from' → logprob: -12.759378433227539
    10. ' ' → logprob: -12.759378433227539

Token 414: '==' (ID: 560)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.011619840748608112
    2. ' class' → logprob: -4.761620044708252
    3. '==' → logprob: -7.011620044708252
    4. 'abstract' → logprob: -7.386620044708252
    5. '#' → logprob: -7.636620044708252
    6. '
' → logprob: -8.261619567871094
    7. '

' → logprob: -8.261619567871094
    8. ' =' → logprob: -9.636619567871094
    9. '```' → logprob: -9.886619567871094
    10. '=' → logprob: -10.011619567871094

Token 415: ' Input' (ID: 10090)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.12008736282587051
    2. '#' → logprob: -3.6200873851776123
    3. ' class' → logprob: -3.9950873851776123
    4. 'Projectile' → logprob: -4.745087146759033
    5. 'Abstract' → logprob: -4.870087146759033
    6. ' Projectile' → logprob: -4.870087146759033
    7. 'abstract' → logprob: -4.995087146759033
    8. ' Bullet' → logprob: -5.495087146759033
    9. ' Physics' → logprob: -5.620087146759033
    10. ' Abstract' → logprob: -5.620087146759033

Token 416: ' Data' (ID: 4833)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.046964604407548904
    2. '<|end|>' → logprob: -3.796964645385742
    3. '#' → logprob: -4.796964645385742
    4. 's' → logprob: -5.921964645385742
    5. 'data' → logprob: -6.296964645385742
    6. '
' → logprob: -6.296964645385742
    7. '<|end|>' → logprob: -6.671964645385742
    8. '

' → logprob: -6.796964645385742
    9. '_data' → logprob: -7.171964645385742
    10. 'Data' → logprob: -7.171964645385742

Token 417: ' Ab' (ID: 3483)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5579128265380859
    2. '

' → logprob: -0.9329128265380859
    3. '
' → logprob: -3.432912826538086
    4. '@dat' → logprob: -6.807912826538086
    5. 'from' → logprob: -7.432912826538086
    6. '<|end|>' → logprob: -9.557912826538086
    7. ' class' → logprob: -9.807912826538086
    8. '


' → logprob: -11.057912826538086
    9. '```' → logprob: -11.307912826538086
    10. 's' → logprob: -11.557912826538086

Token 418: 'stra' (ID: 14867)
  Prédit: 'stract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stract' → logprob: -0.07387910783290863
    2. 'straction' → logprob: -2.6988790035247803
    3. 'stra' → logprob: -6.698879241943359
    4. 's' → logprob: -7.073879241943359
    5. '#' → logprob: -7.198879241943359
    6. 'class' → logprob: -7.323879241943359
    7. 'str' → logprob: -7.823879241943359
    8. 'STRACT' → logprob: -10.69887924194336
    9. 'struction' → logprob: -11.69887924194336
    10. 'st' → logprob: -12.44887924194336

Token 419: 'ctions' (ID: 2620)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.003555289236828685
    2. 'ction' → logprob: -5.7535552978515625
    3. 'ctions' → logprob: -8.128555297851562
    4. 'cts' → logprob: -9.753555297851562
    5. '#' → logprob: -11.253555297851562
    6. 'class' → logprob: -11.878555297851562
    7. '
' → logprob: -13.628555297851562
    8. 'act' → logprob: -14.378555297851562
    9. 'stract' → logprob: -14.378555297851562
    10. '```' → logprob: -14.878555297851562

Token 420: ' =====' (ID: 71502)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5822700262069702
    2. '

' → logprob: -0.8322700262069702
    3. '
' → logprob: -5.08227014541626
    4. '@dat' → logprob: -10.082269668579102
    5. 'from' → logprob: -11.207269668579102
    6. ' class' → logprob: -11.207269668579102
    7. '<|end|>' → logprob: -11.332269668579102
    8. '<|end|>' → logprob: -11.582269668579102
    9. '


' → logprob: -12.957269668579102
    10. '<class' → logprob: -13.207269668579102

Token 421: '==' (ID: 560)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0013564289547502995
    2. '

' → logprob: -7.376356601715088
    3. 'from' → logprob: -7.376356601715088
    4. '
' → logprob: -9.75135612487793
    5. '@dat' → logprob: -10.37635612487793
    6. '```' → logprob: -12.37635612487793
    7. ' class' → logprob: -12.37635612487793
    8. '<|end|>' → logprob: -13.75135612487793
    9. '<class' → logprob: -14.00135612487793
    10. '#' → logprob: -14.00135612487793

Token 422: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.005803416948765516
    2. '

' → logprob: -5.88080358505249
    3. '
' → logprob: -6.00580358505249
    4. 'from' → logprob: -8.005803108215332
    5. '@dat' → logprob: -8.630803108215332
    6. ' class' → logprob: -11.755803108215332
    7. 'import' → logprob: -12.755803108215332
    8. '@class' → logprob: -13.755803108215332
    9. '<class' → logprob: -13.880803108215332
    10. '#' → logprob: -13.880803108215332

Token 423: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.003682021051645279
    2. '
' → logprob: -6.0036821365356445
    3. 'from' → logprob: -7.2536821365356445
    4. '

' → logprob: -7.7536821365356445
    5. '@dat' → logprob: -10.003682136535645
    6. ' class' → logprob: -11.378682136535645
    7. '<|end|>' → logprob: -12.628682136535645
    8. 'import' → logprob: -12.878682136535645
    9. '<class' → logprob: -13.128682136535645
    10. '```' → logprob: -13.128682136535645

Token 424: ' Ob' (ID: 3057)
  Prédit: 'Obstacle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Obstacle' → logprob: -0.03575536608695984
    2. ' Ob' → logprob: -3.4107553958892822
    3. 'Trajectory' → logprob: -7.410755157470703
    4. 'Bullet' → logprob: -8.285755157470703
    5. 'ob' → logprob: -8.410755157470703
    6. 'Ob' → logprob: -8.660755157470703
    7. ' Bullet' → logprob: -8.910755157470703
    8. 'Projectile' → logprob: -8.910755157470703
    9. 'Target' → logprob: -9.785755157470703
    10. 'Shot' → logprob: -9.785755157470703

Token 425: 'stacle' (ID: 69123)
  Prédit: 'stacle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stacle' → logprob: -1.9361264946837764e-07
    2. 'stacles' → logprob: -16.75
    3. 'ject' → logprob: -17.5
    4. 'class' → logprob: -17.625
    5. 'stance' → logprob: -18.5
    6. 'Obstacle' → logprob: -18.875
    7. 'st' → logprob: -20.25
    8. 'stack' → logprob: -20.375
    9. ' obstacle' → logprob: -20.75
    10. 'stable' → logprob: -20.875

Token 426: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20144666731357574
    2. ':
' → logprob: -1.7014466524124146
    3. '(object' → logprob: -10.701446533203125
    4. '):' → logprob: -13.076446533203125
    5. '<|end|>' → logprob: -13.076446533203125
    6. '):
' → logprob: -13.201446533203125
    7. ':

' → logprob: -13.701446533203125
    8. '(Abstract' → logprob: -14.201446533203125
    9. '():
' → logprob: -14.201446533203125
    10. ':
' → logprob: -14.201446533203125

Token 427: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006408308399841189
    2. ':' → logprob: -7.625640869140625
    3. 'def' → logprob: -9.625640869140625
    4. ':
' → logprob: -9.875640869140625
    5. '  ' → logprob: -11.500640869140625
    6. ' def' → logprob: -11.625640869140625
    7. '    ' → logprob: -12.750640869140625
    8. '<|end|>' → logprob: -12.750640869140625
    9. '```' → logprob: -13.125640869140625
    10. ' ' → logprob: -13.125640869140625

Token 428: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4750499129295349
    2. '   ' → logprob: -1.2250499725341797
    3. 'def' (adapté à ' def') → logprob: -2.4750499725341797
    4. ' ' → logprob: -9.47504997253418
    5. '	def' → logprob: -10.35004997253418
    6. '  ' → logprob: -10.60004997253418
    7. '@dat' → logprob: -10.97504997253418
    8. '```' → logprob: -10.97504997253418
    9. '"""' → logprob: -10.97504997253418
    10. ' """' → logprob: -11.22504997253418

Token 429: ' __' (ID: 2516)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5893498659133911
    2. ':
' → logprob: -1.2143498659133911
    3. '   ' → logprob: -2.9643497467041016
    4. ' def' → logprob: -3.5893497467041016
    5. '__' → logprob: -3.8393497467041016
    6. '  ' → logprob: -4.964349746704102
    7. 'object' → logprob: -4.964349746704102
    8. ' ' → logprob: -5.214349746704102
    9. 'def' → logprob: -5.339349746704102
    10. '):
' → logprob: -5.589349746704102

Token 430: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -7.896309739408025e-07
    2. 'class' → logprob: -14.375000953674316
    3. 'name' → logprob: -17.125
    4. 'def' → logprob: -17.75
    5. ' init' → logprob: -17.875
    6. '```' → logprob: -17.875
    7. '
' → logprob: -18.25
    8. '`' → logprob: -19.0
    9. 'ini' → logprob: -19.375
    10. '   ' → logprob: -19.5

Token 431: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03820088878273964
    2. '__(' → logprob: -3.288200855255127
    3. ' (' → logprob: -8.913201332092285
    4. '(' → logprob: -11.038201332092285
    5. 'self' → logprob: -12.913201332092285
    6. '_(' → logprob: -13.163201332092285
    7. '__(
' → logprob: -13.288201332092285
    8. ' self' → logprob: -13.663201332092285
    9. '__' → logprob: -14.538201332092285
    10. '	self' → logprob: -15.413201332092285

Token 432: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.4987974029500037e-05
    2. ' self' → logprob: -10.625024795532227
    3. '(self' → logprob: -14.500024795532227
    4. ',self' → logprob: -17.375024795532227
    5. ',' → logprob: -18.250024795532227
    6. '	self' → logprob: -18.375024795532227
    7. '
' → logprob: -19.000024795532227
    8. 's' → logprob: -19.875024795532227
    9. 'position' → logprob: -20.000024795532227
    10. '0' → logprob: -20.000024795532227

Token 433: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009494528640061617
    2. 'self' → logprob: -7.125949382781982
    3. ' ,' → logprob: -8.87594985961914
    4. 'position' → logprob: -12.50094985961914
    5. ',self' → logprob: -14.12594985961914
    6. ' self' → logprob: -14.62594985961914
    7. '_,' → logprob: -15.62594985961914
    8. '__,' → logprob: -16.87594985961914
    9. '‌,' → logprob: -17.50094985961914
    10. '(self' → logprob: -17.75094985961914

Token 434: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.001171652227640152
    2. ' position' → logprob: -6.751171588897705
    3. '   ' → logprob: -14.751172065734863
    4. 'height' → logprob: -14.876172065734863
    5. '	position' → logprob: -14.876172065734863
    6. 'self' → logprob: -15.501172065734863
    7. ' ' → logprob: -16.001171112060547
    8. 'pos' → logprob: -17.376171112060547
    9. 'float' → logprob: -18.001171112060547
    10. '.position' → logprob: -18.376171112060547

Token 435: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008116515236906707
    2. ',' → logprob: -7.125811576843262
    3. ':int' → logprob: -12.250811576843262
    4. ' :' → logprob: -13.625811576843262
    5. '=' → logprob: -14.375811576843262
    6. ':,' → logprob: -14.875811576843262
    7. ' ,' → logprob: -16.250812530517578
    8. '_:' → logprob: -16.625812530517578
    9. '   ' → logprob: -17.750812530517578
    10. '=None' → logprob: -17.750812530517578

Token 436: ' int' (ID: 677)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.31338685750961304
    2. ' float' → logprob: -1.3133869171142578
    3. 'int' → logprob: -9.188386917114258
    4. ' int' → logprob: -11.188386917114258
    5. ',float' → logprob: -12.688386917114258
    6. '=float' → logprob: -12.813386917114258
    7. '	float' → logprob: -13.563386917114258
    8. '(float' → logprob: -13.688386917114258
    9. '<float' → logprob: -14.688386917114258
    10. 'flo' → logprob: -16.188386917114258

Token 437: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.572941179503687e-05
    2. ' ,' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.750045776367188
    4. '‌,' → logprob: -16.500045776367188
    5. ',
' → logprob: -17.375045776367188
    6. ':' → logprob: -17.500045776367188
    7. '_,' → logprob: -17.625045776367188
    8. ',float' → logprob: -17.750045776367188
    9. '       ' → logprob: -18.500045776367188
    10. '‍,' → logprob: -18.625045776367188

Token 438: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.038042064756155014
    2. ' height' → logprob: -3.2880420684814453
    3. '	height' → logprob: -15.288042068481445
    4. '   ' → logprob: -15.413042068481445
    5. '.height' → logprob: -16.663042068481445
    6. '(height' → logprob: -17.413042068481445
    7. ',height' → logprob: -17.413042068481445
    8. '
' → logprob: -17.538042068481445
    9. '高さ' → logprob: -17.538042068481445
    10. ' ' → logprob: -17.663042068481445

Token 439: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021929678041487932
    2. '):' → logprob: -6.127192974090576
    3. ':int' → logprob: -12.627192497253418
    4. ')' → logprob: -12.877192497253418
    5. '):
' → logprob: -13.377192497253418
    6. ',' → logprob: -15.127192497253418
    7. ' :' → logprob: -15.877192497253418
    8. '=' → logprob: -17.002193450927734
    9. ' ):' → logprob: -17.377193450927734
    10. '_:' → logprob: -17.377193450927734

Token 440: ' int' (ID: 677)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.452314168214798
    2. 'int' → logprob: -1.4523141384124756
    3. ' float' → logprob: -2.2023141384124756
    4. ' int' → logprob: -3.9523141384124756
    5. ')' → logprob: -11.452314376831055
    6. '=float' → logprob: -11.452314376831055
    7. ' ' → logprob: -11.827314376831055
    8. '	float' → logprob: -11.952314376831055
    9. '   ' → logprob: -12.077314376831055
    10. '(float' → logprob: -12.827314376831055

Token 441: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006784996949136257
    2. '):
' → logprob: -5.006784915924072
    3. ')' → logprob: -9.63178539276123
    4. '):
' → logprob: -12.63178539276123
    5. ':' → logprob: -15.13178539276123
    6. '   ' → logprob: -15.50678539276123
    7. ' ):' → logprob: -15.75678539276123
    8. ',' → logprob: -16.381784439086914
    9. '):

' → logprob: -17.006784439086914
    10. ' ' → logprob: -18.881784439086914

Token 442: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016225760336965322
    2. 'self' → logprob: -6.501622676849365
    3. ' self' → logprob: -9.376622200012207
    4. '	' → logprob: -11.126622200012207
    5. ',' → logprob: -11.876622200012207
    6. ':' → logprob: -12.126622200012207
    7. '<|end|>' → logprob: -12.876622200012207
    8. '	self' → logprob: -13.376622200012207
    9. '   ' → logprob: -13.626622200012207
    10. '	   ' → logprob: -14.876622200012207

Token 443: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002510974183678627
    2. ' self' → logprob: -6.002511024475098
    3. '       ' → logprob: -10.252511024475098
    4. '   ' → logprob: -17.12751007080078
    5. '	self' → logprob: -17.25251007080078
    6. '
' → logprob: -19.62751007080078
    7. 'super' → logprob: -20.25251007080078
    8. '(self' → logprob: -20.62751007080078
    9. '        
' → logprob: -22.50251007080078
    10. ' ' → logprob: -22.87751007080078

Token 444: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.048663899302482605
    2. '.' → logprob: -3.048663854598999
    3. ' .' → logprob: -9.923664093017578
    4. '.pos' → logprob: -10.798664093017578
    5. 'position' → logprob: -12.798664093017578
    6. '.positions' → logprob: -13.673664093017578
    7. '.
' → logprob: -13.798664093017578
    8. '.height' → logprob: -14.423664093017578
    9. '.space' → logprob: -15.548664093017578
    10. ' =' → logprob: -16.048664093017578

Token 445: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004113900475203991
    2. ' =' → logprob: -5.504113674163818
    3. ',' → logprob: -10.254114151000977
    4. '=int' → logprob: -16.379114151000977
    5. ' ,' → logprob: -16.754114151000977
    6. '<|end|>' → logprob: -17.129114151000977
    7. ':' → logprob: -17.254114151000977
    8. ')' → logprob: -17.504114151000977
    9. '=
' → logprob: -17.879114151000977
    10. ' ' → logprob: -18.129114151000977

Token 446: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.31326186656951904
    2. 'position' → logprob: -1.313261866569519
    3. '	position' → logprob: -16.063261032104492
    4. '(position' → logprob: -17.563261032104492
    5. '[position' → logprob: -18.688261032104492
    6. 'int' → logprob: -19.063261032104492
    7. '.position' → logprob: -19.438261032104492
    8. 'pos' → logprob: -20.063261032104492
    9. ' int' → logprob: -21.188261032104492
    10. ' ' → logprob: -21.563261032104492

Token 447: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01731973886489868
    2. '
' → logprob: -4.517319679260254
    3. '<|end|>' → logprob: -6.267319679260254
    4. 'self' → logprob: -6.392319679260254
    5. ' =' → logprob: -6.517319679260254
    6. '=' → logprob: -7.767319679260254
    7. ',' → logprob: -7.767319679260254
    8. ' self' → logprob: -8.517319679260254
    9. ',
' → logprob: -10.392319679260254
    10. '	' → logprob: -10.642319679260254

Token 448: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014121392741799355
    2. '
' → logprob: -7.2514119148254395
    3. 'self' → logprob: -7.6264119148254395
    4. ',' → logprob: -9.626412391662598
    5. ' self' → logprob: -9.626412391662598
    6. '<|end|>' → logprob: -10.126412391662598
    7. ',
' → logprob: -11.251412391662598
    8. ' =' → logprob: -11.751412391662598
    9. '   ' → logprob: -12.626412391662598
    10. '=' → logprob: -12.626412391662598

Token 449: ' self' (ID: 1051)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.011048289015889168
    2. ' height' → logprob: -4.511048316955566
    3. '       ' → logprob: -15.636048316955566
    4. '   ' → logprob: -15.761048316955566
    5. 'self' (adapté à ' self') → logprob: -17.13604736328125
    6. '.height' → logprob: -17.38604736328125
    7. 'float' → logprob: -17.51104736328125
    8. '	height' → logprob: -17.88604736328125
    9. ' ' → logprob: -18.13604736328125
    10. '
' → logprob: -18.76104736328125

Token 450: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.004103096667677164
    2. '.' → logprob: -5.504103183746338
    3. ' .' → logprob: -11.00410270690918
    4. 'height' → logprob: -12.12910270690918
    5. '.position' → logprob: -13.37910270690918
    6. '.
' → logprob: -14.75410270690918
    7. '.Height' → logprob: -15.75410270690918
    8. '.he' → logprob: -15.87910270690918
    9. '.width' → logprob: -16.50410270690918
    10. ' height' → logprob: -17.00410270690918

Token 451: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3188595175743103
    2. ' =' → logprob: -1.318859577178955
    3. '<|end|>' → logprob: -5.193859577178955
    4. ' ' → logprob: -11.443859100341797
    5. ')' → logprob: -11.693859100341797
    6. '<|end|>' → logprob: -12.568859100341797
    7. ':' → logprob: -13.443859100341797
    8. '.' → logprob: -13.568859100341797
    9. '
' → logprob: -14.068859100341797
    10. ' =
' → logprob: -14.068859100341797

Token 452: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.01815006136894226
    2. ' height' → logprob: -4.0181498527526855
    3. 'float' → logprob: -15.768150329589844
    4. ' ' → logprob: -17.768150329589844
    5. '   ' → logprob: -17.893150329589844
    6. '(height' → logprob: -18.268150329589844
    7. '	height' → logprob: -18.643150329589844
    8. ' float' → logprob: -19.018150329589844
    9. 'int' → logprob: -19.268150329589844
    10. '.height' → logprob: -19.643150329589844

Token 453: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0421307310461998
    2. '<|end|>' → logprob: -3.292130708694458
    3. '

' → logprob: -5.542130947113037
    4. 'class' → logprob: -9.917130470275879
    5. '<|end|>' → logprob: -10.042130470275879
    6. '


' → logprob: -10.417130470275879
    7. '
    
' → logprob: -12.042130470275879
    8. '#' → logprob: -12.042130470275879
    9. '```' → logprob: -12.042130470275879
    10. '\n' → logprob: -12.167130470275879

Token 454: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.154845118522644
    2. '<|end|>' → logprob: -1.279845118522644
    3. '#' → logprob: -1.779845118522644
    4. '   ' → logprob: -2.5298452377319336
    5. 'def' → logprob: -2.6548452377319336
    6. '
' → logprob: -3.4048452377319336
    7. 'from' → logprob: -3.6548452377319336
    8. '<|end|>' → logprob: -4.529845237731934
    9. '@' → logprob: -5.154845237731934
    10. ')' → logprob: -6.279845237731934

Token 455: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.009857137687504292
    2. ' def' → logprob: -5.259857177734375
    3. '@' → logprob: -6.384857177734375
    4. 'class' → logprob: -6.759857177734375
    5. '@property' → logprob: -7.384857177734375
    6. '
' → logprob: -8.009857177734375
    7. '#' → logprob: -8.259857177734375
    8. '<|end|>' → logprob: -9.134857177734375
    9. '

' → logprob: -9.384857177734375
    10. 'from' → logprob: -9.509857177734375

Token 456: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1665775626897812
    2. '__' → logprob: -2.0415775775909424
    3. ' def' → logprob: -3.7915775775909424
    4. '_repr' → logprob: -7.916577339172363
    5. 'repr' → logprob: -8.541577339172363
    6. 'def' → logprob: -8.541577339172363
    7. ' ' → logprob: -8.916577339172363
    8. ' repr' → logprob: -9.416577339172363
    9. ' ' → logprob: -10.791577339172363
    10. ' is' → logprob: -10.916577339172363

Token 457: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.7645895481109619
    2. 'eq' → logprob: -1.014589548110962
    3. 'lt' → logprob: -1.764589548110962
    4. 'str' → logprob: -7.389589309692383
    5. 'hash' → logprob: -10.014589309692383
    6. 'init' → logprob: -12.639589309692383
    7. 'gt' → logprob: -14.639589309692383
    8. 'le' → logprob: -15.139589309692383
    9. 'rep' → logprob: -16.264589309692383
    10. 'ne' → logprob: -16.514589309692383

Token 458: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0006099864258430898
    2. '__' → logprob: -7.625609874725342
    3. '__(
' → logprob: -9.7506103515625
    4. '__('' → logprob: -10.0006103515625
    5. '(self' → logprob: -11.1256103515625
    6. '__("' → logprob: -13.0006103515625
    7. '__((' → logprob: -14.1256103515625
    8. '__(*' → logprob: -15.3756103515625
    9. '(' → logprob: -15.7506103515625
    10. '_(' → logprob: -16.7506103515625

Token 459: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.802049756515771e-05
    2. ')' → logprob: -9.750067710876465
    3. ' self' → logprob: -11.625067710876465
    4. '(self' → logprob: -14.750067710876465
    5. '	self' → logprob: -15.125067710876465
    6. '):
' → logprob: -16.75006866455078
    7. '):' → logprob: -16.87506866455078
    8. 's' → logprob: -17.75006866455078
    9. '{' → logprob: -18.12506866455078
    10. '
' → logprob: -18.37506866455078

Token 460: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.8180592060089111
    2. 'self' → logprob: -1.4430592060089111
    3. '__(' → logprob: -1.6930592060089111
    4. '__)' → logprob: -2.318059206008911
    5. '(self' → logprob: -4.068058967590332
    6. ')' → logprob: -4.443058967590332
    7. '__('' → logprob: -5.193058967590332
    8. ')__' → logprob: -6.318058967590332
    9. '):' → logprob: -7.318058967590332
    10. '):
' → logprob: -7.318058967590332

Token 461: '       ' (ID: 309)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5940148234367371
    2. '       ' → logprob: -1.0940148830413818
    3. ' f' → logprob: -2.969014883041382
    4. 'return' → logprob: -2.969014883041382
    5. ' return' → logprob: -4.719014644622803
    6. '   ' → logprob: -7.344014644622803
    7. 'self' → logprob: -7.344014644622803
    8. '           ' → logprob: -10.719015121459961
    9. ' self' → logprob: -10.969015121459961
    10. '{return' → logprob: -11.719015121459961

Token 462: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06689977645874023
    2. ' return' → logprob: -2.8168997764587402
    3. '       ' → logprob: -5.31689977645874
    4. '           ' → logprob: -11.941900253295898
    5. 'f' → logprob: -12.691900253295898
    6. '	return' → logprob: -13.691900253295898
    7. '   ' → logprob: -14.441900253295898
    8. ' f' → logprob: -14.941900253295898
    9. '{return' → logprob: -15.441900253295898
    10. '
' → logprob: -16.0669002532959

Token 463: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00861468818038702
    2. ' f' → logprob: -4.758614540100098
    3. '	f' → logprob: -16.508615493774414
    4. ' ' → logprob: -17.008615493774414
    5. '(f' → logprob: -17.383615493774414
    6. ''f' → logprob: -17.508615493774414
    7. '"' → logprob: -18.508615493774414
    8. ''' → logprob: -18.883615493774414
    9. '

' → logprob: -19.258615493774414
    10. 'F' → logprob: -19.383615493774414

Token 464: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0065669952891767025
    2. '"' → logprob: -5.506567001342773
    3. 'Ob' → logprob: -6.756567001342773
    4. ''' → logprob: -7.631567001342773
    5. '(f' → logprob: -7.631567001342773
    6. ' f' → logprob: -8.381567001342773
    7. '`' → logprob: -9.381567001342773
    8. 'Obstacle' → logprob: -10.881567001342773
    9. 'ob' → logprob: -12.881567001342773
    10. 'F' → logprob: -13.256567001342773

Token 465: 'Obstacle' (ID: 134296)
  Prédit: 'Obstacle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Obstacle' → logprob: -2.6537622034084052e-05
    2. 'Ob' → logprob: -10.75002670288086
    3. 'Obs' → logprob: -12.25002670288086
    4. 'f' → logprob: -16.12502670288086
    5. ''' → logprob: -16.75002670288086
    6. '<' → logprob: -17.37502670288086
    7. 'Observable' → logprob: -18.12502670288086
    8. ' Ob' → logprob: -18.12502670288086
    9. 'ob' → logprob: -18.25002670288086
    10. '{' → logprob: -18.25002670288086

Token 466: '(pos' (ID: 24566)
  Prédit: '(position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(position' → logprob: -0.007126657757908106
    2. '({' → logprob: -5.132126808166504
    3. '(pos' → logprob: -7.632126808166504
    4. '(f' → logprob: -7.632126808166504
    5. '(Position' → logprob: -9.132126808166504
    6. '(' → logprob: -9.257126808166504
    7. '(self' → logprob: -10.882126808166504
    8. '(`' → logprob: -13.757126808166504
    9. ' (' → logprob: -14.007126808166504
    10. '(p' → logprob: -14.007126808166504

Token 467: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.014326624572277069
    2. 'ition' → logprob: -4.264326572418213
    3. '{' → logprob: -8.764327049255371
    4. 'ision' → logprob: -13.264327049255371
    5. 'ession' → logprob: -14.014327049255371
    6. 'osition' → logprob: -14.264327049255371
    7. 'otion' → logprob: -14.514327049255371
    8. '={
' → logprob: -14.889327049255371
    9. ',{' → logprob: -15.014327049255371
    10. '{i' → logprob: -15.139327049255371

Token 468: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005532711511477828
    2. '{' → logprob: -7.500553131103516
    3. ' self' → logprob: -15.500553131103516
    4. '(self' → logprob: -20.500553131103516
    5. '
' → logprob: -20.625553131103516
    6. '{
' → logprob: -20.750553131103516
    7. '	self' → logprob: -20.875553131103516
    8. '=self' → logprob: -22.375553131103516
    9. ',self' → logprob: -23.375553131103516
    10. '0' → logprob: -23.500553131103516

Token 469: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.0022653979249298573
    2. 'osition' → logprob: -6.627265453338623
    3. 'position' → logprob: -7.502265453338623
    4. 'self' → logprob: -8.002264976501465
    5. 'ition' → logprob: -10.877264976501465
    6. 's' → logprob: -11.252264976501465
    7. 'ion' → logprob: -12.252264976501465
    8. '.' → logprob: -12.252264976501465
    9. '.s' → logprob: -12.752264976501465
    10. 'tion' → logprob: -12.752264976501465

Token 470: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011734402505680919
    2. '},' → logprob: -6.751173496246338
    3. ',
' → logprob: -13.75117301940918
    4. ' ,' → logprob: -13.87617301940918
    5. '}' → logprob: -14.37617301940918
    6. '),' → logprob: -15.12617301940918
    7. '‌,' → logprob: -15.87617301940918
    8. ',height' → logprob: -15.87617301940918
    9. ',

' → logprob: -17.37617301940918
    10. ',",' → logprob: -17.87617301940918

Token 471: ' h' (ID: 312)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.14393192529678345
    2. ' height' → logprob: -2.3939318656921387
    3. 'ht' → logprob: -3.6439318656921387
    4. ' h' → logprob: -4.643931865692139
    5. 'h' → logprob: -5.143931865692139
    6. ' ht' → logprob: -6.768931865692139
    7. 'hi' → logprob: -11.893932342529297
    8. 'he' → logprob: -12.268932342529297
    9. '{' → logprob: -12.768932342529297
    10. ',' → logprob: -13.018932342529297

Token 472: '={' (ID: 1693)
  Prédit: 'eight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eight' → logprob: -0.02990344725549221
    2. '={' → logprob: -3.5299034118652344
    3. 'e' → logprob: -9.154903411865234
    4. ' eight' → logprob: -10.904903411865234
    5. '=' → logprob: -11.904903411865234
    6. 't' → logprob: -11.904903411865234
    7. '{' → logprob: -12.279903411865234
    8. '=e' → logprob: -12.529903411865234
    9. 'ight' → logprob: -13.029903411865234
    10. 'Eight' → logprob: -13.654903411865234

Token 473: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007104054093360901
    2. '{' → logprob: -7.250710487365723
    3. ' self' → logprob: -14.500710487365723
    4. '{
' → logprob: -18.375709533691406
    5. '	self' → logprob: -19.000709533691406
    6. '   ' → logprob: -19.875709533691406
    7. '(self' → logprob: -19.875709533691406
    8. '=self' → logprob: -20.625709533691406
    9. '
' → logprob: -20.875709533691406
    10. '[self' → logprob: -21.500709533691406

Token 474: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.0004390134708955884
    2. 'height' → logprob: -8.000438690185547
    3. 'ight' → logprob: -9.250438690185547
    4. 'eight' → logprob: -12.125438690185547
    5. '.' → logprob: -14.375438690185547
    6. 'e' → logprob: -15.250438690185547
    7. '	height' → logprob: -15.375438690185547
    8. '.he' → logprob: -15.500438690185547
    9. '}' → logprob: -15.750438690185547
    10. 'ght' → logprob: -15.875438690185547

Token 475: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.006035330705344677
    2. ')"' → logprob: -5.256035327911377
    3. ')' → logprob: -7.256035327911377
    4. ')}' → logprob: -9.756035804748535
    5. '}"' → logprob: -11.256035804748535
    6. '))' → logprob: -11.881035804748535
    7. ' })' → logprob: -12.381035804748535
    8. '}")' → logprob: -12.631035804748535
    9. ')")' → logprob: -12.631035804748535
    10. ')`' → logprob: -13.131035804748535

Token 476: '"

' (ID: 2678)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1154240071773529
    2. '<|end|>' → logprob: -2.3654239177703857
    3. '
' → logprob: -5.365424156188965
    4. '")' → logprob: -5.490424156188965
    5. '"' → logprob: -5.615424156188965
    6. '}' → logprob: -6.865424156188965
    7. '```' → logprob: -7.490424156188965
    8. '<|end|>' → logprob: -7.740424156188965
    9. '\n' → logprob: -8.740424156188965
    10. ')"' → logprob: -9.365424156188965

Token 477: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.17990127205848694
    2. '
' → logprob: -1.9299012422561646
    3. '

' → logprob: -4.304901123046875
    4. '#' → logprob: -5.304901123046875
    5. '<|end|>' → logprob: -7.179901123046875
    6. '<|end|>' → logprob: -9.304901123046875
    7. '


' → logprob: -9.429901123046875
    8. ' class' → logprob: -10.179901123046875
    9. '



' → logprob: -11.804901123046875
    10. '  
' → logprob: -12.054901123046875

Token 478: ' Problem' (ID: 26113)
  Prédit: 'Target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Target' → logprob: -0.09117089211940765
    2. 'Shot' → logprob: -4.466170787811279
    3. 'Range' → logprob: -4.966170787811279
    4. 'Trajectory' → logprob: -4.966170787811279
    5. 'Segment' → logprob: -5.091170787811279
    6. 'Test' → logprob: -5.091170787811279
    7. 'Bullet' → logprob: -5.341170787811279
    8. 'Platform' → logprob: -5.466170787811279
    9. ' Target' → logprob: -5.466170787811279
    10. 'Query' → logprob: -6.091170787811279

Token 479: 'Input' (ID: 3275)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6398564577102661
    2. ':' → logprob: -0.7648564577102661
    3. 'Input' → logprob: -5.764856338500977
    4. 'Definition' → logprob: -7.014856338500977
    5. 'Statement' → logprob: -7.139856338500977
    6. 'Solver' → logprob: -7.389856338500977
    7. 'Data' → logprob: -7.639856338500977
    8. '(' → logprob: -7.889856338500977
    9. 'Scenario' → logprob: -8.764856338500977
    10. 'Problem' → logprob: -8.764856338500977

Token 480: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007711800746619701
    2. ':
' → logprob: -4.882711887359619
    3. '(' → logprob: -9.882711410522461
    4. '(List' → logprob: -10.757711410522461
    5. '(object' → logprob: -11.632711410522461
    6. '(Abstract' → logprob: -12.007711410522461
    7. ':

' → logprob: -12.257711410522461
    8. '(list' → logprob: -12.882711410522461
    9. '):' → logprob: -13.132711410522461
    10. '<|end|>' → logprob: -13.382711410522461

Token 481: '   ' (ID: 271)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18080566823482513
    2. ':' → logprob: -1.8058056831359863
    3. '   ' → logprob: -7.055805683135986
    4. '):
' → logprob: -9.430805206298828
    5. '(List' → logprob: -10.555805206298828
    6. '(object' → logprob: -10.805805206298828
    7. 'def' → logprob: -10.805805206298828
    8. '(' → logprob: -10.930805206298828
    9. ':def' → logprob: -12.180805206298828
    10. ':

' → logprob: -12.305805206298828

Token 482: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06041344627737999
    2. '   ' → logprob: -3.310413360595703
    3. ' def' → logprob: -3.935413360595703
    4. ':
' → logprob: -6.935413360595703
    5. 'class' → logprob: -7.435413360595703
    6. ':' → logprob: -7.685413360595703
    7. '__' → logprob: -8.185413360595703
    8. 'List' → logprob: -9.935413360595703
    9. '
' → logprob: -9.935413360595703
    10. '	def' → logprob: -10.060413360595703

Token 483: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4928416311740875
    2. 'init' → logprob: -1.1178416013717651
    3. 'def' → logprob: -3.8678417205810547
    4. 'classmethod' → logprob: -3.8678417205810547
    5. 'staticmethod' → logprob: -4.742841720581055
    6. ' __' → logprob: -5.367841720581055
    7. ' def' → logprob: -6.492841720581055
    8. '___' → logprob: -7.242841720581055
    9. '```' → logprob: -7.242841720581055
    10. '_init' → logprob: -7.242841720581055

Token 484: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'new' → logprob: -17.125
    3. 'repr' → logprob: -19.0
    4. 'ini' → logprob: -19.5
    5. ' init' → logprob: -19.5
    6. 'int' → logprob: -19.75
    7. '```' → logprob: -20.125
    8. '_init' → logprob: -20.25
    9. 'def' → logprob: -20.625
    10. 'inite' → logprob: -21.375

Token 485: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.10684936493635178
    2. '(self' → logprob: -2.606849431991577
    3. '__(
' → logprob: -3.606849431991577
    4. 'self' → logprob: -8.356849670410156
    5. '(' → logprob: -9.356849670410156
    6. '(
' → logprob: -10.106849670410156
    7. '<>(' → logprob: -10.856849670410156
    8. '
' → logprob: -11.731849670410156
    9. '>(' → logprob: -11.856849670410156
    10. '_(' → logprob: -11.981849670410156

Token 486: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.3458322731312364e-06
    2. ' self' → logprob: -12.125007629394531
    3. '       ' → logprob: -13.625007629394531
    4. '
' → logprob: -15.125007629394531
    5. '   ' → logprob: -16.12500762939453
    6. '(self' → logprob: -16.12500762939453
    7. ',' → logprob: -16.12500762939453
    8. ',self' → logprob: -17.25000762939453
    9. '	self' → logprob: -17.75000762939453
    10. '0' → logprob: -18.00000762939453

Token 487: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20877893269062042
    2. 'self' → logprob: -1.708778977394104
    3. '(self' → logprob: -4.9587788581848145
    4. '__(' → logprob: -9.208779335021973
    5. ',self' → logprob: -9.458779335021973
    6. ',
' → logprob: -10.333779335021973
    7. ' self' → logprob: -10.708779335021973
    8. '
' → logprob: -10.958779335021973
    9. '__(
' → logprob: -11.333779335021973
    10. '__,' → logprob: -11.333779335021973

Token 488: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.9786317944526672
    2. 'ob' → logprob: -2.1036317348480225
    3. 'max' → logprob: -2.6036317348480225
    4. 'l' → logprob: -2.9786317348480225
    5. 'dist' → logprob: -3.3536317348480225
    6. 'L' → logprob: -3.4786317348480225
    7. 'total' → logprob: -3.4786317348480225
    8. 'length' → logprob: -3.6036317348480225
    9. 'D' → logprob: -3.7286317348480225
    10. 'n' → logprob: -3.8536317348480225

Token 489: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000206401280593127
    2. '_to' → logprob: -8.875205993652344
    3. ':int' → logprob: -10.125205993652344
    4. ',' → logprob: -10.750205993652344
    5. ' :' → logprob: -12.625205993652344
    6. 'to' → logprob: -13.875205993652344
    7. '_:' → logprob: -14.875205993652344
    8. '_target' → logprob: -15.750205993652344
    9. '   ' → logprob: -17.125205993652344
    10. ':,' → logprob: -17.375205993652344

Token 490: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.033825963735580444
    2. ' int' → logprob: -3.4088258743286133
    3. 'float' → logprob: -8.908825874328613
    4. ':int' → logprob: -10.908825874328613
    5. ' float' → logprob: -11.908825874328613
    6. '[int' → logprob: -12.158825874328613
    7. '=int' → logprob: -12.283825874328613
    8. ')' → logprob: -13.283825874328613
    9. ':' → logprob: -13.408825874328613
    10. ',' → logprob: -13.408825874328613

Token 491: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.251091377227567e-05
    2. ' ,' → logprob: -10.250042915344238
    3. ',
' → logprob: -12.375042915344238
    4. ')' → logprob: -14.250042915344238
    5. '):' → logprob: -14.375042915344238
    6. '   ' → logprob: -14.875042915344238
    7. ':' → logprob: -15.250042915344238
    8. ',

' → logprob: -15.625042915344238
    9. ',d' → logprob: -16.125041961669922
    10. ',
' → logprob: -16.250041961669922

Token 492: ' obstacles' (ID: 46430)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.02303978055715561
    2. 'max' → logprob: -4.273039817810059
    3. ' obstacles' → logprob: -5.648039817810059
    4. 'initial' → logprob: -6.648039817810059
    5. 'velocity' → logprob: -7.023039817810059
    6. 'height' → logprob: -7.523039817810059
    7. '   ' → logprob: -8.023039817810059
    8. 'num' → logprob: -8.148039817810059
    9. 'maximum' → logprob: -8.148039817810059
    10. 'start' → logprob: -8.398039817810059

Token 493: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.896309739408025e-07
    2. '_:' → logprob: -14.750000953674316
    3. '):' → logprob: -16.25
    4. ',' → logprob: -16.625
    5. '=' → logprob: -16.625
    6. '```' → logprob: -17.25
    7. ' :' → logprob: -17.875
    8. 's' → logprob: -18.5
    9. '':' → logprob: -18.625
    10. '}:' → logprob: -19.25

Token 494: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0015040287980809808
    2. ' List' → logprob: -6.501503944396973
    3. '[List' → logprob: -14.001503944396973
    4. 'list' → logprob: -14.626503944396973
    5. '	List' → logprob: -15.501503944396973
    6. '   ' → logprob: -16.37650489807129
    7. ' ' → logprob: -16.75150489807129
    8. ')' → logprob: -18.00150489807129
    9. '`' → logprob: -18.25150489807129
    10. '```' → logprob: -18.62650489807129

Token 495: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00015860427811276168
    2. '['' → logprob: -8.750158309936523
    3. '=' → logprob: -17.750158309936523
    4. ')' → logprob: -17.750158309936523
    5. '[
' → logprob: -17.750158309936523
    6. '```' → logprob: -17.750158309936523
    7. '[int' → logprob: -17.750158309936523
    8. '):
' → logprob: -18.125158309936523
    9. '	' → logprob: -18.750158309936523
    10. 'Obstacle' → logprob: -18.750158309936523

Token 496: 'Obstacle' (ID: 134296)
  Prédit: 'Obstacle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Obstacle' → logprob: -0.00022213248303160071
    2. '[' → logprob: -8.500222206115723
    3. '['' → logprob: -11.000222206115723
    4. ''' → logprob: -13.750222206115723
    5. '[int' → logprob: -15.000222206115723
    6. ')' → logprob: -16.125221252441406
    7. '`' → logprob: -16.500221252441406
    8. 'ob' → logprob: -17.000221252441406
    9. '["' → logprob: -17.250221252441406
    10. 'Ob' → logprob: -17.750221252441406

Token 497: '],' (ID: 2155)
  Prédit: ']):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.16482315957546234
    2. ']):' → logprob: -1.9148231744766235
    3. '):
' → logprob: -5.914823055267334
    4. '):' → logprob: -6.914823055267334
    5. ']' → logprob: -7.914823055267334
    6. '])' → logprob: -8.539823532104492
    7. '']):
' → logprob: -8.664823532104492
    8. ')' → logprob: -9.539823532104492
    9. ',' → logprob: -10.039823532104492
    10. '],' → logprob: -10.289823532104492

Token 498: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.23194852471351624
    2. 'velocity' → logprob: -2.6069486141204834
    3. 'initial' → logprob: -3.2319486141204834
    4. ' max' → logprob: -3.6069486141204834
    5. 'speed' → logprob: -4.231948375701904
    6. 'v' → logprob: -4.481948375701904
    7. 'start' → logprob: -4.981948375701904
    8. 'min' → logprob: -5.356948375701904
    9. 'bullet' → logprob: -5.981948375701904
    10. 'maximum' → logprob: -6.106948375701904

Token 499: '_b' (ID: 1535)
  Prédit: '_velocity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_velocity' → logprob: -0.37785905599594116
    2. '_speed' → logprob: -1.252859115600586
    3. '_height' → logprob: -3.877859115600586
    4. '_v' → logprob: -5.877859115600586
    5. '_angle' → logprob: -6.752859115600586
    6. 'velocity' → logprob: -7.252859115600586
    7. '_vel' → logprob: -7.377859115600586
    8. '_initial' → logprob: -7.627859115600586
    9. 'speed' → logprob: -7.752859115600586
    10. 'v' → logprob: -7.877859115600586

Token 500: 'ounces' (ID: 52219)
  Prédit: 'ul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -0.530388593673706
    2. 'ullet' → logprob: -0.905388593673706
    3. 'ounces' → logprob: -5.780388832092285
    4. 'all' → logprob: -7.530388832092285
    5. 'v' → logprob: -7.655388832092285
    6. 'u' → logprob: -7.780388832092285
    7. 'velocity' → logprob: -8.280388832092285
    8. 'y' → logprob: -8.280388832092285
    9. 'ase' → logprob: -8.405388832092285
    10. 'ar' → logprob: -8.530388832092285

Token 501: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002346488763578236
    2. ':int' → logprob: -8.750234603881836
    3. ' :' → logprob: -10.500234603881836
    4. '=' → logprob: -10.625234603881836
    5. '_allowed' → logprob: -11.500234603881836
    6. '_:' → logprob: -12.500234603881836
    7. ')' → logprob: -12.875234603881836
    8. '_count' → logprob: -13.000234603881836
    9. '_per' → logprob: -14.000234603881836
    10. 'ed' → logprob: -14.375234603881836

Token 502: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.030622929334640503
    2. ' int' → logprob: -3.530622959136963
    3. '3' → logprob: -7.655622959136963
    4. ' ' → logprob: -9.530622482299805
    5. '2' → logprob: -9.780622482299805
    6. '10' → logprob: -9.905622482299805
    7. '[int' → logprob: -10.030622482299805
    8. '1' → logprob: -10.155622482299805
    9. '5' → logprob: -10.280622482299805
    10. '0' → logprob: -10.405622482299805

Token 503: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24138249456882477
    2. ':' → logprob: -2.241382598876953
    3. '):
' → logprob: -2.366382598876953
    4. ',' → logprob: -4.366382598876953
    5. '=' → logprob: -6.991382598876953
    6. '):
' → logprob: -8.241382598876953
    7. ')' → logprob: -8.741382598876953
    8. ':int' → logprob: -8.991382598876953
    9. ' ):' → logprob: -9.366382598876953
    10. '   ' → logprob: -10.491382598876953

Token 504: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00032831361750140786
    2. ':' → logprob: -9.125328063964844
    3. 'self' → logprob: -9.125328063964844
    4. ' self' → logprob: -10.000328063964844
    5. ',' → logprob: -10.125328063964844
    6. '   ' → logprob: -11.625328063964844
    7. ':
' → logprob: -12.500328063964844
    8. '<|end|>' → logprob: -12.750328063964844
    9. '
' → logprob: -13.375328063964844
    10. '	' → logprob: -13.500328063964844

Token 505: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00013154871703591198
    2. ' self' → logprob: -9.250131607055664
    3. '       ' → logprob: -10.250131607055664
    4. '	self' → logprob: -17.625131607055664
    5. '   ' → logprob: -18.875131607055664
    6. 'super' → logprob: -20.125131607055664
    7. '(self' → logprob: -20.375131607055664
    8. ' ' → logprob: -21.000131607055664
    9. '
' → logprob: -21.375131607055664
    10. '[self' → logprob: -21.750131607055664

Token 506: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -0.0032151418272405863
    2. '.' → logprob: -5.753215312957764
    3. 'distance' → logprob: -11.003214836120605
    4. '.dist' → logprob: -11.503214836120605
    5. ' .' → logprob: -11.753214836120605
    6. '.d' → logprob: -13.253214836120605
    7. '.Distance' → logprob: -15.003214836120605
    8. '.destination' → logprob: -15.503214836120605
    9. ' distance' → logprob: -15.878214836120605
    10. '.damage' → logprob: -17.003215789794922

Token 507: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407984733581543
    2. '=' → logprob: -0.9740798473358154
    3. ' ' → logprob: -13.599080085754395
    4. ':' → logprob: -13.849080085754395
    5. '   ' → logprob: -15.099080085754395
    6. '=int' → logprob: -15.974080085754395
    7. ',' → logprob: -16.974079132080078
    8. '<|end|>' → logprob: -17.224079132080078
    9. '  ' → logprob: -17.349079132080078
    10. '    ' → logprob: -17.599079132080078

Token 508: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.005233763717114925
    2. ' distance' → logprob: -5.2552337646484375
    3. '(distance' → logprob: -17.880233764648438
    4. 'dist' → logprob: -18.130233764648438
    5. '       ' → logprob: -19.130233764648438
    6. '
' → logprob: -19.630233764648438
    7. 'int' → logprob: -19.755233764648438
    8. '   ' → logprob: -20.130233764648438
    9. 'd' → logprob: -20.255233764648438
    10. 'Distance' → logprob: -20.505233764648438

Token 509: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005745929665863514
    2. '
' → logprob: -5.380745887756348
    3. '<|end|>' → logprob: -6.880745887756348
    4. ',' → logprob: -10.130745887756348
    5. ',
' → logprob: -11.005745887756348
    6. 'self' → logprob: -11.005745887756348
    7. '<|end|>' → logprob: -11.755745887756348
    8. '        
' → logprob: -12.505745887756348
    9. '   ' → logprob: -13.255745887756348
    10. ' =' → logprob: -14.005745887756348

Token 510: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015012944350019097
    2. '
' → logprob: -6.751501083374023
    3. '<|end|>' → logprob: -8.376501083374023
    4. 'self' → logprob: -9.751501083374023
    5. ',' → logprob: -11.001501083374023
    6. '	' → logprob: -11.376501083374023
    7. '   ' → logprob: -12.876501083374023
    8. ',
' → logprob: -13.251501083374023
    9. '        
' → logprob: -13.376501083374023
    10. ' self' → logprob: -13.376501083374023

Token 511: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006761436816304922
    2. ' self' → logprob: -5.00676155090332
    3. '       ' → logprob: -10.00676155090332
    4. 'max' → logprob: -14.00676155090332
    5. '	self' → logprob: -16.63176155090332
    6. '   ' → logprob: -17.50676155090332
    7. '[self' → logprob: -17.50676155090332
    8. '(self' → logprob: -18.13176155090332
    9. ' max' → logprob: -18.13176155090332
    10. '0' → logprob: -18.50676155090332

Token 512: '.ob' (ID: 30768)
  Prédit: '.max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.1423257440328598
    2. '.ob' → logprob: -2.1423256397247314
    3. 'max' → logprob: -5.0173258781433105
    4. '.' → logprob: -5.2673258781433105
    5. '.maximum' → logprob: -6.1423258781433105
    6. ' .' → logprob: -7.8923258781433105
    7. 'ob' → logprob: -8.017325401306152
    8. '_max' → logprob: -9.142325401306152
    9. ' obstacles' → logprob: -9.267325401306152
    10. '_ob' → logprob: -9.642325401306152

Token 513: 'stacles' (ID: 143593)
  Prédit: 'stacles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stacles' → logprob: -0.002475777640938759
    2. 'acles' → logprob: -6.127475738525391
    3. 'st' → logprob: -8.75247573852539
    4. 's' → logprob: -9.87747573852539
    5. 'stacle' → logprob: -10.37747573852539
    6. 'stances' → logprob: -10.37747573852539
    7. 'ounces' → logprob: -12.37747573852539
    8. 'max' → logprob: -13.00247573852539
    9. 'stack' → logprob: -13.50247573852539
    10. 'b' → logprob: -13.62747573852539

Token 514: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1128259226679802
    2. '=' → logprob: -2.237825870513916
    3. ':' → logprob: -13.862826347351074
    4. ',' → logprob: -14.362826347351074
    5. '<|end|>' → logprob: -14.612826347351074
    6. '   ' → logprob: -14.987826347351074
    7. '=[]' → logprob: -15.237826347351074
    8. ' ' → logprob: -15.362826347351074
    9. '[' → logprob: -15.737826347351074
    10. ' is' → logprob: -16.237825393676758

Token 515: ' obstacles' (ID: 46430)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.10023859143257141
    2. ' obstacles' → logprob: -2.350238561630249
    3. ' ob' → logprob: -11.100238800048828
    4. '	ob' → logprob: -11.975238800048828
    5. ' obstáculos' → logprob: -13.225238800048828
    6. 'obs' → logprob: -13.350238800048828
    7. '(ob' → logprob: -13.725238800048828
    8. '   ' → logprob: -13.850238800048828
    9. 'max' → logprob: -13.975238800048828
    10. ' obst' → logprob: -14.100238800048828

Token 516: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006588232354260981
    2. 'self' → logprob: -7.375658988952637
    3. ' self' → logprob: -11.500658988952637
    4. ',' → logprob: -11.500658988952637
    5. '
' → logprob: -11.625658988952637
    6. '<|end|>' → logprob: -13.375658988952637
    7. '   ' → logprob: -14.250658988952637
    8. ',
' → logprob: -15.375658988952637
    9. '      ' → logprob: -16.37565803527832
    10. '.' → logprob: -16.50065803527832

Token 517: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022082125360611826
    2. 'self' → logprob: -8.625221252441406
    3. '
' → logprob: -10.375221252441406
    4. '<|end|>' → logprob: -12.250221252441406
    5. ',' → logprob: -13.500221252441406
    6. ' self' → logprob: -13.625221252441406
    7. '   ' → logprob: -14.125221252441406
    8. '        
' → logprob: -14.375221252441406
    9. '      ' → logprob: -14.750221252441406
    10. '	' → logprob: -15.250221252441406

Token 518: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.021196510642766953
    2. ' self' → logprob: -4.146196365356445
    3. '       ' → logprob: -5.271196365356445
    4. '
' → logprob: -11.896196365356445
    5. '	self' → logprob: -13.271196365356445
    6. '   ' → logprob: -13.771196365356445
    7. ' ' → logprob: -14.771196365356445
    8. '(self' → logprob: -15.271196365356445
    9. '[self' → logprob: -15.271196365356445
    10. '=self' → logprob: -15.771196365356445

Token 519: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.0017312256386503577
    2. 'max' → logprob: -6.3767313957214355
    3. ' max' → logprob: -11.126730918884277
    4. '.' → logprob: -11.876730918884277
    5. '.maximum' → logprob: -12.501730918884277
    6. ' .' → logprob: -13.626730918884277
    7. '_max' → logprob: -13.876730918884277
    8. '	max' → logprob: -14.001730918884277
    9. '.Max' → logprob: -15.751730918884277
    10. '.b' → logprob: -15.751730918884277

Token 520: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.375000953674316
    3. 'b' → logprob: -18.0
    4. '_B' → logprob: -18.5
    5. '\' → logprob: -19.125
    6. ' _' → logprob: -19.5
    7. 'B' → logprob: -19.625
    8. '_a' → logprob: -19.75
    9. '_
' → logprob: -20.5
    10. '_allowed' → logprob: -21.375

Token 521: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -6.265633419388905e-05
    2. 'oun' → logprob: -10.625062942504883
    3. 'ounce' → logprob: -11.000062942504883
    4. '```' → logprob: -12.125062942504883
    5. 'o' → logprob: -12.875062942504883
    6. 'ounds' → logprob: -12.875062942504883
    7. 'ouches' → logprob: -13.500062942504883
    8. '#' → logprob: -13.750062942504883
    9. 'onces' → logprob: -13.875062942504883
    10. '``' → logprob: -14.000062942504883

Token 522: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14279410243034363
    2. ' =' → logprob: -2.017794132232666
    3. '<|end|>' → logprob: -9.267793655395508
    4. ')' → logprob: -11.642793655395508
    5. '=int' → logprob: -11.892793655395508
    6. '=None' → logprob: -13.267793655395508
    7. ':' → logprob: -13.517793655395508
    8. '<|end|>' → logprob: -13.642793655395508
    9. ',' → logprob: -14.017793655395508
    10. ' ' → logprob: -14.392793655395508

Token 523: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.20141343772411346
    2. ' max' → logprob: -1.7014133930206299
    3. '	max' → logprob: -16.826414108276367
    4. '(max' → logprob: -16.951414108276367
    5. ' ' → logprob: -17.451414108276367
    6. 'int' → logprob: -17.951414108276367
    7. '_max' → logprob: -18.451414108276367
    8. '   ' → logprob: -18.451414108276367
    9. 'm' → logprob: -19.201414108276367
    10. ' ' → logprob: -19.701414108276367

Token 524: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -3.650518920039758e-06
    2. '_' → logprob: -12.750003814697266
    3. 'b' → logprob: -14.875003814697266
    4. 's' → logprob: -16.750003814697266
    5. '\' → logprob: -16.750003814697266
    6. ' ' → logprob: -17.375003814697266
    7. '_j' → logprob: -17.625003814697266
    8. '_B' → logprob: -17.625003814697266
    9. 'B' → logprob: -17.750003814697266
    10. ')' → logprob: -17.750003814697266

Token 525: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -4.060365608893335e-05
    2. 'ounce' → logprob: -10.500041007995605
    3. 'oun' → logprob: -11.500041007995605
    4. 'ou' → logprob: -14.750041007995605
    5. 'ouches' → logprob: -14.750041007995605
    6. '```' → logprob: -14.875041007995605
    7. 'ounds' → logprob: -15.125041007995605
    8. '_' → logprob: -15.375041007995605
    9. 'o' → logprob: -15.750041007995605
    10. '``' → logprob: -15.875041007995605

Token 526: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 527: '#' (ID: 2)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0684536024928093
    2. '#' → logprob: -2.943453550338745
    3. '
' → logprob: -4.318453788757324
    4. '

' → logprob: -9.193453788757324
    5. ' class' → logprob: -10.818453788757324
    6. 'def' → logprob: -10.943453788757324
    7. 'import' → logprob: -11.568453788757324
    8. 'from' → logprob: -12.568453788757324
    9. '


' → logprob: -13.568453788757324
    10. '@dat' → logprob: -13.693453788757324

Token 528: ' =====' (ID: 71502)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.003980923909693956
    2. '#' → logprob: -5.753981113433838
    3. 'def' → logprob: -7.253981113433838
    4. 'import' → logprob: -9.87898063659668
    5. 'from' → logprob: -10.50398063659668
    6. 'abstract' → logprob: -11.62898063659668
    7. ' class' → logprob: -12.00398063659668
    8. '
' → logprob: -14.62898063659668
    9. '@' → logprob: -15.62898063659668
    10. 'interface' → logprob: -15.75398063659668

Token 529: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05952868238091469
    2. 'class' → logprob: -2.9345285892486572
    3. ' ==' → logprob: -6.934528827667236
    4. '=======' → logprob: -7.184528827667236
    5. '===' → logprob: -7.809528827667236
    6. ' Problem' → logprob: -7.809528827667236
    7. '======' → logprob: -7.809528827667236
    8. ' Code' → logprob: -8.309528350830078
    9. ' Solution' → logprob: -8.559528350830078
    10. ' The' → logprob: -9.059528350830078

Token 530: ' Strategy' (ID: 39435)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.7761884927749634
    2. 'Solver' → logprob: -2.026188373565674
    3. 'Solution' → logprob: -2.026188373565674
    4. ' Solver' → logprob: -2.401188373565674
    5. ' Physics' → logprob: -2.651188373565674
    6. 'Physics' → logprob: -2.651188373565674
    7. ' Solution' → logprob: -2.651188373565674
    8. ' Tra' → logprob: -3.276188373565674
    9. 'Trajectory' → logprob: -3.276188373565674
    10. 'Problem' → logprob: -3.401188373565674

Token 531: ' Pattern' (ID: 29731)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4072115123271942
    2. '
' → logprob: -1.7822115421295166
    3. ' class' → logprob: -3.1572115421295166
    4. '_' → logprob: -3.9072115421295166
    5. 's' → logprob: -4.1572113037109375
    6. ' =====' → logprob: -4.1572113037109375
    7. ' =' → logprob: -4.6572113037109375
    8. '  
' → logprob: -4.7822113037109375
    9. '=======
' → logprob: -4.9072113037109375
    10. 'Classes' → logprob: -5.1572113037109375

Token 532: ' for' (ID: 395)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.13658206164836884
    2. '
' → logprob: -2.136582136154175
    3. '

' → logprob: -4.761581897735596
    4. ' class' → logprob: -7.261581897735596
    5. '<class' → logprob: -9.011582374572754
    6. '<|end|>' → logprob: -9.261582374572754
    7. 'abstract' → logprob: -10.386582374572754
    8. '<|end|>' → logprob: -10.511582374572754
    9. 'for' → logprob: -11.511582374572754
    10. ' 
' → logprob: -11.511582374572754

Token 533: ' Bounce' (ID: 186280)
  Prédit: 'Trajectory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Trajectory' → logprob: -0.9594715237617493
    2. 'Bounce' → logprob: -1.9594714641571045
    3. 'Flight' → logprob: -2.0844714641571045
    4. ' Tra' → logprob: -2.9594714641571045
    5. 'class' → logprob: -3.0844714641571045
    6. 'Par' → logprob: -3.3344714641571045
    7. 'Solution' → logprob: -3.4594714641571045
    8. ' Bounce' → logprob: -3.4594714641571045
    9. 'Tra' → logprob: -4.459471702575684
    10. 'Bullet' → logprob: -4.459471702575684

Token 534: ' Spl' (ID: 68506)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2631703019142151
    2. 'Handling' → logprob: -2.6381702423095703
    3. 'Solver' → logprob: -3.5131702423095703
    4. 'Handler' → logprob: -3.6381702423095703
    5. 'Behavior' → logprob: -3.7631702423095703
    6. 'Strategy' → logprob: -4.26317024230957
    7. 'Strategies' → logprob: -4.38817024230957
    8. 'Handlers' → logprob: -5.01317024230957
    9. ' Handling' → logprob: -5.38817024230957
    10. '=======' → logprob: -5.63817024230957

Token 535: 'itting' (ID: 6603)
  Prédit: 'its'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'its' → logprob: -0.6158901453018188
    2. 'it' → logprob: -0.9908901453018188
    3. 'itting' → logprob: -2.6158900260925293
    4. 'ices' → logprob: -5.365890026092529
    5. 'ice' → logprob: -5.865890026092529
    6. 'itted' → logprob: -6.240890026092529
    7. 'ittings' → logprob: -7.490890026092529
    8. 'iting' → logprob: -7.615890026092529
    9. 'iter' → logprob: -7.865890026092529
    10. '#' → logprob: -7.990890026092529

Token 536: ' =====' (ID: 71502)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.35374435782432556
    2. 'class' → logprob: -1.228744387626648
    3. '
' → logprob: -5.3537445068359375
    4. 's' → logprob: -7.8537445068359375
    5. '(s' → logprob: -10.603744506835938
    6. ' class' → logprob: -10.978744506835938
    7. '<class' → logprob: -10.978744506835938
    8. '


' → logprob: -11.103744506835938
    9. 'from' → logprob: -11.103744506835938
    10. '<|end|>' → logprob: -11.103744506835938

Token 537: '==' (ID: 560)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.02442825958132744
    2. '
' → logprob: -3.774428367614746
    3. '

' → logprob: -6.899428367614746
    4. 'from' → logprob: -8.774428367614746
    5. '
' → logprob: -11.649428367614746
    6. ' class' → logprob: -12.274428367614746
    7. 'import' → logprob: -13.149428367614746
    8. 'abstract' → logprob: -14.274428367614746
    9. '#' → logprob: -14.899428367614746
    10. '<class' → logprob: -14.899428367614746

Token 538: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.04877857118844986
    2. '
' → logprob: -3.048778533935547
    3. '

' → logprob: -9.298778533935547
    4. 'from' → logprob: -9.673778533935547
    5. ' class' → logprob: -11.173778533935547
    6. '
' → logprob: -11.673778533935547
    7. ' 
' → logprob: -12.923778533935547
    8. 'abstract' → logprob: -13.423778533935547
    9. '```' → logprob: -13.423778533935547
    10. '<class' → logprob: -13.673778533935547

Token 539: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -5.3954463510308415e-05
    2. 'from' → logprob: -10.375054359436035
    3. '
' → logprob: -10.875054359436035
    4. ' class' → logprob: -12.625054359436035
    5. 'abstract' → logprob: -15.250054359436035
    6. 'import' → logprob: -15.375054359436035
    7. '<class' → logprob: -16.87505340576172
    8. '"class' → logprob: -17.12505340576172
    9. '

' → logprob: -17.25005340576172
    10. ' 
' → logprob: -18.37505340576172

Token 540: ' Bounce' (ID: 186280)
  Prédit: ' Bounce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Bounce' → logprob: -0.5431224703788757
    2. 'Bounce' → logprob: -0.9181224703788757
    3. 'Trajectory' → logprob: -5.043122291564941
    4. 'Split' → logprob: -5.293122291564941
    5. 'IB' → logprob: -6.668122291564941
    6. ' Par' → logprob: -6.793122291564941
    7. ' Split' → logprob: -6.918122291564941
    8. 'Par' → logprob: -7.043122291564941
    9. ' IB' → logprob: -7.168122291564941
    10. 'Abstract' → logprob: -7.793122291564941

Token 541: 'Splitter' (ID: 133951)
  Prédit: 'Splitter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Splitter' → logprob: -0.3995240032672882
    2. 'Strategy' → logprob: -1.5245239734649658
    3. 'Split' → logprob: -2.274523973464966
    4. 'Spl' → logprob: -4.774524211883545
    5. 'Solver' → logprob: -10.399523735046387
    6. 'S' → logprob: -10.399523735046387
    7. 'Partition' → logprob: -10.524523735046387
    8. 'Segment' → logprob: -10.524523735046387
    9. 's' → logprob: -10.649523735046387
    10. 'Count' → logprob: -10.899523735046387

Token 542: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7048606872558594
    2. ':' → logprob: -0.7048606872558594
    3. ':
' → logprob: -4.454860687255859
    4. '(Abstract' → logprob: -10.82986068725586
    5. '(object' → logprob: -13.95486068725586
    6. 'ABC' → logprob: -14.45486068725586
    7. ':

' → logprob: -14.57986068725586
    8. '():' → logprob: -15.07986068725586
    9. ':
' → logprob: -15.32986068725586
    10. '(
' → logprob: -15.57986068725586

Token 543: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -6.110668618930504e-05
    2. '(' → logprob: -10.37506103515625
    3. ' ABC' → logprob: -11.00006103515625
    4. '):' → logprob: -12.37506103515625
    5. 'abc' → logprob: -12.62506103515625
    6. '):
' → logprob: -12.75006103515625
    7. 'AB' → logprob: -13.75006103515625
    8. ')' → logprob: -14.00006103515625
    9. 'A' → logprob: -15.12506103515625
    10. 'ABCDE' → logprob: -15.62506103515625

Token 544: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1006009578704834
    2. '):
' → logprob: -2.3506009578704834
    3. '):
' → logprob: -7.9756011962890625
    4. ')' → logprob: -10.350601196289062
    5. ':' → logprob: -11.600601196289062
    6. '):

' → logprob: -11.725601196289062
    7. '):

' → logprob: -14.725601196289062
    8. ' ):' → logprob: -15.725601196289062
    9. '   ' → logprob: -15.850601196289062
    10. ',' → logprob: -16.100601196289062

Token 545: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036857716739177704
    2. '
' → logprob: -3.5368576049804688
    3. '    
' → logprob: -5.036857604980469
    4. ' 
' → logprob: -8.536857604980469
    5. '<|end|>' → logprob: -8.661857604980469
    6. ':' → logprob: -9.661857604980469
    7. '  
' → logprob: -10.411857604980469
    8. ':
' → logprob: -10.661857604980469
    9. '   
' → logprob: -11.036857604980469
    10. '  ' → logprob: -11.411857604980469

Token 546: ' """' (ID: 9280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010462861508131027
    2. '
' → logprob: -4.885462760925293
    3. '    
' → logprob: -6.135462760925293
    4. ' @' → logprob: -7.760462760925293
    5. '@' → logprob: -8.385462760925293
    6. ' 
' → logprob: -11.010462760925293
    7. '        
' → logprob: -13.010462760925293
    8. '    ' → logprob: -13.260462760925293
    9. ' def' → logprob: -13.385462760925293
    10. '	' → logprob: -13.510462760925293

Token 547: 'Abstract' (ID: 16996)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.6235966086387634
    2. '   ' → logprob: -1.1235966682434082
    3. ' @' → logprob: -2.248596668243408
    4. 'class' → logprob: -3.873596668243408
    5. 'abstract' → logprob: -5.373596668243408
    6. '
' → logprob: -5.623596668243408
    7. 'def' → logprob: -5.748596668243408
    8. ' def' → logprob: -8.12359619140625
    9. '    
' → logprob: -8.74859619140625
    10. 'from' → logprob: -8.87359619140625

Token 548: ' strategy' (ID: 10772)
  Prédit: ' class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.22292961180210114
    2. 'class' → logprob: -1.72292959690094
    3. '
' → logprob: -4.72292947769165
    4. ' base' → logprob: -4.97292947769165
    5. 'method' → logprob: -5.59792947769165
    6. ' ' → logprob: -7.09792947769165
    7. ' method' → logprob: -7.97292947769165
    8. 'classmethod' → logprob: -8.097929954528809
    9. ' 
' → logprob: -9.347929954528809
    10. '  
' → logprob: -9.847929954528809

Token 549: ' that' (ID: 484)
  Prédit: ' class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.38229209184646606
    2. ' for' → logprob: -1.6322920322418213
    3. 'class' → logprob: -2.1322920322418213
    4. 'for' → logprob: -6.7572922706604
    5. '   ' → logprob: -6.8822922706604
    6. ' ' → logprob: -7.1322922706604
    7. '
' → logprob: -7.7572922706604
    8. ' method' → logprob: -9.757291793823242
    9. '  ' → logprob: -9.882291793823242
    10. 'method' → logprob: -10.507291793823242

Token 550: ' determines' (ID: 49842)
  Prédit: 'spl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spl' → logprob: -0.015442123636603355
    2. 'defines' → logprob: -5.51544189453125
    3. 'provid' → logprob: -6.14044189453125
    4. 'def' → logprob: -6.26544189453125
    5. ' defines' → logprob: -6.26544189453125
    6. ' splits' → logprob: -6.26544189453125
    7. 'div' → logprob: -6.89044189453125
    8. 'determ' → logprob: -7.39044189453125
    9. 's' → logprob: -7.76544189453125
    10. 'split' → logprob: -8.64044189453125

Token 551: ' how' (ID: 1495)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.1869879961013794
    2. 'how' → logprob: -1.1869879961013794
    3. ' how' → logprob: -1.3119879961013794
    4. 'possible' → logprob: -3.18698787689209
    5. ' the' → logprob: -3.68698787689209
    6. 'bounce' → logprob: -4.18698787689209
    7. 'number' → logprob: -4.68698787689209
    8. ' bounce' → logprob: -5.06198787689209
    9. 'split' → logprob: -5.06198787689209
    10. 'def' → logprob: -5.06198787689209

Token 552: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6384817957878113
    2. 'to' → logprob: -0.7634817957878113
    3. 'many' → logprob: -5.638481616973877
    4. ' many' → logprob: -6.263481616973877
    5. ' the' → logprob: -8.513482093811035
    6. 'the' → logprob: -8.763482093811035
    7. 'a' → logprob: -11.513482093811035
    8. 'def' → logprob: -11.638482093811035
    9. ' a' → logprob: -12.263482093811035
    10. 't' → logprob: -12.513482093811035

Token 553: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.05495100095868111
    2. ' split' → logprob: -2.9299509525299072
    3. 'divide' → logprob: -10.179950714111328
    4. 'generate' → logprob: -12.054950714111328
    5. 'spl' → logprob: -12.304950714111328
    6. 'def' → logprob: -12.679950714111328
    7. 'partition' → logprob: -12.804950714111328
    8. ' divide' → logprob: -13.179950714111328
    9. 'bounce' → logprob: -13.179950714111328
    10. '
' → logprob: -13.429950714111328

Token 554: ' total' (ID: 3609)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6600890755653381
    2. ' the' → logprob: -1.6600890159606934
    3. 'a' → logprob: -1.7850890159606934
    4. 'b' → logprob: -3.2850890159606934
    5. ' a' → logprob: -3.6600890159606934
    6. 'bounce' → logprob: -3.7850890159606934
    7. ' bounce' → logprob: -4.785089015960693
    8. 'total' → logprob: -5.035089015960693
    9. 'flight' → logprob: -5.160089015960693
    10. ' b' → logprob: -5.160089015960693

Token 555: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.06422397494316101
    2. ' distance' → logprob: -3.0642240047454834
    3. 'horizontal' → logprob: -5.064223766326904
    4. ' horizontal' → logprob: -5.189223766326904
    5. '_distance' → logprob: -6.439223766326904
    6. 'flight' → logprob: -7.689223766326904
    7. 'b' → logprob: -8.064224243164062
    8. 'bounce' → logprob: -8.314224243164062
    9. 'range' → logprob: -8.564224243164062
    10. '_' → logprob: -8.939224243164062

Token 556: ' into' (ID: 1511)
  Prédit: ' into'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' into' → logprob: -0.00886900071054697
    2. 'into' → logprob: -4.758869171142578
    3. ' ' → logprob: -10.008869171142578
    4. ' and' → logprob: -10.383869171142578
    5. ' for' → logprob: -10.383869171142578
    6. ' across' → logprob: -10.633869171142578
    7. ' among' → logprob: -11.008869171142578
    8. ' between' → logprob: -11.008869171142578
    9. 'int' → logprob: -11.133869171142578
    10. '```' → logprob: -11.383869171142578

Token 557: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.26783791184425354
    2. 'bounce' → logprob: -2.1428380012512207
    3. 'b' → logprob: -2.8928380012512207
    4. ' segments' → logprob: -3.6428380012512207
    5. 'n' → logprob: -3.8928380012512207
    6. 'par' → logprob: -5.392838001251221
    7. ' bounce' → logprob: -5.767838001251221
    8. 'flight' → logprob: -7.017838001251221
    9. '(par' → logprob: -7.142838001251221
    10. 'parts' → logprob: -7.392838001251221

Token 558: '."""
' (ID: 33044)
  Prédit: '."""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '."""' → logprob: -0.7130410075187683
    2. ' for' → logprob: -1.338041067123413
    3. '"""' → logprob: -1.713041067123413
    4. '.' → logprob: -3.463041067123413
    5. '   ' → logprob: -4.463040828704834
    6. '."""
' → logprob: -4.963040828704834
    7. ' of' → logprob: -5.213040828704834
    8. '."' → logprob: -5.588040828704834
    9. ' to' → logprob: -6.213040828704834
    10. ' and' → logprob: -6.463040828704834

Token 559: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3230089843273163
    2. '   ' → logprob: -1.3230090141296387
    3. '    
' → logprob: -4.698009014129639
    4. '<|end|>' → logprob: -8.32300853729248
    5. ' 
' → logprob: -8.69800853729248
    6. '   
' → logprob: -10.57300853729248
    7. '

' → logprob: -10.69800853729248
    8. '  
' → logprob: -10.94800853729248
    9. '```' → logprob: -10.94800853729248
    10. 'def' → logprob: -11.07300853729248

Token 560: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.4606687128543854
    2. ' @' → logprob: -1.210668683052063
    3. '   ' → logprob: -2.8356688022613525
    4. '
' → logprob: -4.460668563842773
    5. '    
' → logprob: -7.835668563842773
    6. ' 
' → logprob: -8.085668563842773
    7. '@property' → logprob: -9.335668563842773
    8. '@
' → logprob: -10.085668563842773
    9. '@param' → logprob: -11.460668563842773
    10. 'abstract' → logprob: -11.460668563842773

Token 561: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -7.896309739408025e-07
    2. 'property' → logprob: -14.250000953674316
    3. ' abstract' → logprob: -16.0
    4. 'staticmethod' → logprob: -17.375
    5. 'abc' → logprob: -19.25
    6. 'classmethod' → logprob: -22.375
    7. 'abs' → logprob: -22.625
    8. '.abstract' → logprob: -23.875
    9. 'ab' → logprob: -24.75
    10. 'method' → logprob: -26.0

Token 562: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0004311460361350328
    2. '_method' → logprob: -8.125431060791016
    3. 'def' → logprob: -9.500431060791016
    4. '
' → logprob: -10.625431060791016
    5. ' method' → logprob: -10.625431060791016
    6. ' def' → logprob: -12.250431060791016
    7. '_token' → logprob: -13.125431060791016
    8. 'classmethod' → logprob: -13.625431060791016
    9. '	method' → logprob: -13.750431060791016
    10. '    
' → logprob: -14.250431060791016

Token 563: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0003908735525328666
    2. 'def' → logprob: -7.875391006469727
    3. '
' → logprob: -11.875391006469727
    4. '    
' → logprob: -13.375391006469727
    5. ' def' → logprob: -13.750391006469727
    6. '   ' → logprob: -14.125391006469727
    7. '\' → logprob: -15.375391006469727
    8. '	def' → logprob: -17.000391006469727
    9. ' 
' → logprob: -17.250391006469727
    10. '  
' → logprob: -17.375391006469727

Token 564: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005568128544837236
    2. 'def' → logprob: -5.255568027496338
    3. 'method' → logprob: -8.880568504333496
    4. '    
' → logprob: -9.380568504333496
    5. '
' → logprob: -10.130568504333496
    6. '   ' → logprob: -10.255568504333496
    7. ' def' → logprob: -10.755568504333496
    8. '	def' → logprob: -12.005568504333496
    9. '\' → logprob: -12.880568504333496
    10. '  
' → logprob: -13.505568504333496

Token 565: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0009442188893444836
    2. ' def' → logprob: -7.750944137573242
    3. 'method' → logprob: -8.250944137573242
    4. '
' → logprob: -9.000944137573242
    5. 'staticmethod' → logprob: -9.250944137573242
    6. 'property' → logprob: -11.125944137573242
    7. 'classmethod' → logprob: -11.250944137573242
    8. 'List' → logprob: -13.375944137573242
    9. 'list' → logprob: -13.500944137573242
    10. '   ' → logprob: -14.500944137573242

Token 566: ' generate' (ID: 10419)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.044195756316185
    2. ' split' → logprob: -3.1691956520080566
    3. 'get' → logprob: -7.669195652008057
    4. 'generate' → logprob: -7.669195652008057
    5. 'segments' → logprob: -9.294196128845215
    6. ' get' → logprob: -10.044196128845215
    7. 'spl' → logprob: -10.544196128845215
    8. ' generate' → logprob: -11.169196128845215
    9. 'compute' → logprob: -11.294196128845215
    10. ' splits' → logprob: -11.544196128845215

Token 567: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.7906970381736755
    2. '_segments' → logprob: -1.0406970977783203
    3. '(self' → logprob: -1.7906970977783203
    4. 'spl' → logprob: -4.66569709777832
    5. '(' → logprob: -4.79069709777832
    6. '_dist' → logprob: -6.16569709777832
    7. '_b' → logprob: -6.16569709777832
    8. '_sequences' → logprob: -6.41569709777832
    9. '_' → logprob: -7.04069709777832
    10. 'segments' → logprob: -7.29069709777832

Token 568: 'plits' (ID: 130884)
  Prédit: 'eg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eg' → logprob: -0.0005666146171279252
    2. 'egment' → logprob: -8.000566482543945
    3. 'e' → logprob: -9.000566482543945
    4. 'plits' → logprob: -9.625566482543945
    5. 'egs' → logprob: -10.750566482543945
    6. ' eg' → logprob: -12.000566482543945
    7. 'plit' → logprob: -12.500566482543945
    8. 'ections' → logprob: -12.875566482543945
    9. 't' → logprob: -13.500566482543945
    10. 'segments' → logprob: -13.750566482543945

Token 569: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2021682858467102
    2. '(' → logprob: -1.7021682262420654
    3. '(
' → logprob: -7.4521684646606445
    4. 'self' → logprob: -9.452168464660645
    5. ' (' → logprob: -9.702168464660645
    6. '   ' → logprob: -10.952168464660645
    7. '       ' → logprob: -12.327168464660645
    8. '
' → logprob: -12.452168464660645
    9. 's' → logprob: -12.952168464660645
    10. '()' → logprob: -13.952168464660645

Token 570: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011081460979767144
    2. ')' → logprob: -10.125110626220703
    3. 'self' → logprob: -10.250110626220703
    4. ' ,' → logprob: -10.500110626220703
    5. ',
' → logprob: -13.000110626220703
    6. ',d' → logprob: -13.000110626220703
    7. '):' → logprob: -13.500110626220703
    8. '   ' → logprob: -15.125110626220703
    9. '(self' → logprob: -15.250110626220703
    10. '
' → logprob: -15.375110626220703

Token 571: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7039471864700317
    2. 'self' → logprob: -1.4539471864700317
    3. ' total' → logprob: -2.078947067260742
    4. 'distance' → logprob: -2.078947067260742
    5. ' self' → logprob: -4.328947067260742
    6. ' distance' → logprob: -4.953947067260742
    7. ')' → logprob: -8.078947067260742
    8. '   ' → logprob: -8.328947067260742
    9. ' ' → logprob: -9.328947067260742
    10. 'n' → logprob: -9.328947067260742

Token 572: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.0027148802764713764
    2. 'distance' → logprob: -6.002715110778809
    3. '_b' → logprob: -10.002715110778809
    4. ',' → logprob: -10.127715110778809
    5. ')' → logprob: -10.252715110778809
    6. ' distance' → logprob: -10.377715110778809
    7. ':' → logprob: -10.627715110778809
    8. '_length' → logprob: -10.877715110778809
    9. '_dist' → logprob: -11.502715110778809
    10. '_' → logprob: -11.502715110778809

Token 573: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000646433443762362
    2. ')' → logprob: -8.000646591186523
    3. ':int' → logprob: -9.000646591186523
    4. ',' → logprob: -9.250646591186523
    5. '):' → logprob: -10.500646591186523
    6. 'self' → logprob: -10.875646591186523
    7. '   ' → logprob: -10.875646591186523
    8. ' :' → logprob: -11.000646591186523
    9. ' )' → logprob: -12.500646591186523
    10. '       ' → logprob: -14.000646591186523

Token 574: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002401220379397273
    2. ' int' → logprob: -6.377401351928711
    3. 'float' → logprob: -7.377401351928711
    4. ')' → logprob: -9.627401351928711
    5. ' float' → logprob: -12.502401351928711
    6. '[int' → logprob: -13.502401351928711
    7. '   ' → logprob: -14.377401351928711
    8. ' ' → logprob: -14.502401351928711
    9. '	int' → logprob: -14.752401351928711
    10. ':int' → logprob: -15.377401351928711

Token 575: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011119384318590164
    2. ',' → logprob: -4.511119365692139
    3. ' )' → logprob: -10.136119842529297
    4. '   ' → logprob: -10.636119842529297
    5. '       ' → logprob: -12.636119842529297
    6. ',)' → logprob: -12.886119842529297
    7. '):' → logprob: -14.386119842529297
    8. ')->' → logprob: -14.761119842529297
    9. ' ,' → logprob: -15.136119842529297
    10. ' ' → logprob: -16.386119842529297

Token 576: ' b' (ID: 287)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.8819389939308167
    2. 'max' → logprob: -1.0069389343261719
    3. 'b' → logprob: -1.8819389343261719
    4. 'num' → logprob: -4.131938934326172
    5. ' remaining' → logprob: -4.131938934326172
    6. ' b' → logprob: -4.256938934326172
    7. ' max' → logprob: -4.631938934326172
    8. 'segments' → logprob: -5.506938934326172
    9. 'bounce' → logprob: -5.756938934326172
    10. 'current' → logprob: -7.006938934326172

Token 577: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -0.0017440813826397061
    2. 'ounce' → logprob: -6.376744270324707
    3. 'oun' → logprob: -11.126744270324707
    4. 'ounced' → logprob: -12.376744270324707
    5. '#' → logprob: -13.376744270324707
    6. '``' → logprob: -13.376744270324707
    7. '   ' → logprob: -13.501744270324707
    8. '```' → logprob: -13.501744270324707
    9. ')' → logprob: -13.626744270324707
    10. 'o' → logprob: -13.626744270324707

Token 578: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004341579508036375
    2. '_allowed' → logprob: -6.3793416023254395
    3. '_remaining' → logprob: -6.6293416023254395
    4. '_left' → logprob: -7.8793416023254395
    5. 'allowed' → logprob: -8.004341125488281
    6. ')' → logprob: -8.379341125488281
    7. ':int' → logprob: -8.754341125488281
    8. 'left' → logprob: -10.004341125488281
    9. 'remaining' → logprob: -10.129341125488281
    10. '_count' → logprob: -10.629341125488281

Token 579: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00026264708139933646
    2. ' int' → logprob: -8.250262260437012
    3. '[int' → logprob: -14.625262260437012
    4. ':int' → logprob: -14.750262260437012
    5. '   ' → logprob: -15.125262260437012
    6. '	int' → logprob: -16.500263214111328
    7. ')' → logprob: -17.250263214111328
    8. ' ' → logprob: -17.500263214111328
    9. ':' → logprob: -17.500263214111328
    10. '(int' → logprob: -17.625263214111328

Token 580: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.9888433093437925e-05
    2. '):' → logprob: -11.000040054321289
    3. ' )' → logprob: -11.250040054321289
    4. ',' → logprob: -11.750040054321289
    5. ')->' → logprob: -13.875040054321289
    6. '):
' → logprob: -14.625040054321289
    7. '   ' → logprob: -14.875040054321289
    8. ',)' → logprob: -15.000040054321289
    9. '):
' → logprob: -17.12504005432129
    10. ' ' → logprob: -17.37504005432129

Token 581: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016999246552586555
    2. ' ->' → logprob: -4.266999244689941
    3. ':' → logprob: -6.391999244689941
    4. '):
' → logprob: -7.516999244689941
    5. '   ' → logprob: -8.516999244689941
    6. ' )' → logprob: -9.141999244689941
    7. '):' → logprob: -9.266999244689941
    8. '->' → logprob: -9.766999244689941
    9. ':
' → logprob: -9.766999244689941
    10. ')->' → logprob: -10.516999244689941

Token 582: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0004963174578733742
    2. ' List' → logprob: -7.6254963874816895
    3. '[List' → logprob: -12.125495910644531
    4. '	List' → logprob: -13.625495910644531
    5. '   ' → logprob: -14.125495910644531
    6. 'Iterable' → logprob: -14.750495910644531
    7. 'int' → logprob: -15.250495910644531
    8. 'list' → logprob: -16.37549591064453
    9. 'Iterator' → logprob: -16.37549591064453
    10. 'Tuple' → logprob: -17.12549591064453

Token 583: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.28162774443626404
    2. '[int' → logprob: -1.5316277742385864
    3. '[' → logprob: -3.531627655029297
    4. '[Int' → logprob: -12.531627655029297
    5. '[
' → logprob: -14.406627655029297
    6. 'int' → logprob: -15.781627655029297
    7. '[np' → logprob: -16.531627655029297
    8. ' [' → logprob: -16.531627655029297
    9. '[Index' → logprob: -16.906627655029297
    10. '[(' → logprob: -17.156627655029297

Token 584: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.005946221761405468
    2. '[' → logprob: -5.130946159362793
    3. 'int' → logprob: -11.630946159362793
    4. '[List' → logprob: -11.755946159362793
    5. '   ' → logprob: -15.255946159362793
    6. '```' → logprob: -15.630946159362793
    7. '<int' → logprob: -15.880946159362793
    8. '[Int' → logprob: -16.13094711303711
    9. ']' → logprob: -16.50594711303711
    10. 'float' → logprob: -16.88094711303711

Token 585: ']]:
' (ID: 183340)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.02289065159857273
    2. ']:
' → logprob: -4.272890567779541
    3. ']' → logprob: -4.772890567779541
    4. ']:
' → logprob: -9.1478910446167
    5. ' ]' → logprob: -10.2728910446167
    6. ']>' → logprob: -10.8978910446167
    7. ']:

' → logprob: -11.1478910446167
    8. ']):' → logprob: -11.6478910446167
    9. '[' → logprob: -11.6478910446167
    10. '):' → logprob: -11.7728910446167

Token 586: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052159253507852554
    2. '       ' → logprob: -3.427159309387207
    3. '<|end|>' → logprob: -4.177159309387207
    4. ')' → logprob: -7.302159309387207
    5. ':' → logprob: -7.302159309387207
    6. '    
' → logprob: -7.552159309387207
    7. '    ' → logprob: -8.302159309387207
    8. '
' → logprob: -8.552159309387207
    9. '<|end|>' → logprob: -9.177159309387207
    10. '  ' → logprob: -9.552159309387207

Token 587: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018435632809996605
    2. ' pass' → logprob: -6.626843452453613
    3. 'pass' (adapté à ' pass') → logprob: -8.126843452453613
    4. '...' → logprob: -8.501843452453613
    5. '"""' → logprob: -11.751843452453613
    6. ' ...' → logprob: -12.001843452453613
    7. '   ' → logprob: -13.251843452453613
    8. '	pass' → logprob: -13.251843452453613
    9. 'raise' → logprob: -14.876843452453613
    10. '               ' → logprob: -15.751843452453613

Token 588: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 589: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10267338156700134
    2. '<|end|>' → logprob: -2.852673292160034
    3. ' ' → logprob: -4.102673530578613
    4. ' 
' → logprob: -4.352673530578613
    5. '    
' → logprob: -5.727673530578613
    6. '
' → logprob: -6.227673530578613
    7. '    ' → logprob: -7.102673530578613
    8. '  ' → logprob: -7.227673530578613
    9. '<|end|>' → logprob: -7.227673530578613
    10. ')' → logprob: -7.477673530578613

Token 590: ' Simple' (ID: 12295)
  Prédit: 'Equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Equal' → logprob: -0.45766356587409973
    2. ' Equal' → logprob: -1.2076635360717773
    3. 'Uniform' → logprob: -3.4576635360717773
    4. 'Even' → logprob: -4.332663536071777
    5. 'Simple' → logprob: -5.457663536071777
    6. ' Uniform' → logprob: -5.707663536071777
    7. 'Single' → logprob: -5.957663536071777
    8. ' Even' → logprob: -6.457663536071777
    9. ' Simple' → logprob: -6.457663536071777
    10. ' Single' → logprob: -6.832663536071777

Token 591: 'Split' (ID: 26377)
  Prédit: 'Bounce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Bounce' → logprob: -0.00585508206859231
    2. 'Splitter' → logprob: -5.630855083465576
    3. 'Distance' → logprob: -6.505855083465576
    4. 'Split' → logprob: -7.380855083465576
    5. ' Bounce' → logprob: -10.005854606628418
    6. 'Spl' → logprob: -11.130854606628418
    7. 'Equal' → logprob: -11.255854606628418
    8. 'Divide' → logprob: -11.505854606628418
    9. 'B' → logprob: -11.755854606628418
    10. 'Linear' → logprob: -12.255854606628418

Token 592: 'Generator' (ID: 14802)
  Prédit: 'ter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.0030815713107585907
    2. '(B' → logprob: -6.128081798553467
    3. 'Splitter' → logprob: -7.628081798553467
    4. 'Bounce' → logprob: -8.378081321716309
    5. 't' → logprob: -10.003081321716309
    6. 'te' → logprob: -10.253081321716309
    7. 'er' → logprob: -10.378081321716309
    8. 'per' → logprob: -11.503081321716309
    9. 'B' → logprob: -11.628081321716309
    10. 'Breaker' → logprob: -11.628081321716309

Token 593: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.5808395147323608
    2. ':' → logprob: -0.8308395147323608
    3. ':
' → logprob: -5.58083963394165
    4. '(' → logprob: -6.83083963394165
    5. ' :' → logprob: -11.705839157104492
    6. '(
' → logprob: -11.705839157104492
    7. '(Abstract' → logprob: -12.580839157104492
    8. '():' → logprob: -12.580839157104492
    9. ':B' → logprob: -12.580839157104492
    10. '):' → logprob: -12.705839157104492

Token 594: 'ounce' (ID: 19744)
  Prédit: 'ounce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounce' → logprob: -0.00010688089241739362
    2. 'o' → logprob: -9.375106811523438
    3. 'once' → logprob: -12.125106811523438
    4. 'oun' → logprob: -12.375106811523438
    5. 'ance' → logprob: -12.875106811523438
    6. 'ounces' → logprob: -13.000106811523438
    7. 'on' → logprob: -13.000106811523438
    8. 'ase' → logprob: -13.750106811523438
    9. 'ound' → logprob: -14.250106811523438
    10. 'ou' → logprob: -14.750106811523438

Token 595: 'Splitter' (ID: 133951)
  Prédit: 'Splitter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Splitter' → logprob: -1.282920129597187e-05
    2. 'split' → logprob: -13.000012397766113
    3. '   ' → logprob: -13.125012397766113
    4. 'Split' → logprob: -13.375012397766113
    5. 'Spl' → logprob: -13.375012397766113
    6. 'Generator' → logprob: -13.500012397766113
    7. ')' → logprob: -13.625012397766113
    8. ' ' → logprob: -14.875012397766113
    9. ' splitter' → logprob: -14.875012397766113
    10. 'Stepper' → logprob: -15.125012397766113

Token 596: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5767162442207336
    2. '):' → logprob: -0.8267162442207336
    3. ':' → logprob: -7.451716423034668
    4. ':
' → logprob: -9.451716423034668
    5. '):
' → logprob: -9.701716423034668
    6. ')' → logprob: -10.076716423034668
    7. '):

' → logprob: -11.826716423034668
    8. '   ' → logprob: -12.201716423034668
    9. '():
' → logprob: -15.576716423034668
    10. ' ):' → logprob: -15.576716423034668

Token 597: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013369031250476837
    2. ':' → logprob: -4.513369083404541
    3. ' def' → logprob: -6.888369083404541
    4. '
' → logprob: -7.513369083404541
    5. ':
' → logprob: -7.888369083404541
    6. 'def' → logprob: -8.513368606567383
    7. '    
' → logprob: -9.513368606567383
    8. '	def' → logprob: -10.138368606567383
    9. '```' → logprob: -11.138368606567383
    10. ':def' → logprob: -11.138368606567383

Token 598: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014894986525177956
    2. ' def' → logprob: -4.264894962310791
    3. 'def' → logprob: -7.389894962310791
    4. ':' → logprob: -10.26489543914795
    5. '	def' → logprob: -10.26489543914795
    6. '
' → logprob: -10.51489543914795
    7. '    
' → logprob: -11.63989543914795
    8. '    ' → logprob: -13.51489543914795
    9. 'class' → logprob: -13.51489543914795
    10. '  ' → logprob: -14.38989543914795

Token 599: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7047799229621887
    2. '   ' → logprob: -1.204779863357544
    3. ' def' → logprob: -1.704779863357544
    4. 'class' → logprob: -3.954779863357544
    5. '"""' → logprob: -5.454780101776123
    6. ' """' → logprob: -7.579780101776123
    7. '	def' → logprob: -9.704779624938965
    8. '"' → logprob: -9.704779624938965
    9. ' ' → logprob: -9.954779624938965
    10. 'import' → logprob: -10.704779624938965

Token 600: ' Generate' (ID: 33886)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4754219353199005
    2. 'def' → logprob: -0.9754219055175781
    3. '   ' → logprob: -7.100421905517578
    4. 'class' → logprob: -7.725421905517578
    5. '"""' → logprob: -10.225421905517578
    6. ' """' → logprob: -11.100421905517578
    7. 'Generate' (adapté à ' Generate') → logprob: -11.975421905517578
    8. ' ' → logprob: -12.475421905517578
    9. '
' → logprob: -12.475421905517578
    10. '	def' → logprob: -12.975421905517578

Token 601: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.6011261940002441
    2. ' splits' → logprob: -0.8511261940002441
    3. ' [' → logprob: -5.226126194000244
    4. ' [
' → logprob: -5.476126194000244
    5. 'spl' → logprob: -5.601126194000244
    6. 's' → logprob: -5.726126194000244
    7. ' lists' → logprob: -6.101126194000244
    8. 'all' → logprob: -6.601126194000244
    9. ' simple' → logprob: -6.726126194000244
    10. '[
' → logprob: -7.476126194000244

Token 602: ' b' (ID: 287)
  Prédit: ' splits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' splits' → logprob: -0.8531056642532349
    2. ' possible' → logprob: -1.4781056642532349
    3. 'possible' → logprob: -2.3531055450439453
    4. 'spl' → logprob: -2.8531055450439453
    5. 'com' → logprob: -3.1031055450439453
    6. ' combinations' → logprob: -3.3531055450439453
    7. ' lists' → logprob: -3.3531055450439453
    8. ' sequences' → logprob: -3.9781055450439453
    9. 'split' → logprob: -3.9781055450439453
    10. ' split' → logprob: -4.603105545043945

Token 603: '-s' (ID: 2011)
  Prédit: 'ounce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ounce' → logprob: -0.756065309047699
    2. 'ounces' → logprob: -1.3810653686523438
    3. 'y' → logprob: -1.7560653686523438
    4. 'ounded' → logprob: -3.1310653686523438
    5. 'reak' → logprob: -3.5060653686523438
    6. '[' → logprob: -5.131065368652344
    7. 'r' → logprob: -6.131065368652344
    8. 'ounds' → logprob: -6.131065368652344
    9. ' reak' → logprob: -6.131065368652344
    10. 'al' → logprob: -6.256065368652344

Token 604: 'plits' (ID: 130884)
  Prédit: 'ounce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounce' → logprob: -0.20001377165317535
    2. 'ounces' → logprob: -2.2000138759613037
    3. 'pace' → logprob: -3.8250138759613037
    4. 'y' → logprob: -4.825013637542725
    5. 'paces' → logprob: -5.325013637542725
    6. 'e' → logprob: -5.700013637542725
    7. 'plits' → logprob: -5.700013637542725
    8. 'plit' → logprob: -5.950013637542725
    9. 'ts' → logprob: -5.950013637542725
    10. 'reak' → logprob: -6.075013637542725

Token 605: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.1821471005678177
    2. 's' → logprob: -3.1821470260620117
    3. ':' → logprob: -3.3071470260620117
    4. '   ' → logprob: -4.057147026062012
    5. ' with' → logprob: -4.057147026062012
    6. ' where' → logprob: -4.182147026062012
    7. ' for' → logprob: -4.807147026062012
    8. ' into' → logprob: -4.932147026062012
    9. ' that' → logprob: -5.557147026062012
    10. ' s' → logprob: -5.807147026062012

Token 606: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6845045685768127
    2. ' total' → logprob: -0.8095045685768127
    3. '[' → logprob: -4.059504508972168
    4. ' [' → logprob: -4.184504508972168
    5. ' the' → logprob: -4.809504508972168
    6. 'the' → logprob: -5.059504508972168
    7. 'distance' → logprob: -7.059504508972168
    8. 'range' → logprob: -7.309504508972168
    9. ' range' → logprob: -7.934504508972168
    10. ' a' → logprob: -7.934504508972168

Token 607: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.00494364695623517
    2. 'distance' → logprob: -5.87994384765625
    3. ' distance' → logprob: -6.75494384765625
    4. ' _' → logprob: -7.12994384765625
    5. '_' → logprob: -10.00494384765625
    6. ' ' → logprob: -10.25494384765625
    7. '_dist' → logprob: -10.37994384765625
    8. ' distances' → logprob: -10.87994384765625
    9. '_total' → logprob: -12.25494384765625
    10. '   ' → logprob: -12.37994384765625

Token 608: ' into' (ID: 1511)
  Prédit: ' into'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' into' → logprob: -0.3553166389465332
    2. ' as' → logprob: -2.230316638946533
    3. ' with' → logprob: -2.730316638946533
    4. ' such' → logprob: -3.355316638946533
    5. ' that' → logprob: -3.730316638946533
    6. ' by' → logprob: -4.355316638946533
    7. ' in' → logprob: -4.855316638946533
    8. ' where' → logprob: -4.980316638946533
    9. ',' → logprob: -5.105316638946533
    10. ' using' → logprob: -5.230316638946533

Token 609: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10248543322086334
    2. '[b' → logprob: -2.852485418319702
    3. ' b' → logprob: -3.727485418319702
    4. '(b' → logprob: -4.477485656738281
    5. ' (' → logprob: -6.102485656738281
    6. 'increments' → logprob: -7.727485656738281
    7. ' [' → logprob: -8.227485656738281
    8. 'exact' → logprob: -8.352485656738281
    9. 'inte' → logprob: -8.477485656738281
    10. 'segments' → logprob: -8.602485656738281

Token 610: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.049822092056274414
    2. ' +' → logprob: -3.0498220920562744
    3. ' segments' → logprob: -7.424821853637695
    4. ' parts' → logprob: -7.924821853637695
    5. 'segments' → logprob: -9.424821853637695
    6. 'parts' → logprob: -9.924821853637695
    7. ' pieces' → logprob: -10.549821853637695
    8. 'ounces' → logprob: -11.049821853637695
    9. ' integers' → logprob: -11.174821853637695
    10. 'tokens' → logprob: -11.549821853637695

Token 611: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007389922975562513
    2. ' ' → logprob: -7.500739097595215
    3. '+' → logprob: -8.875739097595215
    4. '   ' → logprob: -11.250739097595215
    5. '
' → logprob: -11.750739097595215
    6. '`' → logprob: -12.125739097595215
    7. ' +' → logprob: -12.125739097595215
    8. '-' → logprob: -13.000739097595215
    9. '[' → logprob: -13.125739097595215
    10. '```' → logprob: -13.250739097595215

Token 612: ' segments' (ID: 33749)
  Prédit: ' segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.2975142300128937
    2. ' parts' → logprob: -1.9225142002105713
    3. ' positive' → logprob: -2.5475142002105713
    4. 'segments' → logprob: -3.6725142002105713
    5. ' integers' → logprob: -5.29751443862915
    6. 'parts' → logprob: -7.04751443862915
    7. 'positive' → logprob: -8.047513961791992
    8. 'inte' → logprob: -8.422513961791992
    9. '+' → logprob: -8.547513961791992
    10. ' ' → logprob: -8.922513961791992

Token 613: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -1.681132435798645
    2. ',' → logprob: -2.0561323165893555
    3. ' where' → logprob: -2.0561323165893555
    4. ' by' → logprob: -2.1811323165893555
    5. ' (' → logprob: -2.4311323165893555
    6. ' that' → logprob: -2.4311323165893555
    7. ':' → logprob: -2.4311323165893555
    8. '   ' → logprob: -3.1811323165893555
    9. ' of' → logprob: -3.1811323165893555
    10. ' such' → logprob: -3.6811323165893555

Token 614: ' positions' (ID: 15897)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.8217716217041016
    2. 'equal' → logprob: -1.1967716217041016
    3. 'at' → logprob: -2.5717716217041016
    4. 'minimum' → logprob: -2.8217716217041016
    5. 'positive' → logprob: -2.9467716217041016
    6. 'each' → logprob: -4.321771621704102
    7. 'segments' → logprob: -4.446771621704102
    8. ' lengths' → logprob: -4.946771621704102
    9. 'unit' → logprob: -5.071771621704102
    10. ' equal' → logprob: -5.446771621704102

Token 615: ' increasing' (ID: 11293)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.489680290222168
    2. '=[' → logprob: -1.614680290222168
    3. '=' → logprob: -1.739680290222168
    4. ' [' → logprob: -1.864680290222168
    5. ' =' → logprob: -2.239680290222168
    6. ' at' → logprob: -2.614680290222168
    7. ' increasing' → logprob: -4.864680290222168
    8. ' that' → logprob: -4.864680290222168
    9. '<|end|>' → logprob: -5.364680290222168
    10. ' in' → logprob: -5.614680290222168

Token 616: '
' (ID: 198)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.6021243333816528
    2. ' and' → logprob: -1.6021243333816528
    3. ' strictly' → logprob: -2.8521242141723633
    4. 'and' → logprob: -3.7271242141723633
    5. 'strict' → logprob: -3.8521242141723633
    6. ',' → logprob: -3.9771242141723633
    7. ' at' → logprob: -3.9771242141723633
    8. '[' → logprob: -4.227124214172363
    9. '
' → logprob: -4.477124214172363
    10. 'from' → logprob: -4.727124214172363

Token 617: '   ' (ID: 271)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.07354181259870529
    2. ',' → logprob: -3.1985418796539307
    3. ' and' → logprob: -4.448541641235352
    4. ' ,' → logprob: -5.448541641235352
    5. '_' → logprob: -5.698541641235352
    6. 'by' → logprob: -5.823541641235352
    7. ' ' → logprob: -7.073541641235352
    8. ' at' → logprob: -7.073541641235352
    9. ' between' → logprob: -7.073541641235352
    10. 'ly' → logprob: -7.198541641235352

Token 618: ' This' (ID: 1328)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.6908516883850098
    2. ' and' → logprob: -1.3158516883850098
    3. ',' → logprob: -2.8158516883850098
    4. ' at' → logprob: -3.3158516883850098
    5. ' strictly' → logprob: -3.5658516883850098
    6. ' integers' → logprob: -4.06585168838501
    7. ' ' → logprob: -4.19085168838501
    8. ':' → logprob: -4.56585168838501
    9. ' ,' → logprob: -4.69085168838501
    10. '.' → logprob: -4.81585168838501

Token 619: ' enumer' (ID: 21093)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2612377107143402
    2. ' ' → logprob: -2.511237621307373
    3. ' is' → logprob: -2.886237621307373
    4. ' generates' → logprob: -3.761237621307373
    5. ' :' → logprob: -4.261237621307373
    6. 'def' → logprob: -4.511237621307373
    7. '
' → logprob: -5.261237621307373
    8. ' space' → logprob: -5.511237621307373
    9. ' can' → logprob: -5.636237621307373
    10. ':' → logprob: -5.761237621307373

Token 620: 'ative' (ID: 1799)
  Prédit: 'ates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ates' → logprob: -0.0339713878929615
    2. 'ate' → logprob: -3.4089713096618652
    3. 'ator' → logprob: -8.658971786499023
    4. 'ation' → logprob: -9.658971786499023
    5. 'a' → logprob: -9.783971786499023
    6. ' at' → logprob: -11.783971786499023
    7. 'ated' → logprob: -12.158971786499023
    8. 'at' → logprob: -12.158971786499023
    9. 's' → logprob: -12.908971786499023
    10. 'es' → logprob: -13.283971786499023

Token 621: ' approach' (ID: 7139)
  Prédit: ' approach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.08758072555065155
    2. ' method' → logprob: -3.712580680847168
    3. ' ' → logprob: -4.087580680847168
    4. ' def' → logprob: -4.837580680847168
    5. '_' → logprob: -4.962580680847168
    6. ' space' → logprob: -5.087580680847168
    7. ' _' → logprob: -5.337580680847168
    8. '<|end|>' → logprob: -5.462580680847168
    9. ',' → logprob: -6.087580680847168
    10. ' ,' → logprob: -6.337580680847168

Token 622: ' supports' (ID: 17203)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8129017353057861
    2. '<|end|>' → logprob: -1.1879017353057861
    3. ' ' → logprob: -2.437901735305786
    4. ' :' → logprob: -3.062901735305786
    5. ',' → logprob: -3.312901735305786
    6. '<|end|>' → logprob: -3.812901735305786
    7. ' is' → logprob: -4.687901496887207
    8. ' continues' → logprob: -4.812901496887207
    9. '   ' → logprob: -4.937901496887207
    10. ' ,' → logprob: -5.062901496887207

Token 623: ' future' (ID: 5277)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' only' → logprob: -1.9197723865509033
    2. ' all' → logprob: -2.1697723865509033
    3. 'b' → logprob: -2.4197723865509033
    4. ' small' → logprob: -2.5447723865509033
    5. ' total' → logprob: -3.0447723865509033
    6. ' splitting' → logprob: -3.1697723865509033
    7. 'def' → logprob: -3.4197723865509033
    8. 'all' → logprob: -3.5447723865509033
    9. ' generating' → logprob: -3.6697723865509033
    10. 'total' → logprob: -3.7947723865509033

Token 624: ' extension' (ID: 15369)
  Prédit: ' expansions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expansions' → logprob: -0.9663670063018799
    2. ' extensions' → logprob: -1.4663670063018799
    3. ' expansion' → logprob: -2.34136700630188
    4. 'extensions' → logprob: -2.96636700630188
    5. ' extension' → logprob: -3.46636700630188
    6. ' b' → logprob: -3.84136700630188
    7. ' enhancements' → logprob: -3.96636700630188
    8. 'expand' → logprob: -4.091366767883301
    9. ' use' → logprob: -4.091366767883301
    10. 'b' → logprob: -4.216366767883301

Token 625: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9900111556053162
    2. ':' → logprob: -1.240011215209961
    3. '.' → logprob: -1.365011215209961
    4. ':
' → logprob: -3.740011215209961
    5. ',' → logprob: -3.990011215209961
    6. '
' → logprob: -4.740011215209961
    7. ' for' → logprob: -5.490011215209961
    8. '.
' → logprob: -5.490011215209961
    9. '"""' → logprob: -5.615011215209961
    10. '<|end|>' → logprob: -5.615011215209961

Token 626: 'dynamic' (ID: 46433)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0894688218832016
    2. '   ' → logprob: -4.214468955993652
    3. ' )' → logprob: -4.214468955993652
    4. '):' → logprob: -4.339468955993652
    5. ')
' → logprob: -4.464468955993652
    6. '):
' → logprob: -4.714468955993652
    7. ' for' → logprob: -4.714468955993652
    8. ').' → logprob: -5.089468955993652
    9. '
' → logprob: -7.214468955993652
    10. 'def' → logprob: -7.464468955993652

Token 627: ' obstacle' (ID: 57212)
  Prédit: ' programming'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' programming' → logprob: -0.004797138273715973
    2. 'program' → logprob: -5.629796981811523
    3. '_program' → logprob: -7.254796981811523
    4. 'Programming' → logprob: -8.629796981811523
    5. '
' → logprob: -10.129796981811523
    6. ')' → logprob: -10.254796981811523
    7. '   ' → logprob: -10.379796981811523
    8. ' program' → logprob: -10.504796981811523
    9. 'import' → logprob: -11.004796981811523
    10. '-program' → logprob: -11.129796981811523

Token 628: ' avoidance' (ID: 128227)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10393790155649185
    2. ')' → logprob: -3.853937864303589
    3. ' placement' → logprob: -4.228938102722168
    4. ' s' → logprob: -4.353938102722168
    5. ' )' → logprob: -4.353938102722168
    6. ' splitting' → logprob: -5.228938102722168
    7. '_s' → logprob: -5.603938102722168
    8. ')s' → logprob: -5.728938102722168
    9. 'spl' → logprob: -5.853938102722168
    10. '_positions' → logprob: -5.978938102722168

Token 629: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027168119326233864
    2. ')
' → logprob: -4.402168273925781
    3. '   ' → logprob: -5.027168273925781
    4. '):' → logprob: -5.652168273925781
    5. ').' → logprob: -6.027168273925781
    6. '):
' → logprob: -7.152168273925781
    7. '.' → logprob: -8.402168273925781
    8. ',' → logprob: -9.152168273925781
    9. ')

' → logprob: -9.277168273925781
    10. '"""' → logprob: -9.277168273925781

Token 630: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2748739421367645
    2. ':' → logprob: -1.524873971939087
    3. '
' → logprob: -4.774873733520508
    4. ':
' → logprob: -4.899873733520508
    5. '.' → logprob: -5.774873733520508
    6. ',' → logprob: -7.024873733520508
    7. '):
' → logprob: -7.274873733520508
    8. '):' → logprob: -7.274873733520508
    9. '    
' → logprob: -7.649873733520508
    10. '<|end|>' → logprob: -8.399873733520508

Token 631: ' """
' (ID: 7037)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12896500527858734
    2. '   ' → logprob: -2.503964900970459
    3. ':
' → logprob: -3.628964900970459
    4. '
' → logprob: -4.628964900970459
    5. '.' → logprob: -6.503964900970459
    6. '):
' → logprob: -8.128965377807617
    7. '    
' → logprob: -8.253965377807617
    8. '):' → logprob: -8.378965377807617
    9. ',' → logprob: -8.628965377807617
    10. ' :' → logprob: -9.253965377807617

Token 632: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01108731608837843
    2. 'def' → logprob: -4.761087417602539
    3. '
' → logprob: -6.136087417602539
    4. ' def' → logprob: -8.386087417602539
    5. '    
' → logprob: -9.761087417602539
    6. '	def' → logprob: -10.886087417602539
    7. '
' → logprob: -14.136087417602539
    8. '        
' → logprob: -15.511087417602539
    9. '   
' → logprob: -15.636087417602539
    10. '  ' → logprob: -16.01108741760254

Token 633: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.007058592047542334
    2. ' def' → logprob: -5.007058620452881
    3. '   ' → logprob: -8.632058143615723
    4. 'from' → logprob: -8.882058143615723
    5. 'import' → logprob: -10.632058143615723
    6. ' from' → logprob: -13.757058143615723
    7. '
' → logprob: -14.757058143615723
    8. 'de' → logprob: -14.882058143615723
    9. '	def' → logprob: -16.50705909729004
    10. ' import' → logprob: -17.63205909729004

Token 634: ' generate' (ID: 10419)
  Prédit: ' generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' generate' → logprob: -0.3345489799976349
    2. 'generate' → logprob: -1.4595489501953125
    3. '_generate' → logprob: -3.9595489501953125
    4. ' def' → logprob: -4.3345489501953125
    5. ' _' → logprob: -4.3345489501953125
    6. 'def' → logprob: -5.5845489501953125
    7. ' __' → logprob: -6.5845489501953125
    8. '__' → logprob: -7.4595489501953125
    9. '_' → logprob: -7.8345489501953125
    10. 'from' → logprob: -9.459548950195312

Token 635: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.5
    3. ' _' → logprob: -17.125
    4. 'spl' → logprob: -17.375
    5. '\' → logprob: -18.5
    6. 's' → logprob: -19.0
    7. '```' → logprob: -19.0
    8. ' ' → logprob: -19.375
    9. '   ' → logprob: -20.25
    10. '_all' → logprob: -20.375

Token 636: 'plits' (ID: 130884)
  Prédit: 'plits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plits' → logprob: -0.3869580626487732
    2. '_s' → logprob: -1.136958122253418
    3. 'spl' → logprob: -10.136958122253418
    4. '_' → logprob: -10.511958122253418
    5. '_pl' → logprob: -11.636958122253418
    6. 'l' → logprob: -12.761958122253418
    7. 's' → logprob: -13.386958122253418
    8. 'plit' → logprob: -13.386958122253418
    9. ' splits' → logprob: -13.886958122253418
    10. 'pl' → logprob: -14.261958122253418

Token 637: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00016384923947043717
    2. '(' → logprob: -8.750164031982422
    3. '(
' → logprob: -12.250164031982422
    4. 'self' → logprob: -14.875164031982422
    5. ' (' → logprob: -16.000164031982422
    6. '(Self' → logprob: -18.000164031982422
    7. '   ' → logprob: -18.375164031982422
    8. '(sel' → logprob: -18.875164031982422
    9. '(s' → logprob: -19.000164031982422
    10. 'def' → logprob: -19.000164031982422

Token 638: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002354832977289334
    2. '(' → logprob: -8.750235557556152
    3. ' (' → logprob: -10.000235557556152
    4. 'self' → logprob: -10.875235557556152
    5. ')(' → logprob: -12.375235557556152
    6. '(
' → logprob: -12.500235557556152
    7. ',' → logprob: -13.375235557556152
    8. ')' → logprob: -13.500235557556152
    9. ' self' → logprob: -14.500235557556152
    10. ',self' → logprob: -14.625235557556152

Token 639: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.254762202501297
    2. 'total' → logprob: -1.5047621726989746
    3. 'self' → logprob: -6.254762172698975
    4. ' self' → logprob: -7.004762172698975
    5. ' ' → logprob: -16.879762649536133
    6. '   ' → logprob: -16.879762649536133
    7. '       ' → logprob: -17.129762649536133
    8. '(total' → logprob: -17.879762649536133
    9. '_total' → logprob: -18.254762649536133
    10. 'Total' → logprob: -18.504762649536133

Token 640: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.00014704519708175212
    2. '_' → logprob: -9.250146865844727
    3. '_dist' → logprob: -10.750146865844727
    4. '_s' → logprob: -11.250146865844727
    5. '_d' → logprob: -11.750146865844727
    6. ' _' → logprob: -12.125146865844727
    7. '_b' → logprob: -14.500146865844727
    8. ')_' → logprob: -14.875146865844727
    9. '_D' → logprob: -15.375146865844727
    10. '_length' → logprob: -15.375146865844727

Token 641: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012720837257802486
    2. ':' → logprob: -4.387721061706543
    3. 'self' → logprob: -9.387721061706543
    4. ' ,' → logprob: -9.637721061706543
    5. '   ' → logprob: -10.762721061706543
    6. '       ' → logprob: -10.887721061706543
    7. ':int' → logprob: -11.262721061706543
    8. ' self' → logprob: -13.137721061706543
    9. ' :' → logprob: -13.137721061706543
    10. ',self' → logprob: -13.387721061706543

Token 642: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00862213596701622
    2. ' int' → logprob: -4.758622169494629
    3. ' ' → logprob: -12.383622169494629
    4. '   ' → logprob: -13.508622169494629
    5. '[int' → logprob: -14.008622169494629
    6. '	int' → logprob: -15.508622169494629
    7. '       ' → logprob: -15.758622169494629
    8. '(int' → logprob: -16.008621215820312
    9. '```' → logprob: -16.008621215820312
    10. '  ' → logprob: -16.133621215820312

Token 643: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.8497312895488e-05
    2. ' ,' → logprob: -9.875068664550781
    3. ',b' → logprob: -11.000068664550781
    4. '   ' → logprob: -16.00006866455078
    5. 'b' → logprob: -16.37506866455078
    6. ',
' → logprob: -16.37506866455078
    7. ' b' → logprob: -18.12506866455078
    8. ')' → logprob: -18.25006866455078
    9. '‌,' → logprob: -19.50006866455078
    10. '       ' → logprob: -19.87506866455078

Token 644: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06994721293449402
    2. ' b' → logprob: -2.6949472427368164
    3. '   ' → logprob: -11.819947242736816
    4. ' ' → logprob: -13.694947242736816
    5. 'bounce' → logprob: -13.694947242736816
    6. '	b' → logprob: -14.444947242736816
    7. ' bounce' → logprob: -15.069947242736816
    8. '    ' → logprob: -15.569947242736816
    9. '       ' → logprob: -15.569947242736816
    10. '  ' → logprob: -17.1949462890625

Token 645: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -0.0052153789438307285
    2. ':' → logprob: -5.630215167999268
    3. '+' → logprob: -7.380215167999268
    4. ')' → logprob: -8.130215644836426
    5. '   ' → logprob: -8.505215644836426
    6. ',' → logprob: -9.130215644836426
    7. 'oun' → logprob: -9.380215644836426
    8. '_' → logprob: -9.380215644836426
    9. 'ounce' → logprob: -9.630215644836426
    10. ' ' → logprob: -10.880215644836426

Token 646: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028609856963157654
    2. ':' → logprob: -6.127861022949219
    3. '   ' → logprob: -8.502861022949219
    4. '):' → logprob: -8.752861022949219
    5. '):
' → logprob: -8.877861022949219
    6. '+' → logprob: -9.377861022949219
    7. ' )' → logprob: -9.502861022949219
    8. ' +' → logprob: -11.752861022949219
    9. '       ' → logprob: -13.127861022949219
    10. ' ' → logprob: -13.752861022949219

Token 647: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.42540469765663147
    2. '0' → logprob: -1.800404667854309
    3. '1' → logprob: -1.800404667854309
    4. ' int' → logprob: -4.9254045486450195
    5. ')' → logprob: -5.3004045486450195
    6. ' ' → logprob: -5.8004045486450195
    7. ':int' → logprob: -8.30040454864502
    8. '+' → logprob: -9.17540454864502
    9. '[int' → logprob: -9.42540454864502
    10. '   ' → logprob: -9.55040454864502

Token 648: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.463036435074173e-05
    2. '):' → logprob: -11.250024795532227
    3. '):
' → logprob: -12.250024795532227
    4. ' )' → logprob: -12.500024795532227
    5. ':' → logprob: -13.750024795532227
    6. ')->' → logprob: -13.750024795532227
    7. '   ' → logprob: -14.250024795532227
    8. '):
' → logprob: -16.000024795532227
    9. '       ' → logprob: -17.000024795532227
    10. ',)' → logprob: -17.500024795532227

Token 649: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05172545462846756
    2. ' ->' → logprob: -3.176725387573242
    3. '->' → logprob: -4.926725387573242
    4. ':
' → logprob: -6.801725387573242
    5. '   ' → logprob: -8.551725387573242
    6. ')' → logprob: -9.676725387573242
    7. ' :' → logprob: -10.676725387573242
    8. ':return' → logprob: -11.051725387573242
    9. '       ' → logprob: -11.176725387573242
    10. ':
' → logprob: -12.051725387573242

Token 650: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.20144110918045044
    2. ' List' → logprob: -1.7014410495758057
    3. 'int' → logprob: -11.451440811157227
    4. 'Iterator' → logprob: -12.326440811157227
    5. '[List' → logprob: -12.326440811157227
    6. 'Generator' → logprob: -12.951440811157227
    7. ' Iterator' → logprob: -13.326440811157227
    8. ' int' → logprob: -14.201440811157227
    9. 'yield' → logprob: -14.451440811157227
    10. '	List' → logprob: -14.576440811157227

Token 651: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -3.79811754100956e-05
    2. '[[' → logprob: -10.250038146972656
    3. '[' → logprob: -13.125038146972656
    4. '[
' → logprob: -14.875038146972656
    5. '[list' → logprob: -16.750038146972656
    6. '[int' → logprob: -16.750038146972656
    7. 'List' → logprob: -17.875038146972656
    8. '<List' → logprob: -18.000038146972656
    9. '```' → logprob: -19.875038146972656
    10. '
' → logprob: -20.250038146972656

Token 652: '[int' (ID: 40124)
  Prédit: '[List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.3132637143135071
    2. '[int' → logprob: -1.3132636547088623
    3. '[' → logprob: -13.563263893127441
    4. '[list' → logprob: -14.688263893127441
    5. '[Int' → logprob: -15.813263893127441
    6. '[[' → logprob: -16.563262939453125
    7. 'List' → logprob: -17.438262939453125
    8. 'int' → logprob: -17.813262939453125
    9. '[
' → logprob: -18.313262939453125
    10. '```' → logprob: -18.688262939453125

Token 653: ']]:
' (ID: 183340)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.206645205616951
    2. ']:' → logprob: -1.7066452503204346
    3. ']:
' → logprob: -5.4566450119018555
    4. ']' → logprob: -7.0816450119018555
    5. ']:

' → logprob: -10.331645011901855
    6. ']]:
' → logprob: -10.581645011901855
    7. '   ' → logprob: -10.956645011901855
    8. '[int' → logprob: -11.331645011901855
    9. '[' → logprob: -11.831645011901855
    10. '']:
' → logprob: -12.456645011901855

Token 654: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2352385965641588e-05
    2. '```' → logprob: -12.375012397766113
    3. '   ' → logprob: -13.500012397766113
    4. ':' → logprob: -14.125012397766113
    5. '[' → logprob: -14.125012397766113
    6. '        
' → logprob: -14.250012397766113
    7. '[]' → logprob: -14.375012397766113
    8. 'result' → logprob: -14.625012397766113
    9. '	' → logprob: -14.875012397766113
    10. '#' → logprob: -14.875012397766113

Token 655: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12074228376150131
    2. 'if' (adapté à ' if') → logprob: -2.7457423210144043
    3. 'def' → logprob: -3.4957423210144043
    4. ' if' → logprob: -4.620742321014404
    5. 'from' → logprob: -4.995742321014404
    6. 'result' → logprob: -6.745742321014404
    7. 'results' → logprob: -7.620742321014404
    8. '```' → logprob: -8.245741844177246
    9. 'ranges' → logprob: -8.370741844177246
    10. 'res' → logprob: -8.995741844177246

Token 656: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.079356350004673
    2. 'b' → logprob: -2.5793564319610596
    3. ' total' → logprob: -8.32935619354248
    4. 'total' → logprob: -8.95435619354248
    5. ' not' → logprob: -9.45435619354248
    6. 'not' → logprob: -12.07935619354248
    7. ' ' → logprob: -12.32935619354248
    8. '	b' → logprob: -12.32935619354248
    9. '(b' → logprob: -13.57935619354248
    10. ' (' → logprob: -15.07935619354248

Token 657: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -0.19717101752758026
    2. '==' → logprob: -2.1971709728240967
    3. ' ==' → logprob: -2.8221709728240967
    4. '   ' → logprob: -5.572171211242676
    5. '       ' → logprob: -6.572171211242676
    6. '=' → logprob: -6.947171211242676
    7. 'ounds' → logprob: -7.072171211242676
    8. ' ' → logprob: -8.447171211242676
    9. '```' → logprob: -8.572171211242676
    10. '        ' → logprob: -9.072171211242676

Token 658: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01252248790115118
    2. '==' → logprob: -4.3875226974487305
    3. ' <' → logprob: -11.51252269744873
    4. ' <=' → logprob: -13.51252269744873
    5. ' ' → logprob: -14.88752269744873
    6. '<' → logprob: -15.13752269744873
    7. '=' → logprob: -15.26252269744873
    8. ' =' → logprob: -15.38752269744873
    9. '0' → logprob: -16.387521743774414
    10. ' +' → logprob: -16.512521743774414

Token 659: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06196925416588783
    2. ' ' → logprob: -2.81196928024292
    3. ' -' → logprob: -14.686968803405762
    4. '-' → logprob: -14.811968803405762
    5. '   ' → logprob: -14.936968803405762
    6. '1' → logprob: -15.249468803405762
    7. '  ' → logprob: -16.686969757080078
    8. ' ' → logprob: -17.124469757080078
    9. '۰' → logprob: -17.624469757080078
    10. '00' → logprob: -17.624469757080078

Token 660: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.811348480870947e-05
    2. ' ' → logprob: -10.00004768371582
    3. '-' → logprob: -13.50004768371582
    4. '1' → logprob: -14.00004768371582
    5. '   ' → logprob: -15.56254768371582
    6. ' -' → logprob: -16.37504768371582
    7. '۰' → logprob: -17.43754768371582
    8. '  ' → logprob: -17.62504768371582
    9. '```' → logprob: -17.75004768371582
    10. ' ' → logprob: -17.87504768371582

Token 661: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3626672625541687
    2. ':' → logprob: -1.2376673221588135
    3. '           ' → logprob: -4.487667083740234
    4. ':return' → logprob: -6.737667083740234
    5. '       ' → logprob: -6.862667083740234
    6. ':
' → logprob: -7.487667083740234
    7. ' and' → logprob: -10.612667083740234
    8. '):
' → logprob: -11.737667083740234
    9. ' or' → logprob: -11.862667083740234
    10. 'return' → logprob: -11.987667083740234

Token 662: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012763435021042824
    2. 'return' → logprob: -5.137763500213623
    3. ' return' → logprob: -6.012763500213623
    4. '       ' → logprob: -6.512763500213623
    5. ':
' → logprob: -6.762763500213623
    6. ':' → logprob: -7.012763500213623
    7. ':return' → logprob: -7.637763500213623
    8. '   ' → logprob: -8.762763023376465
    9. '	       ' → logprob: -9.262763023376465
    10. '	return' → logprob: -10.637763023376465

Token 663: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.015652691945433617
    2. '           ' → logprob: -4.515652656555176
    3. ' return' → logprob: -5.390652656555176
    4. '{return' → logprob: -11.265652656555176
    5. ':return' → logprob: -11.765652656555176
    6. '	return' → logprob: -11.890652656555176
    7. '       ' → logprob: -12.515652656555176
    8. '
' → logprob: -14.015652656555176
    9. '               ' → logprob: -14.390652656555176
    10. '   ' → logprob: -14.390652656555176

Token 664: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -9.722539834911004e-05
    2. ' [[' → logprob: -9.250097274780273
    3. '[' → logprob: -13.875097274780273
    4. '[
' → logprob: -16.750097274780273
    5. '([[' → logprob: -16.875097274780273
    6. '   ' → logprob: -17.500097274780273
    7. '[['' → logprob: -18.750097274780273
    8. ' ' → logprob: -20.000097274780273
    9. '[(' → logprob: -20.500097274780273
    10. '       ' → logprob: -20.625097274780273

Token 665: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0019347082125023007
    2. '[' → logprob: -6.25193452835083
    3. ' total' → logprob: -12.251935005187988
    4. '(total' → logprob: -14.001935005187988
    5. ' [' → logprob: -16.001934051513672
    6. '$total' → logprob: -16.251934051513672
    7. '   ' → logprob: -16.376934051513672
    8. '0' → logprob: -17.501934051513672
    9. ']' → logprob: -17.626934051513672
    10. '	total' → logprob: -18.126934051513672

Token 666: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.0002932750794570893
    2. 'distance' → logprob: -8.250293731689453
    3. 'Distance' → logprob: -10.375293731689453
    4. '_DISTANCE' → logprob: -15.000293731689453
    5. '_' → logprob: -16.125293731689453
    6. ']' → logprob: -16.125293731689453
    7. '_dist' → logprob: -16.250293731689453
    8. ' distance' → logprob: -17.125293731689453
    9. 'istance' → logprob: -17.375293731689453
    10. ')]' → logprob: -17.625293731689453

Token 667: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.016356216743588448
    2. ']' → logprob: -4.141355991363525
    3. ']]
' → logprob: -8.641356468200684
    4. ' ]]' → logprob: -9.016356468200684
    5. ']]

' → logprob: -11.641356468200684
    6. ' ]' → logprob: -12.516356468200684
    7. ')]' → logprob: -12.891356468200684
    8. ']]]' → logprob: -13.016356468200684
    9. ']]
' → logprob: -13.266356468200684
    10. '']]' → logprob: -13.391356468200684

Token 668: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8530928492546082
    2. '       ' → logprob: -0.9780928492546082
    3. '\n' → logprob: -1.853092908859253
    4. '        
' → logprob: -3.478092908859253
    5. '[' → logprob: -6.228092670440674
    6. '    
' → logprob: -6.228092670440674
    7. '\x' → logprob: -6.478092670440674
    8. ' 
' → logprob: -6.978092670440674
    9. '\' → logprob: -7.353092670440674
    10. '\
' → logprob: -7.728092670440674

Token 669: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.744164228439331
    2. '       ' → logprob: -1.244164228439331
    3. 'result' → logprob: -2.494164228439331
    4. '        
' → logprob: -3.119164228439331
    5. 'spl' → logprob: -3.244164228439331
    6. 'res' → logprob: -3.744164228439331
    7. 'from' → logprob: -4.49416446685791
    8. 'results' → logprob: -4.99416446685791
    9. ' splits' → logprob: -4.99416446685791
    10. '[' → logprob: -5.36916446685791

Token 670: ' Generate' (ID: 33886)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -1.1352356672286987
    2. 'spl' → logprob: -1.1352356672286987
    3. 'from' → logprob: -1.8852356672286987
    4. 'result' → logprob: -1.8852356672286987
    5. 'res' → logprob: -3.1352357864379883
    6. 'import' → logprob: -5.885235786437988
    7. '   ' → logprob: -6.010235786437988
    8. 'def' → logprob: -6.385235786437988
    9. 'segments' → logprob: -6.510235786437988
    10. ' splits' → logprob: -7.635235786437988

Token 671: ' all' (ID: 722)
  Prédit: 'spl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spl' → logprob: -0.2208995521068573
    2. 'results' → logprob: -2.5958995819091797
    3. 'result' → logprob: -3.2208995819091797
    4. 'all' → logprob: -3.4708995819091797
    5. 'positions' → logprob: -4.09589958190918
    6. 'res' → logprob: -4.47089958190918
    7. '[]' → logprob: -4.84589958190918
    8. '[[' → logprob: -5.84589958190918
    9. '[
' → logprob: -5.97089958190918
    10. '[s' → logprob: -6.09589958190918

Token 672: ' possible' (ID: 4149)
  Prédit: 'spl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spl' → logprob: -0.03477558493614197
    2. 'results' → logprob: -3.909775495529175
    3. ' splits' → logprob: -4.909775733947754
    4. 'result' → logprob: -5.784775733947754
    5. 'positions' → logprob: -6.409775733947754
    6. ' results' → logprob: -6.784775733947754
    7. 'possible' → logprob: -8.784775733947754
    8. '   ' → logprob: -8.909775733947754
    9. 'from' → logprob: -8.909775733947754
    10. 'split' → logprob: -9.159775733947754

Token 673: ' sorted' (ID: 20099)
  Prédit: 'spl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spl' → logprob: -0.12431545555591583
    2. ' splits' → logprob: -2.3743155002593994
    3. 'positions' → logprob: -4.62431526184082
    4. ' positions' → logprob: -5.24931526184082
    5. 'split' → logprob: -5.87431526184082
    6. ' results' → logprob: -6.37431526184082
    7. 'results' → logprob: -6.37431526184082
    8. '[' → logprob: -6.99931526184082
    9. 'result' → logprob: -7.49931526184082
    10. ' spl' → logprob: -7.87431526184082

Token 674: ' tuples' (ID: 112464)
  Prédit: 'spl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spl' → logprob: -0.5988785028457642
    2. 'positions' → logprob: -1.0988785028457642
    3. 'split' → logprob: -2.7238783836364746
    4. ' splits' → logprob: -3.7238783836364746
    5. ' positions' → logprob: -4.098878383636475
    6. ' split' → logprob: -6.098878383636475
    7. 'lists' → logprob: -6.223878383636475
    8. 'cuts' → logprob: -6.348878383636475
    9. '[' → logprob: -6.723878383636475
    10. 'com' → logprob: -7.223878383636475

Token 675: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.18673183023929596
    2. 'from' → logprob: -2.8117318153381348
    3. ' from' → logprob: -3.3117318153381348
    4. '(range' → logprob: -3.6867318153381348
    5. '(' → logprob: -4.311731815338135
    6. ' (' → logprob: -4.936731815338135
    7. 'of' → logprob: -5.061731815338135
    8. '(
' → logprob: -5.436731815338135
    9. '[' → logprob: -6.061731815338135
    10. 's' → logprob: -6.186731815338135

Token 676: ' bounce' (ID: 57156)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.9641139507293701
    2. 'positions' → logprob: -0.9641139507293701
    3. '[b' → logprob: -2.71411395072937
    4. ' positions' → logprob: -2.83911395072937
    5. ' b' → logprob: -3.08911395072937
    6. 'range' → logprob: -3.21411395072937
    7. 'split' → logprob: -4.839114189147949
    8. 'length' → logprob: -5.839114189147949
    9. '[' → logprob: -5.964114189147949
    10. 'inte' → logprob: -6.089114189147949

Token 677: ' positions' (ID: 15897)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.7098205089569092
    2. ' positions' → logprob: -1.7098205089569092
    3. 'positions' → logprob: -1.8348205089569092
    4. '_points' → logprob: -2.709820508956909
    5. 's' → logprob: -2.834820508956909
    6. 'points' → logprob: -3.959820508956909
    7. ' points' → logprob: -4.584820747375488
    8. '_dist' → logprob: -5.084820747375488
    9. '_' → logprob: -5.584820747375488
    10. 'dist' → logprob: -6.584820747375488

Token 678: ' between' (ID: 2870)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -1.3911956548690796
    2. 'from' → logprob: -1.5161956548690796
    3. '       ' → logprob: -1.8911956548690796
    4. '(range' → logprob: -2.641195774078369
    5. '(' → logprob: -2.766195774078369
    6. ':' → logprob: -3.016195774078369
    7. ',' → logprob: -3.266195774078369
    8. ' (' → logprob: -3.391195774078369
    9. '[' → logprob: -3.391195774078369
    10. '<|end|>' → logprob: -4.516195774078369

Token 679: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007326744962483644
    2. '0' → logprob: -7.750732898712158
    3. ' ' → logprob: -8.250732421875
    4. '[' → logprob: -11.000732421875
    5. 'range' → logprob: -11.000732421875
    6. '(' → logprob: -12.875732421875
    7. '`' → logprob: -13.375732421875
    8. '```' → logprob: -14.000732421875
    9. ' range' → logprob: -14.750732421875
    10. ' [' → logprob: -14.750732421875

Token 680: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011967786122113466
    2. '0' → logprob: -6.75119686126709
    3. 'range' → logprob: -11.37619686126709
    4. ' ' → logprob: -11.75119686126709
    5. '[' → logprob: -12.12619686126709
    6. '(' → logprob: -14.50119686126709
    7. '```' → logprob: -15.00119686126709
    8. '
' → logprob: -15.25119686126709
    9. '`' → logprob: -15.37619686126709
    10. ' range' → logprob: -16.626195907592773

Token 681: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.024088161066174507
    2. 'and' → logprob: -4.149088382720947
    3. ',' → logprob: -5.274088382720947
    4. '+' → logprob: -6.399088382720947
    5. ' ' → logprob: -7.649088382720947
    6. ' ,' → logprob: -8.024087905883789
    7. '1' → logprob: -8.399087905883789
    8. ' +' → logprob: -8.774087905883789
    9. ',
' → logprob: -10.899087905883789
    10. ' <' → logprob: -11.399087905883789

Token 682: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.07889540493488312
    2. ' total' → logprob: -2.578895330429077
    3. '
' → logprob: -12.703895568847656
    4. '(total' → logprob: -14.203895568847656
    5. '```' → logprob: -14.328895568847656
    6. '`' → logprob: -14.703895568847656
    7. '	total' → logprob: -14.953895568847656
    8. ',total' → logprob: -15.703895568847656
    9. '$total' → logprob: -15.828895568847656
    10. ' ' → logprob: -16.328895568847656

Token 683: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -1.4021237802808173e-05
    2. 'distance' → logprob: -11.500014305114746
    3. '_' → logprob: -12.875014305114746
    4. ' _' → logprob: -14.375014305114746
    5. 'Distance' → logprob: -14.625014305114746
    6. '_dist' → logprob: -16.25001335144043
    7. ' distance' → logprob: -16.62501335144043
    8. '_DISTANCE' → logprob: -17.12501335144043
    9. '_position' → logprob: -17.87501335144043
    10. '```' → logprob: -18.00001335144043

Token 684: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9007082581520081
    2. ':' → logprob: -1.1507081985473633
    3. '       ' → logprob: -1.7757081985473633
    4. ' :' → logprob: -3.2757081985473633
    5. ' ,' → logprob: -3.4007081985473633
    6. '   ' → logprob: -4.525708198547363
    7. '[' → logprob: -5.275708198547363
    8. '
' → logprob: -5.650708198547363
    9. ' (' → logprob: -5.775708198547363
    10. '(' → logprob: -6.025708198547363

Token 685: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46455273032188416
    2. ':' → logprob: -1.0895527601242065
    3. ',' → logprob: -4.214552879333496
    4. ' :' → logprob: -5.089552879333496
    5. '[' → logprob: -5.339552879333496
    6. '   ' → logprob: -5.464552879333496
    7. '<|end|>' → logprob: -6.214552879333496
    8. '        
' → logprob: -7.714552879333496
    9. '	' → logprob: -7.964552879333496
    10. '<|end|>' → logprob: -8.214552879333496

Token 686: ' results' (ID: 4376)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0949218273162842
    2. ' 
' → logprob: -1.0949218273162842
    3. '
' → logprob: -1.8449218273162842
    4. '[' → logprob: -2.969921827316284
    5. 'result' → logprob: -3.969921827316284
    6. '        
' → logprob: -4.094922065734863
    7. ':' → logprob: -4.344922065734863
    8. ' [
' → logprob: -4.719922065734863
    9. '[
' → logprob: -4.969922065734863
    10. ' [' → logprob: -5.094922065734863

Token 687: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0005616117268800735
    2. '=' → logprob: -7.625561714172363
    3. '=[]' → logprob: -9.750561714172363
    4. ':' → logprob: -11.500561714172363
    5. '=[]
' → logprob: -12.625561714172363
    6. ',' → logprob: -13.625561714172363
    7. '=[]
' → logprob: -15.625561714172363
    8. '.append' → logprob: -16.250560760498047
    9. '   ' → logprob: -16.500560760498047
    10. '  ' → logprob: -17.000560760498047

Token 688: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3303162753582001
    2. '[]
' → logprob: -1.3303163051605225
    3. '[]

' → logprob: -4.080316066741943
    4. ' []
' → logprob: -12.205316543579102
    5. ' []' → logprob: -12.955316543579102
    6. ' []

' → logprob: -14.830316543579102
    7. '[][]' → logprob: -17.7053165435791
    8. '[' → logprob: -17.9553165435791
    9. '[]"' → logprob: -18.0803165435791
    10. '[]}' → logprob: -18.0803165435791

Token 689: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014164448715746403
    2. '	' → logprob: -4.764164447784424
    3. '
' → logprob: -5.889164447784424
    4. '   ' → logprob: -7.639164447784424
    5. '        
' → logprob: -7.639164447784424
    6. '		
' → logprob: -7.889164447784424
    7. '	   ' → logprob: -7.889164447784424
    8. '    ' → logprob: -8.764164924621582
    9. '        ' → logprob: -8.889164924621582
    10. '	       ' → logprob: -9.514164924621582

Token 690: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06792613118886948
    2. 'from' → logprob: -2.8179261684417725
    3. '       ' → logprob: -5.192925930023193
    4. ' def' → logprob: -8.442926406860352
    5. 'import' → logprob: -9.067926406860352
    6. '	def' → logprob: -10.442926406860352
    7. '   ' → logprob: -11.817926406860352
    8. '
' → logprob: -12.442926406860352
    9. 'start' → logprob: -12.567926406860352
    10. 'for' → logprob: -12.692926406860352

Token 691: ' back' (ID: 1602)
  Prédit: ' back'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' back' → logprob: -0.01505257561802864
    2. 'back' → logprob: -4.765052795410156
    3. ' dfs' → logprob: -5.515052795410156
    4. 'dfs' → logprob: -6.265052795410156
    5. ' helper' → logprob: -7.890052795410156
    6. '_back' → logprob: -9.515052795410156
    7. 'helper' → logprob: -10.890052795410156
    8. ' recurse' → logprob: -11.640052795410156
    9. ' rec' → logprob: -12.390052795410156
    10. ' _' → logprob: -12.765052795410156

Token 692: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -0.008620958775281906
    2. 'tracking' → logprob: -5.258620738983154
    3. 'trace' → logprob: -5.758620738983154
    4. '_track' → logprob: -9.258621215820312
    5. 'tr' → logprob: -9.383621215820312
    6. 'tract' → logprob: -10.758621215820312
    7. '   ' → logprob: -11.883621215820312
    8. 'tracker' → logprob: -12.383621215820312
    9. 't' → logprob: -12.883621215820312
    10. 'trak' → logprob: -13.633621215820312

Token 693: '(start' (ID: 20008)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.5046334862709045
    2. '(start' → logprob: -1.0046334266662598
    3. '(position' → logprob: -4.00463342666626
    4. '(current' → logprob: -5.87963342666626
    5. '(idx' → logprob: -6.00463342666626
    6. '(curr' → logprob: -6.25463342666626
    7. '(cur' → logprob: -6.25463342666626
    8. '(index' → logprob: -6.75463342666626
    9. '(self' → logprob: -7.12963342666626
    10. '(path' → logprob: -8.379633903503418

Token 694: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003649017889983952
    2. ':' → logprob: -9.000365257263184
    3. ',pos' → logprob: -9.250365257263184
    4. 'pos' → logprob: -10.125365257263184
    5. ' ,' → logprob: -10.250365257263184
    6. '(pos' → logprob: -10.750365257263184
    7. ',current' → logprob: -11.750365257263184
    8. '       ' → logprob: -12.000365257263184
    9. ',end' → logprob: -12.375365257263184
    10. '           ' → logprob: -12.750365257263184

Token 695: ' int' (ID: 677)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4470839202404022
    2. '0' → logprob: -1.0720839500427246
    3. 'start' → logprob: -4.197083950042725
    4. 'int' → logprob: -6.822083950042725
    5. 'def' → logprob: -7.947083950042725
    6. 'b' → logprob: -8.197083473205566
    7. ')' → logprob: -8.322083473205566
    8. ',' → logprob: -8.447083473205566
    9. 'range' → logprob: -8.822083473205566
    10. '
' → logprob: -9.072083473205566

Token 696: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002258277963846922
    2. ',pos' → logprob: -8.750226020812988
    3. ',current' → logprob: -10.500226020812988
    4. ' ,' → logprob: -11.125226020812988
    5. ',
' → logprob: -12.250226020812988
    6. 'positions' → logprob: -12.375226020812988
    7. ',b' → logprob: -12.625226020812988
    8. 'pos' → logprob: -13.125226020812988
    9. ',length' → logprob: -13.750226020812988
    10. ',start' → logprob: -13.750226020812988

Token 697: ' depth' (ID: 13636)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.7430071830749512
    2. 'spl' → logprob: -1.3680071830749512
    3. 'current' → logprob: -1.9930071830749512
    4. 'b' → logprob: -2.993007183074951
    5. 'depth' → logprob: -3.243007183074951
    6. 'count' → logprob: -4.368007183074951
    7. ' path' → logprob: -4.368007183074951
    8. 'remaining' → logprob: -5.618007183074951
    9. 'split' → logprob: -5.743007183074951
    10. 'curr' → logprob: -6.118007183074951

Token 698: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6347523331642151
    2. ':' → logprob: -0.7597523331642151
    3. '=' → logprob: -6.75975227355957
    4. '):' → logprob: -8.13475227355957
    5. ' ,' → logprob: -8.25975227355957
    6. ':int' → logprob: -8.88475227355957
    7. ')' → logprob: -9.75975227355957
    8. ':,' → logprob: -10.50975227355957
    9. '_tokens' → logprob: -10.63475227355957
    10. '<|end|>' → logprob: -10.63475227355957

Token 699: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4898538589477539
    2. 'b' → logprob: -1.239853858947754
    3. ' int' → logprob: -2.989853858947754
    4. '0' → logprob: -3.364853858947754
    5. ' b' → logprob: -4.614853858947754
    6. ' ' → logprob: -6.364853858947754
    7. '[int' → logprob: -6.989853858947754
    8. ')' → logprob: -9.364853858947754
    9. ':int' → logprob: -9.864853858947754
    10. '   ' → logprob: -9.989853858947754

Token 700: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3795937522663735e-05
    2. ')' → logprob: -11.62502384185791
    3. ' ,' → logprob: -12.00002384185791
    4. '):' → logprob: -12.00002384185791
    5. ',List' → logprob: -13.25002384185791
    6. ',list' → logprob: -15.12502384185791
    7. '):
' → logprob: -15.50002384185791
    8. '   ' → logprob: -16.500022888183594
    9. ',int' → logprob: -16.875022888183594
    10. ',
' → logprob: -17.000022888183594

Token 701: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.4062155485153198
    2. 'current' → logprob: -1.4062155485153198
    3. ' path' → logprob: -2.5312156677246094
    4. ' current' → logprob: -4.781215667724609
    5. 'split' → logprob: -8.03121566772461
    6. 'spl' → logprob: -8.90621566772461
    7. '   ' → logprob: -9.15621566772461
    8. 'curr' → logprob: -9.15621566772461
    9. ' splits' → logprob: -10.53121566772461
    10. 'partial' → logprob: -10.53121566772461

Token 702: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3759704828262329
    2. '):' → logprob: -1.250970482826233
    3. '):
' → logprob: -3.6259703636169434
    4. ':list' → logprob: -8.000970840454102
    5. ')' → logprob: -9.625970840454102
    6. '=[]' → logprob: -10.625970840454102
    7. '=' → logprob: -10.875970840454102
    8. '):

' → logprob: -11.125970840454102
    9. '<|end|>' → logprob: -11.250970840454102
    10. '):
' → logprob: -11.500970840454102

Token 703: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0006545356009155512
    2. 'list' → logprob: -7.500654697418213
    3. '[List' → logprob: -9.750654220581055
    4. ' List' → logprob: -10.125654220581055
    5. '[]' → logprob: -13.250654220581055
    6. '[])' → logprob: -14.750654220581055
    7. ' list' → logprob: -15.000654220581055
    8. '	List' → logprob: -15.625654220581055
    9. '[list' → logprob: -15.625654220581055
    10. '_list' → logprob: -15.875654220581055

Token 704: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -2.1008713702030946e-06
    2. '<int' → logprob: -14.125001907348633
    3. 'int' → logprob: -14.500001907348633
    4. ':' → logprob: -15.500001907348633
    5. ':int' → logprob: -15.750001907348633
    6. '[Int' → logprob: -15.750001907348633
    7. '):
' → logprob: -15.875001907348633
    8. '[List' → logprob: -16.375001907348633
    9. '[' → logprob: -17.000001907348633
    10. '=int' → logprob: -17.125001907348633

Token 705: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17585043609142303
    2. ')' → logprob: -2.1758503913879395
    3. '):
' → logprob: -3.0508503913879395
    4. '):
' → logprob: -7.9258503913879395
    5. ']):' → logprob: -11.050850868225098
    6. ')->' → logprob: -11.550850868225098
    7. '):

' → logprob: -11.925850868225098
    8. ' ):' → logprob: -11.925850868225098
    9. ']):
' → logprob: -12.425850868225098
    10. '   ' → logprob: -12.550850868225098

Token 706: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1602802723646164
    2. ',' → logprob: -2.535280227661133
    3. '           ' → logprob: -3.160280227661133
    4. ':
' → logprob: -4.410280227661133
    5. '       ' → logprob: -5.035280227661133
    6. '   ' → logprob: -5.785280227661133
    7. '):' → logprob: -6.035280227661133
    8. '):
' → logprob: -7.160280227661133
    9. '[' → logprob: -7.660280227661133
    10. ')' → logprob: -7.910280227661133

Token 707: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2733120918273926
    2. ' if' → logprob: -2.0233120918273926
    3. 'if' (adapté à ' if') → logprob: -2.8983120918273926
    4. ' ' → logprob: -4.148312091827393
    5. '           ' → logprob: -4.398312091827393
    6. '   ' → logprob: -5.148312091827393
    7. ' ' → logprob: -5.273312091827393
    8. '       ' → logprob: -5.398312091827393
    9. ' 
' → logprob: -5.648312091827393
    10. ',' → logprob: -6.898312091827393

Token 708: ' depth' (ID: 13636)
  Prédit: ' depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' depth' → logprob: -0.3504176139831543
    2. 'depth' → logprob: -1.2254176139831543
    3. 'len' → logprob: -6.975417613983154
    4. ' len' → logprob: -6.975417613983154
    5. '(depth' → logprob: -9.475418090820312
    6. '_depth' → logprob: -12.225418090820312
    7. 'length' → logprob: -12.350418090820312
    8. ' length' → logprob: -12.600418090820312
    9. ' ' → logprob: -12.975418090820312
    10. ' path' → logprob: -13.225418090820312

Token 709: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22548910975456238
    2. '==' → logprob: -1.6004891395568848
    3. ' >' → logprob: -10.725488662719727
    4. '==
' → logprob: -10.725488662719727
    5. '>' → logprob: -11.725488662719727
    6. '=' → logprob: -11.725488662719727
    7. '===' → logprob: -12.475488662719727
    8. ' ==
' → logprob: -12.600488662719727
    9. '==(' → logprob: -12.725488662719727
    10. ' =' → logprob: -13.100488662719727

Token 710: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00012475410767365247
    2. ' b' → logprob: -9.00012493133545
    3. 'bounce' → logprob: -14.87512493133545
    4. '   ' → logprob: -15.25012493133545
    5. '>b' → logprob: -16.000123977661133
    6. '=b' → logprob: -16.125123977661133
    7. '0' → logprob: -16.125123977661133
    8. '	b' → logprob: -16.375123977661133
    9. '[b' → logprob: -16.750123977661133
    10. ')b' → logprob: -17.125123977661133

Token 711: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -0.0002880337997339666
    2. '+' → logprob: -9.375288009643555
    3. '0' → logprob: -10.500288009643555
    4. ')' → logprob: -11.000288009643555
    5. 'laces' → logprob: -11.000288009643555
    6. 'b' → logprob: -11.250288009643555
    7. 'ounds' → logprob: -11.250288009643555
    8. '[' → logprob: -11.750288009643555
    9. 'ount' → logprob: -11.750288009643555
    10. 'onces' → logprob: -11.750288009643555

Token 712: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08944526314735413
    2. ':
' → logprob: -2.4644453525543213
    3. ' and' → logprob: -7.714445114135742
    4. ':return' → logprob: -10.714445114135742
    5. 'and' → logprob: -10.839445114135742
    6. ':
' → logprob: -12.089445114135742
    7. ':

' → logprob: -13.089445114135742
    8. ' :' → logprob: -13.339445114135742
    9. '):
' → logprob: -13.339445114135742
    10. ',' → logprob: -13.714445114135742

Token 713: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009388050995767117
    2. ':
' → logprob: -5.134387969970703
    3. '           ' → logprob: -6.134387969970703
    4. ':' → logprob: -7.134387969970703
    5. '       ' → logprob: -9.259387969970703
    6. ',' → logprob: -9.259387969970703
    7. '<|end|>' → logprob: -9.509387969970703
    8. ' and' → logprob: -10.134387969970703
    9. '):
' → logprob: -10.134387969970703
    10. '<|end|>' → logprob: -10.384387969970703

Token 714: ' #' (ID: 1069)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.21375343203544617
    2. 'if' → logprob: -1.9637534618377686
    3. '               ' → logprob: -3.3387534618377686
    4. ' if' → logprob: -4.5887532234191895
    5. ' results' → logprob: -5.2137532234191895
    6. '                   ' → logprob: -7.8387532234191895
    7. '	results' → logprob: -8.213753700256348
    8. 'path' → logprob: -8.963753700256348
    9. 'positions' → logprob: -9.463753700256348
    10. '   ' → logprob: -10.088753700256348

Token 715: ' last' (ID: 2174)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.23316480219364166
    2. ' results' → logprob: -2.2331647872924805
    3. 'if' → logprob: -2.9831647872924805
    4. ' if' → logprob: -3.2331647872924805
    5. '               ' → logprob: -5.6081647872924805
    6. 'positions' → logprob: -6.1081647872924805
    7. 'path' → logprob: -7.4831647872924805
    8. 'segment' → logprob: -7.4831647872924805
    9. '   ' → logprob: -7.6081647872924805
    10. '           ' → logprob: -8.10816478729248

Token 716: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -1.0783658027648926
    2. 'segment' → logprob: -1.4533658027648926
    3. 'pos' → logprob: -1.5783658027648926
    4. '_segment' → logprob: -2.7033658027648926
    5. 'split' → logprob: -3.3283658027648926
    6. '_pos' → logprob: -3.5783658027648926
    7. '_split' → logprob: -3.7033658027648926
    8. 'point' → logprob: -4.328365802764893
    9. '_position' → logprob: -4.828365802764893
    10. '_point' → logprob: -5.078365802764893

Token 717: ' length' (ID: 5517)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9894977807998657
    2. ' =' → logprob: -1.9894977807998657
    3. '                   ' → logprob: -2.114497661590576
    4. 'positions' → logprob: -2.614497661590576
    5. 'segments' → logprob: -2.739497661590576
    6. 'results' → logprob: -2.864497661590576
    7. '.append' → logprob: -3.114497661590576
    8. 'length' → logprob: -3.489497661590576
    9. ',' → logprob: -3.739497661590576
    10. ':' → logprob: -4.739497661590576

Token 718: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3522847294807434
    2. '=' → logprob: -1.2272846698760986
    3. '.append' → logprob: -5.852284908294678
    4. '               ' → logprob: -8.10228443145752
    5. ':' → logprob: -8.97728443145752
    6. 's' → logprob: -9.10228443145752
    7. 'results' → logprob: -9.22728443145752
    8. ' is' → logprob: -9.60228443145752
    9. '           ' → logprob: -9.60228443145752
    10. ',' → logprob: -9.97728443145752

Token 719: ' last' (ID: 2174)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7762168645858765
    2. 'path' → logprob: -1.2762168645858765
    3. 'start' → logprob: -1.5262168645858765
    4. '(total' → logprob: -4.026216983795166
    5. ' total' → logprob: -4.651216983795166
    6. '(path' → logprob: -5.401216983795166
    7. ' path' → logprob: -5.776216983795166
    8. ' start' → logprob: -5.776216983795166
    9. '(start' → logprob: -6.026216983795166
    10. 'last' → logprob: -7.401216983795166

Token 720: ' bounce' (ID: 57156)
  Prédit: ' path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.6549429297447205
    2. 'path' → logprob: -1.4049429893493652
    3. '(path' → logprob: -1.9049429893493652
    4. ' position' → logprob: -3.5299429893493652
    5. 'split' → logprob: -3.9049429893493652
    6. ' point' → logprob: -5.154942989349365
    7. 'pos' → logprob: -5.404942989349365
    8. ' split' → logprob: -5.529942989349365
    9. 'start' → logprob: -5.529942989349365
    10. 'position' → logprob: -5.529942989349365

Token 721: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6677604913711548
    2. '=' → logprob: -1.6677604913711548
    3. '               ' → logprob: -1.6677604913711548
    4. ' to' → logprob: -2.4177603721618652
    5. 'to' → logprob: -5.292760372161865
    6. ' is' → logprob: -5.792760372161865
    7. 'total' → logprob: -5.792760372161865
    8. ',' → logprob: -6.417760372161865
    9. 'return' → logprob: -6.417760372161865
    10. ':' → logprob: -6.792760372161865

Token 722: ' target' (ID: 3783)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.008615635335445404
    2. ' total' → logprob: -4.758615493774414
    3. '
' → logprob: -14.258615493774414
    4. '   ' → logprob: -15.883615493774414
    5. 'the' → logprob: -15.883615493774414
    6. 'distance' → logprob: -16.258615493774414
    7. '	total' → logprob: -16.883615493774414
    8. '(total' → logprob: -17.133615493774414
    9. ' ' → logprob: -17.508615493774414
    10. 't' → logprob: -18.133615493774414

Token 723: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025602193549275398
    2. '           ' → logprob: -4.525602340698242
    3. '                   ' → logprob: -5.025602340698242
    4. ',' → logprob: -6.275602340698242
    5. ':' → logprob: -6.900602340698242
    6. '       ' → logprob: -7.400602340698242
    7. '<|end|>' → logprob: -7.525602340698242
    8. ' =' → logprob: -7.650602340698242
    9. ' results' → logprob: -8.150602340698242
    10. 'results' → logprob: -8.275602340698242

Token 724: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20943744480609894
    2. ':' → logprob: -2.709437370300293
    3. '                   ' → logprob: -3.084437370300293
    4. ' =' → logprob: -3.084437370300293
    5. '=' → logprob: -4.334437370300293
    6. ':
' → logprob: -4.709437370300293
    7. ',' → logprob: -5.709437370300293
    8. '           ' → logprob: -6.584437370300293
    9. '   ' → logprob: -7.459437370300293
    10. '+' → logprob: -7.959437370300293

Token 725: ' last' (ID: 2174)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.5313986539840698
    2. ' results' → logprob: -0.9063986539840698
    3. '               ' → logprob: -5.406398773193359
    4. 'segment' → logprob: -7.156398773193359
    5. 'segments' → logprob: -7.156398773193359
    6. 'length' → logprob: -7.656398773193359
    7. ' segment' → logprob: -8.28139877319336
    8. 'path' → logprob: -8.40639877319336
    9. ' if' → logprob: -8.40639877319336
    10. 'remaining' → logprob: -8.90639877319336

Token 726: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.42027148604393005
    2. '_length' → logprob: -1.2952715158462524
    3. ' =' → logprob: -3.295271396636963
    4. '_len' → logprob: -4.170271396636963
    5. '_distance' → logprob: -5.045271396636963
    6. '_seg' → logprob: -5.670271396636963
    7. '=' → logprob: -6.295271396636963
    8. 'segment' → logprob: -6.670271396636963
    9. '_dist' → logprob: -6.795271396636963
    10. '_token' → logprob: -7.170271396636963

Token 727: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3800274133682251
    2. '=' → logprob: -1.380027413368225
    3. '_length' → logprob: -2.7550272941589355
    4. '_len' → logprob: -7.5050272941589355
    5. 'length' → logprob: -8.380027770996094
    6. 'Length' → logprob: -9.630027770996094
    7. '   ' → logprob: -10.255027770996094
    8. 'len' → logprob: -10.755027770996094
    9. '=len' → logprob: -11.005027770996094
    10. '_lengths' → logprob: -11.130027770996094

Token 728: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.01815474033355713
    2. ' total' → logprob: -4.018154621124268
    3. '(total' → logprob: -13.393155097961426
    4. '   ' → logprob: -14.268155097961426
    5. '[' → logprob: -14.393155097961426
    6. '	total' → logprob: -14.643155097961426
    7. '           ' → logprob: -14.768155097961426
    8. '               ' → logprob: -14.893155097961426
    9. '
' → logprob: -15.143155097961426
    10. ' ' → logprob: -15.768155097961426

Token 729: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.00043805985478684306
    2. 'distance' → logprob: -7.750438213348389
    3. 'Distance' → logprob: -12.12543773651123
    4. '_DISTANCE' → logprob: -14.12543773651123
    5. '-distance' → logprob: -14.62543773651123
    6. '-' → logprob: -16.000438690185547
    7. '_dist' → logprob: -16.125438690185547
    8. '[' → logprob: -16.125438690185547
    9. ' distance' → logprob: -16.125438690185547
    10. '距离' → logprob: -16.500438690185547

Token 730: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2519293427467346
    2. '-' → logprob: -1.5019292831420898
    3. ' ' → logprob: -16.876930236816406
    4. '-s' → logprob: -17.001930236816406
    5. ' ' → logprob: -17.126930236816406
    6. '-
' → logprob: -17.251930236816406
    7. ' -
' → logprob: -17.626930236816406
    8. ')' → logprob: -17.626930236816406
    9. '−' → logprob: -18.001930236816406
    10. '<|end|>' → logprob: -18.501930236816406

Token 731: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.5414910912513733
    2. '(path' → logprob: -0.9164910912513733
    3. 'sum' → logprob: -4.9164910316467285
    4. '(sum' → logprob: -5.5414910316467285
    5. ' (' → logprob: -5.6664910316467285
    6. ' path' → logprob: -6.2914910316467285
    7. '(' → logprob: -6.9164910316467285
    8. '(start' → logprob: -8.041491508483887
    9. 'start' → logprob: -8.666491508483887
    10. '(
' → logprob: -10.416491508483887

Token 732: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: 0.0
    2. '[' → logprob: -18.0
    3. '   ' → logprob: -19.125
    4. ' [-' → logprob: -20.25
    5. '
' → logprob: -20.375
    6. '[
' → logprob: -22.0
    7. '][-' → logprob: -22.375
    8. '```' → logprob: -22.375
    9. '           ' → logprob: -22.5
    10. '       ' → logprob: -22.625

Token 733: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -18.375
    4. '۱' → logprob: -19.1875
    5. 'len' → logprob: -19.5625
    6. '
' → logprob: -19.625
    7. '```' → logprob: -19.75
    8. '2' → logprob: -19.75
    9. '１' → logprob: -19.9375
    10. '  ' → logprob: -19.9375

Token 734: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06194751337170601
    2. ']
' → logprob: -3.3119475841522217
    3. '
' → logprob: -4.561947345733643
    4. ' ]' → logprob: -5.186947345733643
    5. ')' → logprob: -5.686947345733643
    6. ' if' → logprob: -6.311947345733643
    7. '<|end|>' → logprob: -7.686947345733643
    8. ' ]
' → logprob: -8.3119478225708
    9. '])' → logprob: -8.3119478225708
    10. ')
' → logprob: -8.3119478225708

Token 735: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10089985281229019
    2. '           ' → logprob: -2.3508999347686768
    3. ')' → logprob: -7.975899696350098
    4. ',' → logprob: -9.225899696350098
    5. '.' → logprob: -9.850899696350098
    6. '       ' → logprob: -10.475899696350098
    7. '                   ' → logprob: -10.600899696350098
    8. '
' → logprob: -10.725899696350098
    9. ':
' → logprob: -10.850899696350098
    10. ')
' → logprob: -11.350899696350098

Token 736: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.563014566898346
    2. 'results' → logprob: -1.8130145072937012
    3. 'if' (adapté à ' if') → logprob: -1.9380145072937012
    4. ' results' → logprob: -2.188014507293701
    5. '               ' → logprob: -5.188014507293701
    6. '           ' → logprob: -5.688014507293701
    7. 'path' → logprob: -6.313014507293701
    8. ' path' → logprob: -8.06301498413086
    9. 'for' → logprob: -10.31301498413086
    10. ' for' → logprob: -10.43801498413086

Token 737: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.03365561366081238
    2. ' last' → logprob: -3.4086556434631348
    3. '0' → logprob: -12.033655166625977
    4. 'all' → logprob: -14.033655166625977
    5. 'len' → logprob: -14.408655166625977
    6. '1' → logprob: -14.408655166625977
    7. '	last' → logprob: -14.533655166625977
    8. ' ' → logprob: -15.033655166625977
    9. '(last' → logprob: -15.533655166625977
    10. '   ' → logprob: -15.783655166625977

Token 738: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.018731705844402313
    2. ' <' → logprob: -5.268731594085693
    3. ' <=' → logprob: -5.893731594085693
    4. '_' → logprob: -6.018731594085693
    5. ' +' → logprob: -6.643731594085693
    6. ' _' → logprob: -6.643731594085693
    7. '+' → logprob: -6.768731594085693
    8. '_segments' → logprob: -7.018731594085693
    9. 'segment' → logprob: -7.268731594085693
    10. '<' → logprob: -7.893731594085693

Token 739: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.06721536815166473
    2. ' >' → logprob: -2.8172154426574707
    3. '>=' → logprob: -5.317215442657471
    4. ' >=' → logprob: -8.067214965820312
    5. '&gt' → logprob: -12.317214965820312
    6. ' ' → logprob: -13.067214965820312
    7. '<=' → logprob: -13.942214965820312
    8. '>
' → logprob: -14.442214965820312
    9. ')>' → logprob: -14.567214965820312
    10. '0' → logprob: -14.692214965820312

Token 740: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010350722586736083
    2. ' ' → logprob: -6.876035213470459
    3. '=' → logprob: -13.2510347366333
    4. '1' → logprob: -16.001035690307617
    5. '<|end|>' → logprob: -16.001035690307617
    6. 'zero' → logprob: -16.751035690307617
    7. '   ' → logprob: -17.188535690307617
    8. '```' → logprob: -17.251035690307617
    9. '۰' → logprob: -17.563535690307617
    10. '>' → logprob: -17.626035690307617

Token 741: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015943869948387146
    2. ' ' → logprob: -8.75015926361084
    3. '=' → logprob: -13.87515926361084
    4. '1' → logprob: -18.000160217285156
    5. '<|end|>' → logprob: -18.000160217285156
    6. 'zero' → logprob: -18.125160217285156
    7. '۰' → logprob: -18.375160217285156
    8. '
' → logprob: -18.937660217285156
    9. '[' → logprob: -19.062660217285156
    10. '```' → logprob: -19.500160217285156

Token 742: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09558583050966263
    2. ':' → logprob: -2.595585823059082
    3. '               ' → logprob: -4.470585823059082
    4. ' and' → logprob: -5.720585823059082
    5. '                   ' → logprob: -6.595585823059082
    6. ':
' → logprob: -8.720585823059082
    7. '           ' → logprob: -8.845585823059082
    8. '):
' → logprob: -9.970585823059082
    9. ' :
' → logprob: -10.220585823059082
    10. ',' → logprob: -10.720585823059082

Token 743: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6049701571464539
    2. '                   ' → logprob: -0.8549701571464539
    3. ':
' → logprob: -4.2299699783325195
    4. ':' → logprob: -4.4799699783325195
    5. ' and' → logprob: -6.4799699783325195
    6. '           ' → logprob: -7.6049699783325195
    7. '                       ' → logprob: -8.35496997833252
    8. ',' → logprob: -9.22996997833252
    9. '                ' → logprob: -9.35496997833252
    10. '):
' → logprob: -10.60496997833252

Token 744: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.4009098410606384
    2. ' results' → logprob: -1.1509099006652832
    3. '                   ' → logprob: -4.900909900665283
    4. '                       ' → logprob: -5.275909900665283
    5. 'path' → logprob: -6.900909900665283
    6. ' path' → logprob: -8.400909423828125
    7. '               ' → logprob: -10.150909423828125
    8. '	results' → logprob: -10.275909423828125
    9. 'result' → logprob: -10.650909423828125
    10. '
' → logprob: -10.775909423828125

Token 745: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0004315036640036851
    2. '.' → logprob: -7.750431537628174
    3. ' .' → logprob: -14.875431060791016
    4. '.app' → logprob: -15.750431060791016
    5. '.extend' → logprob: -16.375431060791016
    6. 'append' → logprob: -16.500431060791016
    7. '.Append' → logprob: -16.875431060791016
    8. '.add' → logprob: -17.875431060791016
    9. '.setdefault' → logprob: -18.000431060791016
    10. '                       ' → logprob: -18.375431060791016

Token 746: '([' (ID: 5194)
  Prédit: '(path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -0.0086397435516119
    2. 'path' → logprob: -5.133639812469482
    3. '(' → logprob: -6.383639812469482
    4. ' path' → logprob: -7.258639812469482
    5. ' (' → logprob: -9.008639335632324
    6. '([' → logprob: -9.258639335632324
    7. '(
' → logprob: -10.133639335632324
    8. '   ' → logprob: -10.383639335632324
    9. '[path' → logprob: -11.383639335632324
    10. '(list' → logprob: -12.883639335632324

Token 747: 'path' (ID: 4189)
  Prédit: 'path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.17359881103038788
    2. '*(' → logprob: -2.2985987663269043
    3. '*' → logprob: -3.2985987663269043
    4. 'p' → logprob: -4.923598766326904
    5. '(path' → logprob: -5.423598766326904
    6. 'segment' → logprob: -6.048598766326904
    7. 'length' → logprob: -6.423598766326904
    8. 'seg' → logprob: -6.423598766326904
    9. '*p' → logprob: -6.548598766326904
    10. 's' → logprob: -7.173598766326904

Token 748: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005338112823665142
    2. '[i' → logprob: -5.255338191986084
    3. '0' → logprob: -10.130337715148926
    4. '[-' → logprob: -10.130337715148926
    5. 'i' → logprob: -11.880337715148926
    6. ']' → logprob: -12.005337715148926
    7. '[
' → logprob: -12.755337715148926
    8. '[j' → logprob: -13.130337715148926
    9. '
' → logprob: -13.880337715148926
    10. '[k' → logprob: -14.005337715148926

Token 749: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017979926196858287
    2. 'i' → logprob: -6.501798152923584
    3. '[i' → logprob: -9.251797676086426
    4. '[' → logprob: -9.251797676086426
    5. ' ' → logprob: -9.501797676086426
    6. ' i' → logprob: -11.501797676086426
    7. '-' → logprob: -12.501797676086426
    8. '
' → logprob: -12.626797676086426
    9. 'x' → logprob: -13.501797676086426
    10. ']' → logprob: -13.689297676086426

Token 750: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01986406184732914
    2. ']+' → logprob: -4.019864082336426
    3. ' ]' → logprob: -6.519864082336426
    4. '])' → logprob: -9.269864082336426
    5. ',' → logprob: -10.519864082336426
    6. ']]' → logprob: -10.769864082336426
    7. '+' → logprob: -10.769864082336426
    8. '-' → logprob: -11.769864082336426
    9. ' -' → logprob: -11.769864082336426
    10. ' +' → logprob: -12.019864082336426

Token 751: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09671596437692642
    2. ']+' → logprob: -2.9717159271240234
    3. '+' → logprob: -3.7217159271240234
    4. ' +' → logprob: -4.221715927124023
    5. ',' → logprob: -7.096715927124023
    6. ')' → logprob: -7.471715927124023
    7. ' ]' → logprob: -7.596715927124023
    8. '+]' → logprob: -9.596715927124023
    9. ')+' → logprob: -9.971715927124023
    10. '"]' → logprob: -11.846715927124023

Token 752: ' [' (ID: 723)
  Prédit: '[path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[path' → logprob: -0.3441142737865448
    2. 'path' → logprob: -1.4691143035888672
    3. '[' → logprob: -3.344114303588867
    4. '([' → logprob: -4.844114303588867
    5. '(path' → logprob: -4.969114303588867
    6. ' [' → logprob: -5.094114303588867
    7. ' path' → logprob: -6.469114303588867
    8. '   ' → logprob: -7.094114303588867
    9. 'list' → logprob: -7.844114303588867
    10. '       ' → logprob: -8.469114303588867

Token 753: 'path' (ID: 4189)
  Prédit: 'path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0037426024209707975
    2. ' path' → logprob: -6.628742694854736
    3. 'p' → logprob: -7.003742694854736
    4. '(path' → logprob: -7.128742694854736
    5. 'b' → logprob: -7.753742694854736
    6. 'y' → logprob: -9.253742218017578
    7. 'j' → logprob: -10.878742218017578
    8. '   ' → logprob: -11.003742218017578
    9. '
' → logprob: -11.128742218017578
    10. '[path' → logprob: -11.503742218017578

Token 754: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5928495486150496e-05
    2. 'i' → logprob: -11.500016212463379
    3. '[j' → logprob: -12.500016212463379
    4. '[' → logprob: -13.250016212463379
    5. '   ' → logprob: -17.000015258789062
    6. '[x' → logprob: -17.125015258789062
    7. '[k' → logprob: -17.250015258789062
    8. '(i' → logprob: -17.500015258789062
    9. '
' → logprob: -18.125015258789062
    10. '[b' → logprob: -18.625015258789062

Token 755: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08493419736623764
    2. ']' → logprob: -2.5849342346191406
    3. ']-' → logprob: -6.334934234619141
    4. ' +' → logprob: -6.959934234619141
    5. ' for' → logprob: -7.084934234619141
    6. '-' → logprob: -7.209934234619141
    7. ' -' → logprob: -7.334934234619141
    8. 'for' → logprob: -7.459934234619141
    9. '1' → logprob: -8.33493423461914
    10. 'i' → logprob: -9.08493423461914

Token 756: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.48572778701782227
    2. '-' → logprob: -1.6107277870178223
    3. '+' → logprob: -1.7357277870178223
    4. ' for' → logprob: -4.985727787017822
    5. 'for' → logprob: -7.110727787017822
    6. ' if' → logprob: -7.735727787017822
    7. ']' → logprob: -7.985727787017822
    8. ' +' → logprob: -9.235727310180664
    9. ' ' → logprob: -10.235727310180664
    10. 'if' → logprob: -10.485727310180664

Token 757: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -4.5491004129871726e-05
    2. ' path' → logprob: -10.000045776367188
    3. '(path' → logprob: -19.250045776367188
    4. '	path' → logprob: -19.625045776367188
    5. 'paths' → logprob: -20.375045776367188
    6. '   ' → logprob: -20.625045776367188
    7. '[path' → logprob: -20.875045776367188
    8. ' ' → logprob: -21.625045776367188
    9. 'Path' → logprob: -22.375045776367188
    10. '_path' → logprob: -22.375045776367188

Token 758: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.816093228830141e-06
    2. 'i' → logprob: -13.75000286102295
    3. '{i' → logprob: -14.37500286102295
    4. '[' → logprob: -14.62500286102295
    5. '(i' → logprob: -15.50000286102295
    6. '```' → logprob: -15.87500286102295
    7. '[
' → logprob: -16.125001907348633
    8. 's' → logprob: -16.500001907348633
    9. '   ' → logprob: -16.750001907348633
    10. '[j' → logprob: -17.625001907348633

Token 759: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0019295861711725593
    2. ' -' → logprob: -6.251929759979248
    3. ' ' → logprob: -15.50192928314209
    4. '1' → logprob: -15.75192928314209
    5. 's' → logprob: -15.87692928314209
    6. '0' → logprob: -16.001930236816406
    7. '+' → logprob: -16.251930236816406
    8. '−' → logprob: -16.251930236816406
    9. '   ' → logprob: -16.626930236816406
    10. ']' → logprob: -16.751930236816406

Token 760: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.9040898880339228e-05
    2. 'i' → logprob: -10.625028610229492
    3. ' ' → logprob: -12.500028610229492
    4. '[i' → logprob: -15.000028610229492
    5. '(i' → logprob: -15.125028610229492
    6. ' i' → logprob: -15.750028610229492
    7. '   ' → logprob: -16.125028610229492
    8. '0' → logprob: -16.875028610229492
    9. '+' → logprob: -18.250028610229492
    10. '  ' → logprob: -18.375028610229492

Token 761: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1609395444393158
    2. ' for' → logprob: -2.4109394550323486
    3. 'for' → logprob: -3.7859394550323486
    4. '+' → logprob: -4.410939693450928
    5. '[i' → logprob: -4.410939693450928
    6. ' ]' → logprob: -5.660939693450928
    7. ']+' → logprob: -5.910939693450928
    8. '1' → logprob: -6.035939693450928
    9. ' +' → logprob: -6.160939693450928
    10. 'i' → logprob: -7.785939693450928

Token 762: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.008641162887215614
    2. 'for' → logprob: -4.758641242980957
    3. ']' → logprob: -11.508641242980957
    4. '[i' → logprob: -12.133641242980957
    5. ' ' → logprob: -13.133641242980957
    6. '	for' → logprob: -13.133641242980957
    7. '[' → logprob: -13.508641242980957
    8. ' i' → logprob: -13.633641242980957
    9. ' ]' → logprob: -14.258641242980957
    10. '               ' → logprob: -14.508641242980957

Token 763: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019287518225610256
    2. ' i' → logprob: -6.251928806304932
    3. '	i' → logprob: -16.501928329467773
    4. '
' → logprob: -19.001928329467773
    5. ')i' → logprob: -19.751928329467773
    6. '{i' → logprob: -20.001928329467773
    7. '(i' → logprob: -20.001928329467773
    8. ',i' → logprob: -20.501928329467773
    9. '
' → logprob: -20.751928329467773
    10. ' ' → logprob: -20.876928329467773

Token 764: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06246470287442207
    2. 'in' → logprob: -2.812464714050293
    3. 'i' → logprob: -8.812464714050293
    4. 'range' → logprob: -8.937464714050293
    5. ' i' → logprob: -8.937464714050293
    6. ' range' → logprob: -9.562464714050293
    7. '1' → logprob: -11.312464714050293
    8. ' ' → logprob: -13.187464714050293
    9. '	in' → logprob: -14.687464714050293
    10. 'import' → logprob: -15.812464714050293

Token 765: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001170225441455841
    2. ' range' → logprob: -6.7511701583862305
    3. '	range' → logprob: -19.501171112060547
    4. '(range' → logprob: -22.001171112060547
    5. ' ' → logprob: -22.501171112060547
    6. '   ' → logprob: -23.751171112060547
    7. '
' → logprob: -24.001171112060547
    8. 'Range' → logprob: -25.126171112060547
    9. 'rang' → logprob: -25.626171112060547
    10. 'in' → logprob: -25.626171112060547

Token 766: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.750008583068848
    3. '(' → logprob: -15.125008583068848
    4. '   ' → logprob: -15.875008583068848
    5. '  ' → logprob: -17.87500762939453
    6. '	' → logprob: -18.12500762939453
    7. '    ' → logprob: -18.50000762939453
    8. '[' → logprob: -19.75000762939453
    9. '۱' → logprob: -19.87500762939453
    10. '```' → logprob: -20.00000762939453

Token 767: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -16.875
    4. '  ' → logprob: -18.5
    5. '```' → logprob: -18.75
    6. '	' → logprob: -19.25
    7. '(' → logprob: -19.375
    8. '    ' → logprob: -19.375
    9. 'len' → logprob: -19.875
    10. '۱' → logprob: -20.375

Token 768: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6848246455192566
    2. ',' → logprob: -1.1848247051239014
    3. '(' → logprob: -1.6848247051239014
    4. ',len' → logprob: -6.184824466705322
    5. ' ,' → logprob: -6.684824466705322
    6. '(len' → logprob: -7.434824466705322
    7. ' ' → logprob: -7.809824466705322
    8. 'len' → logprob: -8.55982494354248
    9. ' (' → logprob: -10.68482494354248
    10. ' len' → logprob: -12.18482494354248

Token 769: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0012734467163681984
    2. 'depth' → logprob: -6.7512736320495605
    3. ' len' → logprob: -9.251273155212402
    4. 'b' → logprob: -12.376273155212402
    5. ' depth' → logprob: -13.251273155212402
    6. '           ' → logprob: -14.251273155212402
    7. '	len' → logprob: -16.00127410888672
    8. '(len' → logprob: -16.62627410888672
    9. '               ' → logprob: -16.75127410888672
    10. '            ' → logprob: -16.75127410888672

Token 770: '(path' (ID: 10993)
  Prédit: '(path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -0.0004338877333793789
    2. 'path' → logprob: -7.750433921813965
    3. ' path' → logprob: -13.375433921813965
    4. '(' → logprob: -13.500433921813965
    5. '	path' → logprob: -16.25043296813965
    6. '[path' → logprob: -16.25043296813965
    7. '"path' → logprob: -17.37543296813965
    8. ',path' → logprob: -17.37543296813965
    9. ':path' → logprob: -17.87543296813965
    10. '(
' → logprob: -18.25043296813965

Token 771: '))' (ID: 915)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006528667290695012
    2. ')])' → logprob: -7.50065279006958
    3. ')' → logprob: -9.750653266906738
    4. ' )' → logprob: -10.375653266906738
    5. ')][' → logprob: -12.000653266906738
    6. '])' → logprob: -14.125653266906738
    7. ')])
' → logprob: -14.500653266906738
    8. ')]
' → logprob: -14.750653266906738
    9. '])]' → logprob: -14.750653266906738
    10. '           ' → logprob: -14.875653266906738

Token 772: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027919616550207138
    2. ' ]' → logprob: -3.9029195308685303
    3. ']+' → logprob: -5.277919769287109
    4. '])' → logprob: -6.277919769287109
    5. ' ])' → logprob: -8.02791976928711
    6. ')' → logprob: -11.27791976928711
    7. '+' → logprob: -12.40291976928711
    8. '           ' → logprob: -12.52791976928711
    9. '],' → logprob: -12.52791976928711
    10. ' +' → logprob: -12.52791976928711

Token 773: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.01380544900894165
    2. '+' → logprob: -4.763805389404297
    3. '                   ' → logprob: -6.138805389404297
    4. ']' → logprob: -6.888805389404297
    5. '                    ' → logprob: -7.513805389404297
    6. ' ]' → logprob: -8.138805389404297
    7. ')' → logprob: -8.388805389404297
    8. '               ' → logprob: -8.638805389404297
    9. '                ' → logprob: -9.013805389404297
    10. '])' → logprob: -9.138805389404297

Token 774: ' [' (ID: 723)
  Prédit: '[last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -0.0006685942644253373
    2. '[' → logprob: -7.500668525695801
    3. ' [' → logprob: -9.7506685256958
    4. '[first' → logprob: -11.6256685256958
    5. '[length' → logprob: -12.0006685256958
    6. '[start' → logprob: -12.2506685256958
    7. '[left' → logprob: -12.3756685256958
    8. '[next' → logprob: -12.5006685256958
    9. '[text' → logprob: -12.5006685256958
    10. '[current' → logprob: -12.6256685256958

Token 775: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.000264315924141556
    2. ' last' → logprob: -8.250264167785645
    3. '[last' → logprob: -13.750264167785645
    4. '(last' → logprob: -14.125264167785645
    5. '   ' → logprob: -14.750264167785645
    6. '                   ' → logprob: -16.37526512145996
    7. 'total' → logprob: -16.50026512145996
    8. ' ' → logprob: -16.50026512145996
    9. '	last' → logprob: -16.62526512145996
    10. '                               ' → logprob: -16.75026512145996

Token 776: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.0035198910627514124
    2. 'segment' → logprob: -6.0035200119018555
    3. 'Segment' → logprob: -7.5035200119018555
    4. '_segments' → logprob: -8.628520011901855
    5. ')' → logprob: -9.753520011901855
    6. '
' → logprob: -10.003520011901855
    7. '_token' → logprob: -10.253520011901855
    8. ' segment' → logprob: -10.378520011901855
    9. ']' → logprob: -10.503520011901855
    10. '_distance' → logprob: -11.503520011901855

Token 777: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.720120370388031
    2. '])
' → logprob: -0.720120370388031
    3. ')' → logprob: -4.345120429992676
    4. ')
' → logprob: -4.845120429992676
    5. '       ' → logprob: -5.970120429992676
    6. '           ' → logprob: -6.345120429992676
    7. '               ' → logprob: -7.345120429992676
    8. '])
' → logprob: -7.470120429992676
    9. ']' → logprob: -9.220120429992676
    10. '   ' → logprob: -10.095120429992676

Token 778: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2123394012451172
    2. '       ' → logprob: -1.5873394012451172
    3. '           ' → logprob: -1.7123394012451172
    4. ')' → logprob: -2.337339401245117
    5. '\n' → logprob: -3.087339401245117
    6. '               ' → logprob: -3.337339401245117
    7. '    
' → logprob: -3.462339401245117
    8. ' 
' → logprob: -3.837339401245117
    9. '        
' → logprob: -4.212339401245117
    10. '            
' → logprob: -4.337339401245117

Token 779: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10425050556659698
    2. '               ' → logprob: -2.354250431060791
    3. '
' → logprob: -6.104250431060791
    4. 'return' (adapté à ' return') → logprob: -6.979250431060791
    5. ' return' → logprob: -7.604250431060791
    6. '       ' → logprob: -9.47925090789795
    7. ' ' → logprob: -9.85425090789795
    8. '   ' → logprob: -9.85425090789795
    9. 'else' → logprob: -10.72925090789795
    10. '            
' → logprob: -10.72925090789795

Token 780: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08453290164470673
    2. ' 
' → logprob: -3.0845329761505127
    3. '           ' → logprob: -3.9595329761505127
    4. '\n' → logprob: -5.084532737731934
    5. '            
' → logprob: -6.209532737731934
    6. '  
' → logprob: -6.334532737731934
    7. '    
' → logprob: -6.709532737731934
    8. '       ' → logprob: -6.834532737731934
    9. '        
' → logprob: -6.834532737731934
    10. '' → logprob: -7.584532737731934

Token 781: '           ' (ID: 352)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.531774640083313
    2. '
' → logprob: -2.2817745208740234
    3. '\n' → logprob: -2.6567745208740234
    4. '       ' → logprob: -3.0317745208740234
    5. '\' → logprob: -3.2817745208740234
    6. '    
' → logprob: -3.5317745208740234
    7. '	' → logprob: -3.6567745208740234
    8. '        
' → logprob: -3.7817745208740234
    9. '  
' → logprob: -3.9067745208740234
    10. '<|end|>' → logprob: -4.281774520874023

Token 782: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.36584511399269104
    2. ' for' → logprob: -1.2408450841903687
    3. '           ' → logprob: -4.615845203399658
    4. '       ' → logprob: -4.990845203399658
    5. '   ' → logprob: -7.865845203399658
    6. '	for' → logprob: -9.6158447265625
    7. '	       ' → logprob: -10.9908447265625
    8. '            
' → logprob: -11.3658447265625
    9. 'next' → logprob: -11.4908447265625
    10. '
' → logprob: -11.6158447265625

Token 783: ' next' (ID: 2613)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0002835040504578501
    2. 'i' → logprob: -8.875283241271973
    3. ' pos' → logprob: -9.250283241271973
    4. 'next' → logprob: -10.625283241271973
    5. 'bounce' → logprob: -11.750283241271973
    6. 'position' → logprob: -12.250283241271973
    7. 'split' → logprob: -12.625283241271973
    8. 'p' → logprob: -13.000283241271973
    9. 'x' → logprob: -13.125283241271973
    10. 'npos' → logprob: -13.875283241271973

Token 784: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.015235154889523983
    2. '_point' → logprob: -5.01523494720459
    3. '_' → logprob: -5.64023494720459
    4. 'pos' → logprob: -6.51523494720459
    5. '_b' → logprob: -6.89023494720459
    6. ' in' → logprob: -7.51523494720459
    7. '_position' → logprob: -7.64023494720459
    8. '_val' → logprob: -8.01523494720459
    9. 'bounce' → logprob: -8.01523494720459
    10. '_token' → logprob: -8.89023494720459

Token 785: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015081972815096378
    2. 'in' → logprob: -6.5015082359313965
    3. ' ' → logprob: -13.001507759094238
    4. ',' → logprob: -14.126507759094238
    5. '<|end|>' → logprob: -14.376507759094238
    6. '	in' → logprob: -14.751507759094238
    7. 's' → logprob: -14.876507759094238
    8. '_in' → logprob: -14.876507759094238
    9. 'n' → logprob: -15.251507759094238
    10. 'range' → logprob: -16.564008712768555

Token 786: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02975071594119072
    2. ' range' → logprob: -3.5297508239746094
    3. '(range' → logprob: -16.15475082397461
    4. '	range' → logprob: -16.15475082397461
    5. ' xrange' → logprob: -20.40475082397461
    6. ' ' → logprob: -20.77975082397461
    7. 'rang' → logprob: -21.02975082397461
    8. '   ' → logprob: -21.90475082397461
    9. '_range' → logprob: -22.02975082397461
    10. '```' → logprob: -22.15475082397461

Token 787: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.06205171346664429
    2. 'start' → logprob: -2.812051773071289
    3. ' start' → logprob: -10.062051773071289
    4. '(path' → logprob: -10.437051773071289
    5. '(' → logprob: -12.687051773071289
    6. '[start' → logprob: -12.937051773071289
    7. '=start' → logprob: -13.187051773071289
    8. '	start' → logprob: -13.687051773071289
    9. '((' → logprob: -14.062051773071289
    10. 'path' → logprob: -14.062051773071289

Token 788: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25198087096214294
    2. ' +' → logprob: -1.5019809007644653
    3. ',' → logprob: -10.126980781555176
    4. '+,' → logprob: -12.001980781555176
    5. '1' → logprob: -12.501980781555176
    6. '+
' → logprob: -14.501980781555176
    7. ' ,' → logprob: -14.876980781555176
    8. '()+' → logprob: -15.501980781555176
    9. '```' → logprob: -16.626981735229492
    10. '   ' → logprob: -16.876981735229492

Token 789: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4868770196917467e-05
    2. ' ' → logprob: -10.625024795532227
    3. '2' → logprob: -15.125024795532227
    4. '
' → logprob: -16.625024795532227
    5. '10' → logprob: -17.125024795532227
    6. '100' → logprob: -17.125024795532227
    7. '0' → logprob: -17.250024795532227
    8. '   ' → logprob: -17.250024795532227
    9. '20' → logprob: -18.125024795532227
    10. '(' → logprob: -18.437524795532227

Token 790: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1557283111615106e-05
    2. ' ' → logprob: -10.250041961669922
    3. '(' → logprob: -12.875041961669922
    4. '2' → logprob: -13.625041961669922
    5. '
' → logprob: -14.000041961669922
    6. '0' → logprob: -14.812541961669922
    7. '10' → logprob: -15.687541961669922
    8. '   ' → logprob: -16.000041961669922
    9. ' (' → logprob: -16.000041961669922
    10. '100' → logprob: -16.375041961669922

Token 791: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.398067828034982e-05
    2. ' ,' → logprob: -9.87507438659668
    3. ',total' → logprob: -11.25007438659668
    4. ',
' → logprob: -11.87507438659668
    5. 'total' → logprob: -14.12507438659668
    6. 'to' → logprob: -15.37507438659668
    7. ',int' → logprob: -15.37507438659668
    8. '+' → logprob: -15.50007438659668
    9. ',next' → logprob: -16.00007438659668
    10. '   ' → logprob: -16.25007438659668

Token 792: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0031803252641111612
    2. ' total' → logprob: -5.753180503845215
    3. '(total' → logprob: -13.003180503845215
    4. '	total' → logprob: -15.628180503845215
    5. '   ' → logprob: -17.1281795501709
    6. ' ' → logprob: -17.1281795501709
    7. ',total' → logprob: -17.1281795501709
    8. '
' → logprob: -17.8781795501709
    9. '$total' → logprob: -18.0031795501709
    10. '_total' → logprob: -18.5031795501709

Token 793: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -5.061676347395405e-05
    2. 'distance' → logprob: -10.25005054473877
    3. 'Distance' → logprob: -11.25005054473877
    4. '_DISTANCE' → logprob: -13.50005054473877
    5. '-distance' → logprob: -14.87505054473877
    6. ' distance' → logprob: -15.75005054473877
    7. '+' → logprob: -16.000051498413086
    8. '_dist' → logprob: -16.125051498413086
    9. '_position' → logprob: -16.375051498413086
    10. '_length' → logprob: -17.375051498413086

Token 794: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6246074438095093
    2. ' +' → logprob: -1.1246074438095093
    3. '):' → logprob: -1.9996074438095093
    4. '):
' → logprob: -5.499607563018799
    5. ' ):' → logprob: -9.49960708618164
    6. ',' → logprob: -9.74960708618164
    7. ' -' → logprob: -10.12460708618164
    8. ')' → logprob: -10.87460708618164
    9. ':' → logprob: -10.99960708618164
    10. '-' → logprob: -10.99960708618164

Token 795: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04680603742599487
    2. '<|end|>' → logprob: -3.7968060970306396
    3. ':' → logprob: -4.9218058586120605
    4. ' ' → logprob: -5.5468058586120605
    5. ' ' → logprob: -6.2968058586120605
    6. '           ' → logprob: -6.4218058586120605
    7. ',' → logprob: -6.9218058586120605
    8. '	' → logprob: -7.1718058586120605
    9. '       ' → logprob: -7.2968058586120605
    10. '<|end|>' → logprob: -7.4218058586120605

Token 796: ' back' (ID: 1602)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06150304153561592
    2. 'path' → logprob: -3.5615029335021973
    3. ' path' → logprob: -4.061502933502197
    4. ' back' → logprob: -4.561502933502197
    5. 'back' (adapté à ' back') → logprob: -5.936502933502197
    6. '   ' → logprob: -7.936502933502197
    7. '               ' → logprob: -8.061503410339355
    8. '                       ' → logprob: -8.936503410339355
    9. '           ' → logprob: -10.686503410339355
    10. '                    ' → logprob: -10.811503410339355

Token 797: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -1.5451681974809617e-05
    2. 'tracking' → logprob: -11.500015258789062
    3. 't' → logprob: -13.000015258789062
    4. 'tracker' → logprob: -13.750015258789062
    5. 'tract' → logprob: -13.875015258789062
    6. 'tr' → logprob: -14.875015258789062
    7. 'trace' → logprob: -15.250015258789062
    8. 'tracked' → logprob: -15.625015258789062
    9. '_track' → logprob: -16.250015258789062
    10. '(track' → logprob: -17.000015258789062

Token 798: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -3.833878508885391e-05
    2. 'next' → logprob: -10.250038146972656
    3. '(' → logprob: -14.000038146972656
    4. '(
' → logprob: -14.000038146972656
    5. ' (' → logprob: -14.125038146972656
    6. '                   ' → logprob: -16.000038146972656
    7. ' next' → logprob: -16.125038146972656
    8. '               ' → logprob: -16.375038146972656
    9. '[next' → logprob: -16.625038146972656
    10. '(n' → logprob: -17.750038146972656

Token 799: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -3.190178904333152e-05
    2. 'pos' → logprob: -10.500031471252441
    3. '_token' → logprob: -13.625031471252441
    4. 'Pos' → logprob: -14.375031471252441
    5. ')' → logprob: -14.875031471252441
    6. '+' → logprob: -15.375031471252441
    7. '_positions' → logprob: -15.500031471252441
    8. '_' → logprob: -15.625031471252441
    9. '```' → logprob: -15.625031471252441
    10. ',' → logprob: -15.875031471252441

Token 800: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032926726271398365
    2. '(depth' → logprob: -8.75032901763916
    3. ' ,' → logprob: -8.87532901763916
    4. 'depth' → logprob: -11.25032901763916
    5. '+' → logprob: -11.37532901763916
    6. ',
' → logprob: -13.62532901763916
    7. ' +' → logprob: -13.87532901763916
    8. '               ' → logprob: -14.25032901763916
    9. '                   ' → logprob: -14.37532901763916
    10. '
' → logprob: -14.75032901763916

Token 801: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.0031777136027812958
    2. ' depth' → logprob: -5.753177642822266
    3. '(depth' → logprob: -17.878177642822266
    4. '_depth' → logprob: -19.378177642822266
    5. '               ' → logprob: -19.503177642822266
    6. ' ' → logprob: -20.253177642822266
    7. 'deep' → logprob: -21.003177642822266
    8. '   ' → logprob: -21.003177642822266
    9. '           ' → logprob: -21.128177642822266
    10. '                   ' → logprob: -21.753177642822266

Token 802: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.048587486147880554
    2. '+' → logprob: -3.0485875606536865
    3. ',' → logprob: -16.923587799072266
    4. '＋' → logprob: -17.548587799072266
    5. '	' → logprob: -17.673587799072266
    6. ' ' → logprob: -18.173587799072266
    7. ' +
' → logprob: -18.548587799072266
    8. ' ' → logprob: -18.923587799072266
    9. '   ' → logprob: -19.173587799072266
    10. '    ' → logprob: -19.423587799072266

Token 803: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008048642775975168
    2. ' ' → logprob: -7.125804901123047
    3. '   ' → logprob: -14.875804901123047
    4. '```' → logprob: -17.500804901123047
    5. '
' → logprob: -17.625804901123047
    6. '	' → logprob: -18.563304901123047
    7. '<|end|>' → logprob: -18.688304901123047
    8. '  ' → logprob: -18.750804901123047
    9. '0' → logprob: -18.813304901123047
    10. ' 
' → logprob: -19.063304901123047

Token 804: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -15.625001907348633
    4. '
' → logprob: -17.875001907348633
    5. '```' → logprob: -18.625001907348633
    6. '<|end|>' → logprob: -18.937501907348633
    7. '       ' → logprob: -19.375001907348633
    8. '0' → logprob: -19.625001907348633
    9. '  ' → logprob: -19.625001907348633
    10. ')' → logprob: -19.875001907348633

Token 805: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.802049756515771e-05
    2. ' ,' → logprob: -9.750067710876465
    3. ',path' → logprob: -12.000067710876465
    4. ')' → logprob: -13.125067710876465
    5. '               ' → logprob: -14.375067710876465
    6. '       ' → logprob: -15.625067710876465
    7. ',[' → logprob: -15.625067710876465
    8. '           ' → logprob: -15.750067710876465
    9. ',
' → logprob: -16.25006866455078
    10. '   ' → logprob: -16.75006866455078

Token 806: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0003637097543105483
    2. ' path' → logprob: -8.00036334991455
    3. '[path' → logprob: -10.50036334991455
    4. '[' → logprob: -14.25036334991455
    5. '   ' → logprob: -16.500364303588867
    6. '(path' → logprob: -17.250364303588867
    7. '	path' → logprob: -17.375364303588867
    8. '       ' → logprob: -19.000364303588867
    9. '    ' → logprob: -19.250364303588867
    10. ' ' → logprob: -19.375364303588867

Token 807: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.020044375211000443
    2. '+[' → logprob: -4.020044326782227
    3. '+' → logprob: -6.270044326782227
    4. '[' → logprob: -15.020044326782227
    5. ')' → logprob: -16.895044326782227
    6. '＋' → logprob: -18.395044326782227
    7. '	' → logprob: -18.520044326782227
    8. ' +
' → logprob: -18.645044326782227
    9. '.append' → logprob: -18.645044326782227
    10. '[next' → logprob: -18.645044326782227

Token 808: ' [' (ID: 723)
  Prédit: '[next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -2.5776860184123507e-06
    2. ' [' → logprob: -13.75000286102295
    3. '[' → logprob: -13.87500286102295
    4. '[new' → logprob: -15.25000286102295
    5. '[current' → logprob: -16.500001907348633
    6. '[now' → logprob: -16.875001907348633
    7. '[n' → logprob: -17.750001907348633
    8. '[first' → logprob: -18.500001907348633
    9. '[node' → logprob: -18.875001907348633
    10. '[pos' → logprob: -19.375001907348633

Token 809: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -2.951771421066951e-05
    2. ' next' → logprob: -10.500029563903809
    3. '[next' → logprob: -14.125029563903809
    4. '(next' → logprob: -14.250029563903809
    5. '	next' → logprob: -14.750029563903809
    6. '
' → logprob: -16.750028610229492
    7. '   ' → logprob: -17.500028610229492
    8. '_next' → logprob: -18.750028610229492
    9. '                   ' → logprob: -19.500028610229492
    10. ',next' → logprob: -19.625028610229492

Token 810: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.6240566083070007e-06
    2. 'pos' → logprob: -13.500001907348633
    3. 'Pos' → logprob: -15.750001907348633
    4. '_token' → logprob: -16.625001907348633
    5. '_p' → logprob: -18.875001907348633
    6. '_val' → logprob: -19.500001907348633
    7. '```' → logprob: -19.500001907348633
    8. '_position' → logprob: -19.875001907348633
    9. '_positions' → logprob: -20.000001907348633
    10. '[pos' → logprob: -20.250001907348633

Token 811: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011951648048125207
    2. '       ' → logprob: -9.37511920928955
    3. ')
' → logprob: -11.00011920928955
    4. ' )' → logprob: -11.75011920928955
    5. '])' → logprob: -12.25011920928955
    6. '           ' → logprob: -13.87511920928955
    7. '               ' → logprob: -14.37511920928955
    8. '）' → logprob: -14.37511920928955
    9. ')return' → logprob: -14.37511920928955
    10. '<|end|>' → logprob: -14.62511920928955

Token 812: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0187858697026968
    2. '       ' → logprob: -4.7687859535217285
    3. '<|end|>' → logprob: -4.7687859535217285
    4. '	' → logprob: -7.6437859535217285
    5. '```' → logprob: -8.26878547668457
    6. '<|end|>' → logprob: -8.51878547668457
    7. '\' → logprob: -8.64378547668457
    8. '   ' → logprob: -9.26878547668457
    9. '\t' → logprob: -9.89378547668457
    10. '        ' → logprob: -10.01878547668457

Token 813: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07947438955307007
    2. 'back' → logprob: -2.579474449157715
    3. '	' → logprob: -7.829474449157715
    4. ' back' → logprob: -9.579474449157715
    5. '	back' → logprob: -9.829474449157715
    6. 'return' → logprob: -10.079474449157715
    7. '   ' → logprob: -12.079474449157715
    8. '        
' → logprob: -12.079474449157715
    9. '
' → logprob: -12.454474449157715
    10. 'b' → logprob: -13.329474449157715

Token 814: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0017289682291448116
    2. ' b' → logprob: -6.3767290115356445
    3. '   ' → logprob: -11.626729011535645
    4. 'not' → logprob: -12.001729011535645
    5. '	b' → logprob: -12.376729011535645
    6. '0' → logprob: -12.751729011535645
    7. ' ' → logprob: -13.626729011535645
    8. 'total' → logprob: -13.751729011535645
    9. 'self' → logprob: -14.751729011535645
    10. '    ' → logprob: -14.876729011535645

Token 815: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -3.547789674485102e-05
    2. 'ounds' → logprob: -11.125035285949707
    3. 'ounce' → logprob: -12.000035285949707
    4. 'oun' → logprob: -13.000035285949707
    5. 'ount' → logprob: -13.250035285949707
    6. '==' → logprob: -13.625035285949707
    7. '_' → logprob: -13.875035285949707
    8. 'onces' → logprob: -14.000035285949707
    9. 'unction' → logprob: -14.375035285949707
    10. ''' → logprob: -14.375035285949707

Token 816: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06266413629055023
    2. '==' → logprob: -2.812664031982422
    3. ' >' → logprob: -7.437664031982422
    4. '>' → logprob: -9.812664031982422
    5. '   ' → logprob: -10.812664031982422
    6. ' <' → logprob: -11.812664031982422
    7. ' ' → logprob: -12.187664031982422
    8. ':' → logprob: -12.437664031982422
    9. ' =' → logprob: -12.937664031982422
    10. '0' → logprob: -13.062664031982422

Token 817: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001961224712431431
    2. ' ' → logprob: -6.2519612312316895
    3. '=' → logprob: -10.376960754394531
    4. '-' → logprob: -14.626960754394531
    5. '<|end|>' → logprob: -14.751960754394531
    6. '1' → logprob: -15.876960754394531
    7. '   ' → logprob: -16.37696075439453
    8. '
' → logprob: -16.50196075439453
    9. '  ' → logprob: -16.87696075439453
    10. ' -' → logprob: -17.00196075439453

Token 818: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006377388490363955
    2. ' ' → logprob: -7.375637531280518
    3. '1' → logprob: -12.000638008117676
    4. '<|end|>' → logprob: -13.875638008117676
    5. 'total' → logprob: -14.563138008117676
    6. '100' → logprob: -15.000638008117676
    7. '20' → logprob: -15.000638008117676
    8. '10' → logprob: -15.188138008117676
    9. '   ' → logprob: -15.688138008117676
    10. '2' → logprob: -15.813138008117676

Token 819: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5380373597145081
    2. ':
' → logprob: -0.9130373597145081
    3. '           ' → logprob: -4.288037300109863
    4. '       ' → logprob: -7.538037300109863
    5. ',' → logprob: -8.413037300109863
    6. '	       ' → logprob: -9.538037300109863
    7. ':
' → logprob: -10.038037300109863
    8. '		' → logprob: -10.038037300109863
    9. '	' → logprob: -10.163037300109863
    10. '	   ' → logprob: -11.163037300109863

Token 820: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.051171064376831055
    2. ':
' → logprob: -3.676171064376831
    3. '	       ' → logprob: -4.80117130279541
    4. ':' → logprob: -5.30117130279541
    5. '		' → logprob: -5.67617130279541
    6. '<|end|>' → logprob: -6.42617130279541
    7. '<|end|>' → logprob: -6.42617130279541
    8. '       ' → logprob: -7.17617130279541
    9. ' return' → logprob: -7.30117130279541
    10. 'return' → logprob: -7.55117130279541

Token 821: ' back' (ID: 1602)
  Prédit: ' back'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' back' → logprob: -0.09263703972101212
    2. 'back' (adapté à ' back') → logprob: -2.592637062072754
    3. '           ' → logprob: -4.342637062072754
    4. '       ' → logprob: -8.342637062072754
    5. ' return' → logprob: -8.592637062072754
    6. 'return' → logprob: -9.217637062072754
    7. ' for' → logprob: -10.467637062072754
    8. '
' → logprob: -10.592637062072754
    9. '	back' → logprob: -11.217637062072754
    10. '	       ' → logprob: -11.467637062072754

Token 822: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -5.319370302458992e-06
    2. '(track' → logprob: -13.375005722045898
    3. 'trace' → logprob: -13.750005722045898
    4. 'tracking' → logprob: -14.250005722045898
    5. 'tracks' → logprob: -14.625005722045898
    6. 'tracker' → logprob: -15.125005722045898
    7. '   ' → logprob: -15.500005722045898
    8. 'back' → logprob: -15.750005722045898
    9. '()' → logprob: -16.1250057220459
    10. 'tract' → logprob: -16.2500057220459

Token 823: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006468567065894604
    2. '(-' → logprob: -5.256468772888184
    3. '0' → logprob: -6.756468772888184
    4. '(start' → logprob: -10.381468772888184
    5. ' (' → logprob: -11.131468772888184
    6. '(
' → logprob: -11.131468772888184
    7. '(b' → logprob: -13.131468772888184
    8. '   ' → logprob: -13.506468772888184
    9. ' ' → logprob: -13.756468772888184
    10. 'start' → logprob: -13.881468772888184

Token 824: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006056951242499053
    2. '-' → logprob: -7.625605583190918
    3. ' ' → logprob: -9.500605583190918
    4. ' -' → logprob: -10.375605583190918
    5. '1' → logprob: -11.750605583190918
    6. '   ' → logprob: -13.250605583190918
    7. '    ' → logprob: -14.688105583190918
    8. '  ' → logprob: -15.063105583190918
    9. '
' → logprob: -15.250605583190918
    10. '(' → logprob: -15.250605583190918

Token 825: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002209615893661976
    2. '0' → logprob: -6.127209663391113
    3. ' ,' → logprob: -10.877209663391113
    4. '1' → logprob: -12.877209663391113
    5. '<|end|>' → logprob: -13.627209663391113
    6. ' ' → logprob: -14.002209663391113
    7. ',
' → logprob: -15.502209663391113
    8. '   ' → logprob: -15.752209663391113
    9. '<|end|>' → logprob: -16.127208709716797
    10. '+' → logprob: -16.502208709716797

Token 826: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1160349458805285e-05
    2. ' ' → logprob: -11.500011444091797
    3. '1' → logprob: -14.375011444091797
    4. '   ' → logprob: -15.000011444091797
    5. 'b' → logprob: -17.250011444091797
    6. '۰' → logprob: -17.312511444091797
    7. '    ' → logprob: -18.687511444091797
    8. '０' → logprob: -18.812511444091797
    9. '```' → logprob: -19.312511444091797
    10. '       ' → logprob: -19.625011444091797

Token 827: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.420598219847307e-05
    2. ' ,' → logprob: -10.1250638961792
    3. '[],' → logprob: -10.8750638961792
    4. ',[' → logprob: -12.8750638961792
    5. ',
' → logprob: -14.3750638961792
    6. ' [],' → logprob: -14.6250638961792
    7. '[])' → logprob: -14.6250638961792
    8. '[]' → logprob: -14.8750638961792
    9. '([]' → logprob: -16.250064849853516
    10. ',['' → logprob: -16.250064849853516

Token 828: '[])
' (ID: 56668)
  Prédit: '[])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[])' → logprob: -0.004297895822674036
    2. '[]' → logprob: -5.504297733306885
    3. '[])
' → logprob: -8.629298210144043
    4. ' [])' → logprob: -10.504298210144043
    5. '[]
' → logprob: -11.879298210144043
    6. '[' → logprob: -12.379298210144043
    7. ')' → logprob: -14.254298210144043
    8. '[]

' → logprob: -14.629298210144043
    9. '[]):' → logprob: -15.129298210144043
    10. '[]>' → logprob: -15.254298210144043

Token 829: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08350734412670135
    2. '<|end|>' → logprob: -2.7085072994232178
    3. '[' → logprob: -5.208507537841797
    4. '	' → logprob: -5.333507537841797
    5. '<|end|>' → logprob: -6.583507537841797
    6. '[]' → logprob: -7.458507537841797
    7. 'return' → logprob: -8.333507537841797
    8. '	return' → logprob: -8.958507537841797
    9. '[
' → logprob: -8.958507537841797
    10. '.' → logprob: -9.083507537841797

Token 830: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04467146471142769
    2. 'else' (adapté à ' else') → logprob: -3.6696715354919434
    3. 'return' → logprob: -4.169671535491943
    4. ' else' → logprob: -6.169671535491943
    5. '	' → logprob: -8.044671058654785
    6. ' return' → logprob: -9.044671058654785
    7. '
' → logprob: -9.794671058654785
    8. '[' → logprob: -9.919671058654785
    9. '	return' → logprob: -10.294671058654785
    10. '[]' → logprob: -11.044671058654785

Token 831: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027140967547893524
    2. ':' → logprob: -4.652141094207764
    3. ':
' → logprob: -4.777141094207764
    4. 'return' → logprob: -5.152141094207764
    5. ' return' → logprob: -6.277141094207764
    6. '       ' → logprob: -7.777141094207764
    7. ':return' → logprob: -8.027140617370605
    8. '   ' → logprob: -9.527140617370605
    9. '	       ' → logprob: -9.527140617370605
    10. '		' → logprob: -9.652140617370605

Token 832: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5941250324249268
    2. '           ' → logprob: -0.8441250324249268
    3. '       ' → logprob: -4.469124794006348
    4. ' return' → logprob: -5.094124794006348
    5. '	return' → logprob: -8.969124794006348
    6. '[' → logprob: -9.219124794006348
    7. '[[' → logprob: -9.594124794006348
    8. '   ' → logprob: -10.219124794006348
    9. '	       ' → logprob: -10.719124794006348
    10. '[]' → logprob: -11.094124794006348

Token 833: ' results' (ID: 4376)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07892371714115143
    2. '[[' → logprob: -2.5789237022399902
    3. ' return' → logprob: -10.328924179077148
    4. ' [[' → logprob: -15.328924179077148
    5. '[['' → logprob: -15.453924179077148
    6. '{return' → logprob: -15.453924179077148
    7. '   ' → logprob: -15.828924179077148
    8. '[' → logprob: -15.828924179077148
    9. '```' → logprob: -16.45392417907715
    10. ':return' → logprob: -16.45392417907715

Token 834: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.08408453315496445
    2. ' =' → logprob: -3.0840845108032227
    3. '=' → logprob: -3.8340845108032227
    4. '[' → logprob: -4.709084510803223
    5. '+' → logprob: -6.709084510803223
    6. '=[' → logprob: -7.334084510803223
    7. '=[[' → logprob: -7.584084510803223
    8. 'return' → logprob: -7.959084510803223
    9. '<|end|>' → logprob: -8.209084510803223
    10. '+=' → logprob: -8.584084510803223

Token 835: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.25219962000846863
    2. '[' → logprob: -1.502199649810791
    3. '[t' → logprob: -9.127199172973633
    4. '[number' → logprob: -10.127199172973633
    5. '[data' → logprob: -10.627199172973633
    6. '(total' → logprob: -11.252199172973633
    7. '[current' → logprob: -11.752199172973633
    8. '[length' → logprob: -11.877199172973633
    9. '[target' → logprob: -11.877199172973633
    10. ' [' → logprob: -12.002199172973633

Token 836: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -2.1008713702030946e-06
    2. ' total' → logprob: -13.375001907348633
    3. '[' → logprob: -14.625001907348633
    4. '(total' → logprob: -18.000001907348633
    5. '$total' → logprob: -19.500001907348633
    6. '	total' → logprob: -20.500001907348633
    7. '   ' → logprob: -21.250001907348633
    8. '.total' → logprob: -22.125001907348633
    9. ',total' → logprob: -22.125001907348633
    10. 'distance' → logprob: -22.375001907348633

Token 837: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -5.3120038501219824e-05
    2. 'distance' → logprob: -9.875053405761719
    3. 'Distance' → logprob: -13.625053405761719
    4. '_DISTANCE' → logprob: -16.00005340576172
    5. '_dist' → logprob: -16.12505340576172
    6. ' distance' → logprob: -16.12505340576172
    7. '_' → logprob: -16.50005340576172
    8. '_d' → logprob: -18.25005340576172
    9. '```' → logprob: -18.25005340576172
    10. '(distance' → logprob: -18.62505340576172

Token 838: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0009228924172930419
    2. '])
' → logprob: -7.000922679901123
    3. ' ])' → logprob: -12.375923156738281
    4. ']' → logprob: -12.625923156738281
    5. ']])' → logprob: -13.500923156738281
    6. ')' → logprob: -14.000923156738281
    7. '])

' → logprob: -14.250923156738281
    8. '])]' → logprob: -15.000923156738281
    9. '])
' → logprob: -15.375923156738281
    10. ')])' → logprob: -16.25092315673828

Token 839: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009012545458972454
    2. '	' → logprob: -5.134012699127197
    3. '[' → logprob: -6.384012699127197
    4. '<|end|>' → logprob: -7.509012699127197
    5. '[
' → logprob: -8.509012222290039
    6. 'return' → logprob: -8.634012222290039
    7. '
' → logprob: -9.384012222290039
    8. '	return' → logprob: -9.509012222290039
    9. '[]' → logprob: -9.759012222290039
    10. '   ' → logprob: -9.759012222290039

Token 840: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05624225363135338
    2. '	' → logprob: -3.6812422275543213
    3. '<|end|>' → logprob: -3.9312422275543213
    4. 'return' (adapté à ' return') → logprob: -5.9312424659729
    5. ')' → logprob: -6.6812424659729
    6. '	return' → logprob: -6.8062424659729
    7. '[' → logprob: -7.0562424659729
    8. '   ' → logprob: -7.1812424659729
    9. '        
' → logprob: -7.5562424659729
    10. '<|end|>' → logprob: -8.056241989135742

Token 841: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.024191372096538544
    2. '[[' → logprob: -4.024191379547119
    3. '[' → logprob: -5.399191379547119
    4. ' results' → logprob: -6.649191379547119
    5. '[]' → logprob: -9.024190902709961
    6. '(results' → logprob: -9.774190902709961
    7. '	results' → logprob: -11.274190902709961
    8. ' [[' → logprob: -11.899190902709961
    9. ' [' → logprob: -12.274190902709961
    10. '.results' → logprob: -13.399190902709961

Token 842: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 843: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0997912809252739
    2. '<|end|>' → logprob: -3.2247912883758545
    3. ')' → logprob: -3.5997912883758545
    4. '   ' → logprob: -4.974791049957275
    5. '    ' → logprob: -5.474791049957275
    6. '[' → logprob: -5.724791049957275
    7. ':' → logprob: -6.099791049957275
    8. ',' → logprob: -6.349791049957275
    9. '       ' → logprob: -6.474791049957275
    10. '  ' → logprob: -6.599791049957275

Token 844: ' =====' (ID: 71502)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2989246845245361
    2. '<|end|>' → logprob: -1.5489246845245361
    3. '   ' → logprob: -1.6739246845245361
    4. ' ' → logprob: -1.7989246845245361
    5. ')' → logprob: -2.298924684524536
    6. '    ' → logprob: -4.048924446105957
    7. '        ' → logprob: -4.673924446105957
    8. ' 
' → logprob: -5.173924446105957
    9. ' )' → logprob: -5.298924446105957
    10. '[' → logprob: -5.673924446105957

Token 845: '==' (ID: 560)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.15217185020446777
    2. '==' → logprob: -2.2771718502044678
    3. '<|end|>' → logprob: -4.777172088623047
    4. '#' → logprob: -5.402172088623047
    5. '<|end|>' → logprob: -5.652172088623047
    6. '===' → logprob: -5.777172088623047
    7. '
' → logprob: -6.027172088623047
    8. 'The' → logprob: -6.277172088623047
    9. 'def' → logprob: -6.402172088623047
    10. '=' → logprob: -6.527172088623047

Token 846: ' Core' (ID: 16309)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.05381273850798607
    2. '#' → logprob: -3.1788127422332764
    3. 'def' → logprob: -4.678812503814697
    4. 'import' → logprob: -7.178812503814697
    5. '
' → logprob: -8.053812980651855
    6. 'from' → logprob: -8.803812980651855
    7. ' class' → logprob: -9.553812980651855
    8. 'The' → logprob: -11.178812980651855
    9. '```' → logprob: -11.303812980651855
    10. 'Code' → logprob: -11.678812980651855

Token 847: ' Solver' (ID: 141655)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.003643311094492674
    2. ' class' → logprob: -5.87864351272583
    3. '
' → logprob: -8.503643035888672
    4. '   ' → logprob: -8.628643035888672
    5. 'def' → logprob: -8.628643035888672
    6. '#' → logprob: -9.003643035888672
    7. ' ' → logprob: -10.378643035888672
    8. 'import' → logprob: -11.128643035888672
    9. '```' → logprob: -11.128643035888672
    10. ' 
' → logprob: -11.628643035888672

Token 848: ' Logic' (ID: 61151)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0006236801855266094
    2. '
' → logprob: -7.50062370300293
    3. ' class' → logprob: -9.62562370300293
    4. '<|end|>' → logprob: -13.00062370300293
    5. ' 
' → logprob: -13.87562370300293
    6. '

' → logprob: -14.62562370300293
    7. 'import' → logprob: -14.87562370300293
    8. '  
' → logprob: -15.00062370300293
    9. '<class' → logprob: -16.00062370300293
    10. '<|end|>' → logprob: -16.62562370300293

Token 849: ' =====' (ID: 71502)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00020056030189152807
    2. 'def' → logprob: -8.625200271606445
    3. 'import' → logprob: -11.250200271606445
    4. ' class' → logprob: -12.125200271606445
    5. '
' → logprob: -13.250200271606445
    6. '<|end|>' → logprob: -15.000200271606445
    7. 'from' → logprob: -15.500200271606445
    8. '   ' → logprob: -16.625200271606445
    9. '#' → logprob: -16.625200271606445
    10. '```' → logprob: -16.750200271606445

Token 850: '==' (ID: 560)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00373784895054996
    2. '
' → logprob: -5.753737926483154
    3. ' class' → logprob: -7.628737926483154
    4. 'import' → logprob: -10.503737449645996
    5. 'def' → logprob: -10.628737449645996
    6. ' 
' → logprob: -11.503737449645996
    7. '

' → logprob: -12.878737449645996
    8. 'c' → logprob: -13.003737449645996
    9. 'from' → logprob: -13.753737449645996
    10. '   ' → logprob: -14.253737449645996

Token 851: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00023655613767914474
    2. 'def' → logprob: -9.125236511230469
    3. '
' → logprob: -9.250236511230469
    4. ' class' → logprob: -10.625236511230469
    5. 'import' → logprob: -12.125236511230469
    6. '   ' → logprob: -14.375236511230469
    7. '```' → logprob: -14.625236511230469
    8. '

' → logprob: -15.375236511230469
    9. 'from' → logprob: -15.750236511230469
    10. '<|end|>' → logprob: -16.00023651123047

Token 852: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.018422896042466164
    2. 'def' → logprob: -4.018423080444336
    3. 'import' → logprob: -8.768423080444336
    4. 'MAX' → logprob: -9.768423080444336
    5. 'from' → logprob: -10.268423080444336
    6. '#' → logprob: -11.393423080444336
    7. '
' → logprob: -12.018423080444336
    8. '   ' → logprob: -12.518423080444336
    9. ' class' → logprob: -14.143423080444336
    10. 'max' → logprob: -14.143423080444336

Token 853: ' Tra' (ID: 12393)
  Prédit: 'Trajectory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Trajectory' → logprob: -1.5158357620239258
    2. 'Par' → logprob: -1.8908357620239258
    3. 'Solver' → logprob: -1.8908357620239258
    4. 'Bullet' → logprob: -2.390835762023926
    5. 'Physics' → logprob: -2.390835762023926
    6. 'Bounce' → logprob: -2.515835762023926
    7. 'Solution' → logprob: -3.390835762023926
    8. 'Ball' → logprob: -3.515835762023926
    9. ' Par' → logprob: -3.640835762023926
    10. ' Bounce' → logprob: -3.765835762023926

Token 854: 'jectory' (ID: 42401)
  Prédit: 'jectory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jectory' → logprob: -0.030660267919301987
    2. 'ject' → logprob: -3.5306601524353027
    3. 'j' → logprob: -7.155660152435303
    4. 'ns' → logprob: -10.780660629272461
    5. ' j' → logprob: -11.030660629272461
    6. 'ctor' → logprob: -11.155660629272461
    7. 'jec' → logprob: -11.655660629272461
    8. '   ' → logprob: -12.030660629272461
    9. 'cker' → logprob: -12.155660629272461
    10. 'ck' → logprob: -12.155660629272461

Token 855: 'Planner' (ID: 120933)
  Prédit: 'Splitter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Splitter' → logprob: -0.34558701515197754
    2. 'Solver' → logprob: -2.3455870151519775
    3. 'Builder' → logprob: -2.8455870151519775
    4. 'Optimizer' → logprob: -3.3455870151519775
    5. ':' → logprob: -3.7205870151519775
    6. 'Generator' → logprob: -3.8455870151519775
    7. '(' → logprob: -4.095586776733398
    8. 'Planner' → logprob: -4.220586776733398
    9. 'Calculator' → logprob: -4.470586776733398
    10. 'Segment' → logprob: -5.220586776733398

Token 856: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006803352385759354
    2. ':
' → logprob: -5.006803512573242
    3. '(' → logprob: -9.881803512573242
    4. '(B' → logprob: -10.381803512573242
    5. ':

' → logprob: -13.756803512573242
    6. '):' → logprob: -14.131803512573242
    7. '(Abstract' → logprob: -14.631803512573242
    8. '(object' → logprob: -14.631803512573242
    9. ':def' → logprob: -14.756803512573242
    10. ':B' → logprob: -15.131803512573242

Token 857: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5526722073554993
    2. '   ' → logprob: -0.9276722073554993
    3. ':
' → logprob: -3.5526721477508545
    4. 'def' → logprob: -9.302672386169434
    5. '(' → logprob: -9.427672386169434
    6. ' def' → logprob: -9.427672386169434
    7. '```' → logprob: -9.427672386169434
    8. ' :' → logprob: -10.927672386169434
    9. '<|end|>' → logprob: -11.302672386169434
    10. '	def' → logprob: -11.427672386169434

Token 858: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06342030316591263
    2. ' def' → logprob: -2.813420295715332
    3. 'def' (adapté à ' def') → logprob: -6.688420295715332
    4. ':' → logprob: -8.688420295715332
    5. '	def' → logprob: -11.188420295715332
    6. 'class' → logprob: -11.688420295715332
    7. ':def' → logprob: -12.563420295715332
    8. '    ' → logprob: -13.313420295715332
    9. ':
' → logprob: -13.563420295715332
    10. ' class' → logprob: -13.563420295715332

Token 859: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.6397091150283813
    2. '__' → logprob: -1.0147091150283813
    3. 'def' → logprob: -3.014708995819092
    4. 'init' → logprob: -3.139708995819092
    5. ' def' → logprob: -4.389708995819092
    6. '_init' → logprob: -5.389708995819092
    7. '_' → logprob: -8.38970947265625
    8. '___' → logprob: -8.63970947265625
    9. ' init' → logprob: -9.38970947265625
    10. '__(' → logprob: -9.88970947265625

Token 860: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.246537173457909e-06
    2. 'nit' → logprob: -12.500003814697266
    3. 'int' → logprob: -15.375003814697266
    4. 'iter' → logprob: -15.875003814697266
    5. 'it' → logprob: -16.625003814697266
    6. '```' → logprob: -16.875003814697266
    7. 'new' → logprob: -18.250003814697266
    8. 'def' → logprob: -19.250003814697266
    9. '(init' → logprob: -19.250003814697266
    10. '_init' → logprob: -19.250003814697266

Token 861: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.03879036009311676
    2. '(self' → logprob: -3.288790464401245
    3. '__(
' → logprob: -8.288790702819824
    4. ' (' → logprob: -8.413790702819824
    5. '__' → logprob: -8.413790702819824
    6. '_(' → logprob: -10.538790702819824
    7. '(' → logprob: -11.163790702819824
    8. 'self' → logprob: -12.413790702819824
    9. '__((' → logprob: -13.663790702819824
    10. '```' → logprob: -13.663790702819824

Token 862: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.908022285439074e-05
    2. ' self' → logprob: -10.000059127807617
    3. '
' → logprob: -11.750059127807617
    4. '(self' → logprob: -13.125059127807617
    5. ')' → logprob: -13.500059127807617
    6. '   ' → logprob: -13.750059127807617
    7. '0' → logprob: -14.500059127807617
    8. '):
' → logprob: -15.625059127807617
    9. '       ' → logprob: -15.625059127807617
    10. ',' → logprob: -16.125059127807617

Token 863: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03249066323041916
    2. 'self' → logprob: -3.6574907302856445
    3. '(self' → logprob: -5.1574907302856445
    4. ' (' → logprob: -8.282490730285645
    5. ' self' → logprob: -9.532490730285645
    6. ',self' → logprob: -10.782490730285645
    7. ' ,' → logprob: -11.157490730285645
    8. ')' → logprob: -11.657490730285645
    9. '   ' → logprob: -11.907490730285645
    10. '__(' → logprob: -11.907490730285645

Token 864: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.01703382469713688
    2. 'input' → logprob: -4.76703405380249
    3. ' problem' → logprob: -5.26703405380249
    4. 'distance' → logprob: -6.51703405380249
    5. 'max' → logprob: -6.64203405380249
    6. 'bounce' → logprob: -8.892033576965332
    7. 'total' → logprob: -9.142033576965332
    8. 'split' → logprob: -10.142033576965332
    9. ' input' → logprob: -10.142033576965332
    10. 'target' → logprob: -10.892033576965332

Token 865: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.013091056607663631
    2. 'Input' → logprob: -4.388091087341309
    3. ':' → logprob: -8.388091087341309
    4. 'input' → logprob: -9.138091087341309
    5. '):' → logprob: -9.388091087341309
    6. ')' → logprob: -9.513091087341309
    7. '):
' → logprob: -10.263091087341309
    8. '   ' → logprob: -11.138091087341309
    9. '_' → logprob: -11.888091087341309
    10. '_Input' → logprob: -12.263091087341309

Token 866: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004386321175843477
    2. '):' → logprob: -5.5043864250183105
    3. '):
' → logprob: -8.129385948181152
    4. ' :' → logprob: -12.004385948181152
    5. '   ' → logprob: -12.879385948181152
    6. ')' → logprob: -13.129385948181152
    7. ' ):' → logprob: -13.754385948181152
    8. '):
' → logprob: -14.879385948181152
    9. ',' → logprob: -15.129385948181152
    10. '_:' → logprob: -15.629385948181152

Token 867: ' Problem' (ID: 26113)
  Prédit: 'Problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Problem' → logprob: -4.572941179503687e-05
    2. ' Problem' → logprob: -10.000045776367188
    3. ')' → logprob: -15.875045776367188
    4. 'problem' → logprob: -17.000045776367188
    5. '   ' → logprob: -17.250045776367188
    6. '_problem' → logprob: -17.375045776367188
    7. '):
' → logprob: -17.625045776367188
    8. ' problem' → logprob: -19.125045776367188
    9. ',' → logprob: -19.750045776367188
    10. ' ' → logprob: -19.750045776367188

Token 868: 'Input' (ID: 3275)
  Prédit: 'Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -3.392824874026701e-05
    2. '):
' → logprob: -11.37503433227539
    3. ')' → logprob: -11.62503433227539
    4. '_input' → logprob: -12.87503433227539
    5. '	Input' → logprob: -13.00003433227539
    6. '
' → logprob: -13.50003433227539
    7. '   ' → logprob: -13.87503433227539
    8. '.Input' → logprob: -14.12503433227539
    9. '_Input' → logprob: -14.12503433227539
    10. 'Inputs' → logprob: -14.50003433227539

Token 869: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04339580610394478
    2. '):
' → logprob: -3.168395757675171
    3. ',' → logprob: -7.91839599609375
    4. ')' → logprob: -10.91839599609375
    5. '):
' → logprob: -11.54339599609375
    6. '   ' → logprob: -13.16839599609375
    7. ':' → logprob: -13.54339599609375
    8. ' ):' → logprob: -13.91839599609375
    9. '):

' → logprob: -14.91839599609375
    10. '       ' → logprob: -16.29339599609375

Token 870: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001728848903439939
    2. 'self' → logprob: -6.7517290115356445
    3. ' self' → logprob: -8.251729011535645
    4. ',' → logprob: -8.626729011535645
    5. '   ' → logprob: -10.001729011535645
    6. '<|end|>' → logprob: -10.626729011535645
    7. ':' → logprob: -11.501729011535645
    8. '):
' → logprob: -12.001729011535645
    9. ')' → logprob: -12.126729011535645
    10. '(self' → logprob: -12.251729011535645

Token 871: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00012642296496778727
    2. '       ' → logprob: -9.000126838684082
    3. ' self' → logprob: -12.750126838684082
    4. '   ' → logprob: -17.250125885009766
    5. '	self' → logprob: -20.375125885009766
    6. '        
' → logprob: -21.875125885009766
    7. 'import' → logprob: -22.500125885009766
    8. '(self' → logprob: -22.500125885009766
    9. '
' → logprob: -22.875125885009766
    10. '           ' → logprob: -23.250125885009766

Token 872: '.d' (ID: 1380)
  Prédit: '.problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.problem' → logprob: -0.00012308525037951767
    2. '.input' → logprob: -9.375123023986816
    3. '.' → logprob: -10.375123023986816
    4. ' .' → logprob: -12.750123023986816
    5. '.pro' → logprob: -13.000123023986816
    6. 'problem' → logprob: -13.500123023986816
    7. '._' → logprob: -15.875123023986816
    8. '.inputs' → logprob: -16.375123977661133
    9. '.program' → logprob: -17.125123977661133
    10. ' problem' → logprob: -17.250123977661133

Token 873: ' =' (ID: 314)
  Prédit: 'istance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'istance' → logprob: -1.3544423381972592e-05
    2. 'ist' → logprob: -12.75001335144043
    3. 'ata' → logprob: -12.75001335144043
    4. 'istan' → logprob: -12.87501335144043
    5. 'distance' → logprob: -13.12501335144043
    6. 'ef' → logprob: -14.37501335144043
    7. '=' → logprob: -14.62501335144043
    8. 'stance' → logprob: -14.62501335144043
    9. 'estination' → logprob: -14.87501335144043
    10. '   ' → logprob: -14.87501335144043

Token 874: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -1.306760805164231e-05
    2. ' problem' → logprob: -11.25001335144043
    3. '(problem' → logprob: -18.00001335144043
    4. '_problem' → logprob: -21.62501335144043
    5. '.problem' → logprob: -22.00001335144043
    6. 'proble' → logprob: -22.12501335144043
    7. 'Problem' → logprob: -22.62501335144043
    8. 'program' → logprob: -22.87501335144043
    9. '/problem' → logprob: -23.62501335144043
    10. 'prob' → logprob: -23.62501335144043

Token 875: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.1756367712223437e-05
    2. 'input' → logprob: -12.125011444091797
    3. 'Input' → logprob: -13.125011444091797
    4. '.input' → logprob: -14.000011444091797
    5. '._' → logprob: -14.625011444091797
    6. '_inputs' → logprob: -14.750011444091797
    7. '_' → logprob: -14.875011444091797
    8. '_in' → logprob: -15.125011444091797
    9. '
' → logprob: -15.125011444091797
    10. '_distance' → logprob: -15.250011444091797

Token 876: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -1.282920129597187e-05
    2. '.' → logprob: -12.250012397766113
    3. '.dist' → logprob: -12.500012397766113
    4. 'distance' → logprob: -12.625012397766113
    5. '.Distance' → logprob: -15.375012397766113
    6. '.d' → logprob: -15.500012397766113
    7. '.ob' → logprob: -15.875012397766113
    8. ' .' → logprob: -16.50001335144043
    9. '(distance' → logprob: -16.50001335144043
    10. '.destination' → logprob: -16.75001335144043

Token 877: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005726903327740729
    2. '<|end|>' → logprob: -8.12557315826416
    3. 'self' → logprob: -8.37557315826416
    4. '
' → logprob: -10.50057315826416
    5. ' self' → logprob: -12.50057315826416
    6. '<|end|>' → logprob: -12.62557315826416
    7. ',' → logprob: -12.87557315826416
    8. '   ' → logprob: -13.00057315826416
    9. '      ' → logprob: -13.62557315826416
    10. '        
' → logprob: -13.87557315826416

Token 878: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033332528546452522
    2. 'self' → logprob: -5.75333309173584
    3. '<|end|>' → logprob: -9.12833309173584
    4. ' self' → logprob: -10.50333309173584
    5. '<|end|>' → logprob: -12.37833309173584
    6. ',' → logprob: -12.62833309173584
    7. '	self' → logprob: -13.37833309173584
    8. '	' → logprob: -13.50333309173584
    9. '   ' → logprob: -13.62833309173584
    10. '[self' → logprob: -13.87833309173584

Token 879: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -7.465036105713807e-06
    2. ' self' → logprob: -12.375007629394531
    3. '       ' → logprob: -12.750007629394531
    4. '
' → logprob: -15.125007629394531
    5. 's' → logprob: -18.12500762939453
    6. '	self' → logprob: -18.25000762939453
    7. '        
' → logprob: -18.25000762939453
    8. '[self' → logprob: -18.37500762939453
    9. 'import' → logprob: -19.25000762939453
    10. '0' → logprob: -19.37500762939453

Token 880: '.max' (ID: 11883)
  Prédit: '.ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ob' → logprob: -0.00029112942866049707
    2. '.o' → logprob: -9.250290870666504
    3. '.obs' → logprob: -9.500290870666504
    4. '.max' → logprob: -9.625290870666504
    5. 'ob' → logprob: -10.500290870666504
    6. '.b' → logprob: -11.000290870666504
    7. 'max' → logprob: -12.375290870666504
    8. '.' → logprob: -13.875290870666504
    9. '	ob' → logprob: -14.000290870666504
    10. '.os' → logprob: -14.750290870666504

Token 881: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -9.088346359931165e-07
    2. 'b' → logprob: -14.500000953674316
    3. '_' → logprob: -15.000000953674316
    4. '_attempt' → logprob: -18.25
    5. '_allowed' → logprob: -18.75
    6. '_possible' → logprob: -18.75
    7. '_B' → logprob: -18.875
    8. '_a' → logprob: -18.875
    9. '\' → logprob: -19.0
    10. '_j' → logprob: -19.375

Token 882: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -4.9186317482963204e-05
    2. 'ounce' → logprob: -10.875049591064453
    3. 'oun' → logprob: -11.000049591064453
    4. 'onces' → logprob: -12.375049591064453
    5. 'o' → logprob: -13.000049591064453
    6. 'b' → logprob: -13.250049591064453
    7. 'ouches' → logprob: -13.500049591064453
    8. '```' → logprob: -14.125049591064453
    9. '_b' → logprob: -14.625049591064453
    10. '``' → logprob: -15.000049591064453

Token 883: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14273427426815033
    2. '=' → logprob: -2.0177342891693115
    3. '<|end|>' → logprob: -9.89273452758789
    4. '   ' → logprob: -13.14273452758789
    5. ' ' → logprob: -13.51773452758789
    6. ')' → logprob: -13.64273452758789
    7. '<|end|>' → logprob: -13.89273452758789
    8. ',' → logprob: -14.51773452758789
    9. 's' → logprob: -14.76773452758789
    10. '=int' → logprob: -15.39273452758789

Token 884: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.005233763717114925
    2. ' problem' → logprob: -5.2552337646484375
    3. '(problem' → logprob: -19.755233764648438
    4. '_problem' → logprob: -21.505233764648438
    5. 'proble' → logprob: -22.380233764648438
    6. 'Problem' → logprob: -22.380233764648438
    7. '.problem' → logprob: -23.130233764648438
    8. 'prob' → logprob: -23.255233764648438
    9. 'program' → logprob: -23.505233764648438
    10. '   ' → logprob: -25.005233764648438

Token 885: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.005635335575789213
    2. '_b' → logprob: -5.3806352615356445
    3. 's' → logprob: -8.130635261535645
    4. 'input' → logprob: -8.380635261535645
    5. 'Input' → logprob: -8.505635261535645
    6. 'b' → logprob: -8.755635261535645
    7. 'spl' → logprob: -9.755635261535645
    8. '_s' → logprob: -10.505635261535645
    9. 'split' → logprob: -11.130635261535645
    10. '_inputs' → logprob: -11.630635261535645

Token 886: '.max' (ID: 11883)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6934841275215149
    2. '.max' → logprob: -0.6934841275215149
    3. '_max' → logprob: -9.06848430633545
    4. '
' → logprob: -9.19348430633545
    5. ' max' → logprob: -9.44348430633545
    6. '.b' → logprob: -11.06848430633545
    7. '	max' → logprob: -12.31848430633545
    8. ',max' → logprob: -12.44348430633545
    9. '=max' → logprob: -12.69348430633545
    10. '.' → logprob: -12.81848430633545

Token 887: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -3.8889261304575484e-06
    2. 'b' → logprob: -12.500003814697266
    3. 's' → logprob: -18.000003814697266
    4. 'bounce' → logprob: -18.250003814697266
    5. '
' → logprob: -19.000003814697266
    6. '_' → logprob: -19.375003814697266
    7. 'ounces' → logprob: -19.375003814697266
    8. ')' → logprob: -19.875003814697266
    9. 'B' → logprob: -20.250003814697266
    10. '-b' → logprob: -20.312503814697266

Token 888: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -7.958325295476243e-05
    2. 'oun' → logprob: -10.250079154968262
    3. 'ounce' → logprob: -10.625079154968262
    4. 'ou' → logprob: -12.250079154968262
    5. 'onces' → logprob: -12.500079154968262
    6. 'o' → logprob: -12.875079154968262
    7. 'ouches' → logprob: -13.250079154968262
    8. 'ouses' → logprob: -13.375079154968262
    9. 'ances' → logprob: -13.625079154968262
    10. '```' → logprob: -14.250079154968262

Token 889: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.825890159234405e-05
    2. '<|end|>' → logprob: -9.875068664550781
    3. 'self' → logprob: -11.625068664550781
    4. ',' → logprob: -12.250068664550781
    5. '<|end|>' → logprob: -14.000068664550781
    6. ' self' → logprob: -14.250068664550781
    7. '	' → logprob: -14.750068664550781
    8. '.' → logprob: -15.500068664550781
    9. '   ' → logprob: -15.625068664550781
    10. '      ' → logprob: -15.750068664550781

Token 890: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.171581091824919e-05
    2. '<|end|>' → logprob: -10.25007152557373
    3. 'self' → logprob: -10.37507152557373
    4. ',' → logprob: -13.25007152557373
    5. ' self' → logprob: -13.87507152557373
    6. '<|end|>' → logprob: -14.25007152557373
    7. '   ' → logprob: -14.75007152557373
    8. '      ' → logprob: -15.50007152557373
    9. '```' → logprob: -15.62507152557373
    10. '               ' → logprob: -15.87507152557373

Token 891: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00033713103039190173
    2. '       ' → logprob: -8.250337600708008
    3. ' self' → logprob: -9.500337600708008
    4. 's' → logprob: -15.000337600708008
    5. '   ' → logprob: -16.000337600708008
    6. '#' → logprob: -16.250337600708008
    7. '<|end|>' → logprob: -16.875337600708008
    8. '(self' → logprob: -17.000337600708008
    9. '[self' → logprob: -17.000337600708008
    10. '=self' → logprob: -17.125337600708008

Token 892: '.ob' (ID: 30768)
  Prédit: '.ob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ob' → logprob: -0.00024156268045771867
    2. 'ob' → logprob: -8.37524127960205
    3. '.obs' → logprob: -12.12524127960205
    4. ' obstacles' → logprob: -12.87524127960205
    5. '	ob' → logprob: -13.87524127960205
    6. '_ob' → logprob: -14.87524127960205
    7. '.' → logprob: -15.25024127960205
    8. '.o' → logprob: -15.62524127960205
    9. ' .' → logprob: -16.125242233276367
    10. '.objects' → logprob: -16.250242233276367

Token 893: 'stacles' (ID: 143593)
  Prédit: 'stacles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stacles' → logprob: -1.1472419600977446e-06
    2. 'stacle' → logprob: -14.125000953674316
    3. 'acles' → logprob: -15.750000953674316
    4. 'st' → logprob: -15.875000953674316
    5. 'ject' → logprob: -17.000001907348633
    6. 'stances' → logprob: -17.500001907348633
    7. 'structions' → logprob: -17.875001907348633
    8. 's' → logprob: -18.750001907348633
    9. 'sc' → logprob: -19.625001907348633
    10. '```' → logprob: -19.750001907348633

Token 894: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519303858280182
    2. '=' → logprob: -1.5019303560256958
    3. '<|end|>' → logprob: -14.751930236816406
    4. '=[]' → logprob: -15.126930236816406
    5. ' =
' → logprob: -16.126930236816406
    6. ' ' → logprob: -16.126930236816406
    7. ')' → logprob: -16.876930236816406
    8. '=
' → logprob: -17.001930236816406
    9. 's' → logprob: -17.126930236816406
    10. 'import' → logprob: -17.251930236816406

Token 895: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.00861456897109747
    2. ' problem' → logprob: -4.758614540100098
    3. '(problem' → logprob: -16.758615493774414
    4. 'Problem' → logprob: -18.508615493774414
    5. 'proble' → logprob: -19.258615493774414
    6. '.problem' → logprob: -20.383615493774414
    7. '_problem' → logprob: -20.883615493774414
    8. '[' → logprob: -21.008615493774414
    9. 'prob' → logprob: -21.008615493774414
    10. 'sorted' → logprob: -21.883615493774414

Token 896: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0005280109471641481
    2. 'input' → logprob: -8.000528335571289
    3. 's' → logprob: -9.500528335571289
    4. 'ects' → logprob: -10.500528335571289
    5. '.input' → logprob: -10.625528335571289
    6. 'put' → logprob: -10.750528335571289
    7. 'ut' → logprob: -11.125528335571289
    8. 'uts' → logprob: -11.500528335571289
    9. 'Input' → logprob: -11.625528335571289
    10. 'puts' → logprob: -12.875528335571289

Token 897: '.ob' (ID: 30768)
  Prédit: '.ob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ob' → logprob: -1.3544423381972592e-05
    2. 'ob' → logprob: -11.25001335144043
    3. '	ob' → logprob: -15.37501335144043
    4. '.obs' → logprob: -15.37501335144043
    5. '.' → logprob: -17.62501335144043
    6. '(ob' → logprob: -18.87501335144043
    7. ''ob' → logprob: -19.00001335144043
    8. '_ob' → logprob: -19.25001335144043
    9. ' .' → logprob: -19.87501335144043
    10. '.Ob' → logprob: -20.00001335144043

Token 898: 'stacles' (ID: 143593)
  Prédit: 'stacles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stacles' → logprob: -2.339278580620885e-06
    2. 'st' → logprob: -13.875001907348633
    3. 'stacle' → logprob: -14.625001907348633
    4. 's' → logprob: -15.000001907348633
    5. 'acles' → logprob: -15.125001907348633
    6. 'stances' → logprob: -15.250001907348633
    7. 'ject' → logprob: -16.500001907348633
    8. 'structions' → logprob: -19.375001907348633
    9. 'sta' → logprob: -20.375001907348633
    10. 'ast' → logprob: -20.500001907348633

Token 899: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7013704180717468
    2. '<|end|>' → logprob: -0.7013704180717468
    3. '<|end|>' → logprob: -5.8263702392578125
    4. '    
' → logprob: -6.2013702392578125
    5. '       ' → logprob: -6.5763702392578125
    6. '   ' → logprob: -7.3263702392578125
    7. 'def' → logprob: -8.451370239257812
    8. '        
' → logprob: -8.701370239257812
    9. ')' → logprob: -8.826370239257812
    10. '.' → logprob: -9.076370239257812

Token 900: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.747911810874939
    2. '       ' → logprob: -1.622911810874939
    3. '<|end|>' → logprob: -1.872911810874939
    4. '   ' → logprob: -1.997911810874939
    5. '    
' → logprob: -3.3729119300842285
    6. '        
' → logprob: -5.8729119300842285
    7. '<|end|>' → logprob: -6.8729119300842285
    8. 'def' → logprob: -7.2479119300842285
    9. '  
' → logprob: -7.6229119300842285
    10. ')' → logprob: -9.37291145324707

Token 901: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06258933991193771
    2. ' self' → logprob: -3.937589406967163
    3. '       ' → logprob: -4.062589168548584
    4. 'def' → logprob: -4.187589168548584
    5. '<|end|>' → logprob: -4.937589168548584
    6. '
' → logprob: -7.437589168548584
    7. '   ' → logprob: -7.437589168548584
    8. ' def' → logprob: -9.437589645385742
    9. '	self' → logprob: -9.437589645385742
    10. '#' (adapté à ' #') → logprob: -10.312589645385742

Token 902: ' Speed' (ID: 23451)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08603059500455856
    2. 'def' → logprob: -2.7110304832458496
    3. 'split' → logprob: -4.83603048324585
    4. '#' → logprob: -5.21103048324585
    5. 'pass' → logprob: -6.46103048324585
    6. ' self' → logprob: -8.461030960083008
    7. ' splitter' → logprob: -9.336030960083008
    8. '
' → logprob: -9.461030960083008
    9. 'from' → logprob: -9.586030960083008
    10. ' def' → logprob: -9.711030960083008

Token 903: ' precision' (ID: 27303)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.37276220321655273
    2. ' =' → logprob: -1.8727622032165527
    3. '_' → logprob: -1.9977622032165527
    4. '_max' → logprob: -5.372762203216553
    5. '=' → logprob: -5.872762203216553
    6. 'limit' → logprob: -5.997762203216553
    7. '_limits' → logprob: -6.122762203216553
    8. '_threshold' → logprob: -6.372762203216553
    9. ':' → logprob: -6.997762203216553
    10. '_cap' → logprob: -7.497762203216553

Token 904: ' control' (ID: 3580)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18823906779289246
    2. '=' → logprob: -2.188239097595215
    3. ' ' → logprob: -3.188239097595215
    4. '_' → logprob: -5.188239097595215
    5. '       ' → logprob: -5.688239097595215
    6. ':' → logprob: -5.688239097595215
    7. '   ' → logprob: -6.438239097595215
    8. '    ' → logprob: -6.813239097595215
    9. '	' → logprob: -7.438239097595215
    10. ' 
' → logprob: -7.688239097595215

Token 905: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8096110820770264
    2. ':' → logprob: -1.0596110820770264
    3. '
' → logprob: -2.3096110820770264
    4. '=' → logprob: -3.1846110820770264
    5. ' =' → logprob: -3.1846110820770264
    6. 'self' → logprob: -5.0596113204956055
    7. ' :' → logprob: -5.0596113204956055
    8. ',' → logprob: -6.1846113204956055
    9. '        
' → logprob: -6.1846113204956055
    10. ' self' → logprob: -6.3096113204956055

Token 906: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02111375704407692
    2. 'self' → logprob: -4.521113872528076
    3. '
' → logprob: -5.271113872528076
    4. ' self' → logprob: -6.021113872528076
    5. ',' → logprob: -7.521113872528076
    6. ' =' → logprob: -7.646113872528076
    7. '   ' → logprob: -7.646113872528076
    8. ':' → logprob: -8.146113395690918
    9. ' ' → logprob: -8.896113395690918
    10. '=' → logprob: -9.271113395690918

Token 907: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.009202155284583569
    2. ' self' → logprob: -4.759202003479004
    3. '       ' → logprob: -7.634202003479004
    4. '   ' → logprob: -9.884202003479004
    5. 'import' → logprob: -11.134202003479004
    6. 'pass' → logprob: -11.634202003479004
    7. '10' → logprob: -11.759202003479004
    8. '0' → logprob: -12.384202003479004
    9. '20' → logprob: -12.759202003479004
    10. '
' → logprob: -12.884202003479004

Token 908: '.e' (ID: 2560)
  Prédit: '.min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -1.3161094188690186
    2. '.speed' → logprob: -1.4411094188690186
    3. '.v' → logprob: -1.8161094188690186
    4. '._' → logprob: -1.9411094188690186
    5. ' .' → logprob: -3.1911094188690186
    6. '.max' → logprob: -3.4411094188690186
    7. '.e' → logprob: -3.6911094188690186
    8. '.velocity' → logprob: -3.9411094188690186
    9. '_speed' → logprob: -4.191109657287598
    10. '.' → logprob: -4.441109657287598

Token 909: 'psilon' (ID: 71499)
  Prédit: 'psilon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'psilon' → logprob: -0.1272241622209549
    2. 'ps' → logprob: -2.1272242069244385
    3. 'psi' → logprob: -8.37722396850586
    4. 'p' → logprob: -10.75222396850586
    5. 'rror' → logprob: -11.12722396850586
    6. 'psc' → logprob: -12.25222396850586
    7. 'poch' → logprob: -12.37722396850586
    8. '=' → logprob: -12.87722396850586
    9. 'psis' → logprob: -13.12722396850586
    10. 'psz' → logprob: -13.12722396850586

Token 910: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029758360236883163
    2. '=' → logprob: -3.5297584533691406
    3. ' ' → logprob: -12.40475845336914
    4. '_' → logprob: -13.40475845336914
    5. '  ' → logprob: -14.40475845336914
    6. 's' → logprob: -14.65475845336914
    7. ':' → logprob: -14.65475845336914
    8. '	' → logprob: -16.15475845336914
    9. '_space' → logprob: -16.27975845336914
    10. '=float' → logprob: -16.27975845336914

Token 911: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09317249804735184
    2. ' ' → logprob: -2.468172550201416
    3. '0' → logprob: -5.468172550201416
    4. '10' → logprob: -12.843172073364258
    5. '5' → logprob: -13.843172073364258
    6. '   ' → logprob: -14.218172073364258
    7. '2' → logprob: -14.593172073364258
    8. '=' → logprob: -16.468172073364258
    9. '  ' → logprob: -16.780672073364258
    10. ' ' → logprob: -17.030672073364258

Token 912: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019374389667063951
    2. '0' → logprob: -6.251937389373779
    3. '-' → logprob: -12.751937866210938
    4. ' ' → logprob: -13.001937866210938
    5. '10' → logprob: -13.751937866210938
    6. '5' → logprob: -14.001937866210938
    7. '2' → logprob: -14.001937866210938
    8. 'float' → logprob: -15.439437866210938
    9. '=' → logprob: -16.001937866210938
    10. '3' → logprob: -16.064437866210938

Token 913: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.07041352242231369
    2. '-' → logprob: -2.695413589477539
    3. '.' → logprob: -7.945413589477539
    4. '0' → logprob: -9.570413589477539
    5. 'E' → logprob: -10.945413589477539
    6. '2' → logprob: -12.070413589477539
    7. ' -' → logprob: -12.195413589477539
    8. '.e' → logprob: -12.570413589477539
    9. '6' → logprob: -12.695413589477539
    10. '1' → logprob: -12.945413589477539

Token 914: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1994775377388578e-05
    2. '7' → logprob: -12.500012397766113
    3. '6' → logprob: -13.375012397766113
    4. '5' → logprob: -13.625012397766113
    5. '14' → logprob: -13.875012397766113
    6. '9' → logprob: -14.125012397766113
    7. '4' → logprob: -14.250012397766113
    8. '3' → logprob: -14.250012397766113
    9. '12' → logprob: -14.500012397766113
    10. '8' → logprob: -14.500012397766113

Token 915: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.9056411981582642
    2. '8' → logprob: -1.9056411981582642
    3. '9' → logprob: -1.9056411981582642
    4. '6' → logprob: -2.0306410789489746
    5. '14' → logprob: -2.7806410789489746
    6. '10' → logprob: -3.0306410789489746
    7. '12' → logprob: -3.4056410789489746
    8. '5' → logprob: -3.9056410789489746
    9. '4' → logprob: -6.655641078948975
    10. '11' → logprob: -7.405641078948975

Token 916: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09390009194612503
    2. '    
' → logprob: -3.218900203704834
    3. '   ' → logprob: -3.468900203704834
    4. '<|end|>' → logprob: -4.093900203704834
    5. '

' → logprob: -7.718900203704834
    6. ' 
' → logprob: -7.968900203704834
    7. '<|end|>' → logprob: -8.343899726867676
    8. '       ' → logprob: -8.343899726867676
    9. '        
' → logprob: -8.468899726867676
    10. '
    
' → logprob: -9.593899726867676

Token 917: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36600351333618164
    2. '   ' → logprob: -1.7410035133361816
    3. 'def' → logprob: -2.1160035133361816
    4. '    
' → logprob: -5.241003513336182
    5. ' def' → logprob: -5.491003513336182
    6. '<|end|>' → logprob: -6.991003513336182
    7. '        
' → logprob: -8.866003036499023
    8. ' 
' → logprob: -10.366003036499023
    9. ' ' → logprob: -10.616003036499023
    10. '

' → logprob: -11.116003036499023

Token 918: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01815064437687397
    2. ' def' → logprob: -4.018150806427002
    3. '   ' → logprob: -14.893150329589844
    4. '
' → logprob: -15.143150329589844
    5. 'import' → logprob: -17.143150329589844
    6. 'de' → logprob: -17.518150329589844
    7. ')' → logprob: -17.893150329589844
    8. 'from' → logprob: -18.893150329589844
    9. '	def' → logprob: -18.893150329589844
    10. 'd' → logprob: -19.268150329589844

Token 919: ' obstacles' (ID: 46430)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.7164225578308105
    2. ' minimal' → logprob: -1.5914225578308105
    3. 'can' → logprob: -2.2164225578308105
    4. ' can' → logprob: -2.2164225578308105
    5. 'find' → logprob: -4.3414225578308105
    6. ' solve' → logprob: -4.5914225578308105
    7. ' minimum' → logprob: -4.7164225578308105
    8. 'minimal' → logprob: -4.8414225578308105
    9. ' min' → logprob: -5.0914225578308105
    10. ' feasible' → logprob: -5.0914225578308105

Token 920: '_in' (ID: 2267)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.2098752111196518
    2. '_between' → logprob: -3.0848751068115234
    3. '_in' → logprob: -3.2098751068115234
    4. '_can' → logprob: -3.3348751068115234
    5. '_positions' → logprob: -3.7098751068115234
    6. '<|end|>' → logprob: -4.834875106811523
    7. '_pass' → logprob: -5.334875106811523
    8. '_are' → logprob: -5.584875106811523
    9. '_b' → logprob: -6.209875106811523
    10. ')' → logprob: -6.209875106811523

Token 921: '_segment' (ID: 71041)
  Prédit: '_range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.4000501334667206
    2. '_segment' → logprob: -1.650050163269043
    3. 'range' → logprob: -2.400050163269043
    4. '_interval' → logprob: -3.900050163269043
    5. 'between' → logprob: -4.275050163269043
    6. '_between' → logprob: -5.400050163269043
    7. 'segment' → logprob: -6.275050163269043
    8. 'self' → logprob: -6.775050163269043
    9. '_path' → logprob: -7.025050163269043
    10. 'interval' → logprob: -7.275050163269043

Token 922: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.829823102336377e-05
    2. '(' → logprob: -9.62509822845459
    3. 'self' → logprob: -11.00009822845459
    4. '(
' → logprob: -12.25009822845459
    5. '<|end|>' → logprob: -12.37509822845459
    6. '	self' → logprob: -13.75009822845459
    7. '   ' → logprob: -13.87509822845459
    8. ' (' → logprob: -13.87509822845459
    9. '<|end|>' → logprob: -14.12509822845459
    10. '(s' → logprob: -14.25009822845459

Token 923: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00047142591211013496
    2. 'self' → logprob: -8.250471115112305
    3. '(' → logprob: -8.625471115112305
    4. '(
' → logprob: -11.500471115112305
    5. ' (' → logprob: -11.875471115112305
    6. '       ' → logprob: -12.625471115112305
    7. '   ' → logprob: -13.500471115112305
    8. '=self' → logprob: -13.875471115112305
    9. ' self' → logprob: -14.000471115112305
    10. 'def' → logprob: -14.000471115112305

Token 924: ' start' (ID: 1604)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0442684032022953
    2. 'start' → logprob: -3.4192683696746826
    3. 'segment' → logprob: -4.794268608093262
    4. ' self' → logprob: -6.669268608093262
    5. '   ' → logprob: -7.669268608093262
    6. ')' → logprob: -8.669268608093262
    7. ' start' → logprob: -9.169268608093262
    8. ' segment' → logprob: -9.419268608093262
    9. 'range' → logprob: -10.169268608093262
    10. 'x' → logprob: -10.419268608093262

Token 925: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16537398099899292
    2. ':' → logprob: -1.9153740406036377
    3. 'self' → logprob: -6.040373802185059
    4. ':int' → logprob: -6.790373802185059
    5. ' ,' → logprob: -7.165373802185059
    6. '=' → logprob: -8.790373802185059
    7. ',self' → logprob: -9.290373802185059
    8. '   ' → logprob: -9.790373802185059
    9. ',int' → logprob: -9.790373802185059
    10. '_position' → logprob: -9.915373802185059

Token 926: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002507643774151802
    2. 'float' → logprob: -6.25250768661499
    3. ')' → logprob: -8.377507209777832
    4. ' int' → logprob: -8.502507209777832
    5. ':int' → logprob: -9.877507209777832
    6. ',' → logprob: -10.252507209777832
    7. ',int' → logprob: -10.877507209777832
    8. '[int' → logprob: -11.127507209777832
    9. ':' → logprob: -12.502507209777832
    10. '(int' → logprob: -12.752507209777832

Token 927: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.215330409351736e-05
    2. ' ,' → logprob: -10.250041961669922
    3. ',int' → logprob: -12.125041961669922
    4. ',
' → logprob: -14.750041961669922
    5. ',end' → logprob: -15.250041961669922
    6. ')' → logprob: -15.625041961669922
    7. ':' → logprob: -16.000041961669922
    8. '   ' → logprob: -16.000041961669922
    9. ',float' → logprob: -17.000041961669922
    10. '<|end|>' → logprob: -17.250041961669922

Token 928: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.10026426613330841
    2. ' end' → logprob: -2.350264310836792
    3. 'stop' → logprob: -9.850264549255371
    4. '   ' → logprob: -12.975264549255371
    5. ' stop' → logprob: -13.475264549255371
    6. ',' → logprob: -15.100264549255371
    7. 'finish' → logprob: -15.350264549255371
    8. ',end' → logprob: -15.600264549255371
    9. '	end' → logprob: -15.975264549255371
    10. '_end' → logprob: -16.350263595581055

Token 929: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5522481799125671
    2. ':' → logprob: -1.802248239517212
    3. '):
' → logprob: -1.802248239517212
    4. ')' → logprob: -2.427248239517212
    5. ',' → logprob: -5.177248001098633
    6. ':int' → logprob: -8.427248001098633
    7. '   ' → logprob: -9.052248001098633
    8. '):
' → logprob: -9.177248001098633
    9. '):

' → logprob: -9.427248001098633
    10. ' ):' → logprob: -11.677248001098633

Token 930: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023595884442329407
    2. ' int' → logprob: -3.7735958099365234
    3. ')' → logprob: -8.023595809936523
    4. ':int' → logprob: -11.398595809936523
    5. ',' → logprob: -12.773595809936523
    6. ',int' → logprob: -13.398595809936523
    7. '   ' → logprob: -13.648595809936523
    8. '):' → logprob: -13.648595809936523
    9. ':' → logprob: -13.898595809936523
    10. '(int' → logprob: -14.398595809936523

Token 931: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001544321421533823
    2. '):' → logprob: -9.875154495239258
    3. '   ' → logprob: -10.250154495239258
    4. '):
' → logprob: -10.500154495239258
    5. ' )' → logprob: -10.625154495239258
    6. '       ' → logprob: -11.625154495239258
    7. ')->' → logprob: -12.500154495239258
    8. ',' → logprob: -13.625154495239258
    9. ':' → logprob: -14.625154495239258
    10. '):
' → logprob: -14.750154495239258

Token 932: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.22369949519634247
    2. ' ->' → logprob: -1.7236994504928589
    3. ':' → logprob: -3.8486995697021484
    4. '       ' → logprob: -7.973699569702148
    5. ')' → logprob: -8.723699569702148
    6. ')->' → logprob: -9.348699569702148
    7. '   ' → logprob: -9.723699569702148
    8. ':
' → logprob: -10.098699569702148
    9. ',' → logprob: -11.598699569702148
    10. '->[' → logprob: -11.598699569702148

Token 933: ' List' (ID: 2655)
  Prédit: '[List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.039144184440374374
    2. '[' → logprob: -4.039144039154053
    3. 'List' → logprob: -4.789144039154053
    4. '[int' → logprob: -4.914144039154053
    5. '[
' → logprob: -5.414144039154053
    6. '[str' → logprob: -8.414144515991211
    7. '[x' → logprob: -9.164144515991211
    8. 'list' → logprob: -9.539144515991211
    9. '[list' → logprob: -9.664144515991211
    10. ' [' → logprob: -10.289144515991211

Token 934: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016885579680092633
    2. '['' → logprob: -8.750168800354004
    3. '[int' → logprob: -11.875168800354004
    4. '[
' → logprob: -13.000168800354004
    5. ':' → logprob: -15.625168800354004
    6. ':
' → logprob: -16.25016975402832
    7. '[Index' → logprob: -16.62516975402832
    8. '[Serialize' → logprob: -16.75016975402832
    9. '<|end|>' → logprob: -16.75016975402832
    10. 'Obstacle' → logprob: -16.87516975402832

Token 935: 'Obstacle' (ID: 134296)
  Prédit: 'Obstacle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Obstacle' → logprob: -0.00023298001906368881
    2. '['' → logprob: -8.750232696533203
    3. '[' → logprob: -9.625232696533203
    4. ''' → logprob: -11.750232696533203
    5. 'Ob' → logprob: -15.125232696533203
    6. '[int' → logprob: -17.125232696533203
    7. ']' → logprob: -17.250232696533203
    8. '('' → logprob: -17.375232696533203
    9. ''ob' → logprob: -17.375232696533203
    10. '`' → logprob: -17.500232696533203

Token 936: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.1778506487607956
    2. ']:' → logprob: -2.6778507232666016
    3. ':
' → logprob: -3.4278507232666016
    4. ':' → logprob: -3.5528507232666016
    5. ']' → logprob: -4.427850723266602
    6. '):
' → logprob: -4.802850723266602
    7. ']:
' → logprob: -5.802850723266602
    8. '<|end|>' → logprob: -6.052850723266602
    9. '']:
' → logprob: -6.177850723266602
    10. '       ' → logprob: -6.177850723266602

Token 937: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00032247265335172415
    2. ' return' → logprob: -9.875322341918945
    3. '[]' → logprob: -10.000322341918945
    4. '   ' → logprob: -10.000322341918945
    5. '[' → logprob: -10.125322341918945
    6. '<|end|>' → logprob: -10.125322341918945
    7. ',' → logprob: -10.625322341918945
    8. ':' → logprob: -10.750322341918945
    9. '```' → logprob: -11.250322341918945
    10. 'return' → logprob: -11.750322341918945

Token 938: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.025669468566775322
    2. '       ' → logprob: -3.775669574737549
    3. ' return' → logprob: -6.025669574737549
    4. '[' → logprob: -12.77566909790039
    5. '	return' → logprob: -14.02566909790039
    6. 'result' → logprob: -14.40066909790039
    7. '   ' → logprob: -14.77566909790039
    8. '{return' → logprob: -15.27566909790039
    9. '[
' → logprob: -16.40066909790039
    10. '[]' → logprob: -16.77566909790039

Token 939: ' [' (ID: 723)
  Prédit: '[o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[o' → logprob: -0.053346309810876846
    2. '[obj' → logprob: -3.5533463954925537
    3. '[' → logprob: -3.8033463954925537
    4. '[x' → logprob: -7.303346157073975
    5. '[i' → logprob: -8.803346633911133
    6. '[item' → logprob: -9.803346633911133
    7. '[
' → logprob: -9.928346633911133
    8. '[k' → logprob: -11.053346633911133
    9. '[list' → logprob: -11.053346633911133
    10. ' [' → logprob: -11.678346633911133

Token 940: 'o' (ID: 78)
  Prédit: 'obs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'obs' → logprob: -0.01153357233852148
    2. 'o' → logprob: -4.511533737182617
    3. 'ob' → logprob: -7.636533737182617
    4. ' obs' → logprob: -13.136533737182617
    5. '(obs' → logprob: -14.386533737182617
    6. 'obj' → logprob: -14.761533737182617
    7. '
' → logprob: -16.511533737182617
    8. '(o' → logprob: -17.511533737182617
    9. '[o' → logprob: -17.511533737182617
    10. '   ' → logprob: -17.886533737182617

Token 941: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07892592251300812
    2. 'for' → logprob: -2.578925848007202
    3. 'b' → logprob: -10.703926086425781
    4. 'r' → logprob: -11.453926086425781
    5. 'f' → logprob: -13.453926086425781
    6. '	for' → logprob: -13.953926086425781
    7. ' ' → logprob: -15.203926086425781
    8. '   ' → logprob: -15.578926086425781
    9. '       ' → logprob: -17.07892608642578
    10. '    ' → logprob: -17.20392608642578

Token 942: ' o' (ID: 293)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.811348480870947e-05
    2. ' self' → logprob: -10.00004768371582
    3. 'o' → logprob: -13.00004768371582
    4. '(self' → logprob: -15.00004768371582
    5. 'ob' → logprob: -17.12504768371582
    6. '   ' → logprob: -18.37504768371582
    7. '	self' → logprob: -18.37504768371582
    8. '
' → logprob: -18.62504768371582
    9. 'obs' → logprob: -18.62504768371582
    10. '=self' → logprob: -19.12504768371582

Token 943: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.042762111872434616
    2. 'o' → logprob: -3.792762041091919
    3. 'in' → logprob: -4.542762279510498
    4. 'self' → logprob: -5.292762279510498
    5. ' o' → logprob: -5.667762279510498
    6. ' self' → logprob: -8.79276180267334
    7. '=o' → logprob: -10.91776180267334
    8. '	o' → logprob: -11.41776180267334
    9. '.o' → logprob: -12.04276180267334
    10. '_o' → logprob: -12.79276180267334

Token 944: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.518582762917504e-05
    2. ' self' → logprob: -9.37508487701416
    3. '(self' → logprob: -15.62508487701416
    4. '[self' → logprob: -17.875085830688477
    5. '
' → logprob: -18.500085830688477
    6. '=self' → logprob: -18.500085830688477
    7. '	self' → logprob: -19.000085830688477
    8. '       ' → logprob: -19.000085830688477
    9. 'this' → logprob: -19.750085830688477
    10. '   ' → logprob: -19.875085830688477

Token 945: '.ob' (ID: 30768)
  Prédit: '.ob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ob' → logprob: -3.8889261304575484e-06
    2. '.obs' → logprob: -13.875003814697266
    3. '	ob' → logprob: -14.000003814697266
    4. 'ob' → logprob: -14.125003814697266
    5. '.' → logprob: -14.500003814697266
    6. 'self' → logprob: -15.875003814697266
    7. '_ob' → logprob: -16.375003814697266
    8. '.or' → logprob: -16.375003814697266
    9. ' obstacles' → logprob: -16.500003814697266
    10. '.op' → logprob: -16.500003814697266

Token 946: 'stacles' (ID: 143593)
  Prédit: 'stacles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stacles' → logprob: -0.0007355354027822614
    2. 's' → logprob: -7.625735759735107
    3. 'st' → logprob: -8.37573528289795
    4. 'stacle' → logprob: -11.37573528289795
    5. 'stances' → logprob: -13.00073528289795
    6. '(self' → logprob: -13.50073528289795
    7. 'acles' → logprob: -14.37573528289795
    8. 'self' → logprob: -14.37573528289795
    9. ' obstacles' → logprob: -15.50073528289795
    10. 'sta' → logprob: -16.500736236572266

Token 947: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.386898398399353
    2. 'if' → logprob: -1.136898398399353
    3. '           ' → logprob: -10.761898040771484
    4. '        ' → logprob: -13.386898040771484
    5. '          ' → logprob: -13.386898040771484
    6. '            ' → logprob: -13.511898040771484
    7. '       ' → logprob: -14.636898040771484
    8. '         ' → logprob: -14.886898040771484
    9. ' ' → logprob: -15.386898040771484
    10. '    ' → logprob: -15.636898040771484

Token 948: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1426810324192047
    2. ' start' → logprob: -2.017681121826172
    3. ' ' → logprob: -13.517681121826172
    4. '(start' → logprob: -13.767681121826172
    5. '	start' → logprob: -14.017681121826172
    6. ' o' → logprob: -14.017681121826172
    7. '   ' → logprob: -14.267681121826172
    8. 'o' → logprob: -14.642681121826172
    9. '  ' → logprob: -15.017681121826172
    10. '
' → logprob: -16.142681121826172

Token 949: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.12693166732788086
    2. ' <' → logprob: -2.126931667327881
    3. '<=' → logprob: -13.501932144165039
    4. ' <=' → logprob: -14.376932144165039
    5. '<int' → logprob: -15.251932144165039
    6. ' ' → logprob: -15.376932144165039
    7. 'o' → logprob: -15.501932144165039
    8. '<const' → logprob: -16.00193214416504
    9. '[' → logprob: -16.25193214416504
    10. ' o' → logprob: -16.37693214416504

Token 950: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -5.1928003813372925e-05
    2. ' o' → logprob: -9.875051498413086
    3. '=o' → logprob: -15.125051498413086
    4. '	o' → logprob: -16.625051498413086
    5. '_o' → logprob: -17.125051498413086
    6. '{o' → logprob: -17.500051498413086
    7. '(o' → logprob: -17.875051498413086
    8. ''o' → logprob: -18.125051498413086
    9. '[o' → logprob: -18.250051498413086
    10. '.o' → logprob: -18.875051498413086

Token 951: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.00016742534353397787
    2. 'position' → logprob: -8.750167846679688
    3. 'osition' → logprob: -11.750167846679688
    4. '.' → logprob: -14.375167846679688
    5. ' .' → logprob: -15.250167846679688
    6. 'o' → logprob: -17.125167846679688
    7. '[position' → logprob: -17.125167846679688
    8. ' position' → logprob: -17.375167846679688
    9. '	position' → logprob: -17.750167846679688
    10. '(position' → logprob: -17.875167846679688

Token 952: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.20924685895442963
    2. ' <' → logprob: -1.7092468738555908
    3. 'and' → logprob: -4.959246635437012
    4. ' and' → logprob: -7.209246635437012
    5. '<=' → logprob: -10.334246635437012
    6. ' <=' → logprob: -11.459246635437012
    7. '<|end|>' → logprob: -14.959246635437012
    8. '<E' → logprob: -15.334246635437012
    9. '<n' → logprob: -15.459246635437012
    10. '<class' → logprob: -15.959246635437012

Token 953: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0019288709154352546
    2. ' end' → logprob: -6.251928806304932
    3. '=end' → logprob: -15.75192928314209
    4. '=' → logprob: -16.376928329467773
    5. '
' → logprob: -19.876928329467773
    6. '	end' → logprob: -21.001928329467773
    7. '   ' → logprob: -21.001928329467773
    8. '(end' → logprob: -21.001928329467773
    9. '[end' → logprob: -21.376928329467773
    10. ' ' → logprob: -21.376928329467773

Token 954: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00016218038217630237
    2. ' ]' → logprob: -8.750162124633789
    3. ']
' → logprob: -12.625162124633789
    4. '       ' → logprob: -16.62516212463379
    5. ']

' → logprob: -16.75016212463379
    6. '   ' → logprob: -16.75016212463379
    7. '()]' → logprob: -17.12516212463379
    8. ']
' → logprob: -18.00016212463379
    9. ')]' → logprob: -18.37516212463379
    10. '']' → logprob: -18.75016212463379

Token 955: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45824354887008667
    2. '<|end|>' → logprob: -1.7082436084747314
    3. '   ' → logprob: -1.9582436084747314
    4. '    
' → logprob: -3.2082436084747314
    5. '<|end|>' → logprob: -6.083243370056152
    6. '  
' → logprob: -6.583243370056152
    7. ' 
' → logprob: -8.083243370056152
    8. '

' → logprob: -8.583243370056152
    9. '```' → logprob: -8.708243370056152
    10. ')' → logprob: -9.208243370056152

Token 956: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09769228845834732
    2. '
' → logprob: -3.2226922512054443
    3. '    
' → logprob: -3.3476922512054443
    4. 'def' (adapté à ' def') → logprob: -4.222692489624023
    5. '<|end|>' → logprob: -6.222692489624023
    6. ' def' → logprob: -7.347692489624023
    7. '    ' → logprob: -8.847692489624023
    8. '<|end|>' → logprob: -9.097692489624023
    9. ' 
' → logprob: -9.222692489624023
    10. ' ' → logprob: -9.222692489624023

Token 957: ' can' (ID: 665)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.22445818781852722
    2. ' can' → logprob: -2.0994582176208496
    3. ' minimal' → logprob: -3.7244582176208496
    4. ' solve' → logprob: -4.22445821762085
    5. ' possible' → logprob: -4.72445821762085
    6. ' try' → logprob: -5.22445821762085
    7. ' feasible' → logprob: -5.22445821762085
    8. ' best' → logprob: -5.59945821762085
    9. ' plan' → logprob: -5.72445821762085
    10. 'can' → logprob: -5.97445821762085

Token 958: '_make' (ID: 70070)
  Prédit: '_sh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sh' → logprob: -0.9867087602615356
    2. '_hit' → logprob: -1.7367087602615356
    3. '_complete' → logprob: -1.7367087602615356
    4. '_make' → logprob: -2.611708641052246
    5. '_re' → logprob: -2.736708641052246
    6. '_' → logprob: -3.486708641052246
    7. '_launch' → logprob: -4.236708641052246
    8. '_plan' → logprob: -4.486708641052246
    9. '_continue' → logprob: -4.486708641052246
    10. '_s' → logprob: -4.861708641052246

Token 959: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.07945334911346436
    2. '_jump' → logprob: -3.454453468322754
    3. '_' → logprob: -4.204453468322754
    4. '_b' → logprob: -4.454453468322754
    5. '_it' → logprob: -4.579453468322754
    6. '(self' → logprob: -5.579453468322754
    7. '_distance' → logprob: -7.079453468322754
    8. '_the' → logprob: -7.329453468322754
    9. 'segment' → logprob: -7.829453468322754
    10. 'it' → logprob: -7.954453468322754

Token 960: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005283685750328004
    2. '(' → logprob: -7.625528335571289
    3. 'self' → logprob: -10.500528335571289
    4. '_distance' → logprob: -12.500528335571289
    5. '_length' → logprob: -13.000528335571289
    6. '_start' → logprob: -13.500528335571289
    7. '   ' → logprob: -13.750528335571289
    8. '_(' → logprob: -14.000528335571289
    9. '(
' → logprob: -14.125528335571289
    10. ' (' → logprob: -14.750528335571289

Token 961: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1390911489725113
    2. 'self' → logprob: -2.1390912532806396
    3. '(self' → logprob: -4.7640910148620605
    4. ' self' → logprob: -7.1390910148620605
    5. ')' → logprob: -7.5140910148620605
    6. 'start' → logprob: -7.6390910148620605
    7. ' ,' → logprob: -7.6390910148620605
    8. '_start' → logprob: -8.514091491699219
    9. ' ' → logprob: -8.639091491699219
    10. '   ' → logprob: -8.764091491699219

Token 962: ' length' (ID: 5517)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -1.410223364830017
    2. 'self' → logprob: -1.535223364830017
    3. 'length' → logprob: -1.535223364830017
    4. 'l' → logprob: -1.660223364830017
    5. 'start' → logprob: -3.0352234840393066
    6. ' segment' → logprob: -3.5352234840393066
    7. ' length' → logprob: -3.9102234840393066
    8. ' l' → logprob: -4.410223484039307
    9. ' self' → logprob: -4.535223484039307
    10. 'distance' → logprob: -4.910223484039307

Token 963: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001930420519784093
    2. '):' → logprob: -7.126930236816406
    3. ',' → logprob: -7.376930236816406
    4. ')' → logprob: -8.501930236816406
    5. ' :' → logprob: -8.876930236816406
    6. 'self' → logprob: -9.501930236816406
    7. '):
' → logprob: -11.251930236816406
    8. '   ' → logprob: -11.501930236816406
    9. '_:' → logprob: -11.501930236816406
    10. ':int' → logprob: -11.751930236816406

Token 964: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.34143680334091187
    2. 'float' → logprob: -1.8414368629455566
    3. ' int' → logprob: -2.4664368629455566
    4. ' float' → logprob: -3.0914368629455566
    5. ')' → logprob: -8.841436386108398
    6. '   ' → logprob: -9.466436386108398
    7. ' ' → logprob: -10.341436386108398
    8. ':int' → logprob: -11.091436386108398
    9. '[int' → logprob: -11.716436386108398
    10. '(int' → logprob: -11.841436386108398

Token 965: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014299227041192353
    2. ')' → logprob: -9.625143051147461
    3. ' ,' → logprob: -10.125143051147461
    4. ':' → logprob: -10.875143051147461
    5. ',v' → logprob: -11.750143051147461
    6. '   ' → logprob: -12.125143051147461
    7. '):' → logprob: -13.625143051147461
    8. '       ' → logprob: -14.125143051147461
    9. ',
' → logprob: -14.750143051147461
    10. '_,' → logprob: -15.250143051147461

Token 966: ' initial' (ID: 4871)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8593743443489075
    2. 'vy' → logprob: -1.7343742847442627
    3. 'v' → logprob: -2.2343742847442627
    4. 'min' → logprob: -2.4843742847442627
    5. 'speed' → logprob: -2.7343742847442627
    6. 'initial' → logprob: -3.1093742847442627
    7. ' max' → logprob: -3.7343742847442627
    8. 'required' → logprob: -3.8593742847442627
    9. 'vx' → logprob: -3.8593742847442627
    10. ' vy' → logprob: -5.484374523162842

Token 967: '_speed' (ID: 43208)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.009443679824471474
    2. '_velocity' → logprob: -5.259443759918213
    3. '_speed' → logprob: -5.634443759918213
    4. 'speed' → logprob: -8.509443283081055
    5. '_vel' → logprob: -8.634443283081055
    6. '_y' → logprob: -9.884443283081055
    7. '_' → logprob: -10.384443283081055
    8. 'velocity' → logprob: -10.759443283081055
    9. ')' → logprob: -10.884443283081055
    10. 'Vy' → logprob: -11.134443283081055

Token 968: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026406310498714447
    2. ',' → logprob: -3.6514062881469727
    3. ')' → logprob: -10.526406288146973
    4. ' ,' → logprob: -10.526406288146973
    5. '):' → logprob: -10.776406288146973
    6. ',float' → logprob: -11.901406288146973
    7. ' :' → logprob: -12.151406288146973
    8. ':,' → logprob: -12.526406288146973
    9. '_tokens' → logprob: -13.151406288146973
    10. 's' → logprob: -13.401406288146973

Token 969: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.02681073546409607
    2. ' float' → logprob: -3.651810646057129
    3. 'Velocity' → logprob: -8.026810646057129
    4. ':' → logprob: -9.776810646057129
    5. ' Velocity' → logprob: -10.526810646057129
    6. ',float' → logprob: -10.651810646057129
    7. ')' → logprob: -10.901810646057129
    8. '(float' → logprob: -11.401810646057129
    9. '=float' → logprob: -11.401810646057129
    10. 'int' → logprob: -11.776810646057129

Token 970: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006479830481112003
    2. ')' → logprob: -7.625648021697998
    3. ':' → logprob: -9.37564754486084
    4. ' ,' → logprob: -9.62564754486084
    5. '):' → logprob: -12.37564754486084
    6. ',float' → logprob: -12.75064754486084
    7. '<|end|>' → logprob: -14.25064754486084
    8. ',
' → logprob: -15.62564754486084
    9. '‌,' → logprob: -15.75064754486084
    10. ',)' → logprob: -15.75064754486084

Token 971: ' obstacles' (ID: 46430)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.357147455215454
    2. ' max' → logprob: -1.482147455215454
    3. ' initial' → logprob: -1.482147455215454
    4. 'initial' → logprob: -2.357147455215454
    5. ' vy' → logprob: -3.357147455215454
    6. 'vy' → logprob: -3.732147455215454
    7. 'angle' → logprob: -4.357147216796875
    8. ' segment' → logprob: -4.732147216796875
    9. 'min' → logprob: -4.857147216796875
    10. ' min' → logprob: -4.857147216796875

Token 972: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.4121114822482923e-06
    2. ')' → logprob: -13.500003814697266
    3. '_:' → logprob: -13.750003814697266
    4. ':)' → logprob: -15.625003814697266
    5. '):' → logprob: -16.000003814697266
    6. '_list' → logprob: -16.125003814697266
    7. '_in' → logprob: -16.250003814697266
    8. ',' → logprob: -16.625003814697266
    9. ':list' → logprob: -16.875003814697266
    10. '```' → logprob: -17.625003814697266

Token 973: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0005588700296357274
    2. ' List' → logprob: -7.500558853149414
    3. '[List' → logprob: -12.250558853149414
    4. ')' → logprob: -14.625558853149414
    5. 'list' → logprob: -14.750558853149414
    6. '	List' → logprob: -15.750558853149414
    7. '_list' → logprob: -16.000558853149414
    8. '_List' → logprob: -17.625558853149414
    9. '   ' → logprob: -18.375558853149414
    10. '`' → logprob: -19.000558853149414

Token 974: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.612634362885728e-05
    2. '['' → logprob: -9.875076293945312
    3. ')' → logprob: -11.125076293945312
    4. ':' → logprob: -12.625076293945312
    5. '[int' → logprob: -12.875076293945312
    6. '):' → logprob: -14.125076293945312
    7. '):
' → logprob: -14.250076293945312
    8. '=' → logprob: -14.500076293945312
    9. '<' → logprob: -14.750076293945312
    10. 'of' → logprob: -15.375076293945312

Token 975: 'Obstacle' (ID: 134296)
  Prédit: 'Obstacle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Obstacle' → logprob: -0.0012115450808778405
    2. '[' → logprob: -7.001211643218994
    3. '['' → logprob: -8.626211166381836
    4. ''' → logprob: -9.251211166381836
    5. ''ob' → logprob: -11.001211166381836
    6. ']' → logprob: -13.126211166381836
    7. 'Ob' → logprob: -13.251211166381836
    8. ')' → logprob: -13.501211166381836
    9. 'ob' → logprob: -13.626211166381836
    10. '])' → logprob: -15.001211166381836

Token 976: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.259079363080673e-05
    2. ' )' → logprob: -12.000012397766113
    3. '):' → logprob: -12.625012397766113
    4. ',' → logprob: -13.125012397766113
    5. '`)' → logprob: -14.625012397766113
    6. '   ' → logprob: -15.375012397766113
    7. '')' → logprob: -15.500012397766113
    8. ')->' → logprob: -16.12501335144043
    9. '):
' → logprob: -16.25001335144043
    10. ',)' → logprob: -16.37501335144043

Token 977: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04747004061937332
    2. '->' → logprob: -3.9224700927734375
    3. ')' → logprob: -4.2974700927734375
    4. ' ->' → logprob: -4.4224700927734375
    5. ')->' → logprob: -7.5474700927734375
    6. '       ' → logprob: -8.672470092773438
    7. '   ' → logprob: -9.172470092773438
    8. ':
' → logprob: -9.297470092773438
    9. ',' → logprob: -9.922470092773438
    10. '):' → logprob: -12.172470092773438

Token 978: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.02606838382780552
    2. 'List' → logprob: -4.276068210601807
    3. ' bool' → logprob: -4.526068210601807
    4. 'Tuple' → logprob: -7.401068210601807
    5. 'Velocity' → logprob: -8.651068687438965
    6. ' List' → logprob: -9.651068687438965
    7. 'Optional' → logprob: -9.901068687438965
    8. 'float' → logprob: -10.526068687438965
    9. '	bool' → logprob: -11.401068687438965
    10. 'Bool' → logprob: -11.526068687438965

Token 979: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006320207612589002
    2. ':
' → logprob: -7.375631809234619
    3. '):' → logprob: -13.500632286071777
    4. ',' → logprob: -13.625632286071777
    5. ':def' → logprob: -13.625632286071777
    6. ':return' → logprob: -14.125632286071777
    7. ':

' → logprob: -15.500632286071777
    8. '       ' → logprob: -15.625632286071777
    9. ' :' → logprob: -16.37563133239746
    10. ':**' → logprob: -16.62563133239746

Token 980: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003311985172331333
    2. ':' → logprob: -6.253312110900879
    3. '<|end|>' → logprob: -8.378312110900879
    4. '#' → logprob: -8.753312110900879
    5. '        
' → logprob: -8.753312110900879
    6. ')' → logprob: -9.003312110900879
    7. '   ' → logprob: -9.003312110900879
    8. ' 
' → logprob: -9.128312110900879
    9. ',' → logprob: -9.128312110900879
    10. ':
' → logprob: -9.378312110900879

Token 981: ' """
' (ID: 7037)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07355333119630814
    2. '#' → logprob: -2.6985533237457275
    3. 'for' → logprob: -6.823553562164307
    4. 'v' → logprob: -7.198553562164307
    5. '   ' → logprob: -7.573553562164307
    6. 'vx' → logprob: -7.698553562164307
    7. '       ' → logprob: -8.573553085327148
    8. 'low' → logprob: -9.448553085327148
    9. 'g' → logprob: -9.573553085327148
    10. 'eps' → logprob: -9.698553085327148

Token 982: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4380199611186981
    2. '       ' → logprob: -1.6880199909210205
    3. '#' → logprob: -2.5630199909210205
    4. 'vx' → logprob: -3.3130199909210205
    5. 'v' → logprob: -3.8130199909210205
    6. ' if' → logprob: -4.313019752502441
    7. 'for' → logprob: -4.563019752502441
    8. 'try' → logprob: -6.188019752502441
    9. 'g' → logprob: -6.188019752502441
    10. ' vx' → logprob: -6.438019752502441

Token 983: ' Check' (ID: 6208)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.45360633730888367
    2. '       ' → logprob: -1.578606367111206
    3. 'for' → logprob: -2.453606367111206
    4. ' for' → logprob: -3.453606367111206
    5. 'if' → logprob: -4.453606128692627
    6. 'v' → logprob: -4.953606128692627
    7. ' #' → logprob: -5.328606128692627
    8. ' if' → logprob: -5.828606128692627
    9. '
' → logprob: -6.578606128692627
    10. '"""' → logprob: -6.703606128692627

Token 984: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7862160205841064
    2. ' if' → logprob: -1.1612160205841064
    3. '       ' → logprob: -1.6612160205841064
    4. 'for' → logprob: -4.286215782165527
    5. 'possible' → logprob: -4.786215782165527
    6. '#' → logprob: -5.036215782165527
    7. '"""' → logprob: -5.911215782165527
    8. ' for' → logprob: -6.036215782165527
    9. 'max' → logprob: -6.161215782165527
    10. ' possible' → logprob: -6.786215782165527

Token 985: ' possible' (ID: 4149)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.18625342845916748
    2. ' length' → logprob: -2.186253547668457
    3. 'initial' → logprob: -3.311253547668457
    4. 'there' → logprob: -5.061253547668457
    5. 'any' → logprob: -5.811253547668457
    6. ' there' → logprob: -6.061253547668457
    7. ' any' → logprob: -6.186253547668457
    8. ' initial' → logprob: -6.186253547668457
    9. 'for' → logprob: -6.561253547668457
    10. 'the' → logprob: -6.686253547668457

Token 986: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.014366697520017624
    2. 'to' → logprob: -4.514366626739502
    3. ':' → logprob: -6.389366626739502
    4. '   ' → logprob: -7.639366626739502
    5. '.' → logprob: -8.01436710357666
    6. '    ' → logprob: -8.63936710357666
    7. '<|end|>' → logprob: -8.88936710357666
    8. ' ' → logprob: -9.13936710357666
    9. ' with' → logprob: -9.26436710357666
    10. '       ' → logprob: -9.76436710357666

Token 987: ' make' (ID: 1520)
  Prédit: 'clear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clear' → logprob: -0.8198420405387878
    2. 'make' → logprob: -1.4448421001434326
    3. 'hit' → logprob: -1.8198421001434326
    4. 'pass' → logprob: -3.1948421001434326
    5. 'shoot' → logprob: -3.5698421001434326
    6. 'ach' → logprob: -3.6948421001434326
    7. 'find' → logprob: -4.4448418617248535
    8. 'tr' → logprob: -4.5698418617248535
    9. 'reach' → logprob: -4.6948418617248535
    10. 'fire' → logprob: -5.0698418617248535

Token 988: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9160407185554504
    2. ' a' → logprob: -1.0410406589508057
    3. 'the' → logprob: -2.5410406589508057
    4. 'par' → logprob: -2.9160406589508057
    5. 'segment' → logprob: -3.1660406589508057
    6. ' par' → logprob: -3.9160406589508057
    7. ' the' → logprob: -3.9160406589508057
    8. ' segment' → logprob: -4.791040897369385
    9. ' parab' → logprob: -5.041040897369385
    10. 'this' → logprob: -5.416040897369385

Token 989: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.3137645125389099
    2. 'par' → logprob: -1.9387645721435547
    3. ' parab' → logprob: -2.4387645721435547
    4. ' segment' → logprob: -4.188764572143555
    5. 'segment' → logprob: -4.313764572143555
    6. 'trajectory' → logprob: -6.313764572143555
    7. ' Par' → logprob: -6.688764572143555
    8. 'Par' → logprob: -6.813764572143555
    9. ' projectile' → logprob: -6.938764572143555
    10. ' trajectory' → logprob: -6.938764572143555

Token 990: 'abolic' (ID: 39100)
  Prédit: 'abolic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abolic' → logprob: -0.005928558763116598
    2. 'ab' → logprob: -5.8809285163879395
    3. 'abol' → logprob: -6.5059285163879395
    4. 'a' → logprob: -6.7559285163879395
    5. 't' → logprob: -9.005928993225098
    6. ' segment' → logprob: -10.005928993225098
    7. 'segment' → logprob: -10.005928993225098
    8. '_segment' → logprob: -10.005928993225098
    9. '_' → logprob: -10.380928993225098
    10. 'bol' → logprob: -10.755928993225098

Token 991: ' shot' (ID: 12455)
  Prédit: 'trajectory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trajectory' → logprob: -0.32474806904792786
    2. ' trajectory' → logprob: -1.5747480392456055
    3. 'segment' → logprob: -3.5747480392456055
    4. ' flight' → logprob: -4.1997480392456055
    5. 'flight' → logprob: -4.3247480392456055
    6. ' segment' → logprob: -4.6997480392456055
    7. ' shot' → logprob: -5.6997480392456055
    8. 'shot' → logprob: -7.0747480392456055
    9. 'jump' → logprob: -9.324748039245605
    10. 'bounce' → logprob: -9.449748039245605

Token 992: ' over' (ID: 1072)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.35524284839630127
    2. ' segment' → logprob: -1.6052428483963013
    3. 'with' → logprob: -3.1052427291870117
    4. 'segment' → logprob: -3.4802427291870117
    5. ' that' → logprob: -4.980242729187012
    6. ' at' → logprob: -5.480242729187012
    7. ' over' → logprob: -5.605242729187012
    8. ' of' → logprob: -6.355242729187012
    9. '<|end|>' → logprob: -6.605242729187012
    10. '(segment' → logprob: -7.480242729187012

Token 993: ' segment' (ID: 14806)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.10867852717638016
    2. 'the' → logprob: -2.9836785793304443
    3. 'that' → logprob: -3.8586785793304443
    4. 'distance' → logprob: -4.233678340911865
    5. ' length' → logprob: -5.108678340911865
    6. ' that' → logprob: -5.733678340911865
    7. 'segment' → logprob: -6.108678340911865
    8. 'ob' → logprob: -6.483678340911865
    9. ' the' → logprob: -6.483678340911865
    10. 'this' → logprob: -6.733678340911865

Token 994: ' length' (ID: 5517)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.17845767736434937
    2. ' of' → logprob: -2.553457736968994
    3. ' length' → logprob: -3.053457736968994
    4. 'length' → logprob: -4.428457736968994
    5. 'with' → logprob: -5.053457736968994
    6. ' segment' → logprob: -5.178457736968994
    7. ' without' → logprob: -5.678457736968994
    8. '.' → logprob: -5.803457736968994
    9. ' using' → logprob: -6.553457736968994
    10. ' at' → logprob: -6.553457736968994

Token 995: ' under' (ID: 1641)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.08866983652114868
    2. 'with' → logprob: -2.713669776916504
    3. ' using' → logprob: -5.338669776916504
    4. ' without' → logprob: -5.463669776916504
    5. ',' → logprob: -5.588669776916504
    6. '.' → logprob: -6.338669776916504
    7. '```' → logprob: -7.338669776916504
    8. 'without' → logprob: -7.463669776916504
    9. ' given' → logprob: -7.588669776916504
    10. ' by' → logprob: -7.838669776916504

Token 996: ' initial' (ID: 4871)
  Prédit: 'GR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'GR' → logprob: -0.28646838665008545
    2. 'given' → logprob: -2.661468505859375
    3. 'gravity' → logprob: -2.786468505859375
    4. 'max' → logprob: -3.286468505859375
    5. 'initial' → logprob: -3.411468505859375
    6. 'the' → logprob: -3.911468505859375
    7. 'current' → logprob: -4.411468505859375
    8. ' given' → logprob: -5.536468505859375
    9. 'maximum' → logprob: -5.661468505859375
    10. 'speed' → logprob: -6.286468505859375

Token 997: '_speed' (ID: 43208)
  Prédit: '_speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -0.36366671323776245
    2. '_velocity' → logprob: -2.2386667728424072
    3. 'speed' → logprob: -2.4886667728424072
    4. 'velocity' → logprob: -2.6136667728424072
    5. ' velocity' → logprob: -3.7386667728424072
    6. ' speed' → logprob: -4.613666534423828
    7. '_' → logprob: -5.363666534423828
    8. ')' → logprob: -7.113666534423828
    9. '_s' → logprob: -7.238666534423828
    10. '_v' → logprob: -7.863666534423828

Token 998: ' avoiding' (ID: 49354)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.773203432559967
    2. '.' → logprob: -1.6482033729553223
    3. ':' → logprob: -1.6482033729553223
    4. ' and' → logprob: -3.3982033729553223
    5. ',' → logprob: -3.5232033729553223
    6. ' given' → logprob: -3.7732033729553223
    7. ' without' → logprob: -3.7732033729553223
    8. 'with' → logprob: -4.273203372955322
    9. ' by' → logprob: -5.148203372955322
    10. '"""' → logprob: -5.523203372955322

Token 999: ' obstacles' (ID: 46430)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.006971347611397505
    2. ' obstacles' → logprob: -5.00697135925293
    3. 'the' → logprob: -9.00697135925293
    4. 'any' → logprob: -9.88197135925293
    5. ' ob' → logprob: -10.50697135925293
    6. 'all' → logprob: -10.75697135925293
    7. ' any' → logprob: -12.38197135925293
    8. ' the' → logprob: -12.38197135925293
    9. 'those' → logprob: -12.50697135925293
    10. '(ob' → logprob: -12.88197135925293

Token 1000: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15837548673152924
    2. '.' → logprob: -2.0333755016326904
    3. ' with' → logprob: -4.783375263214111
    4. 'with' → logprob: -6.283375263214111
    5. ':
' → logprob: -6.408375263214111
    6. ',' → logprob: -6.533375263214111
    7. ' at' → logprob: -6.908375263214111
    8. ' without' → logprob: -7.658375263214111
    9. ' and' → logprob: -9.03337574005127
    10. 'without' → logprob: -9.15837574005127

Token 1001: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13988417387008667
    2. ' 
' → logprob: -2.7648842334747314
    3. '\n' → logprob: -3.7648842334747314
    4. '        
' → logprob: -4.389883995056152
    5. '<|end|>' → logprob: -4.889883995056152
    6. ' ' → logprob: -5.639883995056152
    7. '    ' → logprob: -5.764883995056152
    8. '\x' → logprob: -6.139883995056152
    9. '```' → logprob: -6.264883995056152
    10. ')' → logprob: -6.264883995056152

Token 1002: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060533955693244934
    2. '
' → logprob: -3.1855340003967285
    3. '        
' → logprob: -5.0605340003967285
    4. '\n' → logprob: -5.8105340003967285
    5. ' 
' → logprob: -5.8105340003967285
    6. '):
' → logprob: -6.5605340003967285
    7. ')' → logprob: -6.5605340003967285
    8. ':' → logprob: -7.8105340003967285
    9. ':
' → logprob: -7.9355340003967285
    10. '    
' → logprob: -8.18553352355957

Token 1003: ' want' (ID: 1682)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.9138761758804321
    2. '   ' → logprob: -1.1638761758804321
    3. ' def' → logprob: -2.0388760566711426
    4. ' can' → logprob: -3.2888760566711426
    5. ' have' → logprob: -3.6638760566711426
    6. 'def' → logprob: -4.288876056671143
    7. ' try' → logprob: -4.538876056671143
    8. '
' → logprob: -4.913876056671143
    9. '    ' → logprob: -4.913876056671143
    10. '       ' → logprob: -5.038876056671143

Token 1004: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3496314287185669
    2. 'to' → logprob: -1.224631428718567
    3. 'def' → logprob: -7.474631309509277
    4. '   ' → logprob: -8.849631309509277
    5. 'vx' → logprob: -9.099631309509277
    6. 'the' → logprob: -10.224631309509277
    7. ' minimal' → logprob: -10.349631309509277
    8. '
' → logprob: -10.349631309509277
    9. 'a' → logprob: -10.474631309509277
    10. ' vx' → logprob: -10.599631309509277

Token 1005: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.09196234494447708
    2. 'min' → logprob: -3.3419623374938965
    3. ' find' → logprob: -3.7169623374938965
    4. 'det' → logprob: -4.2169623374938965
    5. 'check' → logprob: -4.8419623374938965
    6. 'try' → logprob: -6.0919623374938965
    7. 'return' → logprob: -6.7169623374938965
    8. ' check' → logprob: -7.4669623374938965
    9. 'solve' → logprob: -8.216962814331055
    10. 'see' → logprob: -8.466962814331055

Token 1006: ' if' (ID: 538)
  Prédit: ' vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vx' → logprob: -1.094910740852356
    2. 'vx' → logprob: -1.094910740852356
    3. ' a' → logprob: -2.2199106216430664
    4. ' if' → logprob: -2.8449106216430664
    5. 'if' → logprob: -2.9699106216430664
    6. 'a' → logprob: -4.094910621643066
    7. 'vy' → logprob: -4.219910621643066
    8. 'initial' → logprob: -4.344910621643066
    9. ' initial' → logprob: -4.469910621643066
    10. ' vy' → logprob: -4.594910621643066

Token 1007: ' exists' (ID: 13031)
  Prédit: ' there'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' there' → logprob: -0.487185001373291
    2. 'there' → logprob: -1.112185001373291
    3. 'exists' → logprob: -3.987185001373291
    4. ' exists' → logprob: -4.112185001373291
    5. ' any' → logprob: -5.362185001373291
    6. 'any' → logprob: -5.487185001373291
    7. 'vx' → logprob: -6.487185001373291
    8. 'initial' → logprob: -6.487185001373291
    9. ' the' → logprob: -6.612185001373291
    10. ' initial' → logprob: -6.862185001373291

Token 1008: ' (' (ID: 350)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.6080470681190491
    2. ' vx' → logprob: -1.2330470085144043
    3. 'vy' → logprob: -2.8580470085144043
    4. ' a' → logprob: -3.4830470085144043
    5. ' vy' → logprob: -3.6080470085144043
    6. 'a' → logprob: -4.233047008514404
    7. 'v' → logprob: -4.233047008514404
    8. 'theta' → logprob: -5.483047008514404
    9. ' an' → logprob: -6.108047008514404
    10. '(v' → logprob: -6.608047008514404

Token 1009: 'vx' (ID: 96015)
  Prédit: 'vx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.15203607082366943
    2. ' vx' → logprob: -2.277036190032959
    3. 'vy' → logprob: -4.402036190032959
    4. 'v' → logprob: -4.777036190032959
    5. ')' → logprob: -4.902036190032959
    6. 'theta' → logprob: -5.527036190032959
    7. ' vy' → logprob: -6.527036190032959
    8. '(v' → logprob: -6.652036190032959
    9. 'angle' → logprob: -7.277036190032959
    10. 'a' → logprob: -7.652036190032959

Token 1010: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009618389885872602
    2. ' ,' → logprob: -7.875961780548096
    3. ',v' → logprob: -8.375962257385254
    4. ')' → logprob: -8.500962257385254
    5. ',
' → logprob: -9.750962257385254
    6. 'import' → logprob: -11.250962257385254
    7. '=' → logprob: -11.500962257385254
    8. '<|end|>' → logprob: -11.500962257385254
    9. ',float' → logprob: -11.875962257385254
    10. ':' → logprob: -12.375962257385254

Token 1011: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.1797674298286438
    2. ' vy' → logprob: -1.804767370223999
    3. 'Vy' → logprob: -12.304767608642578
    4. ')' → logprob: -12.679767608642578
    5. ' ' → logprob: -12.804767608642578
    6. ' ' → logprob: -13.304767608642578
    7. 'v' → logprob: -13.804767608642578
    8. ' Vy' → logprob: -13.929767608642578
    9. 'vx' → logprob: -14.054767608642578
    10. ',' → logprob: -14.304767608642578

Token 1012: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6519175171852112
    2. ')' → logprob: -0.7769175171852112
    3. ' )' → logprob: -4.026917457580566
    4. ' ,' → logprob: -6.901917457580566
    5. ',
' → logprob: -9.526917457580566
    6. '
' → logprob: -9.901917457580566
    7. ' ' → logprob: -10.651917457580566
    8. '),' → logprob: -10.901917457580566
    9. ' such' → logprob: -11.151917457580566
    10. ',)' → logprob: -11.151917457580566

Token 1013: ' with' (ID: 483)
  Prédit: ' such'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' such' → logprob: -0.1925678700208664
    2. '<|end|>' → logprob: -2.192567825317383
    3. ',' → logprob: -3.817567825317383
    4. ' with' → logprob: -3.942567825317383
    5. ':' → logprob: -4.692567825317383
    6. ' that' → logprob: -5.692567825317383
    7. ' ' → logprob: -6.192567825317383
    8. ' so' → logprob: -6.817567825317383
    9. ' 
' → logprob: -6.942567825317383
    10. ' =' → logprob: -7.067567825317383

Token 1014: ' sqrt' (ID: 44237)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.1251218467950821
    2. '0' → logprob: -2.500121831893921
    3. 'vy' → logprob: -4.0001220703125
    4. 'v' → logprob: -5.0001220703125
    5. ' vx' → logprob: -5.1251220703125
    6. '   ' → logprob: -6.8751220703125
    7. 'math' → logprob: -7.1251220703125
    8. '(v' → logprob: -7.7501220703125
    9. 'self' → logprob: -8.2501220703125
    10. 'abs' → logprob: -8.2501220703125

Token 1015: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.3975144028663635
    2. '(' → logprob: -1.6475143432617188
    3. '((' → logprob: -3.5225143432617188
    4. 'vx' → logprob: -3.5225143432617188
    5. '(initial' → logprob: -3.6475143432617188
    6. '{' → logprob: -4.022514343261719
    7. 'v' → logprob: -4.772514343261719
    8. 'initial' → logprob: -4.897514343261719
    9. '2' → logprob: -5.772514343261719
    10. '```' → logprob: -5.897514343261719

Token 1016: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -8.256334695033729e-05
    2. '_x' → logprob: -10.125082969665527
    3. ')' → logprob: -11.125082969665527
    4. '_' → logprob: -11.375082969665527
    5. '```' → logprob: -12.500082969665527
    6. '
' → logprob: -13.625082969665527
    7. ')x' → logprob: -13.750082969665527
    8. '   ' → logprob: -14.125082969665527
    9. '(x' → logprob: -14.125082969665527
    10. '**' → logprob: -14.250082969665527

Token 1017: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2960298955440521
    2. ' **' → logprob: -1.5460299253463745
    3. '2' → logprob: -3.421029806137085
    4. '<|end|>' → logprob: -5.671030044555664
    5. '^' → logprob: -5.796030044555664
    6. '²' → logprob: -6.546030044555664
    7. '<|end|>' → logprob: -6.921030044555664
    8. ' ' → logprob: -8.046030044555664
    9. ')' → logprob: -8.171030044555664
    10. '*' → logprob: -8.421030044555664

Token 1018: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.664371848164592e-05
    2. ' ' → logprob: -11.250016212463379
    3. '²' → logprob: -13.250016212463379
    4. ')' → logprob: -14.250016212463379
    5. '**' → logprob: -14.875016212463379
    6. '```' → logprob: -15.375016212463379
    7. '
' → logprob: -15.625016212463379
    8. '=' → logprob: -16.250017166137695
    9. '^' → logprob: -16.250017166137695
    10. '_' → logprob: -17.000017166137695

Token 1019: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4741147756576538
    2. ' +' → logprob: -0.9741147756576538
    3. ' plus' → logprob: -11.349114418029785
    4. '+y' → logprob: -12.599114418029785
    5. '```' → logprob: -13.224114418029785
    6. ')+' → logprob: -13.536614418029785
    7. '2' → logprob: -13.661614418029785
    8. ' ' → logprob: -13.786614418029785
    9. '+x' → logprob: -13.849114418029785
    10. '+b' → logprob: -13.849114418029785

Token 1020: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.0018554616253823042
    2. 'vx' → logprob: -7.001855373382568
    3. '(v' → logprob: -7.751855373382568
    4. ' vy' → logprob: -8.126855850219727
    5. '2' → logprob: -9.501855850219727
    6. '(' → logprob: -10.001855850219727
    7. 'initial' → logprob: -11.001855850219727
    8. '   ' → logprob: -11.251855850219727
    9. 'v' → logprob: -11.501855850219727
    10. ' (' → logprob: -11.626855850219727

Token 1021: '^' (ID: 61)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05128443241119385
    2. ')' → logprob: -3.5512843132019043
    3. '**' → logprob: -4.051284313201904
    4. ' **' → logprob: -6.676284313201904
    5. ' ' → logprob: -6.801284313201904
    6. '^' → logprob: -7.676284313201904
    7. ' )' → logprob: -7.801284313201904
    8. '²' → logprob: -8.051284790039062
    9. '```' → logprob: -9.301284790039062
    10. '<|end|>' → logprob: -9.551284790039062

Token 1022: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.190178904333152e-05
    2. ' ' → logprob: -11.000031471252441
    3. ')' → logprob: -11.875031471252441
    4. '²' → logprob: -13.250031471252441
    5. '**' → logprob: -13.625031471252441
    6. '```' → logprob: -13.750031471252441
    7. '{' → logprob: -14.125031471252441
    8. '(' → logprob: -14.437531471252441
    9. '
' → logprob: -14.750031471252441
    10. '=' → logprob: -14.750031471252441

Token 1023: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010098149999976158
    2. ')<=' → logprob: -4.635097980499268
    3. ' <=' → logprob: -8.510098457336426
    4. '<=' → logprob: -9.760098457336426
    5. ' )' → logprob: -10.010098457336426
    6. ')
' → logprob: -11.760098457336426
    7. ')==' → logprob: -11.885098457336426
    8. ')<' → logprob: -11.885098457336426
    9. ']<=' → logprob: -12.635098457336426
    10. ')=' → logprob: -13.135098457336426

Token 1024: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.02837185189127922
    2. '<=' → logprob: -3.653371810913086
    3. ')' → logprob: -6.903371810913086
    4. ')<=' → logprob: -8.028371810913086
    5. ' ==' → logprob: -8.653371810913086
    6. '=' → logprob: -8.653371810913086
    7. ' =' → logprob: -8.778371810913086
    8. ' ≤' → logprob: -10.153371810913086
    9. '==' → logprob: -10.278371810913086
    10. ' <' → logprob: -10.528371810913086

Token 1025: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.0788937583565712
    2. ' initial' → logprob: -2.5788936614990234
    3. '(initial' → logprob: -12.953893661499023
    4. '
' → logprob: -14.578893661499023
    5. '	initial' → logprob: -14.578893661499023
    6. '_initial' → logprob: -15.453893661499023
    7. '```' → logprob: -15.703893661499023
    8. 'Initial' → logprob: -16.703893661499023
    9. '   ' → logprob: -16.953893661499023
    10. '.initial' → logprob: -17.203893661499023

Token 1026: '_speed' (ID: 43208)
  Prédit: '_speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -3.750436007976532e-05
    2. '_' → logprob: -10.37503719329834
    3. 'speed' → logprob: -12.75003719329834
    4. '_s' → logprob: -13.37503719329834
    5. ' _' → logprob: -14.00003719329834
    6. '```' → logprob: -14.62503719329834
    7. 'Speed' → logprob: -16.500038146972656
    8. '_space' → logprob: -16.625038146972656
    9. '_SPEED' → logprob: -16.625038146972656
    10. '\' → logprob: -17.000038146972656

Token 1027: ' with' (ID: 483)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7805736660957336
    2. ':' → logprob: -1.2805736064910889
    3. ' and' → logprob: -1.5305736064910889
    4. ' ,' → logprob: -4.655573844909668
    5. ':
' → logprob: -4.905573844909668
    6. ' that' → logprob: -5.405573844909668
    7. ' to' → logprob: -5.530573844909668
    8. ' with' → logprob: -5.655573844909668
    9. ' such' → logprob: -5.780573844909668
    10. ' :' → logprob: -5.905573844909668

Token 1028: '
' (ID: 198)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.32273536920547485
    2. 'vx' → logprob: -1.94773530960083
    3. ' vy' → logprob: -2.69773530960083
    4. 'y' → logprob: -4.57273530960083
    5. ' vx' → logprob: -5.07273530960083
    6. 'Vy' → logprob: -5.07273530960083
    7. 'some' → logprob: -5.07273530960083
    8. '
' → logprob: -5.57273530960083
    9. 'v' → logprob: -5.69773530960083
    10. 'possible' → logprob: -5.94773530960083

Token 1029: '       ' (ID: 309)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -2.03004789352417
    2. ' y' → logprob: -2.15504789352417
    3. ' par' → logprob: -2.15504789352417
    4. ' the' → logprob: -2.28004789352417
    5. ' some' → logprob: -2.40504789352417
    6. '#' → logprob: -3.15504789352417
    7. ' vx' → logprob: -3.15504789352417
    8. 'x' → logprob: -3.40504789352417
    9. ' vy' → logprob: -3.78004789352417
    10. 'y' → logprob: -3.78004789352417

Token 1030: ' length' (ID: 5517)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.2809043824672699
    2. 'GR' → logprob: -2.7809042930603027
    3. 'x' → logprob: -3.2809042930603027
    4. 'vy' → logprob: -3.4059042930603027
    5. 'def' → logprob: -4.280904293060303
    6. ' vx' → logprob: -4.780904293060303
    7. ' l' → logprob: -4.780904293060303
    8. 'l' → logprob: -4.780904293060303
    9. 'initial' → logprob: -5.155904293060303
    10. 'the' → logprob: -5.280904293060303

Token 1031: ' =' (ID: 314)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8381553292274475
    2. '=' → logprob: -2.0881552696228027
    3. ' =' → logprob: -2.2131552696228027
    4. 'and' → logprob: -2.4631552696228027
    5. ' <=' → logprob: -2.8381552696228027
    6. ',' → logprob: -2.9631552696228027
    7. ')' → logprob: -3.5881552696228027
    8. '**' → logprob: -3.8381552696228027
    9. ':' → logprob: -4.088155269622803
    10. ' in' → logprob: -4.338155269622803

Token 1032: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01909269578754902
    2. ' ' → logprob: -4.144092559814453
    3. '(' → logprob: -5.894092559814453
    4. ' (' → logprob: -8.394092559814453
    5. 'vx' → logprob: -11.519092559814453
    6. '\' → logprob: -11.644092559814453
    7. '`' → logprob: -12.019092559814453
    8. '{' → logprob: -12.019092559814453
    9. ' vx' → logprob: -12.144092559814453
    10. 'x' → logprob: -12.144092559814453

Token 1033: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00817185826599598
    2. '(' → logprob: -5.008172035217285
    3. ' ' → logprob: -7.383172035217285
    4. 'l' → logprob: -7.883172035217285
    5. 'x' → logprob: -8.883172035217285
    6. ' (' → logprob: -9.133172035217285
    7. 'self' → logprob: -9.383172035217285
    8. 'length' → logprob: -10.633172035217285
    9. 'vx' → logprob: -10.633172035217285
    10. 'float' → logprob: -11.633172035217285

Token 1034: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.018192199990153313
    2. '*' → logprob: -4.018192291259766
    3. '*object' → logprob: -11.143192291259766
    4. '*self' → logprob: -11.518192291259766
    5. '<|end|>' → logprob: -12.393192291259766
    6. '<|end|>' → logprob: -12.643192291259766
    7. ' ' → logprob: -12.768192291259766
    8. '.' → logprob: -13.705692291259766
    9. ',' → logprob: -14.080692291259766
    10. ' ' → logprob: -14.518192291259766

Token 1035: ' vx' (ID: 93588)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.024651357904076576
    2. ' vx' → logprob: -3.899651288986206
    3. 'v' → logprob: -6.024651527404785
    4. '(v' → logprob: -6.899651527404785
    5. 'vy' → logprob: -8.024651527404785
    6. '(' → logprob: -9.399651527404785
    7. '   ' → logprob: -9.649651527404785
    8. ' (' → logprob: -10.024651527404785
    9. 'vz' → logprob: -10.399651527404785
    10. ' vy' → logprob: -10.649651527404785

Token 1036: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20159441232681274
    2. '*' → logprob: -1.701594352722168
    3. '<|end|>' → logprob: -9.451594352722168
    4. '```' → logprob: -10.701594352722168
    5. '<|end|>' → logprob: -10.951594352722168
    6. ',' → logprob: -11.201594352722168
    7. ' ' → logprob: -11.701594352722168
    8. '   ' → logprob: -12.076594352722168
    9. 'vy' → logprob: -12.451594352722168
    10. '*object' → logprob: -12.889094352722168

Token 1037: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.0433669351041317
    2. ' vy' → logprob: -3.1683669090270996
    3. 'initial' → logprob: -9.168367385864258
    4. '   ' → logprob: -9.918367385864258
    5. ' initial' → logprob: -10.480867385864258
    6. ' (' → logprob: -10.543367385864258
    7. '(' → logprob: -10.730867385864258
    8. ' ' → logprob: -10.730867385864258
    9. '(v' → logprob: -10.980867385864258
    10. '
' → logprob: -11.543367385864258

Token 1038: ',' (ID: 11)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.2040562480688095
    2. '/' → logprob: -1.7040562629699707
    3. '**' → logprob: -7.204056262969971
    4. '       ' → logprob: -7.704056262969971
    5. ' /
' → logprob: -8.079055786132812
    6. ')' → logprob: -8.329055786132812
    7. '/(' → logprob: -8.704055786132812
    8. '   ' → logprob: -8.829055786132812
    9. ' and' → logprob: -9.579055786132812
    10. ',' → logprob: -9.579055786132812

Token 1039: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8104206323623657
    2. '       ' → logprob: -0.9354206323623657
    3. ' with' → logprob: -3.185420513153076
    4. 'and' → logprob: -3.185420513153076
    5. ' \' → logprob: -4.810420513153076
    6. '\n' → logprob: -4.810420513153076
    7. ' so' → logprob: -4.935420513153076
    8. ' ' → logprob: -5.310420513153076
    9. 'with' → logprob: -5.560420513153076
    10. 'x' → logprob: -5.560420513153076

Token 1040: ' all' (ID: 722)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vy' → logprob: -1.0496090650558472
    2. '0' → logprob: -1.2996090650558472
    3. ' vy' → logprob: -1.4246090650558472
    4. ' ' → logprob: -2.5496091842651367
    5. ' vx' → logprob: -3.9246091842651367
    6. 'vx' → logprob: -4.299609184265137
    7. ' self' → logprob: -5.799609184265137
    8. '   ' → logprob: -6.049609184265137
    9. '       ' → logprob: -6.549609184265137
    10. ' initial' → logprob: -6.549609184265137

Token 1041: ' obstacles' (ID: 46430)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.19975139200687408
    2. 'trajectory' → logprob: -2.949751377105713
    3. 'h' → logprob: -3.449751377105713
    4. 'tra' → logprob: -4.699751377105713
    5. ' trajectory' → logprob: -4.699751377105713
    6. ' obstacles' → logprob: -4.824751377105713
    7. 'height' → logprob: -4.824751377105713
    8. 'he' → logprob: -4.824751377105713
    9. 'par' → logprob: -5.074751377105713
    10. 'clear' → logprob: -5.199751377105713

Token 1042: ' are' (ID: 553)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9323944449424744
    2. ' are' → logprob: -0.9323944449424744
    3. '<|end|>' → logprob: -2.432394504547119
    4. 'in' → logprob: -3.557394504547119
    5. ' at' → logprob: -4.057394504547119
    6. 'are' → logprob: -4.557394504547119
    7. 'avo' → logprob: -5.057394504547119
    8. ' have' → logprob: -5.432394504547119
    9. ',' → logprob: -5.557394504547119
    10. '.' → logprob: -5.682394504547119

Token 1043: ' cleared' (ID: 42261)
  Prédit: 'cle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.09523754566907883
    2. 'clear' → logprob: -2.5952374935150146
    3. ' cleared' → logprob: -4.720237731933594
    4. ' clear' → logprob: -6.345237731933594
    5. 'avo' → logprob: -6.595237731933594
    6. 'above' → logprob: -6.595237731933594
    7. 'below' → logprob: -7.595237731933594
    8. '_clear' → logprob: -8.595237731933594
    9. 'passed' → logprob: -8.720237731933594
    10. 'height' → logprob: -8.970237731933594

Token 1044: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22854448854923248
    2. ' by' → logprob: -2.1035444736480713
    3. '       ' → logprob: -2.8535444736480713
    4. ',' → logprob: -4.47854471206665
    5. ':' → logprob: -4.97854471206665
    6. ' with' → logprob: -6.10354471206665
    7. 'by' → logprob: -7.22854471206665
    8. '   ' → logprob: -7.35354471206665
    9. '<|end|>' → logprob: -7.47854471206665
    10. '.
' → logprob: -7.60354471206665

Token 1045: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3046785593032837
    2. '\n' → logprob: -2.054678440093994
    3. ' 
' → logprob: -3.054678440093994
    4. '        
' → logprob: -3.929678440093994
    5. ':' → logprob: -4.054678440093994
    6. '
' → logprob: -4.429678440093994
    7. '   ' → logprob: -4.804678440093994
    8. '    
' → logprob: -4.804678440093994
    9. '\' → logprob: -5.429678440093994
    10. '<|end|>' → logprob: -5.929678440093994

Token 1046: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01738007739186287
    2. '\n' → logprob: -5.392380237579346
    3. ' 
' → logprob: -5.392380237579346
    4. '\' → logprob: -5.892380237579346
    5. '        
' → logprob: -6.392380237579346
    6. '
' → logprob: -7.142380237579346
    7. '   ' → logprob: -7.267380237579346
    8. '    
' → logprob: -8.017379760742188
    9. '):
' → logprob: -8.267379760742188
    10. '    ' → logprob: -8.517379760742188

Token 1047: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019418589770793915
    2. '        
' → logprob: -4.519418716430664
    3. ' 
' → logprob: -5.019418716430664
    4. '    
' → logprob: -7.769418716430664
    5. '    ' → logprob: -8.394418716430664
    6. '     
' → logprob: -8.519418716430664
    7. '   ' → logprob: -8.644418716430664
    8. ' ' → logprob: -8.894418716430664
    9. '\x' → logprob: -9.144418716430664
    10. '         
' → logprob: -9.519418716430664

Token 1048: ' #' (ID: 1069)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.3672177791595459
    2. ' low' → logprob: -2.492217779159546
    3. '       ' → logprob: -2.992217779159546
    4. '#' (adapté à ' #') → logprob: -2.992217779159546
    5. 'v' → logprob: -3.242217779159546
    6. 'vx' → logprob: -3.492217779159546
    7. 'left' → logprob: -4.492218017578125
    8. 'def' → logprob: -4.867218017578125
    9. 'lo' → logprob: -4.992218017578125
    10. ' vx' → logprob: -5.117218017578125

Token 1049: ' Let' (ID: 9024)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.33778849244117737
    2. 'def' → logprob: -2.7127885818481445
    3. '#' → logprob: -2.8377885818481445
    4. 'left' → logprob: -3.2127885818481445
    5. 'if' → logprob: -3.4627885818481445
    6. ' low' → logprob: -3.5877885818481445
    7. 'vx' → logprob: -4.3377885818481445
    8. 'v' → logprob: -4.3377885818481445
    9. 'lower' → logprob: -4.5877885818481445
    10. 'lo' → logprob: -4.7127885818481445

Token 1050: ' the' (ID: 290)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.7557510733604431
    2. 'low' → logprob: -0.8807510733604431
    3. 'v' → logprob: -3.255751132965088
    4. 'g' → logprob: -3.380751132965088
    5. 'def' → logprob: -4.505751132965088
    6. 'left' → logprob: -4.505751132965088
    7. 'vy' → logprob: -4.630751132965088
    8. '#' → logprob: -5.755751132965088
    9. ' low' → logprob: -6.130751132965088
    10. '   ' → logprob: -6.630751132965088

Token 1051: ' parab' (ID: 101123)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.34634116291999817
    2. 'vx' → logprob: -2.096341133117676
    3. 'left' → logprob: -2.971341133117676
    4. 'v' → logprob: -3.346341133117676
    5. 'vy' → logprob: -3.471341133117676
    6. 'g' → logprob: -3.471341133117676
    7. '#' → logprob: -5.346341133117676
    8. 'def' → logprob: -5.346341133117676
    9. 'lower' → logprob: -5.471341133117676
    10. 'lo' → logprob: -6.221341133117676

Token 1052: 'ola' (ID: 5204)
  Prédit: 'ola'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ola' → logprob: -0.0009082449832931161
    2. 'ol' → logprob: -8.125907897949219
    3. ')' → logprob: -8.875907897949219
    4. '       ' → logprob: -9.000907897949219
    5. '   ' → logprob: -10.125907897949219
    6. 'bola' → logprob: -10.375907897949219
    7. 'e' → logprob: -10.625907897949219
    8. '           ' → logprob: -10.750907897949219
    9. '(
' → logprob: -10.875907897949219
    10. '}' → logprob: -11.000907897949219

Token 1053: ' parameters' (ID: 9621)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.6536272168159485
    2. 'be' → logprob: -1.1536271572113037
    3. 'start' → logprob: -3.9036271572113037
    4. 'l' → logprob: -3.9036271572113037
    5. ' =' → logprob: -4.028627395629883
    6. 'equ' → logprob: -4.278627395629883
    7. '=' → logprob: -4.528627395629883
    8. 's' → logprob: -4.653627395629883
    9. 'have' → logprob: -4.903627395629883
    10. ' equation' → logprob: -4.903627395629883

Token 1054: ' vx' (ID: 93588)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.29982393980026245
    2. '=' → logprob: -2.6748239994049072
    3. 'be' → logprob: -3.2998239994049072
    4. ' =' → logprob: -3.6748239994049072
    5. '       ' → logprob: -4.049823760986328
    6. ':' → logprob: -4.049823760986328
    7. '#' → logprob: -4.424823760986328
    8. 'v' → logprob: -4.799823760986328
    9. 's' → logprob: -4.799823760986328
    10. 'import' → logprob: -5.049823760986328

Token 1055: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4403494596481323
    2. ' =' → logprob: -1.9403494596481323
    3. ' and' → logprob: -2.440349578857422
    4. '=' → logprob: -2.440349578857422
    5. 'and' → logprob: -4.190349578857422
    6. '<|end|>' → logprob: -4.440349578857422
    7. 'import' → logprob: -5.440349578857422
    8. ':' → logprob: -6.690349578857422
    9. ' be' → logprob: -7.065349578857422
    10. '<|end|>' → logprob: -7.190349578857422

Token 1056: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.023721272125840187
    2. ' vy' → logprob: -3.773721218109131
    3. '   ' → logprob: -8.398721694946289
    4. ' ' → logprob: -9.773721694946289
    5. '       ' → logprob: -10.398721694946289
    6. '  ' → logprob: -10.648721694946289
    7. '    ' → logprob: -11.273721694946289
    8. '     ' → logprob: -11.398721694946289
    9. '```' → logprob: -11.461221694946289
    10. '0' → logprob: -11.648721694946289

Token 1057: ' >=' (ID: 5064)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.8196187615394592
    2. ' =' → logprob: -1.0696187019348145
    3. ':' → logprob: -2.1946187019348145
    4. ',' → logprob: -2.9446187019348145
    5. '=' → logprob: -3.5696187019348145
    6. ' have' → logprob: -5.5696187019348145
    7. ' range' → logprob: -5.8196187019348145
    8. ' such' → logprob: -6.0696187019348145
    9. '.' → logprob: -6.3196187019348145
    10. ' try' → logprob: -6.3196187019348145

Token 1058: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036580299492925406
    2. ' ' → logprob: -6.003657817840576
    3. '1' → logprob: -6.753657817840576
    4. 'v' → logprob: -12.753658294677734
    5. 'self' → logprob: -12.878658294677734
    6. 'math' → logprob: -13.253658294677734
    7. 'GR' → logprob: -13.816158294677734
    8. 'epsilon' → logprob: -14.066158294677734
    9. ' math' → logprob: -14.378658294677734
    10. '```' → logprob: -14.378658294677734

Token 1059: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017521760892122984
    2. '1' → logprob: -6.3767523765563965
    3. ' ' → logprob: -10.251751899719238
    4. 'math' → logprob: -11.876751899719238
    5. '-' → logprob: -13.376751899719238
    6. 'v' → logprob: -13.626751899719238
    7. 'epsilon' → logprob: -13.876751899719238
    8. '```' → logprob: -14.376751899719238
    9. 'float' → logprob: -14.626751899719238
    10. 'eps' → logprob: -14.626751899719238

Token 1060: ' satisfy' (ID: 35441)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42332449555397034
    2. '<|end|>' → logprob: -2.1733245849609375
    3. '       ' → logprob: -2.6733245849609375
    4. ':' → logprob: -2.7983245849609375
    5. '
' → logprob: -2.9233245849609375
    6. '.' → logprob: -4.0483245849609375
    7. '<|end|>' → logprob: -4.2983245849609375
    8. ',
' → logprob: -5.1733245849609375
    9. ':
' → logprob: -6.0483245849609375
    10. ' and' → logprob: -6.7983245849609375

Token 1061: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.6937518119812012
    2. ' vx' → logprob: -1.6937518119812012
    3. 'v' → logprob: -2.193751811981201
    4. 'x' → logprob: -2.943751811981201
    5. '<|end|>' → logprob: -3.068751811981201
    6. 'vx' → logprob: -3.068751811981201
    7. ' v' → logprob: -3.568751811981201
    8. '(v' → logprob: -3.568751811981201
    9. ' vy' → logprob: -3.693751811981201
    10. ' the' → logprob: -3.943751811981201

Token 1062: '2' (ID: 17)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.5607674717903137
    2. 'vx' → logprob: -1.060767412185669
    3. 'length' → logprob: -2.935767412185669
    4. '2' → logprob: -4.560767650604248
    5. 'self' → logprob: -5.560767650604248
    6. '(v' → logprob: -5.685767650604248
    7. ' vy' → logprob: -6.060767650604248
    8. 'abs' → logprob: -6.185767650604248
    9. ' vx' → logprob: -6.435767650604248
    10. '   ' → logprob: -6.435767650604248

Token 1063: ' vx' (ID: 93588)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.42879632115364075
    2. '*' → logprob: -1.0537962913513184
    3. '*v' → logprob: -9.928796768188477
    4. '*self' → logprob: -11.428796768188477
    5. 'vx' → logprob: -12.178796768188477
    6. '.' → logprob: -12.303796768188477
    7. ' ' → logprob: -12.303796768188477
    8. ' ' → logprob: -12.678796768188477
    9. '*object' → logprob: -12.803796768188477
    10. ',' → logprob: -13.053796768188477

Token 1064: ' vy' (ID: 14190)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6326184272766113
    2. '*' → logprob: -0.7576184272766113
    3. ' ' → logprob: -12.257617950439453
    4. '<|end|>' → logprob: -12.632617950439453
    5. '*y' → logprob: -12.882617950439453
    6. ' vy' → logprob: -13.507617950439453
    7. '```' → logprob: -13.632617950439453
    8. '*v' → logprob: -14.132617950439453
    9. 'vy' → logprob: -14.507617950439453
    10. '   ' → logprob: -14.507617950439453

Token 1065: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48726922273635864
    2. ' =' → logprob: -1.2372691631317139
    3. ' ==' → logprob: -3.362269163131714
    4. ' >=' → logprob: -3.737269163131714
    5. '==' → logprob: -4.112269401550293
    6. '>=' → logprob: -4.112269401550293
    7. ' <=' → logprob: -5.737269401550293
    8. '<=' → logprob: -6.987269401550293
    9. '/' → logprob: -10.237269401550293
    10. ' /' → logprob: -10.487269401550293

Token 1066: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.005929743405431509
    2. ' length' → logprob: -5.130929946899414
    3. 'float' → logprob: -14.255929946899414
    4. 'len' → logprob: -16.630929946899414
    5. 'leng' → logprob: -16.630929946899414
    6. '`' → logprob: -16.880929946899414
    7. '[length' → logprob: -16.880929946899414
    8. '   ' → logprob: -17.005929946899414
    9. 'l' → logprob: -17.255929946899414
    10. '(length' → logprob: -17.380929946899414

Token 1067: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1216095685958862
    2. '       ' → logprob: -1.3716095685958862
    3. '
' → logprob: -1.4966095685958862
    4. '<|end|>' → logprob: -2.621609687805176
    5. '.' → logprob: -2.996609687805176
    6. '<|end|>' → logprob: -3.621609687805176
    7. '        
' → logprob: -4.246609687805176
    8. '\n' → logprob: -4.871609687805176
    9. ' and' → logprob: -5.371609687805176
    10. ':' → logprob: -5.496609687805176

Token 1068: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3556787967681885
    2. ' 
' → logprob: -1.7306787967681885
    3. '\x' → logprob: -3.3556787967681885
    4. '\n' → logprob: -3.7306787967681885
    5. '        
' → logprob: -3.8556787967681885
    6. '        ' → logprob: -4.730678558349609
    7. 'v' → logprob: -5.355678558349609
    8. ' \' → logprob: -5.480678558349609
    9. ' ' → logprob: -5.605678558349609
    10. '\' → logprob: -5.605678558349609

Token 1069: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017049530521035194
    2. ' 
' → logprob: -5.017049312591553
    3. '
' → logprob: -6.267049312591553
    4. '\n' → logprob: -6.517049312591553
    5. 'n' → logprob: -6.642049312591553
    6. '\x' → logprob: -6.767049312591553
    7. '        
' → logprob: -7.017049312591553
    8. ' \' → logprob: -7.517049312591553
    9. ' ' → logprob: -7.767049312591553
    10. 'v' → logprob: -7.892049312591553

Token 1070: ' Also' (ID: 8820)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02445909008383751
    2. ' ' → logprob: -4.774458885192871
    3. '
' → logprob: -5.274458885192871
    4. ' for' → logprob: -6.524458885192871
    5. ' #' → logprob: -7.024458885192871
    6. '        ' → logprob: -7.149458885192871
    7. ' v' → logprob: -7.274458885192871
    8. ' if' → logprob: -7.274458885192871
    9. ' 
' → logprob: -7.274458885192871
    10. 'v' → logprob: -7.274458885192871

Token 1071: ' vx' (ID: 93588)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9293520450592041
    2. ' vx' → logprob: -1.679352045059204
    3. ' vy' → logprob: -1.804352045059204
    4. 'vy' → logprob: -2.179352045059204
    5. 'vx' → logprob: -3.054352045059204
    6. ' we' → logprob: -4.179351806640625
    7. '
' → logprob: -4.304351806640625
    8. 'we' → logprob: -4.804351806640625
    9. ' assume' → logprob: -4.804351806640625
    10. ' if' → logprob: -5.054351806640625

Token 1072: '^' (ID: 61)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.9675902128219604
    2. ',' → logprob: -1.0925902128219604
    3. '>' → logprob: -1.9675902128219604
    4. ' <=' → logprob: -2.71759033203125
    5. ' >=' → logprob: -2.96759033203125
    6. '>=' → logprob: -5.21759033203125
    7. '**' → logprob: -5.34259033203125
    8. ' *' → logprob: -5.84259033203125
    9. ' +' → logprob: -5.96759033203125
    10. '<=' → logprob: -6.09259033203125

Token 1073: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0032593535725027323
    2. ' ' → logprob: -5.753259181976318
    3. '**' → logprob: -10.503259658813477
    4. '=' → logprob: -11.003259658813477
    5. ',' → logprob: -11.378259658813477
    6. '
' → logprob: -12.003259658813477
    7. ')' → logprob: -12.753259658813477
    8. ' **' → logprob: -12.753259658813477
    9. ' =' → logprob: -13.628259658813477
    10. '0' → logprob: -13.878259658813477

Token 1074: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1857319325208664
    2. '+' → logprob: -1.8107318878173828
    3. ' <=' → logprob: -6.185731887817383
    4. ' *' → logprob: -6.310731887817383
    5. '*' → logprob: -6.685731887817383
    6. '<=' → logprob: -7.310731887817383
    7. ',' → logprob: -10.435731887817383
    8. '```' → logprob: -10.935731887817383
    9. '=' → logprob: -11.310731887817383
    10. '>=' → logprob: -11.435731887817383

Token 1075: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.0006204616511240602
    2. ' vy' → logprob: -7.500620365142822
    3. '   ' → logprob: -10.00062084197998
    4. '2' → logprob: -11.25062084197998
    5. ' ' → logprob: -12.87562084197998
    6. '  ' → logprob: -13.50062084197998
    7. 'Vy' → logprob: -14.00062084197998
    8. '
' → logprob: -14.50062084197998
    9. 'vx' → logprob: -14.50062084197998
    10. '```' → logprob: -14.62562084197998

Token 1076: '^' (ID: 61)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.28601524233818054
    2. '<=' → logprob: -1.661015272140503
    3. '**' → logprob: -3.036015272140503
    4. '2' → logprob: -5.036015033721924
    5. ' **' → logprob: -6.536015033721924
    6. '=' → logprob: -6.786015033721924
    7. ' =' → logprob: -7.286015033721924
    8. '```' → logprob: -8.536015510559082
    9. '^' → logprob: -8.911015510559082
    10. ' >=' → logprob: -9.036015510559082

Token 1077: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00013440960901789367
    2. ' ' → logprob: -9.000134468078613
    3. '**' → logprob: -11.875134468078613
    4. '²' → logprob: -13.750134468078613
    5. '
' → logprob: -14.500134468078613
    6. '{' → logprob: -14.750134468078613
    7. '```' → logprob: -15.000134468078613
    8. '   ' → logprob: -15.125134468078613
    9. '  ' → logprob: -15.250134468078613
    10. '<|end|>' → logprob: -15.500134468078613

Token 1078: ' <=' (ID: 5017)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.48116806149482727
    2. ' <=' → logprob: -0.9811680316925049
    3. '>=' → logprob: -5.356168270111084
    4. '<=' → logprob: -6.856168270111084
    5. ' =' → logprob: -7.981168270111084
    6. ' ==' → logprob: -7.981168270111084
    7. ' >' → logprob: -8.481167793273926
    8. ')' → logprob: -9.356167793273926
    9. '=' → logprob: -9.481167793273926
    10. '   ' → logprob: -9.606167793273926

Token 1079: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.009313415735960007
    2. ' initial' → logprob: -5.134313583374023
    3. '(initial' → logprob: -5.759313583374023
    4. '   ' → logprob: -8.634313583374023
    5. '	initial' → logprob: -10.259313583374023
    6. ' (' → logprob: -12.009313583374023
    7. '(' → logprob: -13.134313583374023
    8. ' ' → logprob: -13.634313583374023
    9. '  ' → logprob: -14.009313583374023
    10. '    ' → logprob: -14.884313583374023

Token 1080: '_speed' (ID: 43208)
  Prédit: '_speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -2.1888679839321412e-05
    2. 'speed' → logprob: -10.750021934509277
    3. 'Speed' → logprob: -15.250021934509277
    4. '\' → logprob: -17.50002098083496
    5. '_SPEED' → logprob: -17.50002098083496
    6. '_s' → logprob: -17.62502098083496
    7. '_' → logprob: -17.75002098083496
    8. '```' → logprob: -18.12502098083496
    9. ' speed' → logprob: -18.62502098083496
    10. '
' → logprob: -19.12502098083496

Token 1081: '^' (ID: 61)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.103515386581421
    2. ':
' → logprob: -1.353515386581421
    3. ':' → logprob: -2.103515386581421
    4. '.' → logprob: -2.103515386581421
    5. '.
' → logprob: -2.853515386581421
    6. '
' → logprob: -3.353515386581421
    7. ' and' → logprob: -3.853515386581421
    8. ',' → logprob: -3.853515386581421
    9. '   ' → logprob: -4.978515625
    10. ' with' → logprob: -5.728515625

Token 1082: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007158888038247824
    2. ' ' → logprob: -7.250715732574463
    3. '**' → logprob: -12.500716209411621
    4. '
' → logprob: -14.125716209411621
    5. '```' → logprob: -14.375716209411621
    6. ' **' → logprob: -16.000715255737305
    7. '   ' → logprob: -16.000715255737305
    8. '{' → logprob: -16.000715255737305
    9. '²' → logprob: -16.125715255737305
    10. '7' → logprob: -16.750715255737305

Token 1083: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05852226912975311
    2. '       ' → logprob: -3.4335222244262695
    3. '        
' → logprob: -5.1835222244262695
    4. '<|end|>' → logprob: -5.1835222244262695
    5. '
' → logprob: -5.3085222244262695
    6. ',' → logprob: -5.9335222244262695
    7. '\n' → logprob: -7.0585222244262695
    8. '    
' → logprob: -7.0585222244262695
    9. '<|end|>' → logprob: -7.1835222244262695
    10. '.' → logprob: -7.5585222244262695

Token 1084: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017709736712276936
    2. '   ' → logprob: -6.626770973205566
    3. '        
' → logprob: -8.376770973205566
    4. '    ' → logprob: -9.876770973205566
    5. '    
' → logprob: -10.376770973205566
    6. '	' → logprob: -10.751770973205566
    7. '```' → logprob: -11.376770973205566
    8. '\t' → logprob: -11.626770973205566
    9. '<|end|>' → logprob: -11.626770973205566
    10. '\x' → logprob: -11.751770973205566

Token 1085: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002126468578353524
    2. '
' → logprob: -6.627126693725586
    3. '        
' → logprob: -7.377126693725586
    4. 'v' → logprob: -10.752126693725586
    5. 'n' → logprob: -11.002126693725586
    6. ' 
' → logprob: -11.127126693725586
    7. '    
' → logprob: -11.252126693725586
    8. '	' → logprob: -11.377126693725586
    9. '   ' → logprob: -11.627126693725586
    10. '  
' → logprob: -12.002126693725586

Token 1086: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022777853533625603
    2. 'v' → logprob: -5.647778034210205
    3. ' v' → logprob: -6.022778034210205
    4. ' def' → logprob: -6.147778034210205
    5. 'def' → logprob: -6.522778034210205
    6. ' if' → logprob: -6.647778034210205
    7. ' for' → logprob: -6.647778034210205
    8. ' s' → logprob: -6.772778034210205
    9. 't' → logprob: -7.147778034210205
    10. ' #' → logprob: -7.272778034210205

Token 1087: ' given' (ID: 4335)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.5522758364677429
    2. ' vy' → logprob: -1.1772758960723877
    3. 'vx' → logprob: -2.3022758960723877
    4. ' vx' → logprob: -4.552275657653809
    5. 'v' → logprob: -5.802275657653809
    6. 'x' → logprob: -7.677275657653809
    7. 'i' → logprob: -8.552275657653809
    8. 'y' → logprob: -8.677275657653809
    9. ' v' → logprob: -8.802275657653809
    10. 'Vy' → logprob: -8.927275657653809

Token 1088: ' length' (ID: 5517)
  Prédit: ' vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vy' → logprob: -0.8145720958709717
    2. 'vy' → logprob: -1.6895720958709717
    3. ' vx' → logprob: -1.8145720958709717
    4. 'vx' → logprob: -1.9395720958709717
    5. 'length' → logprob: -3.4395720958709717
    6. ' length' → logprob: -3.9395720958709717
    7. ' l' → logprob: -5.814572334289551
    8. 'l' → logprob: -6.314572334289551
    9. ' x' → logprob: -6.314572334289551
    10. 'x' → logprob: -6.439572334289551

Token 1089: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03483567759394646
    2. ' and' → logprob: -4.4098358154296875
    3. 'and' → logprob: -4.6598358154296875
    4. '       ' → logprob: -5.4098358154296875
    5. ':' → logprob: -5.5348358154296875
    6. '   ' → logprob: -6.7848358154296875
    7. '=' → logprob: -7.1598358154296875
    8. ' =' → logprob: -7.7848358154296875
    9. '<|end|>' → logprob: -7.7848358154296875
    10. ' ,' → logprob: -7.9098358154296875

Token 1090: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.510654628276825
    2. 'vy' → logprob: -1.0106546878814697
    3. ' initial' → logprob: -4.135654449462891
    4. 'vx' → logprob: -5.010654449462891
    5. ' vy' → logprob: -5.510654449462891
    6. 'speed' → logprob: -5.885654449462891
    7. '#' → logprob: -6.260654449462891
    8. 'ob' → logprob: -6.635654449462891
    9. 'fixed' → logprob: -7.885654449462891
    10. 'max' → logprob: -8.38565444946289

Token 1091: '_speed' (ID: 43208)
  Prédit: '_speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -0.0004147032741457224
    2. '_' → logprob: -8.125414848327637
    3. 'speed' → logprob: -9.875414848327637
    4. '_velocity' → logprob: -10.375414848327637
    5. '_s' → logprob: -10.625414848327637
    6. ' _' → logprob: -12.500414848327637
    7. 'Speed' → logprob: -13.375414848327637
    8. '_SPEED' → logprob: -13.750414848327637
    9. ' speed' → logprob: -13.750414848327637
    10. '`' → logprob: -13.875414848327637

Token 1092: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011671315878629684
    2. ':' → logprob: -4.511671543121338
    3. ' ,' → logprob: -7.886671543121338
    4. ',
' → logprob: -8.88667106628418
    5. ' :' → logprob: -10.26167106628418
    6. ' we' → logprob: -10.38667106628418
    7. ':
' → logprob: -11.76167106628418
    8. ' (' → logprob: -12.38667106628418
    9. ',v' → logprob: -12.51167106628418
    10. '.' → logprob: -13.26167106628418

Token 1093: ' vx' (ID: 93588)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.049993872642517
    2. ' vx' → logprob: -1.424993872642517
    3. ' v' → logprob: -1.674993872642517
    4. ' if' → logprob: -3.0499939918518066
    5. ' for' → logprob: -3.1749939918518066
    6. ' def' → logprob: -3.6749939918518066
    7. 'v' → logprob: -3.9249939918518066
    8. ' import' → logprob: -4.424993991851807
    9. 'import' → logprob: -4.674993991851807
    10. ' y' → logprob: -4.799993991851807

Token 1094: ' must' (ID: 2804)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14079803228378296
    2. ',' → logprob: -2.6407980918884277
    3. '=' → logprob: -3.2657980918884277
    4. ' in' → logprob: -5.140798091888428
    5. '<|end|>' → logprob: -5.515798091888428
    6. '_range' → logprob: -6.140798091888428
    7. ' and' → logprob: -6.265798091888428
    8. ':' → logprob: -7.015798091888428
    9. ' ' → logprob: -7.015798091888428
    10. ' ranges' → logprob: -7.390798091888428

Token 1095: ' satisfy' (ID: 35441)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.1750271320343018
    2. ' be' → logprob: -1.4250271320343018
    3. ' range' → logprob: -1.9250271320343018
    4. '=' → logprob: -2.4250271320343018
    5. '<=' → logprob: -2.8000271320343018
    6. ' vary' → logprob: -3.0500271320343018
    7. '_range' → logprob: -3.1750271320343018
    8. ' in' → logprob: -4.300026893615723
    9. '>=' → logprob: -4.550026893615723
    10. 'in' → logprob: -4.675026893615723

Token 1096: ':
' (ID: 734)
  Prédit: ' vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vx' → logprob: -0.7079483866691589
    2. 'vx' → logprob: -1.3329484462738037
    3. 'vy' → logprob: -2.9579484462738037
    4. ' max' → logprob: -3.4579484462738037
    5. ' vy' → logprob: -3.5829484462738037
    6. '0' → logprob: -3.5829484462738037
    7. 'length' → logprob: -3.7079484462738037
    8. 'max' → logprob: -3.7079484462738037
    9. ' self' → logprob: -4.457948207855225
    10. '2' → logprob: -4.582948207855225

Token 1097: '       ' (ID: 309)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.9568051099777222
    2. ' x' → logprob: -1.3318051099777222
    3. ' def' → logprob: -2.5818052291870117
    4. ' vx' → logprob: -2.7068052291870117
    5. ' l' → logprob: -2.9568052291870117
    6. 'v' → logprob: -3.2068052291870117
    7. ' self' → logprob: -3.7068052291870117
    8. 'x' → logprob: -4.081805229187012
    9. '`' → logprob: -4.956805229187012
    10. ' 
' → logprob: -5.206805229187012

Token 1098: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.244672179222107
    2. ' x' → logprob: -1.244672179222107
    3. ' v' → logprob: -1.869672179222107
    4. ''' → logprob: -2.3696722984313965
    5. '"' → logprob: -3.1196722984313965
    6. ' self' → logprob: -4.2446722984313965
    7. ' ' → logprob: -4.4946722984313965
    8. ' def' → logprob: -4.4946722984313965
    9. ' vx' → logprob: -4.4946722984313965
    10. '`' → logprob: -4.8696722984313965

Token 1099: ' vx' (ID: 93588)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.905707597732544
    2. 'v' → logprob: -2.030707597732544
    3. ' vx' → logprob: -2.405707597732544
    4. ' v' → logprob: -2.655707597732544
    5. ' self' → logprob: -3.155707597732544
    6. ' x' → logprob: -3.530707597732544
    7. '```' → logprob: -3.530707597732544
    8. ' def' → logprob: -3.530707597732544
    9. 'self' → logprob: -3.905707597732544
    10. ' l' → logprob: -4.030707359313965

Token 1100: '^' (ID: 61)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.5372250080108643
    2. ' =' → logprob: -1.0372250080108643
    3. '=' → logprob: -3.6622250080108643
    4. 'min' → logprob: -4.662224769592285
    5. '_range' → logprob: -4.787224769592285
    6. '_max' → logprob: -5.037224769592285
    7. ' in' → logprob: -5.787224769592285
    8. '_lower' → logprob: -6.037224769592285
    9. 's' → logprob: -7.037224769592285
    10. 'max' → logprob: -7.162224769592285

Token 1101: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009976790752261877
    2. ' ' → logprob: -7.500997543334961
    3. '0' → logprob: -8.000997543334961
    4. '1' → logprob: -10.625997543334961
    5. '
' → logprob: -11.250997543334961
    6. '=' → logprob: -11.563497543334961
    7. 'import' → logprob: -11.813497543334961
    8. 'from' → logprob: -11.938497543334961
    9. '```' → logprob: -12.063497543334961
    10. ')' → logprob: -12.313497543334961

Token 1102: ' +' (ID: 659)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27806299924850464
    2. '=' → logprob: -2.0280630588531494
    3. ' <=' → logprob: -2.9030630588531494
    4. ' *' → logprob: -3.9030630588531494
    5. ' +' → logprob: -4.27806282043457
    6. ' in' → logprob: -5.02806282043457
    7. '<=' → logprob: -5.27806282043457
    8. ')' → logprob: -5.90306282043457
    9. ' ≤' → logprob: -6.27806282043457
    10. ' ' → logprob: -6.65306282043457

Token 1103: ' (' (ID: 350)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.14764533936977386
    2. '(length' → logprob: -2.6476452350616455
    3. '(' → logprob: -2.8976452350616455
    4. '((' → logprob: -5.897645473480225
    5. '(v' → logprob: -6.272645473480225
    6. '(l' → logprob: -6.522645473480225
    7. 'length' → logprob: -6.772645473480225
    8. '2' → logprob: -7.147645473480225
    9. ' (' → logprob: -7.272645473480225
    10. '(math' → logprob: -7.522645473480225

Token 1104: 'length' (ID: 7914)
  Prédit: '(length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.6339971423149109
    2. 'length' → logprob: -0.7589971423149109
    3. 'initial' → logprob: -7.383996963500977
    4. '(initial' → logprob: -8.258996963500977
    5. '(' → logprob: -8.633996963500977
    6. '[length' → logprob: -9.383996963500977
    7. '((' → logprob: -9.883996963500977
    8. ' (' → logprob: -10.008996963500977
    9. ' length' → logprob: -10.008996963500977
    10. '   ' → logprob: -10.508996963500977

Token 1105: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.7632750868797302
    2. ' /' → logprob: -0.7632750868797302
    3. '/(' → logprob: -3.013275146484375
    4. '**' → logprob: -4.013275146484375
    5. ' **' → logprob: -9.013275146484375
    6. ')/(' → logprob: -9.263275146484375
    7. '*' → logprob: -9.888275146484375
    8. ')' → logprob: -10.013275146484375
    9. ' /(' → logprob: -10.013275146484375
    10. ' *' → logprob: -10.138275146484375

Token 1106: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6405310816480778e-05
    2. '2' → logprob: -11.500016212463379
    3. ' (' → logprob: -12.000016212463379
    4. '```' → logprob: -17.750017166137695
    5. '{' → logprob: -17.875017166137695
    6. '   ' → logprob: -18.250017166137695
    7. '`' → logprob: -18.250017166137695
    8. '
' → logprob: -19.250017166137695
    9. '(v' → logprob: -19.250017166137695
    10. '(
' → logprob: -19.250017166137695

Token 1107: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.9160102712921798e-05
    2. '2' → logprob: -10.500029563903809
    3. ' (' → logprob: -13.375029563903809
    4. '`' → logprob: -18.375028610229492
    5. '```' → logprob: -18.500028610229492
    6. '{' → logprob: -18.750028610229492
    7. '(
' → logprob: -19.250028610229492
    8. ')' → logprob: -19.375028610229492
    9. '
' → logprob: -19.500028610229492
    10. '   ' → logprob: -19.750028610229492

Token 1108: ' vx' (ID: 93588)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.43049317598342896
    2. '*' → logprob: -1.1804931163787842
    3. '/v' → logprob: -4.430493354797363
    4. ')' → logprob: -4.805493354797363
    5. ' *' → logprob: -5.180493354797363
    6. '/' → logprob: -5.180493354797363
    7. ' /' → logprob: -5.555493354797363
    8. ' vx' → logprob: -5.805493354797363
    9. '(' → logprob: -6.055493354797363
    10. '   ' → logprob: -7.930493354797363

Token 1109: '))' (ID: 915)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.6882831454277039
    2. ')' → logprob: -0.8132831454277039
    3. '))' → logprob: -2.9382832050323486
    4. ' )' → logprob: -7.0632829666137695
    5. ')^' → logprob: -8.06328296661377
    6. ')))' → logprob: -11.68828296661377
    7. ' ))' → logprob: -11.81328296661377
    8. ')`' → logprob: -11.81328296661377
    9. '**' → logprob: -12.81328296661377
    10. '   ' → logprob: -13.06328296661377

Token 1110: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.24650804698467255
    2. ')' → logprob: -1.871508002281189
    3. ' **' → logprob: -2.8715081214904785
    4. '2' → logprob: -5.4965081214904785
    5. ')**' → logprob: -6.6215081214904785
    6. ' )' → logprob: -6.6215081214904785
    7. '<|end|>' → logprob: -7.9965081214904785
    8. '*' → logprob: -8.74650764465332
    9. '<|end|>' → logprob: -9.37150764465332
    10. ' ' → logprob: -9.37150764465332

Token 1111: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.756989700486884e-05
    2. ' ' → logprob: -9.37508773803711
    3. '
' → logprob: -14.12508773803711
    4. '{' → logprob: -14.37508773803711
    5. '**' → logprob: -15.37508773803711
    6. '²' → logprob: -15.37508773803711
    7. '```' → logprob: -15.50008773803711
    8. ')' → logprob: -15.50008773803711
    9. '1' → logprob: -15.87508773803711
    10. ':' → logprob: -16.87508773803711

Token 1112: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.026594260707497597
    2. '<=' → logprob: -3.6515941619873047
    3. ' <' → logprob: -8.776594161987305
    4. ' +' → logprob: -9.401594161987305
    5. '+' → logprob: -10.901594161987305
    6. ')' → logprob: -11.526594161987305
    7. ')<=' → logprob: -12.401594161987305
    8. ' ' → logprob: -12.401594161987305
    9. ' ≤' → logprob: -12.776594161987305
    10. ' >' → logprob: -12.901594161987305

Token 1113: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.0010269738268107176
    2. ' initial' → logprob: -7.0010271072387695
    3. '(initial' → logprob: -9.12602710723877
    4. '   ' → logprob: -12.50102710723877
    5. '	initial' → logprob: -12.87602710723877
    6. ' (' → logprob: -16.126026153564453
    7. ' ' → logprob: -16.376026153564453
    8. '_initial' → logprob: -17.001026153564453
    9. '(' → logprob: -17.001026153564453
    10. '
' → logprob: -17.126026153564453

Token 1114: '_speed' (ID: 43208)
  Prédit: '_speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -9.114600834436715e-05
    2. 'speed' → logprob: -9.375091552734375
    3. 'Speed' → logprob: -12.250091552734375
    4. '_s' → logprob: -14.375091552734375
    5. '
' → logprob: -15.125091552734375
    6. '```' → logprob: -15.625091552734375
    7. '\' → logprob: -16.375091552734375
    8. ' speed' → logprob: -16.750091552734375
    9. '`' → logprob: -17.125091552734375
    10. '   ' → logprob: -17.125091552734375

Token 1115: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.062225695699453354
    2. '2' → logprob: -3.687225580215454
    3. ' **' → logprob: -4.187225818634033
    4. ')' → logprob: -5.437225818634033
    5. ' ' → logprob: -5.687225818634033
    6. '<|end|>' → logprob: -6.312225818634033
    7. '<|end|>' → logprob: -6.312225818634033
    8. '   ' → logprob: -6.562225818634033
    9. ' +' → logprob: -6.562225818634033
    10. '
' → logprob: -6.812225818634033

Token 1116: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '²' → logprob: -18.000085830688477
    4. '**' → logprob: -18.250085830688477
    5. '```' → logprob: -18.375085830688477
    6. '   ' → logprob: -18.500085830688477
    7. '۲' → logprob: -18.875085830688477
    8. '{' → logprob: -19.000085830688477
    9. '*' → logprob: -20.250085830688477
    10. '[' → logprob: -20.375085830688477

Token 1117: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18564964830875397
    2. '\n' → logprob: -2.8106496334075928
    3. '
' → logprob: -2.9356496334075928
    4. '        
' → logprob: -4.060649871826172
    5. ',' → logprob: -4.560649871826172
    6. '    
' → logprob: -5.685649871826172
    7. ':' → logprob: -5.685649871826172
    8. ')' → logprob: -5.685649871826172
    9. '\' → logprob: -5.810649871826172
    10. '\r' → logprob: -6.310649871826172

Token 1118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15092116594314575
    2. ':' → logprob: -3.150921106338501
    3. '\n' → logprob: -3.150921106338501
    4. ':
' → logprob: -4.52592134475708
    5. ',' → logprob: -4.65092134475708
    6. ' and' → logprob: -4.90092134475708
    7. '\' → logprob: -5.27592134475708
    8. '        
' → logprob: -5.40092134475708
    9. '
' → logprob: -5.52592134475708
    10. '.' → logprob: -6.52592134475708

Token 1119: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009544872678816319
    2. '\n' → logprob: -5.759544849395752
    3. '
' → logprob: -6.384544849395752
    4. '\' → logprob: -6.884544849395752
    5. '        
' → logprob: -7.009544849395752
    6. ' 
' → logprob: -7.259544849395752
    7. ' \' → logprob: -7.759544849395752
    8. '\x' → logprob: -7.759544849395752
    9. ',' → logprob: -8.75954532623291
    10. '\t' → logprob: -8.88454532623291

Token 1120: ' Rewrite' (ID: 185284)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005068310536444187
    2. '
' → logprob: -6.255068302154541
    3. '\' → logprob: -7.505068302154541
    4. ' for' → logprob: -7.755068302154541
    5. ' if' → logprob: -7.880068302154541
    6. ' v' → logprob: -8.3800687789917
    7. '   ' → logprob: -8.6300687789917
    8. '        
' → logprob: -8.6300687789917
    9. '\n' → logprob: -8.7550687789917
    10. ',' → logprob: -8.8800687789917

Token 1121: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27398860454559326
    2. ':' → logprob: -1.6489886045455933
    3. ' as' → logprob: -4.148988723754883
    4. 'import' → logprob: -4.898988723754883
    5. ' for' → logprob: -5.148988723754883
    6. '        
' → logprob: -5.273988723754883
    7. '        ' → logprob: -6.398988723754883
    8. '
' → logprob: -6.773988723754883
    9. ' in' → logprob: -6.898988723754883
    10. '   ' → logprob: -7.023988723754883

Token 1122: ' vx' (ID: 93588)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.3080386519432068
    2. 'v' → logprob: -2.5580387115478516
    3. ' vx' → logprob: -3.3080387115478516
    4. 'import' → logprob: -3.3080387115478516
    5. 'def' → logprob: -3.6830387115478516
    6. 'x' → logprob: -4.058038711547852
    7. '       ' → logprob: -4.433038711547852
    8. 'for' → logprob: -4.433038711547852
    9. '```' → logprob: -5.058038711547852
    10. 'dx' → logprob: -5.058038711547852

Token 1123: '^' (ID: 61)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.28628671169281
    2. '_squared' → logprob: -1.66128671169281
    3. '²' → logprob: -1.78628671169281
    4. '^' → logprob: -2.0362868309020996
    5. '2' → logprob: -2.4112868309020996
    6. '_candidates' → logprob: -3.4112868309020996
    7. '_min' → logprob: -3.7862868309020996
    8. '=' → logprob: -4.0362868309021
    9. 'import' → logprob: -4.4112868309021
    10. ':' → logprob: -4.4112868309021

Token 1124: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0036798864603042603
    2. '4' → logprob: -5.6286797523498535
    3. ' ' → logprob: -9.753680229187012
    4. 'import' → logprob: -11.378680229187012
    5. 'from' → logprob: -13.503680229187012
    6. ':' → logprob: -13.503680229187012
    7. '6' → logprob: -13.753680229187012
    8. '**' → logprob: -14.003680229187012
    9. '   ' → logprob: -14.253680229187012
    10. '{' → logprob: -14.378680229187012

Token 1125: ' +' (ID: 659)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.32913339138031
    2. ' *' → logprob: -1.57913339138031
    3. ' +' → logprob: -1.70413339138031
    4. ' <=' → logprob: -2.0791335105895996
    5. '=' → logprob: -2.8291335105895996
    6. '*' → logprob: -2.9541335105895996
    7. '<=' → logprob: -3.3291335105895996
    8. '**' → logprob: -4.4541335105896
    9. ' -' → logprob: -4.7041335105896
    10. '^' → logprob: -4.7041335105896

Token 1126: ' length' (ID: 5517)
  Prédit: '(length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.0006327360169962049
    2. 'length' → logprob: -7.7506327629089355
    3. ' (' → logprob: -8.750632286071777
    4. '(' → logprob: -10.625632286071777
    5. '((' → logprob: -11.500632286071777
    6. '[length' → logprob: -12.000632286071777
    7. ' length' → logprob: -13.750632286071777
    8. '(math' → logprob: -15.375632286071777
    9. '(len' → logprob: -15.375632286071777
    10. ',length' → logprob: -15.625632286071777

Token 1127: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.03294580057263374
    2. '/' → logprob: -3.9079458713531494
    3. '^' → logprob: -5.28294563293457
    4. ' **' → logprob: -5.90794563293457
    5. ' /' → logprob: -6.28294563293457
    6. '*' → logprob: -6.90794563293457
    7. '_squared' → logprob: -7.78294563293457
    8. ' *' → logprob: -8.03294563293457
    9. '<|end|>' → logprob: -8.03294563293457
    10. '²' → logprob: -8.40794563293457

Token 1128: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005150251090526581
    2. '/' → logprob: -8.25051498413086
    3. ' ' → logprob: -8.37551498413086
    4. '4' → logprob: -11.25051498413086
    5. ' /' → logprob: -12.62551498413086
    6. '
' → logprob: -13.93801498413086
    7. '```' → logprob: -14.00051498413086
    8. '**' → logprob: -14.43801498413086
    9. '²' → logprob: -14.43801498413086
    10. '.' → logprob: -14.50051498413086

Token 1129: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.2365563064813614
    2. '/' → logprob: -1.9865562915802002
    3. '/(' → logprob: -2.6115562915802
    4. ' /(' → logprob: -9.986556053161621
    5. '   ' → logprob: -11.611556053161621
    6. ')/(' → logprob: -11.861556053161621
    7. ' ' → logprob: -12.611556053161621
    8. ' *' → logprob: -13.861556053161621
    9. '*' → logprob: -13.986556053161621
    10. '(' → logprob: -14.236556053161621

Token 1130: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004670153430197388
    2. '4' → logprob: -8.000467300415039
    3. ' (' → logprob: -9.125467300415039
    4. '400' → logprob: -11.375467300415039
    5. '16' → logprob: -12.500467300415039
    6. '64' → logprob: -13.000467300415039
    7. '36' → logprob: -13.625467300415039
    8. '((' → logprob: -14.250467300415039
    9. ' ' → logprob: -14.375467300415039
    10. '8' → logprob: -14.500467300415039

Token 1131: '4' (ID: 19)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003633565502241254
    2. '4' → logprob: -5.628633499145508
    3. ' (' → logprob: -10.753633499145508
    4. '64' → logprob: -12.378633499145508
    5. '8' → logprob: -13.003633499145508
    6. '16' → logprob: -13.253633499145508
    7. '400' → logprob: -13.628633499145508
    8. '((' → logprob: -14.128633499145508
    9. '`' → logprob: -14.628633499145508
    10. '```' → logprob: -14.878633499145508

Token 1132: ' vx' (ID: 93588)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.26798492670059204
    2. '*' → logprob: -1.7679848670959473
    3. ' vx' → logprob: -2.8929848670959473
    4. ' *' → logprob: -5.142984867095947
    5. '(' → logprob: -6.892984867095947
    6. '(v' → logprob: -7.392984867095947
    7. 'v' → logprob: -8.017985343933105
    8. '   ' → logprob: -8.142985343933105
    9. ' (' → logprob: -8.392985343933105
    10. ' ' → logprob: -8.767985343933105

Token 1133: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.37818869948387146
    2. '2' → logprob: -1.2531887292861938
    3. '^' → logprob: -3.8781886100769043
    4. ')' → logprob: -5.253188610076904
    5. '²' → logprob: -5.878188610076904
    6. '
' → logprob: -9.003189086914062
    7. ' ' → logprob: -9.128189086914062
    8. '```' → logprob: -9.503189086914062
    9. '4' → logprob: -10.003189086914062
    10. 'v' → logprob: -10.378189086914062

Token 1134: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -10.875019073486328
    3. '{' → logprob: -15.125019073486328
    4. '```' → logprob: -17.125019073486328
    5. '   ' → logprob: -18.875019073486328
    6. '
' → logprob: -19.250019073486328
    7. '۲' → logprob: -19.375019073486328
    8. '**' → logprob: -19.375019073486328
    9. ')' → logprob: -19.500019073486328
    10. '{
' → logprob: -19.625019073486328

Token 1135: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015399737283587456
    2. ')<=' → logprob: -4.765399932861328
    3. ' )' → logprob: -5.390399932861328
    4. ' <=' → logprob: -6.265399932861328
    5. '<=' → logprob: -8.140399932861328
    6. ' ' → logprob: -13.265399932861328
    7. ']<=' → logprob: -13.890399932861328
    8. '))' → logprob: -13.890399932861328
    9. '),' → logprob: -14.265399932861328
    10. ')
' → logprob: -14.265399932861328

Token 1136: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0323653407394886
    2. '<=' → logprob: -3.782365322113037
    3. ')' → logprob: -5.782365322113037
    4. '<|end|>' → logprob: -6.657365322113037
    5. '<|end|>' → logprob: -6.782365322113037
    6. '       ' → logprob: -6.907365322113037
    7. ' +' → logprob: -7.157365322113037
    8. '+' → logprob: -7.782365322113037
    9. ')<=' → logprob: -7.907365322113037
    10. '#' → logprob: -8.532365798950195

Token 1137: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -5.8961017202818766e-05
    2. ' initial' → logprob: -9.750059127807617
    3. '(initial' → logprob: -14.875059127807617
    4. '	initial' → logprob: -15.750059127807617
    5. '   ' → logprob: -16.000059127807617
    6. '_initial' → logprob: -19.500059127807617
    7. '.initial' → logprob: -20.125059127807617
    8. 'Initial' → logprob: -20.250059127807617
    9. ' ' → logprob: -20.250059127807617
    10. 'self' → logprob: -21.000059127807617

Token 1138: '_speed' (ID: 43208)
  Prédit: '_speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -0.0005604196921922266
    2. 'speed' → logprob: -7.500560283660889
    3. 'Speed' → logprob: -11.875560760498047
    4. '_s' → logprob: -15.750560760498047
    5. ' speed' → logprob: -15.750560760498047
    6. '_velocity' → logprob: -16.125560760498047
    7. '_SPEED' → logprob: -16.375560760498047
    8. '	speed' → logprob: -17.375560760498047
    9. '-speed' → logprob: -17.875560760498047
    10. '_distance' → logprob: -18.750560760498047

Token 1139: '^' (ID: 61)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.47704073786735535
    2. '**' → logprob: -1.1020407676696777
    3. '^' → logprob: -3.3520407676696777
    4. '²' → logprob: -5.477040767669678
    5. ' **' → logprob: -5.727040767669678
    6. '_squared' → logprob: -6.352040767669678
    7. ' ' → logprob: -6.477040767669678
    8. '<|end|>' → logprob: -7.727040767669678
    9. '<|end|>' → logprob: -8.47704029083252
    10. '*' → logprob: -8.85204029083252

Token 1140: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.584861744660884e-05
    2. ' ' → logprob: -10.000045776367188
    3. '²' → logprob: -15.000045776367188
    4. '۲' → logprob: -16.500045776367188
    5. '
' → logprob: -17.937545776367188
    6. '{' → logprob: -18.000045776367188
    7. '   ' → logprob: -18.437545776367188
    8. '२' → logprob: -18.500045776367188
    9. '```' → logprob: -18.500045776367188
    10. '２' → logprob: -18.562545776367188

Token 1141: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5151618719100952
    2. '
' → logprob: -1.3901618719100952
    3. '\n' → logprob: -2.0151619911193848
    4. '        
' → logprob: -4.640161991119385
    5. ',' → logprob: -5.765161991119385
    6. '    
' → logprob: -6.765161991119385
    7. ',
' → logprob: -6.765161991119385
    8. '\' → logprob: -6.890161991119385
    9. '
' → logprob: -6.890161991119385
    10. '\x' → logprob: -7.640161991119385

Token 1142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01796824298799038
    2. '\n' → logprob: -5.26796817779541
    3. '        
' → logprob: -5.39296817779541
    4. '\' → logprob: -6.14296817779541
    5. ',' → logprob: -6.51796817779541
    6. '
' → logprob: -6.51796817779541
    7. '   ' → logprob: -7.89296817779541
    8. '    
' → logprob: -7.89296817779541
    9. '<|end|>' → logprob: -7.89296817779541
    10. ' 
' → logprob: -8.14296817779541

Token 1143: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006515705958008766
    2. '
' → logprob: -5.2565155029296875
    3. '        
' → logprob: -7.5065155029296875
    4. ' 
' → logprob: -8.631515502929688
    5. '\' → logprob: -9.381515502929688
    6. '    
' → logprob: -9.506515502929688
    7. '   ' → logprob: -9.881515502929688
    8. ',' → logprob: -9.881515502929688
    9. '\n' → logprob: -9.881515502929688
    10. 'n' → logprob: -10.131515502929688

Token 1144: ' Define' (ID: 38966)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02343938499689102
    2. '
' → logprob: -3.898439407348633
    3. '        
' → logprob: -7.523439407348633
    4. 'import' → logprob: -7.898439407348633
    5. '\n' → logprob: -8.023439407348633
    6. '\' → logprob: -8.023439407348633
    7. '   ' → logprob: -8.648439407348633
    8. ',' → logprob: -9.023439407348633
    9. 'def' → logprob: -9.148439407348633
    10. '```' → logprob: -9.273439407348633

Token 1145: ' f' (ID: 285)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01355498842895031
    2. 'low' → logprob: -5.01355504989624
    3. 'left' → logprob: -6.01355504989624
    4. 'import' → logprob: -6.88855504989624
    5. 'l' → logprob: -7.26355504989624
    6. 'lo' → logprob: -7.63855504989624
    7. 'lower' → logprob: -7.63855504989624
    8. '       ' → logprob: -7.76355504989624
    9. 'a' → logprob: -8.388554573059082
    10. ' def' → logprob: -8.763554573059082

Token 1146: '(v' (ID: 6932)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0309088230133057
    2. 'def' → logprob: -1.2809088230133057
    3. '(' → logprob: -2.2809088230133057
    4. '=lambda' → logprob: -2.9059088230133057
    5. 'import' → logprob: -3.2809088230133057
    6. '   ' → logprob: -4.155908584594727
    7. ')' → logprob: -4.280908584594727
    8. '_range' → logprob: -4.280908584594727
    9. '_x' → logprob: -4.405908584594727
    10. '=' → logprob: -4.530908584594727

Token 1147: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.8325677703833207e-05
    2. ')' → logprob: -11.750028610229492
    3. '
' → logprob: -11.750028610229492
    4. '   ' → logprob: -12.750028610229492
    5. '_x' → logprob: -13.000028610229492
    6. ')x' → logprob: -13.250028610229492
    7. '```' → logprob: -13.875028610229492
    8. ')
' → logprob: -13.875028610229492
    9. ''x' → logprob: -14.625028610229492
    10. '=' → logprob: -15.125028610229492

Token 1148: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14367124438285828
    2. '):' → logprob: -2.1436712741851807
    3. ')=' → logprob: -4.518671035766602
    4. ':' → logprob: -5.518671035766602
    5. '):
' → logprob: -7.268671035766602
    6. '   ' → logprob: -8.393671035766602
    7. '=lambda' → logprob: -8.518671035766602
    8. '(v' → logprob: -8.643671035766602
    9. '=' → logprob: -8.768671035766602
    10. ' )' → logprob: -10.518671035766602

Token 1149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15745952725410461
    2. '=' → logprob: -2.1574594974517822
    3. ':' → logprob: -4.532459735870361
    4. 'import' → logprob: -4.657459735870361
    5. ' ' → logprob: -6.157459735870361
    6. '   ' → logprob: -6.532459735870361
    7. 'def' → logprob: -6.532459735870361
    8. ' def' → logprob: -7.157459735870361
    9. '       ' → logprob: -7.407459735870361
    10. ')' → logprob: -7.407459735870361

Token 1150: ' vx' (ID: 93588)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6439759135246277
    2. 'vx' → logprob: -0.7689759135246277
    3. '(lambda' → logprob: -5.518975734710693
    4. ' vx' → logprob: -5.643975734710693
    5. ' lambda' → logprob: -6.018975734710693
    6. '(v' → logprob: -7.143975734710693
    7. 'v' → logprob: -8.768976211547852
    8. '   ' → logprob: -9.393976211547852
    9. 'vz' → logprob: -9.393976211547852
    10. 'vy' → logprob: -10.393976211547852

Token 1151: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.45974022150039673
    2. '2' → logprob: -1.084740161895752
    3. '²' → logprob: -3.959740161895752
    4. ' **' → logprob: -5.334740161895752
    5. '^' → logprob: -5.709740161895752
    6. '*' → logprob: -6.709740161895752
    7. ' ' → logprob: -7.209740161895752
    8. ')' → logprob: -7.334740161895752
    9. '<|end|>' → logprob: -8.70974063873291
    10. 'import' → logprob: -9.33474063873291

Token 1152: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.967624019831419e-05
    2. ' ' → logprob: -9.750060081481934
    3. '**' → logprob: -15.500060081481934
    4. '4' → logprob: -15.937560081481934
    5. ''' → logprob: -16.000059127807617
    6. '{' → logprob: -16.062559127807617
    7. '```' → logprob: -16.187559127807617
    8. '(' → logprob: -16.250059127807617
    9. '0' → logprob: -16.375059127807617
    10. '²' → logprob: -16.500059127807617

Token 1153: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04736431688070297
    2. '<|end|>' → logprob: -3.7973642349243164
    3. '+' → logprob: -3.9223642349243164
    4. ')' → logprob: -6.797364234924316
    5. ' ' → logprob: -6.922364234924316
    6. '<|end|>' → logprob: -7.672364234924316
    7. ' *' → logprob: -7.797364234924316
    8. '**' → logprob: -8.047364234924316
    9. '*' → logprob: -8.422364234924316
    10. '^' → logprob: -9.672364234924316

Token 1154: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.16098552942276
    2. '(length' → logprob: -1.9109854698181152
    3. ' length' → logprob: -7.410985469818115
    4. ' (' → logprob: -9.035985946655273
    5. '[length' → logprob: -10.910985946655273
    6. '(' → logprob: -11.035985946655273
    7. ',length' → logprob: -14.785985946655273
    8. '4' → logprob: -14.785985946655273
    9. 'frac' → logprob: -14.910985946655273
    10. '	length' → logprob: -14.910985946655273

Token 1155: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.01583058573305607
    2. '^' → logprob: -5.1408305168151855
    3. ' **' → logprob: -5.5158305168151855
    4. '²' → logprob: -5.8908305168151855
    5. '<|end|>' → logprob: -7.0158305168151855
    6. '<|end|>' → logprob: -7.1408305168151855
    7. '2' → logprob: -7.5158305168151855
    8. '*' → logprob: -8.015830993652344
    9. ' ' → logprob: -8.390830993652344
    10. '```' → logprob: -9.390830993652344

Token 1156: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.927930654550437e-05
    2. ' ' → logprob: -10.500029563903809
    3. '```' → logprob: -14.250029563903809
    4. '²' → logprob: -14.875029563903809
    5. '   ' → logprob: -16.125028610229492
    6. '۲' → logprob: -16.375028610229492
    7. '4' → logprob: -16.500028610229492
    8. '(' → logprob: -16.500028610229492
    9. '/' → logprob: -16.750028610229492
    10. '{' → logprob: -17.000028610229492

Token 1157: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.15036970376968384
    2. '/' → logprob: -2.025369644165039
    3. '/(' → logprob: -4.900369644165039
    4. ' /(' → logprob: -8.650369644165039
    5. '*' → logprob: -11.025369644165039
    6. ' ' → logprob: -11.775369644165039
    7. ' *' → logprob: -12.150369644165039
    8. '   ' → logprob: -12.275369644165039
    9. '<|end|>' → logprob: -13.025369644165039
    10. '**' → logprob: -13.150369644165039

Token 1158: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.1008713702030946e-06
    2. ' (' → logprob: -13.125001907348633
    3. '\(' → logprob: -17.250001907348633
    4. '(
' → logprob: -17.750001907348633
    5. '   ' → logprob: -18.000001907348633
    6. '((' → logprob: -18.250001907348633
    7. '```' → logprob: -18.250001907348633
    8. '4' → logprob: -19.250001907348633
    9. '  ' → logprob: -19.750001907348633
    10. '(int' → logprob: -19.875001907348633

Token 1159: '4' (ID: 19)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.978233846486546e-05
    2. '4' → logprob: -10.000049591064453
    3. ' (' → logprob: -12.375049591064453
    4. '{' → logprob: -16.875049591064453
    5. '```' → logprob: -17.125049591064453
    6. '`' → logprob: -17.875049591064453
    7. '\(' → logprob: -18.125049591064453
    8. '   ' → logprob: -18.125049591064453
    9. '(
' → logprob: -18.750049591064453
    10. ')' → logprob: -19.000049591064453

Token 1160: ' vx' (ID: 93588)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.08186109364032745
    2. 'vx' → logprob: -3.2068610191345215
    3. ' (' → logprob: -3.4568610191345215
    4. '(' → logprob: -5.3318610191345215
    5. ' vx' → logprob: -6.4568610191345215
    6. 'v' → logprob: -9.70686149597168
    7. '(x' → logprob: -10.45686149597168
    8. '   ' → logprob: -10.95686149597168
    9. '
' → logprob: -11.20686149597168
    10. '*' → logprob: -11.58186149597168

Token 1161: '^' (ID: 61)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03685668110847473
    2. '**' → logprob: -3.4118566513061523
    3. '^' → logprob: -6.411856651306152
    4. '²' → logprob: -7.286856651306152
    5. ')' → logprob: -7.411856651306152
    6. ' ' → logprob: -8.786856651306152
    7. '(' → logprob: -9.786856651306152
    8. '```' → logprob: -11.161856651306152
    9. '[' → logprob: -12.036856651306152
    10. '{' → logprob: -12.036856651306152

Token 1162: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.375000953674316
    3. ')' → logprob: -14.875000953674316
    4. '{' → logprob: -16.250001907348633
    5. '```' → logprob: -17.375001907348633
    6. '
' → logprob: -17.500001907348633
    7. '{
' → logprob: -18.875001907348633
    8. '²' → logprob: -19.000001907348633
    9. '   ' → logprob: -19.250001907348633
    10. ',' → logprob: -19.250001907348633

Token 1163: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07571331411600113
    2. ' -' → logprob: -2.8257133960723877
    3. '       ' → logprob: -5.325713157653809
    4. '-' → logprob: -5.700713157653809
    5. ' )' → logprob: -5.825713157653809
    6. '")' → logprob: -7.825713157653809
    7. '),' → logprob: -8.325713157653809
    8. '')' → logprob: -8.450713157653809
    9. '):' → logprob: -8.575713157653809
    10. 'def' → logprob: -9.075713157653809

Token 1164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011805863119661808
    2. '\n' → logprob: -5.386806011199951
    3. '        
' → logprob: -6.636806011199951
    4. ',' → logprob: -6.761806011199951
    5. ' =' → logprob: -7.136806011199951
    6. '\' → logprob: -7.136806011199951
    7. ')' → logprob: -7.261806011199951
    8. '
' → logprob: -7.636806011199951
    9. '   ' → logprob: -7.761806011199951
    10. '    
' → logprob: -8.511805534362793

Token 1165: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025438575074076653
    2. '
' → logprob: -4.1504387855529785
    3. '        
' → logprob: -6.1504387855529785
    4. '\n' → logprob: -6.4004387855529785
    5. '    
' → logprob: -6.9004387855529785
    6. ',' → logprob: -7.1504387855529785
    7. '   ' → logprob: -7.2754387855529785
    8. '\' → logprob: -7.4004387855529785
    9. ' 
' → logprob: -8.15043830871582
    10. ')' → logprob: -8.15043830871582

Token 1166: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009238999336957932
    2. '
' → logprob: -5.259239196777344
    3. '        
' → logprob: -6.884239196777344
    4. ' 
' → logprob: -7.134239196777344
    5. ' \' → logprob: -8.009239196777344
    6. '\n' → logprob: -8.384239196777344
    7. '           ' → logprob: -8.509239196777344
    8. 'v' → logprob: -8.634239196777344
    9. '\' → logprob: -8.884239196777344
    10. '        ' → logprob: -9.009239196777344

Token 1167: ' want' (ID: 1682)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1191602945327759
    2. '       ' → logprob: -1.9941602945327759
    3. ' def' → logprob: -2.1191601753234863
    4. ' can' → logprob: -2.6191601753234863
    5. ' ' → logprob: -2.9941601753234863
    6. ' =' → logprob: -3.2441601753234863
    7. ' have' → logprob: -3.2441601753234863
    8. '    ' → logprob: -3.6191601753234863
    9. ' want' → logprob: -3.8691601753234863
    10. ' find' → logprob: -4.119160175323486

Token 1168: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.027492208406329155
    2. 'to' → logprob: -3.7774922847747803
    3. ' vx' → logprob: -5.902492046356201
    4. 'vx' → logprob: -7.152492046356201
    5. '   ' → logprob: -9.02749252319336
    6. 'def' → logprob: -9.02749252319336
    7. '       ' → logprob: -9.27749252319336
    8. '
' → logprob: -10.02749252319336
    9. ' ' → logprob: -10.15249252319336
    10. '    ' → logprob: -10.15249252319336

Token 1169: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.3351292908191681
    2. ' find' → logprob: -1.5851292610168457
    3. 'search' → logprob: -4.085129261016846
    4. 'import' → logprob: -4.335129261016846
    5. 'min' → logprob: -4.335129261016846
    6. 'check' → logprob: -4.460129261016846
    7. 'try' → logprob: -4.585129261016846
    8. ' check' → logprob: -4.960129261016846
    9. ' try' → logprob: -6.210129261016846
    10. ' search' → logprob: -6.335129261016846

Token 1170: ' vx' (ID: 93588)
  Prédit: ' vx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vx' → logprob: -0.23834121227264404
    2. 'vx' → logprob: -1.613341212272644
    3. ' a' → logprob: -4.613341331481934
    4. ' some' → logprob: -6.613341331481934
    5. ' any' → logprob: -7.488341331481934
    6. 'a' → logprob: -8.488341331481934
    7. ' the' → logprob: -8.738341331481934
    8. 'any' → logprob: -8.988341331481934
    9. ' if' → logprob: -8.988341331481934
    10. 'some' → logprob: -9.238341331481934

Token 1171: ' >' (ID: 1424)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01080220565199852
    2. ' such' → logprob: -4.760802268981934
    3. ' ' → logprob: -7.885802268981934
    4. 'in' → logprob: -7.885802268981934
    5. ' \' → logprob: -7.885802268981934
    6. ':' → logprob: -8.510802268981934
    7. ' s' → logprob: -9.010802268981934
    8. ' =' → logprob: -9.135802268981934
    9. ' with' → logprob: -9.260802268981934
    10. ' between' → logprob: -9.885802268981934

Token 1172: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013266648165881634
    2. ' ' → logprob: -6.626326560974121
    3. '=' → logprob: -14.751326560974121
    4. '1' → logprob: -15.501326560974121
    5. '```' → logprob: -17.063827514648438
    6. ' ' → logprob: -17.126327514648438
    7. '۰' → logprob: -17.563827514648438
    8. '[' → logprob: -17.813827514648438
    9. ',' → logprob: -18.063827514648438
    10. 'zero' → logprob: -18.126327514648438

Token 1173: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '=' → logprob: -15.8750581741333
    4. '
' → logprob: -17.000059127807617
    5. '1' → logprob: -17.250059127807617
    6. '۰' → logprob: -17.750059127807617
    7. '<|end|>' → logprob: -17.875059127807617
    8. 'zero' → logprob: -18.062559127807617
    9. '[' → logprob: -18.687559127807617
    10. '```' → logprob: -18.750059127807617

Token 1174: ' such' (ID: 2238)
  Prédit: ' such'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' such' → logprob: -0.07485779374837875
    2. ',' → logprob: -3.449857711791992
    3. '<|end|>' → logprob: -4.199857711791992
    4. ' that' → logprob: -4.574857711791992
    5. ' with' → logprob: -5.324857711791992
    6. ' and' → logprob: -6.074857711791992
    7. '.' → logprob: -6.324857711791992
    8. ' for' → logprob: -6.449857711791992
    9. ':' → logprob: -6.699857711791992
    10. ')' → logprob: -7.574857711791992

Token 1175: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.5234976410865784
    2. ' that' → logprob: -0.8984976410865784
    3. '_that' → logprob: -8.398497581481934
    4. '	that' → logprob: -10.148497581481934
    5. 'at' → logprob: -10.648497581481934
    6. ',' → logprob: -11.398497581481934
    7. '   ' → logprob: -11.773497581481934
    8. ' ' → logprob: -11.773497581481934
    9. ' at' → logprob: -11.773497581481934
    10. ')' → logprob: -11.773497581481934

Token 1176: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.38691797852516174
    2. ' f' → logprob: -1.1369179487228394
    3. '       ' → logprob: -11.636918067932129
    4. 'self' → logprob: -12.136918067932129
    5. '   ' → logprob: -12.261918067932129
    6. ' ' → logprob: -12.511918067932129
    7. ' vx' → logprob: -12.511918067932129
    8. ' ' → logprob: -12.886918067932129
    9. ' self' → logprob: -12.886918067932129
    10. 'v' → logprob: -13.011918067932129

Token 1177: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0019928740803152323
    2. '(' → logprob: -6.251992702484131
    3. ' (' → logprob: -10.751993179321289
    4. '(
' → logprob: -11.126993179321289
    5. '(x' → logprob: -11.876993179321289
    6. ')' → logprob: -13.126993179321289
    7. '```' → logprob: -13.251993179321289
    8. '(next' → logprob: -13.501993179321289
    9. '<|end|>' → logprob: -13.501993179321289
    10. '<|end|>' → logprob: -14.001993179321289

Token 1178: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.253090865968261e-06
    2. '_x' → logprob: -13.250009536743164
    3. ''x' → logprob: -13.375009536743164
    4. '
' → logprob: -13.875009536743164
    5. '(x' → logprob: -14.000009536743164
    6. ')' → logprob: -14.000009536743164
    7. '```' → logprob: -14.750009536743164
    8. ')x' → logprob: -15.000009536743164
    9. ' x' → logprob: -15.125009536743164
    10. '<x' → logprob: -15.250009536743164

Token 1179: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014644917973782867
    2. ')<=' → logprob: -8.875146865844727
    3. '<=' → logprob: -12.500146865844727
    4. ' )' → logprob: -14.250146865844727
    5. ' <=' → logprob: -14.625146865844727
    6. '')' → logprob: -14.875146865844727
    7. ')
' → logprob: -15.125146865844727
    8. '=' → logprob: -15.875146865844727
    9. '[' → logprob: -15.875146865844727
    10. ')=' → logprob: -16.000146865844727

Token 1180: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0013846398796886206
    2. '<=' → logprob: -6.626384735107422
    3. ' ≤' → logprob: -11.001384735107422
    4. ' <' → logprob: -11.376384735107422
    5. ' ' → logprob: -11.626384735107422
    6. ')<=' → logprob: -11.876384735107422
    7. ')' → logprob: -12.001384735107422
    8. ' \' → logprob: -13.001384735107422
    9. '[' → logprob: -13.001384735107422
    10. ']<=' → logprob: -14.501384735107422

Token 1181: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.00016754455282352865
    2. ' initial' → logprob: -8.750167846679688
    3. '(initial' → logprob: -11.625167846679688
    4. '	initial' → logprob: -16.125167846679688
    5. '   ' → logprob: -18.125167846679688
    6. 'Initial' → logprob: -18.625167846679688
    7. '_initial' → logprob: -19.125167846679688
    8. ' (' → logprob: -19.500167846679688
    9. ' ' → logprob: -20.250167846679688
    10. '.initial' → logprob: -20.375167846679688

Token 1182: '_speed' (ID: 43208)
  Prédit: '_speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -0.0005756704485975206
    2. '_' → logprob: -7.875575542449951
    3. 'speed' → logprob: -8.62557601928711
    4. '_s' → logprob: -12.12557601928711
    5. ' _' → logprob: -12.25057601928711
    6. '_space' → logprob: -13.12557601928711
    7. 'Speed' → logprob: -13.87557601928711
    8. '_SPEED' → logprob: -14.25057601928711
    9. '_
' → logprob: -15.12557601928711
    10. '_score' → logprob: -15.12557601928711

Token 1183: '^' (ID: 61)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2859428822994232
    2. '^' → logprob: -1.5359429121017456
    3. '**' → logprob: -3.660942792892456
    4. '²' → logprob: -5.785943031311035
    5. '_squared' → logprob: -6.535943031311035
    6. '_' → logprob: -6.910943031311035
    7. ' ' → logprob: -6.910943031311035
    8. ')' → logprob: -8.410943031311035
    9. '

' → logprob: -8.910943031311035
    10. '
' → logprob: -9.035943031311035

Token 1184: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '²' → logprob: -17.125045776367188
    4. '```' → logprob: -18.000045776367188
    5. '۲' → logprob: -18.750045776367188
    6. '   ' → logprob: -18.750045776367188
    7. '**' → logprob: -18.875045776367188
    8. '
' → logprob: -19.000045776367188
    9. '{' → logprob: -19.125045776367188
    10. '^' → logprob: -19.500045776367188

Token 1185: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15552785992622375
    2. '\n' → logprob: -3.0305278301239014
    3. '
' → logprob: -3.5305278301239014
    4. ',' → logprob: -3.6555278301239014
    5. ':' → logprob: -4.2805280685424805
    6. '        
' → logprob: -4.5305280685424805
    7. '.' → logprob: -5.7805280685424805
    8. '    
' → logprob: -6.1555280685424805
    9. '\' → logprob: -6.4055280685424805
    10. ',
' → logprob: -6.7805280685424805

Token 1186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016960110515356064
    2. '
' → logprob: -6.8766961097717285
    3. '        
' → logprob: -7.5016961097717285
    4. '	' → logprob: -9.75169563293457
    5. '    
' → logprob: -11.75169563293457
    6. ' 
' → logprob: -12.25169563293457
    7. '   ' → logprob: -12.37669563293457
    8. '        ' → logprob: -12.50169563293457
    9. '  
' → logprob: -12.75169563293457
    10. ',' → logprob: -13.12669563293457

Token 1187: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.272769570350647
    2. 'import' → logprob: -1.897769570350647
    3. '
' → logprob: -3.5227694511413574
    4. 'if' → logprob: -3.6477694511413574
    5. ' if' → logprob: -4.647769451141357
    6. ' import' → logprob: -4.897769451141357
    7. 'def' → logprob: -5.022769451141357
    8. 'from' → logprob: -5.272769451141357
    9. 'v' → logprob: -7.397769451141357
    10. '#' (adapté à ' #') → logprob: -7.772769451141357

Token 1188: ' To' (ID: 2514)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.35665395855903625
    2. '       ' → logprob: -2.356653928756714
    3. 'import' → logprob: -2.606653928756714
    4. 'def' → logprob: -2.981653928756714
    5. 'low' → logprob: -3.481653928756714
    6. ' if' → logprob: -4.231654167175293
    7. 'from' → logprob: -4.481654167175293
    8. 'lower' → logprob: -4.731654167175293
    9. 'min' → logprob: -5.356654167175293
    10. '#' → logprob: -5.856654167175293

Token 1189: ' solve' (ID: 17722)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.761780321598053
    2. 'solve' → logprob: -1.6367802619934082
    3. ' find' → logprob: -2.136780261993408
    4. 'def' → logprob: -2.261780261993408
    5. ' solve' → logprob: -3.886780261993408
    6. 'min' → logprob: -4.011780261993408
    7. '       ' → logprob: -4.261780261993408
    8. 'avoid' → logprob: -4.386780261993408
    9. ' avoid' → logprob: -4.886780261993408
    10. ' minimize' → logprob: -5.261780261993408

Token 1190: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8812583088874817
    2. ' vx' → logprob: -0.8812583088874817
    3. 'import' → logprob: -2.881258249282837
    4. 'vx' → logprob: -3.631258249282837
    5. 'for' → logprob: -4.006258487701416
    6. ' for' → logprob: -4.006258487701416
    7. 'v' → logprob: -4.256258487701416
    8. '   ' → logprob: -5.131258487701416
    9. ' import' → logprob: -5.631258487701416
    10. ':' → logprob: -5.631258487701416

Token 1191: ' binary' (ID: 15600)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4156782925128937
    2. ' import' → logprob: -1.9156782627105713
    3. '       ' → logprob: -3.1656782627105713
    4. 'low' → logprob: -3.5406782627105713
    5. ' low' → logprob: -3.6656782627105713
    6. ' lo' → logprob: -3.9156782627105713
    7. 'def' → logprob: -4.04067850112915
    8. 'from' → logprob: -4.29067850112915
    9. ' vx' → logprob: -4.66567850112915
    10. 'v' → logprob: -4.91567850112915

Token 1192: ' search' (ID: 3684)
  Prédit: ' search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.7994217276573181
    2. 'search' → logprob: -1.174421787261963
    3. '_search' → logprob: -1.424421787261963
    4. '       ' → logprob: -7.924421787261963
    5. '_' → logprob: -8.299421310424805
    6. '   ' → logprob: -9.799421310424805
    7. '
' → logprob: -10.424421310424805
    8. '    ' → logprob: -11.674421310424805
    9. 'Search' → logprob: -11.674421310424805
    10. '```' → logprob: -11.799421310424805

Token 1193: ' vx' (ID: 93588)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2918420135974884
    2. '       ' → logprob: -2.041841983795166
    3. ' over' → logprob: -3.541841983795166
    4. ' ' → logprob: -3.916841983795166
    5. ' (' → logprob: -4.291841983795166
    6. 'for' → logprob: -4.416841983795166
    7. ' on' → logprob: -4.541841983795166
    8. '(' → logprob: -4.666841983795166
    9. ' in' → logprob: -5.166841983795166
    10. ' v' → logprob: -5.291841983795166

Token 1194: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23387372493743896
    2. '(' → logprob: -2.4838738441467285
    3. ':' → logprob: -2.8588738441467285
    4. ' (' → logprob: -3.9838738441467285
    5. ' for' → logprob: -4.4838738441467285
    6. ' =' → logprob: -5.3588738441467285
    7. ' ' → logprob: -5.7338738441467285
    8. '   ' → logprob: -5.7338738441467285
    9. '        ' → logprob: -5.8588738441467285
    10. '(space' → logprob: -5.9838738441467285

Token 1195: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004023307003080845
    2. '[' → logprob: -6.37902307510376
    3. '(v' → logprob: -6.75402307510376
    4. '0' → logprob: -7.37902307510376
    5. ' (' → logprob: -7.75402307510376
    6. 'vx' → logprob: -10.504023551940918
    7. '[v' → logprob: -11.254023551940918
    8. ' vx' → logprob: -11.254023551940918
    9. '1' → logprob: -11.629023551940918
    10. 'v' → logprob: -11.754023551940918

Token 1196: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5884769558906555
    2. '0' → logprob: -0.8384769558906555
    3. 'self' → logprob: -5.21347713470459
    4. '(' → logprob: -5.58847713470459
    5. ' ' → logprob: -7.21347713470459
    6. 'epsilon' → logprob: -7.33847713470459
    7. '(self' → logprob: -7.96347713470459
    8. 'length' → logprob: -7.96347713470459
    9. '(length' → logprob: -8.33847713470459
    10. '10' → logprob: -8.46347713470459

Token 1197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008860878297127783
    2. ' ,' → logprob: -7.625885963439941
    3. ',
' → logprob: -8.125885963439941
    4. ',length' → logprob: -10.375885963439941
    5. '.' → logprob: -11.000885963439941
    6. '
' → logprob: -11.125885963439941
    7. ',self' → logprob: -11.375885963439941
    8. ',len' → logprob: -12.625885963439941
    9. 'self' → logprob: -12.750885963439941
    10. ',float' → logprob: -13.000885963439941

Token 1198: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.018606040626764297
    2. 'max' → logprob: -4.393606185913086
    3. ' initial' → logprob: -5.518606185913086
    4. '1' → logprob: -7.143606185913086
    5. '100' → logprob: -7.393606185913086
    6. ' max' → logprob: -8.768606185913086
    7. 'math' → logprob: -8.768606185913086
    8. 'length' → logprob: -8.893606185913086
    9. '10' → logprob: -9.143606185913086
    10. 'self' → logprob: -10.393606185913086

Token 1199: '_speed' (ID: 43208)
  Prédit: '_speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -0.4315849840641022
    2. '_' → logprob: -1.0565849542617798
    3. ' _' → logprob: -6.55658483505249
    4. '_)' → logprob: -7.93158483505249
    5. ')' → logprob: -8.306585311889648
    6. '_s' → logprob: -8.431585311889648
    7. '_
' → logprob: -8.806585311889648
    8. '_velocity' → logprob: -9.056585311889648
    9. 'speed' → logprob: -9.681585311889648
    10. '_:' → logprob: -10.181585311889648

Token 1200: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02139313332736492
    2. '/' → logprob: -4.521393299102783
    3. ' )' → logprob: -5.146393299102783
    4. ' /' → logprob: -6.021393299102783
    5. '+' → logprob: -8.021392822265625
    6. ']' → logprob: -8.021392822265625
    7. ' -' → logprob: -8.271392822265625
    8. '*' → logprob: -8.646392822265625
    9. ' *' → logprob: -8.646392822265625
    10. ' +' → logprob: -8.646392822265625

Token 1201: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16430005431175232
    2. '
' → logprob: -2.539299964904785
    3. ':' → logprob: -3.164299964904785
    4. ':
' → logprob: -4.039299964904785
    5. '        
' → logprob: -5.664299964904785
    6. ',' → logprob: -5.664299964904785
    7. '\n' → logprob: -6.414299964904785
    8. '\' → logprob: -7.164299964904785
    9. '
' → logprob: -7.164299964904785
    10. '    
' → logprob: -7.289299964904785

Token 1202: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.2070920616388321
    2. ' find' → logprob: -1.707092046737671
    3. 'maximize' → logprob: -5.95709228515625
    4. '1' → logprob: -6.70709228515625
    5. 'min' → logprob: -6.95709228515625
    6. '       ' → logprob: -8.33209228515625
    7. '0' → logprob: -8.58209228515625
    8. ' minimize' → logprob: -8.58209228515625
    9. 'max' → logprob: -10.08209228515625
    10. ' maximize' → logprob: -10.58209228515625

Token 1203: ' a' (ID: 261)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.30667489767074585
    2. 'the' → logprob: -2.8066749572753906
    3. ' vx' → logprob: -3.1816749572753906
    4. 'optimal' → logprob: -3.3066749572753906
    5. 'best' → logprob: -3.4316749572753906
    6. 'self' → logprob: -3.9316749572753906
    7. 'True' → logprob: -3.9316749572753906
    8. 'v' → logprob: -4.306674957275391
    9. ' the' → logprob: -4.931674957275391
    10. 'possible' → logprob: -4.931674957275391

Token 1204: ' feasible' (ID: 58866)
  Prédit: ' feasible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' feasible' → logprob: -0.10843063145875931
    2. 'fe' → logprob: -3.3584306240081787
    3. 'valid' → logprob: -3.7334306240081787
    4. ' valid' → logprob: -4.358430862426758
    5. 'possible' → logprob: -4.858430862426758
    6. 'vx' → logprob: -4.858430862426758
    7. 'value' → logprob: -5.858430862426758
    8. 'v' → logprob: -6.608430862426758
    9. 'vi' → logprob: -6.858430862426758
    10. 'good' → logprob: -7.108430862426758

Token 1205: ' parab' (ID: 101123)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.10047926008701324
    2. ' vx' → logprob: -2.3504793643951416
    3. 'value' → logprob: -8.600479125976562
    4. ' value' → logprob: -9.725479125976562
    5. 'v' → logprob: -11.475479125976562
    6. ' ' → logprob: -11.475479125976562
    7. '   ' → logprob: -13.725479125976562
    8. ' 
' → logprob: -13.725479125976562
    9. '```' → logprob: -13.975479125976562
    10. ' solution' → logprob: -14.350479125976562

Token 1206: 'ola' (ID: 5204)
  Prédit: 'ola'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ola' → logprob: -0.06411284953355789
    2. ')' → logprob: -3.064112901687622
    3. 'ol' → logprob: -5.564112663269043
    4. 'o' → logprob: -6.189112663269043
    5. 'e' → logprob: -6.564112663269043
    6. 'ole' → logprob: -6.689112663269043
    7. 'v' → logprob: -6.814112663269043
    8. 'n' → logprob: -6.939112663269043
    9. 'oly' → logprob: -6.939112663269043
    10. 'x' → logprob: -7.564112663269043

Token 1207: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14239872992038727
    2. ':' → logprob: -2.1423988342285156
    3. '
' → logprob: -5.392398834228516
    4. ':
' → logprob: -5.642398834228516
    5. '        
' → logprob: -5.767398834228516
    6. ',' → logprob: -7.142398834228516
    7. '   ' → logprob: -7.267398834228516
    8. ' for' → logprob: -7.767398834228516
    9. '.' → logprob: -7.892398834228516
    10. ' with' → logprob: -8.017398834228516

Token 1208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047213319689035416
    2. '        
' → logprob: -3.797213315963745
    3. '
' → logprob: -3.922213315963745
    4. '	' → logprob: -6.797213554382324
    5. '    
' → logprob: -7.297213554382324
    6. '		
' → logprob: -7.922213554382324
    7. ' 
' → logprob: -8.297213554382324
    8. '        ' → logprob: -8.422213554382324
    9. '   ' → logprob: -8.547213554382324
    10. '\n' → logprob: -8.547213554382324

Token 1209: ' left' (ID: 3561)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004345856141299009
    2. '
' → logprob: -5.754345893859863
    3. '        
' → logprob: -7.254345893859863
    4. '	' → logprob: -8.879345893859863
    5. '   ' → logprob: -9.754345893859863
    6. '\n' → logprob: -10.129345893859863
    7. ' 
' → logprob: -10.254345893859863
    8. ' ' → logprob: -10.504345893859863
    9. '           ' → logprob: -10.629345893859863
    10. '\t' → logprob: -10.879345893859863

Token 1210: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31975698471069336
    2. ' =' → logprob: -1.8197569847106934
    3. ',' → logprob: -2.1947569847106934
    4. ' ,' → logprob: -9.319757461547852
    5. ' ' → logprob: -10.069757461547852
    6. '<|end|>' → logprob: -10.569757461547852
    7. ')' → logprob: -11.444757461547852
    8. ':' → logprob: -11.694757461547852
    9. '.' → logprob: -11.819757461547852
    10. '    ' → logprob: -11.944757461547852

Token 1211: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0006282062386162579
    2. ' right' → logprob: -7.3756279945373535
    3. 'self' → logprob: -14.375628471374512
    4. '=' → logprob: -14.625628471374512
    5. '   ' → logprob: -15.000628471374512
    6. 'initial' → logprob: -16.250627517700195
    7. '	right' → logprob: -16.875627517700195
    8. '
' → logprob: -17.000627517700195
    9. ',right' → logprob: -17.000627517700195
    10. '       ' → logprob: -17.875627517700195

Token 1212: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313265860080719
    2. ' =' → logprob: -1.3132658004760742
    3. ' ' → logprob: -13.188265800476074
    4. ',' → logprob: -13.188265800476074
    5. '    ' → logprob: -16.06326675415039
    6. '<|end|>' → logprob: -17.06326675415039
    7. '=
' → logprob: -17.18826675415039
    8. '=

' → logprob: -17.31326675415039
    9. '   ' → logprob: -17.56326675415039
    10. ' =
' → logprob: -17.68826675415039

Token 1213: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16869772970676422
    2. '0' → logprob: -1.918697714805603
    3. 'self' → logprob: -4.793697834014893
    4. 'epsilon' → logprob: -9.418697357177734
    5. ' ' → logprob: -9.918697357177734
    6. ' self' → logprob: -11.418697357177734
    7. 'eps' → logprob: -12.293697357177734
    8. '   ' → logprob: -12.918697357177734
    9. '10' → logprob: -13.418697357177734
    10. 'EPS' → logprob: -14.543697357177734

Token 1214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28338053822517395
    2. '0' → logprob: -1.4083805084228516
    3. 'self' → logprob: -6.158380508422852
    4. 'epsilon' → logprob: -9.533380508422852
    5. ' ' → logprob: -10.658380508422852
    6. ' self' → logprob: -12.408380508422852
    7. 'eps' → logprob: -12.658380508422852
    8. '   ' → logprob: -13.345880508422852
    9. '10' → logprob: -13.658380508422852
    10. '=' → logprob: -13.970880508422852

Token 1215: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.007587933447211981
    2. '.' → logprob: -5.257587909698486
    3. ',' → logprob: -7.007587909698486
    4. '0' → logprob: -7.382587909698486
    5. '
' → logprob: -8.257588386535645
    6. '-' → logprob: -8.507588386535645
    7. '=' → logprob: -9.382588386535645
    8. '.e' → logprob: -9.632588386535645
    9. ':' → logprob: -10.382588386535645
    10. '```' → logprob: -10.507588386535645

Token 1216: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.3856492842023727e-06
    2. '7' → logprob: -15.000000953674316
    3. '
' → logprob: -15.250000953674316
    4. ' -' → logprob: -16.312501907348633
    5. '{-' → logprob: -16.375001907348633
    6. 'e' → logprob: -16.437501907348633
    7. '```' → logprob: -16.562501907348633
    8. '   ' → logprob: -16.750001907348633
    9. '-
' → logprob: -16.875001907348633
    10. '       ' → logprob: -17.562501907348633

Token 1217: '10' (ID: 702)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02522912807762623
    2. '9' → logprob: -5.150228977203369
    3. '15' → logprob: -5.150228977203369
    4. '14' → logprob: -5.400228977203369
    5. '12' → logprob: -5.525228977203369
    6. '10' → logprob: -5.525228977203369
    7. '8' → logprob: -7.650228977203369
    8. '7' → logprob: -8.525229454040527
    9. '20' → logprob: -9.650229454040527
    10. '30' → logprob: -10.900229454040527

Token 1218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009246804984286427
    2. ' ,' → logprob: -7.000924587249756
    3. '       ' → logprob: -12.000925064086914
    4. ',
' → logprob: -12.500925064086914
    5. ',self' → logprob: -14.000925064086914
    6. ',right' → logprob: -14.625925064086914
    7. '   ' → logprob: -15.000925064086914
    8. '```' → logprob: -15.500925064086914
    9. '        ' → logprob: -16.000925064086914
    10. '    ' → logprob: -16.125925064086914

Token 1219: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -3.4121114822482923e-06
    2. ' initial' → logprob: -12.625003814697266
    3. '(initial' → logprob: -18.000003814697266
    4. '	initial' → logprob: -18.375003814697266
    5. 'max' → logprob: -18.875003814697266
    6. 'input' → logprob: -19.125003814697266
    7. 'ini' → logprob: -19.500003814697266
    8. 'self' → logprob: -19.625003814697266
    9. 'INITIAL' → logprob: -19.750003814697266
    10. '   ' → logprob: -20.125003814697266

Token 1220: '_speed' (ID: 43208)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.4061553478240967
    2. '_speed' → logprob: -1.4061553478240967
    3. 'initial' → logprob: -3.1561553478240967
    4. '10' → logprob: -4.156155586242676
    5. '-' → logprob: -4.281155586242676
    6. '5' → logprob: -4.531155586242676
    7. '+' → logprob: -7.031155586242676
    8. '9' → logprob: -7.031155586242676
    9. '7' → logprob: -7.156155586242676
    10. '_' → logprob: -7.281155586242676

Token 1221: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.260542094707489
    2. '
' → logprob: -2.010542154312134
    3. '        
' → logprob: -3.260542154312134
    4. '    
' → logprob: -3.510542154312134
    5. '  
' → logprob: -4.760541915893555
    6. ' 
' → logprob: -5.260541915893555
    7. '<|end|>' → logprob: -5.760541915893555
    8. '   ' → logprob: -6.135541915893555
    9. '\n' → logprob: -6.885541915893555
    10. ':' → logprob: -7.010541915893555

Token 1222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03618408367037773
    2. '
' → logprob: -3.411184072494507
    3. '   ' → logprob: -6.911184310913086
    4. '	while' → logprob: -7.411184310913086
    5. '        
' → logprob: -7.786184310913086
    6. ' while' → logprob: -8.161184310913086
    7. '    
' → logprob: -9.661184310913086
    8. '	' → logprob: -10.036184310913086
    9. 'while' → logprob: -10.036184310913086
    10. '```' → logprob: -10.786184310913086

Token 1223: ' feasible' (ID: 58866)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.05570118501782417
    2. '       ' → logprob: -3.05570125579834
    3. 'found' → logprob: -5.80570125579834
    4. ' while' → logprob: -6.05570125579834
    5. 'best' → logprob: -6.93070125579834
    6. 'result' → logprob: -7.55570125579834
    7. 'res' → logprob: -9.80570125579834
    8. 'fe' → logprob: -9.93070125579834
    9. 'for' → logprob: -10.55570125579834
    10. '   ' → logprob: -10.80570125579834

Token 1224: '_found' (ID: 50825)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06641554087400436
    2. '=' → logprob: -2.816415548324585
    3. '_found' → logprob: -6.066415309906006
    4. ':' → logprob: -6.691415309906006
    5. ' ' → logprob: -7.816415309906006
    6. ',' → logprob: -8.566415786743164
    7. '_' → logprob: -9.691415786743164
    8. '   ' → logprob: -10.191415786743164
    9. '_possible' → logprob: -10.816415786743164
    10. '.' → logprob: -10.816415786743164

Token 1225: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47409453988075256
    2. '=' → logprob: -0.9740945100784302
    3. ' ' → logprob: -11.59909439086914
    4. '=True' → logprob: -12.34909439086914
    5. ',' → logprob: -13.59909439086914
    6. '=False' → logprob: -13.59909439086914
    7. '  ' → logprob: -14.59909439086914
    8. ':' → logprob: -14.59909439086914
    9. '   ' → logprob: -14.84909439086914
    10. '    ' → logprob: -15.97409439086914

Token 1226: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -6.2729995988775045e-06
    2. ' False' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.2500057220459
    4. 'True' → logprob: -20.0000057220459
    5. 'None' → logprob: -20.2500057220459
    6. 'false' → logprob: -21.0000057220459
    7. '(False' → logprob: -22.1250057220459
    8. '=False' → logprob: -23.0000057220459
    9. '    ' → logprob: -23.2500057220459
    10. '0' → logprob: -23.8750057220459

Token 1227: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16459809243679047
    2. '
' → logprob: -1.9145981073379517
    3. '        
' → logprob: -6.414597988128662
    4. '	' → logprob: -6.914597988128662
    5. '
' → logprob: -7.914597988128662
    6. '		
' → logprob: -8.03959846496582
    7. '\n' → logprob: -8.41459846496582
    8. '    
' → logprob: -9.03959846496582
    9. '   ' → logprob: -9.53959846496582
    10. ',' → logprob: -9.53959846496582

Token 1228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006650181603617966
    2. 'while' → logprob: -7.750665187835693
    3. ' while' → logprob: -8.750664710998535
    4. '   ' → logprob: -10.500664710998535
    5. '	while' → logprob: -10.625664710998535
    6. '	' → logprob: -10.875664710998535
    7. '	   ' → logprob: -13.000664710998535
    8. '           ' → logprob: -13.625664710998535
    9. '        
' → logprob: -14.250664710998535
    10. ' for' → logprob: -15.625664710998535

Token 1229: ' def' (ID: 1056)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.004153310786932707
    2. '       ' → logprob: -5.504153251647949
    3. 'for' → logprob: -9.75415325164795
    4. ' while' → logprob: -11.00415325164795
    5. '
' → logprob: -16.254154205322266
    6. '	while' → logprob: -16.504154205322266
    7. '   ' → logprob: -18.129154205322266
    8. '        
' → logprob: -18.879154205322266
    9. 'While' → logprob: -19.129154205322266
    10. 'wh' → logprob: -19.504154205322266

Token 1230: ' check' (ID: 2371)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.057884689420461655
    2. 'check' → logprob: -3.807884693145752
    3. 'fe' → logprob: -4.307884693145752
    4. 'can' → logprob: -5.057884693145752
    5. 'height' → logprob: -5.307884693145752
    6. 'func' → logprob: -5.682884693145752
    7. 'par' → logprob: -6.682884693145752
    8. 'is' → logprob: -6.682884693145752
    9. 'valid' → logprob: -7.182884693145752
    10. ' parab' → logprob: -7.307884693145752

Token 1231: '_v' (ID: 5390)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.07070890069007874
    2. '(mid' → logprob: -2.695708990097046
    3. '(left' → logprob: -8.195709228515625
    4. '(' → logprob: -8.445709228515625
    5. '(x' → logprob: -9.070709228515625
    6. 'mid' → logprob: -9.820709228515625
    7. '(value' → logprob: -9.945709228515625
    8. '(m' → logprob: -11.195709228515625
    9. '(right' → logprob: -12.445709228515625
    10. '(l' → logprob: -12.570709228515625

Token 1232: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9027791495318525e-05
    2. '(x' → logprob: -11.125019073486328
    3. 'right' → logprob: -13.625019073486328
    4. '
' → logprob: -14.875019073486328
    5. ' x' → logprob: -14.875019073486328
    6. '(left' → logprob: -14.875019073486328
    7. '_x' → logprob: -15.250019073486328
    8. '(' → logprob: -15.250019073486328
    9. 'left' → logprob: -15.250019073486328
    10. '(v' → logprob: -16.000019073486328

Token 1233: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.001189510803669691
    2. '(mid' → logprob: -6.876189708709717
    3. '(' → logprob: -9.376189231872559
    4. '(left' → logprob: -10.501189231872559
    5. '(x' → logprob: -10.501189231872559
    6. ' (' → logprob: -11.751189231872559
    7. '(value' → logprob: -12.626189231872559
    8. '   ' → logprob: -14.126189231872559
    9. '(right' → logprob: -14.126189231872559
    10. 'mid' → logprob: -14.501189231872559

Token 1234: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.8325677703833207e-05
    2. '_x' → logprob: -11.500028610229492
    3. '   ' → logprob: -12.125028610229492
    4. ')' → logprob: -13.250028610229492
    5. '	x' → logprob: -13.375028610229492
    6. ' x' → logprob: -13.500028610229492
    7. ':' → logprob: -13.625028610229492
    8. '```' → logprob: -14.375028610229492
    9. '_' → logprob: -14.562528610229492
    10. ' ' → logprob: -14.687528610229492

Token 1235: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00815210584551096
    2. ':' → logprob: -5.258152008056641
    3. '):
' → logprob: -6.508152008056641
    4. ')' → logprob: -6.758152008056641
    5. ' ):' → logprob: -8.38315200805664
    6. '   ' → logprob: -11.25815200805664
    7. '):
' → logprob: -11.88315200805664
    8. ',' → logprob: -12.38315200805664
    9. '       ' → logprob: -13.38315200805664
    10. ' )' → logprob: -13.75815200805664

Token 1236: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0121936798095703
    2. '       ' → logprob: -1.5121936798095703
    3. '           ' → logprob: -1.6371936798095703
    4. ' return' → logprob: -1.8871936798095703
    5. ')' → logprob: -4.38719367980957
    6. '        ' → logprob: -4.51219367980957
    7. '<|end|>' → logprob: -4.63719367980957
    8. ',' → logprob: -5.26219367980957
    9. ' ' → logprob: -5.38719367980957
    10. ':return' → logprob: -5.38719367980957

Token 1237: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' (adapté à ' vy') → logprob: -1.1533676385879517
    2. '           ' → logprob: -1.2783676385879517
    3. ' vy' → logprob: -2.278367519378662
    4. 'f' → logprob: -2.778367519378662
    5. ' f' → logprob: -2.903367519378662
    6. 'val' → logprob: -2.903367519378662
    7. 'rhs' → logprob: -3.028367519378662
    8. ' val' → logprob: -4.028367519378662
    9. 'v' → logprob: -4.278367519378662
    10. '   ' → logprob: -4.903367519378662

Token 1238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759548544883728
    2. '=' → logprob: -0.8259548544883728
    3. '=v' → logprob: -11.32595443725586
    4. ')' → logprob: -14.07595443725586
    5. 'v' → logprob: -14.45095443725586
    6. ' ' → logprob: -15.07595443725586
    7. '<|end|>' → logprob: -15.32595443725586
    8. ':' → logprob: -15.32595443725586
    9. '<|end|>' → logprob: -15.70095443725586
    10. '=True' → logprob: -16.20095443725586

Token 1239: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0003558423195499927
    2. ' length' → logprob: -8.12535572052002
    3. '(length' → logprob: -9.75035572052002
    4. '   ' → logprob: -14.12535572052002
    5. '0' → logprob: -14.50035572052002
    6. ' ' → logprob: -16.000356674194336
    7. '(' → logprob: -16.375356674194336
    8. ' (' → logprob: -17.375356674194336
    9. '	length' → logprob: -17.375356674194336
    10. '[length' → logprob: -17.500356674194336

Token 1240: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.42940962314605713
    2. '/' → logprob: -1.1794096231460571
    3. '/(' → logprob: -3.1794095039367676
    4. ' /(' → logprob: -10.679409980773926
    5. '            ' → logprob: -13.179409980773926
    6. '           ' → logprob: -13.179409980773926
    7. '          ' → logprob: -13.429409980773926
    8. '*' → logprob: -13.554409980773926
    9. ')/(' → logprob: -13.554409980773926
    10. '...' → logprob: -14.179409980773926

Token 1241: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00018029935017693788
    2. ' (' → logprob: -8.6251802444458
    3. '2' → logprob: -14.2501802444458
    4. '(
' → logprob: -17.625181198120117
    5. ' ' → logprob: -18.375181198120117
    6. '(float' → logprob: -18.375181198120117
    7. '(int' → logprob: -19.125181198120117
    8. '1' → logprob: -19.125181198120117
    9. '((' → logprob: -19.250181198120117
    10. '   ' → logprob: -19.375181198120117

Token 1242: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.380904672667384e-05
    2. '2' → logprob: -10.875033378601074
    3. ' (' → logprob: -11.125033378601074
    4. '{' → logprob: -17.75003433227539
    5. '1' → logprob: -17.87503433227539
    6. ' ' → logprob: -18.12503433227539
    7. '0' → logprob: -18.75003433227539
    8. '(two' → logprob: -18.87503433227539
    9. '(int' → logprob: -19.00003433227539
    10. '[' → logprob: -19.00003433227539

Token 1243: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1276819258928299
    2. ' *' → logprob: -2.1276819705963135
    3. 'vx' → logprob: -8.002681732177734
    4. ' vx' → logprob: -8.752681732177734
    5. '*v' → logprob: -9.252681732177734
    6. ')' → logprob: -9.377681732177734
    7. ' ' → logprob: -11.127681732177734
    8. '
' → logprob: -11.252681732177734
    9. '```' → logprob: -11.377681732177734
    10. '`' → logprob: -11.502681732177734

Token 1244: ' vx' (ID: 93588)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -9.014684110297821e-06
    2. ' vx' → logprob: -11.625008583068848
    3. '```' → logprob: -18.625009536743164
    4. 'v' → logprob: -18.875009536743164
    5. '   ' → logprob: -19.125009536743164
    6. 'vz' → logprob: -19.500009536743164
    7. 'vw' → logprob: -19.750009536743164
    8. 'vy' → logprob: -19.875009536743164
    9. 'vk' → logprob: -20.125009536743164
    10. '
' → logprob: -20.125009536743164

Token 1245: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008647660724818707
    2. ')
' → logprob: -4.758647441864014
    3. '           ' → logprob: -10.758647918701172
    4. ' )' → logprob: -12.258647918701172
    5. '       ' → logprob: -13.008647918701172
    6. ')
' → logprob: -13.633647918701172
    7. ')return' → logprob: -13.883647918701172
    8. ')

' → logprob: -14.883647918701172
    9. '<|end|>' → logprob: -15.008647918701172
    10. ' )
' → logprob: -15.258647918701172

Token 1246: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019741462543606758
    2. '       ' → logprob: -4.519741535186768
    3. '<|end|>' → logprob: -5.019741535186768
    4. ')' → logprob: -8.14474105834961
    5. '            
' → logprob: -8.51974105834961
    6. ' 
' → logprob: -8.64474105834961
    7. '<|end|>' → logprob: -8.76974105834961
    8. '               ' → logprob: -8.89474105834961
    9. ' ' → logprob: -8.89474105834961
    10. ' return' → logprob: -9.01974105834961

Token 1247: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1056121215224266
    2. 'speed' → logprob: -3.23061203956604
    3. 'if' (adapté à ' if') → logprob: -3.85561203956604
    4. '           ' → logprob: -3.98061203956604
    5. 'total' → logprob: -4.855612277984619
    6. 'lhs' → logprob: -5.855612277984619
    7. 'vel' → logprob: -6.355612277984619
    8. 'velocity' → logprob: -6.480612277984619
    9. 'v' → logprob: -6.855612277984619
    10. 'left' → logprob: -6.980612277984619

Token 1248: ' vy' (ID: 14190)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.01736612431704998
    2. ' vx' → logprob: -5.0173659324646
    3. 'vy' → logprob: -5.3923659324646
    4. 'math' → logprob: -5.7673659324646
    5. '(v' → logprob: -6.6423659324646
    6. '   ' → logprob: -7.2673659324646
    7. ' math' → logprob: -8.642366409301758
    8. 'v' → logprob: -8.892366409301758
    9. '(math' → logprob: -8.892366409301758
    10. ' (' → logprob: -9.267366409301758

Token 1249: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5010429620742798
    2. ' >' → logprob: -1.2510429620742798
    3. '<=' → logprob: -2.6260428428649902
    4. '>' → logprob: -3.3760428428649902
    5. '*' → logprob: -7.62604284286499
    6. '**' → logprob: -7.75104284286499
    7. ')' → logprob: -8.751043319702148
    8. ' *' → logprob: -9.876043319702148
    9. ' <' → logprob: -9.876043319702148
    10. ' >=' → logprob: -10.751043319702148

Token 1250: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.625004768371582
    3. '-' → logprob: -13.875004768371582
    4. '=' → logprob: -16.250003814697266
    5. '1' → logprob: -17.250003814697266
    6. ')' → logprob: -18.000003814697266
    7. ' -' → logprob: -18.125003814697266
    8. '   ' → logprob: -18.375003814697266
    9. '[' → logprob: -19.375003814697266
    10. '```' → logprob: -19.625003814697266

Token 1251: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.500001907348633
    3. '-' → logprob: -15.750001907348633
    4. '1' → logprob: -15.875001907348633
    5. '=' → logprob: -15.875001907348633
    6. ')' → logprob: -17.750001907348633
    7. '   ' → logprob: -17.750001907348633
    8. '[' → logprob: -18.750001907348633
    9. '۰' → logprob: -19.312501907348633
    10. '```' → logprob: -19.437501907348633

Token 1252: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.21843934059143066
    2. ':' → logprob: -2.0934393405914307
    3. '           ' → logprob: -3.7184393405914307
    4. ':
' → logprob: -3.8434393405914307
    5. '<|end|>' → logprob: -4.718439102172852
    6. ')' → logprob: -5.343439102172852
    7. ':return' → logprob: -5.343439102172852
    8. '               ' → logprob: -5.343439102172852
    9. '):' → logprob: -7.093439102172852
    10. '):
' → logprob: -7.343439102172852

Token 1253: '               ' (ID: 506)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5563614964485168
    2. ':
' → logprob: -1.556361436843872
    3. '           ' → logprob: -2.056361436843872
    4. ':' → logprob: -2.556361436843872
    5. '               ' → logprob: -5.181361675262451
    6. ' :' → logprob: -6.556361675262451
    7. ':return' → logprob: -6.806361675262451
    8. ' :
' → logprob: -7.306361675262451
    9. 'or' → logprob: -7.556361675262451
    10. ' and' → logprob: -8.681361198425293

Token 1254: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03415089100599289
    2. ' return' → logprob: -3.5341508388519287
    3. '               ' → logprob: -5.534151077270508
    4. 'False' → logprob: -7.784151077270508
    5. '                   ' → logprob: -11.659151077270508
    6. '   ' → logprob: -12.034151077270508
    7. '           ' → logprob: -12.034151077270508
    8. ' False' → logprob: -12.784151077270508
    9. '	return' → logprob: -14.284151077270508
    10. 'false' → logprob: -14.784151077270508

Token 1255: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.981667537620524e-06
    2. ' False' → logprob: -13.250001907348633
    3. 'True' → logprob: -16.250001907348633
    4. '(False' → logprob: -20.125001907348633
    5. '0' → logprob: -21.500001907348633
    6. 'false' → logprob: -22.375001907348633
    7. '=False' → logprob: -23.250001907348633
    8. 'None' → logprob: -23.375001907348633
    9. '   ' → logprob: -24.375001907348633
    10. 'F' → logprob: -25.500001907348633

Token 1256: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011024950072169304
    2. '<|end|>' → logprob: -5.3860249519348145
    3. ' ' → logprob: -6.6360249519348145
    4. ' 
' → logprob: -6.8860249519348145
    5. '            ' → logprob: -7.0110249519348145
    6. ')' → logprob: -7.6360249519348145
    7. '            
' → logprob: -7.8860249519348145
    8. ' return' → logprob: -8.011024475097656
    9. '          ' → logprob: -8.261024475097656
    10. '
' → logprob: -8.511024475097656

Token 1257: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008458409574814141
    2. '       ' → logprob: -8.125845909118652
    3. '            
' → logprob: -9.000845909118652
    4. '<|end|>' → logprob: -9.375845909118652
    5. ' return' → logprob: -10.000845909118652
    6. '          ' → logprob: -10.375845909118652
    7. '    
' → logprob: -10.375845909118652
    8. ' 
' → logprob: -10.500845909118652
    9. '        
' → logprob: -10.625845909118652
    10. '            ' → logprob: -10.750845909118652

Token 1258: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13707569241523743
    2. 'return' → logprob: -2.762075662612915
    3. ' return' → logprob: -2.762075662612915
    4. ' if' → logprob: -7.387075901031494
    5. 'if' (adapté à ' if') → logprob: -8.012075424194336
    6. 'v' → logprob: -8.762075424194336
    7. 'import' → logprob: -9.262075424194336
    8. '
' → logprob: -9.512075424194336
    9. 'velocity' → logprob: -9.887075424194336
    10. 'value' → logprob: -10.262075424194336

Token 1259: ' vx' (ID: 93588)
  Prédit: ' vx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vx' → logprob: -0.36423495411872864
    2. 'vx' → logprob: -1.2392349243164062
    3. '(v' → logprob: -5.114234924316406
    4. ' math' → logprob: -5.614234924316406
    5. ' (' → logprob: -5.739234924316406
    6. ' vy' → logprob: -7.489234924316406
    7. 'math' → logprob: -7.614234924316406
    8. '(' → logprob: -7.614234924316406
    9. 'vy' → logprob: -7.614234924316406
    10. '   ' → logprob: -8.364234924316406

Token 1260: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.008599212393164635
    2. ' **' → logprob: -5.383599281311035
    3. '*v' → logprob: -6.008599281311035
    4. '*' → logprob: -6.633599281311035
    5. ' *' → logprob: -9.883599281311035
    6. 'v' → logprob: -10.508599281311035
    7. ' <=' → logprob: -10.883599281311035
    8. '>' → logprob: -11.008599281311035
    9. '<=' → logprob: -11.383599281311035
    10. '```' → logprob: -11.508599281311035

Token 1261: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001805377542041242
    2. ' ' → logprob: -8.6251802444458
    3. '²' → logprob: -15.7501802444458
    4. '=' → logprob: -16.250181198120117
    5. ')' → logprob: -16.250181198120117
    6. '
' → logprob: -16.750181198120117
    7. '**' → logprob: -16.750181198120117
    8. '{' → logprob: -16.750181198120117
    9. '```' → logprob: -16.875181198120117
    10. '   ' → logprob: -17.000181198120117

Token 1262: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759450793266296
    2. ' +' → logprob: -0.8259450793266296
    3. ' plus' → logprob: -12.700944900512695
    4. '<|end|>' → logprob: -14.700944900512695
    5. '```' → logprob: -14.825944900512695
    6. '>' → logprob: -14.825944900512695
    7. ')' → logprob: -15.075944900512695
    8. ')+' → logprob: -15.075944900512695
    9. '+
' → logprob: -15.950944900512695
    10. ' ' → logprob: -16.200944900512695

Token 1263: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -2.7968066206085496e-05
    2. ' vy' → logprob: -10.500027656555176
    3. 'v' → logprob: -15.875027656555176
    4. 'vyk' → logprob: -16.500028610229492
    5. '   ' → logprob: -16.750028610229492
    6. 'wy' → logprob: -17.375028610229492
    7. 'vi' → logprob: -17.625028610229492
    8. 'Vy' → logprob: -18.125028610229492
    9. ' ' → logprob: -18.125028610229492
    10. 'uy' → logprob: -18.625028610229492

Token 1264: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.00035536551149562
    2. '2' → logprob: -9.00035572052002
    3. '<|end|>' → logprob: -9.37535572052002
    4. ' **' → logprob: -9.62535572052002
    5. '*' → logprob: -10.37535572052002
    6. '<=' → logprob: -11.25035572052002
    7. '```' → logprob: -11.62535572052002
    8. '>' → logprob: -11.62535572052002
    9. '<|end|>' → logprob: -12.62535572052002
    10. ' <=' → logprob: -12.87535572052002

Token 1265: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -10.875019073486328
    3. '{' → logprob: -16.000019073486328
    4. '**' → logprob: -16.000019073486328
    5. '```' → logprob: -18.000019073486328
    6. '(' → logprob: -18.125019073486328
    7. '²' → logprob: -18.375019073486328
    8. '۲' → logprob: -18.500019073486328
    9. '<|end|>' → logprob: -19.500019073486328
    10. '<|end|>' → logprob: -19.625019073486328

Token 1266: ' >' (ID: 1424)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5650883316993713
    2. '>' → logprob: -1.4400882720947266
    3. ' <=' → logprob: -2.0650882720947266
    4. ' >' → logprob: -2.6900882720947266
    5. '-' → logprob: -9.690088272094727
    6. ' -' → logprob: -11.190088272094727
    7. '">' → logprob: -11.690088272094727
    8. ' ' → logprob: -12.565088272094727
    9. '   ' → logprob: -12.690088272094727
    10. '```' → logprob: -13.315088272094727

Token 1267: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.06197866424918175
    2. ' initial' → logprob: -2.811978578567505
    3. '   ' → logprob: -11.936978340148926
    4. '(initial' → logprob: -12.936978340148926
    5. '	initial' → logprob: -13.311978340148926
    6. '           ' → logprob: -15.561978340148926
    7. ' ' → logprob: -15.936978340148926
    8. ' (' → logprob: -16.936979293823242
    9. '  ' → logprob: -17.561979293823242
    10. '.initial' → logprob: -17.561979293823242

Token 1268: '_speed' (ID: 43208)
  Prédit: '_speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -0.00014120421838015318
    2. 'speed' → logprob: -8.875141143798828
    3. '```' → logprob: -14.500141143798828
    4. '_s' → logprob: -15.000141143798828
    5. '_' → logprob: -15.625141143798828
    6. 'Speed' → logprob: -16.000141143798828
    7. '_velocity' → logprob: -17.500141143798828
    8. '_SPEED' → logprob: -17.625141143798828
    9. '_size' → logprob: -17.875141143798828
    10. 's' → logprob: -18.000141143798828

Token 1269: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.01224273070693016
    2. '2' → logprob: -4.887242794036865
    3. ' **' → logprob: -5.512242794036865
    4. '*' → logprob: -8.512242317199707
    5. '<|end|>' → logprob: -9.262242317199707
    6. '²' → logprob: -9.512242317199707
    7. '_squared' → logprob: -9.512242317199707
    8. '^' → logprob: -9.887242317199707
    9. ' ' → logprob: -10.262242317199707
    10. '<|end|>' → logprob: -10.762242317199707

Token 1270: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9743012671824545e-05
    2. '**' → logprob: -11.500020027160645
    3. ' ' → logprob: -11.625020027160645
    4. '²' → logprob: -15.125020027160645
    5. '```' → logprob: -15.875020027160645
    6. '۲' → logprob: -16.125019073486328
    7. '*' → logprob: -17.000019073486328
    8. '22' → logprob: -17.250019073486328
    9. '<|end|>' → logprob: -17.875019073486328
    10. '٢' → logprob: -17.875019073486328

Token 1271: ' +' (ID: 659)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7542097568511963
    2. ':' → logprob: -1.2542097568511963
    3. ':return' → logprob: -2.3792097568511963
    4. ':
' → logprob: -2.7542097568511963
    5. ' and' → logprob: -3.3792097568511963
    6. ' or' → logprob: -4.129209518432617
    7. ' return' → logprob: -4.504209518432617
    8. '               ' → logprob: -4.504209518432617
    9. '            ' → logprob: -5.504209518432617
    10. ')' → logprob: -5.879209518432617

Token 1272: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.013215292245149612
    2. ' self' → logprob: -4.513215065002441
    3. '1' → logprob: -6.138215065002441
    4. ' ' → logprob: -12.638215065002441
    5. '   ' → logprob: -13.263215065002441
    6. '	self' → logprob: -13.763215065002441
    7. '(self' → logprob: -16.013216018676758
    8. '-self' → logprob: -16.388216018676758
    9. '       ' → logprob: -17.138216018676758
    10. '  ' → logprob: -17.513216018676758

Token 1273: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03807798773050308
    2. '1' → logprob: -3.2880780696868896
    3. ' self' → logprob: -10.288078308105469
    4. '(self' → logprob: -13.788078308105469
    5. '-self' → logprob: -14.788078308105469
    6. '0' → logprob: -14.913078308105469
    7. '   ' → logprob: -15.663078308105469
    8. '	self' → logprob: -15.663078308105469
    9. '-' → logprob: -16.16307830810547
    10. ' ' → logprob: -16.41307830810547

Token 1274: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.25194206833839417
    2. '-' → logprob: -1.5019420385360718
    3. '-e' → logprob: -12.376941680908203
    4. '4' → logprob: -12.376941680908203
    5. '7' → logprob: -13.376941680908203
    6. '2' → logprob: -13.626941680908203
    7. ' -' → logprob: -14.626941680908203
    8. '{-' → logprob: -14.626941680908203
    9. '3' → logprob: -15.876941680908203
    10. '   ' → logprob: -16.001941680908203

Token 1275: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9361264946837764e-07
    2. '{-' → logprob: -17.375
    3. ' -' → logprob: -17.875
    4. '```' → logprob: -17.875
    5. '(-' → logprob: -18.125
    6. '**' → logprob: -19.5
    7. 'e' → logprob: -19.75
    8. '-
' → logprob: -20.25
    9. '``' → logprob: -20.375
    10. '[-' → logprob: -20.375

Token 1276: '14' (ID: 1265)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.8418064117431641
    2. '10' → logprob: -1.466806411743164
    3. '9' → logprob: -1.716806411743164
    4. '14' → logprob: -2.341806411743164
    5. '8' → logprob: -3.216806411743164
    6. '7' → logprob: -4.591806411743164
    7. '13' → logprob: -4.966806411743164
    8. '11' → logprob: -5.716806411743164
    9. '15' → logprob: -6.216806411743164
    10. '6' → logprob: -9.841806411743164

Token 1277: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09285369515419006
    2. '           ' → logprob: -3.3428537845611572
    3. ':
' → logprob: -3.5928537845611572
    4. ':return' → logprob: -4.217853546142578
    5. '               ' → logprob: -4.842853546142578
    6. ' or' → logprob: -7.217853546142578
    7. ' and' → logprob: -7.467853546142578
    8. ' :' → logprob: -7.467853546142578
    9. '):' → logprob: -7.967853546142578
    10. ')' → logprob: -8.217853546142578

Token 1278: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05971387401223183
    2. '           ' → logprob: -2.934713840484619
    3. ' return' → logprob: -5.434713840484619
    4. ' False' → logprob: -9.059714317321777
    5. 'return' → logprob: -9.309714317321777
    6. 'False' → logprob: -9.809714317321777
    7. '            ' → logprob: -10.059714317321777
    8. '                   ' → logprob: -10.559714317321777
    9. ' ' → logprob: -10.809714317321777
    10. '   ' → logprob: -10.809714317321777

Token 1279: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.47803014516830444
    2. 'return' (adapté à ' return') → logprob: -0.9780301451683044
    3. '               ' → logprob: -5.728030204772949
    4. '                   ' → logprob: -7.478030204772949
    5. 'False' → logprob: -9.72803020477295
    6. '           ' → logprob: -9.85303020477295
    7. ' False' → logprob: -12.35303020477295
    8. '	return' → logprob: -12.47803020477295
    9. '{return' → logprob: -12.47803020477295
    10. '   ' → logprob: -14.10303020477295

Token 1280: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.339278580620885e-06
    2. ' False' → logprob: -13.000001907348633
    3. '   ' → logprob: -20.500001907348633
    4. '(False' → logprob: -20.875001907348633
    5. 'True' → logprob: -21.125001907348633
    6. 'false' → logprob: -22.000001907348633
    7. '       ' → logprob: -23.375001907348633
    8. '=False' → logprob: -23.875001907348633
    9. '0' → logprob: -24.125001907348633
    10. '           ' → logprob: -24.250001907348633

Token 1281: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010010345838963985
    2. '
' → logprob: -5.135010242462158
    3. '       ' → logprob: -6.885010242462158
    4. '    
' → logprob: -7.385010242462158
    5. '<|end|>' → logprob: -7.385010242462158
    6. '            
' → logprob: -8.135010719299316
    7. '  
' → logprob: -8.510010719299316
    8. '\n' → logprob: -8.885010719299316
    9. ' return' → logprob: -8.885010719299316
    10. ' 
' → logprob: -9.010010719299316

Token 1282: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007762550376355648
    2. '            
' → logprob: -6.132762432098389
    3. '    
' → logprob: -6.632762432098389
    4. '       ' → logprob: -6.632762432098389
    5. '               ' → logprob: -7.257762432098389
    6. ' 
' → logprob: -7.382762432098389
    7. '        
' → logprob: -8.132762908935547
    8. '
' → logprob: -8.382762908935547
    9. '            ' → logprob: -8.632762908935547
    10. '   
' → logprob: -8.757762908935547

Token 1283: ' traj' (ID: 47978)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28944671154022217
    2. '           ' → logprob: -1.4144467115402222
    3. ' trajectory' → logprob: -5.914446830749512
    4. '
' → logprob: -6.414446830749512
    5. 'trajectory' → logprob: -6.414446830749512
    6. 'traj' (adapté à ' traj') → logprob: -8.039446830749512
    7. '        
' → logprob: -8.289446830749512
    8. '   ' → logprob: -8.414446830749512
    9. 'par' → logprob: -8.539446830749512
    10. ' traj' → logprob: -8.539446830749512

Token 1284: ' =' (ID: 314)
  Prédit: 'ector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ector' → logprob: -1.0764204263687134
    2. ' =' → logprob: -1.2014204263687134
    3. '       ' → logprob: -1.8264204263687134
    4. '=' → logprob: -2.701420307159424
    5. 'ect' → logprob: -2.951420307159424
    6. '   ' → logprob: -3.576420307159424
    7. 'actory' → logprob: -3.826420307159424
    8. 'ec' → logprob: -4.701420307159424
    9. '           ' → logprob: -5.576420307159424
    10. 'jectory' → logprob: -5.701420307159424

Token 1285: ' Par' (ID: 3371)
  Prédit: 'Par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Par' → logprob: -0.0007101670489646494
    2. ' Par' → logprob: -7.2507100105285645
    3. 'par' → logprob: -16.000709533691406
    4. 'Parity' → logprob: -16.250709533691406
    5. '_par' → logprob: -18.000709533691406
    6. '   ' → logprob: -18.750709533691406
    7. 'Por' → logprob: -19.250709533691406
    8. ' par' → logprob: -19.750709533691406
    9. 'Pr' → logprob: -20.500709533691406
    10. '       ' → logprob: -20.625709533691406

Token 1286: 'abolic' (ID: 39100)
  Prédit: 'abolic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abolic' → logprob: -0.0007162463734857738
    2. 'abol' → logprob: -7.500716209411621
    3. 'ab' → logprob: -8.875716209411621
    4. 'a' → logprob: -11.625716209411621
    5. 'bol' → logprob: -12.125716209411621
    6. 'abo' → logprob: -13.375716209411621
    7. '```' → logprob: -13.625716209411621
    8. 'abor' → logprob: -14.000716209411621
    9. 'abil' → logprob: -14.375716209411621
    10. 'par' → logprob: -14.500716209411621

Token 1287: 'Trajectory' (ID: 137663)
  Prédit: 'Trajectory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Trajectory' → logprob: -1.2664456789934775e-06
    2. 'trajectory' → logprob: -13.750000953674316
    3. '
' → logprob: -16.500001907348633
    4. 'T' → logprob: -17.625001907348633
    5. ' trajectory' → logprob: -17.750001907348633
    6. ')' → logprob: -18.000001907348633
    7. ' Tra' → logprob: -18.375001907348633
    8. 'Tra' → logprob: -18.625001907348633
    9. '`' → logprob: -19.000001907348633
    10. '(' → logprob: -19.250001907348633

Token 1288: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.5762039422988892
    2. 'length' → logprob: -0.8262039422988892
    3. ' length' → logprob: -8.326204299926758
    4. '           ' → logprob: -11.576204299926758
    5. '(' → logprob: -12.201204299926758
    6. '[length' → logprob: -12.576204299926758
    7. '               ' → logprob: -13.326204299926758
    8. ',length' → logprob: -13.326204299926758
    9. '	length' → logprob: -15.076204299926758
    10. ' (' → logprob: -15.326204299926758

Token 1289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.043078898685053e-05
    2. ',v' → logprob: -9.500090599060059
    3. ',
' → logprob: -12.250090599060059
    4. '           ' → logprob: -13.125090599060059
    5. ' ,' → logprob: -13.125090599060059
    6. ',x' → logprob: -13.750090599060059
    7. '       ' → logprob: -13.875090599060059
    8. ')' → logprob: -14.250090599060059
    9. '               ' → logprob: -14.500090599060059
    10. '<|end|>' → logprob: -14.500090599060059

Token 1290: ' vx' (ID: 93588)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.003177952254191041
    2. ' vx' → logprob: -5.753178119659424
    3. '   ' → logprob: -17.253177642822266
    4. '           ' → logprob: -17.378177642822266
    5. 'vz' → logprob: -17.628177642822266
    6. '```' → logprob: -17.628177642822266
    7. '
' → logprob: -18.003177642822266
    8. 'VX' → logprob: -18.003177642822266
    9. 'vy' → logprob: -18.128177642822266
    10. '    ' → logprob: -18.378177642822266

Token 1291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7120533811976202e-05
    2. ',
' → logprob: -11.750017166137695
    3. ' ,' → logprob: -12.000017166137695
    4. ',v' → logprob: -13.125017166137695
    5. '           ' → logprob: -15.375017166137695
    6. '       ' → logprob: -15.625017166137695
    7. ',

' → logprob: -16.250017166137695
    8. ',y' → logprob: -16.875017166137695
    9. '<|end|>' → logprob: -16.875017166137695
    10. ',user' → logprob: -17.125017166137695

Token 1292: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -8.53050296427682e-05
    2. ' vy' → logprob: -9.37508487701416
    3. 'Vy' → logprob: -16.000085830688477
    4. 'v' → logprob: -16.875085830688477
    5. '   ' → logprob: -17.000085830688477
    6. 'vx' → logprob: -17.125085830688477
    7. 'vyk' → logprob: -17.250085830688477
    8. 'uy' → logprob: -17.625085830688477
    9. '           ' → logprob: -17.625085830688477
    10. 'wy' → logprob: -17.625085830688477

Token 1293: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48745712637901306
    2. ')
' → logprob: -0.9874571561813354
    3. '           ' → logprob: -4.362457275390625
    4. '       ' → logprob: -7.737457275390625
    5. ')
' → logprob: -9.862457275390625
    6. '               ' → logprob: -9.987457275390625
    7. '                   ' → logprob: -12.612457275390625
    8. '   ' → logprob: -13.987457275390625
    9. ').' → logprob: -14.112457275390625
    10. ')`
' → logprob: -14.237457275390625

Token 1294: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011689399980241433
    2. '       ' → logprob: -9.500117301940918
    3. '   ' → logprob: -11.375117301940918
    4. '	       ' → logprob: -11.375117301940918
    5. '               ' → logprob: -12.375117301940918
    6. ' for' → logprob: -12.500117301940918
    7. '<|end|>' → logprob: -12.875117301940918
    8. 'return' → logprob: -13.375117301940918
    9. ' ' → logprob: -14.000117301940918
    10. '          ' → logprob: -14.250117301940918

Token 1295: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3353745639324188
    2. 'return' (adapté à ' return') → logprob: -1.3353745937347412
    3. ' return' → logprob: -3.835374593734741
    4. 'for' → logprob: -9.21037483215332
    5. ' for' → logprob: -9.71037483215332
    6. '       ' → logprob: -10.08537483215332
    7. '   ' → logprob: -10.21037483215332
    8. 'if' → logprob: -10.96037483215332
    9. ' if' → logprob: -12.21037483215332
    10. '{return' → logprob: -12.83537483215332

Token 1296: ' traj' (ID: 47978)
  Prédit: 'traj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'traj' → logprob: -0.0004330532974563539
    2. 'all' → logprob: -7.875432968139648
    3. ' traj' → logprob: -10.500432968139648
    4. 'tra' → logprob: -10.750432968139648
    5. '   ' → logprob: -13.500432968139648
    6. 'tr' → logprob: -14.375432968139648
    7. 'not' → logprob: -14.875432968139648
    8. 'trav' → logprob: -15.500432968139648
    9. 'ob' → logprob: -15.625432968139648
    10. '           ' → logprob: -15.625432968139648

Token 1297: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -6.861651490908116e-05
    2. '.' → logprob: -9.625068664550781
    3. '.has' → logprob: -14.625068664550781
    4. ' .' → logprob: -14.875068664550781
    5. '.s' → logprob: -15.125068664550781
    6. '.can' → logprob: -15.500068664550781
    7. '.check' → logprob: -15.500068664550781
    8. ').' → logprob: -15.750068664550781
    9. '       ' → logprob: -16.12506866455078
    10. 'is' → logprob: -16.25006866455078

Token 1298: '_clear' (ID: 51408)
  Prédit: '_clear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_clear' → logprob: -5.931863051955588e-05
    2. 'clear' → logprob: -9.750059127807617
    3. '_safe' → logprob: -15.125059127807617
    4. '_' → logprob: -16.000059127807617
    5. 'Clear' → logprob: -16.125059127807617
    6. '_complete' → logprob: -16.375059127807617
    7. '_Clear' → logprob: -16.375059127807617
    8. '_c' → logprob: -16.625059127807617
    9. '```' → logprob: -16.750059127807617
    10. 's' → logprob: -16.875059127807617

Token 1299: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -5.56233171664644e-05
    2. '_' → logprob: -9.875055313110352
    3. '_o' → logprob: -13.125055313110352
    4. 'of' → logprob: -14.125055313110352
    5. ' _' → logprob: -14.875055313110352
    6. ' of' → logprob: -14.875055313110352
    7. '_for' → logprob: -16.25005531311035
    8. '_out' → logprob: -16.62505531311035
    9. '_clear' → logprob: -17.00005531311035
    10. '()' → logprob: -17.37505531311035

Token 1300: '_ob' (ID: 46416)
  Prédit: '_ob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ob' → logprob: -0.038045622408390045
    2. 'ob' → logprob: -3.288045644760132
    3. 'obs' → logprob: -13.163045883178711
    4. '(ob' → logprob: -14.038045883178711
    5. 'o' → logprob: -14.913045883178711
    6. 'a' → logprob: -15.163045883178711
    7. '_obs' → logprob: -15.788045883178711
    8. ''ob' → logprob: -16.03804588317871
    9. 'clear' → logprob: -16.53804588317871
    10. ' obstacle' → logprob: -16.53804588317871

Token 1301: 'stacle' (ID: 69123)
  Prédit: 'stacle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stacle' → logprob: -8.232493564719334e-05
    2. 'stacles' → logprob: -10.000082015991211
    3. 'st' → logprob: -10.250082015991211
    4. 's' → logprob: -14.250082015991211
    5. 'stance' → logprob: -15.125082015991211
    6. 'stack' → logprob: -15.375082015991211
    7. 'stable' → logprob: -15.625082015991211
    8. '_' → logprob: -17.37508201599121
    9. '```' → logprob: -17.75008201599121
    10. 'stal' → logprob: -18.00008201599121

Token 1302: '(ob' (ID: 59584)
  Prédit: '(ob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ob' → logprob: -8.65707261255011e-06
    2. '(' → logprob: -12.125008583068848
    3. 'ob' → logprob: -13.125008583068848
    4. ' (' → logprob: -14.625008583068848
    5. '(obs' → logprob: -15.375008583068848
    6. '(
' → logprob: -15.500008583068848
    7. '(objects' → logprob: -16.000009536743164
    8. '	ob' → logprob: -16.250009536743164
    9. '```' → logprob: -17.875009536743164
    10. ')' → logprob: -18.750009536743164

Token 1303: 'stacles' (ID: 143593)
  Prédit: 'stacles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stacles' → logprob: -0.00011570196511456743
    2. 'st' → logprob: -9.625115394592285
    3. 's' → logprob: -10.625115394592285
    4. 'stacle' → logprob: -10.875115394592285
    5. 'ject' → logprob: -12.250115394592285
    6. 'stances' → logprob: -14.250115394592285
    7. '[' → logprob: -15.625115394592285
    8. 'serv' → logprob: -15.875115394592285
    9. '{' → logprob: -16.3751163482666
    10. '(' → logprob: -16.5001163482666

Token 1304: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006029533687978983
    2. '       ' → logprob: -7.625602722167969
    3. ')
' → logprob: -9.625602722167969
    4. '           ' → logprob: -10.125602722167969
    5. ' )' → logprob: -13.250602722167969
    6. ')return' → logprob: -13.500602722167969
    7. '   ' → logprob: -13.625602722167969
    8. '               ' → logprob: -14.000602722167969
    9. '          ' → logprob: -14.500602722167969
    10. ')==' → logprob: -14.875602722167969

Token 1305: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010133992182090878
    2. '
' → logprob: -7.126013278961182
    3. '        
' → logprob: -9.25101375579834
    4. '           ' → logprob: -10.50101375579834
    5. '\n' → logprob: -11.12601375579834
    6. '    
' → logprob: -11.37601375579834
    7. '	' → logprob: -11.50101375579834
    8. '```' → logprob: -11.50101375579834
    9. '<|end|>' → logprob: -11.62601375579834
    10. '  
' → logprob: -12.12601375579834

Token 1306: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.8802491215174086e-05
    2. '	   ' → logprob: -11.250028610229492
    3. '	' → logprob: -12.000028610229492
    4. '```' → logprob: -12.625028610229492
    5. '   ' → logprob: -12.750028610229492
    6. '	while' → logprob: -14.125028610229492
    7. '           ' → logprob: -14.375028610229492
    8. ' while' → logprob: -14.375028610229492
    9. '        
' → logprob: -15.500028610229492
    10. '	       ' → logprob: -15.500028610229492

Token 1307: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01856730878353119
    2. 'while' → logprob: -4.143567085266113
    3. ' while' → logprob: -6.018567085266113
    4. '	while' → logprob: -10.018567085266113
    5. '	' → logprob: -10.393567085266113
    6. 'for' → logprob: -12.018567085266113
    7. '```' → logprob: -12.268567085266113
    8. ' for' → logprob: -12.518567085266113
    9. '
' → logprob: -12.768567085266113
    10. '        
' → logprob: -13.768567085266113

Token 1308: ' Because' (ID: 13602)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.01904742605984211
    2. 'for' → logprob: -4.019047260284424
    3. '       ' → logprob: -7.019047260284424
    4. ' while' → logprob: -13.144047737121582
    5. 'While' → logprob: -15.019047737121582
    6. ' for' → logprob: -16.144046783447266
    7. '	while' → logprob: -18.269046783447266
    8. '```' → logprob: -18.269046783447266
    9. '        
' → logprob: -19.519046783447266
    10. '   ' → logprob: -20.019046783447266

Token 1309: ' parab' (ID: 101123)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.9732571840286255
    2. 'right' → logprob: -1.8482571840286255
    3. 'left' → logprob: -2.098257064819336
    4. ' vx' → logprob: -2.473257064819336
    5. 'check' → logprob: -3.223257064819336
    6. 'initial' → logprob: -3.223257064819336
    7. 'fe' → logprob: -3.348257064819336
    8. 'while' → logprob: -3.848257064819336
    9. 'vy' → logprob: -3.848257064819336
    10. 'length' → logprob: -3.848257064819336

Token 1310: 'ola' (ID: 5204)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.3059256076812744
    2. '_search' → logprob: -1.9309256076812744
    3. 'olic' → logprob: -3.6809256076812744
    4. 'left' → logprob: -3.8059256076812744
    5. '       ' → logprob: -4.055925369262695
    6. 'ol' → logprob: -4.180925369262695
    7. 'ic' → logprob: -5.430925369262695
    8. 'oly' → logprob: -5.430925369262695
    9. 'y' → logprob: -5.555925369262695
    10. 'inary' → logprob: -5.680925369262695

Token 1311: ' shape' (ID: 9591)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3433408737182617
    2. 'search' → logprob: -1.3433408737182617
    3. ' is' → logprob: -1.8433408737182617
    4. ' search' → logprob: -2.2183408737182617
    5. '       ' → logprob: -2.4683408737182617
    6. ' can' → logprob: -4.343340873718262
    7. 'is' → logprob: -4.718340873718262
    8. ')' → logprob: -4.843340873718262
    9. '        
' → logprob: -4.968340873718262
    10. '   ' → logprob: -4.968340873718262

Token 1312: ' changes' (ID: 6629)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3346545994281769
    2. ' is' → logprob: -2.4596545696258545
    3. ' search' → logprob: -2.5846545696258545
    4. ',' → logprob: -2.8346545696258545
    5. ' can' → logprob: -3.9596545696258545
    6. ' has' → logprob: -5.209654808044434
    7. ':' → logprob: -5.459654808044434
    8. 'search' → logprob: -5.459654808044434
    9. 's' → logprob: -5.709654808044434
    10. '        
' → logprob: -6.084654808044434

Token 1313: ' with' (ID: 483)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08955197781324387
    2. '       ' → logprob: -3.4645519256591797
    3. ' with' → logprob: -3.8395519256591797
    4. ',
' → logprob: -4.96455192565918
    5. 'with' → logprob: -4.96455192565918
    6. 'while' → logprob: -5.46455192565918
    7. ' while' → logprob: -5.71455192565918
    8. ' and' → logprob: -5.83955192565918
    9. ' in' → logprob: -6.46455192565918
    10. ' for' → logprob: -6.46455192565918

Token 1314: ' vx' (ID: 93588)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.003725495422258973
    2. 'right' → logprob: -5.878725528717041
    3. ' vx' → logprob: -7.253725528717041
    4. 'binary' → logprob: -9.128725051879883
    5. 'the' → logprob: -10.503725051879883
    6. 'each' → logprob: -10.628725051879883
    7. 'v' → logprob: -10.878725051879883
    8. 'vy' → logprob: -11.503725051879883
    9. 'velocity' → logprob: -11.878725051879883
    10. 'left' → logprob: -12.003725051879883

Token 1315: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.609234094619751
    2. ',' → logprob: -0.859234094619751
    3. ':' → logprob: -3.609234094619751
    4. ' while' → logprob: -6.609233856201172
    5. ',
' → logprob: -7.234233856201172
    6. ' and' → logprob: -7.484233856201172
    7. ';' → logprob: -7.484233856201172
    8. ':
' → logprob: -7.734233856201172
    9. 'while' → logprob: -7.734233856201172
    10. '        
' → logprob: -7.859233856201172

Token 1316: ' do' (ID: 621)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.21778342127799988
    2. 'while' → logprob: -1.8427834510803223
    3. ' for' → logprob: -3.4677834510803223
    4. '       ' → logprob: -5.717783451080322
    5. 'for' → logprob: -6.217783451080322
    6. ' right' → logprob: -7.967783451080322
    7. ' left' → logprob: -8.092782974243164
    8. 'left' → logprob: -9.592782974243164
    9. ' mid' → logprob: -9.967782974243164
    10. 'right' → logprob: -9.967782974243164

Token 1317: ' a' (ID: 261)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.552236795425415
    2. 'for' → logprob: -2.677236795425415
    3. 'while' → logprob: -2.802236795425415
    4. 'n' → logprob: -3.302236795425415
    5. '       ' → logprob: -3.427236795425415
    6. ' a' → logprob: -3.802236795425415
    7. 'wn' → logprob: -3.927236795425415
    8. 'w' → logprob: -4.052236557006836
    9. 'es' → logprob: -4.177236557006836
    10. 's' → logprob: -4.177236557006836

Token 1318: ' binary' (ID: 15600)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09333473443984985
    2. 'binary' → logprob: -2.593334674835205
    3. 'range' → logprob: -5.968334674835205
    4. ' for' → logprob: -5.968334674835205
    5. 'b' → logprob: -6.218334674835205
    6. 'linear' → logprob: -6.468334674835205
    7. 'search' → logprob: -6.718334674835205
    8. 'while' → logprob: -7.468334674835205
    9. 'few' → logprob: -7.468334674835205
    10. 'quick' → logprob: -7.718334674835205

Token 1319: ' search' (ID: 3684)
  Prédit: ' search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.03600781038403511
    2. ' ' → logprob: -4.161007881164551
    3. '_search' → logprob: -4.411007881164551
    4. '_' → logprob: -5.661007881164551
    5. 'search' → logprob: -5.786007881164551
    6. ' space' → logprob: -7.411007881164551
    7. ')' → logprob: -9.16100788116455
    8. 'space' → logprob: -9.16100788116455
    9. ' _' → logprob: -9.41100788116455
    10. ' 
' → logprob: -9.78600788116455

Token 1320: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20332762598991394
    2. ' for' → logprob: -1.9533276557922363
    3. ' in' → logprob: -4.328327655792236
    4. ' to' → logprob: -4.578327655792236
    5. ':' → logprob: -4.953327655792236
    6. ' on' → logprob: -5.828327655792236
    7. ':
' → logprob: -6.328327655792236
    8. '           ' → logprob: -6.828327655792236
    9. ' while' → logprob: -6.953327655792236
    10. '
' → logprob: -7.078327655792236

Token 1321: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.5873163342475891
    2. 'find' → logprob: -0.9623163342475891
    3. ' try' → logprob: -3.3373162746429443
    4. 'try' → logprob: -3.8373162746429443
    5. ' ' → logprob: -7.337316513061523
    6. 'maximize' → logprob: -7.462316513061523
    7. '       ' → logprob: -7.712316513061523
    8. '```' → logprob: -8.212316513061523
    9. 'check' → logprob: -8.337316513061523
    10. '100' → logprob: -8.337316513061523

Token 1322: ' if' (ID: 538)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47584742307662964
    2. 'vx' → logprob: -1.7258474826812744
    3. 'fe' → logprob: -2.3508474826812744
    4. ' a' → logprob: -3.1008474826812744
    5. ' feasible' → logprob: -3.8508474826812744
    6. 'the' → logprob: -4.850847244262695
    7. 'best' → logprob: -5.100847244262695
    8. 'mid' → logprob: -5.225847244262695
    9. 'True' → logprob: -5.850847244262695
    10. ' vx' → logprob: -5.850847244262695

Token 1323: ' any' (ID: 1062)
  Prédit: ' feasible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' feasible' → logprob: -0.5295300483703613
    2. ' any' → logprob: -2.0295300483703613
    3. 'any' → logprob: -2.2795300483703613
    4. ' there' → logprob: -2.4045300483703613
    5. 'there' → logprob: -3.2795300483703613
    6. 'fe' → logprob: -3.7795300483703613
    7. ' a' → logprob: -5.279530048370361
    8. 'possible' → logprob: -5.654530048370361
    9. 'a' → logprob: -5.779530048370361
    10. ' check' → logprob: -5.779530048370361

Token 1324: ' vx' (ID: 93588)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.3165387809276581
    2. ' vx' → logprob: -1.3165388107299805
    3. ' feasible' → logprob: -6.8165388107299805
    4. ')' → logprob: -7.9415388107299805
    5. ' value' → logprob: -8.19153881072998
    6. 'v' → logprob: -8.44153881072998
    7. '```' → logprob: -8.44153881072998
    8. 'possible' → logprob: -8.56653881072998
    9. '   ' → logprob: -9.44153881072998
    10. 'value' → logprob: -9.44153881072998

Token 1325: ' makes' (ID: 4787)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4277133643627167
    2. ' can' → logprob: -1.677713394165039
    3. ' in' → logprob: -3.302713394165039
    4. ' <' → logprob: -3.427713394165039
    5. '<=' → logprob: -3.927713394165039
    6. ' possible' → logprob: -4.177713394165039
    7. '```' → logprob: -4.427713394165039
    8. ' exists' → logprob: -4.927713394165039
    9. ' capable' → logprob: -5.177713394165039
    10. ' is' → logprob: -5.552713394165039

Token 1326: ' trajectory' (ID: 70764)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.33678990602493286
    2. 'True' → logprob: -1.336789846420288
    3. ' True' → logprob: -4.336790084838867
    4. 'fe' → logprob: -5.336790084838867
    5. ' check' → logprob: -5.336790084838867
    6. ' feasible' → logprob: -8.586790084838867
    7. 'trajectory' → logprob: -8.961790084838867
    8. 'possible' → logprob: -9.586790084838867
    9. ' trajectory' → logprob: -10.586790084838867
    10. 'the' → logprob: -10.586790084838867

Token 1327: ' clear' (ID: 5364)
  Prédit: ' feasible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' feasible' → logprob: -0.08244220912456512
    2. ' possible' → logprob: -3.832442283630371
    3. ' clear' → logprob: -3.957442283630371
    4. ' valid' → logprob: -4.082442283630371
    5. ' viable' → logprob: -5.082442283630371
    6. ' pass' → logprob: -5.332442283630371
    7. ' successful' → logprob: -5.457442283630371
    8. ' True' → logprob: -6.582442283630371
    9. ' that' → logprob: -7.207442283630371
    10. ' good' → logprob: -7.332442283630371

Token 1328: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03358403593301773
    2. '        
' → logprob: -4.158584117889404
    3. ' for' → logprob: -4.658584117889404
    4. ' while' → logprob: -6.033584117889404
    5. ' 
' → logprob: -7.283584117889404
    6. 'while' → logprob: -7.408584117889404
    7. '        ' → logprob: -7.533584117889404
    8. '   ' → logprob: -7.658584117889404
    9. ' ' → logprob: -7.908584117889404
    10. ':' → logprob: -7.908584117889404

Token 1329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15806865692138672
    2. '
' → logprob: -2.9080686569213867
    3. '        
' → logprob: -2.9080686569213867
    4. ' 
' → logprob: -3.6580686569213867
    5. '    
' → logprob: -5.283068656921387
    6. '\n' → logprob: -5.908068656921387
    7. '  
' → logprob: -6.283068656921387
    8. ',' → logprob: -8.783068656921387
    9. '```' → logprob: -8.783068656921387
    10. ':' → logprob: -8.908068656921387

Token 1330: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005457866471260786
    2. 'while' → logprob: -5.380457878112793
    3. ' while' → logprob: -7.505457878112793
    4. '```' → logprob: -9.380457878112793
    5. '
' → logprob: -9.505457878112793
    6. 'left' → logprob: -9.630457878112793
    7. '	' → logprob: -10.880457878112793
    8. '	while' → logprob: -11.755457878112793
    9. 'for' (adapté à ' for') → logprob: -11.755457878112793
    10. ' for' → logprob: -11.880457878112793

Token 1331: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.26091793179512024
    2. ' _' → logprob: -1.5109179019927979
    3. '_iter' → logprob: -5.635918140411377
    4. '_step' → logprob: -5.885918140411377
    5. '_i' → logprob: -6.260918140411377
    6. '_mid' → logprob: -8.635917663574219
    7. '_scale' → logprob: -8.635917663574219
    8. '_it' → logprob: -9.635917663574219
    9. ' i' → logprob: -9.760917663574219
    10. '_attempt' → logprob: -10.010917663574219

Token 1332: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.017150308936834335
    2. ' _' → logprob: -4.267150402069092
    3. 'in' → logprob: -6.767150402069092
    4. '_' → logprob: -6.892150402069092
    5. ' ' → logprob: -7.392150402069092
    6. ' i' → logprob: -9.017149925231934
    7. 'v' → logprob: -10.892149925231934
    8. 'i' → logprob: -11.017149925231934
    9. 'range' → logprob: -11.642149925231934
    10. '    ' → logprob: -11.892149925231934

Token 1333: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7729658540920354e-05
    2. ' range' → logprob: -10.500027656555176
    3. '(range' → logprob: -15.875027656555176
    4. '10' → logprob: -17.250028610229492
    5. '20' → logprob: -18.000028610229492
    6. '[' → logprob: -18.625028610229492
    7. '100' → logprob: -18.875028610229492
    8. '15' → logprob: -19.625028610229492
    9. 're' → logprob: -19.750028610229492
    10. '	range' → logprob: -19.875028610229492

Token 1334: '(' (ID: 7)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '50' → logprob: -0.4897480309009552
    2. '60' → logprob: -1.3647480010986328
    3. '100' → logprob: -2.739748001098633
    4. '40' → logprob: -2.864748001098633
    5. '30' → logprob: -4.864748001098633
    6. '70' → logprob: -6.864748001098633
    7. '80' → logprob: -7.364748001098633
    8. '20' → logprob: -8.489748001098633
    9. '35' → logprob: -9.239748001098633
    10. '200' → logprob: -9.739748001098633

Token 1335: '60' (ID: 1910)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.772887647151947
    2. '100' → logprob: -1.0228877067565918
    3. '60' → logprob: -1.7728877067565918
    4. '40' → logprob: -5.897887706756592
    5. '70' → logprob: -5.897887706756592
    6. '200' → logprob: -6.522887706756592
    7. '80' → logprob: -6.522887706756592
    8. '150' → logprob: -8.397887229919434
    9. '30' → logprob: -9.022887229919434
    10. '64' → logprob: -10.022887229919434

Token 1336: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.017421666532754898
    2. '):' → logprob: -4.392421722412109
    3. ':
' → logprob: -6.267421722412109
    4. ':' → logprob: -6.517421722412109
    5. '       ' → logprob: -7.142421722412109
    6. '   ' → logprob: -8.01742172241211
    7. '           ' → logprob: -8.39242172241211
    8. '):
' → logprob: -9.14242172241211
    9. '```' → logprob: -10.39242172241211
    10. ')' → logprob: -11.76742172241211

Token 1337: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02379775419831276
    2. '	       ' → logprob: -4.023797988891602
    3. '	   ' → logprob: -5.898797988891602
    4. '       ' → logprob: -6.898797988891602
    5. '   ' → logprob: -7.773797988891602
    6. '	           ' → logprob: -7.898797988891602
    7. '		' → logprob: -8.398797988891602
    8. '    	' → logprob: -8.773797988891602
    9. '    ' → logprob: -9.148797988891602
    10. '    	   ' → logprob: -9.148797988891602

Token 1338: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.014228970743715763
    2. ' mid' → logprob: -4.264228820800781
    3. 'middle' → logprob: -10.514228820800781
    4. 'm' → logprob: -10.764228820800781
    5. ' midpoint' → logprob: -11.889228820800781
    6. '[mid' → logprob: -13.139228820800781
    7. '           ' → logprob: -13.139228820800781
    8. '_mid' → logprob: -13.139228820800781
    9. '(mid' → logprob: -13.514228820800781
    10. 'midd' → logprob: -13.764228820800781

Token 1339: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28321486711502075
    2. '=' → logprob: -1.408214807510376
    3. '_token' → logprob: -6.533215045928955
    4. 'token' → logprob: -7.783215045928955
    5. ')' → logprob: -10.533214569091797
    6. '_' → logprob: -10.783214569091797
    7. '```' → logprob: -11.033214569091797
    8. ':' → logprob: -11.158214569091797
    9. '   ' → logprob: -11.408214569091797
    10. '_x' → logprob: -11.408214569091797

Token 1340: ' (' (ID: 350)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.0007618647650815547
    2. '(right' → logprob: -7.375761985778809
    3. ' (' → logprob: -9.000761985778809
    4. '0' → logprob: -11.875761985778809
    5. '[left' → logprob: -13.375761985778809
    6. ' ' → logprob: -14.125761985778809
    7. '(last' → logprob: -14.250761985778809
    8. '(l' → logprob: -14.625761985778809
    9. '(lhs' → logprob: -14.750761985778809
    10. '(' → logprob: -15.125761985778809

Token 1341: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -9.13388703338569e-06
    2. 'right' → logprob: -12.000009536743164
    3. ' left' → logprob: -12.750009536743164
    4. '(left' → logprob: -17.875009536743164
    5. '[left' → logprob: -18.500009536743164
    6. '	left' → logprob: -19.000009536743164
    7. 'lef' → logprob: -22.000009536743164
    8. '.left' → logprob: -22.500009536743164
    9. '   ' → logprob: -23.250009536743164
    10. ':left' → logprob: -23.500009536743164

Token 1342: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16022463142871857
    2. ' +' → logprob: -1.9102246761322021
    3. '+
' → logprob: -15.160224914550781
    4. ')' → logprob: -17.53522491455078
    5. ' +
' → logprob: -17.53522491455078
    6. '＋' → logprob: -17.66022491455078
    7. '```' → logprob: -17.91022491455078
    8. ')+' → logprob: -18.16022491455078
    9. ' plus' → logprob: -18.53522491455078
    10. '+x' → logprob: -18.66022491455078

Token 1343: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -1.306760805164231e-05
    2. ' right' → logprob: -11.25001335144043
    3. '	right' → logprob: -18.75001335144043
    4. '   ' → logprob: -21.12501335144043
    5. 'Right' → logprob: -21.12501335144043
    6. '[right' → logprob: -21.50001335144043
    7. '(right' → logprob: -23.00001335144043
    8. ' ' → logprob: -23.25001335144043
    9. 'r' → logprob: -23.37501335144043
    10. '_right' → logprob: -23.62501335144043

Token 1344: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026205103495158255
    2. ')/' → logprob: -8.250262260437012
    3. ' )' → logprob: -14.250262260437012
    4. ')*' → logprob: -16.750261306762695
    5. ')>>' → logprob: -18.375261306762695
    6. '   ' → logprob: -18.875261306762695
    7. '）' → logprob: -19.250261306762695
    8. ')#' → logprob: -19.500261306762695
    9. ')
' → logprob: -19.750261306762695
    10. ' ' → logprob: -20.000261306762695

Token 1345: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.009810633957386017
    2. ' /' → logprob: -4.634810447692871
    3. '*' → logprob: -9.884810447692871
    4. ' *' → logprob: -12.884810447692871
    5. ')' → logprob: -15.134810447692871
    6. '```' → logprob: -15.384810447692871
    7. ')/' → logprob: -15.509810447692871
    8. ' ' → logprob: -15.884810447692871
    9. '   ' → logprob: -16.134811401367188
    10. ' ' → logprob: -16.384811401367188

Token 1346: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '   ' → logprob: -22.125
    4. '```' → logprob: -23.125
    5. 'two' → logprob: -23.375
    6. '۲' → logprob: -24.0
    7. '
' → logprob: -24.875
    8. '２' → logprob: -25.75
    9. '{' → logprob: -25.875
    10. '``' → logprob: -25.875

Token 1347: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -18.375
    4. '۲' → logprob: -20.375
    5. '```' → logprob: -20.5
    6. '  ' → logprob: -21.0
    7. 'two' → logprob: -21.5
    8. '=' → logprob: -21.5
    9. '২' → logprob: -22.125
    10. '２' → logprob: -22.1875

Token 1348: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1349: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012621245346963406
    2. '<|end|>' → logprob: -4.8876214027404785
    3. '<|end|>' → logprob: -6.2626214027404785
    4. '
' → logprob: -7.1376214027404785
    5. '	       ' → logprob: -7.1376214027404785
    6. '		' → logprob: -7.5126214027404785
    7. '       ' → logprob: -8.13762092590332
    8. ' if' → logprob: -8.38762092590332
    9. '   ' → logprob: -9.63762092590332
    10. '	   ' → logprob: -9.76262092590332

Token 1350: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08182934671640396
    2. '           ' → logprob: -2.581829309463501
    3. ' if' → logprob: -5.83182954788208
    4. '		' → logprob: -14.331829071044922
    5. '	if' → logprob: -14.706829071044922
    6. '	       ' → logprob: -15.081829071044922
    7. 'If' → logprob: -15.081829071044922
    8. 'r' → logprob: -16.081829071044922
    9. '               ' → logprob: -16.206829071044922
    10. 'fe' → logprob: -16.581829071044922

Token 1351: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.005234002135694027
    2. ' check' → logprob: -5.2552337646484375
    3. '(check' → logprob: -16.130233764648438
    4. '	check' → logprob: -18.005233764648438
    5. '           ' → logprob: -18.505233764648438
    6. '   ' → logprob: -18.880233764648438
    7. ' ' → logprob: -19.005233764648438
    8. ' ' → logprob: -20.380233764648438
    9. '_check' → logprob: -20.880233764648438
    10. 'not' → logprob: -20.880233764648438

Token 1352: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.028881335631012917
    2. '(mid' → logprob: -3.653881311416626
    3. '_mid' → logprob: -6.528881549835205
    4. 'mid' → logprob: -7.153881549835205
    5. '[mid' → logprob: -9.278881072998047
    6. '_' → logprob: -9.778881072998047
    7. '(' → logprob: -10.278881072998047
    8. '_m' → logprob: -10.403881072998047
    9. ')' → logprob: -10.653881072998047
    10. ' mid' → logprob: -10.778881072998047

Token 1353: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0280383548888494e-06
    2. 'mid' → logprob: -14.625000953674316
    3. 'ex' → logprob: -16.250001907348633
    4. '(mid' → logprob: -16.500001907348633
    5. '(x' → logprob: -16.875001907348633
    6. '_x' → logprob: -17.000001907348633
    7. '_mid' → logprob: -17.000001907348633
    8. '{x' → logprob: -17.500001907348633
    9. '
' → logprob: -17.750001907348633
    10. 'mx' → logprob: -17.750001907348633

Token 1354: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.875
    3. '[mid' → logprob: -15.875
    4. 'mid' → logprob: -16.0
    5. ' (' → logprob: -16.875
    6. '(m' → logprob: -18.5
    7. ' mid' → logprob: -19.625
    8. '(
' → logprob: -19.875
    9. '(mi' → logprob: -20.375
    10. '(min' → logprob: -20.875

Token 1355: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.008649553172290325
    2. '):' → logprob: -4.7586493492126465
    3. '):
' → logprob: -11.383649826049805
    4. ' ):
' → logprob: -11.508649826049805
    5. ')' → logprob: -12.008649826049805
    6. ':' → logprob: -12.758649826049805
    7. ':
' → logprob: -13.008649826049805
    8. '           ' → logprob: -13.508649826049805
    9. '):

' → logprob: -15.383649826049805
    10. '       ' → logprob: -15.758649826049805

Token 1356: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0023019127547740936
    2. ' left' → logprob: -7.3773016929626465
    3. 'right' → logprob: -7.8773016929626465
    4. 'left' → logprob: -8.252302169799805
    5. ' right' → logprob: -8.252302169799805
    6. '           ' → logprob: -8.752302169799805
    7. '[left' → logprob: -8.752302169799805
    8. ':
' → logprob: -9.252302169799805
    9. '                
' → logprob: -9.627302169799805
    10. '):
' → logprob: -10.002302169799805

Token 1357: ' feasible' (ID: 58866)
  Prédit: 'fe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fe' → logprob: -0.1026148572564125
    2. 'right' → logprob: -2.3526148796081543
    3. '           ' → logprob: -7.102614879608154
    4. '               ' → logprob: -7.102614879608154
    5. ' feasible' → logprob: -7.352614879608154
    6. ' right' → logprob: -9.227614402770996
    7. '   ' → logprob: -11.602614402770996
    8. ' fe' → logprob: -12.602614402770996
    9. 'left' → logprob: -13.352614402770996
    10. 'return' → logprob: -13.352614402770996

Token 1358: '_found' (ID: 50825)
  Prédit: '_found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.0020497434306889772
    2. 'Found' → logprob: -6.377049922943115
    3. 'found' → logprob: -8.377049446105957
    4. '_' → logprob: -10.377049446105957
    5. '=' → logprob: -10.627049446105957
    6. '_left' → logprob: -11.127049446105957
    7. '=True' → logprob: -11.252049446105957
    8. ' =' → logprob: -12.252049446105957
    9. '```' → logprob: -12.252049446105957
    10. '_FOUND' → logprob: -12.377049446105957

Token 1359: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5252203345298767
    2. '=' → logprob: -0.9002203345298767
    3. '=True' → logprob: -6.4002203941345215
    4. '               ' → logprob: -7.9002203941345215
    5. '                   ' → logprob: -10.025219917297363
    6. '=False' → logprob: -12.400219917297363
    7. '           ' → logprob: -12.525219917297363
    8. ',' → logprob: -13.400219917297363
    9. 'right' → logprob: -13.525219917297363
    10. '=true' → logprob: -13.650219917297363

Token 1360: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.306760805164231e-05
    2. ' True' → logprob: -11.25001335144043
    3. 'true' → logprob: -18.00001335144043
    4. '                   ' → logprob: -18.12501335144043
    5. '=True' → logprob: -18.62501335144043
    6. '   ' → logprob: -19.25001335144043
    7. '               ' → logprob: -19.50001335144043
    8. '    ' → logprob: -20.37501335144043
    9. '(True' → logprob: -20.50001335144043
    10. '                       ' → logprob: -20.87501335144043

Token 1361: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028114113956689835
    2. '
' → logprob: -3.903114080429077
    3. '           ' → logprob: -5.153114318847656
    4. '                   ' → logprob: -7.653114318847656
    5. ' 
' → logprob: -8.028114318847656
    6. '                
' → logprob: -8.653114318847656
    7. '    
' → logprob: -8.653114318847656
    8. '			' → logprob: -8.903114318847656
    9. '                ' → logprob: -9.778114318847656
    10. '            
' → logprob: -9.778114318847656

Token 1362: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0026802949141710997
    2. '           ' → logprob: -6.12768030166626
    3. 'right' → logprob: -9.127679824829102
    4. '                   ' → logprob: -9.377679824829102
    5. '
' → logprob: -9.502679824829102
    6. '			' → logprob: -9.627679824829102
    7. '       ' → logprob: -10.252679824829102
    8. '```' → logprob: -10.627679824829102
    9. ' right' → logprob: -11.002679824829102
    10. '                
' → logprob: -11.502679824829102

Token 1363: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.00014001218369230628
    2. ' right' → logprob: -9.250140190124512
    3. 'left' → logprob: -10.500140190124512
    4. '               ' → logprob: -11.500140190124512
    5. '   ' → logprob: -12.250140190124512
    6. '           ' → logprob: -14.375140190124512
    7. '	right' → logprob: -14.375140190124512
    8. '       ' → logprob: -16.125139236450195
    9. '                   ' → logprob: -16.500139236450195
    10. '              ' → logprob: -17.125139236450195

Token 1364: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031777136027812958
    2. ' =' → logprob: -5.753177642822266
    3. '=cut' → logprob: -18.253177642822266
    4. '=
' → logprob: -18.753177642822266
    5. '.=' → logprob: -19.003177642822266
    6. '=

' → logprob: -19.628177642822266
    7. '=center' → logprob: -19.753177642822266
    8. '=}' → logprob: -20.003177642822266
    9. '＝' → logprob: -20.003177642822266
    10. '=edge' → logprob: -20.378177642822266

Token 1365: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -9.615255839889869e-05
    2. ' mid' → logprob: -9.250096321105957
    3. '[mid' → logprob: -20.87509536743164
    4. '(mid' → logprob: -21.25009536743164
    5. '_mid' → logprob: -21.25009536743164
    6. 'middle' → logprob: -22.50009536743164
    7. 'midd' → logprob: -24.00009536743164
    8. 'm' → logprob: -24.87509536743164
    9. 'midt' → logprob: -24.87509536743164
    10. '.mid' → logprob: -25.50009536743164

Token 1366: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20783595740795135
    2. '
' → logprob: -1.8328359127044678
    3. 'else' → logprob: -4.207836151123047
    4. ' 
' → logprob: -4.832836151123047
    5. ' else' → logprob: -5.832836151123047
    6. '            
' → logprob: -7.707836151123047
    7. '  
' → logprob: -7.707836151123047
    8. '       ' → logprob: -8.082836151123047
    9. '    
' → logprob: -8.082836151123047
    10. '               ' → logprob: -8.957836151123047

Token 1367: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0032586383167654276
    2. 'else' → logprob: -6.25325870513916
    3. ' else' → logprob: -6.62825870513916
    4. '
' → logprob: -13.00325870513916
    5. '       ' → logprob: -13.37825870513916
    6. '```' → logprob: -13.37825870513916
    7. '   ' → logprob: -14.37825870513916
    8. '               ' → logprob: -15.75325870513916
    9. '		' → logprob: -15.87825870513916
    10. '          ' → logprob: -16.128257751464844

Token 1368: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.46509531140327454
    2. '           ' → logprob: -1.2150952816009521
    3. ' else' → logprob: -2.590095281600952
    4. '       ' → logprob: -8.590095520019531
    5. '		' → logprob: -11.340095520019531
    6. '	else' → logprob: -11.590095520019531
    7. '	       ' → logprob: -11.590095520019531
    8. '
' → logprob: -11.715095520019531
    9. '   ' → logprob: -14.215095520019531
    10. '        ' → logprob: -14.215095520019531

Token 1369: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8308483958244324
    2. '               ' → logprob: -1.2058484554290771
    3. ':
' → logprob: -1.3308484554290771
    4. ':left' → logprob: -8.830848693847656
    5. '           ' → logprob: -9.080848693847656
    6. ' :
' → logprob: -9.830848693847656
    7. '):
' → logprob: -9.955848693847656
    8. ',' → logprob: -10.205848693847656
    9. '              ' → logprob: -10.330848693847656
    10. '[left' → logprob: -10.455848693847656

Token 1370: '               ' (ID: 506)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.015556453727185726
    2. ' left' → logprob: -5.015556335449219
    3. '               ' → logprob: -5.140556335449219
    4. '	left' → logprob: -6.890556335449219
    5. '[left' → logprob: -7.015556335449219
    6. '       ' → logprob: -7.390556335449219
    7. '```' → logprob: -8.890556335449219
    8. '           ' → logprob: -9.515556335449219
    9. ',left' → logprob: -9.640556335449219
    10. ':left' → logprob: -9.765556335449219

Token 1371: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -2.339278580620885e-06
    2. ' left' → logprob: -13.000001907348633
    3. '	left' → logprob: -18.125001907348633
    4. '               ' → logprob: -18.625001907348633
    5. 'right' → logprob: -19.375001907348633
    6. '[left' → logprob: -19.875001907348633
    7. '_left' → logprob: -21.125001907348633
    8. ':left' → logprob: -21.375001907348633
    9. 'lef' → logprob: -21.625001907348633
    10. '                   ' → logprob: -22.000001907348633

Token 1372: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005233763717114925
    2. ' =' → logprob: -5.2552337646484375
    3. '*=' → logprob: -19.630233764648438
    4. '=
' → logprob: -20.505233764648438
    5. '=cut' → logprob: -20.755233764648438
    6. '=line' → logprob: -21.005233764648438
    7. '＝' → logprob: -21.130233764648438
    8. '=end' → logprob: -21.255233764648438
    9. ')' → logprob: -21.880233764648438
    10. '.=' → logprob: -22.505233764648438

Token 1373: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -4.842555426876061e-06
    2. ' mid' → logprob: -12.250004768371582
    3. '[mid' → logprob: -22.1250057220459
    4. 'middle' → logprob: -22.5000057220459
    5. '(mid' → logprob: -22.8750057220459
    6. '_mid' → logprob: -24.5000057220459
    7. 'min' → logprob: -25.7500057220459
    8. '           ' → logprob: -26.1250057220459
    9. 'm' → logprob: -26.5000057220459
    10. '.mid' → logprob: -26.7500057220459

Token 1374: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19725577533245087
    2. '
' → logprob: -2.447255849838257
    3. '        
' → logprob: -2.697255849838257
    4. '<|end|>' → logprob: -4.197255611419678
    5. '    
' → logprob: -5.197255611419678
    6. '  
' → logprob: -6.322255611419678
    7. '\n' → logprob: -6.947255611419678
    8. '<|end|>' → logprob: -7.822255611419678
    9. ' 
' → logprob: -8.197256088256836
    10. '   
' → logprob: -8.947256088256836

Token 1375: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06640059500932693
    2. '        
' → logprob: -3.1914005279541016
    3. '
' → logprob: -4.191400527954102
    4. '    
' → logprob: -6.191400527954102
    5. '<|end|>' → logprob: -6.316400527954102
    6. 'return' → logprob: -7.316400527954102
    7. ' return' → logprob: -7.441400527954102
    8. '		
' → logprob: -7.691400527954102
    9. '  
' → logprob: -8.191400527954102
    10. '	
' → logprob: -8.441400527954102

Token 1376: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08047394454479218
    2. 'return' (adapté à ' return') → logprob: -2.5804738998413086
    3. ' return' → logprob: -6.830473899841309
    4. '
' → logprob: -7.830473899841309
    5. '   ' → logprob: -9.455473899841309
    6. '	return' → logprob: -11.705473899841309
    7. '	' → logprob: -11.830473899841309
    8. '        
' → logprob: -12.205473899841309
    9. '    
' → logprob: -13.205473899841309
    10. '           ' → logprob: -13.705473899841309

Token 1377: ' feasible' (ID: 58866)
  Prédit: 'fe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fe' → logprob: -0.002475777640938759
    2. ' feasible' → logprob: -6.002475738525391
    3. 'Fe' → logprob: -15.75247573852539
    4. ' fe' → logprob: -17.12747573852539
    5. '_fe' → logprob: -19.62747573852539
    6. ' ' → logprob: -21.25247573852539
    7. ' Fe' → logprob: -21.87747573852539
    8. 'fea' → logprob: -22.00247573852539
    9. '(fe' → logprob: -22.50247573852539
    10. '-fe' → logprob: -22.50247573852539

Token 1378: '_found' (ID: 50825)
  Prédit: '_found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.44868943095207214
    2. 'able' → logprob: -1.1986894607543945
    3. 'Found' → logprob: -3.6986894607543945
    4. '<|end|>' → logprob: -3.8236894607543945
    5. 'd' → logprob: -5.4486894607543945
    6. 'ed' → logprob: -6.4486894607543945
    7. 'found' → logprob: -6.8236894607543945
    8. 'abled' → logprob: -7.0736894607543945
    9. 'asible' → logprob: -7.3236894607543945
    10. '_' → logprob: -7.6986894607543945

Token 1379: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12932905554771423
    2. '    
' → logprob: -2.379328966140747
    3. '
' → logprob: -3.629328966140747
    4. '<|end|>' → logprob: -6.879329204559326
    5. 'def' → logprob: -7.379329204559326
    6. '  
' → logprob: -8.879328727722168
    7. '<|end|>' → logprob: -9.004328727722168
    8. '        
' → logprob: -9.379328727722168
    9. '   
' → logprob: -9.504328727722168
    10. ' 
' → logprob: -10.129328727722168

Token 1381: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6018739342689514
    2. 'def' (adapté à ' def') → logprob: -0.8518739342689514
    3. '    
' → logprob: -4.101873874664307
    4. '
' → logprob: -4.726873874664307
    5. ' def' → logprob: -8.601874351501465
    6. '        
' → logprob: -11.726874351501465
    7. '```' → logprob: -11.976874351501465
    8. '  
' → logprob: -12.726874351501465
    9. '   
' → logprob: -13.226874351501465
    10. '

' → logprob: -14.226874351501465

Token 1382: ' feasible' (ID: 58866)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8441154956817627
    2. 'can' → logprob: -1.5941154956817627
    3. ' def' → logprob: -2.7191154956817627
    4. 'min' → logprob: -2.8441154956817627
    5. '_min' → logprob: -2.9691154956817627
    6. 'minimum' → logprob: -2.9691154956817627
    7. 'find' → logprob: -3.5941154956817627
    8. 'solve' → logprob: -3.7191154956817627
    9. 'possible' → logprob: -4.219115257263184
    10. 'minimal' → logprob: -4.469115257263184

Token 1383: '(self' (ID: 2402)
  Prédit: '_speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -0.006440264638513327
    2. '_distance' → logprob: -5.756440162658691
    3. '(self' → logprob: -6.506440162658691
    4. '_' → logprob: -8.006440162658691
    5. '_velocity' → logprob: -8.006440162658691
    6. '_to' → logprob: -8.381440162658691
    7. 'Speed' → logprob: -8.506440162658691
    8. '_for' → logprob: -8.756440162658691
    9. '_initial' → logprob: -10.256440162658691
    10. '_path' → logprob: -10.381440162658691

Token 1384: ',' (ID: 11)
  Prédit: '_speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_speed' → logprob: -0.09683077782392502
    2. '(self' → logprob: -2.8468308448791504
    3. '_distance' → logprob: -3.9718308448791504
    4. '_velocity' → logprob: -5.47183084487915
    5. '_' → logprob: -5.97183084487915
    6. '   ' → logprob: -6.72183084487915
    7. '_for' → logprob: -6.97183084487915
    8. ')' → logprob: -6.97183084487915
    9. '_initial' → logprob: -6.97183084487915
    10. '(' → logprob: -7.59683084487915

Token 1385: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.6612321734428406
    2. ' initial' → logprob: -1.4112322330474854
    3. 'speed' → logprob: -2.1612322330474854
    4. ' speed' → logprob: -2.2862322330474854
    5. ' max' → logprob: -4.536231994628906
    6. 'max' → logprob: -5.161231994628906
    7. '   ' → logprob: -6.036231994628906
    8. 'total' → logprob: -7.161231994628906
    9. ' total' → logprob: -7.536231994628906
    10. 'v' → logprob: -7.786231994628906

Token 1386: '_speed' (ID: 43208)
  Prédit: '_speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -0.00012308525037951767
    2. 'speed' → logprob: -9.250123023986816
    3. '_velocity' → logprob: -11.625123023986816
    4. '_s' → logprob: -12.000123023986816
    5. ')' → logprob: -12.875123023986816
    6. 'Speed' → logprob: -13.000123023986816
    7. '_energy' → logprob: -13.250123023986816
    8. '_' → logprob: -13.750123023986816
    9. '_score' → logprob: -14.000123023986816
    10. ' speed' → logprob: -14.625123023986816

Token 1387: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04330118000507355
    2. ',' → logprob: -3.2933011054992676
    3. '):' → logprob: -5.418301105499268
    4. ')' → logprob: -7.543301105499268
    5. '):
' → logprob: -8.918301582336426
    6. '   ' → logprob: -9.543301582336426
    7. ' :' → logprob: -11.668301582336426
    8. 'self' → logprob: -11.668301582336426
    9. ':int' → logprob: -11.793301582336426
    10. '_:' → logprob: -11.918301582336426

Token 1388: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.4295196533203125
    2. 'float' → logprob: -1.0545196533203125
    3. ' self' → logprob: -8.429519653320312
    4. 'self' → logprob: -8.679519653320312
    5. 'int' → logprob: -9.304519653320312
    6. ')' → logprob: -9.304519653320312
    7. ',float' → logprob: -9.304519653320312
    8. '=float' → logprob: -10.304519653320312
    9. ' ' → logprob: -10.429519653320312
    10. '   ' → logprob: -10.804519653320312

Token 1389: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31839418411254883
    2. ',' → logprob: -1.3183941841125488
    3. '):' → logprob: -5.443394184112549
    4. '):
' → logprob: -7.818394184112549
    5. '   ' → logprob: -8.19339370727539
    6. ':' → logprob: -9.81839370727539
    7. ' )' → logprob: -10.56839370727539
    8. '       ' → logprob: -11.69339370727539
    9. ',)' → logprob: -11.81839370727539
    10. ')->' → logprob: -12.56839370727539

Token 1390: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4162730574607849
    2. ':' → logprob: -1.6662731170654297
    3. '       ' → logprob: -2.0412731170654297
    4. '   ' → logprob: -4.29127311706543
    5. ':
' → logprob: -6.16627311706543
    6. 'self' → logprob: -7.04127311706543
    7. ',' → logprob: -7.16627311706543
    8. ' ->' → logprob: -7.29127311706543
    9. ' self' → logprob: -7.41627311706543
    10. '):' → logprob: -7.66627311706543

Token 1391: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.00020354038861114532
    2. ' bool' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.25020408630371
    4. 'float' → logprob: -17.25020408630371
    5. '	bool' → logprob: -17.75020408630371
    6. ' ' → logprob: -18.00020408630371
    7. '
' → logprob: -19.12520408630371
    8. '(bool' → logprob: -19.37520408630371
    9. 'List' → logprob: -19.50020408630371
    10. 'int' → logprob: -19.62520408630371

Token 1392: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6907137036323547
    2. ':' → logprob: -0.9407137036323547
    3. ':
' → logprob: -2.81571364402771
    4. '(self' → logprob: -3.06571364402771
    5. '   ' → logprob: -6.815713882446289
    6. '):
' → logprob: -8.940713882446289
    7. 'self' → logprob: -9.315713882446289
    8. '(' → logprob: -9.315713882446289
    9. ':self' → logprob: -9.315713882446289
    10. '):' → logprob: -9.940713882446289

Token 1393: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018189321272075176
    2. ':' → logprob: -7.501819133758545
    3. '<|end|>' → logprob: -7.876819133758545
    4. '        
' → logprob: -8.126818656921387
    5. '```' → logprob: -9.001818656921387
    6. '   ' → logprob: -9.376818656921387
    7. '	' → logprob: -9.876818656921387
    8. ',' → logprob: -9.876818656921387
    9. '    
' → logprob: -10.126818656921387
    10. '<|end|>' → logprob: -10.126818656921387

Token 1394: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007505440153181553
    2. '        
' → logprob: -8.500750541687012
    3. '
' → logprob: -9.000750541687012
    4. '	' → logprob: -9.125750541687012
    5. '```' → logprob: -9.375750541687012
    6. '   ' → logprob: -10.000750541687012
    7. '<|end|>' → logprob: -10.375750541687012
    8. '#' → logprob: -10.375750541687012
    9. '[' → logprob: -10.875750541687012
    10. ':' → logprob: -11.125750541687012

Token 1395: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.8670179997570813e-05
    2. '```' → logprob: -12.250019073486328
    3. 'b' → logprob: -12.625019073486328
    4. '   ' → logprob: -13.000019073486328
    5. 'for' → logprob: -13.750019073486328
    6. 'return' → logprob: -14.000019073486328
    7. 'if' → logprob: -14.125019073486328
    8. ' if' → logprob: -14.125019073486328
    9. ' b' → logprob: -14.250019073486328
    10. ' for' → logprob: -14.375019073486328

Token 1396: ' Check' (ID: 6208)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.420598219847307e-05
    2. ' for' → logprob: -10.2500638961792
    3. '#' → logprob: -12.1250638961792
    4. '   ' → logprob: -12.6250638961792
    5. '
' → logprob: -12.8750638961792
    6. ' #' → logprob: -12.8750638961792
    7. 'for' → logprob: -13.0000638961792
    8. '```' → logprob: -13.0000638961792
    9. ' For' → logprob: -14.0000638961792
    10. 'def' → logprob: -14.1250638961792

Token 1397: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.019960355013608932
    2. ' self' → logprob: -5.394960403442383
    3. ' ' → logprob: -5.519960403442383
    4. '   ' → logprob: -5.519960403442383
    5. 'self' → logprob: -6.019960403442383
    6. 'if' → logprob: -6.269960403442383
    7. '       ' → logprob: -7.019960403442383
    8. ' whether' → logprob: -7.269960403442383
    9. '(' → logprob: -7.769960403442383
    10. '    ' → logprob: -8.269960403442383

Token 1398: ' there' (ID: 1354)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.460347056388855
    2. ' the' → logprob: -1.710347056388855
    3. ' all' → logprob: -1.710347056388855
    4. 'self' → logprob: -2.0853471755981445
    5. ' initial' → logprob: -2.3353471755981445
    6. ' we' → logprob: -3.4603471755981445
    7. ' True' → logprob: -3.7103471755981445
    8. ' any' → logprob: -3.7103471755981445
    9. 'the' → logprob: -3.7103471755981445
    10. ' possible' → logprob: -4.4603471755981445

Token 1399: ' exists' (ID: 13031)
  Prédit: ' exists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exists' → logprob: -0.26253485679626465
    2. ' is' → logprob: -1.5125348567962646
    3. 'exists' → logprob: -4.762535095214844
    4. 'is' → logprob: -6.512535095214844
    5. ' exist' → logprob: -9.137535095214844
    6. '       ' → logprob: -9.262535095214844
    7. '```' → logprob: -9.637535095214844
    8. '_exists' → logprob: -10.012535095214844
    9. ' can' → logprob: -10.137535095214844
    10. ''s' → logprob: -10.387535095214844

Token 1400: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0678393542766571
    2. 'a' → logprob: -2.9428393840789795
    3. ' some' → logprob: -4.6928391456604
    4. ' any' → logprob: -6.4428391456604
    5. ' at' → logprob: -7.5678391456604
    6. 'some' → logprob: -7.5678391456604
    7. 'segments' → logprob: -8.192839622497559
    8. 'any' → logprob: -8.817839622497559
    9. ' initial' → logprob: -8.817839622497559
    10. ' segments' → logprob: -8.942839622497559

Token 1401: ' way' (ID: 2006)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1297954320907593
    2. ' way' → logprob: -1.3797954320907593
    3. 'way' → logprob: -1.3797954320907593
    4. 'sequence' → logprob: -2.754795551300049
    5. 'bounce' → logprob: -3.129795551300049
    6. ' split' → logprob: -3.879795551300049
    7. 'trajectory' → logprob: -4.629795551300049
    8. ' sequence' → logprob: -5.004795551300049
    9. ' bounce' → logprob: -5.254795551300049
    10. 'b' → logprob: -5.379795551300049

Token 1402: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.09023938328027725
    2. 'to' → logprob: -2.4652392864227295
    3. '       ' → logprob: -6.715239524841309
    4. '   ' → logprob: -9.840239524841309
    5. '    ' → logprob: -12.090239524841309
    6. ' with' → logprob: -12.340239524841309
    7. ' that' → logprob: -12.465239524841309
    8. '```' → logprob: -12.715239524841309
    9. ' for' → logprob: -13.215239524841309
    10. '        ' → logprob: -13.215239524841309

Token 1403: ' break' (ID: 2338)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.4760662317276
    2. ' split' → logprob: -1.8510662317276
    3. ' cover' → logprob: -2.2260661125183105
    4. 'hit' → logprob: -2.3510661125183105
    5. 'shoot' → logprob: -2.6010661125183105
    6. 'complete' → logprob: -2.8510661125183105
    7. ' hit' → logprob: -2.9760661125183105
    8. ' complete' → logprob: -3.1010661125183105
    9. 'cover' → logprob: -3.1010661125183105
    10. 'make' → logprob: -3.2260661125183105

Token 1404: ' flight' (ID: 15243)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.11014202982187271
    2. ' the' → logprob: -2.8601419925689697
    3. 'down' → logprob: -3.3601419925689697
    4. 'self' → logprob: -4.985142230987549
    5. 'total' → logprob: -6.110142230987549
    6. '       ' → logprob: -6.610142230987549
    7. ' down' → logprob: -6.610142230987549
    8. 'up' → logprob: -8.61014175415039
    9. 'distance' → logprob: -8.86014175415039
    10. ' total' → logprob: -9.61014175415039

Token 1405: ' into' (ID: 1511)
  Prédit: ' into'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' into' → logprob: -0.00993409939110279
    2. 'down' → logprob: -6.134933948516846
    3. 'into' → logprob: -6.134933948516846
    4. ' down' → logprob: -6.384933948516846
    5. '   ' → logprob: -6.759933948516846
    6. '       ' → logprob: -6.884933948516846
    7. ' up' → logprob: -7.634933948516846
    8. ' at' → logprob: -7.884933948516846
    9. 'distance' → logprob: -8.634934425354004
    10. ' with' → logprob: -8.759934425354004

Token 1406: ' segments' (ID: 33749)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10209048539400101
    2. 'initial' → logprob: -2.35209059715271
    3. ' self' → logprob: -7.227090358734131
    4. 'segments' → logprob: -7.852090358734131
    5. '(self' → logprob: -8.727090835571289
    6. 'b' → logprob: -8.852090835571289
    7. ' initial' → logprob: -8.977090835571289
    8. '1' → logprob: -9.727090835571289
    9. 'max' → logprob: -9.852090835571289
    10. '[self' → logprob: -9.977090835571289

Token 1407: ' (' (ID: 350)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.06680801510810852
    2. ' of' → logprob: -3.566807985305786
    3. ' that' → logprob: -3.816807985305786
    4. ' to' → logprob: -5.691808223724365
    5. ' such' → logprob: -6.191808223724365
    6. '       ' → logprob: -6.316808223724365
    7. ' into' → logprob: -6.566808223724365
    8. ',' → logprob: -6.691808223724365
    9. 'with' → logprob: -6.816808223724365
    10. ' at' → logprob: -6.816808223724365

Token 1408: 'b' (ID: 65)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.27059853076934814
    2. ' self' → logprob: -2.3955984115600586
    3. 'initial' → logprob: -2.6455984115600586
    4. 'b' → logprob: -3.1455984115600586
    5. ' initial' → logprob: -4.020598411560059
    6. ')' → logprob: -5.520598411560059
    7. ' b' → logprob: -6.145598411560059
    8. '       ' → logprob: -6.395598411560059
    9. ' with' → logprob: -6.770598411560059
    10. 'max' → logprob: -6.770598411560059

Token 1409: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -0.06024095416069031
    2. '+' → logprob: -3.6852409839630127
    3. '_' → logprob: -3.9352409839630127
    4. ')' → logprob: -5.935240745544434
    5. '```' → logprob: -6.560240745544434
    6. '=' → logprob: -6.685240745544434
    7. '   ' → logprob: -6.810240745544434
    8. '>' → logprob: -7.060240745544434
    9. 'reak' → logprob: -7.560240745544434
    10. 'oun' → logprob: -7.560240745544434

Token 1410: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2973140478134155
    2. ' <=' → logprob: -1.9223140478134155
    3. ')' → logprob: -2.172314167022705
    4. ' +' → logprob: -2.297314167022705
    5. ' from' → logprob: -2.547314167022705
    6. '=' → logprob: -2.922314167022705
    7. ' up' → logprob: -2.922314167022705
    8. ' with' → logprob: -3.047314167022705
    9. '       ' → logprob: -3.297314167022705
    10. '<=' → logprob: -3.422314167022705

Token 1411: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -12.875007629394531
    3. '   ' → logprob: -13.375007629394531
    4. '
' → logprob: -13.750007629394531
    5. '0' → logprob: -14.125007629394531
    6. ')' → logprob: -14.250007629394531
    7. '+' → logprob: -14.250007629394531
    8. '           ' → logprob: -15.250007629394531
    9. '```' → logprob: -15.250007629394531
    10. '       ' → logprob: -15.375007629394531

Token 1412: ' parts' (ID: 7881)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010823666118085384
    2. ' segments' → logprob: -5.385823726654053
    3. ' with' → logprob: -6.135823726654053
    4. 'segments' → logprob: -6.510823726654053
    5. ' tokens' → logprob: -7.385823726654053
    6. ',' → logprob: -7.885823726654053
    7. 'tokens' → logprob: -8.135823249816895
    8. '),' → logprob: -8.510823249816895
    9. '):
' → logprob: -8.635823249816895
    10. ')
' → logprob: -8.760823249816895

Token 1413: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00897569116204977
    2. ' with' → logprob: -5.258975505828857
    3. ',' → logprob: -5.883975505828857
    4. '       ' → logprob: -8.133975982666016
    5. '),' → logprob: -8.383975982666016
    6. ' that' → logprob: -8.508975982666016
    7. ' and' → logprob: -9.258975982666016
    8. 'with' → logprob: -10.508975982666016
    9. '):
' → logprob: -10.758975982666016
    10. ' to' → logprob: -10.758975982666016

Token 1414: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3390510380268097
    2. ' with' → logprob: -1.7140510082244873
    3. ' and' → logprob: -3.2140510082244873
    4. ' where' → logprob: -3.7140510082244873
    5. ' allowing' → logprob: -4.339051246643066
    6. '        ' → logprob: -4.714051246643066
    7. 'with' → logprob: -4.964051246643066
    8. '           ' → logprob: -5.589051246643066
    9. 'and' → logprob: -5.839051246643066
    10. ' that' → logprob: -6.089051246643066

Token 1415: ' each' (ID: 2454)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4753769040107727
    2. ' such' → logprob: -1.975376844406128
    3. 'such' → logprob: -2.600376844406128
    4. ' where' → logprob: -3.350376844406128
    5. ' with' → logprob: -3.725376844406128
    6. 'and' → logprob: -4.100377082824707
    7. ' allowing' → logprob: -4.225377082824707
    8. 'with' → logprob: -4.225377082824707
    9. 'where' → logprob: -4.475377082824707
    10. ' and' → logprob: -4.850377082824707

Token 1416: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.1799159198999405
    2. 'segment' → logprob: -2.0549159049987793
    3. ' part' → logprob: -4.929915904998779
    4. ' of' → logprob: -5.054915904998779
    5. ' can' → logprob: -5.429915904998779
    6. ' with' → logprob: -5.554915904998779
    7. ' covered' → logprob: -5.929915904998779
    8. ' made' → logprob: -6.304915904998779
    9. ' is' → logprob: -6.304915904998779
    10. ' making' → logprob: -6.429915904998779

Token 1417: ' fly' (ID: 14360)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.07525558024644852
    2. ' is' → logprob: -3.4502556324005127
    3. ' with' → logprob: -4.325255393981934
    4. '       ' → logprob: -4.950255393981934
    5. ' length' → logprob: -5.200255393981934
    6. 'can' → logprob: -5.325255393981934
    7. ' passes' → logprob: -6.825255393981934
    8. ' has' → logprob: -7.075255393981934
    9. ' clear' → logprob: -7.075255393981934
    10. ' must' → logprob: -7.200255393981934

Token 1418: 'able' (ID: 562)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.08976916968822479
    2. 's' → logprob: -2.964769124984741
    3. 'able' → logprob: -4.33976936340332
    4. 'ting' → logprob: -5.08976936340332
    5. '       ' → logprob: -5.46476936340332
    6. '   ' → logprob: -5.96476936340332
    7. 'with' → logprob: -6.71476936340332
    8. ' over' → logprob: -6.96476936340332
    9. ' with' → logprob: -7.08976936340332
    10. 'length' → logprob: -7.08976936340332

Token 1419: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.35827139019966125
    2. ' under' → logprob: -1.3582713603973389
    3. 'with' → logprob: -4.108271598815918
    4. ' at' → logprob: -4.608271598815918
    5. '       ' → logprob: -5.233271598815918
    6. ' without' → logprob: -6.108271598815918
    7. ' by' → logprob: -6.108271598815918
    8. ',' → logprob: -6.108271598815918
    9. 'under' → logprob: -6.233271598815918
    10. ' over' → logprob: -6.733271598815918

Token 1420: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.3869895935058594
    2. 'initial' → logprob: -1.1369895935058594
    3. ' the' → logprob: -9.76198959350586
    4. 'the' → logprob: -11.13698959350586
    5. ' this' → logprob: -11.26198959350586
    6. 'self' → logprob: -11.38698959350586
    7. ' self' → logprob: -12.01198959350586
    8. 'this' → logprob: -12.51198959350586
    9. ' that' → logprob: -12.63698959350586
    10. '	initial' → logprob: -13.01198959350586

Token 1421: '_speed' (ID: 43208)
  Prédit: '_speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -1.0921942703134846e-05
    2. '_' → logprob: -12.12501049041748
    3. 'speed' → logprob: -12.50001049041748
    4. '_s' → logprob: -13.75001049041748
    5. ' _' → logprob: -15.37501049041748
    6. '_velocity' → logprob: -16.125011444091797
    7. ' speed' → logprob: -16.750011444091797
    8. 'Speed' → logprob: -16.875011444091797
    9. '_score' → logprob: -17.250011444091797
    10. '_SPEED' → logprob: -17.250011444091797

Token 1422: ' avoiding' (ID: 49354)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2707185745239258
    2. ' with' → logprob: -1.5207185745239258
    3. '.' → logprob: -5.395718574523926
    4. ',' → logprob: -5.520718574523926
    5. ' by' → logprob: -6.395718574523926
    6. ' and' → logprob: -6.395718574523926
    7. ' at' → logprob: -6.520718574523926
    8. ':' → logprob: -7.020718574523926
    9. ' (' → logprob: -7.395718574523926
    10. 'with' → logprob: -7.395718574523926

Token 1423: ' obstacles' (ID: 46430)
  Prédit: ' obstacles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obstacles' → logprob: -0.42924436926841736
    2. 'ob' → logprob: -1.0542443990707397
    3. ' ob' → logprob: -7.804244518280029
    4. '       ' → logprob: -10.179244041442871
    5. '	ob' → logprob: -10.429244041442871
    6. '   ' → logprob: -10.804244041442871
    7. '```' → logprob: -11.804244041442871
    8. 'all' → logprob: -12.054244041442871
    9. '(ob' → logprob: -12.429244041442871
    10. ' obstáculos' → logprob: -12.679244041442871

Token 1424: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014175265096127987
    2. ',' → logprob: -5.2641754150390625
    3. ':' → logprob: -5.2641754150390625
    4. '(' → logprob: -6.8891754150390625
    5. '(self' → logprob: -7.0141754150390625
    6. '   ' → logprob: -8.264175415039062
    7. '.' → logprob: -8.264175415039062
    8. ':
' → logprob: -8.389175415039062
    9. '```' → logprob: -8.764175415039062
    10. '<|end|>' → logprob: -8.764175415039062

Token 1425: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005643993616104126
    2. ' with' → logprob: -6.380643844604492
    3. ' considering' → logprob: -6.630643844604492
    4. ' and' → logprob: -7.005643844604492
    5. ' given' → logprob: -8.130643844604492
    6. ' continuing' → logprob: -8.380643844604492
    7. 'with' → logprob: -8.505643844604492
    8. 'and' → logprob: -8.630643844604492
    9. '           ' → logprob: -9.130643844604492
    10. ' allowing' → logprob: -9.130643844604492

Token 1426: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022631483152508736
    2. ' considering' → logprob: -5.147631645202637
    3. ' with' → logprob: -5.522631645202637
    4. ' and' → logprob: -5.522631645202637
    5. ' given' → logprob: -6.147631645202637
    6. 'and' → logprob: -6.272631645202637
    7. 'with' → logprob: -6.897631645202637
    8. ' allowing' → logprob: -7.772631645202637
    9. ' continuing' → logprob: -7.772631645202637
    10. 'given' → logprob: -8.022631645202637

Token 1427: ' bullet' (ID: 31926)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.04227381944656372
    2. 'that' → logprob: -3.917273759841919
    3. '       ' → logprob: -4.792273998260498
    4. ' the' → logprob: -4.792273998260498
    5. '   ' → logprob: -5.792273998260498
    6. ' total' → logprob: -7.667273998260498
    7. ' as' → logprob: -8.66727352142334
    8. ' we' → logprob: -9.04227352142334
    9. ' far' → logprob: -9.04227352142334
    10. '    ' → logprob: -9.16727352142334

Token 1428: ' reaches' (ID: 42373)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.2785341143608093
    2. ' reaches' → logprob: -2.653534173965454
    3. ' lands' → logprob: -2.778534173965454
    4. ' hits' → logprob: -3.028534173965454
    5. ' stops' → logprob: -3.903534173965454
    6. ' travels' → logprob: -4.278533935546875
    7. 'can' → logprob: -4.403533935546875
    8. 's' → logprob: -5.528533935546875
    9. ' does' → logprob: -6.528533935546875
    10. ' returns' → logprob: -6.528533935546875

Token 1429: ' target' (ID: 3783)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07351091504096985
    2. ' self' → logprob: -2.6985108852386475
    3. ' the' → logprob: -6.073511123657227
    4. 'the' → logprob: -6.698511123657227
    5. 'target' → logprob: -10.823511123657227
    6. '       ' → logprob: -12.948511123657227
    7. ' target' → logprob: -13.073511123657227
    8. '   ' → logprob: -13.323511123657227
    9. '(self' → logprob: -13.323511123657227
    10. '```' → logprob: -13.698511123657227

Token 1430: ' position' (ID: 4010)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.574970006942749
    2. ' with' → logprob: -1.449970006942749
    3. 'with' → logprob: -2.949970006942749
    4. '.' → logprob: -3.324970006942749
    5. ' at' → logprob: -3.324970006942749
    6. ' within' → logprob: -3.949970006942749
    7. ' without' → logprob: -4.074970245361328
    8. '.
' → logprob: -4.824970245361328
    9. ' before' → logprob: -4.949970245361328
    10. '   ' → logprob: -5.449970245361328

Token 1431: ' hitting' (ID: 34749)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22708074748516083
    2. ' with' → logprob: -2.352080821990967
    3. ' without' → logprob: -3.477080821990967
    4. '.' → logprob: -3.602080821990967
    5. ' at' → logprob: -4.102080821990967
    6. 'with' → logprob: -4.227080821990967
    7. 'without' → logprob: -5.102080821990967
    8. ' and' → logprob: -5.227080821990967
    9. ' within' → logprob: -7.227080821990967
    10. '.
' → logprob: -7.352080821990967

Token 1432: ' ground' (ID: 7740)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.17086100578308105
    2. 'the' → logprob: -2.045861005783081
    3. ' self' → logprob: -4.92086124420166
    4. ' the' → logprob: -4.92086124420166
    5. 'exact' → logprob: -5.54586124420166
    6. 'target' → logprob: -5.79586124420166
    7. 'd' → logprob: -6.42086124420166
    8. 'ground' → logprob: -7.29586124420166
    9. 'all' → logprob: -7.67086124420166
    10. ' at' → logprob: -7.79586124420166

Token 1433: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018369650468230247
    2. ' at' → logprob: -5.643369674682617
    3. '
' → logprob: -5.768369674682617
    4. ' with' → logprob: -5.893369674682617
    5. '.' → logprob: -6.143369674682617
    6. '(self' → logprob: -6.393369674682617
    7. ',' → logprob: -6.768369674682617
    8. '(' → logprob: -7.268369674682617
    9. '```' → logprob: -7.643369674682617
    10. ':
' → logprob: -7.893369674682617

Token 1434: ' last' (ID: 2174)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.6792992949485779
    2. 'self' → logprob: -0.8042992949485779
    3. ' least' → logprob: -3.3042993545532227
    4. 'exact' → logprob: -5.929299354553223
    5. 'the' → logprob: -6.179299354553223
    6. 'distance' → logprob: -6.429299354553223
    7. ' self' → logprob: -6.679299354553223
    8. '[self' → logprob: -8.679299354553223
    9. 'final' → logprob: -8.929299354553223
    10. 'last' → logprob: -9.179299354553223

Token 1435: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3696026802062988
    2. '.' → logprob: -1.6196026802062988
    3. '   ' → logprob: -1.6196026802062988
    4. '.
' → logprob: -2.494602680206299
    5. '
' → logprob: -2.744602680206299
    6. ')' → logprob: -2.869602680206299
    7. 'point' → logprob: -3.244602680206299
    8. ' point' → logprob: -3.369602680206299
    9. ' segment' → logprob: -4.869602680206299
    10. ' with' → logprob: -5.119602680206299

Token 1436: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003936152206733823
    2. '
' → logprob: -8.250393867492676
    3. '        
' → logprob: -9.375393867492676
    4. '```' → logprob: -10.375393867492676
    5. 'b' → logprob: -12.375393867492676
    6. '   ' → logprob: -13.125393867492676
    7. ',' → logprob: -13.375393867492676
    8. ')' → logprob: -13.500393867492676
    9. '#' → logprob: -13.625393867492676
    10. '           ' → logprob: -14.250393867492676

Token 1437: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0837087631225586
    2. '
' → logprob: -2.5837087631225586
    3. '```' → logprob: -6.208708763122559
    4. '        
' → logprob: -6.333708763122559
    5. '\n' → logprob: -7.458708763122559
    6. '<|end|>' → logprob: -9.083708763122559
    7. '"""' → logprob: -9.833708763122559
    8. '\' → logprob: -10.083708763122559
    9. '    
' → logprob: -10.458708763122559
    10. '
' → logprob: -10.458708763122559

Token 1438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014442270912695676
    2. '   ' → logprob: -9.250144004821777
    3. '```' → logprob: -11.250144004821777
    4. 'b' → logprob: -11.500144004821777
    5. '        
' → logprob: -11.625144004821777
    6. '
' → logprob: -11.750144004821777
    7. 'for' → logprob: -13.000144004821777
    8. '#' → logprob: -13.500144004821777
    9. 'def' → logprob: -13.750144004821777
    10. '           ' → logprob: -14.125144004821777

Token 1439: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7541068196296692
    2. 'for' → logprob: -1.1291067600250244
    3. '   ' → logprob: -2.3791067600250244
    4. 'split' → logprob: -2.6291067600250244
    5. 'spl' → logprob: -4.0041069984436035
    6. ' for' → logprob: -4.7541069984436035
    7. 'bounce' → logprob: -5.6291069984436035
    8. 'b' → logprob: -5.6291069984436035
    9. '```' → logprob: -5.8791069984436035
    10. '#' (adapté à ' #') → logprob: -6.6291069984436035

Token 1440: ' Dynamic' (ID: 37191)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004922293126583099
    2. '       ' → logprob: -6.254922389984131
    3. 'split' → logprob: -6.504922389984131
    4. 'spl' → logprob: -7.879922389984131
    5. '#' → logprob: -8.129921913146973
    6. 'bounce' → logprob: -8.254921913146973
    7. '   ' → logprob: -8.754921913146973
    8. 'b' → logprob: -9.254921913146973
    9. 'if' → logprob: -9.504921913146973
    10. 'def' → logprob: -10.004921913146973

Token 1441: ' programming' (ID: 23238)
  Prédit: ' programming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programming' → logprob: -0.0028185509145259857
    2. 'program' → logprob: -6.002818584442139
    3. 'Programming' → logprob: -8.25281810760498
    4. ' Programming' → logprob: -9.75281810760498
    5. '_program' → logprob: -11.50281810760498
    6. ' program' → logprob: -11.62781810760498
    7. '-program' → logprob: -12.50281810760498
    8. ' programmation' → logprob: -14.87781810760498
    9. 'import' → logprob: -15.62781810760498
    10. '   ' → logprob: -15.75281810760498

Token 1442: ' approach' (ID: 7139)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7635312080383301
    2. 'dp' → logprob: -0.8885312080383301
    3. '       ' → logprob: -2.88853120803833
    4. ' dp' → logprob: -3.01353120803833
    5. ':' → logprob: -5.26353120803833
    6. ':
' → logprob: -6.13853120803833
    7. ' =' → logprob: -6.26353120803833
    8. '_dp' → logprob: -6.88853120803833
    9. ',' → logprob: -7.51353120803833
    10. '        
' → logprob: -7.51353120803833

Token 1443: ':
' (ID: 734)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4775669276714325
    2. '       ' → logprob: -0.9775669574737549
    3. '        
' → logprob: -6.352566719055176
    4. '```' → logprob: -6.852566719055176
    5. ':' → logprob: -8.852566719055176
    6. '
' → logprob: -8.977566719055176
    7. ',' → logprob: -9.227566719055176
    8. ':
' → logprob: -9.602566719055176
    9. 'dp' → logprob: -10.352566719055176
    10. '

' → logprob: -10.352566719055176

Token 1444: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011908221058547497
    2. '```' → logprob: -7.001190662384033
    3. ' dp' → logprob: -9.251191139221191
    4. 'dp' → logprob: -9.376191139221191
    5. '
' → logprob: -9.626191139221191
    6. ' lines' → logprob: -11.751191139221191
    7. ' self' → logprob: -12.876191139221191
    8. '        
' → logprob: -13.001191139221191
    9. '#' → logprob: -13.251191139221191
    10. ' from' → logprob: -13.501191139221191

Token 1445: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00728561170399189
    2. ' dp' → logprob: -5.5072855949401855
    3. '       ' → logprob: -5.8822855949401855
    4. 'n' → logprob: -8.882286071777344
    5. 'from' → logprob: -8.882286071777344
    6. 'dist' → logprob: -10.507286071777344
    7. ' n' → logprob: -10.632286071777344
    8. ' from' → logprob: -10.882286071777344
    9. 'DP' → logprob: -11.007286071777344
    10. 'import' → logprob: -11.757286071777344

Token 1446: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0903853327035904
    2. ' dp' → logprob: -2.5903854370117188
    3. '       ' → logprob: -4.590385437011719
    4. '```' → logprob: -8.465385437011719
    5. 'n' → logprob: -8.965385437011719
    6. ' n' → logprob: -8.965385437011719
    7. 'visited' → logprob: -9.090385437011719
    8. 'dist' → logprob: -9.590385437011719
    9. ' visited' → logprob: -9.715385437011719
    10. '_dp' → logprob: -10.090385437011719

Token 1447: '[b' (ID: 40800)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009480277076363564
    2. '=' → logprob: -4.7594804763793945
    3. ':' → logprob: -8.259480476379395
    4. '=[' → logprob: -8.884480476379395
    5. '```' → logprob: -9.134480476379395
    6. '[' → logprob: -9.759480476379395
    7. '_prev' → logprob: -10.134480476379395
    8. '
' → logprob: -10.384480476379395
    9. '_' → logprob: -10.384480476379395
    10. '   ' → logprob: -10.884480476379395

Token 1448: 'ounce' (ID: 19744)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.28732913732528687
    2. '][' → logprob: -1.9123291969299316
    3. ']=' → logprob: -2.5373291969299316
    4. 'y' → logprob: -5.537329196929932
    5. 'ool' → logprob: -5.537329196929932
    6. '],' → logprob: -6.162329196929932
    7. 'ools' → logprob: -6.287329196929932
    8. ']:' → logprob: -6.787329196929932
    9. 'ounds' → logprob: -7.287329196929932
    10. ']
' → logprob: -7.287329196929932

Token 1449: '][' (ID: 2696)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2855902910232544
    2. ']' → logprob: -1.6605902910232544
    3. '_count' → logprob: -3.535590171813965
    4. ']=' → logprob: -4.285590171813965
    5. ']_' → logprob: -5.785590171813965
    6. '_s' → logprob: -5.910590171813965
    7. ' =' → logprob: -6.160590171813965
    8. '_counts' → logprob: -6.410590171813965
    9. '_idx' → logprob: -6.785590171813965
    10. '_index' → logprob: -7.160590171813965

Token 1450: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3114326000213623
    2. 'position' → logprob: -2.1864326000213623
    3. 'distance' → logprob: -2.3114326000213623
    4. 'segment' → logprob: -3.5614326000213623
    5. 'dist' → logprob: -4.061432838439941
    6. 'i' → logprob: -5.936432838439941
    7. 'length' → logprob: -6.686432838439941
    8. 'd' → logprob: -6.936432838439941
    9. 'target' → logprob: -7.061432838439941
    10. '0' → logprob: -7.311432838439941

Token 1451: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00394434854388237
    2. ' ]' → logprob: -6.628944396972656
    3. '][' → logprob: -6.628944396972656
    4. ']=' → logprob: -7.753944396972656
    5. ']:' → logprob: -8.003944396972656
    6. 's' → logprob: -8.378944396972656
    7. ']:
' → logprob: -9.753944396972656
    8. '       ' → logprob: -10.003944396972656
    9. '   ' → logprob: -10.503944396972656
    10. '_pos' → logprob: -11.003944396972656

Token 1452: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0014402345987036824
    2. ':' → logprob: -7.001440048217773
    3. '=' → logprob: -7.751440048217773
    4. ']' → logprob: -10.126440048217773
    5. '[' → logprob: -10.876440048217773
    6. '       ' → logprob: -11.126440048217773
    7. '][' → logprob: -12.376440048217773
    8. ' :' → logprob: -13.001440048217773
    9. '```' → logprob: -13.001440048217773
    10. '[b' → logprob: -13.376440048217773

Token 1453: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.2396164983510971
    2. 'set' → logprob: -1.7396165132522583
    3. 'False' → logprob: -3.9896163940429688
    4. ' True' → logprob: -4.739616394042969
    5. '{' → logprob: -5.239616394042969
    6. ' set' → logprob: -6.489616394042969
    7. 'float' → logprob: -6.614616394042969
    8. '[' → logprob: -6.739616394042969
    9. 'bool' → logprob: -8.239616394042969
    10. 'Set' → logprob: -8.739616394042969

Token 1454: ' if' (ID: 538)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18236665427684784
    2. '=' → logprob: -2.6823666095733643
    3. '[' → logprob: -3.0573666095733643
    4. '       ' → logprob: -3.5573666095733643
    5. ']' → logprob: -4.932366847991943
    6. ':' → logprob: -5.682366847991943
    7. '][' → logprob: -6.057366847991943
    8. '```' → logprob: -6.432366847991943
    9. '[pos' → logprob: -6.432366847991943
    10. ')' → logprob: -6.807366847991943

Token 1455: ' can' (ID: 665)
  Prédit: ' there'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' there' → logprob: -1.1709773540496826
    2. 'possible' → logprob: -2.1709773540496826
    3. 'there' → logprob: -2.1709773540496826
    4. 'reachable' → logprob: -2.4209773540496826
    5. ' True' → logprob: -2.9209773540496826
    6. 'pos' → logprob: -2.9209773540496826
    7. 'True' → logprob: -3.1709773540496826
    8. ' the' → logprob: -3.6709773540496826
    9. 'the' → logprob: -3.6709773540496826
    10. ' reachable' → logprob: -3.7959773540496826

Token 1456: ' reach' (ID: 7627)
  Prédit: ' reach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reach' → logprob: -0.28237420320510864
    2. 'reach' → logprob: -1.4073741436004639
    3. '       ' → logprob: -7.907374382019043
    4. '   ' → logprob: -8.282374382019043
    5. ' ' → logprob: -8.782374382019043
    6. '    ' → logprob: -9.157374382019043
    7. ' be' → logprob: -9.907374382019043
    8. '  ' → logprob: -10.657374382019043
    9. ' fly' → logprob: -10.657374382019043
    10. ' hit' → logprob: -10.782374382019043

Token 1457: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.05804083123803139
    2. ' pos' → logprob: -2.9330408573150635
    3. 'position' → logprob: -5.933040618896484
    4. ' position' → logprob: -7.683040618896484
    5. 'bounce' → logprob: -11.433040618896484
    6. '       ' → logprob: -11.683040618896484
    7. '           ' → logprob: -12.933040618896484
    8. 'distance' → logprob: -13.058040618896484
    9. '(pos' → logprob: -13.058040618896484
    10. ' bounce' → logprob: -13.308040618896484

Token 1458: ' with' (ID: 483)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.1534494161605835
    2. '       ' → logprob: -1.2784494161605835
    3. '][' → logprob: -1.7784494161605835
    4. ' with' → logprob: -2.278449535369873
    5. '
' → logprob: -2.903449535369873
    6. ']' → logprob: -3.653449535369873
    7. 'with' → logprob: -4.028449535369873
    8. '[' → logprob: -4.903449535369873
    9. ' at' → logprob: -5.028449535369873
    10. '```' → logprob: -5.528449535369873

Token 1459: ' bounce' (ID: 57156)
  Prédit: 'bounce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bounce' → logprob: -0.28580528497695923
    2. ' bounce' → logprob: -1.4108052253723145
    3. 'initial' → logprob: -6.4108052253723145
    4. 'exact' → logprob: -7.4108052253723145
    5. 'b' → logprob: -7.5358052253723145
    6. ' initial' → logprob: -7.5358052253723145
    7. '```' → logprob: -8.035805702209473
    8. 'some' → logprob: -8.410805702209473
    9. ' given' → logprob: -9.035805702209473
    10. ' some' → logprob: -9.535805702209473

Token 1460: ' b' (ID: 287)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16325120627880096
    2. '][' → logprob: -2.4132511615753174
    3. ']' → logprob: -3.2882511615753174
    4. '[' → logprob: -5.0382513999938965
    5. '[s' → logprob: -5.7882513999938965
    6. '_s' → logprob: -5.9132513999938965
    7. '   ' → logprob: -6.1632513999938965
    8. '_' → logprob: -6.6632513999938965
    9. 'es' → logprob: -7.1632513999938965
    10. '       ' → logprob: -7.1632513999938965

Token 1461: 'ounces' (ID: 52219)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8905559778213501
    2. '       ' → logprob: -1.51555597782135
    3. '][' → logprob: -2.1405558586120605
    4. '
' → logprob: -2.6405558586120605
    5. ']
' → logprob: -2.7655558586120605
    6. ']' → logprob: -3.1405558586120605
    7. '   ' → logprob: -3.3905558586120605
    8. 'es' → logprob: -5.1405558586120605
    9. '           ' → logprob: -5.7655558586120605
    10. '[]
' → logprob: -5.7655558586120605

Token 1462: ' within' (ID: 3518)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35867786407470703
    2. '       ' → logprob: -1.733677864074707
    3. ' =' → logprob: -3.358677864074707
    4. ':
' → logprob: -3.858677864074707
    5. ']' → logprob: -4.358677864074707
    6. '][' → logprob: -4.608677864074707
    7. '[' → logprob: -5.108677864074707
    8. '   ' → logprob: -5.233677864074707
    9. '        
' → logprob: -5.483677864074707
    10. 's' → logprob: -5.608677864074707

Token 1463: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.20679305493831635
    2. ' initial' → logprob: -1.7067930698394775
    3. 'the' → logprob: -6.706792831420898
    4. 'self' → logprob: -7.081792831420898
    5. 'bounce' → logprob: -7.081792831420898
    6. ' given' → logprob: -7.456792831420898
    7. 'current' → logprob: -8.081792831420898
    8. ' the' → logprob: -8.456792831420898
    9. ' bounce' → logprob: -8.581792831420898
    10. 'given' → logprob: -9.081792831420898

Token 1464: '_speed' (ID: 43208)
  Prédit: '_speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -4.894790981779806e-05
    2. '_s' → logprob: -10.750048637390137
    3. '_' → logprob: -11.375048637390137
    4. 'speed' → logprob: -11.875048637390137
    5. ' _' → logprob: -12.375048637390137
    6. '_score' → logprob: -13.375048637390137
    7. '_velocity' → logprob: -14.750048637390137
    8. '   ' → logprob: -15.000048637390137
    9. '_distance' → logprob: -15.125048637390137
    10. '```' → logprob: -15.250048637390137

Token 1465: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8418430089950562
    2. '       ' → logprob: -1.4668430089950562
    3. ':
' → logprob: -1.4668430089950562
    4. ']' → logprob: -4.341843128204346
    5. ']:
' → logprob: -4.591843128204346
    6. '[' → logprob: -4.716843128204346
    7. ':' → logprob: -4.716843128204346
    8. '   ' → logprob: -4.841843128204346
    9. '][' → logprob: -4.966843128204346
    10. ' =' → logprob: -5.091843128204346

Token 1466: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01942572183907032
    2. '
' → logprob: -4.144425868988037
    3. '        
' → logprob: -6.644425868988037
    4. ',' → logprob: -7.769425868988037
    5. '```' → logprob: -7.769425868988037
    6. '[' → logprob: -8.144425392150879
    7. '        ' → logprob: -9.269425392150879
    8. ':' → logprob: -9.269425392150879
    9. ' =' → logprob: -9.519425392150879
    10. '           ' → logprob: -9.519425392150879

Token 1467: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3187828063964844
    2. '       ' → logprob: -1.5687828063964844
    3. '\n' → logprob: -3.1937828063964844
    4. '```' → logprob: -5.193782806396484
    5. '        
' → logprob: -5.568782806396484
    6. ' 
' → logprob: -5.818782806396484
    7. '[' → logprob: -6.068782806396484
    8. '  
' → logprob: -6.068782806396484
    9. '\' → logprob: -6.693782806396484
    10. ',' → logprob: -7.318782806396484

Token 1468: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06436024606227875
    2. '
' → logprob: -2.9393601417541504
    3. ' 
' → logprob: -5.43936014175415
    4. '        ' → logprob: -6.68936014175415
    5. '        
' → logprob: -7.56436014175415
    6. '```' → logprob: -7.56436014175415
    7. ',' → logprob: -8.064360618591309
    8. '\n' → logprob: -8.189360618591309
    9. '   ' → logprob: -8.439360618591309
    10. '\' → logprob: -8.564360618591309

Token 1469: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3928214311599731
    2. 'pos' → logprob: -2.1428213119506836
    3. 'the' → logprob: -2.3928213119506836
    4. '#' → logprob: -2.7678213119506836
    5. ' self' → logprob: -3.0178213119506836
    6. ' the' → logprob: -3.0178213119506836
    7. 'self' → logprob: -3.1428213119506836
    8. ' pos' → logprob: -3.2678213119506836
    9. 'since' → logprob: -3.2678213119506836
    10. 'positions' → logprob: -3.2678213119506836

Token 1470: ' do' (ID: 621)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -1.2092899084091187
    2. ' only' → logprob: -1.9592899084091187
    3. ' don't' → logprob: -2.459290027618408
    4. 'need' → logprob: -2.834290027618408
    5. ' want' → logprob: -2.959290027618408
    6. ' will' → logprob: -2.959290027618408
    7. ' cannot' → logprob: -3.334290027618408
    8. ' do' → logprob: -3.459290027618408
    9. '   ' → logprob: -3.459290027618408
    10. '#' → logprob: -3.584290027618408

Token 1471: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.038588739931583405
    2. ' not' → logprob: -3.288588762283325
    3. 'n't' → logprob: -9.163588523864746
    4. 'it' → logprob: -9.163588523864746
    5. '       ' → logprob: -9.788588523864746
    6. '   ' → logprob: -9.788588523864746
    7. 'this' → logprob: -10.413588523864746
    8. 'full' → logprob: -10.413588523864746
    9. 'exact' → logprob: -10.538588523864746
    10. 'the' → logprob: -11.038588523864746

Token 1472: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -1.4133574962615967
    2. 'implement' → logprob: -1.7883574962615967
    3. 'maint' → logprob: -2.1633574962615967
    4. ' have' → logprob: -2.1633574962615967
    5. ' use' → logprob: -2.6633574962615967
    6. ' implement' → logprob: -2.7883574962615967
    7. '
' → logprob: -3.2883574962615967
    8. ' maintain' → logprob: -3.6633574962615967
    9. 'store' → logprob: -3.6633574962615967
    10. ' store' → logprob: -3.9133574962615967

Token 1473: ' many' (ID: 1991)
  Prédit: 'explicit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'explicit' → logprob: -0.8901639580726624
    2. 'positions' → logprob: -1.1401638984680176
    3. ' explicit' → logprob: -2.7651638984680176
    4. 'dp' → logprob: -3.3901638984680176
    5. 'pos' → logprob: -3.6401638984680176
    6. 'a' → logprob: -3.6401638984680176
    7. 'exact' → logprob: -4.015163898468018
    8. 'the' → logprob: -4.140163898468018
    9. 'all' → logprob: -4.140163898468018
    10. 'dis' → logprob: -4.765163898468018

Token 1474: ' discrete' (ID: 76501)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.2470006942749023
    2. ' positions' → logprob: -1.6220006942749023
    3. 'tokens' → logprob: -1.8720006942749023
    4. ' tokens' → logprob: -2.3720006942749023
    5. '_' → logprob: -3.6220006942749023
    6. '
' → logprob: -3.7470006942749023
    7. ' more' → logprob: -4.122000694274902
    8. ' possible' → logprob: -4.122000694274902
    9. ' lines' → logprob: -4.122000694274902
    10. 'segments' → logprob: -4.247000694274902

Token 1475: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.34029415249824524
    2. ' positions' → logprob: -1.4652941226959229
    3. 'points' → logprob: -3.215294122695923
    4. ' points' → logprob: -4.215294361114502
    5. '
' → logprob: -7.340294361114502
    6. 'tokens' → logprob: -8.590293884277344
    7. 'segments' → logprob: -8.590293884277344
    8. 'states' → logprob: -8.840293884277344
    9. 'steps' → logprob: -8.965293884277344
    10. 'possible' → logprob: -8.965293884277344

Token 1476: ';' (ID: 26)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4324988126754761
    2. '<|end|>' → logprob: -1.932498812675476
    3. '       ' → logprob: -2.5574989318847656
    4. '
' → logprob: -2.5574989318847656
    5. '<|end|>' → logprob: -4.932498931884766
    6. ':
' → logprob: -5.057498931884766
    7. '.' → logprob: -5.307498931884766
    8. '   ' → logprob: -5.432498931884766
    9. ',' → logprob: -5.557498931884766
    10. '\n' → logprob: -5.682498931884766

Token 1477: ' need' (ID: 1309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3399447798728943
    2. '       ' → logprob: -1.839944839477539
    3. '<|end|>' → logprob: -3.089944839477539
    4. 'return' → logprob: -4.089944839477539
    5. ' return' → logprob: -4.214944839477539
    6. ' continue' → logprob: -4.339944839477539
    7. ' #' → logprob: -4.464944839477539
    8. 'continue' → logprob: -4.589944839477539
    9. '
' → logprob: -5.089944839477539
    10. 'import' → logprob: -5.839944839477539

Token 1478: ' logic' (ID: 18485)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.04933280497789383
    2. ' to' → logprob: -3.049332857131958
    3. 'a' → logprob: -8.049332618713379
    4. 'def' → logprob: -8.799332618713379
    5. '   ' → logprob: -9.174332618713379
    6. 'more' → logprob: -10.424332618713379
    7. 'an' → logprob: -10.424332618713379
    8. 'all' → logprob: -11.174332618713379
    9. 'code' → logprob: -11.174332618713379
    10. '
' → logprob: -11.549332618713379

Token 1479: ' friend' (ID: 5168)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9728133678436279
    2. ':' → logprob: -1.097813367843628
    3. '
' → logprob: -1.722813367843628
    4. ':
' → logprob: -3.472813367843628
    5. ' to' → logprob: -3.847813367843628
    6. '<|end|>' → logprob: -4.597813606262207
    7. '        
' → logprob: -4.597813606262207
    8. '\n' → logprob: -5.097813606262207
    9. ',' → logprob: -5.347813606262207
    10. '   ' → logprob: -5.472813606262207

Token 1480: 'lier' (ID: 66165)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1156774759292603
    2. 's' → logprob: -1.8656774759292603
    3. '       ' → logprob: -2.1156773567199707
    4. ':' → logprob: -2.6156773567199707
    5. 'ly' → logprob: -2.8656773567199707
    6. 'd' → logprob: -2.9906773567199707
    7. '=' → logprob: -3.1156773567199707
    8. ')' → logprob: -3.2406773567199707
    9. '.' → logprob: -3.2406773567199707
    10. ' ' → logprob: -4.490677356719971

Token 1481: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3282313644886017
    2. '<|end|>' → logprob: -2.7032313346862793
    3. '
' → logprob: -2.9532313346862793
    4. ' to' → logprob: -3.0782313346862793
    5. '   ' → logprob: -3.7032313346862793
    6. ':' → logprob: -3.8282313346862793
    7. '        
' → logprob: -4.453231334686279
    8. ' for' → logprob: -4.578231334686279
    9. ' with' → logprob: -4.703231334686279
    10. '.' → logprob: -4.703231334686279

Token 1482: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056877393275499344
    2. '        
' → logprob: -4.181877613067627
    3. '<|end|>' → logprob: -4.806877613067627
    4. ' 
' → logprob: -4.931877613067627
    5. '
' → logprob: -5.181877613067627
    6. '\' → logprob: -5.681877613067627
    7. '[' → logprob: -6.056877613067627
    8. '\n' → logprob: -6.181877613067627
    9. ':' → logprob: -6.181877613067627
    10. '   ' → logprob: -6.431877613067627

Token 1483: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006298751104623079
    2. '
' → logprob: -8.250629425048828
    3. '#' → logprob: -8.500629425048828
    4. '```' → logprob: -9.375629425048828
    5. ' lines' → logprob: -10.500629425048828
    6. 'return' → logprob: -11.375629425048828
    7. '        
' → logprob: -11.625629425048828
    8. ' #' → logprob: -12.000629425048828
    9. 'segments' → logprob: -12.250629425048828
    10. ',' → logprob: -12.750629425048828

Token 1484: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.676981345459353e-06
    2. '
' → logprob: -13.500005722045898
    3. 'import' → logprob: -13.875005722045898
    4. '#' → logprob: -14.000005722045898
    5. 'from' → logprob: -14.375005722045898
    6. '```' → logprob: -14.375005722045898
    7. '        
' → logprob: -14.625005722045898
    8. '   ' → logprob: -14.750005722045898
    9. '           ' → logprob: -16.5000057220459
    10. 'self' → logprob: -16.8750057220459

Token 1485: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.6285306811332703
    2. 'segments' → logprob: -1.378530740737915
    3. 'dp' → logprob: -2.503530740737915
    4. '       ' → logprob: -2.628530740737915
    5. 'spl' → logprob: -3.628530740737915
    6. 'results' → logprob: -4.503530502319336
    7. 'positions' → logprob: -4.628530502319336
    8. 'possible' → logprob: -6.128530502319336
    9. 'dist' → logprob: -6.378530502319336
    10. 'from' → logprob: -6.878530502319336

Token 1486: ' Instead' (ID: 21050)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.6562548875808716
    2. '       ' → logprob: -1.2812548875808716
    3. '#' → logprob: -2.031254768371582
    4. 'spl' → logprob: -3.531254768371582
    5. 'positions' → logprob: -4.156254768371582
    6. ' segments' → logprob: -4.781254768371582
    7. ' splits' → logprob: -5.281254768371582
    8. 'dp' → logprob: -5.781254768371582
    9. '```' → logprob: -6.781254768371582
    10. 'possible' → logprob: -6.781254768371582

Token 1487: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029668906703591347
    2. ',' → logprob: -4.154668807983398
    3. ':' → logprob: -4.654668807983398
    4. '
' → logprob: -6.279668807983398
    5. 'import' → logprob: -7.654668807983398
    6. ':
' → logprob: -7.654668807983398
    7. ' of' → logprob: -7.904668807983398
    8. '        
' → logprob: -8.654668807983398
    9. 'def' → logprob: -8.779668807983398
    10. 'of' → logprob: -9.779668807983398

Token 1488: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5524191856384277
    2. '       ' → logprob: -1.9274191856384277
    3. 'for' → logprob: -2.1774191856384277
    4. 'segments' → logprob: -3.1774191856384277
    5. 'spl' → logprob: -3.1774191856384277
    6. ' for' → logprob: -3.4274191856384277
    7. ' splits' → logprob: -3.6774191856384277
    8. 'split' → logprob: -5.052419185638428
    9. ' #' → logprob: -5.302419185638428
    10. ' segments' → logprob: -5.927419185638428

Token 1489: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.14589989185333252
    2. 'use' → logprob: -3.145899772644043
    3. 'consider' → logprob: -3.520899772644043
    4. 'return' → logprob: -4.270899772644043
    5. ' try' → logprob: -4.645899772644043
    6. '       ' → logprob: -4.645899772644043
    7. 'attempt' → logprob: -5.270899772644043
    8. '#' → logprob: -5.520899772644043
    9. 'implement' → logprob: -5.645899772644043
    10. '
' → logprob: -5.770899772644043

Token 1490: ' all' (ID: 722)
  Prédit: 'spl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spl' → logprob: -0.8235231041908264
    2. 'all' → logprob: -1.0735230445861816
    3. 'b' → logprob: -2.6985230445861816
    4. '       ' → logprob: -3.1985230445861816
    5. 'for' → logprob: -3.3235230445861816
    6. ' all' → logprob: -3.8235230445861816
    7. 'segments' → logprob: -4.573523044586182
    8. 'possible' → logprob: -4.573523044586182
    9. 'from' → logprob: -4.698523044586182
    10. 'to' → logprob: -5.448523044586182

Token 1491: ' bounce' (ID: 57156)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5602917671203613
    2. 'possible' → logprob: -1.5602917671203613
    3. 'bounce' → logprob: -2.1852917671203613
    4. 'spl' → logprob: -3.4352917671203613
    5. ' b' → logprob: -3.6852917671203613
    6. 'number' → logprob: -4.685291767120361
    7. ' possible' → logprob: -4.810291767120361
    8. 'split' → logprob: -4.935291767120361
    9. ' bounce' → logprob: -5.060291767120361
    10. 'numbers' → logprob: -5.185291767120361

Token 1492: ' splits' (ID: 76848)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.413485586643219
    2. 'spl' → logprob: -2.538485527038574
    3. 'counts' → logprob: -2.538485527038574
    4. ' counts' → logprob: -2.913485527038574
    5. '_counts' → logprob: -3.288485527038574
    6. '+' → logprob: -3.538485527038574
    7. '   ' → logprob: -4.413485527038574
    8. 'positions' → logprob: -4.413485527038574
    9. '_s' → logprob: -4.663485527038574
    10. '       ' → logprob: -5.163485527038574

Token 1493: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8385583162307739
    2. ' and' → logprob: -1.463558316230774
    3. '       ' → logprob: -1.713558316230774
    4. ',' → logprob: -2.8385581970214844
    5. ':
' → logprob: -3.0885581970214844
    6. '.' → logprob: -4.338558197021484
    7. ' with' → logprob: -4.963558197021484
    8. '<|end|>' → logprob: -4.963558197021484
    9. ' (' → logprob: -5.713558197021484
    10. ' of' → logprob: -6.088558197021484

Token 1494: 'positions' (ID: 32297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.26322975754737854
    2. 'b' → logprob: -1.8882297277450562
    3. ')' → logprob: -3.1382298469543457
    4. '0' → logprob: -3.6382298469543457
    5. ' self' → logprob: -5.638229846954346
    6. 'range' → logprob: -6.888229846954346
    7. '       ' → logprob: -7.138229846954346
    8. 'initial' → logprob: -7.263229846954346
    9. ' b' → logprob: -7.638229846954346
    10. 'max' → logprob: -7.888229846954346

Token 1495: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.538966178894043
    2. ',' → logprob: -2.413966178894043
    3. ' between' → logprob: -3.288966178894043
    4. 'between' → logprob: -3.413966178894043
    5. '=' → logprob: -3.538966178894043
    6. '+' → logprob: -3.788966178894043
    7. 'in' → logprob: -3.788966178894043
    8. ' in' → logprob: -3.913966178894043
    9. 'from' → logprob: -4.163966178894043
    10. '),' → logprob: -4.663966178894043

Token 1496: ' bounce' (ID: 57156)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03945950046181679
    2. ' b' → logprob: -3.664459466934204
    3. 'bounce' → logprob: -4.539459705352783
    4. 'the' → logprob: -6.164459705352783
    5. ' the' → logprob: -9.914459228515625
    6. ' bouncing' → logprob: -10.289459228515625
    7. 'break' → logprob: -10.539459228515625
    8. 'spl' → logprob: -10.789459228515625
    9. ' bounce' → logprob: -10.789459228515625
    10. ')b' → logprob: -11.164459228515625

Token 1497: ' points' (ID: 5571)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0020285656210035086
    2. ' s' → logprob: -6.752028465270996
    3. 'es' → logprob: -7.377028465270996
    4. ')' → logprob: -9.252028465270996
    5. '_s' → logprob: -9.752028465270996
    6. ')s' → logprob: -10.377028465270996
    7. '_positions' → logprob: -11.252028465270996
    8. 'positions' → logprob: -11.752028465270996
    9. 'points' → logprob: -11.877028465270996
    10. '_points' → logprob: -12.627028465270996

Token 1498: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2548329532146454
    2. ',' → logprob: -2.6298329830169678
    3. ' and' → logprob: -3.3798329830169678
    4. '),' → logprob: -3.3798329830169678
    5. '):' → logprob: -3.5048329830169678
    6. '):
' → logprob: -4.379832744598389
    7. ' between' → logprob: -4.504832744598389
    8. ' in' → logprob: -5.379832744598389
    9. 'and' → logprob: -5.379832744598389
    10. ' up' → logprob: -5.504832744598389

Token 1499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02397340163588524
    2. ',' → logprob: -4.52397346496582
    3. ':' → logprob: -5.27397346496582
    4. ' and' → logprob: -6.14897346496582
    5. ' with' → logprob: -6.52397346496582
    6. '.' → logprob: -6.89897346496582
    7. ')' → logprob: -7.27397346496582
    8. '[' → logprob: -7.77397346496582
    9. ' in' → logprob: -8.52397346496582
    10. ' (' → logprob: -8.77397346496582

Token 1500: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00673218397423625
    2. ',' → logprob: -5.756731986999512
    3. ')' → logprob: -7.256731986999512
    4. '<|end|>' → logprob: -7.381731986999512
    5. ' and' → logprob: -7.506731986999512
    6. ':' → logprob: -8.006731986999512
    7. '.' → logprob: -8.131731986999512
    8. '<|end|>' → logprob: -8.506731986999512
    9. ' with' → logprob: -8.881731986999512
    10. '
' → logprob: -9.256731986999512

Token 1501: ' Because' (ID: 13602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04376191273331642
    2. 'spl' → logprob: -3.543761968612671
    3. 'results' → logprob: -5.543761730194092
    4. 'segments' → logprob: -5.793761730194092
    5. '#' → logprob: -6.668761730194092
    6. ' splits' → logprob: -6.918761730194092
    7. ' results' → logprob: -7.418761730194092
    8. 'positions' → logprob: -7.543761730194092
    9. 'result' → logprob: -7.668761730194092
    10. 'for' → logprob: -7.918761730194092

Token 1502: ' number' (ID: 2086)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5452103018760681
    2. 'the' → logprob: -1.045210361480713
    3. 'b' → logprob: -4.045210361480713
    4. '#' → logprob: -4.420210361480713
    5. 'len' → logprob: -4.670210361480713
    6. ' the' → logprob: -5.045210361480713
    7. ' self' → logprob: -5.420210361480713
    8. 'initial' → logprob: -5.420210361480713
    9. 'max' → logprob: -6.170210361480713
    10. '       ' → logprob: -6.295210361480713

Token 1503: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.4996311366558075
    2. 'of' → logprob: -0.9996311664581299
    3. '
' → logprob: -4.374630928039551
    4. '_of' → logprob: -5.874630928039551
    5. '[' → logprob: -6.624630928039551
    6. 's' → logprob: -6.874630928039551
    7. '       ' → logprob: -6.874630928039551
    8. '   ' → logprob: -7.249630928039551
    9. '        ' → logprob: -7.249630928039551
    10. 'Of' → logprob: -7.374630928039551

Token 1504: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.14803174138069153
    2. ' b' → logprob: -2.023031711578369
    3. 'segments' → logprob: -5.523031711578369
    4. 'spl' → logprob: -7.523031711578369
    5. ' segments' → logprob: -8.148032188415527
    6. 'bounce' → logprob: -9.023032188415527
    7. '
' → logprob: -9.898032188415527
    8. 'possible' → logprob: -10.023032188415527
    9. 'tokens' → logprob: -10.398032188415527
    10. '```' → logprob: -10.398032188415527

Token 1505: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -0.0012063038302585483
    2. 'ounce' → logprob: -7.626206398010254
    3. '_' → logprob: -7.876206398010254
    4. '-' → logprob: -10.001206398010254
    5. 'ounds' → logprob: -10.001206398010254
    6. ')' → logprob: -10.376206398010254
    7. '```' → logprob: -10.751206398010254
    8. 'o' → logprob: -11.126206398010254
    9. 'reak' → logprob: -11.251206398010254
    10. 's' → logprob: -11.376206398010254

Token 1506: ' max' (ID: 2999)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.7272698283195496
    2. ' <' → logprob: -2.4772698879241943
    3. ' ==' → logprob: -2.6022698879241943
    4. ' is' → logprob: -2.6022698879241943
    5. '+' → logprob: -2.7272698879241943
    6. ' >' → logprob: -3.1022698879241943
    7. '<=' → logprob: -3.1022698879241943
    8. '=' → logprob: -3.3522698879241943
    9. '>' → logprob: -3.6022698879241943
    10. '==' → logprob: -3.9772698879241943

Token 1507: ' ' (ID: 220)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.5151978731155396
    2. '=' → logprob: -1.5151978731155396
    3. '_' → logprob: -2.39019775390625
    4. ' is' → logprob: -2.51519775390625
    5. '<|end|>' → logprob: -2.51519775390625
    6. '==' → logprob: -2.89019775390625
    7. ')' → logprob: -3.01519775390625
    8. '_b' → logprob: -3.14019775390625
    9. ' ==' → logprob: -3.26519775390625
    10. 'b' → logprob: -4.01519775390625

Token 1508: '15' (ID: 1055)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05618827044963837
    2. 'is' → logprob: -3.4311883449554443
    3. '=' → logprob: -4.681188106536865
    4. 'allowed' → logprob: -5.556188106536865
    5. ' is' → logprob: -6.056188106536865
    6. '==' → logprob: -6.556188106536865
    7. 'possible' → logprob: -6.556188106536865
    8. 'self' → logprob: -6.806188106536865
    9. 'can' → logprob: -7.181188106536865
    10. '1' → logprob: -7.681188106536865

Token 1509: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3237634897232056
    2. '<|end|>' → logprob: -1.5737634897232056
    3. '       ' → logprob: -1.8237634897232056
    4. ',' → logprob: -1.9487634897232056
    5. ' and' → logprob: -2.448763370513916
    6. '
' → logprob: -2.948763370513916
    7. '<|end|>' → logprob: -3.698763370513916
    8. ':
' → logprob: -3.698763370513916
    9. '.' → logprob: -4.448763370513916
    10. ')' → logprob: -4.698763370513916

Token 1510: ' and' (ID: 326)
  Prédit: ' splits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' splits' → logprob: -0.7287421822547913
    2. '       ' → logprob: -1.9787421226501465
    3. 'spl' → logprob: -2.2287421226501465
    4. 'split' → logprob: -3.1037421226501465
    5. 'return' → logprob: -3.2287421226501465
    6. ' return' → logprob: -3.6037421226501465
    7. '#' → logprob: -3.9787421226501465
    8. ' for' → logprob: -4.1037421226501465
    9. 'positions' → logprob: -4.2287421226501465
    10. ' split' → logprob: -4.2287421226501465

Token 1511: ' distance' (ID: 9324)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6832908987998962
    2. 'distance' → logprob: -1.308290958404541
    3. 'self' → logprob: -2.058290958404541
    4. ' total' → logprob: -2.683290958404541
    5. 'segments' → logprob: -4.683290958404541
    6. ' distance' → logprob: -5.558290958404541
    7. ' self' → logprob: -5.683290958404541
    8. 'the' → logprob: -5.808290958404541
    9. 'b' → logprob: -6.683290958404541
    10. 'max' → logprob: -7.308290958404541

Token 1512: ' max' (ID: 2999)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6931779980659485
    2. ' is' → logprob: -1.4431779384613037
    3. '+' → logprob: -2.8181779384613037
    4. '
' → logprob: -3.1931779384613037
    5. '<=' → logprob: -3.1931779384613037
    6. ' can' → logprob: -3.8181779384613037
    7. ' +' → logprob: -4.068178176879883
    8. '=' → logprob: -4.443178176879883
    9. ')' → logprob: -4.693178176879883
    10. ' <' → logprob: -4.818178176879883

Token 1513: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0820270776748657
    2. '100' → logprob: -1.5820270776748657
    3. ' =' → logprob: -1.7070270776748657
    4. ' ' → logprob: -1.7070270776748657
    5. '0' → logprob: -3.582026958465576
    6. '10' → logprob: -3.832026958465576
    7. ' is' → logprob: -4.957026958465576
    8. '1' → logprob: -5.332026958465576
    9. ')' → logprob: -5.582026958465576
    10. '+' → logprob: -5.832026958465576

Token 1514: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.34628626704216003
    2. '10' → logprob: -1.3462862968444824
    3. '200' → logprob: -3.9712862968444824
    4. '300' → logprob: -5.471286296844482
    5. '500' → logprob: -5.721286296844482
    6. '0' → logprob: -6.471286296844482
    7. '15' → logprob: -6.971286296844482
    8. '150' → logprob: -7.096286296844482
    9. '1' → logprob: -7.596286296844482
    10. '20' → logprob: -7.846286296844482

Token 1515: '00' (ID: 504)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3826512098312378
    2. ',' → logprob: -2.1326513290405273
    3. ':' → logprob: -3.0076513290405273
    4. '
' → logprob: -3.5076513290405273
    5. ':
' → logprob: -3.7576513290405273
    6. '       ' → logprob: -3.8826513290405273
    7. ')' → logprob: -4.007651329040527
    8. ',
' → logprob: -4.257651329040527
    9. '<|end|>' → logprob: -4.382651329040527
    10. '.' → logprob: -5.257651329040527

Token 1516: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.657193660736084
    2. '       ' → logprob: -2.157193660736084
    3. ',' → logprob: -2.282193660736084
    4. '<|end|>' → logprob: -2.282193660736084
    5. ':
' → logprob: -3.032193660736084
    6. ')' → logprob: -3.782193660736084
    7. '<|end|>' → logprob: -3.907193660736084
    8. '
' → logprob: -3.907193660736084
    9. '.' → logprob: -4.157193660736084
    10. ' and' → logprob: -4.407193660736084

Token 1517: ' enumer' (ID: 21093)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22627611458301544
    2. '#' → logprob: -2.476276159286499
    3. ' we' → logprob: -3.601276159286499
    4. ' the' → logprob: -4.47627592086792
    5. 'return' → logprob: -4.60127592086792
    6. 'we' → logprob: -4.72627592086792
    7. ' return' → logprob: -4.97627592086792
    8. ' continue' → logprob: -5.35127592086792
    9. 'the' → logprob: -5.47627592086792
    10. '...' → logprob: -5.47627592086792

Token 1518: 'ating' (ID: 1365)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.004898331593722105
    2. 'ates' → logprob: -5.379898548126221
    3. 'ating' → logprob: -8.379898071289062
    4. 'ation' → logprob: -10.379898071289062
    5. 'ated' → logprob: -11.504898071289062
    6. '       ' → logprob: -13.504898071289062
    7. 'ATE' → logprob: -13.629898071289062
    8. '   ' → logprob: -14.379898071289062
    9. 'return' → logprob: -14.379898071289062
    10. 'rate' → logprob: -14.504898071289062

Token 1519: ' all' (ID: 722)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1520: ' splits' (ID: 76848)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1521: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7477203011512756
    2. '       ' → logprob: -1.3727202415466309
    3. ')' → logprob: -2.372720241546631
    4. '           ' → logprob: -3.747720241546631
    5. ':
' → logprob: -3.872720241546631
    6. ':' → logprob: -4.497720241546631
    7. 'would' → logprob: -4.497720241546631
    8. 'is' → logprob: -4.747720241546631
    9. ' would' → logprob: -4.747720241546631
    10. '
' → logprob: -4.872720241546631

Token 1522: ' huge' (ID: 9560)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.3266390264034271
    2. 'in' → logprob: -1.9516390562057495
    3. 'too' → logprob: -2.70163893699646
    4. 'pro' → logprob: -3.45163893699646
    5. 'ine' → logprob: -4.201639175415039
    6. 'comput' → logprob: -4.951639175415039
    7. 'not' → logprob: -5.451639175415039
    8. 'com' → logprob: -5.576639175415039
    9. 'ex' → logprob: -5.701639175415039
    10. '```' → logprob: -6.201639175415039

Token 1523: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3404191732406616
    2. '<|end|>' → logprob: -2.090419292449951
    3. '<|end|>' → logprob: -2.840419292449951
    4. '.' → logprob: -3.715419292449951
    5. ')' → logprob: -3.840419292449951
    6. '...' → logprob: -3.965419292449951
    7. '
' → logprob: -4.090419292449951
    8. ',' → logprob: -4.465419292449951
    9. '   ' → logprob: -5.590419292449951
    10. ' and' → logprob: -6.215419292449951

Token 1524: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014798312447965145
    2. '<|end|>' → logprob: -4.264798164367676
    3. '<|end|>' → logprob: -8.139798164367676
    4. '...' → logprob: -9.514798164367676
    5. '        ' → logprob: -9.639798164367676
    6. ')' → logprob: -9.764798164367676
    7. '   ' → logprob: -9.889798164367676
    8. '#' → logprob: -11.514798164367676
    9. '
' → logprob: -11.639798164367676
    10. ' continue' → logprob: -11.764798164367676

Token 1525: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00025633294717408717
    2. '#' → logprob: -8.750256538391113
    3. '
' → logprob: -10.000256538391113
    4. 'return' → logprob: -11.125256538391113
    5. 'from' → logprob: -11.625256538391113
    6. '        
' → logprob: -12.375256538391113
    7. '```' → logprob: -12.375256538391113
    8. '   ' → logprob: -12.875256538391113
    9. 'import' → logprob: -12.875256538391113
    10. 'class' → logprob: -13.250256538391113

Token 1526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021927160560153425
    2. '#' → logprob: -8.500219345092773
    3. 'import' → logprob: -11.750219345092773
    4. 'return' → logprob: -13.875219345092773
    5. '...' → logprob: -14.000219345092773
    6. 'from' → logprob: -14.125219345092773
    7. 'Let's' → logprob: -14.125219345092773
    8. '```' → logprob: -14.250219345092773
    9. 'The' → logprob: -14.375219345092773
    10. '        
' → logprob: -15.125219345092773

Token 1527: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5801427364349365
    2. '       ' → logprob: -0.8301427364349365
    3. 'spl' → logprob: -6.455142974853516
    4. 'return' → logprob: -6.580142974853516
    5. '
' → logprob: -8.455142974853516
    6. 'segments' → logprob: -8.705142974853516
    7. 'results' → logprob: -8.830142974853516
    8. 'import' → logprob: -9.080142974853516
    9. 'split' → logprob: -9.705142974853516
    10. 'b' → logprob: -9.705142974853516

Token 1528: ' Instead' (ID: 21050)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.26358169317245483
    2. 'split' → logprob: -1.7635817527770996
    3. '       ' → logprob: -3.3885817527770996
    4. 'spl' → logprob: -4.0135817527771
    5. 'return' → logprob: -5.5135817527771
    6. 'bounce' → logprob: -6.8885817527771
    7. 'positions' → logprob: -7.2635817527771
    8. 'b' → logprob: -8.138581275939941
    9. 'segments' → logprob: -8.263581275939941
    10. '   ' → logprob: -8.263581275939941

Token 1529: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0255047045648098
    2. ',' → logprob: -4.0255045890808105
    3. ':' → logprob: -6.0255045890808105
    4. '#' → logprob: -6.2755045890808105
    5. 'import' → logprob: -7.4005045890808105
    6. '
' → logprob: -7.5255045890808105
    7. ':
' → logprob: -7.7755045890808105
    8. 'class' → logprob: -8.150505065917969
    9. 'return' → logprob: -8.150505065917969
    10. 'we' → logprob: -8.400505065917969

Token 1530: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6776056885719299
    2. 'split' → logprob: -1.5526056289672852
    3. '       ' → logprob: -1.9276056289672852
    4. ' splitter' → logprob: -3.552605628967285
    5. 'spl' → logprob: -3.802605628967285
    6. ' splits' → logprob: -3.802605628967285
    7. 'for' → logprob: -4.552605628967285
    8. 'bounce' → logprob: -4.677605628967285
    9. 'return' → logprob: -4.927605628967285
    10. ' #' → logprob: -5.052605628967285

Token 1531: ' try' (ID: 2075)
  Prédit: ' try'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' try' → logprob: -1.4461067914962769
    2. ' use' → logprob: -1.5711067914962769
    3. '   ' → logprob: -2.5711069107055664
    4. 'def' → logprob: -2.5711069107055664
    5. 'return' → logprob: -2.6961069107055664
    6. 'use' → logprob: -2.8211069107055664
    7. 'try' → logprob: -2.9461069107055664
    8. ' can' → logprob: -3.1961069107055664
    9. ' return' → logprob: -3.5711069107055664
    10. ' def' → logprob: -3.6961069107055664

Token 1532: ' recursive' (ID: 66711)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5343222618103027
    2. ' b' → logprob: -2.2843222618103027
    3. 'for' → logprob: -2.2843222618103027
    4. 'from' → logprob: -2.4093222618103027
    5. '       ' → logprob: -3.4093222618103027
    6. 'spl' → logprob: -4.034322261810303
    7. '   ' → logprob: -4.284322261810303
    8. ' for' → logprob: -4.659322261810303
    9. '
' → logprob: -5.159322261810303
    10. ' to' → logprob: -5.159322261810303

Token 1533: ' DFS' (ID: 115767)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8008556962013245
    2. ' def' → logprob: -1.8008556365966797
    3. ' approach' → logprob: -1.8008556365966797
    4. ' search' → logprob: -1.9258556365966797
    5. 'search' → logprob: -4.05085563659668
    6. ' back' → logprob: -4.55085563659668
    7. '
' → logprob: -4.80085563659668
    8. '   ' → logprob: -5.67585563659668
    9. ' depth' → logprob: -5.67585563659668
    10. '```' → logprob: -5.80085563659668

Token 1534: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10576742887496948
    2. '(self' → logprob: -3.1057674884796143
    3. ' with' → logprob: -3.9807674884796143
    4. '   ' → logprob: -4.355767250061035
    5. ',' → logprob: -5.105767250061035
    6. '
' → logprob: -5.855767250061035
    7. ':' → logprob: -5.980767250061035
    8. '(' → logprob: -6.105767250061035
    9. ':
' → logprob: -6.480767250061035
    10. '(depth' → logprob: -6.480767250061035

Token 1535: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.006787366233766079
    2. 'l' → logprob: -5.756787300109863
    3. ' memo' → logprob: -5.756787300109863
    4. '@' → logprob: -8.631787300109863
    5. 'c' → logprob: -9.381787300109863
    6. 'cache' → logprob: -9.506787300109863
    7. 'from' → logprob: -10.381787300109863
    8. 'import' → logprob: -11.006787300109863
    9. 'L' → logprob: -11.006787300109863
    10. ' L' → logprob: -11.506787300109863

Token 1536: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.011007029563188553
    2. 'r' → logprob: -5.136006832122803
    3. 'ry' → logprob: -5.886006832122803
    4. '
' → logprob: -7.136006832122803
    5. ':' → logprob: -7.886006832122803
    6. '   ' → logprob: -8.136007308959961
    7. 'riz' → logprob: -8.136007308959961
    8. ' =' → logprob: -8.261007308959961
    9. ' ' → logprob: -10.011007308959961
    10. '    ' → logprob: -10.386007308959961

Token 1537: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18401721119880676
    2. '
' → logprob: -2.1840171813964844
    3. '   ' → logprob: -3.3090171813964844
    4. ' with' → logprob: -5.434017181396484
    5. ':
' → logprob: -5.684017181396484
    6. ',' → logprob: -5.934017181396484
    7. ':' → logprob: -6.184017181396484
    8. '        
' → logprob: -6.184017181396484
    9. '(' → logprob: -6.684017181396484
    10. '(self' → logprob: -7.309017181396484

Token 1538: ' bounce' (ID: 57156)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.391685962677002
    2. '(' → logprob: -1.516685962677002
    3. 'initial' → logprob: -1.891685962677002
    4. 'self' → logprob: -2.016685962677002
    5. '(self' → logprob: -2.766685962677002
    6. 'segments' → logprob: -2.891685962677002
    7. '(b' → logprob: -3.391685962677002
    8. '(initial' → logprob: -3.516685962677002
    9. '0' → logprob: -4.266685962677002
    10. 'bounce' → logprob: -4.516685962677002

Token 1539: ' count' (ID: 3605)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.4064631462097168
    2. '_points' → logprob: -1.9064631462097168
    3. 's' → logprob: -2.406463146209717
    4. '_counts' → logprob: -3.781463146209717
    5. '_s' → logprob: -3.906463146209717
    6. '_' → logprob: -4.156463146209717
    7. '_depth' → logprob: -4.656463146209717
    8. '_positions' → logprob: -4.781463146209717
    9. '_point' → logprob: -5.781463146209717
    10. '   ' → logprob: -5.906463146209717

Token 1540: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09725475311279297
    2. 'and' → logprob: -3.097254753112793
    3. ',' → logprob: -3.722254753112793
    4. '       ' → logprob: -4.472254753112793
    5. '   ' → logprob: -5.222254753112793
    6. ':' → logprob: -5.472254753112793
    7. ')' → logprob: -7.722254753112793
    8. '<|end|>' → logprob: -7.722254753112793
    9. '_and' → logprob: -8.597254753112793
    10. '_' → logprob: -8.847254753112793

Token 1541: ' last' (ID: 2174)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.867392897605896
    2. 'distance' → logprob: -1.617392897605896
    3. 'position' → logprob: -1.867392897605896
    4. 'remaining' → logprob: -2.1173930168151855
    5. 'segment' → logprob: -3.4923930168151855
    6. 'last' → logprob: -3.4923930168151855
    7. 'segments' → logprob: -3.9923930168151855
    8. 'pos' → logprob: -4.2423930168151855
    9. 'positions' → logprob: -5.4923930168151855
    10. 'start' → logprob: -5.7423930168151855

Token 1542: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -1.1108944416046143
    2. '_pos' → logprob: -1.3608944416046143
    3. '_position' → logprob: -1.3608944416046143
    4. 'pos' → logprob: -1.8608944416046143
    5. 'distance' → logprob: -7.610894203186035
    6. '_distance' → logprob: -7.860894203186035
    7. '_split' → logprob: -8.360894203186035
    8. 'split' → logprob: -8.360894203186035
    9. '_segment' → logprob: -8.735894203186035
    10. 'segment' → logprob: -8.860894203186035

Token 1543: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3254765272140503
    2. ':' → logprob: -2.32547664642334
    3. '   ' → logprob: -2.70047664642334
    4. '
' → logprob: -2.95047664642334
    5. ':
' → logprob: -3.32547664642334
    6. ',' → logprob: -4.45047664642334
    7. '        
' → logprob: -6.20047664642334
    8. '.' → logprob: -6.82547664642334
    9. '):
' → logprob: -6.82547664642334
    10. ')' → logprob: -6.95047664642334

Token 1544: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3001227080821991
    2. '        
' → logprob: -2.0501227378845215
    3. '
' → logprob: -2.5501227378845215
    4. '    
' → logprob: -3.6751227378845215
    5. '\n' → logprob: -4.6751227378845215
    6. ' 
' → logprob: -4.8001227378845215
    7. '   ' → logprob: -5.4251227378845215
    8. '```' → logprob: -6.5501227378845215
    9. '<|end|>' → logprob: -7.3001227378845215
    10. '\' → logprob: -7.3001227378845215

Token 1545: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11852172762155533
    2. '
' → logprob: -2.2435216903686523
    3. '        
' → logprob: -5.618521690368652
    4. '```' → logprob: -6.993521690368652
    5. '   ' → logprob: -8.118521690368652
    6. '    
' → logprob: -8.493521690368652
    7. ' 
' → logprob: -8.868521690368652
    8. '        ' → logprob: -9.743521690368652
    9. '
' → logprob: -9.743521690368652
    10. '           ' → logprob: -9.743521690368652

Token 1546: ' Since' (ID: 12265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5145829319953918
    2. '
' → logprob: -1.014582872390747
    3. '```' → logprob: -3.764582872390747
    4. '        
' → logprob: -4.889583110809326
    5. '   ' → logprob: -5.389583110809326
    6. 'def' → logprob: -6.264583110809326
    7. '    
' → logprob: -7.139583110809326
    8. ' def' → logprob: -8.264582633972168
    9. '``' → logprob: -8.639582633972168
    10. ' 
' → logprob: -8.764582633972168

Token 1547: ' obstacles' (ID: 46430)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5597821474075317
    2. ' self' → logprob: -0.9347821474075317
    3. ' not' → logprob: -4.684782028198242
    4. ' the' → logprob: -5.059782028198242
    5. 'distance' → logprob: -5.059782028198242
    6. 'the' → logprob: -6.184782028198242
    7. ' distance' → logprob: -6.559782028198242
    8. '(self' → logprob: -6.559782028198242
    9. ' (' → logprob: -6.934782028198242
    10. 'not' → logprob: -6.934782028198242

Token 1548: ' <=' (ID: 5017)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.0422141551971436
    2. 'are' → logprob: -1.2922141551971436
    3. 'positions' → logprob: -2.1672141551971436
    4. '   ' → logprob: -3.1672141551971436
    5. ',' → logprob: -3.4172141551971436
    6. '_positions' → logprob: -3.6672141551971436
    7. 'and' → logprob: -3.7922141551971436
    8. ' positions' → logprob: -4.292214393615723
    9. 'only' → logprob: -4.292214393615723
    10. 'can' → logprob: -4.667214393615723

Token 1549: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.8851545453071594
    2. '100' → logprob: -1.0101544857025146
    3. 'self' → logprob: -1.6351544857025146
    4. '0' → logprob: -4.510154724121094
    5. '[]' → logprob: -5.010154724121094
    6. 'len' → logprob: -5.760154724121094
    7. '20' → logprob: -6.135154724121094
    8. '[' → logprob: -7.010154724121094
    9. ' ' → logprob: -7.260154724121094
    10. '10' → logprob: -7.260154724121094

Token 1550: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.8227123618125916
    2. '15' → logprob: -1.1977124214172363
    3. 'self' → logprob: -1.5727124214172363
    4. '0' → logprob: -3.8227124214172363
    5. 'len' → logprob: -4.072712421417236
    6. '20' → logprob: -4.947712421417236
    7. '50' → logprob: -6.697712421417236
    8. '16' → logprob: -6.697712421417236
    9. '10' → logprob: -7.322712421417236
    10. '200' → logprob: -7.572712421417236

Token 1551: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.368843674659729
    2. '   ' → logprob: -1.618843674659729
    3. '    
' → logprob: -3.2438435554504395
    4. ',' → logprob: -3.6188435554504395
    5. '       ' → logprob: -4.2438435554504395
    6. ':' → logprob: -5.1188435554504395
    7. '        
' → logprob: -5.1188435554504395
    8. ',
' → logprob: -5.6188435554504395
    9. ' and' → logprob: -5.7438435554504395
    10. ' def' → logprob: -5.8688435554504395

Token 1552: ' b' (ID: 287)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2840004563331604
    2. 'distance' → logprob: -2.7840003967285156
    3. 'len' → logprob: -3.1590003967285156
    4. 'max' → logprob: -3.2840003967285156
    5. 'the' → logprob: -3.6590003967285156
    6. 'not' → logprob: -4.659000396728516
    7. 'positions' → logprob: -4.659000396728516
    8. 'b' → logprob: -5.034000396728516
    9. 'total' → logprob: -5.034000396728516
    10. 'import' → logprob: -5.034000396728516

Token 1553: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -0.06499595195055008
    2. 'ounds' → logprob: -4.064995765686035
    3. '   ' → logprob: -4.564995765686035
    4. ')' → logprob: -4.814995765686035
    5. 'r' → logprob: -5.189995765686035
    6. 'u' → logprob: -5.814995765686035
    7. 'ounce' → logprob: -5.939995765686035
    8. '       ' → logprob: -6.189995765686035
    9. '```' → logprob: -6.189995765686035
    10. 'max' → logprob: -6.939995765686035

Token 1554: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.23152445256710052
    2. '<=' → logprob: -2.4815244674682617
    3. '+' → logprob: -3.3565244674682617
    4. ',' → logprob: -3.8565244674682617
    5. ' +' → logprob: -4.481524467468262
    6. ' <' → logprob: -4.606524467468262
    7. ' and' → logprob: -5.106524467468262
    8. '   ' → logprob: -5.231524467468262
    9. ':
' → logprob: -5.231524467468262
    10. ' ==' → logprob: -5.356524467468262

Token 1555: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '15' → logprob: -0.0008571469807066023
    2. '20' → logprob: -8.00085735321045
    3. '10' → logprob: -8.12585735321045
    4. 'self' → logprob: -8.87585735321045
    5. '100' → logprob: -10.87585735321045
    6. '16' → logprob: -11.12585735321045
    7. '5' → logprob: -11.25085735321045
    8. '14' → logprob: -11.75085735321045
    9. '30' → logprob: -12.00085735321045
    10. '
' → logprob: -12.50085735321045

Token 1556: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.005053017754107714
    2. 'self' → logprob: -6.5050530433654785
    3. '20' → logprob: -6.5050530433654785
    4. '10' → logprob: -6.6300530433654785
    5. '100' → logprob: -8.38005256652832
    6. '5' → logprob: -9.13005256652832
    7. '16' → logprob: -9.25505256652832
    8. '0' → logprob: -9.38005256652832
    9. '30' → logprob: -10.00505256652832
    10. '50' → logprob: -10.50505256652832

Token 1557: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3473885953426361
    2. '       ' → logprob: -1.3473886251449585
    3. '   ' → logprob: -4.722388744354248
    4. '        
' → logprob: -4.847388744354248
    5. '    
' → logprob: -5.097388744354248
    6. ',' → logprob: -5.222388744354248
    7. ':' → logprob: -6.097388744354248
    8. ':
' → logprob: -7.222388744354248
    9. '.' → logprob: -8.34738826751709
    10. ' and' → logprob: -8.34738826751709

Token 1558: ' let's' (ID: 35717)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.40059754252433777
    2. '       ' → logprob: -1.7755975723266602
    3. 'from' → logprob: -2.27559757232666
    4. ' from' → logprob: -4.52559757232666
    5. 'def' → logprob: -4.77559757232666
    6. ' import' → logprob: -5.02559757232666
    7. 'we' → logprob: -5.15059757232666
    8. ' we' → logprob: -5.40059757232666
    9. '```' → logprob: -5.65059757232666
    10. 'self' → logprob: -6.02559757232666

Token 1559: ' memo' (ID: 46393)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4810687303543091
    2. 'from' → logprob: -1.356068730354309
    3. 'continue' → logprob: -2.7310686111450195
    4. 'cache' → logprob: -4.2310686111450195
    5. '   ' → logprob: -4.3560686111450195
    6. '
' → logprob: -4.9810686111450195
    7. ' from' → logprob: -5.3560686111450195
    8. 'implement' → logprob: -5.8560686111450195
    9. 'opt' → logprob: -5.9810686111450195
    10. 'expand' → logprob: -6.4810686111450195

Token 1560: ' on' (ID: 402)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.008518120273947716
    2. 'r' → logprob: -4.883518218994141
    3. 'ized' → logprob: -7.758518218994141
    4. 'iz' → logprob: -8.88351821899414
    5. 'ry' → logprob: -10.13351821899414
    6. ' =' → logprob: -10.13351821899414
    7. '   ' → logprob: -10.25851821899414
    8. 'n' → logprob: -10.38351821899414
    9. 'ze' → logprob: -10.38351821899414
    10. ' ' → logprob: -10.75851821899414

Token 1561: ' bounce' (ID: 57156)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.07384546101093292
    2. '(self' → logprob: -3.573845386505127
    3. 'self' → logprob: -4.073845386505127
    4. 'bounce' → logprob: -4.573845386505127
    5. '(' → logprob: -4.698845386505127
    6. ' (' → logprob: -5.948845386505127
    7. '(last' → logprob: -6.573845386505127
    8. 'b' → logprob: -6.948845386505127
    9. '(current' → logprob: -8.198845863342285
    10. '(max' → logprob: -8.198845863342285

Token 1562: ' count' (ID: 3605)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.01910707913339138
    2. 's' → logprob: -5.019106864929199
    3. '_key' → logprob: -5.519106864929199
    4. 'count' → logprob: -6.269106864929199
    5. '   ' → logprob: -6.769106864929199
    6. ')' → logprob: -7.019106864929199
    7. '_' → logprob: -7.019106864929199
    8. '_cnt' → logprob: -7.269106864929199
    9. '
' → logprob: -7.769106864929199
    10. ',' → logprob: -7.894106864929199

Token 1563: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5682507753372192
    2. ' and' → logprob: -1.0682507753372192
    3. ',' → logprob: -2.4432506561279297
    4. '   ' → logprob: -6.69325065612793
    5. '_and' → logprob: -6.81825065612793
    6. ',
' → logprob: -8.44325065612793
    7. '
' → logprob: -8.56825065612793
    8. ' ,' → logprob: -9.94325065612793
    9. '       ' → logprob: -10.56825065612793
    10. ':' → logprob: -10.69325065612793

Token 1564: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.0767245665192604
    2. 'current' → logprob: -3.0767245292663574
    3. 'pos' → logprob: -5.076724529266357
    4. 'remaining' → logprob: -5.076724529266357
    5. 'distance' → logprob: -5.326724529266357
    6. 'start' → logprob: -5.451724529266357
    7. 'position' → logprob: -5.701724529266357
    8. ' last' → logprob: -7.201724529266357
    9. 'segment' → logprob: -7.951724529266357
    10. 'prev' → logprob: -8.201725006103516

Token 1565: ' bounce' (ID: 57156)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.4925377666950226
    2. 'pos' → logprob: -1.6175377368927002
    3. '_position' → logprob: -2.2425377368927
    4. 'position' → logprob: -2.4925377368927
    5. 'distance' → logprob: -7.617537975311279
    6. '_distance' → logprob: -7.867537975311279
    7. '_segment' → logprob: -8.492537498474121
    8. '```' → logprob: -8.617537498474121
    9. 'segment' → logprob: -9.117537498474121
    10. ' position' → logprob: -9.242537498474121

Token 1566: ' position' (ID: 4010)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.3118844032287598
    2. '_position' → logprob: -1.4368844032287598
    3. '_pos' → logprob: -1.4368844032287598
    4. '_point' → logprob: -2.0618844032287598
    5. '   ' → logprob: -3.0618844032287598
    6. ',' → logprob: -3.5618844032287598
    7. '_' → logprob: -3.5618844032287598
    8. ' _' → logprob: -5.31188440322876
    9. 's' → logprob: -5.81188440322876
    10. '_index' → logprob: -6.18688440322876

Token 1567: '
        
' (ID: 20417)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08916205167770386
    2. '   ' → logprob: -3.3391621112823486
    3. '       ' → logprob: -3.9641621112823486
    4. ':' → logprob: -4.5891618728637695
    5. '    
' → logprob: -4.9641618728637695
    6. ',' → logprob: -5.2141618728637695
    7. '        
' → logprob: -5.8391618728637695
    8. ':
' → logprob: -5.9641618728637695
    9. ',
' → logprob: -7.2141618728637695
    10. '```' → logprob: -7.8391618728637695

Token 1568: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13588225841522217
    2. '   ' → logprob: -2.1358823776245117
    3. '    
' → logprob: -4.760882377624512
    4. '```' → logprob: -9.260882377624512
    5. '       ' → logprob: -9.385882377624512
    6. '        
' → logprob: -9.760882377624512
    7. '

' → logprob: -10.010882377624512
    8. ' 
' → logprob: -11.260882377624512
    9. '
    
' → logprob: -11.635882377624512
    10. 'from' → logprob: -11.760882377624512

Token 1569: ' cache' (ID: 11956)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24611295759677887
    2. '       ' → logprob: -1.6211129426956177
    3. '   ' → logprob: -4.496112823486328
    4. '```' → logprob: -5.371112823486328
    5. '        
' → logprob: -6.246112823486328
    6. '    
' → logprob: -7.121112823486328
    7. ' 
' → logprob: -7.371112823486328
    8. ' ' → logprob: -7.996112823486328
    9. '        ' → logprob: -8.621112823486328
    10. '    ' → logprob: -8.871112823486328

Token 1570: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933977007865906
    2. ' =' → logprob: -0.6933977007865906
    3. '={}' → logprob: -8.568397521972656
    4. ':' → logprob: -10.443397521972656
    5. '={' → logprob: -11.068397521972656
    6. '={}
' → logprob: -12.318397521972656
    7. '_' → logprob: -13.443397521972656
    8. '   ' → logprob: -13.568397521972656
    9. '.setdefault' → logprob: -13.568397521972656
    10. '={(' → logprob: -13.943397521972656

Token 1571: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0001227276516146958
    2. 'dict' → logprob: -9.750123023986816
    3. '{}
' → logprob: -9.750123023986816
    4. '{' → logprob: -12.500123023986816
    5. ' {}' → logprob: -13.375123023986816
    6. '{}

' → logprob: -14.625123023986816
    7. '={}' → logprob: -15.125123023986816
    8. '{})' → logprob: -16.6251220703125
    9. ' dict' → logprob: -17.0001220703125
    10. '   ' → logprob: -18.6251220703125

Token 1572: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2236219346523285
    2. '   ' → logprob: -1.8486219644546509
    3. '    
' → logprob: -3.2236218452453613
    4. '        
' → logprob: -7.223621845245361
    5. 'def' → logprob: -7.348621845245361
    6. ' 
' → logprob: -7.348621845245361
    7. '       ' → logprob: -8.22362232208252
    8. ' def' → logprob: -8.84862232208252
    9. '<|end|>' → logprob: -8.97362232208252
    10. '```' → logprob: -9.09862232208252

Token 1573: ' obstacles' (ID: 46430)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2821100950241089
    2. 'def' → logprob: -1.5321100950241089
    3. '   ' → logprob: -3.7821102142333984
    4. '       ' → logprob: -5.157110214233398
    5. '        
' → logprob: -7.532110214233398
    6. '    
' → logprob: -7.782110214233398
    7. ' def' → logprob: -8.657110214233398
    8. '
' → logprob: -10.157110214233398
    9. '	def' → logprob: -11.532110214233398
    10. '  
' → logprob: -12.407110214233398

Token 1574: '_positions' (ID: 93193)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.3221830725669861
    2. ' =' → logprob: -1.6971831321716309
    3. '=' → logprob: -3.072183132171631
    4. '_positions' → logprob: -3.322183132171631
    5. 'in' → logprob: -6.197183132171631
    6. ',' → logprob: -6.697183132171631
    7. '_' → logprob: -7.072183132171631
    8. ':' → logprob: -7.072183132171631
    9. 'def' → logprob: -7.322183132171631
    10. 'In' → logprob: -7.447183132171631

Token 1575: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5837541222572327
    2. ' =' → logprob: -0.8337541222572327
    3. ':' → logprob: -5.083754062652588
    4. ')' → logprob: -7.583754062652588
    5. '_positions' → logprob: -7.708754062652588
    6. ',' → logprob: -8.083754539489746
    7. '=set' → logprob: -10.333754539489746
    8. '=[]' → logprob: -10.458754539489746
    9. '=
' → logprob: -10.583754539489746
    10. ']' → logprob: -10.708754539489746

Token 1576: ' [' (ID: 723)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -1.1007095575332642
    2. 'tuple' → logprob: -1.1007095575332642
    3. '{' → logprob: -1.4757095575332642
    4. 'fro' → logprob: -2.8507094383239746
    5. 'sorted' → logprob: -3.6007094383239746
    6. '[' → logprob: -4.100709438323975
    7. '[f' → logprob: -5.975709438323975
    8. 'self' → logprob: -7.350709438323975
    9. '[self' → logprob: -8.350709915161133
    10. '[o' → logprob: -8.850709915161133

Token 1577: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.06192835420370102
    2. '(o' → logprob: -3.4369282722473145
    3. 'obs' → logprob: -3.8119282722473145
    4. 'ob' → logprob: -5.3119282722473145
    5. '(obs' → logprob: -8.311928749084473
    6. '(ob' → logprob: -8.811928749084473
    7. '[o' → logprob: -9.186928749084473
    8. '(' → logprob: -9.436928749084473
    9. ' o' → logprob: -9.561928749084473
    10. '0' → logprob: -10.311928749084473

Token 1578: '.position' (ID: 13130)
  Prédit: '.position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -9.674858301877975e-05
    2. '.' → logprob: -9.500096321105957
    3. ' .' → logprob: -11.250096321105957
    4. '[' → logprob: -13.500096321105957
    5. '.pos' → logprob: -13.500096321105957
    6. 'position' → logprob: -13.500096321105957
    7. '].' → logprob: -13.750096321105957
    8. '[position' → logprob: -14.000096321105957
    9. '.
' → logprob: -14.875096321105957
    10. ''.' → logprob: -15.125096321105957

Token 1579: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9176425337791443
    2. ' for' → logprob: -0.9176425337791443
    3. 'for' → logprob: -1.917642593383789
    4. ',' → logprob: -3.542642593383789
    5. ']
' → logprob: -4.042642593383789
    6. ')' → logprob: -6.042642593383789
    7. '       ' → logprob: -6.542642593383789
    8. ',
' → logprob: -6.917642593383789
    9. ' ]' → logprob: -7.667642593383789
    10. '
' → logprob: -7.667642593383789

Token 1580: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.004260631278157234
    2. 'self' → logprob: -5.504260540008545
    3. ' o' → logprob: -9.129261016845703
    4. 'ob' → logprob: -10.004261016845703
    5. '_o' → logprob: -11.754261016845703
    6. '	o' → logprob: -12.254261016845703
    7. ' self' → logprob: -12.379261016845703
    8. '_' → logprob: -12.504261016845703
    9. 'obs' → logprob: -13.379261016845703
    10. '(o' → logprob: -13.504261016845703

Token 1581: ' in' (ID: 306)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.14983129501342773
    2. 'self' → logprob: -2.3998312950134277
    3. ' o' → logprob: -3.7748312950134277
    4. ' self' → logprob: -4.649831295013428
    5. 'ob' → logprob: -4.899831295013428
    6. '_' → logprob: -5.774831295013428
    7. ' in' → logprob: -5.899831295013428
    8. 'in' → logprob: -6.774831295013428
    9. 'obs' → logprob: -8.274831771850586
    10. ' ob' → logprob: -8.399831771850586

Token 1582: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001254693343071267
    2. ' self' → logprob: -9.500125885009766
    3. 'o' → logprob: -10.625125885009766
    4. 'ob' → logprob: -10.625125885009766
    5. 'obs' → logprob: -15.000125885009766
    6. 'obj' → logprob: -15.125125885009766
    7. '...' → logprob: -15.250125885009766
    8. 's' → logprob: -15.750125885009766
    9. 'range' → logprob: -16.000125885009766
    10. '(self' → logprob: -16.125125885009766

Token 1583: '.ob' (ID: 30768)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.004246150609105825
    2. '.ob' → logprob: -5.504246234893799
    3. '_ob' → logprob: -9.62924575805664
    4. 'b' → logprob: -10.50424575805664
    5. 'user' → logprob: -11.00424575805664
    6. '#' → logprob: -11.87924575805664
    7. ')' → logprob: -12.00424575805664
    8. ']' → logprob: -12.25424575805664
    9. 'o' → logprob: -12.50424575805664
    10. ' obstacles' → logprob: -12.50424575805664

Token 1584: 'stacles' (ID: 143593)
  Prédit: 'stacles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stacles' → logprob: -0.009097259491682053
    2. 's' → logprob: -5.134097099304199
    3. 'st' → logprob: -6.134097099304199
    4. 'stances' → logprob: -7.384097099304199
    5. 'ject' → logprob: -9.2590970993042
    6. 'states' → logprob: -9.6340970993042
    7. 'stacle' → logprob: -10.5090970993042
    8. '   ' → logprob: -10.5090970993042
    9. '       ' → logprob: -11.0090970993042
    10. '```' → logprob: -11.0090970993042

Token 1585: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08239302039146423
    2. ']
' → logprob: -2.582392930984497
    3. '       ' → logprob: -6.207393169403076
    4. ',' → logprob: -7.082393169403076
    5. ']

' → logprob: -7.707393169403076
    6. ' ]' → logprob: -9.582392692565918
    7. '   ' → logprob: -10.332392692565918
    8. ',
' → logprob: -10.832392692565918
    9. ')' → logprob: -11.457392692565918
    10. ' ]
' → logprob: -11.582392692565918

Token 1586: '        
' (ID: 3564)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018165044486522675
    2. '    
' → logprob: -4.893165111541748
    3. '   ' → logprob: -5.393165111541748
    4. '        
' → logprob: -5.768165111541748
    5. '       ' → logprob: -6.393165111541748
    6. ' 
' → logprob: -7.143165111541748
    7. '```' → logprob: -9.39316463470459
    8. '  
' → logprob: -9.51816463470459
    9. 'def' → logprob: -10.26816463470459
    10. '   
' → logprob: -10.51816463470459

Token 1587: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6792935132980347
    2. '   ' → logprob: -1.0542935132980347
    3. '
' → logprob: -2.054293632507324
    4. 'def' → logprob: -4.554293632507324
    5. '        
' → logprob: -5.554293632507324
    6. ' def' → logprob: -6.804293632507324
    7. '    
' → logprob: -7.179293632507324
    8. '```' → logprob: -9.679293632507324
    9. ')' → logprob: -11.304293632507324
    10. ' 
' → logprob: -11.429293632507324

Token 1588: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03865630179643631
    2. '
' → logprob: -3.413656234741211
    3. '       ' → logprob: -5.788656234741211
    4. '   ' → logprob: -6.538656234741211
    5. ' def' → logprob: -7.788656234741211
    6. '        
' → logprob: -10.413656234741211
    7. '	def' → logprob: -10.788656234741211
    8. '```' → logprob: -11.538656234741211
    9. '    
' → logprob: -12.288656234741211
    10. '
' → logprob: -12.913656234741211

Token 1589: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.026449156925082207
    2. 'can' → logprob: -3.776449203491211
    3. 'dp' → logprob: -6.401449203491211
    4. ' dfs' → logprob: -7.401449203491211
    5. '_can' → logprob: -7.526449203491211
    6. 'search' → logprob: -8.151449203491211
    7. 'try' → logprob: -10.901449203491211
    8. '_d' → logprob: -11.401449203491211
    9. 'possible' → logprob: -11.526449203491211
    10. '_dp' → logprob: -11.526449203491211

Token 1590: '(' (ID: 7)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.005041390657424927
    2. '(depth' → logprob: -5.880041599273682
    3. '(self' → logprob: -7.130041599273682
    4. '(start' → logprob: -8.130041122436523
    5. '(last' → logprob: -8.130041122436523
    6. '(current' → logprob: -8.255041122436523
    7. '(pos' → logprob: -8.755041122436523
    8. '(position' → logprob: -9.255041122436523
    9. ' (' → logprob: -9.380041122436523
    10. '(' → logprob: -9.880041122436523

Token 1591: 'remaining' (ID: 83570)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7010208964347839
    2. 'bounce' → logprob: -0.7010208964347839
    3. 'current' → logprob: -6.07602071762085
    4. 'depth' → logprob: -6.95102071762085
    5. 'curr' → logprob: -7.20102071762085
    6. 'pos' → logprob: -7.32602071762085
    7. ' b' → logprob: -7.45102071762085
    8. 'count' → logprob: -7.70102071762085
    9. 'segments' → logprob: -7.70102071762085
    10. ' bounce' → logprob: -7.82602071762085

Token 1592: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0031970853451639414
    2. ',' → logprob: -5.878197193145752
    3. 'b' → logprob: -8.628196716308594
    4. '_distance' → logprob: -9.003196716308594
    5. '_dist' → logprob: -11.003196716308594
    6. ',b' → logprob: -11.628196716308594
    7. '   ' → logprob: -11.628196716308594
    8. ' ,' → logprob: -12.128196716308594
    9. '_depth' → logprob: -12.128196716308594
    10. 's' → logprob: -12.503196716308594

Token 1593: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -0.012769795022904873
    2. 'ounce' → logprob: -4.38776969909668
    3. ')' → logprob: -10.26276969909668
    4. 'ount' → logprob: -10.88776969909668
    5. 'ounds' → logprob: -11.13776969909668
    6. 'oun' → logprob: -11.26276969909668
    7. '_' → logprob: -11.26276969909668
    8. '```' → logprob: -11.51276969909668
    9. 's' → logprob: -11.63776969909668
    10. 'once' → logprob: -11.63776969909668

Token 1594: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006340435356833041
    2. ' ,' → logprob: -7.50063419342041
    3. ',b' → logprob: -9.62563419342041
    4. ',pos' → logprob: -12.37563419342041
    5. ',last' → logprob: -12.37563419342041
    6. ',start' → logprob: -13.50063419342041
    7. ',
' → logprob: -13.50063419342041
    8. ':' → logprob: -13.62563419342041
    9. ',current' → logprob: -14.87563419342041
    10. ',index' → logprob: -15.37563419342041

Token 1595: ' int' (ID: 677)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4796225428581238
    2. 'int' → logprob: -1.2296226024627686
    3. ' int' → logprob: -2.8546226024627686
    4. 'b' → logprob: -4.3546223640441895
    5. ' b' → logprob: -4.9796223640441895
    6. ' ,' → logprob: -5.8546223640441895
    7. ',int' → logprob: -5.9796223640441895
    8. 'remaining' → logprob: -6.7296223640441895
    9. 'bounce' → logprob: -7.4796223640441895
    10. ',b' → logprob: -7.4796223640441895

Token 1596: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.968312951968983e-06
    2. ' ,' → logprob: -12.250009536743164
    3. ',last' → logprob: -12.750009536743164
    4. ',pos' → logprob: -14.000009536743164
    5. ',start' → logprob: -14.500009536743164
    6. ',current' → logprob: -15.375009536743164
    7. ',next' → logprob: -15.500009536743164
    8. ',end' → logprob: -15.750009536743164
    9. ',
' → logprob: -16.250009536743164
    10. ',p' → logprob: -16.625009536743164

Token 1597: ' from' (ID: 591)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.06601811945438385
    2. 'current' → logprob: -2.8160181045532227
    3. ' last' → logprob: -6.066018104553223
    4. 'start' → logprob: -7.191018104553223
    5. ' current' → logprob: -8.066018104553223
    6. 'pos' → logprob: -8.316018104553223
    7. 'prev' → logprob: -8.566018104553223
    8. 'position' → logprob: -8.941018104553223
    9. 'curr' → logprob: -10.066018104553223
    10. 'cur' → logprob: -11.066018104553223

Token 1598: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.010045516304671764
    2. '_position' → logprob: -5.135045528411865
    3. '_' → logprob: -6.010045528411865
    4. 'pos' → logprob: -7.885045528411865
    5. '_:' → logprob: -8.010045051574707
    6. 'Pos' → logprob: -8.010045051574707
    7. ')' → logprob: -9.135045051574707
    8. '_)' → logprob: -9.260045051574707
    9. '_point' → logprob: -10.135045051574707
    10. '_,' → logprob: -10.260045051574707

Token 1599: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00912501197308302
    2. ',' → logprob: -5.634125232696533
    3. '):
' → logprob: -6.009125232696533
    4. '):' → logprob: -6.259125232696533
    5. ')' → logprob: -6.884125232696533
    6. ':int' → logprob: -9.509124755859375
    7. '_:' → logprob: -11.134124755859375
    8. ' :' → logprob: -11.759124755859375
    9. '):

' → logprob: -12.009124755859375
    10. '   ' → logprob: -12.759124755859375

Token 1600: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009801707929000258
    2. ' int' → logprob: -7.000980377197266
    3. '[int' → logprob: -10.625980377197266
    4. 'float' → logprob: -11.000980377197266
    5. ':int' → logprob: -11.000980377197266
    6. ')' → logprob: -12.000980377197266
    7. '0' → logprob: -13.500980377197266
    8. '(int' → logprob: -14.125980377197266
    9. ']int' → logprob: -14.500980377197266
    10. '<int' → logprob: -14.625980377197266

Token 1601: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.047926709055900574
    2. '):' → logprob: -3.547926664352417
    3. '):
' → logprob: -4.172926902770996
    4. ',' → logprob: -6.047926902770996
    5. ' )' → logprob: -8.922926902770996
    6. ':' → logprob: -9.797926902770996
    7. '):
' → logprob: -11.172926902770996
    8. '   ' → logprob: -11.172926902770996
    9. '):

' → logprob: -11.422926902770996
    10. ' ):' → logprob: -11.672926902770996

Token 1602: ' to' (ID: 316)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -1.7734111547470093
    2. 'initial' → logprob: -1.8984111547470093
    3. ')' → logprob: -2.148411273956299
    4. 'path' → logprob: -2.523411273956299
    5. 'speed' → logprob: -2.648411273956299
    6. 'current' → logprob: -2.648411273956299
    7. 'visited' → logprob: -2.773411273956299
    8. 'cache' → logprob: -3.023411273956299
    9. ' target' → logprob: -3.523411273956299
    10. ' path' → logprob: -3.773411273956299

Token 1603: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0008039106614887714
    2. 'pos' → logprob: -7.3758039474487305
    3. 'int' → logprob: -9.12580394744873
    4. '_int' → logprob: -10.87580394744873
    5. ':' → logprob: -11.62580394744873
    6. '_distance' → logprob: -11.75080394744873
    7. '```' → logprob: -12.37580394744873
    8. ':int' → logprob: -12.50080394744873
    9. 'Pos' → logprob: -12.50080394744873
    10. ')' → logprob: -13.12580394744873

Token 1604: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04662254452705383
    2. ')' → logprob: -3.2966225147247314
    3. '):
' → logprob: -5.2966227531433105
    4. '):' → logprob: -5.6716227531433105
    5. ' )' → logprob: -10.421622276306152
    6. ':int' → logprob: -10.546622276306152
    7. '   ' → logprob: -11.046622276306152
    8. '):

' → logprob: -11.796622276306152
    9. ' ):' → logprob: -12.421622276306152
    10. ' :' → logprob: -13.046622276306152

Token 1605: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2871411144733429
    2. 'self' → logprob: -1.4121410846710205
    3. ' self' → logprob: -5.6621413230896
    4. ' int' → logprob: -6.1621413230896
    5. ')' → logprob: -9.287140846252441
    6. '       ' → logprob: -9.662140846252441
    7. '   ' → logprob: -9.662140846252441
    8. '[int' → logprob: -10.037140846252441
    9. ':int' → logprob: -10.662140846252441
    10. '           ' → logprob: -10.912140846252441

Token 1606: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004883738700300455
    2. '):' → logprob: -5.504883766174316
    3. '):
' → logprob: -7.379883766174316
    4. ',' → logprob: -9.004883766174316
    5. ' )' → logprob: -10.504883766174316
    6. ':' → logprob: -11.379883766174316
    7. '       ' → logprob: -11.754883766174316
    8. ')->' → logprob: -11.879883766174316
    9. '   ' → logprob: -13.504883766174316
    10. '):
' → logprob: -14.004883766174316

Token 1607: ' obstacles' (ID: 46430)
  Prédit: ' initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.3118125796318054
    2. 'initial' → logprob: -1.5618126392364502
    3. ' speed' → logprob: -3.81181263923645
    4. ')' → logprob: -4.686812400817871
    5. 'speed' → logprob: -4.936812400817871
    6. ' current' → logprob: -5.436812400817871
    7. ' max' → logprob: -6.061812400817871
    8. ' )' → logprob: -6.561812400817871
    9. '           ' → logprob: -6.686812400817871
    10. '       ' → logprob: -6.686812400817871

Token 1608: '_section' (ID: 41389)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.24637621641159058
    2. '):
' → logprob: -1.7463762760162354
    3. '_in' → logprob: -4.121376037597656
    4. ')' → logprob: -4.621376037597656
    5. '_positions' → logprob: -4.746376037597656
    6. ':' → logprob: -4.871376037597656
    7. '):

' → logprob: -7.871376037597656
    8. '   ' → logprob: -8.621376037597656
    9. ')=' → logprob: -8.996376037597656
    10. '=[]' → logprob: -9.246376037597656

Token 1609: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4083510935306549
    2. ')' → logprob: -1.9083510637283325
    3. '):
' → logprob: -2.033351182937622
    4. ':' → logprob: -2.908351182937622
    5. '_list' → logprob: -8.533350944519043
    6. '=[]' → logprob: -8.658350944519043
    7. '=None' → logprob: -8.783350944519043
    8. '=' → logprob: -8.908350944519043
    9. ':list' → logprob: -8.908350944519043
    10. '):

' → logprob: -9.033350944519043

Token 1610: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.048125430941581726
    2. ' List' → logprob: -3.6731255054473877
    3. ')' → logprob: -4.548125267028809
    4. '[List' → logprob: -5.048125267028809
    5. 'list' → logprob: -7.048125267028809
    6. '[]' → logprob: -7.173125267028809
    7. 'self' → logprob: -7.423125267028809
    8. 'ob' → logprob: -7.548125267028809
    9. '[' → logprob: -8.048125267028809
    10. '):' → logprob: -8.173125267028809

Token 1611: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007678195834159851
    2. '[int' → logprob: -4.882678031921387
    3. ')' → logprob: -10.257678031921387
    4. '['' → logprob: -11.632678031921387
    5. ']' → logprob: -11.757678031921387
    6. '):
' → logprob: -12.257678031921387
    7. '[
' → logprob: -12.382678031921387
    8. '):' → logprob: -13.257678031921387
    9. '=' → logprob: -13.757678031921387
    10. '[Int' → logprob: -13.882678031921387

Token 1612: 'Obstacle' (ID: 134296)
  Prédit: 'Obstacle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Obstacle' → logprob: -1.664371848164592e-05
    2. '[' → logprob: -11.875016212463379
    3. '[int' → logprob: -12.625016212463379
    4. ']' → logprob: -13.375016212463379
    5. ')' → logprob: -13.625016212463379
    6. 'ob' → logprob: -14.000016212463379
    7. '...' → logprob: -14.000016212463379
    8. 'int' → logprob: -14.375016212463379
    9. '...]' → logprob: -14.625016212463379
    10. 'Ob' → logprob: -15.125016212463379

Token 1613: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002884641056880355
    2. '):' → logprob: -6.377884864807129
    3. '])' → logprob: -7.127884864807129
    4. '):
' → logprob: -8.377884864807129
    5. '       ' → logprob: -9.377884864807129
    6. ' )' → logprob: -10.877884864807129
    7. '   ' → logprob: -11.252884864807129
    8. '')' → logprob: -11.502884864807129
    9. '`)' → logprob: -12.502884864807129
    10. '):

' → logprob: -12.627884864807129

Token 1614: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012355304323136806
    2. ':
' → logprob: -5.137355327606201
    3. '):' → logprob: -6.012355327606201
    4. '       ' → logprob: -6.012355327606201
    5. ')' → logprob: -6.762355327606201
    6. '):
' → logprob: -8.762354850769043
    7. ':return' → logprob: -9.512354850769043
    8. '<|end|>' → logprob: -10.387354850769043
    9. '():' → logprob: -10.762354850769043
    10. ',' → logprob: -11.012354850769043

Token 1615: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.07889705896377563
    2. ' bool' → logprob: -2.578896999359131
    3. '	bool' → logprob: -12.578897476196289
    4. 'Bool' → logprob: -14.078897476196289
    5. '<bool' → logprob: -14.078897476196289
    6. '   ' → logprob: -14.203897476196289
    7. 'int' → logprob: -14.828897476196289
    8. 'True' → logprob: -15.203897476196289
    9. '       ' → logprob: -15.828897476196289
    10. '(bool' → logprob: -15.953897476196289

Token 1616: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1254945695400238
    2. ':
' → logprob: -2.5004944801330566
    3. '       ' → logprob: -3.3754944801330566
    4. '):
' → logprob: -7.500494480133057
    5. '):' → logprob: -7.625494480133057
    6. ')' → logprob: -8.375494956970215
    7. ':return' → logprob: -9.000494956970215
    8. '           ' → logprob: -9.125494956970215
    9. '   ' → logprob: -10.125494956970215
    10. '        ' → logprob: -10.375494956970215

Token 1617: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07629014551639557
    2. '	' → logprob: -3.2012901306152344
    3. ' ' → logprob: -4.451290130615234
    4. '<|end|>' → logprob: -5.326290130615234
    5. ' 	' → logprob: -5.451290130615234
    6. '   ' → logprob: -6.326290130615234
    7. '    ' → logprob: -6.576290130615234
    8. ' ' → logprob: -6.951290130615234
    9. '		' → logprob: -7.076290130615234
    10. ' 
' → logprob: -7.201290130615234

Token 1618: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013600608333945274
    2. 'if' → logprob: -4.888600826263428
    3. '   ' → logprob: -6.263600826263428
    4. ' if' → logprob: -6.638600826263428
    5. '           ' → logprob: -6.763600826263428
    6. '	' → logprob: -7.638600826263428
    7. '               ' → logprob: -8.13860034942627
    8. 'return' → logprob: -8.51360034942627
    9. 'left' → logprob: -9.26360034942627
    10. 't' → logprob: -9.63860034942627

Token 1619: ' Base' (ID: 8729)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1972522735595703
    2. '       ' → logprob: -2.3222522735595703
    3. '           ' → logprob: -3.0722522735595703
    4. ' if' → logprob: -3.4472522735595703
    5. 'for' → logprob: -6.94725227355957
    6. 'key' → logprob: -7.32225227355957
    7. '   ' → logprob: -8.07225227355957
    8. 'while' → logprob: -8.44725227355957
    9. 'left' → logprob: -8.57225227355957
    10. '               ' → logprob: -8.69725227355957

Token 1620: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2611819505691528
    2. ' case' → logprob: -1.3861819505691528
    3. 'case' → logprob: -1.5111819505691528
    4. '           ' → logprob: -2.5111818313598633
    5. ':' → logprob: -2.8861818313598633
    6. '      ' → logprob: -3.5111818313598633
    7. '   ' → logprob: -3.8861818313598633
    8. '          ' → logprob: -4.261181831359863
    9. '        ' → logprob: -4.761181831359863
    10. ' return' → logprob: -4.886181831359863

Token 1621: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15026447176933289
    2. 'if' → logprob: -2.1502645015716553
    3. '           ' → logprob: -3.7752645015716553
    4. '       ' → logprob: -10.150264739990234
    5. 'return' → logprob: -10.525264739990234
    6. '               ' → logprob: -10.650264739990234
    7. ' return' → logprob: -10.900264739990234
    8. '```' → logprob: -12.025264739990234
    9. ' ' → logprob: -12.900264739990234
    10. 'If' → logprob: -13.025264739990234

Token 1622: ' no' (ID: 860)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.47563400864601135
    2. 'to' → logprob: -1.725633978843689
    3. 'remaining' → logprob: -1.725633978843689
    4. ' from' → logprob: -4.6006340980529785
    5. ' remaining' → logprob: -4.7256340980529785
    6. ' to' → logprob: -5.7256340980529785
    7. 'length' → logprob: -9.97563362121582
    8. 'not' → logprob: -10.35063362121582
    9. 'possible' → logprob: -10.91313362121582
    10. '```' → logprob: -11.16313362121582

Token 1623: ' b' (ID: 287)
  Prédit: ' remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remaining' → logprob: -0.7568032145500183
    2. 'remaining' → logprob: -0.7568032145500183
    3. '_remaining' → logprob: -3.006803274154663
    4. '_' → logprob: -5.131803035736084
    5. 't' → logprob: -6.756803035736084
    6. 'b' → logprob: -7.006803035736084
    7. ' b' → logprob: -7.131803035736084
    8. ')' → logprob: -7.506803035736084
    9. ' obstacles' → logprob: -7.631803035736084
    10. '_b' → logprob: -7.631803035736084

Token 1624: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -0.037272755056619644
    2. 'ounce' → logprob: -4.037272930145264
    3. 'reak' → logprob: -4.162272930145264
    4. 'r' → logprob: -6.162272930145264
    5. 'ounds' → logprob: -8.162272453308105
    6. 'ack' → logprob: -8.162272453308105
    7. 'remaining' → logprob: -8.912272453308105
    8. 'y' → logprob: -9.287272453308105
    9. 'return' → logprob: -10.037272453308105
    10. ')' → logprob: -10.037272453308105

Token 1625: ' left' (ID: 3561)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8723032474517822
    2. ':' → logprob: -1.6223032474517822
    3. 'and' → logprob: -2.4973032474517822
    4. ' or' → logprob: -2.4973032474517822
    5. '==' → logprob: -2.6223032474517822
    6. ' ==' → logprob: -2.6223032474517822
    7. '           ' → logprob: -2.9973032474517822
    8. ':
' → logprob: -4.622303009033203
    9. '               ' → logprob: -5.372303009033203
    10. '=' → logprob: -5.747303009033203

Token 1626: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3670980632305145
    2. ':' → logprob: -1.367098093032837
    3. ':
' → logprob: -3.867098093032837
    4. '           ' → logprob: -4.492097854614258
    5. 'and' → logprob: -4.867097854614258
    6. ',' → logprob: -4.867097854614258
    7. ' or' → logprob: -6.117097854614258
    8. '               ' → logprob: -6.617097854614258
    9. '       ' → logprob: -7.617097854614258
    10. ')' → logprob: -7.867097854614258

Token 1627: ' check' (ID: 2371)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4418763518333435
    2. ' return' → logprob: -1.1918764114379883
    3. 'return' → logprob: -3.8168764114379883
    4. '           ' → logprob: -3.8168764114379883
    5. ' if' → logprob: -5.441876411437988
    6. '            ' → logprob: -5.816876411437988
    7. ' ' → logprob: -7.066876411437988
    8. '                ' → logprob: -8.191876411437988
    9. ':return' → logprob: -8.191876411437988
    10. '              ' → logprob: -8.691876411437988

Token 1628: ' can' (ID: 665)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.5951237678527832
    2. 'from' → logprob: -1.5951237678527832
    3. 'to' → logprob: -1.7201237678527832
    4. '           ' → logprob: -2.345123767852783
    5. ' if' → logprob: -2.345123767852783
    6. ' to' → logprob: -3.095123767852783
    7. 'can' → logprob: -3.220123767852783
    8. ' (' → logprob: -3.595123767852783
    9. ' from' → logprob: -3.595123767852783
    10. 'length' → logprob: -3.845123767852783

Token 1629: ' make' (ID: 1520)
  Prédit: '_make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_make' → logprob: -0.034198928624391556
    2. 'make' → logprob: -3.6591989994049072
    3. ' make' → logprob: -5.409198760986328
    4. '           ' → logprob: -6.409198760986328
    5. '   ' → logprob: -7.159198760986328
    6. 'fly' → logprob: -8.284198760986328
    7. '       ' → logprob: -9.159198760986328
    8. '_complete' → logprob: -9.284198760986328
    9. 'Make' → logprob: -9.659198760986328
    10. ' fly' → logprob: -9.784198760986328

Token 1630: ' from' (ID: 591)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.33884358406066895
    2. 'to' → logprob: -1.463843584060669
    3. ' segment' → logprob: -3.463843584060669
    4. 'from' → logprob: -4.58884334564209
    5. '_segment' → logprob: -5.08884334564209
    6. '(to' → logprob: -5.96384334564209
    7. ' to' → logprob: -6.21384334564209
    8. '```' → logprob: -6.46384334564209
    9. ' (' → logprob: -8.21384334564209
    10. '(from' → logprob: -8.33884334564209

Token 1631: '_pos' (ID: 14692)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.021097762510180473
    2. 'to' → logprob: -4.646097660064697
    3. ' from' → logprob: -5.396097660064697
    4. '_segment' → logprob: -5.896097660064697
    5. '```' → logprob: -6.146097660064697
    6. 'segment' → logprob: -7.146097660064697
    7. '(from' → logprob: -7.396097660064697
    8. ' to' → logprob: -9.146098136901855
    9. '_pos' → logprob: -9.646098136901855
    10. ' segment' → logprob: -10.271098136901855

Token 1632: '->' (ID: 609)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3829648196697235
    2. 'to' → logprob: -1.382964849472046
    3. '_to' → logprob: -3.007964849472046
    4. ',' → logprob: -5.257964611053467
    5. '+' → logprob: -5.257964611053467
    6. ' +' → logprob: -5.632964611053467
    7. ' ->' → logprob: -6.882964611053467
    8. ' and' → logprob: -7.757964611053467
    9. '```' → logprob: -7.757964611053467
    10. ' with' → logprob: -7.882964611053467

Token 1633: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.054887812584638596
    2. ' to' → logprob: -2.9298877716064453
    3. '```' → logprob: -13.054887771606445
    4. '_to' → logprob: -13.929887771606445
    5. '`' → logprob: -14.304887771606445
    6. '(to' → logprob: -14.429887771606445
    7. 'from' → logprob: -14.929887771606445
    8. '``' → logprob: -15.679887771606445
    9. '   ' → logprob: -15.804887771606445
    10. '	to' → logprob: -16.179887771606445

Token 1634: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.002921018283814192
    2. 'pos' → logprob: -7.127921104431152
    3. '_segment' → logprob: -7.377921104431152
    4. '_' → logprob: -7.877921104431152
    5. '   ' → logprob: -8.252921104431152
    6. '```' → logprob: -9.127921104431152
    7. '       ' → logprob: -9.252921104431152
    8. ' ' → logprob: -9.377921104431152
    9. 'segment' → logprob: -9.752921104431152
    10. '           ' → logprob: -9.752921104431152

Token 1635: ' segment' (ID: 14806)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1543932557106018
    2. '           ' → logprob: -3.029393196105957
    3. ':
' → logprob: -3.154393196105957
    4. '       ' → logprob: -3.154393196105957
    5. ' and' → logprob: -5.404393196105957
    6. '   ' → logprob: -7.279393196105957
    7. '               ' → logprob: -7.404393196105957
    8. ' if' → logprob: -7.654393196105957
    9. ',' → logprob: -7.779393196105957
    10. ')' → logprob: -8.029393196105957

Token 1636: ' flight' (ID: 15243)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25722619891166687
    2. '           ' → logprob: -1.6322262287139893
    3. ':
' → logprob: -3.8822262287139893
    4. '               ' → logprob: -5.50722599029541
    5. '       ' → logprob: -5.88222599029541
    6. '.' → logprob: -6.75722599029541
    7. ',' → logprob: -8.25722599029541
    8. ':return' → logprob: -8.25722599029541
    9. ' and' → logprob: -8.50722599029541
    10. '):' → logprob: -8.63222599029541

Token 1637: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30362942814826965
    2. '           ' → logprob: -1.9286293983459473
    3. ':
' → logprob: -2.4286293983459473
    4. '       ' → logprob: -4.303629398345947
    5. '               ' → logprob: -4.678629398345947
    6. ' and' → logprob: -6.803629398345947
    7. '.' → logprob: -7.053629398345947
    8. '):
' → logprob: -7.178629398345947
    9. ',' → logprob: -7.553629398345947
    10. ' if' → logprob: -7.678629398345947

Token 1638: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6633639931678772
    2. ':' → logprob: -1.5383639335632324
    3. '               ' → logprob: -1.5383639335632324
    4. '       ' → logprob: -3.5383639335632324
    5. '            ' → logprob: -5.413363933563232
    6. ',' → logprob: -5.913363933563232
    7. '):' → logprob: -5.913363933563232
    8. ')' → logprob: -6.038363933563232
    9. ':
' → logprob: -6.288363933563232
    10. ' :' → logprob: -6.413363933563232

Token 1639: ' segment' (ID: 14806)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04814792424440384
    2. '           ' → logprob: -3.1731479167938232
    3. ' ' → logprob: -6.423148155212402
    4. ' if' → logprob: -6.798148155212402
    5. '               ' → logprob: -7.548148155212402
    6. '   ' → logprob: -7.923148155212402
    7. '\n' → logprob: -7.923148155212402
    8. '
' → logprob: -8.798148155212402
    9. ' 
' → logprob: -9.048148155212402
    10. ':' → logprob: -9.173148155212402

Token 1640: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.1057235598564148
    2. '_possible' → logprob: -3.3557236194610596
    3. '           ' → logprob: -4.1057233810424805
    4. '_' → logprob: -4.3557233810424805
    5. '_len' → logprob: -4.3557233810424805
    6. '_can' → logprob: -4.9807233810424805
    7. '_speed' → logprob: -5.4807233810424805
    8. '       ' → logprob: -5.7307233810424805
    9. ' =' → logprob: -6.3557233810424805
    10. '_distance' → logprob: -6.8557233810424805

Token 1641: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6408175230026245
    2. ' =' → logprob: -0.7658175230026245
    3. ' ==' → logprob: -5.015817642211914
    4. '==' → logprob: -6.640817642211914
    5. '           ' → logprob: -10.015817642211914
    6. '=end' → logprob: -10.015817642211914
    7. ')' → logprob: -10.015817642211914
    8. '=len' → logprob: -10.515817642211914
    9. '<|end|>' → logprob: -10.765817642211914
    10. '=int' → logprob: -11.390817642211914

Token 1642: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.01104935072362423
    2. ' to' → logprob: -4.511049270629883
    3. '(to' → logprob: -13.636049270629883
    4. '	to' → logprob: -16.011049270629883
    5. '           ' → logprob: -16.136049270629883
    6. '   ' → logprob: -17.386049270629883
    7. '```' → logprob: -18.386049270629883
    8. '[to' → logprob: -18.636049270629883
    9. '       ' → logprob: -18.761049270629883
    10. ' ' → logprob: -18.761049270629883

Token 1643: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -6.897412822581828e-05
    2. ' _' → logprob: -10.125068664550781
    3. 'pos' → logprob: -10.875068664550781
    4. '_' → logprob: -12.250068664550781
    5. ' -' → logprob: -13.000068664550781
    6. 'Pos' → logprob: -13.500068664550781
    7. ' ' → logprob: -15.375068664550781
    8. '_p' → logprob: -15.625068664550781
    9. '_POS' → logprob: -15.750068664550781
    10. 's' → logprob: -16.00006866455078

Token 1644: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08894600719213486
    2. '-' → logprob: -2.4639461040496826
    3. '-start' → logprob: -13.338946342468262
    4. '<|end|>' → logprob: -13.463946342468262
    5. '   ' → logprob: -13.963946342468262
    6. ' -
' → logprob: -14.713946342468262
    7. ')' → logprob: -14.963946342468262
    8. ' ' → logprob: -15.338946342468262
    9. '-
' → logprob: -15.463946342468262
    10. ' ' → logprob: -15.463946342468262

Token 1645: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -3.130576806142926e-05
    2. ' from' → logprob: -10.375031471252441
    3. '[from' → logprob: -18.375030517578125
    4. '(from' → logprob: -18.875030517578125
    5. 'start' → logprob: -19.500030517578125
    6. '	from' → logprob: -19.875030517578125
    7. '
' → logprob: -20.875030517578125
    8. 'to' → logprob: -21.000030517578125
    9. '```' → logprob: -21.000030517578125
    10. 'first' → logprob: -21.625030517578125

Token 1646: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -4.320199877838604e-07
    2. 'pos' → logprob: -15.0
    3. 'from' → logprob: -17.875
    4. '_' → logprob: -18.5
    5. 'Pos' → logprob: -18.75
    6. '```' → logprob: -20.0
    7. '_POS' → logprob: -20.375
    8. '_p' → logprob: -20.75
    9. '_user' → logprob: -21.125
    10. ' _' → logprob: -22.25

Token 1647: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15783128142356873
    2. '       ' → logprob: -2.4078311920166016
    3. '<|end|>' → logprob: -4.282831192016602
    4. ')' → logprob: -4.657831192016602
    5. '<|end|>' → logprob: -4.657831192016602
    6. ':' → logprob: -4.782831192016602
    7. '
' → logprob: -4.907831192016602
    8. ',' → logprob: -6.907831192016602
    9. ':
' → logprob: -7.157831192016602
    10. '   ' → logprob: -7.282831192016602

Token 1648: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01147959753870964
    2. '           ' → logprob: -4.636479377746582
    3. '<|end|>' → logprob: -8.386479377746582
    4. '   ' → logprob: -8.511479377746582
    5. ' 
' → logprob: -8.511479377746582
    6. '        
' → logprob: -8.511479377746582
    7. '\n' → logprob: -8.886479377746582
    8. ' ' → logprob: -9.011479377746582
    9. ')' → logprob: -9.136479377746582
    10. '```' → logprob: -9.261479377746582

Token 1649: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49740588665008545
    2. '           ' → logprob: -0.9974058866500854
    3. ' if' → logprob: -4.122406005859375
    4. 'if' → logprob: -5.497406005859375
    5. ' ' → logprob: -6.997406005859375
    6. '
' → logprob: -7.622406005859375
    7. '```' → logprob: -7.997406005859375
    8. 'return' (adapté à ' return') → logprob: -8.122406005859375
    9. ' return' → logprob: -8.247406005859375
    10. '   ' → logprob: -8.372406005859375

Token 1650: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006784170400351286
    2. ' self' → logprob: -5.006783962249756
    3. 'segment' → logprob: -10.381784439086914
    4. '           ' → logprob: -10.881784439086914
    5. '(self' → logprob: -11.881784439086914
    6. '   ' → logprob: -12.381784439086914
    7. '       ' → logprob: -13.381784439086914
    8. 'True' → logprob: -13.506784439086914
    9. '	self' → logprob: -14.131784439086914
    10. ' ' → logprob: -14.506784439086914

Token 1651: '.can' (ID: 46002)
  Prédit: '.can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.can' → logprob: -3.8889261304575484e-06
    2. 'can' → logprob: -13.250003814697266
    3. ' .' → logprob: -14.625003814697266
    4. '_can' → logprob: -14.625003814697266
    5. '	can' → logprob: -14.750003814697266
    6. '.Can' → logprob: -15.500003814697266
    7. '   ' → logprob: -15.750003814697266
    8. '.' → logprob: -16.500003814697266
    9. '._' → logprob: -16.875003814697266
    10. '_.' → logprob: -17.250003814697266

Token 1652: '_make' (ID: 70070)
  Prédit: '_make'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_make' → logprob: -8.7689099018462e-05
    2. 'make' → logprob: -9.50008773803711
    3. '_can' → logprob: -12.62508773803711
    4. '_' → logprob: -12.75008773803711
    5. 'Make' → logprob: -13.25008773803711
    6. ' _' → logprob: -13.37508773803711
    7. ' make' → logprob: -14.50008773803711
    8. '_continue' → logprob: -14.62508773803711
    9. '_have' → logprob: -14.62508773803711
    10. '```' → logprob: -14.75008773803711

Token 1653: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.012521425262093544
    2. 'segment' → logprob: -4.387521266937256
    3. 'Segment' → logprob: -12.012521743774414
    4. '
' → logprob: -13.762521743774414
    5. 'seg' → logprob: -14.512521743774414
    6. 'length' → logprob: -14.512521743774414
    7. ' segment' → logprob: -14.512521743774414
    8. 's' → logprob: -14.637521743774414
    9. '   ' → logprob: -14.762521743774414
    10. '`' → logprob: -14.762521743774414

Token 1654: '(segment' (ID: 144369)
  Prédit: '(segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(segment' → logprob: -0.004159483592957258
    2. 'segment' → logprob: -5.504159450531006
    3. '(length' → logprob: -10.379159927368164
    4. ' (' → logprob: -11.004159927368164
    5. ' segment' → logprob: -11.129159927368164
    6. '(' → logprob: -11.129159927368164
    7. '(
' → logprob: -12.754159927368164
    8. 'length' → logprob: -14.004159927368164
    9. '.segment' → logprob: -17.129159927368164
    10. '(seg' → logprob: -17.129159927368164

Token 1655: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00012999906903132796
    2. 'length' → logprob: -9.000129699707031
    3. '(segment' → logprob: -13.125129699707031
    4. 'segment' → logprob: -13.250129699707031
    5. '```' → logprob: -13.625129699707031
    6. '           ' → logprob: -15.375129699707031
    7. ')' → logprob: -15.500129699707031
    8. '   ' → logprob: -15.625129699707031
    9. 'ength' → logprob: -15.750129699707031
    10. '_lengths' → logprob: -16.50012969970703

Token 1656: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5094070477061905e-05
    2. ' ,' → logprob: -12.500015258789062
    3. '           ' → logprob: -12.625015258789062
    4. ',
' → logprob: -12.875015258789062
    5. ')' → logprob: -13.000015258789062
    6. '<|end|>' → logprob: -13.875015258789062
    7. '<|end|>' → logprob: -14.375015258789062
    8. '```' → logprob: -15.125015258789062
    9. '               ' → logprob: -16.125015258789062
    10. ',float' → logprob: -16.125015258789062

Token 1657: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.0004336493439041078
    2. ' initial' → logprob: -7.750433444976807
    3. '           ' → logprob: -12.875433921813965
    4. '   ' → logprob: -16.50043296813965
    5. '               ' → logprob: -16.50043296813965
    6. '	initial' → logprob: -16.50043296813965
    7. '(initial' → logprob: -17.87543296813965
    8. '.initial' → logprob: -17.87543296813965
    9. '            ' → logprob: -18.75043296813965
    10. 'Initial' → logprob: -19.00043296813965

Token 1658: '_speed' (ID: 43208)
  Prédit: '_speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -5.848420551046729e-05
    2. 'speed' → logprob: -9.7500581741333
    3. 'Speed' → logprob: -16.375059127807617
    4. ' speed' → logprob: -16.875059127807617
    5. '```' → logprob: -17.500059127807617
    6. '_s' → logprob: -17.875059127807617
    7. '_velocity' → logprob: -18.000059127807617
    8. '_SPEED' → logprob: -18.000059127807617
    9. ')' → logprob: -18.375059127807617
    10. '
' → logprob: -18.625059127807617

Token 1659: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1434459090232849
    2. ')' → logprob: -2.0184459686279297
    3. '           ' → logprob: -7.39344596862793
    4. ')
' → logprob: -10.51844596862793
    5. '       ' → logprob: -11.14344596862793
    6. '               ' → logprob: -11.14344596862793
    7. ',)' → logprob: -11.39344596862793
    8. ',None' → logprob: -11.39344596862793
    9. '          ' → logprob: -11.51844596862793
    10. ' ,' → logprob: -11.51844596862793

Token 1660: ' obstacles' (ID: 46430)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.0001593195047462359
    2. ' obstacles' → logprob: -8.87515926361084
    3. '           ' → logprob: -11.12515926361084
    4. '               ' → logprob: -13.25015926361084
    5. '(ob' → logprob: -14.00015926361084
    6. ' ob' → logprob: -14.37515926361084
    7. '       ' → logprob: -14.62515926361084
    8. '	ob' → logprob: -15.50015926361084
    9. '                   ' → logprob: -15.75015926361084
    10. ''ob' → logprob: -15.87515926361084

Token 1661: '_section' (ID: 41389)
  Prédit: '_section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_section' → logprob: -0.00020127551397308707
    2. ')' → logprob: -9.375201225280762
    3. 'Section' → logprob: -9.750201225280762
    4. '[' → logprob: -10.250201225280762
    5. '_SECTION' → logprob: -12.500201225280762
    6. 's' → logprob: -12.625201225280762
    7. '<section' → logprob: -12.875201225280762
    8. '_segment' → logprob: -13.250201225280762
    9. '   ' → logprob: -13.250201225280762
    10. '[in' → logprob: -13.375201225280762

Token 1662: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016086915275081992
    2. '           ' → logprob: -9.375161170959473
    3. '       ' → logprob: -10.125161170959473
    4. ')
' → logprob: -10.875161170959473
    5. '<|end|>' → logprob: -12.625161170959473
    6. '   ' → logprob: -13.125161170959473
    7. ')return' → logprob: -13.250161170959473
    8. ' )' → logprob: -13.500161170959473
    9. '               ' → logprob: -13.500161170959473
    10. '):' → logprob: -13.625161170959473

Token 1663: '        
' (ID: 3564)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04494421184062958
    2. '<|end|>' → logprob: -3.4199442863464355
    3. '\n' → logprob: -5.0449442863464355
    4. '    
' → logprob: -6.5449442863464355
    5. '       ' → logprob: -6.6699442863464355
    6. '   ' → logprob: -7.6699442863464355
    7. '        
' → logprob: -8.294943809509277
    8. '  
' → logprob: -8.419943809509277
    9. '
' → logprob: -8.669943809509277
    10. '' → logprob: -8.669943809509277

Token 1664: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1665: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7646573781967163
    2. 'def' → logprob: -1.1396573781967163
    3. '       ' → logprob: -1.6396573781967163
    4. '        
' → logprob: -4.639657497406006
    5. '<|end|>' → logprob: -5.389657497406006
    6. '```' → logprob: -6.014657497406006
    7. 'return' → logprob: -6.764657497406006
    8. '   ' → logprob: -7.014657497406006
    9. '    
' → logprob: -7.264657497406006
    10. '  
' → logprob: -8.014657020568848

Token 1666: ' Since' (ID: 12265)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07914137840270996
    2. '       ' → logprob: -3.07914137840271
    3. 'from' → logprob: -3.57914137840271
    4. 'import' → logprob: -6.829141616821289
    5. '   ' → logprob: -8.079141616821289
    6. 'visited' → logprob: -8.329141616821289
    7. '#' → logprob: -8.954141616821289
    8. 'memo' → logprob: -9.454141616821289
    9. 'cache' → logprob: -9.579141616821289
    10. '
' → logprob: -9.954141616821289

Token 1667: ' b' (ID: 287)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8720470666885376
    2. 'b' → logprob: -1.1220470666885376
    3. 'max' → logprob: -2.747046947479248
    4. 'True' → logprob: -3.372046947479248
    5. 'def' → logprob: -3.372046947479248
    6. 'not' → logprob: -3.747046947479248
    7. ' True' → logprob: -3.872046947479248
    8. 'remaining' → logprob: -3.872046947479248
    9. 'from' → logprob: -4.372046947479248
    10. '0' → logprob: -5.122046947479248

Token 1668: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -0.0034915003925561905
    2. 'ounce' → logprob: -6.503491401672363
    3. 'ounds' → logprob: -6.753491401672363
    4. 'r' → logprob: -9.253491401672363
    5. 'max' → logprob: -9.253491401672363
    6. 'u' → logprob: -9.378491401672363
    7. 'efore' → logprob: -10.128491401672363
    8. 'ack' → logprob: -10.253491401672363
    9. 'est' → logprob: -10.253491401672363
    10. 'ounced' → logprob: -10.253491401672363

Token 1669: ' can' (ID: 665)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8714964389801025
    2. '==' → logprob: -1.2464964389801025
    3. ' >' → logprob: -2.7464964389801025
    4. '=' → logprob: -2.8714964389801025
    5. '>' → logprob: -2.8714964389801025
    6. ' <=' → logprob: -3.6214964389801025
    7. '<=' → logprob: -3.9964964389801025
    8. ' =' → logprob: -4.371496200561523
    9. ' >=' → logprob: -4.371496200561523
    10. '>=' → logprob: -4.621496200561523

Token 1670: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.4351922571659088
    2. 'range' → logprob: -1.4351922273635864
    3. ' be' → logprob: -2.435192346572876
    4. '0' → logprob: -4.435192108154297
    5. ' range' → logprob: -4.435192108154297
    6. 'go' → logprob: -7.435192108154297
    7. '<=' → logprob: -7.435192108154297
    8. '=' → logprob: -7.935192108154297
    9. 'max' → logprob: -7.935192108154297
    10. 'increase' → logprob: -8.310192108154297

Token 1671: ' up' (ID: 869)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0589834600687027
    2. 'zero' → logprob: -3.558983564376831
    3. 'up' → logprob: -4.308983325958252
    4. 'greater' → logprob: -5.058983325958252
    5. '>' → logprob: -5.808983325958252
    6. 'more' → logprob: -6.308983325958252
    7. 'any' → logprob: -6.683983325958252
    8. 'from' → logprob: -6.683983325958252
    9. 'multiple' → logprob: -7.558983325958252
    10. 'used' → logprob: -7.933983325958252

Token 1672: ' to' (ID: 316)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13804207742214203
    2. '1' → logprob: -3.5130419731140137
    3. ' ' → logprob: -4.013041973114014
    4. 'b' → logprob: -4.263041973114014
    5. '   ' → logprob: -4.388041973114014
    6. '>' → logprob: -4.638041973114014
    7. 'def' → logprob: -4.888041973114014
    8. 'greater' → logprob: -5.138041973114014
    9. 'pto' → logprob: -5.763041973114014
    10. 'used' → logprob: -5.763041973114014

Token 1673: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.017064297571778297
    2. '0' → logprob: -4.517064094543457
    3. '15' → logprob: -5.142064094543457
    4. ' self' → logprob: -9.142064094543457
    5. '1' → logprob: -11.392064094543457
    6. '16' → logprob: -11.517064094543457
    7. '20' → logprob: -12.392064094543457
    8. '(self' → logprob: -12.892064094543457
    9. '14' → logprob: -12.892064094543457
    10. '#' → logprob: -13.517064094543457

Token 1674: '15' (ID: 1055)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14110791683197021
    2. '15' → logprob: -2.1411080360412598
    3. '0' → logprob: -4.26610803604126
    4. '16' → logprob: -11.391107559204102
    5. ' self' → logprob: -11.516107559204102
    6. '
' → logprob: -12.516107559204102
    7. '20' → logprob: -12.766107559204102
    8. '(self' → logprob: -12.766107559204102
    9. '1' → logprob: -13.016107559204102
    10. '14' → logprob: -13.891107559204102

Token 1675: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4845731854438782
    2. ',' → logprob: -0.9845731854438782
    3. ' and' → logprob: -4.9845733642578125
    4. '
' → logprob: -6.2345733642578125
    5. ',
' → logprob: -7.6095733642578125
    6. 'and' → logprob: -8.359573364257812
    7. ':' → logprob: -8.984573364257812
    8. '<|end|>' → logprob: -8.984573364257812
    9. ':
' → logprob: -9.359573364257812
    10. ' or' → logprob: -9.484573364257812

Token 1676: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6811278462409973
    2. 'def' → logprob: -0.9311278462409973
    3. 'import' → logprob: -3.5561277866363525
    4. 'from' → logprob: -3.9311277866363525
    5. ' def' → logprob: -4.181128025054932
    6. '#' → logprob: -4.306128025054932
    7. '
' → logprob: -5.056128025054932
    8. ' positions' → logprob: -5.806128025054932
    9. 'positions' → logprob: -6.056128025054932
    10. ' from' → logprob: -6.181128025054932

Token 1677: ' obstacles' (ID: 46430)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.561166524887085
    2. 'from' → logprob: -2.186166524887085
    3. 'sys' → logprob: -3.061166524887085
    4. 'def' → logprob: -3.561166524887085
    5. '...' → logprob: -3.561166524887085
    6. 'self' → logprob: -3.811166524887085
    7. 'import' → logprob: -3.936166524887085
    8. 'positions' → logprob: -3.936166524887085
    9. 'max' → logprob: -3.936166524887085
    10. 'the' → logprob: -4.311166763305664

Token 1678: ' fixed' (ID: 13213)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.05338778346776962
    2. '_count' → logprob: -4.553387641906738
    3. 'positions' → logprob: -5.428387641906738
    4. ' are' → logprob: -5.428387641906738
    5. '_remaining' → logprob: -5.428387641906738
    6. '_in' → logprob: -5.928387641906738
    7. ',' → logprob: -6.053387641906738
    8. ' can' → logprob: -6.178387641906738
    9. ')' → logprob: -6.303387641906738
    10. ' in' → logprob: -6.303387641906738

Token 1679: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27283981442451477
    2. ',
' → logprob: -2.0228397846221924
    3. 'positions' → logprob: -3.2728397846221924
    4. ':' → logprob: -4.6478400230407715
    5. 'count' → logprob: -4.8978400230407715
    6. ' in' → logprob: -5.0228400230407715
    7. '
' → logprob: -5.2728400230407715
    8. ':
' → logprob: -5.6478400230407715
    9. 'in' → logprob: -5.8978400230407715
    10. '   ' → logprob: -5.8978400230407715

Token 1680: ' naive' (ID: 105687)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9584425687789917
    2. 'def' → logprob: -0.9584425687789917
    3. ' def' → logprob: -2.4584426879882812
    4. '#' → logprob: -3.4584426879882812
    5. 'import' → logprob: -3.5834426879882812
    6. 'from' → logprob: -3.7084426879882812
    7. '
' → logprob: -3.9584426879882812
    8. 'positions' → logprob: -4.458442687988281
    9. ' positions' → logprob: -4.708442687988281
    10. '```' → logprob: -5.458442687988281

Token 1681: ' complete' (ID: 5533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6516205072402954
    2. 'dfs' → logprob: -1.2766205072402954
    3. 'return' → logprob: -2.651620388031006
    4. 'for' → logprob: -3.651620388031006
    5. 'memo' → logprob: -4.276620388031006
    6. 'depth' → logprob: -4.651620388031006
    7. 'cache' → logprob: -4.651620388031006
    8. ' for' → logprob: -4.901620388031006
    9. ' def' → logprob: -5.026620388031006
    10. 'DFS' → logprob: -5.026620388031006

Token 1682: ' enumeration' (ID: 120596)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -1.2367256879806519
    2. 'search' → logprob: -1.6117256879806519
    3. ' search' → logprob: -1.6117256879806519
    4. 'DFS' → logprob: -2.4867258071899414
    5. 'expl' → logprob: -2.7367258071899414
    6. 'enumer' → logprob: -3.4867258071899414
    7. '
' → logprob: -3.7367258071899414
    8. ' recursion' → logprob: -4.111725807189941
    9. '```' → logprob: -4.236725807189941
    10. 'memo' → logprob: -4.361725807189941

Token 1683: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1684: ' huge' (ID: 9560)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.7121161222457886
    2. 'im' → logprob: -1.2121161222457886
    3. 'in' → logprob: -1.8371161222457886
    4. 'too' → logprob: -4.087116241455078
    5. ' not' → logprob: -4.337116241455078
    6. ' infe' → logprob: -5.087116241455078
    7. 'unlikely' → logprob: -5.712116241455078
    8. 'ine' → logprob: -5.962116241455078
    9. 'un' → logprob: -6.087116241455078
    10. '```' → logprob: -6.462116241455078

Token 1685: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09820104390382767
    2. '<|end|>' → logprob: -3.348201036453247
    3. '
' → logprob: -3.473201036453247
    4. ',' → logprob: -4.598201274871826
    5. '<|end|>' → logprob: -4.973201274871826
    6. '.' → logprob: -5.348201274871826
    7. '        
' → logprob: -6.098201274871826
    8. ' but' → logprob: -7.098201274871826
    9. ',
' → logprob: -7.473201274871826
    10. ')' → logprob: -7.598201274871826

Token 1686: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002668192028068006
    2. '
' → logprob: -8.625267028808594
    3. '#' → logprob: -10.375267028808594
    4. '        
' → logprob: -10.375267028808594
    5. '   ' → logprob: -11.625267028808594
    6. 'Let's' → logprob: -12.375267028808594
    7. '```' → logprob: -12.750267028808594
    8. 'import' → logprob: -13.750267028808594
    9. 'return' → logprob: -14.125267028808594
    10. 'def' → logprob: -14.375267028808594

Token 1687: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0955161526799202
    2. '
' → logprob: -2.4705162048339844
    3. '        
' → logprob: -5.345516204833984
    4. '#' (adapté à ' #') → logprob: -7.220516204833984
    5. ' 
' → logprob: -8.595516204833984
    6. '   ' → logprob: -8.595516204833984
    7. 'def' → logprob: -8.970516204833984
    8. 'Let's' → logprob: -9.220516204833984
    9. '    
' → logprob: -9.470516204833984
    10. '```' → logprob: -10.220516204833984

Token 1688: ' We'll' (ID: 46830)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11403056979179382
    2. '#' → logprob: -2.989030599594116
    3. 'def' → logprob: -3.489030599594116
    4. 'from' → logprob: -4.114030361175537
    5. 'memo' → logprob: -6.364030361175537
    6. 'import' → logprob: -6.489030361175537
    7. 'bounce' → logprob: -6.739030361175537
    8. '
' → logprob: -6.739030361175537
    9. 'cache' → logprob: -7.114030361175537
    10. '        
' → logprob: -7.239030361175537

Token 1689: ' perform' (ID: 3347)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3041434586048126
    2. 'def' → logprob: -2.3041434288024902
    3. 'use' → logprob: -2.9291434288024902
    4. '       ' → logprob: -3.8041434288024902
    5. 'return' → logprob: -3.9291434288024902
    6. 'try' → logprob: -4.42914342880249
    7. 'implement' → logprob: -4.67914342880249
    8. ' use' → logprob: -4.92914342880249
    9. '   ' → logprob: -5.17914342880249
    10. 'continue' → logprob: -5.30414342880249

Token 1690: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2345781326293945
    2. ' a' → logprob: -1.6095781326293945
    3. 'binary' → logprob: -1.7345781326293945
    4. 'memo' → logprob: -2.3595781326293945
    5. 'dfs' → logprob: -3.1095781326293945
    6. 'the' → logprob: -3.4845781326293945
    7. 'b' → logprob: -3.6095781326293945
    8. ' binary' → logprob: -3.6095781326293945
    9. ' memo' → logprob: -4.2345781326293945
    10. 'partial' → logprob: -4.2345781326293945

Token 1691: ' binary' (ID: 15600)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8562136888504028
    2. 'memo' → logprob: -1.7312136888504028
    3. 'binary' → logprob: -1.7312136888504028
    4. 'dfs' → logprob: -3.6062135696411133
    5. 'pr' → logprob: -3.7312135696411133
    6. 'best' → logprob: -3.8562135696411133
    7. 'return' → logprob: -4.106213569641113
    8. '
' → logprob: -4.106213569641113
    9. 'b' → logprob: -4.106213569641113
    10. 'dp' → logprob: -4.231213569641113

Token 1692: '-search' (ID: 43055)
  Prédit: ' search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.47413110733032227
    2. 'search' → logprob: -0.9741311073303223
    3. '_search' → logprob: -9.849130630493164
    4. '
' → logprob: -14.599130630493164
    5. '-search' → logprob: -15.224130630493164
    6. '	search' → logprob: -15.224130630493164
    7. ' seach' → logprob: -16.724130630493164
    8. 'Search' → logprob: -16.849130630493164
    9. ' ' → logprob: -17.099130630493164
    10. 'space' → logprob: -17.099130630493164

Token 1693: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.4673849046230316
    2. ' to' → logprob: -1.967384934425354
    3. ' ' → logprob: -2.7173848152160645
    4. ' over' → logprob: -2.9673848152160645
    5. ' for' → logprob: -3.2173848152160645
    6. '<|end|>' → logprob: -3.3423848152160645
    7. '       ' → logprob: -4.3423848152160645
    8. '        ' → logprob: -5.2173848152160645
    9. 'on' → logprob: -5.8423848152160645
    10. ' approach' → logprob: -6.0923848152160645

Token 1694: ' number' (ID: 2086)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.01651311106979847
    2. ' initial' → logprob: -4.641513347625732
    3. 'the' → logprob: -5.266513347625732
    4. 'self' → logprob: -6.891513347625732
    5. ' the' → logprob: -8.766512870788574
    6. '
' → logprob: -8.766512870788574
    7. 'left' → logprob: -10.391512870788574
    8. ')' → logprob: -10.391512870788574
    9. '(initial' → logprob: -10.891512870788574
    10. 'def' → logprob: -11.016512870788574

Token 1695: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.24546407163143158
    2. ' of' → logprob: -1.8704640865325928
    3. ')' → logprob: -3.4954640865325928
    4. '_' → logprob: -4.745463848114014
    5. '
' → logprob: -5.245463848114014
    6. '_of' → logprob: -5.620463848114014
    7. 'def' → logprob: -6.370463848114014
    8. '#' → logprob: -6.620463848114014
    9. 'e' → logprob: -6.745463848114014
    10. '       ' → logprob: -6.870463848114014

Token 1696: ' splits' (ID: 76848)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0703113004565239
    2. ' b' → logprob: -2.6953113079071045
    3. '
' → logprob: -8.445311546325684
    4. 'segments' → logprob: -10.320311546325684
    5. '```' → logprob: -10.945311546325684
    6. 'spl' → logprob: -11.195311546325684
    7. ')' → logprob: -11.445311546325684
    8. 'bounce' → logprob: -11.570311546325684
    9. ' ' → logprob: -11.695311546325684
    10. '   ' → logprob: -12.070311546325684

Token 1697: ' positions' (ID: 15897)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8381258249282837
    2. '<|end|>' → logprob: -1.4631258249282837
    3. '<|end|>' → logprob: -2.838125705718994
    4. '       ' → logprob: -2.838125705718994
    5. ')' → logprob: -3.088125705718994
    6. ',' → logprob: -3.213125705718994
    7. '.' → logprob: -3.338125705718994
    8. '
' → logprob: -3.713125705718994
    9. '   ' → logprob: -4.088125705718994
    10. ':
' → logprob: -4.088125705718994

Token 1698: ' only' (ID: 1606)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12160950899124146
    2. '.' → logprob: -3.3716094493865967
    3. '<|end|>' → logprob: -3.3716094493865967
    4. ':
' → logprob: -4.371609687805176
    5. ',' → logprob: -4.746609687805176
    6. '       ' → logprob: -4.746609687805176
    7. '<|end|>' → logprob: -5.246609687805176
    8. ' and' → logprob: -5.746609687805176
    9. ')' → logprob: -6.246609687805176
    10. '   ' → logprob: -6.621609687805176

Token 1699: ' up' (ID: 869)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1700: ' to' (ID: 316)
  Prédit: 'pto'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pto' → logprob: -0.7276588082313538
    2. 'ntil' → logprob: -0.8526588082313538
    3. 'to' → logprob: -3.227658748626709
    4. ' to' → logprob: -3.477658748626709
    5. 'p' → logprob: -4.852658748626709
    6. 'n' → logprob: -5.227658748626709
    7. 'o' → logprob: -6.852658748626709
    8. '       ' → logprob: -6.977658748626709
    9. '_to' → logprob: -7.227658748626709
    10. 'nt' → logprob: -7.352658748626709

Token 1701: ' b' (ID: 287)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07820718735456467
    2. 'the' → logprob: -2.82820725440979
    3. '15' → logprob: -5.328207015991211
    4. 'max' → logprob: -5.703207015991211
    5. '1' → logprob: -6.703207015991211
    6. 'distance' → logprob: -6.703207015991211
    7. '100' → logprob: -7.328207015991211
    8. '20' → logprob: -7.453207015991211
    9. 'total' → logprob: -7.453207015991211
    10. 'min' → logprob: -7.828207015991211

Token 1702: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -0.10994383692741394
    2. 'ounce' → logprob: -3.1099438667297363
    3. ')' → logprob: -4.109943866729736
    4. 'ounds' → logprob: -4.734943866729736
    5. 'u' → logprob: -5.109943866729736
    6. ''' → logprob: -5.484943866729736
    7. 'r' → logprob: -5.734943866729736
    8. 'o' → logprob: -5.859943866729736
    9. ']' → logprob: -5.984943866729736
    10. '```' → logprob: -6.109943866729736

Token 1703: ' allowed' (ID: 9279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1704: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16812002658843994
    2. '.' → logprob: -2.6681199073791504
    3. ',' → logprob: -3.0431199073791504
    4. ' and' → logprob: -4.79311990737915
    5. '<|end|>' → logprob: -4.91811990737915
    6. '
' → logprob: -5.66811990737915
    7. ' to' → logprob: -5.91811990737915
    8. '        
' → logprob: -6.04311990737915
    9. ':' → logprob: -6.29311990737915
    10. ' with' → logprob: -6.41811990737915

Token 1705: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050656601786613464
    2. '
' → logprob: -4.425656795501709
    3. '<|end|>' → logprob: -4.425656795501709
    4. ',' → logprob: -4.550656795501709
    5. '.' → logprob: -5.550656795501709
    6. ')' → logprob: -5.675656795501709
    7. '   ' → logprob: -6.425656795501709
    8. '        
' → logprob: -6.800656795501709
    9. ',
' → logprob: -7.050656795501709
    10. '<|end|>' → logprob: -7.300656795501709

Token 1706: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010711579816415906
    2. '
' → logprob: -7.626070976257324
    3. '        
' → logprob: -8.001070976257324
    4. ',' → logprob: -9.251070976257324
    5. '#' (adapté à ' #') → logprob: -10.126070976257324
    6. '   ' → logprob: -10.876070976257324
    7. '```' → logprob: -11.251070976257324
    8. '    
' → logprob: -11.376070976257324
    9. '<|end|>' → logprob: -11.376070976257324
    10. ')' → logprob: -11.501070976257324

Token 1707: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01112351194024086
    2. 'def' → logprob: -5.5111236572265625
    3. 'positions' → logprob: -6.7611236572265625
    4. '#' → logprob: -7.0111236572265625
    5. ' positions' → logprob: -7.3861236572265625
    6. '   ' → logprob: -7.5111236572265625
    7. '        
' → logprob: -7.7611236572265625
    8. 'return' → logprob: -7.7611236572265625
    9. '
' → logprob: -7.8861236572265625
    10. 'b' → logprob: -7.8861236572265625

Token 1708: ' instead' (ID: 7665)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.852553129196167
    2. '       ' → logprob: -1.852553129196167
    3. 'def' → logprob: -1.852553129196167
    4. ' need' → logprob: -2.102553129196167
    5. ' will' → logprob: -3.227553129196167
    6. ' continue' → logprob: -3.477553129196167
    7. '   ' → logprob: -4.352553367614746
    8. 'import' → logprob: -4.852553367614746
    9. ' can' → logprob: -4.977553367614746
    10. ' import' → logprob: -5.227553367614746

Token 1709: ' use' (ID: 1199)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.296484351158142
    2. '       ' → logprob: -1.421484351158142
    3. 'try' → logprob: -1.421484351158142
    4. 'return' → logprob: -2.6714844703674316
    5. ' try' → logprob: -3.1714844703674316
    6. 'continue' → logprob: -3.1714844703674316
    7. 'perform' → logprob: -4.046484470367432
    8. '
' → logprob: -4.171484470367432
    9. 'import' → logprob: -4.921484470367432
    10. ' def' → logprob: -4.921484470367432

Token 1710: ' a' (ID: 261)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.484662264585495
    2. 'from' → logprob: -1.7346622943878174
    3. 'import' → logprob: -2.1096622943878174
    4. 'self' → logprob: -2.6096622943878174
    5. '
' → logprob: -6.234662055969238
    6. 'memo' → logprob: -6.234662055969238
    7. 'sys' → logprob: -6.484662055969238
    8. 'back' → logprob: -6.734662055969238
    9. 'the' → logprob: -6.859662055969238
    10. 'lambda' → logprob: -7.109662055969238

Token 1711: ' BFS' (ID: 190016)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11538141965866089
    2. 'from' → logprob: -2.6153814792633057
    3. 'queue' → logprob: -4.615381240844727
    4. 'Simple' → logprob: -4.740381240844727
    5. 'import' → logprob: -5.490381240844727
    6. '#' → logprob: -5.990381240844727
    7. 'deque' → logprob: -6.240381240844727
    8. 'class' → logprob: -6.615381240844727
    9. 'split' → logprob: -6.865381240844727
    10. 'back' → logprob: -6.865381240844727

Token 1712: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2233481407165527
    2. '       ' → logprob: -1.5983481407165527
    3. ':
' → logprob: -2.2233481407165527
    4. '(queue' → logprob: -2.2233481407165527
    5. ':' → logprob: -2.4733481407165527
    6. '(
' → logprob: -2.8483481407165527
    7. '_queue' → logprob: -3.0983481407165527
    8. ' queue' → logprob: -3.4733481407165527
    9. '        
' → logprob: -4.473348140716553
    10. '(' → logprob: -5.223348140716553

Token 1713: ' states' (ID: 9407)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3281945288181305
    2. 'deque' → logprob: -1.953194499015808
    3. 'queue' → logprob: -2.2031946182250977
    4. 'import' → logprob: -3.9531946182250977
    5. 'collections' → logprob: -5.328194618225098
    6. '[(' → logprob: -7.328194618225098
    7. ' queue' → logprob: -7.453194618225098
    8. 'a' → logprob: -7.703194618225098
    9. '
' → logprob: -8.078194618225098
    10. 'start' → logprob: -8.078194618225098

Token 1714: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2864348888397217
    2. '(queue' → logprob: -1.7864348888397217
    3. ':
' → logprob: -1.9114348888397217
    4. '       ' → logprob: -2.5364348888397217
    5. '(
' → logprob: -3.1614348888397217
    6. '
' → logprob: -3.4114348888397217
    7. 'from' → logprob: -3.7864348888397217
    8. ' from' → logprob: -3.7864348888397217
    9. ' to' → logprob: -3.9114348888397217
    10. '[
' → logprob: -4.036435127258301

Token 1715: ' position' (ID: 4010)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.542252242565155
    2. ' queue' → logprob: -2.7922523021698
    3. 'queue' → logprob: -2.7922523021698
    4. ' (' → logprob: -2.9172523021698
    5. 'deque' → logprob: -3.0422523021698
    6. '(queue' → logprob: -3.2922523021698
    7. ' from' → logprob: -3.4172523021698
    8. '```' → logprob: -3.5422523021698
    9. '
' → logprob: -3.7922523021698
    10. '(' → logprob: -4.417252063751221

Token 1716: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48169389367103577
    2. ':' → logprob: -1.7316938638687134
    3. '```' → logprob: -2.856693983078003
    4. ' and' → logprob: -3.356693983078003
    5. '       ' → logprob: -4.356693744659424
    6. ')' → logprob: -4.481693744659424
    7. ',
' → logprob: -4.606693744659424
    8. ' (' → logprob: -4.606693744659424
    9. ' =' → logprob: -4.731693744659424
    10. '=' → logprob: -4.731693744659424

Token 1717: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.21712154150009155
    2. ' b' → logprob: -2.2171216011047363
    3. 'remaining' → logprob: -3.0921216011047363
    4. 'bounce' → logprob: -3.8421216011047363
    5. ' remaining' → logprob: -4.342121601104736
    6. ' bounce' → logprob: -5.342121601104736
    7. 'used' → logprob: -7.717121601104736
    8. ' used' → logprob: -7.842121601104736
    9. 'current' → logprob: -8.592121124267578
    10. 'number' → logprob: -8.967121124267578

Token 1718: 'ounces' (ID: 52219)
  Prédit: 'ounce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounce' → logprob: -0.253910094499588
    2. 'ounces' → logprob: -1.5039100646972656
    3. 'oun' → logprob: -8.128910064697266
    4. 'ounds' → logprob: -8.253910064697266
    5. 'ount' → logprob: -8.503910064697266
    6. ')' → logprob: -8.753910064697266
    7. 'ound' → logprob: -8.878910064697266
    8. 'ou' → logprob: -9.128910064697266
    9. 'o' → logprob: -9.378910064697266
    10. 'bounce' → logprob: -9.378910064697266

Token 1719: ' left' (ID: 3561)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.778857946395874
    2. '       ' → logprob: -1.528857946395874
    3. ':
' → logprob: -1.778857946395874
    4. '   ' → logprob: -3.153857946395874
    5. '[' → logprob: -4.028858184814453
    6. ',' → logprob: -4.028858184814453
    7. '
' → logprob: -4.153858184814453
    8. '(' → logprob: -4.403858184814453
    9. '.' → logprob: -4.778858184814453
    10. '(
' → logprob: -5.028858184814453

Token 1720: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6411536931991577
    2. '
' → logprob: -0.8911536931991577
    3. 'from' → logprob: -4.016153812408447
    4. '        
' → logprob: -4.016153812408447
    5. '   ' → logprob: -4.766153812408447
    6. 'def' → logprob: -5.266153812408447
    7. ',' → logprob: -6.266153812408447
    8. ' from' → logprob: -6.391153812408447
    9. 'import' → logprob: -6.766153812408447
    10. '    
' → logprob: -6.891153812408447

Token 1721: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12468406558036804
    2. '
' → logprob: -2.3746840953826904
    3. '        
' → logprob: -4.249683856964111
    4. ' 
' → logprob: -5.249683856964111
    5. '```' → logprob: -6.499683856964111
    6. '   ' → logprob: -7.624683856964111
    7. '\' → logprob: -7.749683856964111
    8. '\n' → logprob: -7.749683856964111
    9. '<|end|>' → logprob: -8.37468433380127
    10. ',' → logprob: -8.49968433380127

Token 1722: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.022951459512114525
    2. '       ' → logprob: -4.022951602935791
    3. 'import' → logprob: -5.647951602935791
    4. 'queue' → logprob: -7.522951602935791
    5. '```' → logprob: -8.022951126098633
    6. ' from' → logprob: -8.772951126098633
    7. 'visited' → logprob: -8.897951126098633
    8. 'positions' → logprob: -10.147951126098633
    9. '
' → logprob: -10.397951126098633
    10. '   ' → logprob: -10.772951126098633

Token 1723: ' Positions' (ID: 138312)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.07007948309183121
    2. '       ' → logprob: -2.9450795650482178
    3. 'import' → logprob: -5.070079326629639
    4. 'positions' → logprob: -5.695079326629639
    5. 'visited' → logprob: -6.195079326629639
    6. 'queue' → logprob: -6.570079326629639
    7. 'def' → logprob: -7.445079326629639
    8. '```' → logprob: -7.820079326629639
    9. ' from' → logprob: -8.195079803466797
    10. '   ' → logprob: -8.195079803466797

Token 1724: ' important' (ID: 3378)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15072156488895416
    2. '=' → logprob: -2.150721549987793
    3. '_positions' → logprob: -5.150721549987793
    4. '_to' → logprob: -5.400721549987793
    5. 'positions' → logprob: -5.775721549987793
    6. ',' → logprob: -5.775721549987793
    7. ':' → logprob: -6.775721549987793
    8. '=[' → logprob: -7.275721549987793
    9. 's' → logprob: -7.400721549987793
    10. '_set' → logprob: -7.525721549987793

Token 1725: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09341095387935638
    2. '=' → logprob: -2.4684109687805176
    3. '_to' → logprob: -6.218410968780518
    4. '_positions' → logprob: -7.343410968780518
    5. '_list' → logprob: -7.843410968780518
    6. '_set' → logprob: -7.968410968780518
    7. ':' → logprob: -8.59341049194336
    8. ',' → logprob: -8.71841049194336
    9. 'positions' → logprob: -8.96841049194336
    10. '=[' → logprob: -9.46841049194336

Token 1726: ' check' (ID: 2371)
  Prédit: 'consider'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'consider' → logprob: -0.019811945036053658
    2. 'check' → logprob: -4.394812107086182
    3. 'expl' → logprob: -5.144812107086182
    4. 'visit' → logprob: -7.019812107086182
    5. 'try' → logprob: -8.519811630249023
    6. '_cons' → logprob: -9.269811630249023
    7. 'include' → logprob: -10.019811630249023
    8. ' consider' → logprob: -10.144811630249023
    9. 'cover' → logprob: -10.269811630249023
    10. 'reach' → logprob: -10.394811630249023

Token 1727: ' b' (ID: 287)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25139927864074707
    2. 'positions' → logprob: -2.751399278640747
    3. ' positions' → logprob: -3.501399278640747
    4. ':' → logprob: -3.876399278640747
    5. '       ' → logprob: -3.876399278640747
    6. 'self' → logprob: -4.001399040222168
    7. '
' → logprob: -4.376399040222168
    8. ',' → logprob: -4.626399040222168
    9. ' self' → logprob: -4.626399040222168
    10. ' [' → logprob: -4.876399040222168

Token 1728: 'ounces' (ID: 52219)
  Prédit: 'reak'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reak' → logprob: -0.09645327180624008
    2. 'r' → logprob: -2.9714531898498535
    3. 'etween' → logprob: -4.4714531898498535
    4. 'ounds' → logprob: -4.8464531898498535
    5. 'elow' → logprob: -5.0964531898498535
    6. 'ound' → logprob: -5.5964531898498535
    7. 'efore' → logprob: -5.7214531898498535
    8. 'e' → logprob: -6.0964531898498535
    9. 'ecause' → logprob: -7.0964531898498535
    10. 'uild' → logprob: -7.2214531898498535

Token 1729: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2865109145641327
    2. '=' → logprob: -1.411510944366455
    3. '_positions' → logprob: -6.161510944366455
    4. ':' → logprob: -6.911510944366455
    5. '=set' → logprob: -7.786510944366455
    6. 'positions' → logprob: -7.911510944366455
    7. '_to' → logprob: -7.911510944366455
    8. '_set' → logprob: -7.911510944366455
    9. 'are' → logprob: -8.661510467529297
    10. 'set' → logprob: -9.661510467529297

Token 1730: ' obstacle' (ID: 57212)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6139253377914429
    2. ' positions' → logprob: -0.8639253377914429
    3. 'points' → logprob: -4.988925457000732
    4. 'import' → logprob: -5.488925457000732
    5. 'pos' → logprob: -5.488925457000732
    6. ' points' → logprob: -5.613925457000732
    7. 'possible' → logprob: -5.738925457000732
    8. ' important' → logprob: -6.113925457000732
    9. '       ' → logprob: -6.363925457000732
    10. '[' → logprob: -6.738925457000732

Token 1731: ' positions' (ID: 15897)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02984953112900257
    2. '_positions' → logprob: -3.6548495292663574
    3. 'positions' → logprob: -6.529849529266357
    4. '_s' → logprob: -6.904849529266357
    5. '_' → logprob: -7.404849529266357
    6. ',' → logprob: -9.154850006103516
    7. ' s' → logprob: -9.404850006103516
    8. '_pos' → logprob: -10.404850006103516
    9. '_list' → logprob: -10.404850006103516
    10. ' positions' → logprob: -10.779850006103516

Token 1732: ' and' (ID: 326)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4771462082862854
    2. '+' → logprob: -1.6021461486816406
    3. '       ' → logprob: -1.9771461486816406
    4. ',' → logprob: -4.227146148681641
    5. '+[' → logprob: -5.727146148681641
    6. 'positions' → logprob: -5.852146148681641
    7. '
' → logprob: -5.977146148681641
    8. ' |' → logprob: -5.977146148681641
    9. '[' → logprob: -6.352146148681641
    10. '|' → logprob: -6.477146148681641

Token 1733: ' target' (ID: 3783)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2102171629667282
    2. '0' → logprob: -2.085217237472534
    3. 'self' → logprob: -3.460217237472534
    4. '[self' → logprob: -3.460217237472534
    5. ' [' → logprob: -6.335216999053955
    6. 'positions' → logprob: -8.585217475891113
    7. '[target' → logprob: -8.710217475891113
    8. 'the' → logprob: -9.585217475891113
    9. 'target' → logprob: -10.210217475891113
    10. '`' → logprob: -10.210217475891113

Token 1734: ' position' (ID: 4010)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8091103434562683
    2. ' +' → logprob: -1.684110403060913
    3. ',
' → logprob: -2.059110403060913
    4. '       ' → logprob: -2.934110403060913
    5. '+' → logprob: -3.434110403060913
    6. ':
' → logprob: -3.559110403060913
    7. '[' → logprob: -3.559110403060913
    8. '
' → logprob: -3.559110403060913
    9. ':' → logprob: -4.184110164642334
    10. '+
' → logprob: -4.809110164642334

Token 1735: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2776130735874176
    2. 'positions' → logprob: -2.7776131629943848
    3. ',' → logprob: -3.0276131629943848
    4. 'class' → logprob: -3.9026131629943848
    5. ',
' → logprob: -4.152613162994385
    6. ' positions' → logprob: -4.402613162994385
    7. ':
' → logprob: -4.527613162994385
    8. '```' → logprob: -4.777613162994385
    9. ':' → logprob: -5.027613162994385
    10. '
' → logprob: -5.027613162994385

Token 1736: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04587610810995102
    2. '
' → logprob: -4.0458760261535645
    3. 'positions' → logprob: -4.6708760261535645
    4. '        
' → logprob: -5.0458760261535645
    5. ' positions' → logprob: -5.0458760261535645
    6. ',' → logprob: -6.0458760261535645
    7. '```' → logprob: -6.1708760261535645
    8. 'from' → logprob: -8.795876502990723
    9. 'import' → logprob: -9.045876502990723
    10. 'states' → logprob: -10.170876502990723

Token 1737: ' #' (ID: 1069)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.598356306552887
    2. '       ' → logprob: -1.4733562469482422
    3. ' positions' → logprob: -1.7233562469482422
    4. '
' → logprob: -3.973356246948242
    5. '```' → logprob: -4.723356246948242
    6. '        
' → logprob: -5.723356246948242
    7. ',' → logprob: -5.973356246948242
    8. 'points' → logprob: -6.098356246948242
    9. 'import' → logprob: -6.473356246948242
    10. 'possible' → logprob: -7.098356246948242

Token 1738: ' To' (ID: 2514)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.10990677773952484
    2. '       ' → logprob: -2.7349066734313965
    3. 'important' → logprob: -4.3599066734313965
    4. 'points' → logprob: -4.3599066734313965
    5. 'possible' → logprob: -5.6099066734313965
    6. 'import' → logprob: -6.1099066734313965
    7. ' positions' → logprob: -6.4849066734313965
    8. 'all' → logprob: -6.6099066734313965
    9. 'key' → logprob: -6.6099066734313965
    10. 'pos' → logprob: -7.2349066734313965

Token 1739: ' allow' (ID: 3763)
  Prédit: 'expl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expl' → logprob: -1.3303552865982056
    2. 'avoid' → logprob: -1.5803552865982056
    3. 'positions' → logprob: -1.7053552865982056
    4. 'find' → logprob: -2.955355167388916
    5. 'handle' → logprob: -3.705355167388916
    6. 'solve' → logprob: -3.830355167388916
    7. 'check' → logprob: -3.830355167388916
    8. 'consider' → logprob: -4.205355167388916
    9. 'continue' → logprob: -4.330355167388916
    10. 'do' → logprob: -4.330355167388916

Token 1740: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8552983999252319
    2. 'bounce' → logprob: -1.605298399925232
    3. ' b' → logprob: -2.7302985191345215
    4. 'possible' → logprob: -2.8552985191345215
    5. ' possible' → logprob: -2.9802985191345215
    6. ' bounce' → logprob: -3.1052985191345215
    7. 'pos' → logprob: -3.7302985191345215
    8. ' positions' → logprob: -4.2302985191345215
    9. 'all' → logprob: -4.3552985191345215
    10. 'positions' → logprob: -4.3552985191345215

Token 1741: 'ounces' (ID: 52219)
  Prédit: 'reak'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reak' → logprob: -0.8791747093200684
    2. 'ounce' → logprob: -1.2541747093200684
    3. 'r' → logprob: -1.7541747093200684
    4. 'ounces' → logprob: -3.3791747093200684
    5. 'ounds' → logprob: -4.254174709320068
    6. 'est' → logprob: -4.504174709320068
    7. 'u' → logprob: -4.629174709320068
    8. 'search' → logprob: -4.879174709320068
    9. 'ack' → logprob: -5.129174709320068
    10. 'ound' → logprob: -5.254174709320068

Token 1742: ' only' (ID: 1606)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16319288313388824
    2. ':' → logprob: -2.5381929874420166
    3. ',
' → logprob: -4.5381927490234375
    4. ' at' → logprob: -4.5381927490234375
    5. 'positions' → logprob: -4.6631927490234375
    6. '=' → logprob: -5.0381927490234375
    7. ' ,' → logprob: -5.2881927490234375
    8. ' =' → logprob: -5.2881927490234375
    9. 'at' → logprob: -5.4131927490234375
    10. '_positions' → logprob: -5.5381927490234375

Token 1743: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.40882039070129395
    2. ' at' → logprob: -1.158820390701294
    3. 'in' → logprob: -5.283820152282715
    4. 'on' → logprob: -5.658820152282715
    5. '=' → logprob: -5.908820152282715
    6. ',' → logprob: -5.908820152282715
    7. ' in' → logprob: -6.408820152282715
    8. 'between' → logprob: -6.658820152282715
    9. 'positions' → logprob: -6.783820152282715
    10. 'from' → logprob: -7.658820152282715

Token 1744: ' integer' (ID: 16336)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6386156678199768
    2. 'ob' → logprob: -1.513615608215332
    3. 'target' → logprob: -1.888615608215332
    4. 'positions' → logprob: -2.888615608215332
    5. '[' → logprob: -3.888615608215332
    6. 'self' → logprob: -4.388615608215332
    7. 'the' → logprob: -5.013615608215332
    8. 'position' → logprob: -5.763615608215332
    9. 'distance' → logprob: -7.638615608215332
    10. '[target' → logprob: -7.638615608215332

Token 1745: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.05098993703722954
    2. ' positions' → logprob: -3.175989866256714
    3. 'points' → logprob: -5.050990104675293
    4. 's' → logprob: -7.925990104675293
    5. ' points' → logprob: -7.925990104675293
    6. 'values' → logprob: -8.050990104675293
    7. 'coordinates' → logprob: -9.175990104675293
    8. '```' → logprob: -9.175990104675293
    9. 'x' → logprob: -9.925990104675293
    10. 'locations' → logprob: -10.425990104675293

Token 1746: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2728383541107178
    2. ',' → logprob: -2.0228383541107178
    3. '
' → logprob: -3.3978383541107178
    4. ':
' → logprob: -4.147838592529297
    5. ',
' → logprob: -4.397838592529297
    6. ' and' → logprob: -4.522838592529297
    7. ':' → logprob: -4.772838592529297
    8. ' positions' → logprob: -5.397838592529297
    9. 'positions' → logprob: -5.647838592529297
    10. '        
' → logprob: -5.772838592529297

Token 1747: ' we' (ID: 581)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6249828934669495
    2. ' positions' → logprob: -0.9999828934669495
    3. '       ' → logprob: -3.4999828338623047
    4. 'points' → logprob: -4.124982833862305
    5. 'possible' → logprob: -4.374982833862305
    6. ' important' → logprob: -4.749982833862305
    7. ' points' → logprob: -5.249982833862305
    8. 'important' → logprob: -5.374982833862305
    9. 'import' → logprob: -5.624982833862305
    10. '#' → logprob: -5.999982833862305

Token 1748: ' choose' (ID: 5655)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -1.3371857404708862
    2. 'positions' → logprob: -1.4621857404708862
    3. 'consider' → logprob: -2.337185859680176
    4. 'continue' → logprob: -2.462185859680176
    5. 'add' → logprob: -2.837185859680176
    6. ' positions' → logprob: -2.962185859680176
    7. ' continue' → logprob: -3.212185859680176
    8. 'import' → logprob: -3.712185859680176
    9. ' consider' → logprob: -4.212185859680176
    10. 'include' → logprob: -4.212185859680176

Token 1749: ' b' (ID: 287)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.05202527344226837
    2. 'points' → logprob: -3.802025318145752
    3. 'key' → logprob: -5.177025318145752
    4. 'sorted' → logprob: -5.302025318145752
    5. 'possible' → logprob: -5.427025318145752
    6. 'important' → logprob: -5.677025318145752
    7. '[' → logprob: -5.927025318145752
    8. 'critical' → logprob: -6.552025318145752
    9. 'import' → logprob: -7.052025318145752
    10. 'bounce' → logprob: -7.052025318145752

Token 1750: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -0.7289726138114929
    2. 'positions' → logprob: -1.4789726734161377
    3. 'ounce' → logprob: -2.2289726734161377
    4. '[' → logprob: -3.2289726734161377
    5. '[]' → logprob: -3.3539726734161377
    6. 'ounds' → logprob: -3.6039726734161377
    7. 'points' → logprob: -4.103972434997559
    8. 'reak' → logprob: -4.228972434997559
    9. 'r' → logprob: -4.728972434997559
    10. '_positions' → logprob: -5.103972434997559

Token 1751: ' at' (ID: 540)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.540352463722229
    2. '=' → logprob: -1.665352463722229
    3. ' at' → logprob: -2.1653523445129395
    4. '_positions' → logprob: -2.4153523445129395
    5. '_allowed' → logprob: -2.6653523445129395
    6. 'allowed' → logprob: -3.0403523445129395
    7. ' as' → logprob: -3.2903523445129395
    8. '_' → logprob: -4.0403523445129395
    9. ' in' → logprob: -4.0403523445129395
    10. ',' → logprob: -4.0403523445129395

Token 1752: ' positions' (ID: 15897)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.6551948189735413
    2. 'positions' → logprob: -1.4051947593688965
    3. '0' → logprob: -2.4051947593688965
    4. 'self' → logprob: -3.0301947593688965
    5. '[' → logprob: -3.4051947593688965
    6. 'o' → logprob: -3.9051947593688965
    7. 'target' → logprob: -4.0301947593688965
    8. '[o' → logprob: -4.9051947593688965
    9. 'sorted' → logprob: -5.2801947593688965
    10. 'the' → logprob: -5.6551947593688965

Token 1753: ' between' (ID: 2870)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8278913497924805
    2. 'sorted' → logprob: -1.4528913497924805
    3. '=[' → logprob: -1.9528913497924805
    4. ' =' → logprob: -2.8278913497924805
    5. 'self' → logprob: -2.9528913497924805
    6. '[' → logprob: -3.8278913497924805
    7. '[self' → logprob: -4.4528913497924805
    8. '=self' → logprob: -4.8278913497924805
    9. 'from' → logprob: -5.2028913497924805
    10. 'in' → logprob: -5.7028913497924805

Token 1754: ' launcher' (ID: 109963)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.6041524410247803
    2. '0' → logprob: -1.2291524410247803
    3. 'from' → logprob: -2.6041524410247803
    4. 'self' → logprob: -3.3541524410247803
    5. 'the' → logprob: -3.8541524410247803
    6. 'last' → logprob: -4.479152679443359
    7. 'positions' → logprob: -4.979152679443359
    8. 'max' → logprob: -5.354152679443359
    9. ' obstacles' → logprob: -6.354152679443359
    10. '
' → logprob: -7.479152679443359

Token 1755: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6505244374275208
    2. 'and' → logprob: -0.7755244374275208
    3. '+' → logprob: -4.275524616241455
    4. ',' → logprob: -6.400524616241455
    5. ' +' → logprob: -7.150524616241455
    6. '0' → logprob: -7.400524616241455
    7. '```' → logprob: -8.900524139404297
    8. ',
' → logprob: -9.150524139404297
    9. ' ' → logprob: -9.150524139404297
    10. 'position' → logprob: -9.275524139404297

Token 1756: ' target' (ID: 3783)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0101877236738801
    2. 'target' → logprob: -4.63518762588501
    3. ' self' → logprob: -7.88518762588501
    4. ' target' → logprob: -10.885188102722168
    5. 'the' → logprob: -11.260188102722168
    6. '```' → logprob: -12.135188102722168
    7. '       ' → logprob: -12.385188102722168
    8. '
' → logprob: -13.260188102722168
    9. '0' → logprob: -13.635188102722168
    10. '`' → logprob: -13.885188102722168

Token 1757: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.400156021118164
    2. '       ' → logprob: -1.400156021118164
    3. ':' → logprob: -1.525156021118164
    4. ':
' → logprob: -2.525156021118164
    5. '
' → logprob: -2.900156021118164
    6. '[' → logprob: -3.150156021118164
    7. '.' → logprob: -3.900156021118164
    8. ',
' → logprob: -4.025156021118164
    9. ')' → logprob: -4.775156021118164
    10. '[
' → logprob: -4.775156021118164

Token 1758: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7056413292884827
    2. 'positions' → logprob: -1.830641269683838
    3. ' positions' → logprob: -2.205641269683838
    4. '
' → logprob: -2.580641269683838
    5. ',' → logprob: -3.080641269683838
    6. '```' → logprob: -3.205641269683838
    7. '        
' → logprob: -3.705641269683838
    8. '`' → logprob: -4.330641269683838
    9. '#' → logprob: -4.830641269683838
    10. ' 
' → logprob: -5.330641269683838

Token 1759: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8990520238876343
    2. ' positions' → logprob: -1.3990520238876343
    3. '       ' → logprob: -1.5240520238876343
    4. 'positions' → logprob: -2.399052143096924
    5. '```' → logprob: -4.399052143096924
    6. ' 
' → logprob: -4.774052143096924
    7. '        
' → logprob: -5.024052143096924
    8. '#' (adapté à ' #') → logprob: -6.649052143096924
    9. ',' → logprob: -6.649052143096924
    10. '  
' → logprob: -6.899052143096924

Token 1760: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15031935274600983
    2. 'positions' → logprob: -2.5253193378448486
    3. '
' → logprob: -3.4003193378448486
    4. ' positions' → logprob: -5.025319576263428
    5. '#' → logprob: -5.150319576263428
    6. '```' → logprob: -5.275319576263428
    7. '        
' → logprob: -5.775319576263428
    8. 'from' → logprob: -7.025319576263428
    9. 'possible' → logprob: -7.025319576263428
    10. 'points' → logprob: -7.525319576263428

Token 1761: ' search' (ID: 3684)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.0661693811416626
    2. '       ' → logprob: -2.191169261932373
    3. 'continue' → logprob: -2.316169261932373
    4. ' need' → logprob: -2.691169261932373
    5. '
' → logprob: -2.816169261932373
    6. ' will' → logprob: -3.066169261932373
    7. ' can' → logprob: -3.316169261932373
    8. 'def' → logprob: -3.566169261932373
    9. ' use' → logprob: -3.691169261932373
    10. ' def' → logprob: -3.691169261932373

Token 1762: ' bounce' (ID: 57156)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6775695085525513
    2. 'for' → logprob: -1.1775695085525513
    3. 'positions' → logprob: -2.9275693893432617
    4. ' positions' → logprob: -3.5525693893432617
    5. 'from' → logprob: -3.9275693893432617
    6. 'b' → logprob: -4.052569389343262
    7. '
' → logprob: -4.177569389343262
    8. 'possible' → logprob: -5.052569389343262
    9. '0' → logprob: -5.302569389343262
    10. '       ' → logprob: -5.427569389343262

Token 1763: ' placements' (ID: 122051)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.30620771646499634
    2. 's' → logprob: -2.0562076568603516
    3. ' positions' → logprob: -2.5562076568603516
    4. '_' → logprob: -3.5562076568603516
    5. 'positions' → logprob: -4.306207656860352
    6. '_points' → logprob: -5.056207656860352
    7. '_pos' → logprob: -6.306207656860352
    8. '_count' → logprob: -6.431207656860352
    9. 'points' → logprob: -6.556207656860352
    10. '_position' → logprob: -7.181207656860352

Token 1764: ' only' (ID: 1606)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.512464702129364
    2. ' at' → logprob: -2.512464761734009
    3. ' that' → logprob: -3.262464761734009
    4. 'in' → logprob: -3.262464761734009
    5. ',' → logprob: -3.387464761734009
    6. ' between' → logprob: -3.762464761734009
    7. '.' → logprob: -3.887464761734009
    8. 'from' → logprob: -4.01246452331543
    9. '<|end|>' → logprob: -4.63746452331543
    10. ' up' → logprob: -4.76246452331543

Token 1765: ' at' (ID: 540)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.0440447330474854
    2. ' in' → logprob: -1.2940447330474854
    3. ' at' → logprob: -1.9190447330474854
    4. 'at' → logprob: -2.1690447330474854
    5. 'from' → logprob: -2.7940447330474854
    6. 'between' → logprob: -4.294044494628906
    7. ' between' → logprob: -4.544044494628906
    8. ')' → logprob: -5.419044494628906
    9. ',' → logprob: -5.544044494628906
    10. ' from' → logprob: -5.669044494628906

Token 1766: ' obstacle' (ID: 57212)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.9949728846549988
    2. 'ob' → logprob: -1.1199729442596436
    3. '0' → logprob: -1.6199729442596436
    4. 'sorted' → logprob: -3.1199729442596436
    5. '[' → logprob: -3.6199729442596436
    6. 'set' → logprob: -4.3699727058410645
    7. 'target' → logprob: -4.7449727058410645
    8. 'self' → logprob: -4.8699727058410645
    9. 'the' → logprob: -6.9949727058410645
    10. 'possible' → logprob: -7.2449727058410645

Token 1767: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.4965926706790924
    2. '_positions' → logprob: -1.37159264087677
    3. 's' → logprob: -2.4965927600860596
    4. ' positions' → logprob: -3.1215927600860596
    5. '.positions' → logprob: -4.6215925216674805
    6. '.position' → logprob: -7.4965925216674805
    7. 'position' → logprob: -8.24659252166748
    8. 'Positions' → logprob: -8.74659252166748
    9. '```' → logprob: -9.12159252166748
    10. ' ' → logprob: -9.87159252166748

Token 1768: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04792330041527748
    2. ',' → logprob: -3.6729233264923096
    3. '
' → logprob: -5.1729230880737305
    4. '        
' → logprob: -5.4229230880737305
    5. ' and' → logprob: -6.4229230880737305
    6. ':
' → logprob: -6.7979230880737305
    7. ')' → logprob: -6.9229230880737305
    8. ',
' → logprob: -6.9229230880737305
    9. ' (' → logprob: -7.0479230880737305
    10. ' +' → logprob: -7.2979230880737305

Token 1769: 'since' (ID: 21910)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4477474689483643
    2. ')' → logprob: -1.6977474689483643
    3. ' [' → logprob: -1.6977474689483643
    4. ' +' → logprob: -2.3227474689483643
    5. ' )' → logprob: -2.4477474689483643
    6. '0' → logprob: -2.8227474689483643
    7. '+' → logprob: -3.3227474689483643
    8. ',' → logprob: -3.6977474689483643
    9. ' and' → logprob: -3.8227474689483643
    10. 'self' → logprob: -4.197747230529785

Token 1770: ' between' (ID: 2870)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -1.0118846893310547
    2. 'the' → logprob: -1.7618846893310547
    3. ' target' → logprob: -2.3868846893310547
    4. ' the' → logprob: -2.5118846893310547
    5. 'they' → logprob: -2.6368846893310547
    6. 'range' → logprob: -3.6368846893310547
    7. ' they' → logprob: -4.011884689331055
    8. 'we' → logprob: -4.136884689331055
    9. 'that' → logprob: -4.261884689331055
    10. 'ob' → logprob: -4.386884689331055

Token 1771: ' obstacles' (ID: 46430)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0875879526138306
    2. 'the' → logprob: -1.9625879526138306
    3. ' obstacles' → logprob: -2.212587833404541
    4. '0' → logprob: -2.587587833404541
    5. ' positions' → logprob: -2.962587833404541
    6. 'positions' → logprob: -3.212587833404541
    7. ')' → logprob: -3.212587833404541
    8. 'target' → logprob: -3.337587833404541
    9. ' )' → logprob: -3.462587833404541
    10. ' ' → logprob: -3.712587833404541

Token 1772: ' no' (ID: 860)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5851354598999023
    2. ' or' → logprob: -1.2101354598999023
    3. 'and' → logprob: -3.0851354598999023
    4. ')' → logprob: -3.2101354598999023
    5. '+' → logprob: -3.7101354598999023
    6. ' +' → logprob: -4.460135459899902
    7. ',' → logprob: -4.460135459899902
    8. 'or' → logprob: -4.710135459899902
    9. '),' → logprob: -7.460135459899902
    10. ' plus' → logprob: -8.335135459899902

Token 1773: ' need' (ID: 1309)
  Prédit: ' need'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -1.5685240030288696
    2. 'possible' → logprob: -2.31852388381958
    3. 'space' → logprob: -2.44352388381958
    4. 'positions' → logprob: -2.56852388381958
    5. ' positions' → logprob: -2.56852388381958
    6. ' possible' → logprob: -2.69352388381958
    7. 'b' → logprob: -3.19352388381958
    8. ' spaces' → logprob: -3.19352388381958
    9. ' space' → logprob: -3.19352388381958
    10. 'need' → logprob: -3.31852388381958

Token 1774: ' for' (ID: 395)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.36087796092033386
    2. 'to' → logprob: -1.4858779907226562
    3. 'for' → logprob: -3.3608779907226562
    4. ' for' → logprob: -3.7358779907226562
    5. ')' → logprob: -4.110877990722656
    6. '```' → logprob: -7.610877990722656
    7. '),' → logprob: -7.860877990722656
    8. '       ' → logprob: -8.860877990722656
    9. ')
' → logprob: -9.360877990722656
    10. '=' → logprob: -9.735877990722656

Token 1775: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.49595993757247925
    2. 'bounce' → logprob: -1.620959997177124
    3. ' b' → logprob: -2.995959997177124
    4. ' bounce' → logprob: -3.370959997177124
    5. 'spl' → logprob: -3.495959997177124
    6. 'extra' → logprob: -3.620959997177124
    7. 'additional' → logprob: -4.120959758758545
    8. 'split' → logprob: -4.870959758758545
    9. 'inter' → logprob: -5.120959758758545
    10. ' extra' → logprob: -5.370959758758545

Token 1776: 'ounces' (ID: 52219)
  Prédit: 'ounce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounce' → logprob: -0.4582614004611969
    2. 'ounces' → logprob: -1.0832613706588745
    3. 'reak' → logprob: -4.583261489868164
    4. 'r' → logprob: -5.083261489868164
    5. 'ounds' → logprob: -5.333261489868164
    6. ')' → logprob: -6.458261489868164
    7. 'ouncing' → logprob: -7.083261489868164
    8. 'ound' → logprob: -7.208261489868164
    9. '```' → logprob: -7.458261489868164
    10. 'roadcast' → logprob: -7.583261489868164

Token 1777: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12078656256198883
    2. ',' → logprob: -3.120786666870117
    3. ' or' → logprob: -3.370786666870117
    4. '),' → logprob: -3.870786666870117
    5. ' and' → logprob: -5.120786666870117
    6. ' )' → logprob: -5.995786666870117
    7. ' positions' → logprob: -6.995786666870117
    8. ').' → logprob: -7.495786666870117
    9. '+' → logprob: -7.495786666870117
    10. 'and' → logprob: -7.745786666870117

Token 1778: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13340657949447632
    2. '
' → logprob: -2.508406639099121
    3. '        
' → logprob: -3.758406639099121
    4. ',' → logprob: -4.133406639099121
    5. ',
' → logprob: -6.758406639099121
    6. '```' → logprob: -6.883406639099121
    7. ' positions' → logprob: -8.508406639099121
    8. ' and' → logprob: -8.508406639099121
    9. ')' → logprob: -8.508406639099121
    10. '

' → logprob: -8.758406639099121

Token 1779: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6863718032836914
    2. '
' → logprob: -1.0613718032836914
    3. '        
' → logprob: -2.5613718032836914
    4. ' positions' → logprob: -3.9363718032836914
    5. ',' → logprob: -4.186371803283691
    6. '\n' → logprob: -4.561371803283691
    7. ' 
' → logprob: -4.686371803283691
    8. '```' → logprob: -5.061371803283691
    9. 'positions' → logprob: -6.311371803283691
    10. ',
' → logprob: -6.436371803283691

Token 1780: ' Actually' (ID: 50557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.115269236266613
    2. '
' → logprob: -2.990269184112549
    3. 'positions' → logprob: -3.365269184112549
    4. '        
' → logprob: -4.365269184112549
    5. '#' → logprob: -5.490269184112549
    6. ' positions' → logprob: -6.365269184112549
    7. 'import' → logprob: -6.990269184112549
    8. ',' → logprob: -6.990269184112549
    9. 'from' → logprob: -7.740269184112549
    10. '```' → logprob: -7.740269184112549

Token 1781: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9020238518714905
    2. ' we' → logprob: -1.6520237922668457
    3. ' positions' → logprob: -2.4020237922668457
    4. ' ' → logprob: -2.5270237922668457
    5. '#' → logprob: -2.9020237922668457
    6. ',' → logprob: -3.4020237922668457
    7. '
' → logprob: -3.7770237922668457
    8. 'positions' → logprob: -3.7770237922668457
    9. ' the' → logprob: -4.027023792266846
    10. ' self' → logprob: -4.277023792266846

Token 1782: ' the' (ID: 290)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08586671948432922
    2. '       ' → logprob: -3.085866689682007
    3. 'positions' → logprob: -3.710866689682007
    4. 'bounce' → logprob: -5.710866928100586
    5. 'import' → logprob: -5.835866928100586
    6. 'from' → logprob: -6.460866928100586
    7. ' #' → logprob: -6.960866928100586
    8. 'we' → logprob: -7.085866928100586
    9. 'possible' → logprob: -8.085866928100586
    10. ' positions' → logprob: -8.085866928100586

Token 1783: ' problem' (ID: 4792)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.295980304479599
    2. 'positions' → logprob: -2.170980215072632
    3. 'def' → logprob: -2.670980215072632
    4. ' positions' → logprob: -4.295980453491211
    5. 'bounce' → logprob: -4.670980453491211
    6. ' #' → logprob: -4.795980453491211
    7. 'possible' → logprob: -4.795980453491211
    8. ' def' → logprob: -5.670980453491211
    9. 'class' → logprob: -5.670980453491211
    10. 'best' → logprob: -5.920980453491211

Token 1784: ' states' (ID: 9407)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.70995032787323
    2. ':' → logprob: -1.45995032787323
    3. '
' → logprob: -2.4599504470825195
    4. ' continues' → logprob: -2.7099504470825195
    5. ':
' → logprob: -3.0849504470825195
    6. ' must' → logprob: -4.5849504470825195
    7. ' can' → logprob: -4.7099504470825195
    8. ' will' → logprob: -4.7099504470825195
    9. ',' → logprob: -5.2099504470825195
    10. ' has' → logprob: -5.4599504470825195

Token 1785: ' b' (ID: 287)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4656695127487183
    2. 'we' → logprob: -1.7156695127487183
    3. 'positions' → logprob: -2.090669631958008
    4. 'that' → logprob: -2.340669631958008
    5. 'the' → logprob: -2.465669631958008
    6. 'b' → logprob: -2.590669631958008
    7. 'bounce' → logprob: -2.965669631958008
    8. '
' → logprob: -3.340669631958008
    9. ' that' → logprob: -3.465669631958008
    10. ' we' → logprob: -4.090669631958008

Token 1786: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -0.010333324782550335
    2. 'ounds' → logprob: -5.51033353805542
    3. 'ounce' → logprob: -5.88533353805542
    4. 'r' → logprob: -7.01033353805542
    5. '```' → logprob: -8.010333061218262
    6. ')' → logprob: -8.260333061218262
    7. 'o' → logprob: -8.260333061218262
    8. 'oun' → logprob: -8.385333061218262
    9. ''' → logprob: -8.635333061218262
    10. '
' → logprob: -8.760333061218262

Token 1787: ' anywhere' (ID: 15907)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.705423355102539
    2. ' at' → logprob: -1.955423355102539
    3. ' can' → logprob: -1.955423355102539
    4. ' =' → logprob: -2.580423355102539
    5. ':' → logprob: -2.830423355102539
    6. 'can' → logprob: -3.080423355102539
    7. 'allowed' → logprob: -3.205423355102539
    8. ' are' → logprob: -3.330423355102539
    9. '_allowed' → logprob: -3.455423355102539
    10. 'at' → logprob: -3.580423355102539

Token 1788: ' on' (ID: 402)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9437347054481506
    2. '       ' → logprob: -0.9437347054481506
    3. ',' → logprob: -2.693734645843506
    4. ':
' → logprob: -3.193734645843506
    5. '        
' → logprob: -3.443734645843506
    6. ' and' → logprob: -3.818734645843506
    7. '.
' → logprob: -4.193734645843506
    8. ',
' → logprob: -4.443734645843506
    9. ':' → logprob: -5.068734645843506
    10. '.' → logprob: -5.818734645843506

Token 1789: ' surface' (ID: 9753)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.33608925342559814
    2. ' the' → logprob: -1.3360892534255981
    3. '[' → logprob: -4.461089134216309
    4. 'line' → logprob: -5.711089134216309
    5. ' line' → logprob: -5.836089134216309
    6. ' [' → logprob: -6.211089134216309
    7. '`' → logprob: -7.336089134216309
    8. 'target' → logprob: -7.461089134216309
    9. 'distance' → logprob: -7.711089134216309
    10. '```' → logprob: -8.086089134216309

Token 1790: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7046579122543335
    2. '
' → logprob: -0.9546579122543335
    3. ',' → logprob: -3.704658031463623
    4. ':
' → logprob: -3.704658031463623
    5. '        
' → logprob: -3.829658031463623
    6. ',
' → logprob: -4.079658031463623
    7. ':' → logprob: -5.079658031463623
    8. '.
' → logprob: -5.204658031463623
    9. ')
' → logprob: -6.079658031463623
    10. ' and' → logprob: -6.079658031463623

Token 1791: ' but' (ID: 889)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.4914393723011017
    2. '       ' → logprob: -1.7414393424987793
    3. ' but' → logprob: -2.1164393424987793
    4. ' not' → logprob: -3.9914393424987793
    5. 'so' → logprob: -4.241439342498779
    6. '#' → logprob: -4.366439342498779
    7. 'but' → logprob: -4.366439342498779
    8. ' including' → logprob: -4.491439342498779
    9. 'not' → logprob: -4.741439342498779
    10. 'including' → logprob: -5.616439342498779

Token 1792: ' for' (ID: 395)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -1.1471346616744995
    2. ' the' → logprob: -1.6471346616744995
    3. ' here' → logprob: -2.397134780883789
    4. 'we' → logprob: -2.772134780883789
    5. ' in' → logprob: -2.897134780883789
    6. '#' → logprob: -3.272134780883789
    7. '       ' → logprob: -3.522134780883789
    8. ' not' → logprob: -3.647134780883789
    9. ' ' → logprob: -3.772134780883789
    10. ' self' → logprob: -3.897134780883789

Token 1793: ' minimal' (ID: 19957)
  Prédit: ' efficiency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' efficiency' → logprob: -1.9471973180770874
    2. ' performance' → logprob: -2.072197437286377
    3. ' now' → logprob: -2.197197437286377
    4. 'eff' → logprob: -2.447197437286377
    5. 'performance' → logprob: -2.697197437286377
    6. 'now' → logprob: -2.822197437286377
    7. 'i' → logprob: -2.822197437286377
    8. 'the' → logprob: -2.947197437286377
    9. 'pos' → logprob: -3.197197437286377
    10. ' feasibility' → logprob: -3.572197437286377

Token 1794: ' initial' (ID: 4871)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.363067626953125
    2. ' distance' → logprob: -1.738067626953125
    3. ' code' → logprob: -1.863067626953125
    4. 'positions' → logprob: -2.238067626953125
    5. ' positions' → logprob: -2.613067626953125
    6. '```' → logprob: -3.238067626953125
    7. ' speed' → logprob: -3.613067626953125
    8. ' initial' → logprob: -4.113067626953125
    9. 'b' → logprob: -4.113067626953125
    10. 'speed' → logprob: -4.238067626953125

Token 1795: ' speed' (ID: 7733)
  Prédit: '_speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -0.026817461475729942
    2. '_velocity' → logprob: -4.276817321777344
    3. '_' → logprob: -4.526817321777344
    4. 'speed' → logprob: -7.026817321777344
    5. ' speed' → logprob: -7.651817321777344
    6. ' _' → logprob: -8.401817321777344
    7. '_distance' → logprob: -9.901817321777344
    8. ' velocity' → logprob: -10.151817321777344
    9. '_
' → logprob: -10.401817321777344
    10. '_s' → logprob: -10.651817321777344

Token 1796: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47942209243774414
    2. ',' → logprob: -2.104422092437744
    3. '
' → logprob: -2.479422092437744
    4. ':' → logprob: -2.729422092437744
    5. ':
' → logprob: -3.354422092437744
    6. ')' → logprob: -4.229422092437744
    7. ',
' → logprob: -4.229422092437744
    8. '.' → logprob: -4.604422092437744
    9. ')
' → logprob: -5.104422092437744
    10. '):
' → logprob: -5.479422092437744

Token 1797: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21143168210983276
    2. '       ' → logprob: -1.7114317417144775
    3. ' #' → logprob: -6.336431503295898
    4. ' we' → logprob: -6.586431503295898
    5. 'we' → logprob: -6.836431503295898
    6. ' the' → logprob: -6.836431503295898
    7. '<|end|>' → logprob: -7.086431503295898
    8. ')' → logprob: -7.336431503295898
    9. 'the' → logprob: -7.586431503295898
    10. '        ' → logprob: -7.836431503295898

Token 1798: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.12140702456235886
    2. '       ' → logprob: -2.2464070320129395
    3. 'we' → logprob: -5.6214070320129395
    4. ' #' → logprob: -6.2464070320129395
    5. 'the' → logprob: -7.4964070320129395
    6. ' we' → logprob: -7.7464070320129395
    7. 'they' → logprob: -7.9964070320129395
    8. 'so' → logprob: -8.496406555175781
    9. '        ' → logprob: -8.871406555175781
    10. 'self' → logprob: -8.996406555175781

Token 1799: ' b' (ID: 287)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06291335076093674
    2. 'we' → logprob: -3.687913417816162
    3. '       ' → logprob: -4.437913417816162
    4. 'positions' → logprob: -4.937913417816162
    5. ' #' → logprob: -5.437913417816162
    6. ' we' → logprob: -5.937913417816162
    7. 'bounce' → logprob: -6.312913417816162
    8. 'ob' → logprob: -6.687913417816162
    9. 'b' → logprob: -6.812913417816162
    10. 'the' → logprob: -6.937913417816162

Token 1800: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -1.0459338426589966
    2. 'est' → logprob: -1.4209338426589966
    3. 'reak' → logprob: -1.9209338426589966
    4. 'ecause' → logprob: -2.420933723449707
    5. 'ounds' → logprob: -2.545933723449707
    6. 'ounce' → logprob: -3.170933723449707
    7. 'y' → logprob: -3.795933723449707
    8. 'r' → logprob: -4.920933723449707
    9. '       ' → logprob: -5.795933723449707
    10. ')' → logprob: -5.920933723449707

Token 1801: ' should' (ID: 1757)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.28753629326820374
    2. '_positions' → logprob: -2.787536382675171
    3. ' at' → logprob: -2.912536382675171
    4. ' are' → logprob: -3.037536382675171
    5. ' must' → logprob: -3.912536382675171
    6. ' positions' → logprob: -4.037536144256592
    7. ' may' → logprob: -4.162536144256592
    8. ' should' → logprob: -4.537536144256592
    9. '_' → logprob: -5.412536144256592
    10. 'can' → logprob: -5.912536144256592

Token 1802: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.8104456663131714
    2. ' be' → logprob: -1.3104456663131714
    3. 'not' → logprob: -1.8104456663131714
    4. ' not' → logprob: -3.560445785522461
    5. 'occur' → logprob: -3.685445785522461
    6. 'only' → logprob: -4.060445785522461
    7. ' only' → logprob: -4.185445785522461
    8. 'prefer' → logprob: -5.060445785522461
    9. 'allow' → logprob: -5.560445785522461
    10. ' lie' → logprob: -5.685445785522461

Token 1803: ' on' (ID: 402)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.5630431771278381
    2. 'placed' → logprob: -2.0630431175231934
    3. ' at' → logprob: -2.4380431175231934
    4. 'either' → logprob: -2.9380431175231934
    5. 'chosen' → logprob: -3.1880431175231934
    6. 'on' → logprob: -3.1880431175231934
    7. ' placed' → logprob: -3.8130431175231934
    8. ' either' → logprob: -4.938043117523193
    9. 'allowed' → logprob: -5.438043117523193
    10. 'positions' → logprob: -5.563043117523193

Token 1804: ' ground' (ID: 7740)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.8642076849937439
    2. 'the' → logprob: -0.8642076849937439
    3. 'positions' → logprob: -2.6142077445983887
    4. 'surface' → logprob: -3.2392077445983887
    5. 'target' → logprob: -3.8642077445983887
    6. ' the' → logprob: -4.989207744598389
    7. 'ground' → logprob: -5.239207744598389
    8. 'any' → logprob: -6.489207744598389
    9. ' positions' → logprob: -6.614207744598389
    10. 'integer' → logprob: -6.864207744598389

Token 1805: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5026429891586304
    2. '
' → logprob: -1.8776429891586304
    3. ',' → logprob: -2.50264310836792
    4. ':' → logprob: -3.50264310836792
    5. '        
' → logprob: -3.62764310836792
    6. ',
' → logprob: -4.00264310836792
    7. ':
' → logprob: -4.25264310836792
    8. ')
' → logprob: -4.50264310836792
    9. ')' → logprob: -4.62764310836792
    10. '.' → logprob: -4.75264310836792

Token 1806: ' so' (ID: 813)
  Prédit: ' so'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.24660195410251617
    2. '       ' → logprob: -2.4966020584106445
    3. ' not' → logprob: -3.4966020584106445
    4. ' and' → logprob: -3.4966020584106445
    5. ' which' → logprob: -3.8716020584106445
    6. '#' → logprob: -4.8716020584106445
    7. 'so' → logprob: -5.1216020584106445
    8. 'which' → logprob: -5.3716020584106445
    9. ' i' → logprob: -5.8716020584106445
    10. 'not' → logprob: -5.9966020584106445

Token 1807: ' can' (ID: 665)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'we' → logprob: -1.4212449789047241
    2. 'positions' → logprob: -1.5462449789047241
    3. 'ob' → logprob: -1.9212449789047241
    4. '#' → logprob: -1.9212449789047241
    5. '       ' → logprob: -2.9212450981140137
    6. 'they' → logprob: -3.0462450981140137
    7. 'the' → logprob: -3.5462450981140137
    8. 'possible' → logprob: -3.6712450981140137
    9. 'any' → logprob: -3.9212450981140137
    10. ' we' → logprob: -4.671245098114014

Token 1808: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.2159566879272461
    2. 'be' → logprob: -2.965956687927246
    3. ' only' → logprob: -3.340956687927246
    4. 'split' → logprob: -4.215956687927246
    5. '```' → logprob: -4.715956687927246
    6. ' bounce' → logprob: -4.840956687927246
    7. 'bounce' → logprob: -4.840956687927246
    8. ' split' → logprob: -4.965956687927246
    9. ' use' → logprob: -5.090956687927246
    10. 'choose' → logprob: -5.465956687927246

Token 1809: ' anywhere' (ID: 15907)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.22168339788913727
    2. 'at' → logprob: -2.0966835021972656
    3. 'placed' → logprob: -3.2216835021972656
    4. ' anywhere' → logprob: -4.846683502197266
    5. 'chosen' → logprob: -4.846683502197266
    6. 'consider' → logprob: -5.096683502197266
    7. ' at' → logprob: -5.846683502197266
    8. '0' → logprob: -6.096683502197266
    9. 'between' → logprob: -6.221683502197266
    10. 'either' → logprob: -6.346683502197266

Token 1810: ' between' (ID: 2870)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.706876814365387
    2. '
' → logprob: -1.8318767547607422
    3. ',' → logprob: -2.081876754760742
    4. ':' → logprob: -3.331876754760742
    5. ',
' → logprob: -3.331876754760742
    6. '.' → logprob: -3.456876754760742
    7. ':
' → logprob: -3.581876754760742
    8. '\n' → logprob: -3.581876754760742
    9. '        
' → logprob: -3.831876754760742
    10. '.
' → logprob: -4.331876754760742

Token 1811: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08244243264198303
    2. ' ' → logprob: -2.58244252204895
    3. 'self' → logprob: -6.332442283630371
    4. ' self' → logprob: -7.457442283630371
    5. ',' → logprob: -8.582442283630371
    6. '```' → logprob: -8.707442283630371
    7. ' and' → logprob: -8.957442283630371
    8. ' ,' → logprob: -9.082442283630371
    9. '`' → logprob: -9.332442283630371
    10. ' `' → logprob: -9.457442283630371

Token 1812: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007570966263301671
    2. 'launcher' → logprob: -7.500757217407227
    3. '```' → logprob: -10.000757217407227
    4. 'self' → logprob: -10.125757217407227
    5. 'from' → logprob: -10.375757217407227
    6. ' ' → logprob: -10.625757217407227
    7. 'launch' → logprob: -11.000757217407227
    8. 'the' → logprob: -11.250757217407227
    9. '
' → logprob: -11.625757217407227
    10. '`' → logprob: -12.250757217407227

Token 1813: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.007876326330006123
    2. 'and' → logprob: -4.882876396179199
    3. ',' → logprob: -8.6328763961792
    4. ')' → logprob: -10.7578763961792
    5. '+' → logprob: -10.8828763961792
    6. '<|end|>' → logprob: -11.1328763961792
    7. '...' → logprob: -11.2578763961792
    8. '```' → logprob: -12.0078763961792
    9. ' ,' → logprob: -12.6328763961792
    10. ' or' → logprob: -12.6328763961792

Token 1814: ' d' (ID: 272)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004319804720580578
    2. ' self' → logprob: -7.750432014465332
    3. '
' → logprob: -14.250432014465332
    4. '       ' → logprob: -15.375432014465332
    5. '```' → logprob: -16.000431060791016
    6. 'to' → logprob: -16.375431060791016
    7. '           ' → logprob: -16.875431060791016
    8. '
' → logprob: -17.000431060791016
    9. '   ' → logprob: -17.000431060791016
    10. 'int' → logprob: -17.125431060791016

Token 1815: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30195191502571106
    2. '       ' → logprob: -2.4269518852233887
    3. ' 
' → logprob: -3.4269518852233887
    4. '\n' → logprob: -3.5519518852233887
    5. ',' → logprob: -3.9269518852233887
    6. ':' → logprob: -4.051951885223389
    7. ',
' → logprob: -4.301951885223389
    8. ':
' → logprob: -4.426951885223389
    9. '        
' → logprob: -4.551951885223389
    10. ')' → logprob: -5.426951885223389

Token 1816: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02125428058207035
    2. '        
' → logprob: -5.021254062652588
    3. '<|end|>' → logprob: -5.271254062652588
    4. '
' → logprob: -5.896254062652588
    5. ',' → logprob: -6.271254062652588
    6. ')' → logprob: -6.521254062652588
    7. '.' → logprob: -7.396254062652588
    8. ' ' → logprob: -7.771254062652588
    9. ' 
' → logprob: -7.896254062652588
    10. '        ' → logprob: -8.396254539489746

Token 1817: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14188113808631897
    2. '        
' → logprob: -2.391881227493286
    3. '
' → logprob: -3.391881227493286
    4. '    
' → logprob: -7.016880989074707
    5. '\n' → logprob: -7.266880989074707
    6. '        
        
' → logprob: -7.266880989074707
    7. ' 
' → logprob: -7.391880989074707
    8. ',' → logprob: -7.391880989074707
    9. '```' → logprob: -7.641880989074707
    10. '  
' → logprob: -7.891880989074707

Token 1818: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004934397060424089
    2. '        
' → logprob: -5.504934310913086
    3. '
' → logprob: -7.504934310913086
    4. ' 
' → logprob: -10.129934310913086
    5. '#' → logprob: -10.379934310913086
    6. '```' → logprob: -10.504934310913086
    7. ',' → logprob: -10.754934310913086
    8. ' continue' → logprob: -11.004934310913086
    9. '           ' → logprob: -11.004934310913086
    10. '        ' → logprob: -11.129934310913086

Token 1819: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2495431751012802
    2. '
' → logprob: -2.7495431900024414
    3. '#' (adapté à ' #') → logprob: -2.8745431900024414
    4. 'positions' → logprob: -2.8745431900024414
    5. 'from' → logprob: -3.9995431900024414
    6. 'import' → logprob: -4.749543190002441
    7. '        
' → logprob: -5.124543190002441
    8. 'def' → logprob: -5.749543190002441
    9. ' positions' → logprob: -6.499543190002441
    10. 'dp' → logprob: -6.624543190002441

Token 1820: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23312249779701233
    2. 'positions' → logprob: -2.3581225872039795
    3. '#' → logprob: -2.9831225872039795
    4. 'def' → logprob: -3.8581225872039795
    5. 'from' → logprob: -3.9831225872039795
    6. '
' → logprob: -4.9831223487854
    7. 'dp' → logprob: -5.4831223487854
    8. 'import' → logprob: -5.7331223487854
    9. '        
' → logprob: -6.2331223487854
    10. '   ' → logprob: -6.9831223487854

Token 1821: ' complexity' (ID: 37588)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5853183269500732
    2. 'bounce' → logprob: -1.9603183269500732
    3. 'b' → logprob: -2.0853183269500732
    4. ' pos' → logprob: -3.0853183269500732
    5. ' bounce' → logprob: -3.2103183269500732
    6. ' b' → logprob: -3.2103183269500732
    7. 'i' → logprob: -3.7103183269500732
    8. '_' → logprob: -4.210318565368652
    9. ' i' → logprob: -5.335318565368652
    10. ' _' → logprob: -6.085318565368652

Token 1822: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3594728112220764
    2. ',' → logprob: -1.6094727516174316
    3. '<|end|>' → logprob: -3.6094727516174316
    4. ':
' → logprob: -4.609472751617432
    5. '       ' → logprob: -4.859472751617432
    6. '   ' → logprob: -4.984472751617432
    7. '.' → logprob: -5.234472751617432
    8. '...' → logprob: -5.359472751617432
    9. '<|end|>' → logprob: -5.359472751617432
    10. ')' → logprob: -5.609472751617432

Token 1823: ' we' (ID: 581)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.3814934194087982
    2. '#' → logprob: -2.506493330001831
    3. '       ' → logprob: -2.506493330001831
    4. ' positions' → logprob: -3.006493330001831
    5. 'import' → logprob: -3.881493330001831
    6. 'possible' → logprob: -4.00649356842041
    7. 'b' → logprob: -4.50649356842041
    8. 'bounce' → logprob: -4.63149356842041
    9. 'from' → logprob: -4.75649356842041
    10. 'def' → logprob: -4.75649356842041

Token 1824: ' try' (ID: 2075)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.6023972034454346
    2. '       ' → logprob: -1.7273972034454346
    3. ' continue' → logprob: -1.8523972034454346
    4. ' try' → logprob: -2.4773972034454346
    5. 'import' → logprob: -3.1023972034454346
    6. 'def' → logprob: -3.2273972034454346
    7. ' will' → logprob: -3.3523972034454346
    8. '
' → logprob: -3.4773972034454346
    9. ' use' → logprob: -3.6023972034454346
    10. 'try' → logprob: -3.6023972034454346

Token 1825: ' all' (ID: 722)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.644362449645996
    2. 'range' → logprob: -1.769362449645996
    3. 'def' → logprob: -2.269362449645996
    4. '
' → logprob: -2.394362449645996
    5. '```' → logprob: -2.394362449645996
    6. ' range' → logprob: -2.894362449645996
    7. ':
' → logprob: -3.144362449645996
    8. '       ' → logprob: -3.394362449645996
    9. 'possible' → logprob: -3.519362449645996
    10. 'b' → logprob: -3.644362449645996

Token 1826: ' bounce' (ID: 57156)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.5738409161567688
    2. 'possible' → logprob: -1.573840856552124
    3. 'bounce' → logprob: -2.073840856552124
    4. ' positions' → logprob: -3.573840856552124
    5. ' bounce' → logprob: -4.323841094970703
    6. '#' → logprob: -4.573841094970703
    7. 'b' → logprob: -4.573841094970703
    8. 'ob' → logprob: -4.948841094970703
    9. '0' → logprob: -5.073841094970703
    10. ' possible' → logprob: -5.198841094970703

Token 1827: ' partitions' (ID: 89097)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21334490180015564
    2. 'positions' → logprob: -2.7133448123931885
    3. '_positions' → logprob: -2.9633448123931885
    4. ' positions' → logprob: -3.0883448123931885
    5. ' s' → logprob: -5.213345050811768
    6. ' counts' → logprob: -5.463345050811768
    7. '_counts' → logprob: -5.588345050811768
    8. '_count' → logprob: -5.588345050811768
    9. 'points' → logprob: -5.963345050811768
    10. 'counts' → logprob: -6.838345050811768

Token 1828: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.299106627702713
    2. ',' → logprob: -2.9241065979003906
    3. ':' → logprob: -3.1741065979003906
    4. '
' → logprob: -3.4241065979003906
    5. ':
' → logprob: -3.4241065979003906
    6. '(' → logprob: -4.549106597900391
    7. ')' → logprob: -4.674106597900391
    8. ',
' → logprob: -4.799106597900391
    9. '[' → logprob: -5.049106597900391
    10. '   ' → logprob: -5.174106597900391

Token 1829: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8982431292533875
    2. 'positions' → logprob: -2.0232431888580322
    3. 'the' → logprob: -2.6482431888580322
    4. 'def' → logprob: -2.8982431888580322
    5. 'ob' → logprob: -3.5232431888580322
    6. '0' → logprob: -3.6482431888580322
    7. 'length' → logprob: -3.7732431888580322
    8. 'a' → logprob: -3.8982431888580322
    9. '[' → logprob: -3.8982431888580322
    10. 'self' → logprob: -4.023242950439453

Token 1830: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -0.3888447880744934
    2. 'ounds' → logprob: -2.3888447284698486
    3. 'max' → logprob: -3.5138447284698486
    4. 'est' → logprob: -3.6388447284698486
    5. 'ack' → logprob: -3.8888447284698486
    6. 'r' → logprob: -4.013844966888428
    7. ')' → logprob: -4.263844966888428
    8. 'ounce' → logprob: -4.388844966888428
    9. '```' → logprob: -4.888844966888428
    10. 'search' → logprob: -4.888844966888428

Token 1831: ' inserted' (ID: 40986)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.9842636585235596
    2. '
' → logprob: -2.1092636585235596
    3. ' up' → logprob: -2.1092636585235596
    4. ' in' → logprob: -2.3592636585235596
    5. ':
' → logprob: -2.7342636585235596
    6. 'from' → logprob: -3.2342636585235596
    7. ' at' → logprob: -3.4842636585235596
    8. '=' → logprob: -3.4842636585235596
    9. ' between' → logprob: -3.4842636585235596
    10. ':' → logprob: -3.4842636585235596

Token 1832: ' only' (ID: 1606)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4195284843444824
    2. ',' → logprob: -1.9195284843444824
    3. 'in' → logprob: -2.5445284843444824
    4. ':' → logprob: -2.6695284843444824
    5. '       ' → logprob: -2.6695284843444824
    6. ' at' → logprob: -3.0445284843444824
    7. ' in' → logprob: -3.2945284843444824
    8. 'from' → logprob: -3.4195284843444824
    9. '[' → logprob: -3.6695284843444824
    10. '(' → logprob: -3.6695284843444824

Token 1833: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.012626666575670242
    2. ' at' → logprob: -4.762626647949219
    3. 'among' → logprob: -6.137626647949219
    4. 'in' → logprob: -6.387626647949219
    5. 'between' → logprob: -9.387626647949219
    6. ' among' → logprob: -10.887626647949219
    7. ' in' → logprob: -11.262626647949219
    8. 'from' → logprob: -11.262626647949219
    9. 'on' → logprob: -11.387626647949219
    10. '	at' → logprob: -12.262626647949219

Token 1834: ' obstacles' (ID: 46430)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.17101062834262848
    2. 'sorted' → logprob: -2.921010732650757
    3. '0' → logprob: -3.046010732650757
    4. 'positions' → logprob: -3.421010732650757
    5. '[' → logprob: -4.921010494232178
    6. 'o' → logprob: -5.046010494232178
    7. '[o' → logprob: -5.171010494232178
    8. 'obs' → logprob: -7.171010494232178
    9. 'set' → logprob: -7.421010494232178
    10. 'self' → logprob: -8.046010971069336

Token 1835: ' positions' (ID: 15897)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6049820184707642
    2. '
' → logprob: -2.1049818992614746
    3. ':' → logprob: -2.3549818992614746
    4. ',' → logprob: -2.7299818992614746
    5. ')' → logprob: -3.6049818992614746
    6. ':
' → logprob: -3.9799818992614746
    7. '        
' → logprob: -4.104981899261475
    8. '.' → logprob: -4.479981899261475
    9. ',
' → logprob: -4.479981899261475
    10. '   ' → logprob: -4.479981899261475

Token 1836: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20531098544597626
    2. ':' → logprob: -2.9553110599517822
    3. '
' → logprob: -3.7053110599517822
    4. ',' → logprob: -3.7053110599517822
    5. ' and' → logprob: -3.7053110599517822
    6. ' +' → logprob: -4.580310821533203
    7. ':
' → logprob: -4.705310821533203
    8. '+' → logprob: -4.830310821533203
    9. ' or' → logprob: -5.080310821533203
    10. '        
' → logprob: -5.580310821533203

Token 1837: ' zero' (ID: 12421)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.27375343441963196
    2. '0' → logprob: -1.7737534046173096
    3. '{' → logprob: -3.1487534046173096
    4. '[target' → logprob: -4.773753643035889
    5. 'target' → logprob: -4.898753643035889
    6. '[d' → logprob: -5.648753643035889
    7. 'd' → logprob: -6.148753643035889
    8. ' [' → logprob: -7.023753643035889
    9. 'the' → logprob: -7.023753643035889
    10. 'self' → logprob: -7.148753643035889

Token 1838: '/d' (ID: 6662)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.0922611951828003
    2. '<|end|>' → logprob: -1.0922611951828003
    3. ' and' → logprob: -1.7172611951828003
    4. ',' → logprob: -2.21726131439209
    5. '<|end|>' → logprob: -4.46726131439209
    6. ')' → logprob: -4.84226131439209
    7. '
' → logprob: -5.09226131439209
    8. ':' → logprob: -5.46726131439209
    9. '.' → logprob: -5.96726131439209
    10. 'or' → logprob: -6.59226131439209

Token 1839: 'istance' (ID: 5295)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6997897624969482
    2. 'd' → logprob: -1.3247897624969482
    3. 'istance' → logprob: -1.6997897624969482
    4. '<|end|>' → logprob: -3.3247897624969482
    5. '```' → logprob: -5.324790000915527
    6. 'distance' → logprob: -5.574790000915527
    7. '<|end|>' → logprob: -6.574790000915527
    8. ' and' → logprob: -6.824790000915527
    9. '0' → logprob: -7.199790000915527
    10. '_d' → logprob: -7.574790000915527

Token 1840: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4682680070400238
    2. '
' → logprob: -1.5932680368423462
    3. ',' → logprob: -2.8432679176330566
    4. '   ' → logprob: -4.093267917633057
    5. ':' → logprob: -4.218267917633057
    6. '        
' → logprob: -4.343267917633057
    7. ',
' → logprob: -4.718267917633057
    8. '[' → logprob: -4.968267917633057
    9. '\n' → logprob: -5.093267917633057
    10. ' 
' → logprob: -5.218267917633057

Token 1841: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012166534550487995
    2. '
' → logprob: -5.137166500091553
    3. '        
' → logprob: -5.637166500091553
    4. ',' → logprob: -7.137166500091553
    5. '#' → logprob: -7.637166500091553
    6. '```' → logprob: -8.012166976928711
    7. '<|end|>' → logprob: -8.387166976928711
    8. 'from' → logprob: -8.887166976928711
    9. 'import' → logprob: -9.512166976928711
    10. '\' → logprob: -9.512166976928711

Token 1842: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01442473754286766
    2. '        
' → logprob: -4.764424800872803
    3. 'positions' → logprob: -6.514424800872803
    4. ' positions' → logprob: -6.889424800872803
    5. '#' → logprob: -6.889424800872803
    6. ',' → logprob: -7.764424800872803
    7. '<|end|>' → logprob: -8.264424324035645
    8. 'import' → logprob: -8.264424324035645
    9. '```' → logprob: -8.639424324035645
    10. ')' → logprob: -8.889424324035645

Token 1843: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20027822256088257
    2. 'positions' → logprob: -2.0752782821655273
    3. '
' → logprob: -4.075278282165527
    4. '#' (adapté à ' #') → logprob: -4.325278282165527
    5. '        
' → logprob: -4.700278282165527
    6. 'points' → logprob: -5.325278282165527
    7. ' positions' → logprob: -5.950278282165527
    8. 'possible' → logprob: -6.200278282165527
    9. 'import' → logprob: -6.325278282165527
    10. 'bounce' → logprob: -6.950278282165527

Token 1844: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1598917692899704
    2. 'positions' → logprob: -2.1598918437957764
    3. '#' → logprob: -4.659891605377197
    4. 'import' → logprob: -4.909891605377197
    5. 'from' → logprob: -5.284891605377197
    6. 'bounce' → logprob: -5.909891605377197
    7. 'possible' → logprob: -6.409891605377197
    8. 'ob' → logprob: -6.659891605377197
    9. '   ' → logprob: -7.409891605377197
    10. 'important' → logprob: -7.534891605377197

Token 1845: ' create' (ID: 2501)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.23672354221344
    2. ' continue' → logprob: -1.73672354221344
    3. 'def' → logprob: -1.73672354221344
    4. '_positions' → logprob: -2.1117234230041504
    5. 'positions' → logprob: -2.1117234230041504
    6. ' positions' → logprob: -3.2367234230041504
    7. ' def' → logprob: -3.8617234230041504
    8. '#' → logprob: -5.11172342300415
    9. ' will' → logprob: -5.23672342300415
    10. 'import' → logprob: -5.23672342300415

Token 1846: ' candidate' (ID: 17098)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.20591691136360168
    2. 'points' → logprob: -2.2059168815612793
    3. 'important' → logprob: -3.4559168815612793
    4. 'import' → logprob: -4.705916881561279
    5. 'possible' → logprob: -4.705916881561279
    6. 'key' → logprob: -5.205916881561279
    7. 'all' → logprob: -5.205916881561279
    8. 'from' → logprob: -5.455916881561279
    9. 'bounce' → logprob: -5.705916881561279
    10. '#' → logprob: -6.830916881561279

Token 1847: ' bounce' (ID: 57156)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.3171367347240448
    2. 'positions' → logprob: -1.3171367645263672
    3. 'bounce' → logprob: -6.192136764526367
    4. '_points' → logprob: -7.442136764526367
    5. '_b' → logprob: -7.817136764526367
    6. 'points' → logprob: -8.317136764526367
    7. '```' → logprob: -8.692136764526367
    8. 'b' → logprob: -8.817136764526367
    9. ' positions' → logprob: -9.192136764526367
    10. 's' → logprob: -10.692136764526367

Token 1848: ' positions' (ID: 15897)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.05363355949521065
    2. 'positions' → logprob: -3.178633451461792
    3. '_points' → logprob: -4.678633689880371
    4. 'points' → logprob: -6.928633689880371
    5. ' positions' → logprob: -8.428633689880371
    6. '_candidates' → logprob: -10.053633689880371
    7. '_pos' → logprob: -11.428633689880371
    8. '_' → logprob: -12.178633689880371
    9. '
' → logprob: -12.428633689880371
    10. '   ' → logprob: -12.553633689880371

Token 1849: ' list' (ID: 1562)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09687492251396179
    2. '=' → logprob: -3.721874952316284
    3. 'positions' → logprob: -3.721874952316284
    4. '       ' → logprob: -3.721874952316284
    5. '_positions' → logprob: -4.596874713897705
    6. '   ' → logprob: -6.221874713897705
    7. '=[' → logprob: -6.346874713897705
    8. ':' → logprob: -6.721874713897705
    9. '
' → logprob: -7.346874713897705
    10. 'candidate' → logprob: -7.471874713897705

Token 1850: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8689004778862
    2. 'positions' → logprob: -0.9939004778862
    3. 'candidate' → logprob: -2.6189005374908447
    4. ' =' → logprob: -2.9939005374908447
    5. 'bounce' → logprob: -3.4939005374908447
    6. 'c' → logprob: -3.4939005374908447
    7. 'points' → logprob: -4.993900299072266
    8. '=' → logprob: -5.368900299072266
    9. '   ' → logprob: -6.118900299072266
    10. 'b' → logprob: -6.368900299072266

Token 1851: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.29340603761375e-05
    2. 'sorted' → logprob: -9.750092506408691
    3. ' [' → logprob: -10.375092506408691
    4. '([' → logprob: -12.750092506408691
    5. '   ' → logprob: -15.500092506408691
    6. '[-' → logprob: -15.625092506408691
    7. '{' → logprob: -16.875093460083008
    8. '
' → logprob: -17.000093460083008
    9. ' sorted' → logprob: -17.000093460083008
    10. '[self' → logprob: -17.125093460083008

Token 1852: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. '[' → logprob: -11.37501335144043
    3. ' ' → logprob: -13.87501335144043
    4. ']' → logprob: -14.62501335144043
    5. ' [' → logprob: -17.50001335144043
    6. '`' → logprob: -17.75001335144043
    7. '۰' → logprob: -18.00001335144043
    8. ')' → logprob: -18.00001335144043
    9. '...' → logprob: -18.25001335144043
    10. '```' → logprob: -18.25001335144043

Token 1853: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05836237594485283
    2. ',' → logprob: -2.9333624839782715
    3. ']+' → logprob: -5.6833624839782715
    4. ',
' → logprob: -10.808362007141113
    5. ' ]' → logprob: -11.308362007141113
    6. '0' → logprob: -11.683362007141113
    7. ']
' → logprob: -11.933362007141113
    8. ' ,' → logprob: -12.558362007141113
    9. '']' → logprob: -12.808362007141113
    10. '```' → logprob: -12.933362007141113

Token 1854: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.719154417514801
    2. '+' → logprob: -1.0941543579101562
    3. ',' → logprob: -1.9691543579101562
    4. ']' → logprob: -3.7191543579101562
    5. '+[' → logprob: -4.594154357910156
    6. ']+' → logprob: -5.719154357910156
    7. '       ' → logprob: -8.094154357910156
    8. ',
' → logprob: -9.344154357910156
    9. ')+' → logprob: -9.469154357910156
    10. ')' → logprob: -9.469154357910156

Token 1855: ' obstacle' (ID: 57212)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.1666896790266037
    2. '[' → logprob: -1.9166896343231201
    3. '[o' → logprob: -5.416689872741699
    4. 'ob' → logprob: -7.166689872741699
    5. '(sorted' → logprob: -7.666689872741699
    6. '[s' → logprob: -8.2916898727417
    7. '[i' → logprob: -8.4166898727417
    8. ' [' → logprob: -9.5416898727417
    9. ' sorted' → logprob: -10.1666898727417
    10. '[self' → logprob: -10.4166898727417

Token 1856: ' positions' (ID: 15897)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.5644287467002869
    2. 's' → logprob: -1.5644288063049316
    3. 'positions' → logprob: -2.1894288063049316
    4. '.position' → logprob: -2.6894288063049316
    5. '.positions' → logprob: -3.1894288063049316
    6. 'position' → logprob: -7.564428806304932
    7. 'Positions' → logprob: -8.314428329467773
    8. ' positions' → logprob: -9.689428329467773
    9. '._' → logprob: -10.314428329467773
    10. '.' → logprob: -10.689428329467773

Token 1857: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07161837071180344
    2. '+' → logprob: -2.6966183185577393
    3. '       ' → logprob: -6.696618556976318
    4. '+[' → logprob: -7.821618556976318
    5. '[' → logprob: -10.44661808013916
    6. ']' → logprob: -12.44661808013916
    7. '```' → logprob: -12.69661808013916
    8. '   ' → logprob: -13.57161808013916
    9. ',' → logprob: -13.57161808013916
    10. ')' → logprob: -13.69661808013916

Token 1858: ' [' (ID: 723)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.018181433901190758
    2. '[d' → logprob: -4.018181324005127
    3. '[' → logprob: -10.518181800842285
    4. 'self' → logprob: -13.643181800842285
    5. ' [' → logprob: -13.643181800842285
    6. '[this' → logprob: -13.768181800842285
    7. '[data' → logprob: -15.768181800842285
    8. '[f' → logprob: -15.893181800842285
    9. '[df' → logprob: -15.893181800842285
    10. '[t' → logprob: -16.01818084716797

Token 1859: 'd' (ID: 67)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018230482935905457
    2. '[self' → logprob: -4.018230438232422
    3. ' self' → logprob: -10.018230438232422
    4. '[' → logprob: -10.518230438232422
    5. '(self' → logprob: -12.393230438232422
    6. ' [' → logprob: -13.893230438232422
    7. '   ' → logprob: -14.143230438232422
    8. '[
' → logprob: -14.393230438232422
    9. '```' → logprob: -14.643230438232422
    10. 'd' → logprob: -14.768230438232422

Token 1860: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02072242833673954
    2. ']
' → logprob: -3.8957223892211914
    3. ',' → logprob: -10.020722389221191
    4. ']
' → logprob: -10.395722389221191
    5. '+' → logprob: -10.645722389221191
    6. '       ' → logprob: -10.770722389221191
    7. ' ]' → logprob: -10.770722389221191
    8. ']

' → logprob: -10.895722389221191
    9. '+]' → logprob: -11.895722389221191
    10. '']' → logprob: -13.145722389221191

Token 1861: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043228231370449066
    2. '
' → logprob: -4.0432281494140625
    3. '        
' → logprob: -4.4182281494140625
    4. ',' → logprob: -5.0432281494140625
    5. '[' → logprob: -6.4182281494140625
    6. 'positions' → logprob: -6.5432281494140625
    7. ']' → logprob: -7.7932281494140625
    8. '```' → logprob: -7.9182281494140625
    9. '[
' → logprob: -8.168228149414062
    10. ' positions' → logprob: -8.418228149414062

Token 1862: ' points' (ID: 5571)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28171029686927795
    2. 'positions' → logprob: -2.031710386276245
    3. '
' → logprob: -2.781710386276245
    4. ',' → logprob: -4.281710147857666
    5. 'candidate' → logprob: -4.281710147857666
    6. '```' → logprob: -5.156710147857666
    7. '        
' → logprob: -5.406710147857666
    8. ' positions' → logprob: -5.906710147857666
    9. 'c' → logprob: -6.781710147857666
    10. '[' → logprob: -6.781710147857666

Token 1863: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869094252586365
    2. '=' → logprob: -1.1369094848632812
    3. '=[' → logprob: -10.636909484863281
    4. ':' → logprob: -11.511909484863281
    5. ' =[' → logprob: -14.011909484863281
    6. '=[]' → logprob: -14.386909484863281
    7. ',' → logprob: -14.886909484863281
    8. '_positions' → logprob: -15.011909484863281
    9. ')' → logprob: -15.136909484863281
    10. '[' → logprob: -15.261909484863281

Token 1864: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.180258191714529e-06
    2. ' [' → logprob: -12.125008583068848
    3. 'sorted' → logprob: -13.000008583068848
    4. '([' → logprob: -15.000008583068848
    5. '   ' → logprob: -17.50000762939453
    6. ' sorted' → logprob: -19.62500762939453
    7. ' ' → logprob: -20.37500762939453
    8. '{' → logprob: -21.37500762939453
    9. '0' → logprob: -22.00000762939453
    10. '(sorted' → logprob: -22.25000762939453

Token 1865: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. 'self' → logprob: -17.75
    4. '   ' → logprob: -17.875
    5. '۰' → logprob: -18.5
    6. 'o' → logprob: -18.625
    7. '#' → logprob: -19.1875
    8. '...' → logprob: -19.25
    9. 'i' → logprob: -19.25
    10. '```' → logprob: -19.25

Token 1866: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5836154818534851
    2. ',' → logprob: -0.8336154818534851
    3. ']+' → logprob: -5.083615303039551
    4. ',
' → logprob: -6.958615303039551
    5. ' ,' → logprob: -8.95861530303955
    6. '+' → logprob: -9.08361530303955
    7. ' ]' → logprob: -9.45861530303955
    8. ']
' → logprob: -9.83361530303955
    9. ' +' → logprob: -10.70861530303955
    10. ')' → logprob: -10.70861530303955

Token 1867: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.32031235098838806
    2. '+' → logprob: -1.3203123807907104
    3. ',' → logprob: -5.5703125
    4. ']' → logprob: -6.4453125
    5. ']+' → logprob: -7.4453125
    6. '+
' → logprob: -7.5703125
    7. ' +
' → logprob: -8.9453125
    8. '+[' → logprob: -9.3203125
    9. '
' → logprob: -9.8203125
    10. '<|end|>' → logprob: -9.9453125

Token 1868: ' obstacles' (ID: 46430)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.16390064358711243
    2. '[o' → logprob: -2.03890061378479
    3. '[' → logprob: -4.163900852203369
    4. '[self' → logprob: -5.788900852203369
    5. 'ob' → logprob: -7.038900852203369
    6. 'self' → logprob: -7.413900852203369
    7. '[i' → logprob: -8.163900375366211
    8. '[s' → logprob: -8.413900375366211
    9. '(sorted' → logprob: -8.663900375366211
    10. ' [' → logprob: -9.663900375366211

Token 1869: '_positions' (ID: 93193)
  Prédit: '.position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.position' → logprob: -0.5781360864639282
    2. '.positions' → logprob: -1.3281360864639282
    3. '_positions' → logprob: -1.8281360864639282
    4. 'positions' → logprob: -4.703135967254639
    5. 'Positions' → logprob: -5.703135967254639
    6. '.' → logprob: -7.703135967254639
    7. '[' → logprob: -9.203136444091797
    8. ' .' → logprob: -9.328136444091797
    9. '   ' → logprob: -9.453136444091797
    10. '+' → logprob: -10.078136444091797

Token 1870: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03897084668278694
    2. '+[' → logprob: -3.788970947265625
    3. '+' → logprob: -4.163970947265625
    4. '
' → logprob: -10.163970947265625
    5. '+
' → logprob: -12.038970947265625
    6. '[' → logprob: -12.663970947265625
    7. '<|end|>' → logprob: -12.663970947265625
    8. ' +
' → logprob: -13.663970947265625
    9. '       ' → logprob: -13.788970947265625
    10. '+self' → logprob: -14.538970947265625

Token 1871: ' [' (ID: 723)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.3135922849178314
    2. '[d' → logprob: -1.3135923147201538
    3. '[' → logprob: -8.063591957092285
    4. ' [' → logprob: -12.313591957092285
    5. 'sorted' → logprob: -12.438591957092285
    6. '[this' → logprob: -13.063591957092285
    7. '[df' → logprob: -13.438591957092285
    8. '[s' → logprob: -13.688591957092285
    9. '[data' → logprob: -14.063591957092285
    10. '[f' → logprob: -14.813591957092285

Token 1872: 'self' (ID: 1156)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.07013027369976044
    2. 'self' → logprob: -2.6951303482055664
    3. '[d' → logprob: -9.695130348205566
    4. '[' → logprob: -9.820130348205566
    5. ' [' → logprob: -10.320130348205566
    6. '(self' → logprob: -10.695130348205566
    7. ' self' → logprob: -11.945130348205566
    8. '[
' → logprob: -12.570130348205566
    9. 'd' → logprob: -12.945130348205566
    10. '[int' → logprob: -13.945130348205566

Token 1873: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.00010664248111424968
    2. '.distance' → logprob: -10.375106811523438
    3. 'd' → logprob: -10.500106811523438
    4. '.' → logprob: -10.750106811523438
    5. '.max' → logprob: -11.750106811523438
    6. 'max' → logprob: -12.375106811523438
    7. 'distance' → logprob: -12.625106811523438
    8. '].' → logprob: -12.625106811523438
    9. '`.' → logprob: -12.750106811523438
    10. ' .' → logprob: -13.375106811523438

Token 1874: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020016769412904978
    2. ']
' → logprob: -6.252001762390137
    3. ']
' → logprob: -10.377001762390137
    4. ' ]' → logprob: -10.752001762390137
    5. ']

' → logprob: -12.627001762390137
    6. '`]' → logprob: -12.752001762390137
    7. '']' → logprob: -13.127001762390137
    8. ']+' → logprob: -13.252001762390137
    9. '+]' → logprob: -13.252001762390137
    10. '+' → logprob: -13.252001762390137

Token 1875: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12730403244495392
    2. '
' → logprob: -2.2523040771484375
    3. '        
' → logprob: -5.1273040771484375
    4. 'points' → logprob: -5.8773040771484375
    5. ',' → logprob: -6.6273040771484375
    6. '```' → logprob: -6.7523040771484375
    7. ' points' → logprob: -7.6273040771484375
    8. '  
' → logprob: -8.252304077148438
    9. '    
' → logprob: -8.627304077148438
    10. '   ' → logprob: -8.627304077148438

Token 1876: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012891010381281376
    2. '        
' → logprob: -5.012890815734863
    3. ',' → logprob: -5.637890815734863
    4. '
' → logprob: -6.512890815734863
    5. '   ' → logprob: -8.762890815734863
    6. '<|end|>' → logprob: -9.012890815734863
    7. ')' → logprob: -9.137890815734863
    8. ' 
' → logprob: -9.387890815734863
    9. '```' → logprob: -9.512890815734863
    10. '\' → logprob: -9.762890815734863

Token 1877: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2136170119047165
    2. 'points' → logprob: -2.5886170864105225
    3. 'from' (adapté à ' from') → logprob: -3.7136170864105225
    4. 'n' → logprob: -3.8386170864105225
    5. '
' → logprob: -3.8386170864105225
    6. ' points' → logprob: -4.963616847991943
    7. ' n' → logprob: -5.088616847991943
    8. ' from' → logprob: -5.088616847991943
    9. 'dp' → logprob: -5.213616847991943
    10. 'def' → logprob: -5.338616847991943

Token 1878: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.004713261034339666
    2. 'heap' → logprob: -5.50471305847168
    3. 'bis' → logprob: -7.50471305847168
    4. 'fun' → logprob: -9.62971305847168
    5. 'typing' → logprob: -11.37971305847168
    6. 'queue' → logprob: -12.25471305847168
    7. ' collections' → logprob: -13.50471305847168
    8. 'math' → logprob: -14.62971305847168
    9. 'deque' → logprob: -15.62971305847168
    10. 'it' → logprob: -16.25471305847168

Token 1879: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5030568242073059
    2. 'ounter' → logprob: -2.003056764602661
    3. 'Counter' → logprob: -2.128056764602661
    4. '.Counter' → logprob: -2.128056764602661
    5. 'deque' → logprob: -4.62805700302124
    6. '```' → logprob: -6.00305700302124
    7. 'counter' → logprob: -6.50305700302124
    8. 'default' → logprob: -6.75305700302124
    9. 'Deque' → logprob: -6.87805700302124
    10. '[counter' → logprob: -7.37805700302124

Token 1880: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -3.650518920039758e-06
    2. 'collections' → logprob: -13.250003814697266
    3. ' deque' → logprob: -13.250003814697266
    4. '```' → logprob: -18.250003814697266
    5. 'de' → logprob: -18.875003814697266
    6. 'queue' → logprob: -20.000003814697266
    7. '
' → logprob: -20.000003814697266
    8. '`' → logprob: -22.125003814697266
    9. 'import' → logprob: -23.125003814697266
    10. '   ' → logprob: -23.250003814697266

Token 1881: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44340163469314575
    2. '       ' → logprob: -1.193401575088501
    3. 'queue' → logprob: -3.318401575088501
    4. ' queue' → logprob: -4.31840181350708
    5. '        
' → logprob: -6.69340181350708
    6. '```' → logprob: -6.81840181350708
    7. '(queue' → logprob: -7.19340181350708
    8. '   ' → logprob: -7.31840181350708
    9. 'b' → logprob: -7.94340181350708
    10. ',' → logprob: -8.193401336669922

Token 1882: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6457900404930115
    2. '
' → logprob: -1.2707901000976562
    3. 'queue' → logprob: -2.0207901000976562
    4. ' queue' → logprob: -3.2707901000976562
    5. '```' → logprob: -4.645790100097656
    6. 'b' → logprob: -5.020790100097656
    7. '        
' → logprob: -5.270790100097656
    8. 'dp' → logprob: -7.645790100097656
    9. 'q' → logprob: -7.770790100097656
    10. 'visited' → logprob: -7.895790100097656

Token 1883: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.03374920040369034
    2. 'visited' → logprob: -3.7837491035461426
    3. '
' → logprob: -5.283749103546143
    4. '       ' → logprob: -6.158749103546143
    5. ' queue' → logprob: -6.158749103546143
    6. 'dp' → logprob: -8.0337495803833
    7. '   ' → logprob: -8.2837495803833
    8. 'dist' → logprob: -8.4087495803833
    9. 'q' → logprob: -8.5337495803833
    10. ' visited' → logprob: -10.0337495803833

Token 1884: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741040766239166
    2. '=' → logprob: -0.9741040468215942
    3. '       ' → logprob: -11.724103927612305
    4. ')' → logprob: -12.974103927612305
    5. '   ' → logprob: -12.974103927612305
    6. '=[' → logprob: -13.099103927612305
    7. ',' → logprob: -13.224103927612305
    8. '=
' → logprob: -13.599103927612305
    9. '=[
' → logprob: -13.599103927612305
    10. '=[]' → logprob: -13.724103927612305

Token 1885: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0008900215616449714
    2. '[(' → logprob: -7.500890254974365
    3. ' deque' → logprob: -8.000889778137207
    4. 'collections' → logprob: -13.625889778137207
    5. ' [(' → logprob: -14.750889778137207
    6. '   ' → logprob: -15.375889778137207
    7. '[' → logprob: -18.625890731811523
    8. 'Deque' → logprob: -18.750890731811523
    9. ' ' → logprob: -19.000890731811523
    10. '([(' → logprob: -19.375890731811523

Token 1886: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.2535350024700165
    2. '()
' → logprob: -1.5035350322723389
    3. '()' → logprob: -6.62853479385376
    4. '([' → logprob: -8.878535270690918
    5. '[(' → logprob: -9.253535270690918
    6. '([
' → logprob: -10.628535270690918
    7. '((' → logprob: -11.503535270690918
    8. '()

' → logprob: -12.128535270690918
    9. '(' → logprob: -12.628535270690918
    10. '([[' → logprob: -14.253535270690918

Token 1887: '       ' (ID: 309)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.18066568672657013
    2. '(queue' → logprob: -2.1806657314300537
    3. '(' → logprob: -3.6806657314300537
    4. '       ' → logprob: -4.430665493011475
    5. '   ' → logprob: -4.680665493011475
    6. ' queue' → logprob: -5.555665493011475
    7. '[(' → logprob: -7.180665493011475
    8. '	queue' → logprob: -7.430665493011475
    9. '((' → logprob: -8.055665969848633
    10. ' (' → logprob: -8.805665969848633

Token 1888: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -4.751746746478602e-05
    2. '       ' → logprob: -10.25004768371582
    3. '(queue' → logprob: -12.00004768371582
    4. '   ' → logprob: -12.75004768371582
    5. ' queue' → logprob: -13.00004768371582
    6. '(' → logprob: -15.12504768371582
    7. 'for' → logprob: -15.37504768371582
    8. '
' → logprob: -16.00004768371582
    9. '#' (adapté à ' #') → logprob: -16.00004768371582
    10. 'cache' → logprob: -16.62504768371582

Token 1889: ' tuple' (ID: 31311)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.007657153531908989
    2. '(' → logprob: -5.757657051086426
    3. '(queue' → logprob: -5.757657051086426
    4. ' queue' → logprob: -6.757657051086426
    5. '       ' → logprob: -9.882657051086426
    6. '   ' → logprob: -10.507657051086426
    7. ' (' → logprob: -10.757657051086426
    8. 'state' → logprob: -10.757657051086426
    9. '0' → logprob: -12.007657051086426
    10. '#' → logprob: -12.132657051086426

Token 1890: ':' (ID: 25)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1883360594511032
    2. '(queue' → logprob: -2.438336133956909
    3. '(position' → logprob: -3.188336133956909
    4. '(start' → logprob: -3.688336133956909
    5. '(current' → logprob: -4.81333589553833
    6. '(b' → logprob: -5.31333589553833
    7. '(pos' → logprob: -6.43833589553833
    8. '(state' → logprob: -6.56333589553833
    9. '(initial' → logprob: -7.56333589553833
    10. '(self' → logprob: -7.68833589553833

Token 1891: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5554245114326477
    2. '(queue' → logprob: -1.805424451828003
    3. '(position' → logprob: -2.430424451828003
    4. '(b' → logprob: -2.430424451828003
    5. '(from' → logprob: -3.055424451828003
    6. '(current' → logprob: -3.930424451828003
    7. '(start' → logprob: -5.055424690246582
    8. '(pos' → logprob: -5.430424690246582
    9. ' (' → logprob: -5.805424690246582
    10. '(self' → logprob: -6.305424690246582

Token 1892: 'bounce' (ID: 125854)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2099643051624298
    2. 'position' → logprob: -2.3349642753601074
    3. 'current' → logprob: -2.9599642753601074
    4. '0' → logprob: -4.084964275360107
    5. 'b' → logprob: -4.209964275360107
    6. 'bounce' → logprob: -5.334964275360107
    7. 'last' → logprob: -6.834964275360107
    8. 'positions' → logprob: -7.209964275360107
    9. ' position' → logprob: -7.709964275360107
    10. ' pos' → logprob: -7.709964275360107

Token 1893: ' used' (ID: 2061)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.6390697360038757
    2. 's' → logprob: -0.7640697360038757
    3. 'count' → logprob: -5.639069557189941
    4. ',' → logprob: -7.139069557189941
    5. '   ' → logprob: -7.764069557189941
    6. '_num' → logprob: -8.014069557189941
    7. ')' → logprob: -8.264069557189941
    8. '_cnt' → logprob: -8.264069557189941
    9. '_s' → logprob: -8.639069557189941
    10. '_number' → logprob: -9.389069557189941

Token 1894: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3176765739917755
    2. 's' → logprob: -1.6926765441894531
    3. '_count' → logprob: -2.567676544189453
    4. '_used' → logprob: -5.067676544189453
    5. 'count' → logprob: -5.567676544189453
    6. ')' → logprob: -8.067676544189453
    7. 'used' → logprob: -8.817676544189453
    8. '_cnt' → logprob: -9.067676544189453
    9. 'es' → logprob: -9.067676544189453
    10. '```' → logprob: -9.442676544189453

Token 1895: ' current' (ID: 2208)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7592802047729492
    2. 'position' → logprob: -1.3842802047729492
    3. ' position' → logprob: -2.009280204772949
    4. ' current' → logprob: -2.634280204772949
    5. 'current' → logprob: -3.384280204772949
    6. ' pos' → logprob: -3.509280204772949
    7. ' last' → logprob: -4.884280204772949
    8. 'last' → logprob: -6.134280204772949
    9. 'points' → logprob: -7.384280204772949
    10. 'index' → logprob: -8.13428020477295

Token 1896: ' position' (ID: 4010)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.46986308693885803
    2. 'position' → logprob: -1.4698630571365356
    3. '_pos' → logprob: -1.9698630571365356
    4. '_position' → logprob: -5.219862937927246
    5. ' position' → logprob: -9.594862937927246
    6. ' pos' → logprob: -13.344862937927246
    7. '_index' → logprob: -15.344862937927246
    8. 'distance' → logprob: -15.469862937927246
    9. '   ' → logprob: -15.594862937927246
    10. '	position' → logprob: -15.594862937927246

Token 1897: ' index' (ID: 3472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007567389984615147
    2. ')' → logprob: -7.625756740570068
    3. '```' → logprob: -9.00075626373291
    4. ' ,' → logprob: -10.12575626373291
    5. '`,' → logprob: -11.00075626373291
    6. '0' → logprob: -11.25075626373291
    7. '),' → logprob: -11.37575626373291
    8. ',
' → logprob: -11.87575626373291
    9. '   ' → logprob: -12.00075626373291
    10. '_,' → logprob: -12.12575626373291

Token 1898: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011492440477013588
    2. ')' → logprob: -4.6364922523498535
    3. '```' → logprob: -7.2614922523498535
    4. '0' → logprob: -7.5114922523498535
    5. ',
' → logprob: -8.636492729187012
    6. '),' → logprob: -8.886492729187012
    7. '       ' → logprob: -10.511492729187012
    8. '`,' → logprob: -10.761492729187012
    9. ')
' → logprob: -11.011492729187012
    10. '``' → logprob: -11.011492729187012

Token 1899: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0009556477889418602
    2. ' points' → logprob: -7.000955581665039
    3. '(points' → logprob: -10.125955581665039
    4. '	points' → logprob: -13.625955581665039
    5. ')' → logprob: -13.750955581665039
    6. '
' → logprob: -14.125955581665039
    7. '`' → logprob: -14.625955581665039
    8. 'queue' → logprob: -15.250955581665039
    9. 'positions' → logprob: -16.00095558166504
    10. '_points' → logprob: -16.00095558166504

Token 1900: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008641989901661873
    2. ')' → logprob: -4.883642196655273
    3. '0' → logprob: -7.633642196655273
    4. '```' → logprob: -8.883642196655273
    5. '),' → logprob: -9.008642196655273
    6. ' ,' → logprob: -9.758642196655273
    7. ')
' → logprob: -9.758642196655273
    8. ',
' → logprob: -9.883642196655273
    9. '[' → logprob: -10.258642196655273
    10. '   ' → logprob: -10.383642196655273

Token 1901: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8498668074607849
    2. '       ' → logprob: -0.9748668074607849
    3. '(queue' → logprob: -2.4748668670654297
    4. '(' → logprob: -2.7248668670654297
    5. '```' → logprob: -4.84986686706543
    6. '(
' → logprob: -4.97486686706543
    7. ' (' → logprob: -5.34986686706543
    8. ',
' → logprob: -5.47486686706543
    9. '
' → logprob: -5.47486686706543
    10. 'queue' → logprob: -5.47486686706543

Token 1902: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.15186434984207153
    2. ' queue' → logprob: -2.0268642902374268
    3. '(queue' → logprob: -5.026864528656006
    4. '(' → logprob: -6.276864528656006
    5. ' (' → logprob: -8.026864051818848
    6. '   ' → logprob: -8.901864051818848
    7. '```' → logprob: -9.651864051818848
    8. 'space' → logprob: -10.026864051818848
    9. '       ' → logprob: -10.401864051818848
    10. '
' → logprob: -10.651864051818848

Token 1903: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07321492582559586
    2. '=' → logprob: -2.6982150077819824
    3. ' =' → logprob: -6.073215007781982
    4. '.extend' → logprob: -7.698215007781982
    5. '.' → logprob: -8.573214530944824
    6. '   ' → logprob: -9.573214530944824
    7. ' .' → logprob: -10.198214530944824
    8. 'append' → logprob: -10.198214530944824
    9. '.put' → logprob: -10.198214530944824
    10. '.p' → logprob: -10.448214530944824

Token 1904: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003374886582605541
    2. ' (' → logprob: -8.000337600708008
    3. '((' → logprob: -13.250337600708008
    4. '   ' → logprob: -16.375337600708008
    5. '(
' → logprob: -17.000337600708008
    6. '
' → logprob: -18.250337600708008
    7. '(True' → logprob: -18.250337600708008
    8. '0' → logprob: -18.875337600708008
    9. '(False' → logprob: -19.375337600708008
    10. '(None' → logprob: -19.500337600708008

Token 1905: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '(' → logprob: -17.5
    4. ')' → logprob: -18.375
    5. '۰' → logprob: -18.8125
    6. '   ' → logprob: -19.1875
    7. '1' → logprob: -19.25
    8. '000' → logprob: -19.625
    9. '[' → logprob: -20.1875
    10. 'b' → logprob: -20.5625

Token 1906: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2007883671903983e-05
    2. ',
' → logprob: -11.500021934509277
    3. ' ,' → logprob: -11.875021934509277
    4. ',len' → logprob: -13.375021934509277
    5. '<|end|>' → logprob: -14.000021934509277
    6. ')' → logprob: -14.125021934509277
    7. ',)' → logprob: -15.125021934509277
    8. ',{
' → logprob: -15.625021934509277
    9. '),' → logprob: -15.750021934509277
    10. '
' → logprob: -16.125022888183594

Token 1907: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.9795445849886164e-05
    2. ' ' → logprob: -9.750060081481934
    3. 'len' → logprob: -14.625060081481934
    4. '[' → logprob: -15.437560081481934
    5. '1' → logprob: -16.250059127807617
    6. ')' → logprob: -16.312559127807617
    7. '```' → logprob: -16.750059127807617
    8. '   ' → logprob: -17.062559127807617
    9. '00' → logprob: -17.250059127807617
    10. '(' → logprob: -17.500059127807617

Token 1908: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.250005722045898
    3. 'len' → logprob: -14.750005722045898
    4. '1' → logprob: -15.687505722045898
    5. '[' → logprob: -16.0625057220459
    6. '00' → logprob: -16.7500057220459
    7. '000' → logprob: -16.9375057220459
    8. '   ' → logprob: -17.0000057220459
    9. ')' → logprob: -17.2500057220459
    10. '```' → logprob: -17.5000057220459

Token 1909: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006938552018254995
    2. '))
' → logprob: -5.006938457489014
    3. ')' → logprob: -8.631938934326172
    4. ',' → logprob: -10.256938934326172
    5. '       ' → logprob: -13.006938934326172
    6. '));' → logprob: -13.256938934326172
    7. '   ' → logprob: -13.381938934326172
    8. '))

' → logprob: -13.881938934326172
    9. ' ))' → logprob: -13.881938934326172
    10. ')
' → logprob: -14.006938934326172

Token 1910: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03701109066605568
    2. '       ' → logprob: -3.53701114654541
    3. '        
' → logprob: -5.91201114654541
    4. '```' → logprob: -6.16201114654541
    5. ')' → logprob: -7.16201114654541
    6. ',' → logprob: -8.03701114654541
    7. 'while' → logprob: -8.16201114654541
    8. '
' → logprob: -8.91201114654541
    9. ')
' → logprob: -9.03701114654541
    10. ' 
' → logprob: -9.03701114654541

Token 1911: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13394004106521606
    2. '       ' → logprob: -2.6339399814605713
    3. ')' → logprob: -3.3839399814605713
    4. 'while' → logprob: -5.13394021987915
    5. '```' → logprob: -5.50894021987915
    6. ',' → logprob: -5.50894021987915
    7. ')
' → logprob: -6.25894021987915
    8. '        
' → logprob: -7.13394021987915
    9. '   ' → logprob: -7.25894021987915
    10. ' while' → logprob: -7.38394021987915

Token 1912: ' start' (ID: 1604)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.19401511549949646
    2. ')' → logprob: -2.0690150260925293
    3. 'while' → logprob: -3.5690150260925293
    4. ' visited' → logprob: -4.819015026092529
    5. '
' → logprob: -5.319015026092529
    6. 'True' → logprob: -6.069015026092529
    7. '       ' → logprob: -6.319015026092529
    8. ' while' → logprob: -6.444015026092529
    9. 'seen' → logprob: -7.444015026092529
    10. ')
' → logprob: -7.819015026092529

Token 1913: ' at' (ID: 540)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5844672322273254
    2. ')' → logprob: -1.5844671726226807
    3. ',' → logprob: -1.8344671726226807
    4. ',
' → logprob: -3.9594671726226807
    5. ')
' → logprob: -3.9594671726226807
    6. '       ' → logprob: -4.45946741104126
    7. '		
' → logprob: -5.33446741104126
    8. '<|end|>' → logprob: -5.45946741104126
    9. '        
' → logprob: -5.70946741104126
    10. 'with' → logprob: -6.33446741104126

Token 1914: ' launcher' (ID: 109963)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006110924296081066
    2. '(' → logprob: -5.881111145019531
    3. 'points' → logprob: -5.881111145019531
    4. '(points' → logprob: -8.256111145019531
    5. ' (' → logprob: -9.756111145019531
    6. ' ' → logprob: -10.006111145019531
    7. 'queue' → logprob: -10.131111145019531
    8. '
' → logprob: -11.006111145019531
    9. '(len' → logprob: -11.006111145019531
    10. '(queue' → logprob: -11.131111145019531

Token 1915: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5683828592300415
    2. ',' → logprob: -1.3183828592300415
    3. '
' → logprob: -2.068382740020752
    4. '       ' → logprob: -4.443382740020752
    5. '```' → logprob: -4.568382740020752
    6. ')
' → logprob: -4.818382740020752
    7. ',
' → logprob: -6.318382740020752
    8. 'with' → logprob: -6.443382740020752
    9. ' with' → logprob: -6.818382740020752
    10. '   ' → logprob: -7.068382740020752

Token 1916: ' no' (ID: 860)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5496907234191895
    2. '1' → logprob: -1.7996907234191895
    3. ')' → logprob: -2.6746907234191895
    4. '(' → logprob: -3.2996907234191895
    5. '0' → logprob: -3.4246907234191895
    6. ' len' → logprob: -3.5496907234191895
    7. ' (' → logprob: -4.0496907234191895
    8. '(len' → logprob: -4.0496907234191895
    9. 'self' → logprob: -4.5496907234191895
    10. '```' → logprob: -4.7996907234191895

Token 1917: ' bounce' (ID: 57156)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.161685511469841
    2. 'bounce' → logprob: -2.6616854667663574
    3. ' b' → logprob: -2.7866854667663574
    4. ' bounce' → logprob: -4.286685466766357
    5. ')' → logprob: -5.786685466766357
    6. '_b' → logprob: -7.786685466766357
    7. ' ' → logprob: -9.411685943603516
    8. ' )' → logprob: -9.536685943603516
    9. '	b' → logprob: -9.536685943603516
    10. ')b' → logprob: -9.786685943603516

Token 1918: ' used' (ID: 2061)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8294435143470764
    2. ',' → logprob: -1.4544434547424316
    3. ')' → logprob: -1.5794434547424316
    4. '
' → logprob: -2.7044434547424316
    5. '   ' → logprob: -4.579443454742432
    6. '       ' → logprob: -4.704443454742432
    7. ',
' → logprob: -5.204443454742432
    8. 'points' → logprob: -5.204443454742432
    9. '```' → logprob: -5.204443454742432
    10. '_positions' → logprob: -5.954443454742432

Token 1919: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013009977526962757
    2. ')' → logprob: -5.513010025024414
    3. ',' → logprob: -6.388010025024414
    4. '```' → logprob: -6.388010025024414
    5. '       ' → logprob: -6.513010025024414
    6. ')
' → logprob: -6.513010025024414
    7. '        
' → logprob: -6.888010025024414
    8. '    
' → logprob: -8.138010025024414
    9. ',
' → logprob: -8.138010025024414
    10. '\n' → logprob: -8.763010025024414

Token 1920: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10770828276872635
    2. '```' → logprob: -3.482708215713501
    3. '\t' → logprob: -3.982708215713501
    4. '
' → logprob: -4.35770845413208
    5. '	while' → logprob: -4.73270845413208
    6. 'while' → logprob: -4.85770845413208
    7. '	' → logprob: -5.60770845413208
    8. ' while' → logprob: -5.60770845413208
    9. '<|end|>' → logprob: -5.60770845413208
    10. ',' → logprob: -5.85770845413208

Token 1921: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.003777266712859273
    2. '       ' → logprob: -6.128777503967285
    3. 'while' → logprob: -6.753777503967285
    4. 'seen' → logprob: -8.378777503967285
    5. ' visited' → logprob: -9.378777503967285
    6. '   ' → logprob: -9.628777503967285
    7. 'reachable' → logprob: -10.753777503967285
    8. 'dist' → logprob: -11.878777503967285
    9. 'possible' → logprob: -12.503777503967285
    10. '```' → logprob: -12.753777503967285

Token 1922: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20281951129436493
    2. ' =' → logprob: -1.7028194665908813
    3. '=set' → logprob: -6.577819347381592
    4. '={(' → logprob: -11.32781982421875
    5. '.add' → logprob: -14.57781982421875
    6. 'set' → logprob: -14.95281982421875
    7. ')' → logprob: -15.20281982421875
    8. '={' → logprob: -15.20281982421875
    9. '=
' → logprob: -15.45281982421875
    10. '{' → logprob: -16.20281982421875

Token 1923: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0009326597792096436
    2. '{' → logprob: -7.000932693481445
    3. ' set' → logprob: -11.250932693481445
    4. '{}' → logprob: -11.750932693481445
    5. ' {(' → logprob: -15.750932693481445
    6. '{
' → logprob: -16.750932693481445
    7. '(set' → logprob: -17.250932693481445
    8. '	set' → logprob: -18.500932693481445
    9. '{}
' → logprob: -18.625932693481445
    10. '=set' → logprob: -18.875932693481445

Token 1924: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.29588454961776733
    2. '((' → logprob: -1.795884609222412
    3. '()' → logprob: -2.420884609222412
    4. '([(' → logprob: -7.795884609222412
    5. '(queue' → logprob: -8.045884132385254
    6. '(' → logprob: -8.420884132385254
    7. '{' → logprob: -9.420884132385254
    8. '()

' → logprob: -9.795884132385254
    9. '()\' → logprob: -9.795884132385254
    10. '   ' → logprob: -10.170884132385254

Token 1925: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6444476246833801
    2. '
' → logprob: -1.0194475650787354
    3. ' 
' → logprob: -3.1444475650787354
    4. '        
' → logprob: -4.1444478034973145
    5. ')' → logprob: -4.2694478034973145
    6. '   ' → logprob: -4.6444478034973145
    7. '    
' → logprob: -4.8944478034973145
    8. '\n' → logprob: -5.1444478034973145
    9. ',' → logprob: -5.6444478034973145
    10. '```' → logprob: -5.8944478034973145

Token 1926: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4069781005382538
    2. ' while' → logprob: -1.9069781303405762
    3. 'while' → logprob: -2.531978130340576
    4. '   ' → logprob: -2.781978130340576
    5. '
' → logprob: -3.531978130340576
    6. '```' → logprob: -5.031978130340576
    7. ' 
' → logprob: -6.406978130340576
    8. '           ' → logprob: -6.406978130340576
    9. '	while' → logprob: -6.656978130340576
    10. '    
' → logprob: -6.781978130340576

Token 1927: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.10397572815418243
    2. ' while' → logprob: -2.853975772857666
    3. '       ' → logprob: -3.478975772857666
    4. '
' → logprob: -5.103975772857666
    5. '   ' → logprob: -6.228975772857666
    6. '```' → logprob: -6.728975772857666
    7. 'True' → logprob: -8.353975296020508
    8. 'queue' → logprob: -9.103975296020508
    9. '        
' → logprob: -9.228975296020508
    10. ' (' → logprob: -9.353975296020508

Token 1928: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.00809558853507042
    2. ' queue' → logprob: -4.883095741271973
    3. 'len' → logprob: -8.133095741271973
    4. 'True' → logprob: -9.258095741271973
    5. '   ' → logprob: -10.133095741271973
    6. '       ' → logprob: -10.133095741271973
    7. ' True' → logprob: -11.883095741271973
    8. '(queue' → logprob: -11.883095741271973
    9. ' len' → logprob: -13.008095741271973
    10. '    ' → logprob: -14.133095741271973

Token 1929: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17108385264873505
    2. ':' → logprob: -3.046083927154541
    3. '.pop' → logprob: -3.671083927154541
    4. '):
' → logprob: -3.921083927154541
    5. '       ' → logprob: -3.921083927154541
    6. '.append' → logprob: -4.421083927154541
    7. '.p' → logprob: -5.046083927154541
    8. '           ' → logprob: -5.171083927154541
    9. '```' → logprob: -5.421083927154541
    10. 'not' → logprob: -5.796083927154541

Token 1930: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018520120065659285
    2. '(b' → logprob: -6.626852035522461
    3. 'b' → logprob: -8.626852035522461
    4. '   ' → logprob: -8.626852035522461
    5. '(' → logprob: -9.501852035522461
    6. '
' → logprob: -11.251852035522461
    7. '               ' → logprob: -11.376852035522461
    8. ' (' → logprob: -11.376852035522461
    9. '		' → logprob: -11.876852035522461
    10. '	       ' → logprob: -11.876852035522461

Token 1931: ' b' (ID: 287)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.43375363945961
    2. 'bounce' → logprob: -1.6837536096572876
    3. 'b' (adapté à ' b') → logprob: -2.183753728866577
    4. '(' → logprob: -3.558753728866577
    5. '           ' → logprob: -3.933753728866577
    6. '               ' → logprob: -6.183753490447998
    7. '   ' → logprob: -6.308753490447998
    8. ' bounce' → logprob: -8.058753967285156
    9. ' b' → logprob: -8.308753967285156
    10. ' (' → logprob: -8.433753967285156

Token 1932: 'ounces' (ID: 52219)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03691757097840309
    2. 'ounce' → logprob: -4.161917686462402
    3. 'ounces' → logprob: -5.161917686462402
    4. ')' → logprob: -5.286917686462402
    5. ',
' → logprob: -5.661917686462402
    6. ' ,' → logprob: -7.036917686462402
    7. ',u' → logprob: -7.036917686462402
    8. 'atch' → logprob: -7.411917686462402
    9. '       ' → logprob: -7.411917686462402
    10. '),' → logprob: -7.536917686462402

Token 1933: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.017015891149640083
    2. ',' → logprob: -4.2670159339904785
    3. 'used' → logprob: -5.8920159339904785
    4. '           ' → logprob: -10.26701545715332
    5. ' used' → logprob: -11.26701545715332
    6. ' ,' → logprob: -11.39201545715332
    7. '_USED' → logprob: -11.51701545715332
    8. 'Used' → logprob: -12.39201545715332
    9. '   ' → logprob: -13.01701545715332
    10. '       ' → logprob: -13.26701545715332

Token 1934: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008554781670682132
    2. ',<' → logprob: -8.250855445861816
    3. '           ' → logprob: -8.500855445861816
    4. ' ,' → logprob: -8.750855445861816
    5. ',n' → logprob: -10.250855445861816
    6. ' <' → logprob: -10.500855445861816
    7. '<' → logprob: -10.750855445861816
    8. '<=' → logprob: -10.875855445861816
    9. ',k' → logprob: -11.000855445861816
    10. ',
' → logprob: -11.000855445861816

Token 1935: ' idx' (ID: 14016)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0007761581800878048
    2. ' pos' → logprob: -8.000776290893555
    3. 'idx' → logprob: -8.000776290893555
    4. 'current' → logprob: -9.625776290893555
    5. 'curr' → logprob: -10.750776290893555
    6. 'cur' → logprob: -11.250776290893555
    7. 'p' → logprob: -13.500776290893555
    8. ' idx' → logprob: -13.750776290893555
    9. 'position' → logprob: -14.000776290893555
    10. ' current' → logprob: -14.375776290893555

Token 1936: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1251930594444275
    2. ')' → logprob: -2.6251931190490723
    3. '=' → logprob: -4.500193119049072
    4. '+' → logprob: -4.875193119049072
    5. '            ' → logprob: -4.875193119049072
    6. ' +' → logprob: -5.375193119049072
    7. '           ' → logprob: -5.500193119049072
    8. ' ' → logprob: -6.375193119049072
    9. '<|end|>' → logprob: -6.500193119049072
    10. ' <' → logprob: -6.625193119049072

Token 1937: ' queue' (ID: 13661)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21254967153072357
    2. ' (' → logprob: -2.0875496864318848
    3. '(idx' → logprob: -4.087549686431885
    4. '(queue' → logprob: -4.337549686431885
    5. '(len' → logprob: -4.712549686431885
    6. '0' → logprob: -4.837549686431885
    7. 'queue' → logprob: -4.837549686431885
    8. '(b' → logprob: -5.087549686431885
    9. 'idx' → logprob: -6.462549686431885
    10. 'b' → logprob: -6.837549686431885

Token 1938: '.p' (ID: 1201)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.32651734352111816
    2. '+' → logprob: -2.201517343521118
    3. '<' → logprob: -2.826517343521118
    4. '            ' → logprob: -3.576517343521118
    5. ' +' → logprob: -4.076517105102539
    6. '           ' → logprob: -4.201517105102539
    7. ' +=' → logprob: -4.326517105102539
    8. ' !=' → logprob: -4.451517105102539
    9. '               ' → logprob: -5.076517105102539
    10. '+=' → logprob: -5.451517105102539

Token 1939: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.043023400008678436
    2. 'op' → logprob: -3.1680233478546143
    3. 'len' → logprob: -12.043023109436035
    4. 'opl' → logprob: -12.168023109436035
    5. 'append' → logprob: -12.793023109436035
    6. 'ople' → logprob: -12.793023109436035
    7. '```' → logprob: -13.918023109436035
    8. 'opf' → logprob: -14.168023109436035
    9. 'ush' → logprob: -14.293023109436035
    10. 'opup' → logprob: -14.418023109436035

Token 1940: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6732994914054871
    2. '
' → logprob: -1.1732995510101318
    3. ':
' → logprob: -2.048299551010132
    4. '):
' → logprob: -4.173299312591553
    5. ')' → logprob: -4.923299312591553
    6. ':' → logprob: -5.048299312591553
    7. '            
' → logprob: -5.048299312591553
    8. '       ' → logprob: -5.548299312591553
    9. '               ' → logprob: -5.548299312591553
    10. ' 
' → logprob: -6.048299312591553

Token 1941: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14376653730869293
    2. '               ' → logprob: -2.1437666416168213
    3. ' if' → logprob: -5.393766403198242
    4. '       ' → logprob: -6.018766403198242
    5. ' 
' → logprob: -6.143766403198242
    6. ' ' → logprob: -6.143766403198242
    7. '            
' → logprob: -6.643766403198242
    8. ' ' → logprob: -7.018766403198242
    9. '                
' → logprob: -7.518766403198242
    10. '<|end|>' → logprob: -7.893766403198242

Token 1942: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5984394550323486
    2. 'if' (adapté à ' if') → logprob: -0.8484394550323486
    3. '           ' → logprob: -3.8484394550323486
    4. 'next' → logprob: -7.8484392166137695
    5. 'current' → logprob: -8.72343921661377
    6. 'pos' → logprob: -9.09843921661377
    7. ' for' → logprob: -9.34843921661377
    8. ' if' → logprob: -9.59843921661377
    9. 'points' → logprob: -9.97343921661377
    10. 'positions' → logprob: -10.84843921661377

Token 1943: ' (' (ID: 350)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00964217260479927
    2. ' idx' → logprob: -5.134642124176025
    3. 'points' → logprob: -5.634642124176025
    4. ' points' → logprob: -9.384642601013184
    5. '(idx' → logprob: -10.259642601013184
    6. 'b' → logprob: -12.134642601013184
    7. 'indices' → logprob: -12.759642601013184
    8. '	idx' → logprob: -13.259642601013184
    9. '(points' → logprob: -13.759642601013184
    10. ' (' → logprob: -14.134642601013184

Token 1944: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.650518920039758e-06
    2. ' b' → logprob: -13.375003814697266
    3. 'bounce' → logprob: -14.375003814697266
    4. '   ' → logprob: -14.500003814697266
    5. ')b' → logprob: -15.375003814697266
    6. '           ' → logprob: -15.750003814697266
    7. ')' → logprob: -16.500003814697266
    8. '	b' → logprob: -16.625003814697266
    9. '_b' → logprob: -16.875003814697266
    10. '       ' → logprob: -17.250003814697266

Token 1945: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -0.008709948509931564
    2. 'b' → logprob: -4.883709907531738
    3. ',' → logprob: -7.883709907531738
    4. ',b' → logprob: -8.508709907531738
    5. ')' → logprob: -9.133709907531738
    6. 'ouches' → logprob: -9.633709907531738
    7. 'ounds' → logprob: -10.133709907531738
    8. '_b' → logprob: -10.383709907531738
    9. 'ount' → logprob: -10.633709907531738
    10. 'oun' → logprob: -10.633709907531738

Token 1946: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.00016623330884613097
    2. 'used' → logprob: -8.750165939331055
    3. ',' → logprob: -12.000165939331055
    4. 'Used' → logprob: -15.000165939331055
    5. '_USED' → logprob: -15.000165939331055
    6. ' used' → logprob: -15.500165939331055
    7. ')' → logprob: -15.500165939331055
    8. '```' → logprob: -16.125165939331055
    9. '[' → logprob: -16.375165939331055
    10. '_use' → logprob: -16.500165939331055

Token 1947: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000982435536570847
    2. ' ,' → logprob: -7.875982284545898
    3. '==' → logprob: -8.625982284545898
    4. '+' → logprob: -9.125982284545898
    5. ',
' → logprob: -9.750982284545898
    6. ',next' → logprob: -10.000982284545898
    7. '+,' → logprob: -10.500982284545898
    8. ',num' → logprob: -10.750982284545898
    9. ' +' → logprob: -10.750982284545898
    10. ' ==' → logprob: -11.000982284545898

Token 1948: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -2.451116051815916e-05
    2. ' idx' → logprob: -10.625024795532227
    3. '	idx' → logprob: -16.250024795532227
    4. '           ' → logprob: -18.125024795532227
    5. '(idx' → logprob: -18.125024795532227
    6. '
' → logprob: -18.625024795532227
    7. '_idx' → logprob: -18.750024795532227
    8. '[idx' → logprob: -19.000024795532227
    9. '   ' → logprob: -19.625024795532227
    10. ' ' → logprob: -20.375024795532227

Token 1949: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018092949176207185
    2. ',)' → logprob: -7.126809120178223
    3. ')==' → logprob: -7.626809120178223
    4. ' )' → logprob: -8.376809120178223
    5. ',' → logprob: -8.626809120178223
    6. 'in' → logprob: -10.126809120178223
    7. ' in' → logprob: -10.376809120178223
    8. '==' → logprob: -11.001809120178223
    9. 'not' → logprob: -12.501809120178223
    10. ' ==' → logprob: -12.626809120178223

Token 1950: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.188170075416565
    2. ' in' → logprob: -1.313170075416565
    3. '==' → logprob: -1.688170075416565
    4. ' ==' → logprob: -2.0631699562072754
    5. 'in' → logprob: -2.4381699562072754
    6. ')==' → logprob: -4.188169956207275
    7. ' not' → logprob: -4.688169956207275
    8. ',' → logprob: -6.438169956207275
    9. 'not' → logprob: -7.563169956207275
    10. ']==' → logprob: -9.313170433044434

Token 1951: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.688212614681106e-05
    2. ' visited' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.125017166137695
    4. '       ' → logprob: -17.250017166137695
    5. 'queue' → logprob: -17.250017166137695
    6. '           ' → logprob: -18.000017166137695
    7. '
' → logprob: -19.625017166137695
    8. 'seen' → logprob: -20.375017166137695
    9. '     ' → logprob: -20.500017166137695
    10. '{' → logprob: -20.625017166137695

Token 1952: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6979668140411377
    2. ':
' → logprob: -0.9479668140411377
    3. '               ' → logprob: -2.1979668140411377
    4. '           ' → logprob: -6.072966575622559
    5. '==' → logprob: -8.197966575622559
    6. '                   ' → logprob: -8.322966575622559
    7. ':return' → logprob: -8.322966575622559
    8. '):
' → logprob: -8.572966575622559
    9. ' or' → logprob: -9.072966575622559
    10. 'continue' → logprob: -9.322966575622559

Token 1953: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011117222311440855
    2. 'continue' → logprob: -9.37511157989502
    3. ' continue' → logprob: -10.75011157989502
    4. '                   ' → logprob: -13.50011157989502
    5. '           ' → logprob: -13.62511157989502
    6. '	           ' → logprob: -14.37511157989502
    7. '```' → logprob: -14.50011157989502
    8. '	continue' → logprob: -15.62511157989502
    9. '		       ' → logprob: -15.75011157989502
    10. '   ' → logprob: -15.75011157989502

Token 1954: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5864013433456421
    2. 'continue' (adapté à ' continue') → logprob: -0.8364013433456421
    3. ' continue' → logprob: -4.586401462554932
    4. '                   ' → logprob: -8.586400985717773
    5. '   ' → logprob: -11.211400985717773
    6. '	continue' → logprob: -11.711400985717773
    7. '_continue' → logprob: -12.711400985717773
    8. '           ' → logprob: -12.836400985717773
    9. '```' → logprob: -13.711400985717773
    10. 'continu' → logprob: -14.336400985717773

Token 1955: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3142767548561096
    2. '               ' → logprob: -1.3142766952514648
    3. '```' → logprob: -7.689276695251465
    4. '                   ' → logprob: -7.939276695251465
    5. '<|end|>' → logprob: -10.439276695251465
    6. '            ' → logprob: -10.439276695251465
    7. '            
' → logprob: -10.689276695251465
    8. '                       ' → logprob: -10.814276695251465
    9. '
' → logprob: -11.564276695251465
    10. ')' → logprob: -11.564276695251465

Token 1956: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01006711833178997
    2. '               ' → logprob: -4.635066986083984
    3. '```' → logprob: -8.510066986083984
    4. '                   ' → logprob: -9.510066986083984
    5. '                       ' → logprob: -11.635066986083984
    6. '            
' → logprob: -11.760066986083984
    7. '            ' → logprob: -12.760066986083984
    8. '
' → logprob: -13.010066986083984
    9. '<|end|>' → logprob: -13.385066986083984
    10. 'continue' → logprob: -13.510066986083984

Token 1957: ' visited' (ID: 18416)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007633720524609089
    2. 'visited' (adapté à ' visited') → logprob: -4.882633686065674
    3. ' visited' → logprob: -11.507634162902832
    4. '               ' → logprob: -11.632634162902832
    5. '```' → logprob: -12.757634162902832
    6. '       ' → logprob: -13.507634162902832
    7. '                   ' → logprob: -13.507634162902832
    8. '   ' → logprob: -13.507634162902832
    9. '		' → logprob: -15.007634162902832
    10. '                       ' → logprob: -15.382634162902832

Token 1958: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0006852717488072813
    2. '.' → logprob: -7.625685214996338
    3. '           ' → logprob: -9.125685691833496
    4. ',' → logprob: -10.125685691833496
    5. 'add' → logprob: -10.375685691833496
    6. '                   ' → logprob: -13.000685691833496
    7. '               ' → logprob: -13.000685691833496
    8. '.setdefault' → logprob: -13.125685691833496
    9. '.update' → logprob: -13.750685691833496
    10. '.insert' → logprob: -13.750685691833496

Token 1959: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20943279564380646
    2. '((' → logprob: -1.83443284034729
    3. '(
' → logprob: -4.709432601928711
    4. ' (' → logprob: -4.709432601928711
    5. '           ' → logprob: -5.334432601928711
    6. '(True' → logprob: -5.834432601928711
    7. '   ' → logprob: -6.584432601928711
    8. '
' → logprob: -7.584432601928711
    9. '(b' → logprob: -8.084432601928711
    10. '(None' → logprob: -8.459432601928711

Token 1960: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.8624639324116288e-06
    2. ' b' → logprob: -14.000001907348633
    3. ')b' → logprob: -14.125001907348633
    4. '           ' → logprob: -15.625001907348633
    5. ')' → logprob: -17.000001907348633
    6. '   ' → logprob: -18.125001907348633
    7. '	b' → logprob: -18.250001907348633
    8. '>b' → logprob: -18.750001907348633
    9. '
' → logprob: -18.875001907348633
    10. '                   ' → logprob: -19.375001907348633

Token 1961: 'ounces' (ID: 52219)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.28523582220077515
    2. 'ounces' → logprob: -1.41023588180542
    3. '_b' → logprob: -6.53523588180542
    4. 'ouches' → logprob: -7.28523588180542
    5. ')' → logprob: -8.160235404968262
    6. 's' → logprob: -8.285235404968262
    7. ',' → logprob: -8.285235404968262
    8. ',b' → logprob: -8.410235404968262
    9. 'ouses' → logprob: -8.535235404968262
    10. 'ounds' → logprob: -8.660235404968262

Token 1962: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.000474521511932835
    2. 'used' → logprob: -7.750474452972412
    3. ',' → logprob: -10.50047492980957
    4. 'Used' → logprob: -12.00047492980957
    5. 'b' → logprob: -13.37547492980957
    6. '_USED' → logprob: -13.37547492980957
    7. ')' → logprob: -13.75047492980957
    8. '_,' → logprob: -14.25047492980957
    9. '),' → logprob: -14.25047492980957
    10. '_b' → logprob: -14.50047492980957

Token 1963: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7697225252486533e-06
    2. ',
' → logprob: -13.500003814697266
    3. ' ,' → logprob: -14.000003814697266
    4. '<|end|>' → logprob: -14.375003814697266
    5. '‌,' → logprob: -15.125003814697266
    6. '),' → logprob: -16.000003814697266
    7. ')' → logprob: -16.125003814697266
    8. ',index' → logprob: -16.625003814697266
    9. ',None' → logprob: -17.250003814697266
    10. ',)' → logprob: -17.250003814697266

Token 1964: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -4.024604277219623e-05
    2. ' idx' → logprob: -10.125040054321289
    3. '	idx' → logprob: -15.750040054321289
    4. '(idx' → logprob: -17.12504005432129
    5. '   ' → logprob: -17.25004005432129
    6. '_idx' → logprob: -17.62504005432129
    7. '[idx' → logprob: -17.75004005432129
    8. ')' → logprob: -19.50004005432129
    9. ' ' → logprob: -19.62504005432129
    10. '```' → logprob: -19.75004005432129

Token 1965: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5768638253211975
    2. ')
' → logprob: -0.8268638253211975
    3. '           ' → logprob: -7.076863765716553
    4. '):
' → logprob: -10.076864242553711
    5. ')
' → logprob: -11.201864242553711
    6. ')

' → logprob: -11.951864242553711
    7. ')`
' → logprob: -12.451864242553711
    8. '))
' → logprob: -12.576864242553711
    9. '               ' → logprob: -12.826864242553711
    10. '       ' → logprob: -13.826864242553711

Token 1966: '            
' (ID: 7048)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017708084487821907
    2. '<|end|>' → logprob: -9.250177383422852
    3. '            
' → logprob: -10.750177383422852
    4. '
' → logprob: -10.875177383422852
    5. '<|end|>' → logprob: -11.000177383422852
    6. '       ' → logprob: -12.375177383422852
    7. '          ' → logprob: -12.625177383422852
    8. '```' → logprob: -12.750177383422852
    9. ',' → logprob: -12.875177383422852
    10. '	       ' → logprob: -13.625177383422852

Token 1967: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3856492842023727e-06
    2. 'if' → logprob: -13.625000953674316
    3. '		' → logprob: -16.750001907348633
    4. '               ' → logprob: -17.375001907348633
    5. '       ' → logprob: -17.625001907348633
    6. '            
' → logprob: -18.375001907348633
    7. '          ' → logprob: -18.375001907348633
    8. '	       ' → logprob: -18.750001907348633
    9. '        ' → logprob: -19.000001907348633
    10. ' if' → logprob: -19.000001907348633

Token 1968: ' current' (ID: 2208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20705001056194305
    2. 'if' → logprob: -1.9570499658584595
    3. '           ' → logprob: -3.207050085067749
    4. 'current' (adapté à ' current') → logprob: -5.58204984664917
    5. 'pos' → logprob: -7.08204984664917
    6. 'points' → logprob: -8.457050323486328
    7. ' for' → logprob: -9.207050323486328
    8. 'next' → logprob: -9.457050323486328
    9. '#' → logprob: -9.582050323486328
    10. 'positions' → logprob: -9.582050323486328

Token 1969: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.01064476277679205
    2. '_idx' → logprob: -5.010644912719727
    3. '_position' → logprob: -5.885644912719727
    4. '_' → logprob: -7.385644912719727
    5. '_index' → logprob: -8.885644912719727
    6. 'pos' → logprob: -8.885644912719727
    7. ' =' → logprob: -10.010644912719727
    8. '_point' → logprob: -10.135644912719727
    9. '_positions' → logprob: -10.260644912719727
    10. ',' → logprob: -10.385644912719727

Token 1970: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06343048065900803
    2. '=' → logprob: -2.8134305477142334
    3. '_idx' → logprob: -6.813430309295654
    4. '           ' → logprob: -8.688430786132812
    5. '_index' → logprob: -9.063430786132812
    6. '+' → logprob: -10.688430786132812
    7. '       ' → logprob: -11.563430786132812
    8. ' +' → logprob: -11.563430786132812
    9. 'idx' → logprob: -11.563430786132812
    10. ')' → logprob: -12.063430786132812

Token 1971: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.06197015196084976
    2. ' points' → logprob: -2.8119702339172363
    3. '(points' → logprob: -13.061969757080078
    4. '	points' → logprob: -15.061969757080078
    5. '.points' → logprob: -17.561969757080078
    6. 'point' → logprob: -17.936969757080078
    7. '_points' → logprob: -18.186969757080078
    8. '`' → logprob: -18.436969757080078
    9. 'self' → logprob: -18.561969757080078
    10. '   ' → logprob: -19.436969757080078

Token 1972: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -7.088138227118179e-05
    2. '[' → logprob: -9.750070571899414
    3. '```' → logprob: -12.375070571899414
    4. 'idx' → logprob: -12.875070571899414
    5. '(idx' → logprob: -13.125070571899414
    6. ' [' → logprob: -14.250070571899414
    7. '           ' → logprob: -14.500070571899414
    8. '[
' → logprob: -14.750070571899414
    9. '[ind' → logprob: -15.125070571899414
    10. ' idx' → logprob: -15.250070571899414

Token 1973: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04893036186695099
    2. ')' → logprob: -3.0489304065704346
    3. '           ' → logprob: -8.048930168151855
    4. ']
' → logprob: -11.673930168151855
    5. '])
' → logprob: -12.298930168151855
    6. ' )
' → logprob: -12.298930168151855
    7. ')
' → logprob: -13.673930168151855
    8. ']' → logprob: -13.673930168151855
    9. '       ' → logprob: -14.298930168151855
    10. ')

' → logprob: -14.548930168151855

Token 1974: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.8889261304575484e-06
    2. 'for' → logprob: -13.500003814697266
    3. '            
' → logprob: -14.375003814697266
    4. '
' → logprob: -14.625003814697266
    5. ' for' → logprob: -14.625003814697266
    6. '```' → logprob: -15.000003814697266
    7. ',' → logprob: -15.250003814697266
    8. '	       ' → logprob: -15.750003814697266
    9. '		' → logprob: -16.375003814697266
    10. '<|end|>' → logprob: -16.875003814697266

Token 1975: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1520601511001587
    2. '           ' → logprob: -2.652060031890869
    3. 'if' → logprob: -2.652060031890869
    4. ' for' → logprob: -10.402060508728027
    5. '#' (adapté à ' #') → logprob: -11.777060508728027
    6. 'next' → logprob: -12.527060508728027
    7. ' if' → logprob: -12.652060508728027
    8. '```' → logprob: -12.652060508728027
    9. 'while' → logprob: -13.652060508728027
    10. '   ' → logprob: -13.652060508728027

Token 1976: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0057062203995883465
    2. '           ' → logprob: -5.755706310272217
    3. 'if' → logprob: -6.005706310272217
    4. 'next' → logprob: -10.005705833435059
    5. ' for' → logprob: -11.130705833435059
    6. '```' → logprob: -14.630705833435059
    7. '#' → logprob: -15.630705833435059
    8. '   ' → logprob: -16.255706787109375
    9. ' if' → logprob: -16.630706787109375
    10. '            
' → logprob: -17.130706787109375

Token 1977: ' jumping' (ID: 50586)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.21023599803447723
    2. 'for' → logprob: -1.7102359533309937
    3. ' next' → logprob: -5.460236072540283
    4. ' for' → logprob: -6.085236072540283
    5. '           ' → logprob: -6.835236072540283
    6. '               ' → logprob: -7.960236072540283
    7. 'to' → logprob: -8.210235595703125
    8. 'j' → logprob: -8.460235595703125
    9. 'n' → logprob: -9.335235595703125
    10. ' nxt' → logprob: -9.835235595703125

Token 1978: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.017592208459973335
    2. ' to' → logprob: -4.392592430114746
    3. '           ' → logprob: -5.767592430114746
    4. 'next' → logprob: -6.642592430114746
    5. 'idx' → logprob: -8.517592430114746
    6. 'i' → logprob: -8.642592430114746
    7. 'j' → logprob: -9.392592430114746
    8. '               ' → logprob: -9.642592430114746
    9. ' next' → logprob: -10.142592430114746
    10. '(next' → logprob: -10.892592430114746

Token 1979: ' all' (ID: 722)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.5385258793830872
    2. 'j' → logprob: -1.1635258197784424
    3. 'i' → logprob: -2.7885258197784424
    4. 'for' → logprob: -4.2885260581970215
    5. 'points' → logprob: -4.5385260581970215
    6. 'idx' → logprob: -5.0385260581970215
    7. ' next' → logprob: -5.1635260581970215
    8. ' j' → logprob: -5.9135260581970215
    9. '   ' → logprob: -7.2885260581970215
    10. 'n' → logprob: -7.2885260581970215

Token 1980: ' further' (ID: 6544)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.06236805021762848
    2. 'j' → logprob: -2.937368154525757
    3. ' next' → logprob: -5.562367916107178
    4. 'k' → logprob: -6.687367916107178
    5. 'i' → logprob: -6.812367916107178
    6. ' j' → logprob: -8.562368392944336
    7. 'idx' → logprob: -8.812368392944336
    8. ' nxt' → logprob: -8.812368392944336
    9. 'positions' → logprob: -9.062368392944336
    10. '[next' → logprob: -9.187368392944336

Token 1981: ' points' (ID: 5571)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.7130792737007141
    2. 'indices' → logprob: -1.0880792140960693
    3. 'points' → logprob: -2.4630792140960693
    4. 'positions' → logprob: -2.9630792140960693
    5. 'j' → logprob: -4.338079452514648
    6. 'indexes' → logprob: -4.838079452514648
    7. 'next' → logprob: -5.213079452514648
    8. ' idx' → logprob: -6.088079452514648
    9. ' indices' → logprob: -6.588079452514648
    10. ' positions' → logprob: -7.088079452514648

Token 1982: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007607220206409693
    2. ' in' → logprob: -5.8826069831848145
    3. ',' → logprob: -6.1326069831848145
    4. '[next' → logprob: -6.6326069831848145
    5. '[idx' → logprob: -8.382607460021973
    6. '               ' → logprob: -8.507607460021973
    7. '+' → logprob: -9.257607460021973
    8. '```' → logprob: -9.507607460021973
    9. 'from' → logprob: -9.882607460021973
    10. '(next' → logprob: -10.007607460021973

Token 1983: 'simulate' (ID: 192331)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.1463082879781723
    2. ' idx' → logprob: -2.021308183670044
    3. ')' → logprob: -7.021308422088623
    4. 'j' → logprob: -7.146308422088623
    5. '               ' → logprob: -7.521308422088623
    6. 'i' → logprob: -8.271307945251465
    7. 'next' → logprob: -8.771307945251465
    8. '(idx' → logprob: -8.896307945251465
    9. '           ' → logprob: -9.146307945251465
    10. '                           ' → logprob: -9.521307945251465

Token 1984: ' b' (ID: 287)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.2798268496990204
    2. ' idx' → logprob: -1.5298268795013428
    3. ' next' → logprob: -5.279826641082764
    4. 'next' → logprob: -5.279826641082764
    5. 'points' → logprob: -5.529826641082764
    6. 'b' → logprob: -5.904826641082764
    7. 'indices' → logprob: -6.279826641082764
    8. ' b' → logprob: -7.029826641082764
    9. ')' → logprob: -7.154826641082764
    10. 'positions' → logprob: -7.154826641082764

Token 1985: 'ounces' (ID: 52219)
  Prédit: 'ounce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounce' → logprob: -0.6699606776237488
    2. 'ounces' → logprob: -0.9199606776237488
    3. 'r' → logprob: -3.4199607372283936
    4. ')' → logprob: -3.7949607372283936
    5. 'ounds' → logprob: -4.1699604988098145
    6. '+' → logprob: -6.2949604988098145
    7. '               ' → logprob: -6.5449604988098145
    8. 'eyond' → logprob: -6.6699604988098145
    9. 'reak' → logprob: -6.7949604988098145
    10. ''' → logprob: -6.9199604988098145

Token 1986: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9230691194534302
    2. ')' → logprob: -1.1730691194534302
    3. '           ' → logprob: -2.1730690002441406
    4. '               ' → logprob: -2.2980690002441406
    5. ',' → logprob: -3.7980690002441406
    6. ' +' → logprob: -4.048069000244141
    7. '):
' → logprob: -4.673069000244141
    8. '[next' → logprob: -5.173069000244141
    9. ' at' → logprob: -5.298069000244141
    10. ' in' → logprob: -5.548069000244141

Token 1987: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.6405310816480778e-05
    2. '            
' → logprob: -12.125016212463379
    3. '               ' → logprob: -12.375016212463379
    4. '<|end|>' → logprob: -13.375016212463379
    5. ' for' → logprob: -13.625016212463379
    6. '
' → logprob: -13.750016212463379
    7. '       ' → logprob: -14.375016212463379
    8. '          ' → logprob: -14.875016212463379
    9. '		' → logprob: -15.000016212463379
    10. ',' → logprob: -15.250016212463379

Token 1988: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5647545456886292
    2. '           ' → logprob: -1.3147544860839844
    3. ' for' → logprob: -1.8147544860839844
    4. '
' → logprob: -10.189754486083984
    5. '            
' → logprob: -11.064754486083984
    6. '               ' → logprob: -11.314754486083984
    7. '   ' → logprob: -12.439754486083984
    8. '	for' → logprob: -12.939754486083984
    9. '```' → logprob: -13.439754486083984
    10. ' ' → logprob: -13.439754486083984

Token 1989: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.01464538648724556
    2. 'n' → logprob: -4.264645576477051
    3. ' next' → logprob: -8.38964557647705
    4. 'nid' → logprob: -9.38964557647705
    5. 'i' → logprob: -9.76464557647705
    6. 'j' → logprob: -9.88964557647705
    7. 'nj' → logprob: -10.88964557647705
    8. ' nxt' → logprob: -11.01464557647705
    9. '_next' → logprob: -12.01464557647705
    10. 'npos' → logprob: -12.26464557647705

Token 1990: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.004614184144884348
    2. '_pos' → logprob: -5.629614353179932
    3. '_i' → logprob: -7.004614353179932
    4. '_' → logprob: -9.379613876342773
    5. '_index' → logprob: -11.379613876342773
    6. '_point' → logprob: -12.254613876342773
    7. '_pt' → logprob: -13.504613876342773
    8. 'idx' → logprob: -13.629613876342773
    9. '_ix' → logprob: -14.254613876342773
    10. '_p' → logprob: -14.879613876342773

Token 1991: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005930931773036718
    2. 'in' → logprob: -5.1309309005737305
    3. '	in' → logprob: -13.63093090057373
    4. 'In' → logprob: -14.88093090057373
    5. '_in' → logprob: -15.38093090057373
    6. ' ' → logprob: -15.50593090057373
    7. '```' → logprob: -16.630931854248047
    8. ' ' → logprob: -17.380931854248047
    9. 'n' → logprob: -17.505931854248047
    10. ')' → logprob: -17.505931854248047

Token 1992: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.547789674485102e-05
    2. ' range' → logprob: -10.250035285949707
    3. '	range' → logprob: -21.125036239624023
    4. '(range' → logprob: -21.375036239624023
    5. '   ' → logprob: -21.875036239624023
    6. ' ' → logprob: -21.875036239624023
    7. 'list' → logprob: -22.500036239624023
    8. '  ' → logprob: -24.000036239624023
    9. 'r' → logprob: -24.375036239624023
    10. 'rang' → logprob: -24.750036239624023

Token 1993: '(idx' (ID: 42793)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00015407454338856041
    2. '(idx' → logprob: -9.125154495239258
    3. ' idx' → logprob: -10.125154495239258
    4. '	idx' → logprob: -12.625154495239258
    5. '_idx' → logprob: -14.500154495239258
    6. '               ' → logprob: -14.750154495239258
    7. '[idx' → logprob: -14.750154495239258
    8. '           ' → logprob: -15.000154495239258
    9. '                   ' → logprob: -16.750154495239258
    10. 'index' → logprob: -17.625154495239258

Token 1994: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.061969030648469925
    2. ' +' → logprob: -2.811969041824341
    3. '+
' → logprob: -14.311968803405762
    4. '+,' → logprob: -14.936968803405762
    5. '1' → logprob: -16.311969757080078
    6. '()+' → logprob: -16.436969757080078
    7. ',' → logprob: -16.436969757080078
    8. '＋' → logprob: -17.061969757080078
    9. ' +
' → logprob: -17.936969757080078
    10. '           ' → logprob: -18.561969757080078

Token 1995: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -20.625
    4. '```' → logprob: -20.75
    5. '...' → logprob: -21.375
    6. '
' → logprob: -21.875
    7. '۱' → logprob: -22.375
    8. '+' → logprob: -22.375
    9. '2' → logprob: -22.8125
    10. '0' → logprob: -23.0

Token 1996: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. 'len' → logprob: -17.125001907348633
    4. '2' → logprob: -17.437501907348633
    5. '   ' → logprob: -17.687501907348633
    6. '0' → logprob: -18.875001907348633
    7. '```' → logprob: -18.875001907348633
    8. '
' → logprob: -18.937501907348633
    9. '  ' → logprob: -20.062501907348633
    10. '...' → logprob: -20.250001907348633

Token 1997: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00534037034958601
    2. ',len' → logprob: -5.255340576171875
    3. ' ,' → logprob: -9.630340576171875
    4. ',length' → logprob: -11.505340576171875
    5. '           ' → logprob: -11.755340576171875
    6. 'len' → logprob: -12.755340576171875
    7. ',self' → logprob: -12.880340576171875
    8. ',p' → logprob: -13.005340576171875
    9. ',n' → logprob: -13.255340576171875
    10. ',next' → logprob: -13.505340576171875

Token 1998: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -3.8889261304575484e-06
    2. ' len' → logprob: -12.875003814697266
    3. '           ' → logprob: -14.000003814697266
    4. '(len' → logprob: -14.875003814697266
    5. '               ' → logprob: -16.625003814697266
    6. '[len' → logprob: -18.500003814697266
    7. '                   ' → logprob: -18.750003814697266
    8. '       ' → logprob: -18.750003814697266
    9. '	len' → logprob: -19.750003814697266
    10. '          ' → logprob: -20.125003814697266

Token 1999: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -7.505351095460355e-05
    2. 'points' → logprob: -9.500075340270996
    3. '	points' → logprob: -16.62507438659668
    4. ' points' → logprob: -17.62507438659668
    5. '(' → logprob: -18.87507438659668
    6. 'Points' → logprob: -19.75007438659668
    7. ')' → logprob: -20.25007438659668
    8. '(
' → logprob: -20.50007438659668
    9. '.points' → logprob: -20.87507438659668
    10. '_points' → logprob: -21.00007438659668

Token 2000: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02977374941110611
    2. '):' → logprob: -3.529773712158203
    3. '           ' → logprob: -11.654773712158203
    4. '):
' → logprob: -12.154773712158203
    5. '):

' → logprob: -13.154773712158203
    6. '               ' → logprob: -13.154773712158203
    7. ')' → logprob: -13.654773712158203
    8. '       ' → logprob: -13.654773712158203
    9. '```' → logprob: -14.029773712158203
    10. '():
' → logprob: -15.029773712158203

Token 2001: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.159660890465602e-05
    2. '           ' → logprob: -11.37507152557373
    3. 'next' → logprob: -11.37507152557373
    4. '              ' → logprob: -11.50007152557373
    5. ' next' → logprob: -12.25007152557373
    6. '```' → logprob: -12.25007152557373
    7. '                ' → logprob: -12.37507152557373
    8. ',' → logprob: -12.50007152557373
    9. '                   ' → logprob: -12.62507152557373
    10. '                
' → logprob: -12.75007152557373

Token 2002: ' next' (ID: 2613)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.06273242831230164
    2. '               ' → logprob: -3.312732458114624
    3. 'next' (adapté à ' next') → logprob: -4.437732219696045
    4. 'length' → logprob: -5.187732219696045
    5. ' segment' → logprob: -6.187732219696045
    6. 'seg' → logprob: -6.187732219696045
    7. '                   ' → logprob: -6.187732219696045
    8. 'distance' → logprob: -8.062732696533203
    9. '   ' → logprob: -8.312732696533203
    10. 'dist' → logprob: -9.437732696533203

Token 2003: '_pos' (ID: 14692)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0037194383330643177
    2. '_' → logprob: -6.128719329833984
    3. '_pos' → logprob: -6.753719329833984
    4. '_token' → logprob: -8.503719329833984
    5. ')' → logprob: -10.128719329833984
    6. '_idxs' → logprob: -11.128719329833984
    7. '```' → logprob: -11.253719329833984
    8. '_b' → logprob: -11.503719329833984
    9. '_)' → logprob: -11.628719329833984
    10. '_index' → logprob: -11.753719329833984

Token 2004: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29838359355926514
    2. ')' → logprob: -2.0483837127685547
    3. '=' → logprob: -2.5483837127685547
    4. ',' → logprob: -3.9233837127685547
    5. ':' → logprob: -4.798383712768555
    6. '               ' → logprob: -5.423383712768555
    7. '                ' → logprob: -5.673383712768555
    8. ' ' → logprob: -5.923383712768555
    9. '<|end|>' → logprob: -6.048383712768555
    10. ' -' → logprob: -6.298383712768555

Token 2005: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.02979191765189171
    2. ' points' → logprob: -3.529791831970215
    3. '(points' → logprob: -10.154791831970215
    4. 'next' → logprob: -13.279791831970215
    5. '	points' → logprob: -15.279791831970215
    6. ' next' → logprob: -15.279791831970215
    7. 'point' → logprob: -16.52979278564453
    8. '```' → logprob: -17.02979278564453
    9. '.points' → logprob: -17.40479278564453
    10. '   ' → logprob: -17.52979278564453

Token 2006: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -1.2664456789934775e-06
    2. '
' → logprob: -14.750000953674316
    3. '```' → logprob: -15.000000953674316
    4. ')' → logprob: -16.125001907348633
    5. '[
' → logprob: -16.375001907348633
    6. ',next' → logprob: -16.875001907348633
    7. '(next' → logprob: -17.250001907348633
    8. '           ' → logprob: -17.625001907348633
    9. ')[' → logprob: -17.750001907348633
    10. '                   ' → logprob: -17.875001907348633

Token 2007: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0015925843035802245
    2. 'next' → logprob: -6.501592636108398
    3. 'idx' → logprob: -10.751592636108398
    4. '[next' → logprob: -11.001592636108398
    5. '```' → logprob: -11.376592636108398
    6. '(next' → logprob: -11.751592636108398
    7. ' next' → logprob: -12.001592636108398
    8. '           ' → logprob: -12.126592636108398
    9. 'Idx' → logprob: -12.376592636108398
    10. '_index' → logprob: -12.751592636108398

Token 2008: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2184104025363922
    2. '               ' → logprob: -2.2184104919433594
    3. ')' → logprob: -2.4684104919433594
    4. ']
' → logprob: -6.968410491943359
    5. ',' → logprob: -7.218410491943359
    6. '):
' → logprob: -8.09341049194336
    7. ']' → logprob: -8.46841049194336
    8. '           ' → logprob: -8.59341049194336
    9. '```' → logprob: -9.71841049194336
    10. '                   ' → logprob: -10.09341049194336

Token 2009: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003716854262165725
    2. ' obstacles' → logprob: -9.250371932983398
    3. '                   ' → logprob: -9.500371932983398
    4. '```' → logprob: -10.000371932983398
    5. '                
' → logprob: -10.375371932983398
    6. 'segment' → logprob: -10.500371932983398
    7. '                ' → logprob: -10.875371932983398
    8. ',' → logprob: -11.250371932983398
    9. 'ob' → logprob: -11.625371932983398
    10. ' if' → logprob: -11.750371932983398

Token 2010: ' if' (ID: 538)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.1457088589668274
    2. '               ' → logprob: -2.6457087993621826
    3. 'length' → logprob: -3.6457087993621826
    4. 'ob' → logprob: -3.6457087993621826
    5. ' segment' → logprob: -5.270709037780762
    6. 'seg' → logprob: -6.145709037780762
    7. 'if' (adapté à ' if') → logprob: -6.645709037780762
    8. 'distance' → logprob: -6.895709037780762
    9. ' obstacles' → logprob: -7.145709037780762
    10. ' length' → logprob: -7.520709037780762

Token 2011: ' next' (ID: 2613)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09906838834285736
    2. ' self' → logprob: -3.0990684032440186
    3. 'b' → logprob: -3.7240684032440186
    4. '               ' → logprob: -4.7240681648254395
    5. 'next' → logprob: -4.9740681648254395
    6. '                   ' → logprob: -5.0990681648254395
    7. ' b' → logprob: -6.9740681648254395
    8. ' next' → logprob: -6.9740681648254395
    9. 'not' → logprob: -7.2240681648254395
    10. '   ' → logprob: -8.974068641662598

Token 2012: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0656747967004776
    2. '_idx' → logprob: -3.1906747817993164
    3. 'pos' → logprob: -4.190674781799316
    4. '_b' → logprob: -7.065674781799316
    5. 'Pos' → logprob: -7.128174781799316
    6. '   ' → logprob: -7.815674781799316
    7. 'b' → logprob: -7.878174781799316
    8. '_' → logprob: -8.190674781799316
    9. '<=' → logprob: -8.315674781799316
    10. 's' → logprob: -8.378174781799316

Token 2013: ' <=' (ID: 5017)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8009913563728333
    2. ' <=' → logprob: -1.4259912967681885
    3. ' >' → logprob: -2.1759912967681885
    4. ' ==' → logprob: -2.3009912967681885
    5. '==' → logprob: -3.3009912967681885
    6. '<=' → logprob: -3.4259912967681885
    7. '-' → logprob: -4.175991535186768
    8. '>' → logprob: -4.425991535186768
    9. '-current' → logprob: -9.17599105834961
    10. '   ' → logprob: -9.67599105834961

Token 2014: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.0206720617134124e-05
    2. ' current' → logprob: -11.50001049041748
    3. '[current' → logprob: -19.625009536743164
    4. '$current' → logprob: -19.875009536743164
    5. '=current' → logprob: -20.375009536743164
    6. '(current' → logprob: -20.750009536743164
    7. 'self' → logprob: -20.750009536743164
    8. '	current' → logprob: -20.750009536743164
    9. '                   ' → logprob: -21.875009536743164
    10. '   ' → logprob: -22.500009536743164

Token 2015: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -2.8087270038668066e-05
    2. 'pos' → logprob: -10.500027656555176
    3. 'Pos' → logprob: -15.750027656555176
    4. 'd' → logprob: -16.750028610229492
    5. 'distance' → logprob: -16.750028610229492
    6. '	pos' → logprob: -17.250028610229492
    7. '_' → logprob: -17.375028610229492
    8. ')' → logprob: -17.750028610229492
    9. '[pos' → logprob: -18.125028610229492
    10. '_positions' → logprob: -18.375028610229492

Token 2016: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3519839644432068
    2. ':' → logprob: -1.3519840240478516
    3. '                   ' → logprob: -3.4769840240478516
    4. '               ' → logprob: -5.601984024047852
    5. ' or' → logprob: -5.851984024047852
    6. ' and' → logprob: -8.726984024047852
    7. '                       ' → logprob: -9.351984024047852
    8. 'and' → logprob: -9.851984024047852
    9. ':return' → logprob: -10.226984024047852
    10. ',' → logprob: -10.476984024047852

Token 2017: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0026714957784861326
    2. ':
' → logprob: -6.377671718597412
    3. ':' → logprob: -7.252671718597412
    4. ' continue' → logprob: -8.877671241760254
    5. ' or' → logprob: -10.627671241760254
    6. '               ' → logprob: -10.877671241760254
    7. '                  ' → logprob: -11.252671241760254
    8. 'continue' → logprob: -11.252671241760254
    9. '                       ' → logprob: -11.502671241760254
    10. ' and' → logprob: -11.752671241760254

Token 2018: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06021345406770706
    2. 'continue' (adapté à ' continue') → logprob: -3.685213565826416
    3. ' continue' → logprob: -3.685213565826416
    4. '                       ' → logprob: -4.810213565826416
    5. '	continue' → logprob: -10.310213088989258
    6. '               ' → logprob: -10.685213088989258
    7. ' ' → logprob: -12.060213088989258
    8. '   ' → logprob: -12.060213088989258
    9. '```' → logprob: -12.310213088989258
    10. '	               ' → logprob: -12.435213088989258

Token 2019: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11389750242233276
    2. '
' → logprob: -2.4888975620269775
    3. '                
' → logprob: -3.7388975620269775
    4. '  
' → logprob: -8.738897323608398
    5. '    
' → logprob: -8.988897323608398
    6. '                    
' → logprob: -9.238897323608398
    7. '                ' → logprob: -9.363897323608398
    8. '                   ' → logprob: -9.863897323608398
    9. '               
' → logprob: -9.988897323608398
    10. ',' → logprob: -10.113897323608398

Token 2020: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02311304397881031
    2. '
' → logprob: -4.023113250732422
    3. '                
' → logprob: -5.523113250732422
    4. '                   ' → logprob: -8.023113250732422
    5. '                ' → logprob: -8.773113250732422
    6. '                    
' → logprob: -9.023113250732422
    7. '```' → logprob: -9.398113250732422
    8. ',' → logprob: -10.398113250732422
    9. ' 
' → logprob: -10.523113250732422
    10. '  
' → logprob: -10.523113250732422

Token 2021: ' if' (ID: 538)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.14367464184761047
    2. '               ' → logprob: -2.643674612045288
    3. 'ob' → logprob: -3.518674612045288
    4. 'length' → logprob: -3.768674612045288
    5. ' segment' → logprob: -5.518674850463867
    6. 'if' (adapté à ' if') → logprob: -6.643674850463867
    7. 'segments' → logprob: -6.768674850463867
    8. ' obstacles' → logprob: -6.893674850463867
    9. 'distance' → logprob: -7.018674850463867
    10. ' length' → logprob: -7.768674850463867

Token 2022: ' b' (ID: 287)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6821762323379517
    2. 'b' → logprob: -0.8071762323379517
    3. ' self' → logprob: -3.807176113128662
    4. '               ' → logprob: -4.557176113128662
    5. ' b' → logprob: -4.807176113128662
    6. '                   ' → logprob: -5.182176113128662
    7. 'not' → logprob: -7.307176113128662
    8. '   ' → logprob: -8.05717658996582
    9. 'next' → logprob: -8.80717658996582
    10. ' not' → logprob: -8.93217658996582

Token 2023: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -8.006006828509271e-05
    2. '_next' → logprob: -10.625080108642578
    3. 'not' → logprob: -12.000080108642578
    4. 'ounced' → logprob: -12.375080108642578
    5. 'ounds' → logprob: -12.375080108642578
    6. 'ounce' → logprob: -12.500080108642578
    7. 'next' → logprob: -12.500080108642578
    8. '>' → logprob: -12.625080108642578
    9. 'ences' → logprob: -12.750080108642578
    10. ''s' → logprob: -12.875080108642578

Token 2024: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -1.1160349458805285e-05
    2. 'used' → logprob: -12.000011444091797
    3. '_allowed' → logprob: -12.625011444091797
    4. 'Used' → logprob: -13.750011444091797
    5. '_USED' → logprob: -15.375011444091797
    6. '   ' → logprob: -16.375011444091797
    7. '<=' → logprob: -17.000011444091797
    8. '```' → logprob: -17.375011444091797
    9. '_enabled' → logprob: -17.500011444091797
    10. '_use' → logprob: -17.750011444091797

Token 2025: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.36542177200317383
    2. '+' → logprob: -1.4904217720031738
    3. ' <' → logprob: -2.615421772003174
    4. ' <=' → logprob: -5.740421772003174
    5. '<' → logprob: -6.115421772003174
    6. '<=' → logprob: -6.740421772003174
    7. ' ==' → logprob: -8.115421295166016
    8. '               ' → logprob: -8.490421295166016
    9. '                   ' → logprob: -8.990421295166016
    10. '==' → logprob: -9.115421295166016

Token 2026: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033308175625279546
    2. '0' → logprob: -8.250332832336426
    3. ' ' → logprob: -9.625332832336426
    4. '(' → logprob: -13.000332832336426
    5. ' (' → logprob: -13.625332832336426
    6. '   ' → logprob: -14.000332832336426
    7. '                   ' → logprob: -15.000332832336426
    8. '+' → logprob: -15.125332832336426
    9. '<=' → logprob: -15.750332832336426
    10. 'not' → logprob: -16.000333786010742

Token 2027: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.888114098226652e-05
    2. '0' → logprob: -9.500088691711426
    3. ' ' → logprob: -11.500088691711426
    4. '<=' → logprob: -13.125088691711426
    5. '(' → logprob: -13.750088691711426
    6. '+' → logprob: -15.000088691711426
    7. '   ' → logprob: -16.000089645385742
    8. 'not' → logprob: -16.875089645385742
    9. ' <=' → logprob: -17.000089645385742
    10. ' (' → logprob: -17.125089645385742

Token 2028: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.014363288879394531
    2. '<=' → logprob: -4.8893632888793945
    3. ' >' → logprob: -5.0143632888793945
    4. '>' → logprob: -9.639363288879395
    5. ' ' → logprob: -12.014363288879395
    6. ')' → logprob: -12.014363288879395
    7. '```' → logprob: -13.139363288879395
    8. ' <' → logprob: -13.639363288879395
    9. ' ≤' → logprob: -13.639363288879395
    10. ' >=' → logprob: -13.764363288879395

Token 2029: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001593195047462359
    2. ' self' → logprob: -8.75015926361084
    3. '               ' → logprob: -14.37515926361084
    4. '                   ' → logprob: -15.62515926361084
    5. '           ' → logprob: -17.000160217285156
    6. '(self' → logprob: -17.625160217285156
    7. '   ' → logprob: -17.750160217285156
    8. '	self' → logprob: -18.500160217285156
    9. '                       ' → logprob: -18.875160217285156
    10. '
' → logprob: -19.000160217285156

Token 2030: '.max' (ID: 11883)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2525257468223572
    2. '.max' → logprob: -1.502525806427002
    3. 'self' → logprob: -8.127525329589844
    4. ' max' → logprob: -8.252525329589844
    5. '_max' → logprob: -10.627525329589844
    6. '	max' → logprob: -11.877525329589844
    7. ':max' → logprob: -13.627525329589844
    8. 'maxlength' → logprob: -13.877525329589844
    9. '
' → logprob: -14.002525329589844
    10. '                   ' → logprob: -14.127525329589844

Token 2031: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -4.36574100604048e-06
    2. 'b' → logprob: -12.375004768371582
    3. 'B' → logprob: -18.500003814697266
    4. '	b' → logprob: -19.500003814697266
    5. ' b' → logprob: -19.750003814697266
    6. '_B' → logprob: -19.875003814697266
    7. '_' → logprob: -19.875003814697266
    8. 's' → logprob: -20.625003814697266
    9. ')' → logprob: -20.750003814697266
    10. ' ' → logprob: -20.750003814697266

Token 2032: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -2.9040898880339228e-05
    2. '_b' → logprob: -11.375028610229492
    3. 'ounce' → logprob: -12.500028610229492
    4. 'onces' → logprob: -13.000028610229492
    5. 'oun' → logprob: -13.125028610229492
    6. 'ouches' → logprob: -13.250028610229492
    7. 'b' → logprob: -13.500028610229492
    8. '_' → logprob: -13.750028610229492
    9. 'ounds' → logprob: -14.000028610229492
    10. 'ences' → logprob: -14.125028610229492

Token 2033: ' +' (ID: 659)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3846665024757385
    2. ':
' → logprob: -1.3846664428710938
    3. ':' → logprob: -2.7596664428710938
    4. '               ' → logprob: -5.884666442871094
    5. ':return' → logprob: -7.134666442871094
    6. '                       ' → logprob: -7.509666442871094
    7. '                  ' → logprob: -7.884666442871094
    8. ' or' → logprob: -8.009666442871094
    9. '                    ' → logprob: -8.259666442871094
    10. '                ' → logprob: -8.634666442871094

Token 2034: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09705257415771484
    2. '1' → logprob: -2.472052574157715
    3. ' ' → logprob: -4.847052574157715
    4. '   ' → logprob: -9.722052574157715
    5. '                   ' → logprob: -10.097052574157715
    6. '               ' → logprob: -10.597052574157715
    7. '           ' → logprob: -10.847052574157715
    8. '                       ' → logprob: -11.597052574157715
    9. ':' → logprob: -11.972052574157715
    10. '+' → logprob: -12.097052574157715

Token 2035: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07893925160169601
    2. '1' → logprob: -2.578939199447632
    3. ' ' → logprob: -9.953939437866211
    4. '   ' → logprob: -14.203939437866211
    5. '-' → logprob: -15.203939437866211
    6. '[' → logprob: -15.953939437866211
    7. '+' → logprob: -16.45393943786621
    8. 'False' → logprob: -16.45393943786621
    9. '
' → logprob: -16.51643943786621
    10. '  ' → logprob: -16.57893943786621

Token 2036: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.19850681722164154
    2. ':' → logprob: -2.3235068321228027
    3. '                   ' → logprob: -2.6985068321228027
    4. '               ' → logprob: -4.573506832122803
    5. ':return' → logprob: -6.448506832122803
    6. '):
' → logprob: -7.073506832122803
    7. ' or' → logprob: -7.448506832122803
    8. ' and' → logprob: -7.948506832122803
    9. 'and' → logprob: -8.323506355285645
    10. ')' → logprob: -8.323506355285645

Token 2037: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -9.9728669738397e-05
    2. ':' → logprob: -9.750100135803223
    3. ':
' → logprob: -11.000100135803223
    4. '               ' → logprob: -11.500100135803223
    5. '                  ' → logprob: -12.500100135803223
    6. '                       ' → logprob: -13.125100135803223
    7. ' continue' → logprob: -13.500100135803223
    8. '                    ' → logprob: -13.500100135803223
    9. '                ' → logprob: -13.750100135803223
    10. '		           ' → logprob: -13.875100135803223

Token 2038: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15754100680351257
    2. 'continue' → logprob: -2.407541036605835
    3. 'break' (adapté à ' break') → logprob: -2.907541036605835
    4. ' continue' → logprob: -7.407540798187256
    5. '                       ' → logprob: -8.282541275024414
    6. ' break' → logprob: -8.657541275024414
    7. '               ' → logprob: -10.032541275024414
    8. '   ' → logprob: -11.282541275024414
    9. '	continue' → logprob: -12.157541275024414
    10. '```' → logprob: -12.157541275024414

Token 2039: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008310305885970592
    2. '                
' → logprob: -5.258310317993164
    3. '
' → logprob: -6.258310317993164
    4. '                   ' → logprob: -7.133310317993164
    5. '                ' → logprob: -9.383310317993164
    6. '  
' → logprob: -9.883310317993164
    7. '                    
' → logprob: -10.008310317993164
    8. '    
' → logprob: -10.008310317993164
    9. '               
' → logprob: -11.008310317993164
    10. '<|end|>' → logprob: -11.258310317993164

Token 2040: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007057403679937124
    2. '
' → logprob: -5.132057189941406
    3. '                
' → logprob: -7.382057189941406
    4. '                   ' → logprob: -8.007057189941406
    5. '    
' → logprob: -10.132057189941406
    6. '  
' → logprob: -10.382057189941406
    7. '                ' → logprob: -11.007057189941406
    8. '                       ' → logprob: -11.132057189941406
    9. ' 
' → logprob: -11.757057189941406
    10. '                    
' → logprob: -11.757057189941406

Token 2041: ' no' (ID: 860)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09177573770284653
    2. ' continue' → logprob: -2.96677565574646
    3. '                   ' → logprob: -3.46677565574646
    4. 'continue' → logprob: -5.841775894165039
    5. '                       ' → logprob: -7.466775894165039
    6. '                ' → logprob: -7.591775894165039
    7. '   ' → logprob: -8.341775894165039
    8. ' ' → logprob: -8.466775894165039
    9. '                 ' → logprob: -9.341775894165039
    10. ' ' → logprob: -9.591775894165039

Token 2042: ' more' (ID: 945)
  Prédit: ' more'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' more' → logprob: -0.2960539758205414
    2. 't' → logprob: -1.9210540056228638
    3. '               ' → logprob: -3.671053886413574
    4. ' further' → logprob: -3.671053886413574
    5. '                   ' → logprob: -4.546053886413574
    6. ' ' → logprob: -4.671053886413574
    7. 'more' → logprob: -4.796053886413574
    8. '                ' → logprob: -5.296053886413574
    9. ' continue' → logprob: -5.671053886413574
    10. '
' → logprob: -5.796053886413574

Token 2043: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6597359776496887
    2. ' b' → logprob: -0.7847359776496887
    3. ' than' → logprob: -4.534736156463623
    4. '+' → logprob: -5.534736156463623
    5. ' +' → logprob: -5.534736156463623
    6. ' more' → logprob: -6.284736156463623
    7. ' allowed' → logprob: -7.159736156463623
    8. ' available' → logprob: -7.534736156463623
    9. '                   ' → logprob: -7.784736156463623
    10. 'than' → logprob: -7.784736156463623

Token 2044: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -0.02546135149896145
    2. 'reak' → logprob: -4.150461196899414
    3. 'r' → logprob: -5.400461196899414
    4. '```' → logprob: -6.900461196899414
    5. ')' → logprob: -7.400461196899414
    6. 'u' → logprob: -7.525461196899414
    7. 'ounds' → logprob: -7.775461196899414
    8. 'eyond' → logprob: -8.150461196899414
    9. '``' → logprob: -8.525461196899414
    10. 'ounce' → logprob: -8.525461196899414

Token 2045: ' allowed' (ID: 9279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04217896983027458
    2. '
' → logprob: -3.6671788692474365
    3. '                
' → logprob: -4.417179107666016
    4. '                   ' → logprob: -6.167179107666016
    5. '<|end|>' → logprob: -7.667179107666016
    6. '                    
' → logprob: -7.917179107666016
    7. '    
' → logprob: -8.917179107666016
    8. '                        
' → logprob: -9.292179107666016
    9. '  
' → logprob: -9.417179107666016
    10. '                ' → logprob: -9.417179107666016

Token 2046: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0063482229597866535
    2. '                   ' → logprob: -6.006348133087158
    3. '                
' → logprob: -6.256348133087158
    4. '
' → logprob: -6.381348133087158
    5. '                       ' → logprob: -10.006348609924316
    6. '                ' → logprob: -10.006348609924316
    7. '                    
' → logprob: -10.381348609924316
    8. '    
' → logprob: -10.631348609924316
    9. '           ' → logprob: -10.756348609924316
    10. '  
' → logprob: -10.881348609924316

Token 2047: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011337858159095049
    2. '
' → logprob: -6.876133918762207
    3. '                
' → logprob: -10.001133918762207
    4. '                   ' → logprob: -10.376133918762207
    5. '			' → logprob: -12.251133918762207
    6. '                ' → logprob: -12.251133918762207
    7. ' 
' → logprob: -13.001133918762207
    8. '  
' → logprob: -13.251133918762207
    9. '    
' → logprob: -13.501133918762207
    10. '```' → logprob: -13.626133918762207

Token 2048: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09140731394290924
    2. '                   ' → logprob: -3.216407299041748
    3. ' if' → logprob: -3.341407299041748
    4. 'if' → logprob: -4.716407299041748
    5. '
' → logprob: -7.216407299041748
    6. '                       ' → logprob: -7.466407299041748
    7. '                ' → logprob: -7.716407299041748
    8. ' next' → logprob: -8.716407775878906
    9. '                
' → logprob: -8.716407775878906
    10. '           ' → logprob: -8.841407775878906

Token 2049: ' Get' (ID: 2942)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.27030855417251587
    2. 'segment' → logprob: -1.520308494567871
    3. 'if' → logprob: -4.520308494567871
    4. 'ob' → logprob: -5.270308494567871
    5. 'length' → logprob: -6.770308494567871
    6. ' segment' → logprob: -7.520308494567871
    7. 'segments' → logprob: -9.270308494567871
    8. ' if' → logprob: -9.395308494567871
    9. 'distance' → logprob: -9.895308494567871
    10. ' obstacles' → logprob: -10.145308494567871

Token 2050: ' obstacles' (ID: 46430)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.3882656991481781
    2. ' obstacles' → logprob: -1.2632657289505005
    3. 'self' → logprob: -3.888265609741211
    4. '               ' → logprob: -4.888265609741211
    5. ' self' → logprob: -5.638265609741211
    6. ' ob' → logprob: -5.888265609741211
    7. '                   ' → logprob: -6.763265609741211
    8. '_ob' → logprob: -7.513265609741211
    9. '	ob' → logprob: -7.513265609741211
    10. '(ob' → logprob: -8.013265609741211

Token 2051: ' between' (ID: 2870)
  Prédit: '_section'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_section' → logprob: -0.30615463852882385
    2. '_in' → logprob: -1.4311546087265015
    3. '               ' → logprob: -4.431154727935791
    4. 'in' → logprob: -5.556154727935791
    5. '_segment' → logprob: -6.056154727935791
    6. ' =' → logprob: -6.306154727935791
    7. 'section' → logprob: -6.806154727935791
    8. '                   ' → logprob: -7.056154727935791
    9. '_between' → logprob: -7.056154727935791
    10. '           ' → logprob: -7.181154727935791

Token 2052: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0013624972198158503
    2. ' current' → logprob: -6.626362323760986
    3. 'points' → logprob: -11.126362800598145
    4. '(current' → logprob: -11.251362800598145
    5. '                   ' → logprob: -12.251362800598145
    6. '               ' → logprob: -13.501362800598145
    7. '[current' → logprob: -13.626362800598145
    8. '	current' → logprob: -15.376362800598145
    9. '           ' → logprob: -15.501362800598145
    10. 'cur' → logprob: -15.626362800598145

Token 2053: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0013619012897834182
    2. 'pos' → logprob: -6.876361846923828
    3. ' _' → logprob: -9.626361846923828
    4. '```' → logprob: -9.751361846923828
    5. '_positions' → logprob: -9.751361846923828
    6. 'current' → logprob: -10.251361846923828
    7. 'position' → logprob: -11.001361846923828
    8. '
' → logprob: -11.001361846923828
    9. '_' → logprob: -11.751361846923828
    10. 'positions' → logprob: -11.751361846923828

Token 2054: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.3107735514640808
    2. ' and' → logprob: -1.4357736110687256
    3. '               ' → logprob: -4.1857733726501465
    4. ',' → logprob: -4.6857733726501465
    5. '+' → logprob: -5.5607733726501465
    6. '                   ' → logprob: -8.310773849487305
    7. '```' → logprob: -8.935773849487305
    8. '(current' → logprob: -9.060773849487305
    9. ',current' → logprob: -9.185773849487305
    10. '                ' → logprob: -9.560773849487305

Token 2055: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0014699879102408886
    2. ' next' → logprob: -6.75147008895874
    3. 'points' → logprob: -8.126469612121582
    4. ' points' → logprob: -13.251469612121582
    5. '(next' → logprob: -14.001469612121582
    6. '	next' → logprob: -14.876469612121582
    7. '   ' → logprob: -15.001469612121582
    8. '[next' → logprob: -15.376469612121582
    9. 'current' → logprob: -15.876469612121582
    10. '```' → logprob: -16.1264705657959

Token 2056: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -7.32654589228332e-05
    2. '_idx' → logprob: -10.250073432922363
    3. 'pos' → logprob: -10.375073432922363
    4. '```' → logprob: -13.250073432922363
    5. '\' → logprob: -13.875073432922363
    6. '                   ' → logprob: -14.125073432922363
    7. '               ' → logprob: -14.500073432922363
    8. 'Pos' → logprob: -14.750073432922363
    9. ' _' → logprob: -15.125073432922363
    10. '
' → logprob: -15.125073432922363

Token 2057: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003640107112005353
    2. '                
' → logprob: -6.628640174865723
    3. ' obstacles' → logprob: -6.878640174865723
    4. ',' → logprob: -7.628640174865723
    5. 'ob' → logprob: -8.503640174865723
    6. '```' → logprob: -9.003640174865723
    7. ':' → logprob: -9.503640174865723
    8. '(ob' → logprob: -9.628640174865723
    9. '                   ' → logprob: -9.753640174865723
    10. '                ' → logprob: -10.128640174865723

Token 2058: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007487560505978763
    2. '                
' → logprob: -7.625748634338379
    3. '                   ' → logprob: -10.000748634338379
    4. ',' → logprob: -10.000748634338379
    5. ':' → logprob: -10.000748634338379
    6. '```' → logprob: -10.125748634338379
    7. '                ' → logprob: -10.375748634338379
    8. '              ' → logprob: -11.250748634338379
    9. '               
' → logprob: -11.875748634338379
    10. '			' → logprob: -12.500748634338379

Token 2059: ' obstacles' (ID: 46430)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.19536133110523224
    2. '               ' → logprob: -2.945361375808716
    3. 'obs' → logprob: -3.070361375808716
    4. ' obstacles' → logprob: -3.320361375808716
    5. ' obs' → logprob: -3.820361375808716
    6. 'segment' → logprob: -4.445361137390137
    7. ' segment' → logprob: -5.945361137390137
    8. ' ob' → logprob: -6.820361137390137
    9. 'next' → logprob: -6.945361137390137
    10. 'inter' → logprob: -7.445361137390137

Token 2060: '_section' (ID: 41389)
  Prédit: '_section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_section' → logprob: -0.374904602766037
    2. '_in' → logprob: -1.2499046325683594
    3. '_segment' → logprob: -4.499904632568359
    4. '_between' → logprob: -4.624904632568359
    5. ' =' → logprob: -5.624904632568359
    6. '               ' → logprob: -8.37490463256836
    7. '_to' → logprob: -8.49990463256836
    8. 'section' → logprob: -8.49990463256836
    9. '_subset' → logprob: -8.62490463256836
    10. 'in' → logprob: -8.87490463256836

Token 2061: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1006765365600586
    2. '=' → logprob: -2.3506765365600586
    3. '               ' → logprob: -8.225676536560059
    4. '                   ' → logprob: -8.975676536560059
    5. ':' → logprob: -10.100676536560059
    6. '           ' → logprob: -10.850676536560059
    7. '                ' → logprob: -12.725676536560059
    8. '                       ' → logprob: -13.100676536560059
    9. '=
' → logprob: -13.225676536560059
    10. '                    ' → logprob: -13.725676536560059

Token 2062: ' self' (ID: 1051)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.5762337446212769
    2. 'self' → logprob: -0.8262337446212769
    3. ' self' → logprob: -8.826233863830566
    4. '[o' → logprob: -9.576233863830566
    5. ' [' → logprob: -10.201233863830566
    6. '(self' → logprob: -11.576233863830566
    7. '[' → logprob: -12.076233863830566
    8. '   ' → logprob: -12.201233863830566
    9. '[
' → logprob: -12.326233863830566
    10. '           ' → logprob: -12.451233863830566

Token 2063: '.ob' (ID: 30768)
  Prédit: '.ob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ob' → logprob: -0.4747076630592346
    2. 'ob' → logprob: -0.9747076630592346
    3. '_ob' → logprob: -7.47470760345459
    4. '[' → logprob: -10.59970760345459
    5. '	ob' → logprob: -11.47470760345459
    6. '[
' → logprob: -11.97470760345459
    7. ''ob' → logprob: -12.47470760345459
    8. 'self' → logprob: -12.72470760345459
    9. '   ' → logprob: -12.72470760345459
    10. '[self' → logprob: -13.09970760345459

Token 2064: 'stacles' (ID: 143593)
  Prédit: 'stacles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stacles' → logprob: -0.00021307668066583574
    2. 'st' → logprob: -8.625212669372559
    3. 's' → logprob: -10.875212669372559
    4. '[' → logprob: -11.500212669372559
    5. 'stances' → logprob: -13.125212669372559
    6. 'stacle' → logprob: -14.500212669372559
    7. ' obstacles' → logprob: -15.125212669372559
    8. 'ject' → logprob: -15.500212669372559
    9. '{' → logprob: -15.750212669372559
    10. '#' → logprob: -15.750212669372559

Token 2065: '_in' (ID: 2267)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10629483312368393
    2. '                   ' → logprob: -2.856294870376587
    3. ' if' → logprob: -4.481294631958008
    4. '[' → logprob: -4.856294631958008
    5. 'if' → logprob: -4.856294631958008
    6. '           ' → logprob: -5.481294631958008
    7. '[
' → logprob: -5.606294631958008
    8. '
' → logprob: -6.481294631958008
    9. '                
' → logprob: -6.856294631958008
    10. '_between' → logprob: -6.981294631958008

Token 2066: '_segment' (ID: 71041)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.26209476590156555
    2. '(current' → logprob: -2.387094736099243
    3. 'segment' → logprob: -2.512094736099243
    4. '_segment' → logprob: -2.887094736099243
    5. 'section' → logprob: -7.637094974517822
    6. '_current' → logprob: -8.137094497680664
    7. ' current' → logprob: -8.512094497680664
    8. '_section' → logprob: -8.512094497680664
    9. 'range' → logprob: -9.012094497680664
    10. 'between' → logprob: -9.262094497680664

Token 2067: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.0011785586830228567
    2. 'current' → logprob: -6.751178741455078
    3. '(' → logprob: -11.876178741455078
    4. ' current' → logprob: -15.126178741455078
    5. '(
' → logprob: -15.501178741455078
    6. ',current' → logprob: -16.001178741455078
    7. '```' → logprob: -16.126178741455078
    8. '[current' → logprob: -16.126178741455078
    9. '   ' → logprob: -16.376178741455078
    10. ' (' → logprob: -16.501178741455078

Token 2068: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0001625379954930395
    2. 'pos' → logprob: -8.750162124633789
    3. 'Pos' → logprob: -13.625162124633789
    4. '_positions' → logprob: -14.375162124633789
    5. '_idx' → logprob: -14.750162124633789
    6. '```' → logprob: -15.000162124633789
    7. '
' → logprob: -15.250162124633789
    8. 's' → logprob: -15.875162124633789
    9. '_p' → logprob: -16.00016212463379
    10. '_' → logprob: -16.25016212463379

Token 2069: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12706364691257477
    2. ',next' → logprob: -2.127063751220703
    3. ' ,' → logprob: -9.252063751220703
    4. '[next' → logprob: -11.002063751220703
    5. ',
' → logprob: -11.502063751220703
    6. '(next' → logprob: -12.002063751220703
    7. 'next' → logprob: -13.252063751220703
    8. '           ' → logprob: -13.752063751220703
    9. '               ' → logprob: -14.127063751220703
    10. '                   ' → logprob: -14.127063751220703

Token 2070: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0015023599844425917
    2. ' next' → logprob: -6.501502513885498
    3. '[next' → logprob: -17.251502990722656
    4. '                   ' → logprob: -17.626502990722656
    5. '	next' → logprob: -17.876502990722656
    6. '(next' → logprob: -18.126502990722656
    7. '_next' → logprob: -18.751502990722656
    8. '               ' → logprob: -19.751502990722656
    9. '.next' → logprob: -20.751502990722656
    10. 'Next' → logprob: -20.876502990722656

Token 2071: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0007129086880013347
    2. 'pos' → logprob: -7.250712871551514
    3. 'Pos' → logprob: -13.875713348388672
    4. 'next' → logprob: -14.500713348388672
    5. 'ob' → logprob: -14.750713348388672
    6. '_idx' → logprob: -14.875713348388672
    7. '	pos' → logprob: -16.125713348388672
    8. 'posit' → logprob: -16.250713348388672
    9. '```' → logprob: -16.250713348388672
    10. 's' → logprob: -17.125713348388672

Token 2072: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6693112254142761
    2. '               ' → logprob: -0.9193112254142761
    3. ')' → logprob: -2.419311285018921
    4. ')
' → logprob: -9.0443115234375
    5. '                   ' → logprob: -11.2943115234375
    6. '):
' → logprob: -11.4193115234375
    7. ')

' → logprob: -11.7943115234375
    8. '           ' → logprob: -12.4193115234375
    9. ')
/' → logprob: -14.0443115234375
    10. '              ' → logprob: -14.1693115234375

Token 2073: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00014823723176959902
    2. '
' → logprob: -9.500147819519043
    3. '                
' → logprob: -9.750147819519043
    4. '                   ' → logprob: -12.000147819519043
    5. '              ' → logprob: -13.250147819519043
    6. '```' → logprob: -13.750147819519043
    7. '                ' → logprob: -13.875147819519043
    8. '           ' → logprob: -13.875147819519043
    9. '<|end|>' → logprob: -14.375147819519043
    10. 'if' → logprob: -14.375147819519043

Token 2074: ' length' (ID: 5517)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001497006742283702
    2. 'if' → logprob: -6.6264967918396
    3. ' if' → logprob: -8.751497268676758
    4. '                   ' → logprob: -11.501497268676758
    5. '           ' → logprob: -14.251497268676758
    6. '
' → logprob: -14.376497268676758
    7. '                
' → logprob: -15.001497268676758
    8. '              ' → logprob: -15.126497268676758
    9. '```' → logprob: -15.376497268676758
    10. '                ' → logprob: -15.501497268676758

Token 2075: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.160742849111557
    2. '=' → logprob: -1.9107428789138794
    3. ':' → logprob: -8.78574275970459
    4. '               ' → logprob: -8.91074275970459
    5. '                   ' → logprob: -9.78574275970459
    6. ')' → logprob: -9.91074275970459
    7. '```' → logprob: -10.28574275970459
    8. ',' → logprob: -10.66074275970459
    9. '                ' → logprob: -10.66074275970459
    10. '>' → logprob: -12.16074275970459

Token 2076: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.12694385647773743
    2. ' next' → logprob: -2.126943826675415
    3. '(next' → logprob: -11.376943588256836
    4. '	next' → logprob: -12.501943588256836
    5. '[next' → logprob: -14.876943588256836
    6. '_next' → logprob: -16.376943588256836
    7. '   ' → logprob: -16.626943588256836
    8. '.next' → logprob: -16.876943588256836
    9. 'int' → logprob: -17.001943588256836
    10. 'Next' → logprob: -17.751943588256836

Token 2077: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.1637164789135568e-05
    2. 'pos' → logprob: -12.125011444091797
    3. '_idx' → logprob: -12.375011444091797
    4. 'next' → logprob: -13.625011444091797
    5. 'Pos' → logprob: -14.750011444091797
    6. '(next' → logprob: -16.500011444091797
    7. '_next' → logprob: -16.875011444091797
    8. '   ' → logprob: -16.875011444091797
    9. '[next' → logprob: -17.375011444091797
    10. '+' → logprob: -17.500011444091797

Token 2078: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.024424651637673378
    2. '               ' → logprob: -4.3994245529174805
    3. '-' → logprob: -4.7744245529174805
    4. '                   ' → logprob: -6.6494245529174805
    5. ')' → logprob: -7.5244245529174805
    6. '                ' → logprob: -7.8994245529174805
    7. '-length' → logprob: -7.8994245529174805
    8. '-current' → logprob: -9.27442455291748
    9. '           ' → logprob: -9.39942455291748
    10. '              ' → logprob: -9.64942455291748

Token 2079: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.002476016292348504
    2. ' current' → logprob: -6.002476215362549
    3. '(current' → logprob: -16.12747573852539
    4. '=current' → logprob: -16.75247573852539
    5. '[current' → logprob: -16.87747573852539
    6. '_current' → logprob: -17.12747573852539
    7. '                   ' → logprob: -17.25247573852539
    8. '$current' → logprob: -17.50247573852539
    9. '.current' → logprob: -18.00247573852539
    10. '               ' → logprob: -18.62747573852539

Token 2080: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0019469641847535968
    2. 'pos' → logprob: -6.251946926116943
    3. 'Pos' → logprob: -11.001947402954102
    4. '_idx' → logprob: -13.751947402954102
    5. '```' → logprob: -15.126947402954102
    6. 'idx' → logprob: -15.626947402954102
    7. '	pos' → logprob: -17.1269474029541
    8. 'posit' → logprob: -17.2519474029541
    9. ' Pos' → logprob: -17.3769474029541
    10. 'user' → logprob: -17.8769474029541

Token 2081: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.627176768844947e-05
    2. '
' → logprob: -10.125096321105957
    3. '                
' → logprob: -10.250096321105957
    4. '                   ' → logprob: -11.875096321105957
    5. '```' → logprob: -12.750096321105957
    6. '<|end|>' → logprob: -12.750096321105957
    7. '                ' → logprob: -13.625096321105957
    8. ',' → logprob: -13.625096321105957
    9. '			' → logprob: -13.750096321105957
    10. '           ' → logprob: -13.875096321105957

Token 2082: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.339278580620885e-06
    2. '                   ' → logprob: -14.000001907348633
    3. '```' → logprob: -14.750001907348633
    4. '           ' → logprob: -14.875001907348633
    5. '              ' → logprob: -15.500001907348633
    6. 'if' → logprob: -15.625001907348633
    7. '                
' → logprob: -15.625001907348633
    8. '                ' → logprob: -16.625001907348633
    9. '       ' → logprob: -16.875001907348633
    10. ' if' → logprob: -17.125001907348633

Token 2083: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2534530460834503
    2. 'if' (adapté à ' if') → logprob: -1.503453016281128
    3. ' if' → logprob: -6.503453254699707
    4. '                   ' → logprob: -10.753453254699707
    5. '```' → logprob: -14.503453254699707
    6. '           ' → logprob: -14.628453254699707
    7. '   ' → logprob: -14.878453254699707
    8. '#' → logprob: -15.128453254699707
    9. '              ' → logprob: -15.253453254699707
    10. '                ' → logprob: -15.378453254699707

Token 2084: ' not' (ID: 625)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023578189313411713
    2. ' self' → logprob: -3.77357816696167
    3. '               ' → logprob: -8.898578643798828
    4. '                   ' → logprob: -9.023578643798828
    5. 'not' → logprob: -10.023578643798828
    6. 'length' → logprob: -11.148578643798828
    7. ' not' → logprob: -11.898578643798828
    8. '   ' → logprob: -12.523578643798828
    9. '                       ' → logprob: -13.398578643798828
    10. '(self' → logprob: -13.398578643798828

Token 2085: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009243228123523295
    2. ' self' → logprob: -7.000924110412598
    3. '                   ' → logprob: -12.125924110412598
    4. '               ' → logprob: -12.500924110412598
    5. '           ' → logprob: -13.875924110412598
    6. '   ' → logprob: -14.000924110412598
    7. '(self' → logprob: -14.250924110412598
    8. '                       ' → logprob: -15.000924110412598
    9. '
' → logprob: -15.750924110412598
    10. '```' → logprob: -15.750924110412598

Token 2086: '.can' (ID: 46002)
  Prédit: '.can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.can' → logprob: -0.0021970022935420275
    2. 'can' → logprob: -6.127196788787842
    3. '_can' → logprob: -12.502197265625
    4. ' .' → logprob: -12.627197265625
    5. ' can' → logprob: -12.877197265625
    6. '	can' → logprob: -14.002197265625
    7. '.' → logprob: -14.752197265625
    8. '.is' → logprob: -15.752197265625
    9. '
' → logprob: -15.752197265625
    10. '   ' → logprob: -15.752197265625

Token 2087: '_make' (ID: 70070)
  Prédit: '_make'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_make' → logprob: -4.894790981779806e-05
    2. 'make' → logprob: -10.000048637390137
    3. '_can' → logprob: -12.875048637390137
    4. 'Make' → logprob: -15.125048637390137
    5. ' _' → logprob: -15.375048637390137
    6. '_have' → logprob: -15.750048637390137
    7. '```' → logprob: -16.750049591064453
    8. ' make' → logprob: -17.000049591064453
    9. '\' → logprob: -17.250049591064453
    10. '_use' → logprob: -17.500049591064453

Token 2088: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.00033796546631492674
    2. 'segment' → logprob: -8.000337600708008
    3. 'Segment' → logprob: -14.500337600708008
    4. '```' → logprob: -14.875337600708008
    5. '_segments' → logprob: -15.000337600708008
    6. '   ' → logprob: -15.250337600708008
    7. '
' → logprob: -15.375337600708008
    8. '_seg' → logprob: -15.875337600708008
    9. 'seg' → logprob: -16.500337600708008
    10. '  ' → logprob: -16.625337600708008

Token 2089: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.004035895224660635
    2. 'length' → logprob: -5.629035949707031
    3. '(' → logprob: -8.629035949707031
    4. ' length' → logprob: -8.879035949707031
    5. ' (' → logprob: -9.254035949707031
    6. ',length' → logprob: -12.254035949707031
    7. '(current' → logprob: -12.379035949707031
    8. '(ob' → logprob: -12.379035949707031
    9. '[length' → logprob: -13.129035949707031
    10. '(
' → logprob: -13.254035949707031

Token 2090: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043984793592244387
    2. ',current' → logprob: -8.750439643859863
    3. '                   ' → logprob: -8.875439643859863
    4. ',
' → logprob: -10.375439643859863
    5. '               ' → logprob: -10.625439643859863
    6. '                       ' → logprob: -11.000439643859863
    7. ' ,' → logprob: -11.375439643859863
    8. ',next' → logprob: -11.625439643859863
    9. '                  ' → logprob: -11.750439643859863
    10. ',length' → logprob: -12.000439643859863

Token 2091: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.20141646265983582
    2. 'initial' → logprob: -1.7014164924621582
    3. '(initial' → logprob: -13.701416015625
    4. '	initial' → logprob: -14.326416015625
    5. ' ' → logprob: -15.326416015625
    6. '```' → logprob: -15.576416015625
    7. '            ' → logprob: -15.826416015625
    8. '                ' → logprob: -15.951416015625
    9. '.initial' → logprob: -15.951416015625
    10. '               ' → logprob: -16.201416015625

Token 2092: '_speed' (ID: 43208)
  Prédit: '_speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_speed' → logprob: -3.5597102396423e-05
    2. 'speed' → logprob: -10.250035285949707
    3. 'Speed' → logprob: -15.750035285949707
    4. ' speed' → logprob: -16.875036239624023
    5. '_SPEED' → logprob: -17.625036239624023
    6. '```' → logprob: -18.250036239624023
    7. '_velocity' → logprob: -18.250036239624023
    8. '_s' → logprob: -18.500036239624023
    9. '	speed' → logprob: -19.125036239624023
    10. '_score' → logprob: -19.375036239624023

Token 2093: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10834740847349167
    2. '):
' → logprob: -2.7333474159240723
    3. '                   ' → logprob: -3.6083474159240723
    4. '               ' → logprob: -4.858347415924072
    5. '):' → logprob: -6.483347415924072
    6. '                       ' → logprob: -7.108347415924072
    7. ')' → logprob: -9.233346939086914
    8. '                  ' → logprob: -9.483346939086914
    9. '                      ' → logprob: -9.983346939086914
    10. '                    ' → logprob: -10.483346939086914

Token 2094: ' obstacles' (ID: 46430)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -9.090760431718081e-05
    2. ' obstacles' → logprob: -9.750090599060059
    3. '               ' → logprob: -10.625090599060059
    4. '                   ' → logprob: -12.750090599060059
    5. '           ' → logprob: -13.125090599060059
    6. '                       ' → logprob: -14.125090599060059
    7. 'obs' → logprob: -14.250090599060059
    8. '       ' → logprob: -14.750090599060059
    9. '   ' → logprob: -15.000090599060059
    10. '	ob' → logprob: -15.250090599060059

Token 2095: '_section' (ID: 41389)
  Prédit: '_section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_section' → logprob: -0.0036322653759270906
    2. '               ' → logprob: -6.253632068634033
    3. 'Section' → logprob: -6.878632068634033
    4. 'ob' → logprob: -8.628632545471191
    5. '_ob' → logprob: -9.128632545471191
    6. ')' → logprob: -9.253632545471191
    7. '                   ' → logprob: -9.253632545471191
    8. '           ' → logprob: -10.503632545471191
    9. ' obstacles' → logprob: -10.628632545471191
    10. 's' → logprob: -10.878632545471191

Token 2096: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.010838878341019154
    2. '):' → logprob: -5.135838985443115
    3. '                   ' → logprob: -5.635838985443115
    4. '               ' → logprob: -6.760838985443115
    5. ':
' → logprob: -9.635838508605957
    6. '):
' → logprob: -10.135838508605957
    7. ')' → logprob: -10.260838508605957
    8. ':' → logprob: -10.885838508605957
    9. '                       ' → logprob: -11.760838508605957
    10. '           ' → logprob: -13.760838508605957

Token 2097: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011356930481269956
    2. ':
' → logprob: -7.25113582611084
    3. ':' → logprob: -7.87613582611084
    4. '                       ' → logprob: -10.12613582611084
    5. '                    ' → logprob: -13.12613582611084
    6. '                  ' → logprob: -13.25113582611084
    7. '               ' → logprob: -14.62613582611084
    8. ',' → logprob: -14.87613582611084
    9. '                           ' → logprob: -15.00113582611084
    10. '):
' → logprob: -15.12613582611084

Token 2098: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04399282485246658
    2. 'continue' (adapté à ' continue') → logprob: -3.293992757797241
    3. '                       ' → logprob: -5.16899299621582
    4. ' continue' → logprob: -8.41899299621582
    5. '	continue' → logprob: -11.79399299621582
    6. '               ' → logprob: -12.41899299621582
    7. 'break' → logprob: -12.79399299621582
    8. '				' → logprob: -13.41899299621582
    9. '   ' → logprob: -13.66899299621582
    10. '
' → logprob: -13.79399299621582

Token 2099: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009220578707754612
    2. '
' → logprob: -5.134220600128174
    3. '                
' → logprob: -5.759220600128174
    4. '                   ' → logprob: -9.634220123291016
    5. '                    
' → logprob: -10.759220123291016
    6. '    
' → logprob: -11.509220123291016
    7. '           ' → logprob: -12.009220123291016
    8. '  
' → logprob: -12.134220123291016
    9. ')
' → logprob: -12.509220123291016
    10. ',
' → logprob: -12.634220123291016

Token 2100: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011531977215781808
    2. '
' → logprob: -7.251152992248535
    3. '                
' → logprob: -7.751152992248535
    4. '                   ' → logprob: -12.626152992248535
    5. '           ' → logprob: -13.376152992248535
    6. ')' → logprob: -13.626152992248535
    7. '               
' → logprob: -13.626152992248535
    8. '                    
' → logprob: -13.751152992248535
    9. '              ' → logprob: -14.001152992248535
    10. '                ' → logprob: -14.001152992248535

Token 2101: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.052155751734972
    2. '               ' → logprob: -3.0521557331085205
    3. '                       ' → logprob: -6.1771559715271
    4. 'queue' → logprob: -6.9271559715271
    5. ' queue' → logprob: -7.8021559715271
    6. '                ' → logprob: -10.552155494689941
    7. '                           ' → logprob: -11.052155494689941
    8. '                  ' → logprob: -11.677155494689941
    9. '                    ' → logprob: -12.052155494689941
    10. '           ' → logprob: -12.052155494689941

Token 2102: ' If' (ID: 1843)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.36937204003334045
    2. 'if' → logprob: -1.744372010231018
    3. '               ' → logprob: -2.1193721294403076
    4. ' queue' → logprob: -4.7443718910217285
    5. ' if' → logprob: -5.4943718910217285
    6. '                   ' → logprob: -6.9943718910217285
    7. '   ' → logprob: -9.619372367858887
    8. '           ' → logprob: -9.744372367858887
    9. '#' → logprob: -10.119372367858887
    10. '
' → logprob: -11.244372367858887

Token 2103: ' next' (ID: 2613)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0011574029922485
    2. ' b' → logprob: -1.6261574029922485
    3. '(b' → logprob: -2.001157283782959
    4. ' (' → logprob: -2.251157283782959
    5. ' next' → logprob: -2.376157283782959
    6. 'next' → logprob: -2.876157283782959
    7. '(next' → logprob: -3.501157283782959
    8. '(' → logprob: -4.376157283782959
    9. '(
' → logprob: -7.626157283782959
    10. '   ' → logprob: -7.751157283782959

Token 2104: '_pos' (ID: 14692)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.08911503106355667
    2. '_pos' → logprob: -2.4641151428222656
    3. 'pos' → logprob: -9.964115142822266
    4. '```' → logprob: -10.964115142822266
    5. 'Pos' → logprob: -11.214115142822266
    6. 'idx' → logprob: -11.464115142822266
    7. '_idxs' → logprob: -11.714115142822266
    8. 'Idx' → logprob: -11.964115142822266
    9. '_index' → logprob: -11.964115142822266
    10. ')' → logprob: -12.089115142822266

Token 2105: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7785462737083435
    2. '==' → logprob: -0.9035462737083435
    3. ',' → logprob: -2.2785463333129883
    4. ')' → logprob: -4.653546333312988
    5. '<=' → logprob: -5.153546333312988
    6. ' <=' → logprob: -5.278546333312988
    7. ' not' → logprob: -5.528546333312988
    8. '               ' → logprob: -6.778546333312988
    9. ')==' → logprob: -6.778546333312988
    10. ' ,' → logprob: -7.278546333312988

Token 2106: ' target' (ID: 3783)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.035174328833818436
    2. 'points' → logprob: -3.7851743698120117
    3. ' self' → logprob: -4.535174369812012
    4. ' points' → logprob: -6.785174369812012
    5. 'len' → logprob: -13.910174369812012
    6. '[self' → logprob: -15.285174369812012
    7. '(self' → logprob: -15.535174369812012
    8. 'point' → logprob: -15.660174369812012
    9. '(points' → logprob: -15.910174369812012
    10. '0' → logprob: -15.910174369812012

Token 2107: '(d' (ID: 2572)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7913194894790649
    2. ':' → logprob: -1.791319489479065
    3. '==' → logprob: -2.0413193702697754
    4. ' and' → logprob: -2.2913193702697754
    5. '                   ' → logprob: -2.2913193702697754
    6. ' ==' → logprob: -3.6663193702697754
    7. 'and' → logprob: -4.791319370269775
    8. '                       ' → logprob: -5.541319370269775
    9. '               ' → logprob: -6.041319370269775
    10. ')' → logprob: -6.166319370269775

Token 2108: '),' (ID: 936)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2578403949737549
    2. '):' → logprob: -1.5078403949737549
    3. ')' → logprob: -5.257840156555176
    4. '),' → logprob: -8.007840156555176
    5. '):

' → logprob: -8.632840156555176
    6. 'istance' → logprob: -9.382840156555176
    7. '):
' → logprob: -9.632840156555176
    8. '   ' → logprob: -11.757840156555176
    9. ':
' → logprob: -13.007840156555176
    10. ':' → logprob: -13.007840156555176

Token 2109: ' we' (ID: 581)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.1933770775794983
    2. ' if' → logprob: -2.5683770179748535
    3. '                   ' → logprob: -2.9433770179748535
    4. 'queue' → logprob: -3.4433770179748535
    5. 'if' → logprob: -4.3183770179748535
    6. '                       ' → logprob: -7.0683770179748535
    7. '(queue' → logprob: -9.193377494812012
    8. '   ' → logprob: -10.193377494812012
    9. '               ' → logprob: -10.193377494812012
    10. '	queue' → logprob: -10.443377494812012

Token 2110: ' can' (ID: 665)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9329224228858948
    2. 'if' → logprob: -1.43292236328125
    3. ' if' → logprob: -1.93292236328125
    4. ' return' → logprob: -2.55792236328125
    5. 'return' → logprob: -2.68292236328125
    6. '               ' → logprob: -3.05792236328125
    7. '                       ' → logprob: -3.80792236328125
    8. '
' → logprob: -6.18292236328125
    9. ' ' → logprob: -7.18292236328125
    10. '                           ' → logprob: -7.30792236328125

Token 2111: ' succeed' (ID: 21617)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2831144332885742
    2. 'return' → logprob: -1.4081144332885742
    3. '                   ' → logprob: -6.783114433288574
    4. ' if' → logprob: -7.908114433288574
    5. 'if' → logprob: -8.033114433288574
    6. '               ' → logprob: -9.908114433288574
    7. '                       ' → logprob: -10.158114433288574
    8. 'append' → logprob: -11.533114433288574
    9. ' append' → logprob: -12.033114433288574
    10. ' ' → logprob: -12.533114433288574

Token 2112: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05809684842824936
    2. '               ' → logprob: -3.3080968856811523
    3. ':
' → logprob: -4.433096885681152
    4. ':' → logprob: -5.683096885681152
    5. '                       ' → logprob: -6.433096885681152
    6. ',' → logprob: -6.808096885681152
    7. ' and' → logprob: -7.058096885681152
    8. ',
' → logprob: -8.933096885681152
    9. '                    
' → logprob: -8.933096885681152
    10. ' if' → logprob: -9.183096885681152

Token 2113: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.017127923667430878
    2. '               ' → logprob: -4.142127990722656
    3. '                       ' → logprob: -7.517127990722656
    4. ')' → logprob: -8.267127990722656
    5. '
' → logprob: -9.767127990722656
    6. '                  ' → logprob: -9.767127990722656
    7. '                    
' → logprob: -10.017127990722656
    8. '                ' → logprob: -10.517127990722656
    9. '                
' → logprob: -10.892127990722656
    10. '                    ' → logprob: -11.142127990722656

Token 2114: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14737533032894135
    2. '               ' → logprob: -2.6473753452301025
    3. ' if' → logprob: -2.8973753452301025
    4. '                       ' → logprob: -5.147375106811523
    5. 'if' (adapté à ' if') → logprob: -5.397375106811523
    6. '                           ' → logprob: -8.647375106811523
    7. '                ' → logprob: -8.772375106811523
    8. '           ' → logprob: -9.522375106811523
    9. '                    ' → logprob: -9.772375106811523
    10. '                  ' → logprob: -10.022375106811523

Token 2115: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.575993537902832
    2. 'next' → logprob: -0.825993537902832
    3. '(next' → logprob: -10.450993537902832
    4. 'b' → logprob: -11.325993537902832
    5. '	next' → logprob: -12.700993537902832
    6. ' b' → logprob: -12.950993537902832
    7. '[next' → logprob: -13.200993537902832
    8. '_next' → logprob: -13.325993537902832
    9. '                   ' → logprob: -13.325993537902832
    10. '               ' → logprob: -14.325993537902832

Token 2116: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.04860905185341835
    2. '_idx' → logprob: -3.0486090183258057
    3. 'pos' → logprob: -11.298608779907227
    4. 'Pos' → logprob: -12.548608779907227
    5. 'idx' → logprob: -14.048608779907227
    6. '_' → logprob: -14.173608779907227
    7. '```' → logprob: -14.173608779907227
    8. '   ' → logprob: -14.798608779907227
    9. ' _' → logprob: -14.798608779907227
    10. '\' → logprob: -15.048608779907227

Token 2117: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5759695768356323
    2. ' ==' → logprob: -0.8259695768356323
    3. '==
' → logprob: -11.700969696044922
    4. ']==' → logprob: -11.825969696044922
    5. ')==' → logprob: -11.825969696044922
    6. '===' → logprob: -12.825969696044922
    7. '=' → logprob: -12.950969696044922
    8. '()==' → logprob: -14.200969696044922
    9. ')' → logprob: -14.825969696044922
    10. ' ==
' → logprob: -15.575969696044922

Token 2118: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004306692280806601
    2. ' self' → logprob: -7.750430583953857
    3. 'points' → logprob: -18.500431060791016
    4. '(self' → logprob: -19.000431060791016
    5. '                   ' → logprob: -19.250431060791016
    6. '           ' → logprob: -19.500431060791016
    7. '               ' → logprob: -19.625431060791016
    8. '
' → logprob: -19.750431060791016
    9. '	self' → logprob: -20.000431060791016
    10. '[self' → logprob: -20.375431060791016

Token 2119: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -5.9153885558771435e-06
    2. 'd' → logprob: -12.500005722045898
    3. 'points' → logprob: -13.625005722045898
    4. '.' → logprob: -14.625005722045898
    5. 'self' → logprob: -15.000005722045898
    6. '.points' → logprob: -16.6250057220459
    7. 'Points' → logprob: -16.7500057220459
    8. ' .' → logprob: -17.6250057220459
    9. ' points' → logprob: -18.8750057220459
    10. '	d' → logprob: -18.8750057220459

Token 2120: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.017148783430457115
    2. '                   ' → logprob: -4.267148971557617
    3. ':' → logprob: -6.017148971557617
    4. '):
' → logprob: -8.392148971557617
    5. '                       ' → logprob: -8.892148971557617
    6. ' and' → logprob: -9.142148971557617
    7. '               ' → logprob: -9.767148971557617
    8. ',' → logprob: -12.642148971557617
    9. 'and' → logprob: -12.767148971557617
    10. '                           ' → logprob: -13.017148971557617

Token 2121: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006689518922939897
    2. 'return' → logprob: -7.750669002532959
    3. ' return' → logprob: -9.0006685256958
    4. '                       ' → logprob: -9.2506685256958
    5. ':
' → logprob: -12.0006685256958
    6. '               ' → logprob: -12.2506685256958
    7. ':return' → logprob: -12.7506685256958
    8. '                  ' → logprob: -13.0006685256958
    9. '           ' → logprob: -14.0006685256958
    10. ':' → logprob: -14.5006685256958

Token 2122: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0015392655041068792
    2. ' return' → logprob: -6.75153923034668
    3. '                   ' → logprob: -8.00153923034668
    4. '                       ' → logprob: -10.37653923034668
    5. '	return' → logprob: -12.87653923034668
    6. '   ' → logprob: -15.87653923034668
    7. ':return' → logprob: -16.12653923034668
    8. '               ' → logprob: -16.62653923034668
    9. '{return' → logprob: -16.62653923034668
    10. '                           ' → logprob: -17.75153923034668

Token 2123: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.005233882926404476
    2. ' True' → logprob: -5.2552337646484375
    3. '                   ' → logprob: -16.130233764648438
    4. '(True' → logprob: -18.630233764648438
    5. '               ' → logprob: -18.755233764648438
    6. '
' → logprob: -19.630233764648438
    7. '                       ' → logprob: -20.255233764648438
    8. 'False' → logprob: -20.630233764648438
    9. '=True' → logprob: -20.880233764648438
    10. 'true' → logprob: -21.380233764648438

Token 2124: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3307868242263794
    2. '                
' → logprob: -1.3307868242263794
    3. '
' → logprob: -5.33078670501709
    4. '\n' → logprob: -5.95578670501709
    5. ')' → logprob: -6.33078670501709
    6. '                    
' → logprob: -6.83078670501709
    7. '                ' → logprob: -6.95578670501709
    8. '    
' → logprob: -6.95578670501709
    9. '                        
' → logprob: -7.45578670501709
    10. '               
' → logprob: -7.58078670501709

Token 2125: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05237535387277603
    2. '                
' → logprob: -3.052375316619873
    3. '
' → logprob: -6.052375316619873
    4. '                        
' → logprob: -8.802375793457031
    5. '               
' → logprob: -8.927375793457031
    6. '			' → logprob: -8.927375793457031
    7. '				
' → logprob: -9.052375793457031
    8. '                    
' → logprob: -9.177375793457031
    9. '    
' → logprob: -9.177375793457031
    10. ')' → logprob: -9.427375793457031

Token 2126: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6959022283554077
    2. 'queue' → logprob: -0.9459022283554077
    3. ' queue' → logprob: -2.1959023475646973
    4. '                   ' → logprob: -6.695902347564697
    5. '                       ' → logprob: -7.820902347564697
    6. '(queue' → logprob: -9.820901870727539
    7. '           ' → logprob: -10.820901870727539
    8. '
' → logprob: -10.820901870727539
    9. '	queue' → logprob: -11.195901870727539
    10. 'if' → logprob: -11.695901870727539

Token 2127: ' Otherwise' (ID: 33987)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.8008742332458496
    2. 'queue' → logprob: -1.0508742332458496
    3. '               ' → logprob: -1.6758742332458496
    4. '                   ' → logprob: -4.92587423324585
    5. 'if' → logprob: -5.67587423324585
    6. ' if' → logprob: -6.05087423324585
    7. '           ' → logprob: -7.80087423324585
    8. '   ' → logprob: -8.425874710083008
    9. '                       ' → logprob: -8.425874710083008
    10. '	queue' → logprob: -9.175874710083008

Token 2128: ' we' (ID: 581)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2011914849281311
    2. 'queue' → logprob: -2.0761914253234863
    3. ' queue' → logprob: -3.2011914253234863
    4. '               ' → logprob: -4.201191425323486
    5. '   ' → logprob: -7.451191425323486
    6. '           ' → logprob: -8.451191902160645
    7. '                       ' → logprob: -8.451191902160645
    8. 'if' → logprob: -10.576191902160645
    9. '                ' → logprob: -10.576191902160645
    10. ' if' → logprob: -10.826191902160645

Token 2129: ' can' (ID: 665)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.25130128860473633
    2. '               ' → logprob: -2.0013012886047363
    3. '.append' → logprob: -3.1263012886047363
    4. ' continue' → logprob: -4.251301288604736
    5. ' can' → logprob: -4.876301288604736
    6. '                       ' → logprob: -5.251301288604736
    7. 'append' → logprob: -6.001301288604736
    8. 'continue' → logprob: -6.126301288604736
    9. '           ' → logprob: -6.251301288604736
    10. ' add' → logprob: -6.501301288604736

Token 2130: ' bounce' (ID: 57156)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.18245644867420197
    2. 'enqueue' → logprob: -2.6824564933776855
    3. 'queue' → logprob: -3.4324564933776855
    4. '               ' → logprob: -3.9324564933776855
    5. ' append' → logprob: -4.1824564933776855
    6. ' queue' → logprob: -4.1824564933776855
    7. '                   ' → logprob: -5.4324564933776855
    8. 'add' → logprob: -5.6824564933776855
    9. ' enqueue' → logprob: -6.1824564933776855
    10. '           ' → logprob: -6.1824564933776855

Token 2131: ' here' (ID: 2105)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0850827768445015
    2. '               ' → logprob: -3.085082769393921
    3. 'and' → logprob: -4.3350830078125
    4. ' and' → logprob: -4.8350830078125
    5. ' (' → logprob: -5.3350830078125
    6. '                       ' → logprob: -5.9600830078125
    7. ' at' → logprob: -5.9600830078125
    8. ',' → logprob: -6.7100830078125
    9. '           ' → logprob: -7.0850830078125
    10. '(' → logprob: -7.5850830078125

Token 2132: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5241025686264038
    2. '               ' → logprob: -0.8991025686264038
    3. '                       ' → logprob: -7.524102687835693
    4. ',' → logprob: -9.024102210998535
    5. ' and' → logprob: -9.399102210998535
    6. '           ' → logprob: -9.399102210998535
    7. '   ' → logprob: -9.774102210998535
    8. '                ' → logprob: -10.774102210998535
    9. 'and' → logprob: -11.774102210998535
    10. '                
' → logprob: -11.774102210998535

Token 2133: ' not' (ID: 625)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05497289448976517
    2. ' b' → logprob: -2.9299728870391846
    3. '(b' → logprob: -9.804972648620605
    4. '   ' → logprob: -11.304972648620605
    5. '                   ' → logprob: -11.804972648620605
    6. '               ' → logprob: -12.679972648620605
    7. ' (' → logprob: -12.804972648620605
    8. 'next' → logprob: -13.179972648620605
    9. ' ' → logprob: -13.679972648620605
    10. '(' → logprob: -13.804972648620605

Token 2134: ' exceed' (ID: 23275)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5553064942359924
    2. ' b' → logprob: -1.3053064346313477
    3. ' next' → logprob: -2.5553064346313477
    4. 'next' → logprob: -2.9303064346313477
    5. '(b' → logprob: -4.805306434631348
    6. '(next' → logprob: -4.805306434631348
    7. 'self' → logprob: -5.805306434631348
    8. ' (' → logprob: -6.180306434631348
    9. ' not' → logprob: -6.805306434631348
    10. ' self' → logprob: -7.930306434631348

Token 2135: ' b' (ID: 287)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09242936968803406
    2. ' self' → logprob: -3.0924293994903564
    3. ' max' → logprob: -3.8424293994903564
    4. 'max' → logprob: -4.092429161071777
    5. 's' → logprob: -6.092429161071777
    6. 'd' → logprob: -7.842429161071777
    7. ' the' → logprob: -7.967429161071777
    8. '                   ' → logprob: -7.967429161071777
    9. 'ing' → logprob: -8.092429161071777
    10. '               ' → logprob: -8.217429161071777

Token 2136: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -0.06461931765079498
    2. '_max' → logprob: -3.189619302749634
    3. 'max' → logprob: -4.064619541168213
    4. '_' → logprob: -6.189619541168213
    5. 'ounds' → logprob: -6.689619541168213
    6. '+' → logprob: -8.314619064331055
    7. '```' → logprob: -8.689619064331055
    8. 'ound' → logprob: -9.314619064331055
    9. 'r' → logprob: -9.439619064331055
    10. 'ount' → logprob: -9.564619064331055

Token 2137: ' allowed' (ID: 9279)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6960318088531494
    2. ' and' → logprob: -1.4460318088531494
    3. '               ' → logprob: -2.0710318088531494
    4. ':' → logprob: -2.9460318088531494
    5. '+' → logprob: -3.3210318088531494
    6. ':
' → logprob: -3.9460318088531494
    7. ' +' → logprob: -4.94603157043457
    8. ',' → logprob: -4.94603157043457
    9. 'and' → logprob: -5.19603157043457
    10. ')' → logprob: -6.19603157043457

Token 2138: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07711145281791687
    2. '               ' → logprob: -2.8271114826202393
    3. '                       ' → logprob: -5.45211124420166
    4. ':
' → logprob: -5.95211124420166
    5. ')' → logprob: -6.32711124420166
    6. ',' → logprob: -6.82711124420166
    7. ' and' → logprob: -7.32711124420166
    8. ' (' → logprob: -7.32711124420166
    9. '
' → logprob: -7.57711124420166
    10. '   ' → logprob: -7.57711124420166

Token 2139: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0038978219963610172
    2. '                       ' → logprob: -6.878897666931152
    3. '				' → logprob: -7.503897666931152
    4. '		           ' → logprob: -7.753897666931152
    5. '	               ' → logprob: -7.878897666931152
    6. '                    ' → logprob: -8.003897666931152
    7. ')' → logprob: -8.253897666931152
    8. '               ' → logprob: -8.378897666931152
    9. '                ' → logprob: -8.378897666931152
    10. '			       ' → logprob: -9.128897666931152

Token 2140: ' #' (ID: 1069)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.6610519289970398
    2. '                   ' → logprob: -0.9110519289970398
    3. ' if' → logprob: -3.0360519886016846
    4. '                       ' → logprob: -3.9110519886016846
    5. '               ' → logprob: -5.2860517501831055
    6. 'queue' → logprob: -5.6610517501831055
    7. 'if' → logprob: -6.5360517501831055
    8. '(queue' → logprob: -7.5360517501831055
    9. '                           ' → logprob: -7.6610517501831055
    10. '                ' → logprob: -7.6610517501831055

Token 2141: ' b' (ID: 287)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25518205761909485
    2. '               ' → logprob: -1.6301820278167725
    3. ' if' → logprob: -4.005182266235352
    4. '                   ' → logprob: -4.880182266235352
    5. 'queue' → logprob: -5.755182266235352
    6. ' queue' → logprob: -8.755182266235352
    7. '                       ' → logprob: -8.880182266235352
    8. '           ' → logprob: -11.255182266235352
    9. '   ' → logprob: -11.380182266235352
    10. '                           ' → logprob: -12.130182266235352

Token 2142: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -0.00014859484508633614
    2. '               ' → logprob: -9.87514877319336
    3. 'ounce' → logprob: -10.12514877319336
    4. 'ount' → logprob: -11.50014877319336
    5. 'oun' → logprob: -11.62514877319336
    6. '   ' → logprob: -11.75014877319336
    7. 'ounced' → logprob: -11.87514877319336
    8. '       ' → logprob: -12.25014877319336
    9. '           ' → logprob: -12.87514877319336
    10. '                   ' → logprob: -12.87514877319336

Token 2143: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -1.735893965815194e-05
    2. '_allowed' → logprob: -11.750017166137695
    3. '_added' → logprob: -12.625017166137695
    4. 'used' → logprob: -13.000017166137695
    5. '_needed' → logprob: -14.125017166137695
    6. '_to' → logprob: -14.625017166137695
    7. '   ' → logprob: -14.875017166137695
    8. '_required' → logprob: -15.125017166137695
    9. '_' → logprob: -15.125017166137695
    10. '=' → logprob: -15.500017166137695

Token 2144: ' counts' (ID: 28991)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.777798056602478
    2. '+=' → logprob: -1.527798056602478
    3. ' +' → logprob: -1.777798056602478
    4. ' +=' → logprob: -1.902798056602478
    5. ',' → logprob: -5.402798175811768
    6. '<=' → logprob: -8.27779769897461
    7. '+,' → logprob: -8.27779769897461
    8. '=' → logprob: -9.77779769897461
    9. ' <=' → logprob: -10.02779769897461
    10. '               ' → logprob: -10.02779769897461

Token 2145: ' starting' (ID: 8601)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04761248454451561
    2. ' +' → logprob: -3.172612428665161
    3. '+=' → logprob: -5.79761266708374
    4. ' +=' → logprob: -7.29761266708374
    5. ')' → logprob: -8.422612190246582
    6. '+
' → logprob: -8.547612190246582
    7. '=' → logprob: -9.172612190246582
    8. '<|end|>' → logprob: -9.797612190246582
    9. '+b' → logprob: -9.797612190246582
    10. ',' → logprob: -10.422612190246582

Token 2146: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.42457500100135803
    2. '+' → logprob: -1.9245749711990356
    3. ' at' → logprob: -2.549575090408325
    4. ' from' → logprob: -2.799575090408325
    5. 'at' → logprob: -3.424575090408325
    6. ' +' → logprob: -4.924574851989746
    7. ')' → logprob: -4.924574851989746
    8. '1' → logprob: -5.924574851989746
    9. '=' → logprob: -5.924574851989746
    10. 'with' → logprob: -6.049574851989746

Token 2147: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0020592615474015474
    2. '1' → logprob: -7.127059459686279
    3. 'b' → logprob: -8.002058982849121
    4. '-' → logprob: -8.502058982849121
    5. ' ' → logprob: -8.627058982849121
    6. 'zero' → logprob: -8.627058982849121
    7. 'bounce' → logprob: -8.752058982849121
    8. ' -' → logprob: -10.127058982849121
    9. 'current' → logprob: -10.377058982849121
    10. ' zero' → logprob: -10.627058982849121

Token 2148: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2727726697921753
    2. '                   ' → logprob: -1.2727726697921753
    3. '+' → logprob: -1.8977726697921753
    4. ',' → logprob: -2.397772789001465
    5. ' +' → logprob: -2.647772789001465
    6. ' and' → logprob: -3.397772789001465
    7. ')' → logprob: -3.647772789001465
    8. ':' → logprob: -4.147772789001465
    9. ',
' → logprob: -4.272772789001465
    10. ':
' → logprob: -4.522772789001465

Token 2149: ' but' (ID: 889)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.5294827818870544
    2. '                   ' → logprob: -1.4044828414916992
    3. '				' → logprob: -3.279482841491699
    4. '	queue' → logprob: -3.404482841491699
    5. 'queue' → logprob: -4.154482841491699
    6. '               ' → logprob: -4.154482841491699
    7. '			' → logprob: -4.154482841491699
    8. '                ' → logprob: -4.904482841491699
    9. '                       ' → logprob: -4.904482841491699
    10. ' b' → logprob: -5.529482841491699

Token 2150: ' max' (ID: 2999)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.43034812808036804
    2. 'b' → logprob: -1.3053481578826904
    3. ' next' → logprob: -3.5553481578826904
    4. ' not' → logprob: -3.9303481578826904
    5. 'next' → logprob: -4.805347919464111
    6. ' the' → logprob: -5.055347919464111
    7. ' we' → logprob: -5.305347919464111
    8. 'the' → logprob: -5.680347919464111
    9. ' it' → logprob: -6.055347919464111
    10. 'we' → logprob: -6.555347919464111

Token 2151: ' b' (ID: 287)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0017603866290301085
    2. '_' → logprob: -7.376760482788086
    3. ' _' → logprob: -7.376760482788086
    4. '+' → logprob: -8.376760482788086
    5. ' +' → logprob: -9.251760482788086
    6. '_allowed' → logprob: -10.001760482788086
    7. 'b' → logprob: -10.501760482788086
    8. ' b' → logprob: -10.501760482788086
    9. '
' → logprob: -10.626760482788086
    10. '   ' → logprob: -11.376760482788086

Token 2152: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -0.002285502851009369
    2. '_' → logprob: -6.627285480499268
    3. '```' → logprob: -8.752285957336426
    4. 'ounce' → logprob: -8.752285957336426
    5. '_b' → logprob: -9.127285957336426
    6. '``' → logprob: -9.627285957336426
    7. '\' → logprob: -10.002285957336426
    8. '+' → logprob: -10.002285957336426
    9. ')' → logprob: -10.252285957336426
    10. 'oun' → logprob: -10.252285957336426

Token 2153: ' exclude' (ID: 39566)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1394183486700058
    2. '+' → logprob: -2.514418363571167
    3. ' <=' → logprob: -3.639418363571167
    4. ' <' → logprob: -4.514418125152588
    5. '_used' → logprob: -5.514418125152588
    6. '<=' → logprob: -6.639418125152588
    7. ' +=' → logprob: -6.639418125152588
    8. ')' → logprob: -6.889418125152588
    9. 'used' → logprob: -6.889418125152588
    10. ' =' → logprob: -7.139418125152588

Token 2154: ' last' (ID: 2174)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4083551168441772
    2. ' the' → logprob: -1.5333551168441772
    3. ' next' → logprob: -2.033355236053467
    4. ' +' → logprob: -2.158355236053467
    5. ' self' → logprob: -2.908355236053467
    6. 'self' → logprob: -3.033355236053467
    7. '+' → logprob: -3.158355236053467
    8. 'the' → logprob: -3.408355236053467
    9. ' ' → logprob: -4.033355236053467
    10. ' current' → logprob: -4.033355236053467

Token 2155: ' bounce' (ID: 57156)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14430265128612518
    2. '
' → logprob: -3.1443026065826416
    3. '                   ' → logprob: -3.5193026065826416
    4. ')' → logprob: -4.144302845001221
    5. '<|end|>' → logprob: -4.519302845001221
    6. '                ' → logprob: -5.269302845001221
    7. ' +' → logprob: -5.394302845001221
    8. '+' → logprob: -5.519302845001221
    9. '           ' → logprob: -6.019302845001221
    10. ':
' → logprob: -6.144302845001221

Token 2156: ' at' (ID: 540)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5869442224502563
    2. '               ' → logprob: -1.5869442224502563
    3. ':' → logprob: -2.211944103240967
    4. ':
' → logprob: -2.836944103240967
    5. '+' → logprob: -3.086944103240967
    6. '                       ' → logprob: -5.086944103240967
    7. ' +' → logprob: -5.336944103240967
    8. ' and' → logprob: -5.711944103240967
    9. ')' → logprob: -5.836944103240967
    10. '           ' → logprob: -6.586944103240967

Token 2157: ' target' (ID: 3783)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.45329925417900085
    2. ' next' → logprob: -2.0782992839813232
    3. 'target' → logprob: -2.0782992839813232
    4. 'self' → logprob: -2.5782992839813232
    5. 'd' → logprob: -3.7032992839813232
    6. ' target' → logprob: -5.453299045562744
    7. ' d' → logprob: -5.953299045562744
    8. ' self' → logprob: -6.078299045562744
    9. 'the' → logprob: -6.203299045562744
    10. 'distance' → logprob: -7.078299045562744

Token 2158: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8780189752578735
    2. ':
' → logprob: -1.1280189752578735
    3. '                   ' → logprob: -2.128018856048584
    4. ':' → logprob: -2.753018856048584
    5. ' and' → logprob: -3.003018856048584
    6. '+' → logprob: -4.878018856048584
    7. ')' → logprob: -4.878018856048584
    8. '):
' → logprob: -5.878018856048584
    9. '                       ' → logprob: -6.128018856048584
    10. ' +' → logprob: -6.378018856048584

Token 2159: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02182164415717125
    2. '               ' → logprob: -4.14682149887085
    3. '                       ' → logprob: -5.77182149887085
    4. ')' → logprob: -7.77182149887085
    5. ':' → logprob: -8.146821975708008
    6. '                ' → logprob: -8.271821975708008
    7. '                    ' → logprob: -8.271821975708008
    8. '   ' → logprob: -8.646821975708008
    9. ',' → logprob: -8.771821975708008
    10. '                           ' → logprob: -8.896821975708008

Token 2160: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.37094584107398987
    2. '               ' → logprob: -1.3709458112716675
    3. ' if' → logprob: -3.370945930480957
    4. '                       ' → logprob: -4.995945930480957
    5. 'if' (adapté à ' if') → logprob: -5.370945930480957
    6. '                ' → logprob: -5.745945930480957
    7. '				' → logprob: -6.870945930480957
    8. '           ' → logprob: -7.120945930480957
    9. '			' → logprob: -7.370945930480957
    10. ' b' → logprob: -7.370945930480957

Token 2161: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2524942457675934
    2. ' b' → logprob: -1.502494215965271
    3. '(b' → logprob: -7.6274943351745605
    4. ' (' → logprob: -10.627493858337402
    5. '   ' → logprob: -11.627493858337402
    6. '(' → logprob: -11.752493858337402
    7. 'next' → logprob: -12.002493858337402
    8. ' ' → logprob: -12.752493858337402
    9. ' next' → logprob: -12.752493858337402
    10. '    ' → logprob: -12.752493858337402

Token 2162: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -4.036524842376821e-05
    2. '+' → logprob: -11.375040054321289
    3. 'b' → logprob: -12.250040054321289
    4. '_' → logprob: -12.375040054321289
    5. 'oun' → logprob: -13.125040054321289
    6. 'ount' → logprob: -13.250040054321289
    7. '%' → logprob: -13.500040054321289
    8. 'u' → logprob: -13.500040054321289
    9. 'ouches' → logprob: -13.750040054321289
    10. 'ounce' → logprob: -14.125040054321289

Token 2163: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -4.870950215263292e-05
    2. 'used' → logprob: -10.000048637390137
    3. 'Used' → logprob: -13.250048637390137
    4. '_USED' → logprob: -14.750048637390137
    5. '_allowed' → logprob: -15.375048637390137
    6. '   ' → logprob: -15.500048637390137
    7. '+' → logprob: -15.875048637390137
    8. '               ' → logprob: -16.250049591064453
    9. '_added' → logprob: -16.625049591064453
    10. '```' → logprob: -17.125049591064453

Token 2164: ' <' (ID: 464)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9850804209709167
    2. ' +' → logprob: -1.2350804805755615
    3. ' <' → logprob: -1.4850804805755615
    4. '<' → logprob: -2.2350804805755615
    5. ' <=' → logprob: -6.735080242156982
    6. '<=' → logprob: -7.360080242156982
    7. '<len' → logprob: -8.86008071899414
    8. '<n' → logprob: -9.73508071899414
    9. '<|end|>' → logprob: -10.36008071899414
    10. ' !=' → logprob: -10.48508071899414

Token 2165: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004081485792994499
    2. ' self' → logprob: -5.5040812492370605
    3. '(self' → logprob: -14.004081726074219
    4. '[self' → logprob: -14.254081726074219
    5. '	self' → logprob: -14.254081726074219
    6. '               ' → logprob: -15.129081726074219
    7. '                   ' → logprob: -16.37908172607422
    8. '=self' → logprob: -16.62908172607422
    9. '   ' → logprob: -16.75408172607422
    10. '$self' → logprob: -16.75408172607422

Token 2166: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.0004958406207151711
    2. 'max' → logprob: -7.625495910644531
    3. '.user' → logprob: -13.375495910644531
    4. 'self' → logprob: -13.375495910644531
    5. '_max' → logprob: -13.500495910644531
    6. '.self' → logprob: -13.750495910644531
    7. '	max' → logprob: -14.000495910644531
    8. '.' → logprob: -14.500495910644531
    9. '.maximum' → logprob: -15.625495910644531
    10. '   ' → logprob: -15.750495910644531

Token 2167: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.500000953674316
    3. 'b' → logprob: -16.625001907348633
    4. 'B' → logprob: -16.750001907348633
    5. '_B' → logprob: -16.750001907348633
    6. '_allowed' → logprob: -16.875001907348633
    7. '+' → logprob: -17.000001907348633
    8. '_used' → logprob: -17.375001907348633
    9. '_
' → logprob: -17.625001907348633
    10. ' _' → logprob: -17.625001907348633

Token 2168: 'ounces' (ID: 52219)
  Prédit: 'ounces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ounces' → logprob: -0.00017970333283301443
    2. '_' → logprob: -8.875179290771484
    3. 'ounds' → logprob: -11.125179290771484
    4. '_b' → logprob: -12.750179290771484
    5. 'oun' → logprob: -12.750179290771484
    6. 'ount' → logprob: -13.000179290771484
    7. '+' → logprob: -13.000179290771484
    8. 'ounce' → logprob: -13.125179290771484
    9. 'ouches' → logprob: -13.125179290771484
    10. 'ouses' → logprob: -13.250179290771484

Token 2169: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.168927401304245
    2. ' +' → logprob: -1.9189274311065674
    3. '                   ' → logprob: -5.543927192687988
    4. '               ' → logprob: -6.043927192687988
    5. ':
' → logprob: -6.418927192687988
    6. '                       ' → logprob: -8.293927192687988
    7. ':' → logprob: -8.418927192687988
    8. '           ' → logprob: -9.293927192687988
    9. ' and' → logprob: -9.543927192687988
    10. '                           ' → logprob: -10.168927192687988

Token 2170: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009168167016468942
    2. ' ' → logprob: -7.000916957855225
    3. '0' → logprob: -12.500916481018066
    4. '2' → logprob: -13.750916481018066
    5. '+' → logprob: -15.875916481018066
    6. '   ' → logprob: -16.000917434692383
    7. '<|end|>' → logprob: -16.625917434692383
    8. '```' → logprob: -17.063417434692383
    9. ' ' → logprob: -17.750917434692383
    10. '
' → logprob: -17.938417434692383

Token 2171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001348688150756061
    2. '0' → logprob: -6.626348495483398
    3. ' ' → logprob: -11.126348495483398
    4. '2' → logprob: -11.876348495483398
    5. '<|end|>' → logprob: -15.438848495483398
    6. '   ' → logprob: -15.751348495483398
    7. '```' → logprob: -15.813848495483398
    8. '
' → logprob: -16.6888484954834
    9. '-' → logprob: -17.0013484954834
    10. '  ' → logprob: -17.2513484954834

Token 2172: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.23730634152889252
    2. ':' → logprob: -2.8623063564300537
    3. '                   ' → logprob: -2.8623063564300537
    4. '               ' → logprob: -3.2373063564300537
    5. ' and' → logprob: -3.6123063564300537
    6. '                       ' → logprob: -4.487306118011475
    7. '+' → logprob: -5.487306118011475
    8. '):
' → logprob: -5.612306118011475
    9. '           ' → logprob: -5.737306118011475
    10. ' :
' → logprob: -6.112306118011475

Token 2173: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00026264708139933646
    2. 'queue' → logprob: -8.750262260437012
    3. '                       ' → logprob: -10.000262260437012
    4. ' queue' → logprob: -10.125262260437012
    5. '				' → logprob: -12.000262260437012
    6. '		           ' → logprob: -12.375262260437012
    7. '   ' → logprob: -13.125262260437012
    8. '(queue' → logprob: -13.625262260437012
    9. '                  ' → logprob: -13.875262260437012
    10. '                    ' → logprob: -14.500262260437012

Token 2174: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.3187304437160492
    2. ' queue' → logprob: -1.3187304735183716
    3. '                   ' → logprob: -5.318730354309082
    4. '                       ' → logprob: -7.818730354309082
    5. '   ' → logprob: -9.193730354309082
    6. '	queue' → logprob: -10.318730354309082
    7. '               ' → logprob: -12.318730354309082
    8. '           ' → logprob: -12.568730354309082
    9. '       ' → logprob: -12.693730354309082
    10. '(queue' → logprob: -13.818730354309082

Token 2175: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.980854959692806e-05
    2. '                   ' → logprob: -10.500069618225098
    3. '.extend' → logprob: -10.625069618225098
    4. '.' → logprob: -11.500069618225098
    5. '                       ' → logprob: -12.875069618225098
    6. '               ' → logprob: -13.500069618225098
    7. '.enqueue' → logprob: -14.125069618225098
    8. '           ' → logprob: -14.250069618225098
    9. '.app' → logprob: -14.500069618225098
    10. '```' → logprob: -14.500069618225098

Token 2176: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.767461895942688
    2. '((' → logprob: -0.767461895942688
    3. '(b' → logprob: -2.8924617767333984
    4. ' (' → logprob: -4.142461776733398
    5. '   ' → logprob: -8.267461776733398
    6. ' ((' → logprob: -11.267461776733398
    7. '(j' → logprob: -11.642461776733398
    8. '(
' → logprob: -12.767461776733398
    9. '(next' → logprob: -13.142461776733398
    10. '(n' → logprob: -13.267461776733398

Token 2177: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.664371848164592e-05
    2. ' b' → logprob: -11.375016212463379
    3. '   ' → logprob: -12.500016212463379
    4. '	b' → logprob: -13.875016212463379
    5. '       ' → logprob: -15.000016212463379
    6. '           ' → logprob: -17.500017166137695
    7. ')b' → logprob: -17.500017166137695
    8. '                   ' → logprob: -17.625017166137695
    9. '               ' → logprob: -17.625017166137695
    10. '                       ' → logprob: -17.750017166137695

Token 2178: 'ounces' (ID: 52219)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2285730242729187
    2. 'ounces' → logprob: -1.6035730838775635
    3. ' b' → logprob: -6.853572845458984
    4. '   ' → logprob: -6.978572845458984
    5. '(b' → logprob: -7.728572845458984
    6. '+b' → logprob: -8.603572845458984
    7. '       ' → logprob: -8.728572845458984
    8. '_b' → logprob: -9.853572845458984
    9. '	b' → logprob: -9.978572845458984
    10. '=b' → logprob: -9.978572845458984

Token 2179: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.0004228091274853796
    2. 'used' → logprob: -8.375422477722168
    3. '+' → logprob: -9.750422477722168
    4. 'ed' → logprob: -10.125422477722168
    5. 'Used' → logprob: -10.375422477722168
    6. ',' → logprob: -11.500422477722168
    7. '```' → logprob: -11.625422477722168
    8. 's' → logprob: -12.375422477722168
    9. '_USED' → logprob: -12.375422477722168
    10. '   ' → logprob: -12.500422477722168

Token 2180: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6932827830314636
    2. ' +' → logprob: -0.6932827830314636
    3. ',' → logprob: -8.943283081054688
    4. ' ,' → logprob: -13.568283081054688
    5. '	' → logprob: -13.818283081054688
    6. '+,' → logprob: -14.193283081054688
    7. '   ' → logprob: -14.318283081054688
    8. '    ' → logprob: -15.568283081054688
    9. '		' → logprob: -15.693283081054688
    10. '           ' → logprob: -15.818283081054688

Token 2181: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021021578868385404
    2. ' ' → logprob: -8.50020980834961
    3. ',' → logprob: -12.00020980834961
    4. ' ,' → logprob: -14.87520980834961
    5. '   ' → logprob: -16.50020980834961
    6. '0' → logprob: -17.37520980834961
    7. '	' → logprob: -17.75020980834961
    8. ')' → logprob: -18.75020980834961
    9. '```' → logprob: -19.12520980834961
    10. '    ' → logprob: -19.50020980834961

Token 2182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5570885807392187e-05
    2. ' ' → logprob: -11.125015258789062
    3. '0' → logprob: -14.750015258789062
    4. '   ' → logprob: -16.437515258789062
    5. '2' → logprob: -16.625015258789062
    6. ',' → logprob: -17.312515258789062
    7. ')' → logprob: -17.687515258789062
    8. '```' → logprob: -18.125015258789062
    9. '  ' → logprob: -18.750015258789062
    10. '
' → logprob: -18.937515258789062

Token 2183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.511406809295295e-06
    2. ' ,' → logprob: -12.625006675720215
    3. ',
' → logprob: -13.750006675720215
    4. ',next' → logprob: -14.500006675720215
    5. ',n' → logprob: -15.500006675720215
    6. '   ' → logprob: -15.500006675720215
    7. '           ' → logprob: -15.625006675720215
    8. '	' → logprob: -15.750006675720215
    9. '               ' → logprob: -15.750006675720215
    10. '‌,' → logprob: -15.875006675720215

Token 2184: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.011047814972698689
    2. ' next' → logprob: -4.511047840118408
    3. '	next' → logprob: -17.88604736328125
    4. '[next' → logprob: -18.38604736328125
    5. '(next' → logprob: -19.01104736328125
    6. '_next' → logprob: -21.63604736328125
    7. 'Next' → logprob: -22.26104736328125
    8. '.next' → logprob: -22.38604736328125
    9. '   ' → logprob: -22.63604736328125
    10. '               ' → logprob: -23.01104736328125

Token 2185: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -4.320199877838604e-07
    2. 'idx' → logprob: -15.125
    3. '_pos' → logprob: -15.875
    4. 'Idx' → logprob: -17.5
    5. '_index' → logprob: -18.125
    6. '_IDX' → logprob: -19.875
    7. '```' → logprob: -22.0
    8. '	idx' → logprob: -22.25
    9. ' idx' → logprob: -22.625
    10. '_ix' → logprob: -23.0

Token 2186: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0006359508261084557
    2. ')' → logprob: -8.000636100769043
    3. '))
' → logprob: -8.125636100769043
    4. '                   ' → logprob: -12.750636100769043
    5. ')))' → logprob: -14.375636100769043
    6. '               ' → logprob: -14.500636100769043
    7. ' ))' → logprob: -15.000636100769043
    8. ')
' → logprob: -15.875636100769043
    9. '           ' → logprob: -16.250635147094727
    10. '))

' → logprob: -17.250635147094727

Token 2187: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2188: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2189: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.339278580620885e-06
    2. ' False' → logprob: -13.000001907348633
    3. '(False' → logprob: -19.250001907348633
    4. '_false' → logprob: -23.125001907348633
    5. 'false' → logprob: -23.250001907348633
    6. '=False' → logprob: -23.625001907348633
    7. '   ' → logprob: -23.875001907348633
    8. 'True' → logprob: -24.375001907348633
    9. '.False' → logprob: -25.375001907348633
    10. '
' → logprob: -25.750001907348633

Token 2190: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2191: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7588610649108887
    2. '<|end|>' → logprob: -0.8838610649108887
    3. ')' → logprob: -3.0088610649108887
    4. '   ' → logprob: -3.2588610649108887
    5. ' ' → logprob: -5.133861064910889
    6. '_' → logprob: -5.258861064910889
    7. '<|end|>' → logprob: -5.258861064910889
    8. '       ' → logprob: -5.883861064910889
    9. '.' → logprob: -6.133861064910889
    10. '    ' → logprob: -6.633861064910889

Token 2192: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2193: ' solve' (ID: 17722)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.8834223747253418
    2. 'min' → logprob: -1.6334223747253418
    3. 'minimum' → logprob: -2.008422374725342
    4. 'binary' → logprob: -2.133422374725342
    5. ' find' → logprob: -3.133422374725342
    6. 'minimal' → logprob: -3.508422374725342
    7. ' binary' → logprob: -4.008422374725342
    8. ' minimum' → logprob: -4.258422374725342
    9. '_min' → logprob: -4.258422374725342
    10. ' minimal' → logprob: -5.008422374725342

Token 2194: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0822734609246254
    2. '(' → logprob: -2.582273483276367
    3. '(
' → logprob: -6.207273483276367
    4. '_' → logprob: -6.957273483276367
    5. '_(' → logprob: -8.832273483276367
    6. '   ' → logprob: -9.082273483276367
    7. '       ' → logprob: -10.332273483276367
    8. '_self' → logprob: -10.832273483276367
    9. ' (' → logprob: -11.082273483276367
    10. '_for' → logprob: -11.457273483276367

Token 2195: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01737937331199646
    2. '   ' → logprob: -5.517379283905029
    3. '_' → logprob: -5.642379283905029
    4. '):' → logprob: -6.017379283905029
    5. '       ' → logprob: -6.767379283905029
    6. ' ,' → logprob: -7.017379283905029
    7. 'self' → logprob: -7.142379283905029
    8. '(' → logprob: -7.267379283905029
    9. ')_' → logprob: -7.517379283905029
    10. '_,' → logprob: -7.642379283905029

Token 2196: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04736340790987015
    2. '       ' → logprob: -3.422363519668579
    3. '   ' → logprob: -5.54736328125
    4. ':' → logprob: -5.79736328125
    5. 'self' → logprob: -6.17236328125
    6. '(' → logprob: -6.67236328125
    7. '(
' → logprob: -7.17236328125
    8. ':
' → logprob: -7.29736328125
    9. '_' → logprob: -7.42236328125
    10. '```' → logprob: -7.79736328125

Token 2197: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0013352400856092572
    2. ' float' → logprob: -6.626335144042969
    3. '   ' → logprob: -12.001335144042969
    4. '(float' → logprob: -13.751335144042969
    5. '
' → logprob: -14.001335144042969
    6. 'bool' → logprob: -15.001335144042969
    7. ' ' → logprob: -15.626335144042969
    8. '  ' → logprob: -15.751335144042969
    9. 'int' → logprob: -16.00133514404297
    10. '"' → logprob: -16.25133514404297

Token 2198: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7267374992370605
    2. '       ' → logprob: -1.3517374992370605
    3. ':
' → logprob: -1.8517374992370605
    4. '(self' → logprob: -2.3517374992370605
    5. '(' → logprob: -5.9767374992370605
    6. '   ' → logprob: -6.7267374992370605
    7. '(
' → logprob: -6.8517374992370605
    8. '):
' → logprob: -8.351737976074219
    9. ',' → logprob: -9.476737976074219
    10. '```' → logprob: -9.851737976074219

Token 2199: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011140200076624751
    2. '
' → logprob: -7.0011138916015625
    3. '   ' → logprob: -9.501113891601562
    4. '```' → logprob: -10.001113891601562
    5. '        
' → logprob: -10.876113891601562
    6. '    
' → logprob: -11.376113891601562
    7. ' 
' → logprob: -12.001113891601562
    8. '	' → logprob: -12.251113891601562
    9. '#' → logprob: -12.376113891601562
    10. '\' → logprob: -12.501113891601562

Token 2200: ' left' (ID: 3561)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03205668553709984
    2. 'left' (adapté à ' left') → logprob: -4.15705680847168
    3. ' left' → logprob: -4.15705680847168
    4. '
' → logprob: -9.28205680847168
    5. '```' → logprob: -9.90705680847168
    6. '#' → logprob: -10.40705680847168
    7. '   ' → logprob: -10.40705680847168
    8. '(left' → logprob: -11.78205680847168
    9. '[left' → logprob: -12.28205680847168
    10. '        
' → logprob: -12.28205680847168

Token 2201: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.60100257396698
    2. '=' → logprob: -0.97600257396698
    3. ',' → logprob: -2.6010026931762695
    4. ' ,' → logprob: -7.4760026931762695
    5. '        ' → logprob: -9.97600269317627
    6. '       ' → logprob: -9.97600269317627
    7. ' ' → logprob: -10.35100269317627
    8. ':' → logprob: -11.72600269317627
    9. '<|end|>' → logprob: -12.47600269317627
    10. '    ' → logprob: -12.72600269317627

Token 2202: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.469590491382405e-05
    2. '1' → logprob: -10.00007438659668
    3. ' ' → logprob: -10.50007438659668
    4. '   ' → logprob: -14.37507438659668
    5. '```' → logprob: -14.87507438659668
    6. 'math' → logprob: -15.75007438659668
    7. '10' → logprob: -15.81257438659668
    8. 'GR' → logprob: -16.43757438659668
    9. '       ' → logprob: -17.06257438659668
    10. 'import' → logprob: -17.06257438659668

Token 2203: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017815368482843041
    2. '1' → logprob: -8.750178337097168
    3. 'math' → logprob: -11.125178337097168
    4. ' ' → logprob: -12.750178337097168
    5. '```' → logprob: -14.750178337097168
    6. 'max' → logprob: -14.875178337097168
    7. '   ' → logprob: -15.000178337097168
    8. ' math' → logprob: -16.00017738342285
    9. 'epsilon' → logprob: -16.37517738342285
    10. 'float' → logprob: -16.37517738342285

Token 2204: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002491595223546028
    2. '       ' → logprob: -7.002491474151611
    3. ',' → logprob: -7.127491474151611
    4. '.
' → logprob: -7.502491474151611
    5. ',
' → logprob: -9.75249195098877
    6. ' 
' → logprob: -10.50249195098877
    7. '<|end|>' → logprob: -10.62749195098877
    8. '        
' → logprob: -11.00249195098877
    9. '0' → logprob: -11.12749195098877
    10. '
' → logprob: -11.25249195098877

Token 2205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.33394673466682434
    2. '1' → logprob: -1.833946704864502
    3. '000' → logprob: -2.958946704864502
    4. '5' → logprob: -3.458946704864502
    5. '01' → logprob: -3.458946704864502
    6. '001' → logprob: -4.708946704864502
    7. '05' → logprob: -9.70894718170166
    8. '   ' → logprob: -9.95894718170166
    9. '999' → logprob: -10.08394718170166
    10. '```' → logprob: -10.45894718170166

Token 2206: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3959944248199463
    2. '       ' → logprob: -1.1459944248199463
    3. ',' → logprob: -5.520994186401367
    4. ' 
' → logprob: -5.770994186401367
    5. ',
' → logprob: -7.020994186401367
    6. '```' → logprob: -8.145994186401367
    7. '        
' → logprob: -8.270994186401367
    8. '.' → logprob: -9.395994186401367
    9. '    
' → logprob: -9.520994186401367
    10. ' ,' → logprob: -9.645994186401367

Token 2207: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.524682879447937
    2. '       ' → logprob: -2.1496829986572266
    3. ' right' → logprob: -2.1496829986572266
    4. 'right' → logprob: -2.3996829986572266
    5. ',' → logprob: -2.5246829986572266
    6. ',
' → logprob: -6.149682998657227
    7. ' 
' → logprob: -7.399682998657227
    8. '        
' → logprob: -7.649682998657227
    9. ',right' → logprob: -8.024682998657227
    10. ' ,' → logprob: -8.274682998657227

Token 2208: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.02325945533812046
    2. ' right' → logprob: -3.773259401321411
    3. '       ' → logprob: -11.398259162902832
    4. '100' → logprob: -13.273259162902832
    5. '   ' → logprob: -15.398259162902832
    6. '1' → logprob: -15.523259162902832
    7. 'Right' → logprob: -15.773259162902832
    8. '	right' → logprob: -16.27326011657715
    9. '10' → logprob: -16.39826011657715
    10. '50' → logprob: -16.77326011657715

Token 2209: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05488600209355354
    2. '=' → logprob: -2.9298861026763916
    3. ' =
' → logprob: -13.304885864257812
    4. '<|end|>' → logprob: -14.054885864257812
    5. ' ' → logprob: -14.679885864257812
    6. '=
' → logprob: -14.929885864257812
    7. ' +=' → logprob: -15.804885864257812
    8. '```' → logprob: -16.429885864257812
    9. ',' → logprob: -16.679885864257812
    10. '[' → logprob: -16.929885864257812

Token 2210: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5905247330665588
    2. '1' → logprob: -0.8405247330665588
    3. '200' → logprob: -5.090524673461914
    4. '500' → logprob: -5.215524673461914
    5. ' ' → logprob: -7.090524673461914
    6. '300' → logprob: -7.215524673461914
    7. 'math' → logprob: -7.965524673461914
    8. '10' → logprob: -8.215524673461914
    9. '150' → logprob: -8.215524673461914
    10. '2' → logprob: -8.465524673461914

Token 2211: '1' (ID: 16)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5908448696136475
    2. '1' → logprob: -0.9658448696136475
    3. '500' → logprob: -3.5908448696136475
    4. '200' → logprob: -3.5908448696136475
    5. '300' → logprob: -5.465845108032227
    6. 'self' → logprob: -5.840845108032227
    7. 'math' → logprob: -6.715845108032227
    8. '150' → logprob: -7.090845108032227
    9. 'float' → logprob: -7.965845108032227
    10. '2' → logprob: -7.965845108032227

Token 2212: 'e' (ID: 68)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019478563219308853
    2. '.' → logprob: -4.394478797912598
    3. '000' → logprob: -6.019478797912598
    4. 'e' → logprob: -6.144478797912598
    5. '00' → logprob: -6.269478797912598
    6. '2' → logprob: -8.019478797912598
    7. '1' → logprob: -9.269478797912598
    8. '5' → logprob: -10.269478797912598
    9. '20' → logprob: -12.519478797912598
    10. '10' → logprob: -13.144478797912598

Token 2213: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.8499683141708374
    2. '7' → logprob: -1.5999683141708374
    3. '9' → logprob: -2.099968433380127
    4. '4' → logprob: -2.349968433380127
    5. '6' → logprob: -2.599968433380127
    6. '8' → logprob: -3.349968433380127
    7. '10' → logprob: -3.474968433380127
    8. '3' → logprob: -4.849968433380127
    9. '+' → logprob: -5.724968433380127
    10. '2' → logprob: -6.849968433380127

Token 2214: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2753502428531647
    2. '
' → logprob: -1.5253502130508423
    3. '        
' → logprob: -4.400350093841553
    4. '    
' → logprob: -5.275350093841553
    5. '  
' → logprob: -6.650350093841553
    6. ' 
' → logprob: -6.650350093841553
    7. '   ' → logprob: -7.150350093841553
    8. '```' → logprob: -7.400350093841553
    9. '<|end|>' → logprob: -7.650350093841553
    10. '.' → logprob: -9.025350570678711

Token 2215: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48113569617271423
    2. '
' → logprob: -0.9811357259750366
    3. '        
' → logprob: -5.356135845184326
    4. '    
' → logprob: -7.481135845184326
    5. ' 
' → logprob: -7.731135845184326
    6. '  
' → logprob: -7.856135845184326
    7. ',
' → logprob: -8.981135368347168
    8. '   ' → logprob: -9.106135368347168
    9. '```' → logprob: -9.106135368347168
    10. '
' → logprob: -9.356135368347168

Token 2216: ' large' (ID: 4410)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043546006083488464
    2. '1' → logprob: -4.293546199798584
    3. '100' → logprob: -4.418546199798584
    4. ' ' → logprob: -5.168546199798584
    5. '   ' → logprob: -5.793546199798584
    6. '0' → logprob: -6.043546199798584
    7. 'while' → logprob: -6.168546199798584
    8. ' while' → logprob: -6.668546199798584
    9. '10' → logprob: -7.918546199798584
    10. '5' → logprob: -7.918546199798584

Token 2217: ' upper' (ID: 13057)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5288602113723755
    2. '_' → logprob: -2.028860092163086
    3. '```' → logprob: -2.403860092163086
    4. ' 
' → logprob: -3.403860092163086
    5. '+' → logprob: -3.653860092163086
    6. '   ' → logprob: -3.778860092163086
    7. ' ' → logprob: -4.153860092163086
    8. '     
' → logprob: -4.153860092163086
    9. '       ' → logprob: -4.528860092163086
    10. ')' → logprob: -4.528860092163086

Token 2218: ' bound' (ID: 11608)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5030170679092407
    2. '_bound' → logprob: -1.3780170679092407
    3. ')' → logprob: -2.503016948699951
    4. '```' → logprob: -4.128016948699951
    5. '_
' → logprob: -4.503016948699951
    6. '_limit' → logprob: -4.878016948699951
    7. '_space' → logprob: -5.128016948699951
    8. '   ' → logprob: -5.753016948699951
    9. '_threshold' → logprob: -6.003016948699951
    10. '       ' → logprob: -6.503016948699951

Token 2219: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017847752198576927
    2. '
' → logprob: -4.142847537994385
    3. '	' → logprob: -7.642847537994385
    4. '   ' → logprob: -7.767847537994385
    5. '        
' → logprob: -8.017848014831543
    6. '    
' → logprob: -9.142848014831543
    7. '  
' → logprob: -9.517848014831543
    8. '<|end|>' → logprob: -9.767848014831543
    9. ' 
' → logprob: -9.892848014831543
    10. '		
' → logprob: -10.142848014831543

Token 2220: ' speed' (ID: 7733)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.031028104946017265
    2. 'speed' → logprob: -3.5310280323028564
    3. 'right' → logprob: -7.6560282707214355
    4. 'velocity' → logprob: -7.7810282707214355
    5. 'the' → logprob: -8.156027793884277
    6. 'search' → logprob: -10.031027793884277
    7. 'answer' → logprob: -11.031027793884277
    8. ' initial' → logprob: -11.031027793884277
    9. 'required' → logprob: -11.281027793884277
    10. ' speed' → logprob: -12.906027793884277

Token 2221: ' guess' (ID: 11915)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08194204419851303
    2. '
' → logprob: -2.581942081451416
    3. '        
' → logprob: -6.581942081451416
    4. '    
' → logprob: -7.706942081451416
    5. '  
' → logprob: -8.206941604614258
    6. '```' → logprob: -8.581941604614258
    7. '   ' → logprob: -8.706941604614258
    8. '\n' → logprob: -9.081941604614258
    9. '	' → logprob: -9.081941604614258
    10. ' 
' → logprob: -9.456941604614258

Token 2222: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03399984538555145
    2. '
' → logprob: -3.5339999198913574
    3. '   ' → logprob: -6.283999919891357
    4. ' while' → logprob: -7.158999919891357
    5. '        
' → logprob: -7.408999919891357
    6. 'while' → logprob: -7.408999919891357
    7. '	while' → logprob: -9.1589994430542
    8. '    
' → logprob: -9.1589994430542
    9. '  
' → logprob: -10.1589994430542
    10. '```' → logprob: -10.6589994430542

Token 2223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35560476779937744
    2. '
' → logprob: -1.2306047677993774
    3. '```' → logprob: -5.980604648590088
    4. '\n' → logprob: -6.230604648590088
    5. '        
' → logprob: -6.605604648590088
    6. '  
' → logprob: -8.105605125427246
    7. '   ' → logprob: -8.230605125427246
    8. '    
' → logprob: -8.605605125427246
    9. ' 
' → logprob: -8.855605125427246
    10. '
' → logprob: -9.605605125427246

Token 2224: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015133601613342762
    2. '
' → logprob: -4.390133380889893
    3. 'while' → logprob: -7.015133380889893
    4. '        
' → logprob: -7.515133380889893
    5. ' while' → logprob: -7.890133380889893
    6. '   ' → logprob: -8.64013385772705
    7. ' for' → logprob: -8.89013385772705
    8. '\n' → logprob: -9.01513385772705
    9. 'for' (adapté à ' for') → logprob: -9.14013385772705
    10. '	' → logprob: -9.51513385772705

Token 2225: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.7610454708337784e-05
    2. ' _' → logprob: -10.500027656555176
    3. '_i' → logprob: -16.75002670288086
    4. '_
' → logprob: -18.62502670288086
    5. '_
' → logprob: -19.12502670288086
    6. '_=' → logprob: -19.50002670288086
    7. '_iter' → logprob: -20.25002670288086
    8. '_step' → logprob: -20.25002670288086
    9. '_

' → logprob: -20.37502670288086
    10. '_in' → logprob: -21.12502670288086

Token 2226: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00023441045777872205
    2. 'in' → logprob: -8.375234603881836
    3. 'range' → logprob: -12.625234603881836
    4. '
' → logprob: -16.125234603881836
    5. 'int' → logprob: -16.250234603881836
    6. 'i' → logprob: -16.250234603881836
    7. '  ' → logprob: -17.125234603881836
    8. '_' → logprob: -17.375234603881836
    9. ' i' → logprob: -17.500234603881836
    10. '    ' → logprob: -17.750234603881836

Token 2227: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0206720617134124e-05
    2. ' range' → logprob: -11.50001049041748
    3. '(range' → logprob: -20.875009536743164
    4. '   ' → logprob: -21.500009536743164
    5. '10' → logprob: -21.500009536743164
    6. '```' → logprob: -21.750009536743164
    7. '
' → logprob: -22.000009536743164
    8. '	range' → logprob: -22.000009536743164
    9. ' ' → logprob: -22.375009536743164
    10. '  ' → logprob: -22.625009536743164

Token 2228: '(' (ID: 7)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.00443652831017971
    2. '100' → logprob: -6.004436492919922
    3. '50' → logprob: -6.254436492919922
    4. '70' → logprob: -10.629436492919922
    5. '   ' → logprob: -12.504436492919922
    6. '80' → logprob: -12.504436492919922
    7. '61' → logprob: -13.254436492919922
    8. '40' → logprob: -13.629436492919922
    9. '(' → logprob: -14.379436492919922
    10. '       ' → logprob: -14.754436492919922

Token 2229: '100' (ID: 1353)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.11349126696586609
    2. '100' → logprob: -2.3634912967681885
    3. '50' → logprob: -4.488491058349609
    4. '70' → logprob: -6.613491058349609
    5. '80' → logprob: -7.488491058349609
    6. '40' → logprob: -11.36349105834961
    7. '120' → logprob: -11.36349105834961
    8. '200' → logprob: -11.61349105834961
    9. '150' → logprob: -11.86349105834961
    10. '64' → logprob: -12.36349105834961

Token 2230: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7903375029563904
    2. '):
' → logprob: -1.6653375625610352
    3. '           ' → logprob: -1.9153375625610352
    4. ':' → logprob: -2.040337562561035
    5. '       ' → logprob: -2.790337562561035
    6. '   ' → logprob: -4.415337562561035
    7. '0' → logprob: -5.915337562561035
    8. '():
' → logprob: -6.540337562561035
    9. '):' → logprob: -7.665337562561035
    10. '```' → logprob: -8.290337562561035

Token 2231: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.1054253011243418e-05
    2. '   ' → logprob: -12.500020980834961
    3. '	       ' → logprob: -12.625020980834961
    4. '		' → logprob: -13.250020980834961
    5. '            
' → logprob: -13.250020980834961
    6. '
' → logprob: -13.500020980834961
    7. '#' → logprob: -13.625020980834961
    8. '       ' → logprob: -13.750020980834961
    9. '            ' → logprob: -13.750020980834961
    10. '<|end|>' → logprob: -13.750020980834961

Token 2232: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.0025603151880204678
    2. ' mid' → logprob: -6.252560138702393
    3. '           ' → logprob: -7.502560138702393
    4. 'middle' → logprob: -9.62756061553955
    5. 'm' → logprob: -12.12756061553955
    6. 'midd' → logprob: -12.87756061553955
    7. '_mid' → logprob: -13.12756061553955
    8. '   ' → logprob: -13.87756061553955
    9. '		' → logprob: -14.25256061553955
    10. ' midpoint' → logprob: -14.37756061553955

Token 2233: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3488557040691376
    2. '=' → logprob: -1.22385573387146
    3. '<|end|>' → logprob: -8.223855972290039
    4. ')' → logprob: -9.723855972290039
    5. '_' → logprob: -10.973855972290039
    6. ' ' → logprob: -11.348855972290039
    7. '	' → logprob: -11.973855972290039
    8. ',' → logprob: -12.223855972290039
    9. 'space' → logprob: -12.473855972290039
    10. '=float' → logprob: -12.723855972290039

Token 2234: ' (' (ID: 350)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.00034940900513902307
    2. '(right' → logprob: -8.250349044799805
    3. ' (' → logprob: -9.375349044799805
    4. '(l' → logprob: -13.250349044799805
    5. '[left' → logprob: -14.500349044799805
    6. '(lhs' → logprob: -15.250349044799805
    7. '(mid' → logprob: -16.000349044799805
    8. '(low' → logprob: -16.000349044799805
    9. '(' → logprob: -16.500349044799805
    10. '(last' → logprob: -16.500349044799805

Token 2235: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -3.309382373117842e-05
    2. ' left' → logprob: -10.750033378601074
    3. '(left' → logprob: -11.750033378601074
    4. 'right' → logprob: -12.625033378601074
    5. '   ' → logprob: -15.750033378601074
    6. '	left' → logprob: -15.750033378601074
    7. ')' → logprob: -16.625032424926758
    8. '[left' → logprob: -16.875032424926758
    9. 'lef' → logprob: -17.500032424926758
    10. '           ' → logprob: -18.125032424926758

Token 2236: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16022492945194244
    2. '+' → logprob: -1.9102249145507812
    3. ' +
' → logprob: -14.910224914550781
    4. '+
' → logprob: -15.035224914550781
    5. ' ' → logprob: -16.16022491455078
    6. ' plus' → logprob: -17.53522491455078
    7. '＋' → logprob: -18.16022491455078
    8. '+self' → logprob: -18.78522491455078
    9. '+[' → logprob: -19.03522491455078
    10. '+b' → logprob: -19.28522491455078

Token 2237: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -7.493430894101039e-05
    2. ' right' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.37507438659668
    4. '	right' → logprob: -18.12507438659668
    5. '```' → logprob: -19.00007438659668
    6. '[right' → logprob: -19.37507438659668
    7. '(right' → logprob: -19.37507438659668
    8. '
' → logprob: -20.50007438659668
    9. ',right' → logprob: -20.75007438659668
    10. 'Right' → logprob: -20.75007438659668

Token 2238: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5954712075181305e-05
    2. ')/' → logprob: -10.250036239624023
    3. ' )' → logprob: -14.375036239624023
    4. ')
' → logprob: -18.125036239624023
    5. '   ' → logprob: -19.250036239624023
    6. '）' → logprob: -19.625036239624023
    7. '```' → logprob: -20.125036239624023
    8. ']' → logprob: -20.375036239624023
    9. '
' → logprob: -20.500036239624023
    10. '0' → logprob: -20.750036239624023

Token 2239: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.11806970834732056
    2. ' /' → logprob: -2.243069648742676
    3. ')' → logprob: -5.368069648742676
    4. ')/' → logprob: -7.743069648742676
    5. '*' → logprob: -10.118069648742676
    6. '   ' → logprob: -10.243069648742676
    7. '```' → logprob: -10.493069648742676
    8. ' *' → logprob: -10.868069648742676
    9. ' ' → logprob: -12.743069648742676
    10. ' )' → logprob: -12.993069648742676

Token 2240: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -17.25000762939453
    4. '   ' → logprob: -17.75000762939453
    5. '=' → logprob: -18.75000762939453
    6. '
' → logprob: -20.50000762939453
    7. '``' → logprob: -20.50000762939453
    8. '(' → logprob: -21.37500762939453
    9. '  ' → logprob: -21.50000762939453
    10. '۲' → logprob: -21.56250762939453

Token 2241: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -18.5
    4. '```' → logprob: -20.125
    5. '
' → logprob: -20.625
    6. 'float' → logprob: -21.625
    7. '``' → logprob: -22.625
    8. '  ' → logprob: -22.625
    9. '۲' → logprob: -22.875
    10. '
' → logprob: -23.0

Token 2242: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2243: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008926403825171292
    2. '
' → logprob: -7.125892639160156
    3. '       ' → logprob: -10.500892639160156
    4. '<|end|>' → logprob: -10.875892639160156
    5. '            
' → logprob: -11.625892639160156
    6. 'if' → logprob: -11.875892639160156
    7. ' if' → logprob: -12.500892639160156
    8. ':
' → logprob: -12.750892639160156
    9. '   ' → logprob: -12.750892639160156
    10. '  
' → logprob: -12.875892639160156

Token 2244: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.049186985939741135
    2. '           ' → logprob: -3.049186944961548
    3. ' if' → logprob: -7.424187183380127
    4. '		' → logprob: -14.049186706542969
    5. '	if' → logprob: -14.299186706542969
    6. 'If' → logprob: -14.924186706542969
    7. '	       ' → logprob: -15.299186706542969
    8. '   ' → logprob: -15.924186706542969
    9. '<|end|>' → logprob: -16.17418670654297
    10. '               ' → logprob: -16.54918670654297

Token 2245: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023255378007888794
    2. ' self' → logprob: -3.7732553482055664
    3. '           ' → logprob: -11.648255348205566
    4. '(self' → logprob: -13.773255348205566
    5. '               ' → logprob: -16.773256301879883
    6. '	self' → logprob: -17.273256301879883
    7. '[self' → logprob: -17.398256301879883
    8. ' ' → logprob: -17.523256301879883
    9. '   ' → logprob: -17.648256301879883
    10. '=self' → logprob: -19.023256301879883

Token 2246: '.fe' (ID: 27687)
  Prédit: '.fe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fe' → logprob: -3.941161776310764e-05
    2. '.can' → logprob: -10.750039100646973
    3. 'fe' → logprob: -11.250039100646973
    4. ' .' → logprob: -13.000039100646973
    5. '.Fe' → logprob: -13.750039100646973
    6. '.fre' → logprob: -14.500039100646973
    7. '.' → logprob: -15.500039100646973
    8. '.fac' → logprob: -15.625039100646973
    9. ' feasible' → logprob: -15.625039100646973
    10. '>.' → logprob: -16.25004005432129

Token 2247: 'asible' (ID: 195692)
  Prédit: 'asible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asible' → logprob: -0.00019889144459739327
    2. 'as' → logprob: -8.750199317932129
    3. 'asib' → logprob: -10.375199317932129
    4. 'sible' → logprob: -12.125199317932129
    5. 'asi' → logprob: -12.875199317932129
    6. 'nable' → logprob: -14.750199317932129
    7. 'isible' → logprob: -15.750199317932129
    8. 'ible' → logprob: -15.875199317932129
    9. 'able' → logprob: -16.125198364257812
    10. 'asil' → logprob: -16.750198364257812

Token 2248: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.500001907348633
    3. '(
' → logprob: -15.375001907348633
    4. ' (' → logprob: -16.250001907348633
    5. '(mi' → logprob: -16.750001907348633
    6. '[mid' → logprob: -17.125001907348633
    7. '(m' → logprob: -18.000001907348633
    8. '           ' → logprob: -18.500001907348633
    9. '       ' → logprob: -19.000001907348633
    10. '(min' → logprob: -19.250001907348633

Token 2249: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.048729412257671356
    2. '):' → logprob: -3.048729419708252
    3. ')' → logprob: -9.798728942871094
    4. ':' → logprob: -10.173728942871094
    5. '           ' → logprob: -10.673728942871094
    6. ':
' → logprob: -11.048728942871094
    7. '):
' → logprob: -12.423728942871094
    8. '               ' → logprob: -12.673728942871094
    9. ' ):
' → logprob: -14.173728942871094
    10. '       ' → logprob: -14.548728942871094

Token 2250: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00014811802248004824
    2. '           ' → logprob: -9.375147819519043
    3. ':
' → logprob: -10.125147819519043
    4. '```' → logprob: -11.875147819519043
    5. '):
' → logprob: -12.125147819519043
    6. '                   ' → logprob: -13.000147819519043
    7. 'right' → logprob: -13.875147819519043
    8. '	           ' → logprob: -14.000147819519043
    9. '   ' → logprob: -14.375147819519043
    10. '                
' → logprob: -14.500147819519043

Token 2251: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.011050059460103512
    2. ' right' → logprob: -4.511050224304199
    3. '               ' → logprob: -13.7610502243042
    4. '	right' → logprob: -14.2610502243042
    5. '           ' → logprob: -14.6360502243042
    6. '.right' → logprob: -17.511049270629883
    7. '_right' → logprob: -17.636049270629883
    8. ',right' → logprob: -19.136049270629883
    9. '[right' → logprob: -19.261049270629883
    10. '                   ' → logprob: -19.511049270629883

Token 2252: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020667314529419
    2. ' =' → logprob: -2.3502066135406494
    3. '＝' → logprob: -18.47520637512207
    4. '=end' → logprob: -18.85020637512207
    5. '=
' → logprob: -18.97520637512207
    6. ')' → logprob: -18.97520637512207
    7. '=line' → logprob: -19.10020637512207
    8. ',' → logprob: -19.47520637512207
    9. '=cut' → logprob: -19.60020637512207
    10. '=edge' → logprob: -19.60020637512207

Token 2253: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.061967913061380386
    2. ' mid' → logprob: -2.8119678497314453
    3. '(mid' → logprob: -15.311967849731445
    4. '_mid' → logprob: -17.186967849731445
    5. '[mid' → logprob: -17.436967849731445
    6. '.mid' → logprob: -19.811967849731445
    7. 'Mid' → logprob: -20.436967849731445
    8. ' midpoint' → logprob: -20.936967849731445
    9. '-mid' → logprob: -22.061967849731445
    10. 'middle' → logprob: -22.061967849731445

Token 2254: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009641039068810642
    2. 'else' → logprob: -7.125964164733887
    3. ' else' → logprob: -8.875964164733887
    4. '```' → logprob: -11.500964164733887
    5. '       ' → logprob: -12.625964164733887
    6. '		' → logprob: -13.250964164733887
    7. '   ' → logprob: -13.875964164733887
    8. '<|end|>' → logprob: -14.625964164733887
    9. '               ' → logprob: -14.875964164733887
    10. '
' → logprob: -14.875964164733887

Token 2255: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005929743405431509
    2. 'else' → logprob: -5.255929946899414
    3. ' else' → logprob: -7.505929946899414
    4. '```' → logprob: -9.255929946899414
    5. '       ' → logprob: -10.255929946899414
    6. '   ' → logprob: -12.255929946899414
    7. '		' → logprob: -12.380929946899414
    8. '
' → logprob: -13.505929946899414
    9. '          ' → logprob: -14.005929946899414
    10. '               ' → logprob: -14.380929946899414

Token 2256: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.08694841712713242
    2. '           ' → logprob: -2.5869483947753906
    3. ' else' → logprob: -4.836948394775391
    4. '		' → logprob: -9.71194839477539
    5. '       ' → logprob: -10.71194839477539
    6. '```' → logprob: -12.83694839477539
    7. '   ' → logprob: -12.96194839477539
    8. '	else' → logprob: -12.96194839477539
    9. '	       ' → logprob: -13.46194839477539
    10. '
' → logprob: -13.71194839477539

Token 2257: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009850525297224522
    2. '                ' → logprob: -5.63485050201416
    3. '            ' → logprob: -6.75985050201416
    4. ':
' → logprob: -6.88485050201416
    5. '           ' → logprob: -7.25985050201416
    6. ' 
' → logprob: -7.88485050201416
    7. ':' → logprob: -7.88485050201416
    8. '{' → logprob: -8.38485050201416
    9. ' ' → logprob: -8.38485050201416
    10. '              ' → logprob: -8.63485050201416

Token 2258: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24638040363788605
    2. ' left' → logprob: -1.7463804483413696
    3. 'left' → logprob: -3.49638032913208
    4. '           ' → logprob: -4.62138032913208
    5. '       ' → logprob: -7.24638032913208
    6. '[left' → logprob: -7.24638032913208
    7. '            ' → logprob: -7.49638032913208
    8. '```' → logprob: -7.87138032913208
    9. '   ' → logprob: -8.246380805969238
    10. ' ' → logprob: -8.746380805969238

Token 2259: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -4.961759259458631e-06
    2. ' left' → logprob: -12.250004768371582
    3. '	left' → logprob: -16.5000057220459
    4. '[left' → logprob: -17.2500057220459
    5. '               ' → logprob: -17.3750057220459
    6. '           ' → logprob: -19.0000057220459
    7. '_left' → logprob: -19.1250057220459
    8. '.left' → logprob: -19.2500057220459
    9. ':left' → logprob: -19.7500057220459
    10. '                   ' → logprob: -19.7500057220459

Token 2260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759395360946655
    2. '=' → logprob: -0.8259395360946655
    3. ' ' → logprob: -17.075939178466797
    4. ' =
' → logprob: -17.075939178466797
    5. ' +=' → logprob: -17.950939178466797
    6. '=
' → logprob: -18.450939178466797
    7. ')' → logprob: -19.075939178466797
    8. '[' → logprob: -19.200939178466797
    9. ',' → logprob: -19.325939178466797
    10. '=line' → logprob: -19.700939178466797

Token 2261: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.006715728435665369
    2. ' mid' → logprob: -5.006715774536133
    3. '(mid' → logprob: -15.131715774536133
    4. '[mid' → logprob: -16.006715774536133
    5. '_mid' → logprob: -17.006715774536133
    6. '.mid' → logprob: -19.006715774536133
    7. 'middle' → logprob: -19.506715774536133
    8. ' midpoint' → logprob: -20.881715774536133
    9. '   ' → logprob: -21.506715774536133
    10. 'Mid' → logprob: -22.006715774536133

Token 2262: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6362594962120056
    2. '
' → logprob: -1.0112595558166504
    3. '        
' → logprob: -2.8862595558166504
    4. '    
' → logprob: -4.13625955581665
    5. ' 
' → logprob: -4.51125955581665
    6. '  
' → logprob: -5.01125955581665
    7. '\n' → logprob: -5.26125955581665
    8. ' return' → logprob: -5.51125955581665
    9. 'return' → logprob: -6.13625955581665
    10. ' ' → logprob: -6.88625955581665

Token 2263: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013515453319996595
    2. 'return' → logprob: -7.376351356506348
    3. '        
' → logprob: -8.376351356506348
    4. '
' → logprob: -8.751351356506348
    5. '```' → logprob: -8.876351356506348
    6. '   ' → logprob: -9.876351356506348
    7. ' return' → logprob: -10.001351356506348
    8. '    
' → logprob: -10.501351356506348
    9. '           ' → logprob: -10.501351356506348
    10. '  
' → logprob: -12.001351356506348

Token 2264: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4743574857711792
    2. '       ' → logprob: -0.9743574857711792
    3. '```' → logprob: -8.599357604980469
    4. ' return' → logprob: -9.724357604980469
    5. '   ' → logprob: -10.349357604980469
    6. '
' → logprob: -13.474357604980469
    7. 'right' → logprob: -14.599357604980469
    8. '	return' → logprob: -14.974357604980469
    9. '      ' → logprob: -15.099357604980469
    10. '           ' → logprob: -15.349357604980469

Token 2265: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.10020667314529419
    2. ' right' → logprob: -2.3502066135406494
    3. '(right' → logprob: -18.22520637512207
    4. '	right' → logprob: -18.85020637512207
    5. '_right' → logprob: -19.72520637512207
    6. 'left' → logprob: -19.97520637512207
    7. '[right' → logprob: -21.10020637512207
    8. 'Right' → logprob: -21.22520637512207
    9. '右' → logprob: -21.47520637512207
    10. 'rights' → logprob: -21.85020637512207

Token 2266: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2267: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2268: ' parse' (ID: 8420)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.10045769065618515
    2. ' solve' → logprob: -2.4754576683044434
    3. 'main' → logprob: -5.475457668304443
    4. '_main' → logprob: -6.225457668304443
    5. ' parse' → logprob: -6.850457668304443
    6. ' def' → logprob: -6.850457668304443
    7. ' __' → logprob: -7.225457668304443
    8. ' sys' → logprob: -7.350457668304443
    9. 'solve' → logprob: -7.725457668304443
    10. '__' → logprob: -8.100458145141602

Token 2269: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.10674084722995758
    2. '_line' → logprob: -2.356740951538086
    3. '_' → logprob: -5.731740951538086
    4. '_args' → logprob: -6.481740951538086
    5. '(input' → logprob: -7.731740951538086
    6. 'input' → logprob: -7.981740951538086
    7. '_code' → logprob: -8.731740951538086
    8. 'line' → logprob: -9.231740951538086
    9. '_int' → logprob: -9.606740951538086
    10. '(argv' → logprob: -9.981740951538086

Token 2270: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004162214230746031
    2. '():
' → logprob: -5.879162311553955
    3. '_line' → logprob: -7.254162311553955
    4. '(' → logprob: -8.254161834716797
    5. '()' → logprob: -8.754161834716797
    6. '(line' → logprob: -9.629161834716797
    7. '(input' → logprob: -10.004161834716797
    8. '_input' → logprob: -10.629161834716797
    9. '_lines' → logprob: -11.504161834716797
    10. '(prompt' → logprob: -11.629161834716797

Token 2271: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.006804421544075012
    2. '():
' → logprob: -5.006804466247559
    3. '(' → logprob: -10.131804466247559
    4. '()' → logprob: -10.881804466247559
    5. ' ():' → logprob: -11.506804466247559
    6. '(input' → logprob: -12.381804466247559
    7. '(prompt' → logprob: -13.256804466247559
    8. '(argv' → logprob: -13.256804466247559
    9. '():
' → logprob: -13.381804466247559
    10. '(file' → logprob: -13.381804466247559

Token 2272: ' Problem' (ID: 26113)
  Prédit: 'Problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Problem' → logprob: -0.6947106719017029
    2. 'Tuple' → logprob: -0.6947106719017029
    3. 'int' → logprob: -7.194710731506348
    4. 'tuple' → logprob: -7.194710731506348
    5. 'List' → logprob: -10.819710731506348
    6. ' Tuple' → logprob: -11.194710731506348
    7. 'sys' → logprob: -11.444710731506348
    8. 'None' → logprob: -11.694710731506348
    9. ' Problem' → logprob: -12.819710731506348
    10. '[' → logprob: -13.944710731506348

Token 2273: 'Input' (ID: 3275)
  Prédit: 'Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -5.200166469876422e-06
    2. '_Input' → logprob: -12.750004768371582
    3. '_input' → logprob: -14.500004768371582
    4. ' Input' → logprob: -14.750004768371582
    5. '\Input' → logprob: -14.875004768371582
    6. 'I' → logprob: -15.375004768371582
    7. '	Input' → logprob: -15.625004768371582
    8. 'Problem' → logprob: -16.0000057220459
    9. '<Input' → logprob: -16.2500057220459
    10. 'Inputs' → logprob: -16.8750057220459

Token 2274: ':
' (ID: 734)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.14325575530529022
    2. '():' → logprob: -2.0182557106018066
    3. '()' → logprob: -7.518255710601807
    4. '():
' → logprob: -11.018256187438965
    5. ':' → logprob: -11.518256187438965
    6. ':
' → logprob: -12.518256187438965
    7. '():

' → logprob: -13.143256187438965
    8. 'def' → logprob: -13.393256187438965
    9. ' ():' → logprob: -14.268256187438965
    10. '()->' → logprob: -14.268256187438965

Token 2275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002509666606783867
    2. 'import' → logprob: -6.502509593963623
    3. '```' → logprob: -7.877509593963623
    4. 'n' → logprob: -8.752510070800781
    5. 'line' → logprob: -9.002510070800781
    6. 'lines' → logprob: -9.377510070800781
    7. '	line' → logprob: -10.002510070800781
    8. ' lines' → logprob: -10.127510070800781
    9. ' line' → logprob: -10.377510070800781
    10. ' n' → logprob: -10.502510070800781

Token 2276: ' d' (ID: 272)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00949433445930481
    2. ' n' → logprob: -4.759494304656982
    3. '   ' → logprob: -8.00949478149414
    4. 'input' → logprob: -8.38449478149414
    5. 'import' → logprob: -8.75949478149414
    6. 'lines' → logprob: -9.75949478149414
    7. 'line' → logprob: -10.63449478149414
    8. 'num' → logprob: -10.75949478149414
    9. '_n' → logprob: -11.13449478149414
    10. '_' → logprob: -11.13449478149414

Token 2277: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06860288232564926
    2. ' =' → logprob: -3.0686028003692627
    3. ',' → logprob: -3.9436028003692627
    4. '   ' → logprob: -8.943602561950684
    5. '=int' → logprob: -8.943602561950684
    6. 'ef' → logprob: -9.818602561950684
    7. '=
' → logprob: -9.818602561950684
    8. '=input' → logprob: -10.443602561950684
    9. '_=' → logprob: -12.318602561950684
    10. '=sys' → logprob: -12.693602561950684

Token 2278: ' n' (ID: 297)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4680423438549042
    2. 'k' → logprob: -1.4680423736572266
    3. 'n' → logprob: -2.3430423736572266
    4. 'm' → logprob: -3.0930423736572266
    5. 'o' → logprob: -6.718042373657227
    6. 'ob' → logprob: -8.718042373657227
    7. ' b' → logprob: -9.093042373657227
    8. 't' → logprob: -9.343042373657227
    9. 'M' → logprob: -9.468042373657227
    10. 'K' → logprob: -9.468042373657227

Token 2279: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12810266017913818
    2. ' =' → logprob: -2.1281027793884277
    3. ',' → logprob: -6.753102779388428
    4. '=input' → logprob: -12.75310230255127
    5. ' ' → logprob: -13.50310230255127
    6. '   ' → logprob: -13.87810230255127
    7. ')' → logprob: -14.50310230255127
    8. 'input' → logprob: -15.62810230255127
    9. '=int' → logprob: -15.75310230255127
    10. '  ' → logprob: -15.75310230255127

Token 2280: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.45739468932151794
    2. 'k' → logprob: -1.7073947191238403
    3. 'm' → logprob: -1.7073947191238403
    4. 'max' → logprob: -6.082394599914551
    5. 'B' → logprob: -7.582394599914551
    6. 'M' → logprob: -7.707394599914551
    7. 't' → logprob: -7.957394599914551
    8. 'K' → logprob: -8.33239459991455
    9. 's' → logprob: -9.08239459991455
    10. 'p' → logprob: -9.45739459991455

Token 2281: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016090091317892075
    2. ' =' → logprob: -4.141089916229248
    3. ',' → logprob: -10.266090393066406
    4. '_' → logprob: -11.766090393066406
    5. '   ' → logprob: -12.641090393066406
    6. 'space' → logprob: -13.016090393066406
    7. ' ' → logprob: -13.641090393066406
    8. ')' → logprob: -13.641090393066406
    9. ' ' → logprob: -14.641090393066406
    10. 'e' → logprob: -14.891090393066406

Token 2282: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.03805365785956383
    2. ' map' → logprob: -3.2880537509918213
    3. '[' → logprob: -11.413053512573242
    4. '(map' → logprob: -14.788053512573242
    5. 'sys' → logprob: -15.038053512573242
    6. '	map' → logprob: -15.413053512573242
    7. 'list' → logprob: -15.663053512573242
    8. ' [' → logprob: -16.913053512573242
    9. '_map' → logprob: -17.538053512573242
    10. '   ' → logprob: -17.663053512573242

Token 2283: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.20142777264118195
    2. 'int' → logprob: -1.7014278173446655
    3. 'sys' → logprob: -12.076427459716797
    4. '=int' → logprob: -12.326427459716797
    5. '[int' → logprob: -12.951427459716797
    6. '<int' → logprob: -14.576427459716797
    7. 'input' → logprob: -14.701427459716797
    8. ' int' → logprob: -14.826427459716797
    9. '(sys' → logprob: -14.951427459716797
    10. ',int' → logprob: -15.326427459716797

Token 2284: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.03674626722931862
    2. 'sys' → logprob: -3.4117462635040283
    3. '   ' → logprob: -7.036746501922607
    4. '=sys' → logprob: -7.036746501922607
    5. ')' → logprob: -7.661746501922607
    6. ',' → logprob: -7.911746501922607
    7. '(),' → logprob: -8.66174602508545
    8. 'input' → logprob: -9.16174602508545
    9. '(input' → logprob: -9.41174602508545
    10. ' sys' → logprob: -10.03674602508545

Token 2285: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00017159747949335724
    2. 'input' → logprob: -8.750171661376953
    3. ' sys' → logprob: -11.250171661376953
    4. '=sys' → logprob: -17.875171661376953
    5. '(sys' → logprob: -18.000171661376953
    6. '   ' → logprob: -18.625171661376953
    7. 'stdin' → logprob: -19.500171661376953
    8. '
' → logprob: -20.125171661376953
    9. '	sys' → logprob: -20.500171661376953
    10. ' input' → logprob: -20.750171661376953

Token 2286: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0001227276516146958
    2. '.argv' → logprob: -9.250123023986816
    3. 'stdin' → logprob: -11.750123023986816
    4. '.stdout' → logprob: -11.875123023986816
    5. '.readline' → logprob: -12.375123023986816
    6. '.std' → logprob: -12.875123023986816
    7. '(stdin' → logprob: -12.875123023986816
    8. '.' → logprob: -13.375123023986816
    9. '.stderr' → logprob: -15.750123023986816
    10. '.st' → logprob: -15.750123023986816

Token 2287: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.2246291337069124e-05
    2. '.stdin' → logprob: -11.125021934509277
    3. '().' → logprob: -12.250021934509277
    4. '.' → logprob: -13.125021934509277
    5. '.read' → logprob: -14.875021934509277
    6. '.readlines' → logprob: -15.625021934509277
    7. ' readline' → logprob: -16.625022888183594
    8. ').' → logprob: -17.000022888183594
    9. ' .' → logprob: -17.500022888183594
    10. '.argv' → logprob: -18.375022888183594

Token 2288: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.4849443838757e-06
    2. '())' → logprob: -13.000004768371582
    3. '()' → logprob: -13.125004768371582
    4. '()
' → logprob: -16.125003814697266
    5. '()[' → logprob: -16.375003814697266
    6. '(' → logprob: -18.750003814697266
    7. ' ().' → logprob: -18.875003814697266
    8. '.split' → logprob: -19.125003814697266
    9. '().
' → logprob: -19.625003814697266
    10. '   ' → logprob: -20.000003814697266

Token 2289: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.01423226110637188
    2. 'strip' → logprob: -4.264232158660889
    3. 'rstrip' → logprob: -9.639232635498047
    4. '().' → logprob: -13.389232635498047
    5. ' split' → logprob: -13.764232635498047
    6. '(split' → logprob: -14.014232635498047
    7. ' strip' → logprob: -15.889232635498047
    8. 'read' → logprob: -17.264232635498047
    9. '(strip' → logprob: -17.764232635498047
    10. '_split' → logprob: -18.014232635498047

Token 2290: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1341560333967209
    2. ')' → logprob: -2.1341559886932373
    3. '()' → logprob: -5.009156227111816
    4. '())
' → logprob: -7.759156227111816
    5. '   ' → logprob: -9.634156227111816
    6. '()
' → logprob: -11.634156227111816
    7. ')
' → logprob: -11.634156227111816
    8. '(' → logprob: -12.509156227111816
    9. '))' → logprob: -13.134156227111816
    10. '()))' → logprob: -13.634156227111816

Token 2291: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020761197432875633
    2. 'ob' → logprob: -3.895761251449585
    3. '	ob' → logprob: -8.770761489868164
    4. ' obstacles' → logprob: -10.645761489868164
    5. 'obs' → logprob: -11.145761489868164
    6. '_ob' → logprob: -11.645761489868164
    7. '(ob' → logprob: -12.020761489868164
    8. '```' → logprob: -12.270761489868164
    9. '    
' → logprob: -12.895761489868164
    10. '
' → logprob: -13.645761489868164

Token 2292: ' obstacles' (ID: 46430)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.0006775272195227444
    2. ' obstacles' → logprob: -7.500677585601807
    3. '   ' → logprob: -9.500677108764648
    4. 'obs' → logprob: -10.250677108764648
    5. 'o' → logprob: -12.125677108764648
    6. '	ob' → logprob: -12.375677108764648
    7. '```' → logprob: -13.250677108764648
    8. '_ob' → logprob: -13.500677108764648
    9. '(ob' → logprob: -14.500677108764648
    10. 'obl' → logprob: -15.250677108764648

Token 2293: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03150446340441704
    2. ' =' → logprob: -3.5315043926239014
    3. '=[]' → logprob: -6.4065046310424805
    4. '=[]
' → logprob: -9.53150463104248
    5. '.append' → logprob: -11.15650463104248
    6. '   ' → logprob: -12.15650463104248
    7. '[]' → logprob: -12.78150463104248
    8. '.extend' → logprob: -13.28150463104248
    9. '[:]' → logprob: -13.28150463104248
    10. '.' → logprob: -14.15650463104248

Token 2294: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.17174670100212097
    2. '[' → logprob: -2.1717467308044434
    3. '[]' → logprob: -3.1717467308044434
    4. '[int' → logprob: -6.421746730804443
    5. '[
' → logprob: -8.921746253967285
    6. '[class' → logprob: -10.546746253967285
    7. '[]

' → logprob: -10.921746253967285
    8. '[n' → logprob: -11.046746253967285
    9. '[obj' → logprob: -11.421746253967285
    10. '[List' → logprob: -11.421746253967285

Token 2295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02998119220137596
    2. 'for' → logprob: -3.5299811363220215
    3. ' for' → logprob: -8.40498161315918
    4. '	for' → logprob: -11.90498161315918
    5. 'while' → logprob: -16.52998161315918
    6. '
' → logprob: -16.90498161315918
    7. '       ' → logprob: -17.40498161315918
    8. '    
' → logprob: -17.90498161315918
    9. '<|end|>' → logprob: -18.77998161315918
    10. '   ' → logprob: -18.90498161315918

Token 2296: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.0280383548888494e-06
    2. ' for' → logprob: -14.250000953674316
    3. '   ' → logprob: -15.000000953674316
    4. '
' → logprob: -19.125001907348633
    5. '	for' → logprob: -19.875001907348633
    6. '```' → logprob: -23.375001907348633
    7. '    
' → logprob: -25.125001907348633
    8. 'while' → logprob: -26.000001907348633
    9. '``' → logprob: -26.750001907348633
    10. 'For' → logprob: -27.125001907348633

Token 2297: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.1008713702030946e-06
    2. '_range' → logprob: -13.125001907348633
    3. '_i' → logprob: -16.250001907348633
    4. '_in' → logprob: -17.375001907348633
    5. '_=' → logprob: -17.500001907348633
    6. ' _' → logprob: -18.250001907348633
    7. '_
' → logprob: -18.375001907348633
    8. 'range' → logprob: -19.375001907348633
    9. '_
' → logprob: -21.250001907348633
    10. '_

' → logprob: -21.250001907348633

Token 2298: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0267343707382679
    2. ' range' → logprob: -4.276734352111816
    3. 'in' → logprob: -5.026734352111816
    4. ' in' → logprob: -5.151734352111816
    5. '_' → logprob: -9.151734352111816
    6. 'n' → logprob: -11.776734352111816
    7. 'int' → logprob: -12.026734352111816
    8. '   ' → logprob: -12.526734352111816
    9. '  ' → logprob: -12.651734352111816
    10. ' ' → logprob: -12.776734352111816

Token 2299: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.320199877838604e-07
    2. ' range' → logprob: -15.0
    3. '   ' → logprob: -21.125
    4. '
' → logprob: -21.375
    5. 'sys' → logprob: -21.5
    6. '	range' → logprob: -21.875
    7. '```' → logprob: -23.25
    8. '(range' → logprob: -23.25
    9. ' ' → logprob: -23.75
    10. '  ' → logprob: -24.0

Token 2300: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.024498751387000084
    2. 'int' → logprob: -3.774498701095581
    3. '(n' → logprob: -6.77449893951416
    4. '(int' → logprob: -9.39949893951416
    5. 'range' → logprob: -10.89949893951416
    6. ' n' → logprob: -12.14949893951416
    7. '_n' → logprob: -12.89949893951416
    8. ' int' → logprob: -14.52449893951416
    9. '_' → logprob: -15.89949893951416
    10. '(' → logprob: -16.024497985839844

Token 2301: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0900496244430542
    2. '():
' → logprob: -2.8400497436523438
    3. '   ' → logprob: -3.7150497436523438
    4. '()):
' → logprob: -6.590049743652344
    5. '):' → logprob: -7.215049743652344
    6. '       ' → logprob: -7.840049743652344
    7. ':
' → logprob: -8.215049743652344
    8. ':' → logprob: -8.465049743652344
    9. '():' → logprob: -8.715049743652344
    10. '()' → logprob: -9.715049743652344

Token 2302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028175773099064827
    2. '   ' → logprob: -3.6531758308410645
    3. '```' → logprob: -7.5281758308410645
    4. 'r' → logprob: -8.403175354003906
    5. 'pos' → logprob: -8.653175354003906
    6. 'position' → logprob: -8.903175354003906
    7. 'line' → logprob: -9.028175354003906
    8. 'x' → logprob: -9.403175354003906
    9. ' line' → logprob: -9.903175354003906
    10. '	   ' → logprob: -9.903175354003906

Token 2303: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.48162156343460083
    2. 'pos' → logprob: -0.9816215634346008
    3. 'x' → logprob: -5.231621742248535
    4. ' p' → logprob: -6.731621742248535
    5. ' pos' → logprob: -7.106621742248535
    6. 'position' → logprob: -9.606621742248535
    7. 'h' → logprob: -9.856621742248535
    8. '   ' → logprob: -10.856621742248535
    9. ' x' → logprob: -11.106621742248535
    10. 'px' → logprob: -13.106621742248535

Token 2304: ',' (ID: 11)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.5938057899475098
    2. ',' → logprob: -0.8438057899475098
    3. ',h' → logprob: -4.46880578994751
    4. 'osition' → logprob: -5.09380578994751
    5. 'h' → logprob: -10.468805313110352
    6. ' os' → logprob: -10.718805313110352
    7. ',height' → logprob: -10.968805313110352
    8. ' ,' → logprob: -11.718805313110352
    9. ',int' → logprob: -12.093805313110352
    10. ',p' → logprob: -12.218805313110352

Token 2305: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -4.008129963040119e-06
    2. ' h' → logprob: -12.875003814697266
    3. 'q' → logprob: -14.000003814697266
    4. '	h' → logprob: -15.500003814697266
    5. '```' → logprob: -16.125003814697266
    6. '
' → logprob: -16.500003814697266
    7. '   ' → logprob: -16.750003814697266
    8. 't' → logprob: -17.750003814697266
    9. 's' → logprob: -18.125003814697266
    10. '_h' → logprob: -18.250003814697266

Token 2306: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815708540380001
    2. ' =' → logprob: -4.018157005310059
    3. '=sys' → logprob: -12.518157005310059
    4. '=int' → logprob: -12.643157005310059
    5. '   ' → logprob: -16.393157958984375
    6. 'p' → logprob: -16.518157958984375
    7. 't' → logprob: -16.893157958984375
    8. ' ' → logprob: -17.018157958984375
    9. '=input' → logprob: -17.393157958984375
    10. '=p' → logprob: -17.893157958984375

Token 2307: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -4.842555426876061e-06
    2. ' map' → logprob: -12.250004768371582
    3. '	map' → logprob: -20.2500057220459
    4. 'list' → logprob: -20.8750057220459
    5. '(map' → logprob: -21.7500057220459
    6. 'tuple' → logprob: -22.5000057220459
    7. '_map' → logprob: -23.1250057220459
    8. '   ' → logprob: -23.3750057220459
    9. '.map' → logprob: -23.6250057220459
    10. '
' → logprob: -23.8750057220459

Token 2308: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0019326817709952593
    2. 'int' → logprob: -6.251932621002197
    3. '[int' → logprob: -13.251933097839355
    4. '=int' → logprob: -13.501933097839355
    5. '<int' → logprob: -14.626933097839355
    6. '(lambda' → logprob: -16.00193214416504
    7. ' int' → logprob: -17.00193214416504
    8. '	int' → logprob: -17.12693214416504
    9. ',int' → logprob: -17.12693214416504
    10. ':int' → logprob: -17.37693214416504

Token 2309: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.016577135771512985
    2. 'sys' → logprob: -4.516577243804932
    3. '=sys' → logprob: -5.266577243804932
    4. ',' → logprob: -9.016576766967773
    5. '   ' → logprob: -9.516576766967773
    6. '(int' → logprob: -10.391576766967773
    7. '	sys' → logprob: -10.391576766967773
    8. ' sys' → logprob: -10.391576766967773
    9. '(),' → logprob: -10.641576766967773
    10. '()' → logprob: -11.891576766967773

Token 2310: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -9.088346359931165e-07
    2. ' sys' → logprob: -14.000000953674316
    3. '(sys' → logprob: -23.0
    4. '=sys' → logprob: -23.0
    5. '	sys' → logprob: -23.75
    6. 'Sys' → logprob: -24.0
    7. '_sys' → logprob: -24.125
    8. 'map' → logprob: -24.375
    9. 'input' → logprob: -25.125
    10. 'str' → logprob: -25.625

Token 2311: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.04635956510901451
    2. 'sys' → logprob: -3.9213595390319824
    3. 'stdin' → logprob: -3.9213595390319824
    4. '.readline' → logprob: -5.421359539031982
    5. '=sys' → logprob: -7.171359539031982
    6. 'in' → logprob: -8.54636001586914
    7. '(stdin' → logprob: -8.67136001586914
    8. 'range' → logprob: -9.67136001586914
    9. 'input' → logprob: -10.79636001586914
    10. '(sys' → logprob: -11.04636001586914

Token 2312: '.readline' (ID: 74673)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3154852092266083
    2. '.readline' → logprob: -1.3154852390289307
    3. 'stdin' → logprob: -7.190485000610352
    4. '=sys' → logprob: -7.190485000610352
    5. '.stdin' → logprob: -7.690485000610352
    6. 'range' → logprob: -8.440485000610352
    7. 'read' → logprob: -11.315485000610352
    8. '(sys' → logprob: -12.190485000610352
    9. '.sys' → logprob: -12.315485000610352
    10. '.' → logprob: -12.440485000610352

Token 2313: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0280383548888494e-06
    2. '()' → logprob: -14.250000953674316
    3. '.readline' → logprob: -15.375000953674316
    4. '().__' → logprob: -17.375001907348633
    5. ' ().' → logprob: -17.750001907348633
    6. '()
' → logprob: -18.125001907348633
    7. '()).' → logprob: -19.000001907348633
    8. '.' → logprob: -19.250001907348633
    9. '.split' → logprob: -19.625001907348633
    10. '().
' → logprob: -20.250001907348633

Token 2314: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001615438493900001
    2. 'strip' → logprob: -6.501615524291992
    3. 'rstrip' → logprob: -9.126615524291992
    4. ' split' → logprob: -13.501615524291992
    5. '(split' → logprob: -13.626615524291992
    6. 'read' → logprob: -14.126615524291992
    7. '_split' → logprob: -14.751615524291992
    8. 'spl' → logprob: -15.876615524291992
    9. 'plit' → logprob: -16.001615524291992
    10. 'parse' → logprob: -16.501615524291992

Token 2315: '())
' (ID: 4574)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.00416126474738121
    2. ')' → logprob: -5.629161357879639
    3. '())
' → logprob: -7.629161357879639
    4. '       ' → logprob: -10.00416088104248
    5. '   ' → logprob: -11.00416088104248
    6. ')
' → logprob: -12.12916088104248
    7. '()
' → logprob: -13.00416088104248
    8. '()' → logprob: -13.12916088104248
    9. '))
' → logprob: -14.12916088104248
    10. ')`
' → logprob: -14.12916088104248

Token 2316: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009585086372680962
    2. 'ob' → logprob: -7.375958442687988
    3. '   ' → logprob: -8.500958442687988
    4. '	ob' → logprob: -9.375958442687988
    5. ' obstacles' → logprob: -10.375958442687988
    6. '	' → logprob: -12.125958442687988
    7. '(ob' → logprob: -12.875958442687988
    8. '_ob' → logprob: -14.125958442687988
    9. 'obs' → logprob: -14.250958442687988
    10. ' ob' → logprob: -14.250958442687988

Token 2317: ' obstacles' (ID: 46430)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -5.5577775128767826e-06
    2. ' obstacles' → logprob: -12.875005722045898
    3. '       ' → logprob: -13.750005722045898
    4. '   ' → logprob: -13.750005722045898
    5. '	ob' → logprob: -14.375005722045898
    6. 'obs' → logprob: -15.375005722045898
    7. '
' → logprob: -18.1250057220459
    8. '(ob' → logprob: -18.3750057220459
    9. ' ob' → logprob: -19.0000057220459
    10. 'obl' → logprob: -19.6250057220459

Token 2318: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00023929782037157565
    2. '.' → logprob: -8.375239372253418
    3. 'append' → logprob: -13.000239372253418
    4. '.ap' → logprob: -13.125239372253418
    5. ').' → logprob: -13.250239372253418
    6. '.app' → logprob: -13.375239372253418
    7. ' .' → logprob: -15.500239372253418
    8. '.add' → logprob: -15.500239372253418
    9. '.Append' → logprob: -16.0002384185791
    10. '].' → logprob: -16.1252384185791

Token 2319: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.77627644513268e-06
    2. 'Obstacle' → logprob: -11.750008583068848
    3. 'Ob' → logprob: -14.125008583068848
    4. '(ob' → logprob: -16.625009536743164
    5. '(
' → logprob: -18.000009536743164
    6. '((' → logprob: -18.250009536743164
    7. '   ' → logprob: -19.750009536743164
    8. '	' → logprob: -20.250009536743164
    9. 'ob' → logprob: -20.375009536743164
    10. '_ob' → logprob: -20.625009536743164

Token 2320: 'Obstacle' (ID: 134296)
  Prédit: 'Obstacle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Obstacle' → logprob: 0.0
    2. 'Ob' → logprob: -17.75
    3. '   ' → logprob: -21.0
    4. 'Obs' → logprob: -22.0
    5. 'ob' → logprob: -22.5
    6. ' Ob' → logprob: -22.75
    7. 'Observable' → logprob: -23.5
    8. '	' → logprob: -24.125
    9. 'OB' → logprob: -24.25
    10. '  ' → logprob: -24.375

Token 2321: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.008626513183116913
    2. 'p' → logprob: -4.758626461029053
    3. '(' → logprob: -11.383626937866211
    4. '(
' → logprob: -14.758626937866211
    5. ' p' → logprob: -16.00862693786621
    6. ' (' → logprob: -17.13362693786621
    7. ')p' → logprob: -17.63362693786621
    8. '	p' → logprob: -18.00862693786621
    9. ',p' → logprob: -18.75862693786621
    10. ')' → logprob: -18.88362693786621

Token 2322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019431571708992124
    2. ',h' → logprob: -6.251943111419678
    3. ',
' → logprob: -11.501943588256836
    4. ',p' → logprob: -12.751943588256836
    5. ' ,' → logprob: -13.751943588256836
    6. ')' → logprob: -15.501943588256836
    7. '),' → logprob: -16.251943588256836
    8. ',
' → logprob: -17.626943588256836
    9. 'p' → logprob: -17.751943588256836
    10. ',

' → logprob: -17.751943588256836

Token 2323: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -5.157039049663581e-05
    2. ' h' → logprob: -9.875051498413086
    3. '       ' → logprob: -19.000051498413086
    4. '	h' → logprob: -19.000051498413086
    5. '
' → logprob: -19.500051498413086
    6. '           ' → logprob: -19.750051498413086
    7. '   ' → logprob: -20.000051498413086
    8. ')' → logprob: -20.500051498413086
    9. '"h' → logprob: -20.625051498413086
    10. 'int' → logprob: -20.750051498413086

Token 2324: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.3133394420146942
    2. '))' → logprob: -1.3133394718170166
    3. ')' → logprob: -9.813339233398438
    4. ')
' → logprob: -11.188339233398438
    5. '))
' → logprob: -12.688339233398438
    6. '       ' → logprob: -12.688339233398438
    7. '   ' → logprob: -13.063339233398438
    8. '))

' → logprob: -15.188339233398438
    9. 'return' → logprob: -15.688339233398438
    10. ' ))
' → logprob: -15.688339233398438

Token 2325: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3138519525527954
    2. 'return' → logprob: -1.3138519525527954
    3. ' return' → logprob: -7.438851833343506
    4. '	return' → logprob: -13.813852310180664
    5. '
' → logprob: -14.938852310180664
    6. '```' → logprob: -15.188852310180664
    7. '    
' → logprob: -15.188852310180664
    8. ' ' → logprob: -16.063852310180664
    9. '       ' → logprob: -17.188852310180664
    10. 'b' → logprob: -17.813852310180664

Token 2326: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0003945688367821276
    2. '   ' → logprob: -8.000394821166992
    3. ' return' → logprob: -9.750394821166992
    4. '
' → logprob: -14.750394821166992
    5. 'b' → logprob: -15.875394821166992
    6. 'max' → logprob: -15.875394821166992
    7. 'problem' → logprob: -16.000394821166992
    8. '    
' → logprob: -16.625394821166992
    9. '	return' → logprob: -17.125394821166992
    10. '```' → logprob: -18.375394821166992

Token 2327: ' Problem' (ID: 26113)
  Prédit: 'Problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Problem' → logprob: -7.493430894101039e-05
    2. ' Problem' → logprob: -9.500075340270996
    3. '   ' → logprob: -23.00007438659668
    4. 'Problems' → logprob: -23.62507438659668
    5. 'Proble' → logprob: -25.62507438659668
    6. ' ' → logprob: -26.12507438659668
    7. '_problem' → logprob: -26.25007438659668
    8. ' problem' → logprob: -26.37507438659668
    9. 'problem' → logprob: -26.37507438659668
    10. 'Prob' → logprob: -27.50007438659668

Token 2328: 'Input' (ID: 3275)
  Prédit: 'Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: 0.0
    2. ' Input' → logprob: -19.875
    3. '_input' → logprob: -21.0
    4. 'Inputs' → logprob: -21.125
    5. '	Input' → logprob: -21.5
    6. 'Problem' → logprob: -21.5
    7. '<Input' → logprob: -21.75
    8. '_Input' → logprob: -21.875
    9. '\Input' → logprob: -22.125
    10. '.Input' → logprob: -23.25

Token 2329: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00021879478299524635
    2. '(distance' → logprob: -8.500218391418457
    3. 'd' → logprob: -11.250218391418457
    4. '(' → logprob: -13.250218391418457
    5. 'distance' → logprob: -14.500218391418457
    6. '(dist' → logprob: -18.250219345092773
    7. '((' → logprob: -18.375219345092773
    8. '(
' → logprob: -18.750219345092773
    9. 'Distance' → logprob: -18.875219345092773
    10. ' (' → logprob: -19.000219345092773

Token 2330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008145124302245677
    2. ',d' → logprob: -7.125814437866211
    3. ' ,' → logprob: -12.375814437866211
    4. '=' → logprob: -13.125814437866211
    5. ',
' → logprob: -13.750814437866211
    6. ')' → logprob: -14.000814437866211
    7. '(ob' → logprob: -14.375814437866211
    8. 'ob' → logprob: -14.500814437866211
    9. 'd' → logprob: -15.875814437866211
    10. '   ' → logprob: -15.875814437866211

Token 2331: ' obstacles' (ID: 46430)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.0022084240335971117
    2. ' obstacles' → logprob: -7.002208232879639
    3. 'n' → logprob: -7.127208232879639
    4. 'b' → logprob: -7.627208232879639
    5. '   ' → logprob: -12.752208709716797
    6. ' ob' → logprob: -14.127208709716797
    7. ' n' → logprob: -14.377208709716797
    8. ' b' → logprob: -14.752208709716797
    9. '	ob' → logprob: -15.002208709716797
    10. '(ob' → logprob: -15.377208709716797

Token 2332: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001509739668108523
    2. ',b' → logprob: -6.501509666442871
    3. ' ,' → logprob: -12.251509666442871
    4. '   ' → logprob: -13.001509666442871
    5. 'b' → logprob: -15.126509666442871
    6. ',p' → logprob: -16.126510620117188
    7. ',d' → logprob: -17.751510620117188
    8. ',n' → logprob: -17.876510620117188
    9. ',B' → logprob: -18.126510620117188
    10. ',
' → logprob: -18.126510620117188

Token 2333: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.935296834039036e-06
    2. ' b' → logprob: -12.75000286102295
    3. '   ' → logprob: -25.000003814697266
    4. '	b' → logprob: -26.250003814697266
    5. ')b' → logprob: -27.000003814697266
    6. '$b' → logprob: -28.750003814697266
    7. '    ' → logprob: -29.625003814697266
    8. '_b' → logprob: -29.750003814697266
    9. '       ' → logprob: -29.875003814697266
    10. ' б' → logprob: -30.250003814697266

Token 2334: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -15.125000953674316
    3. ' )' → logprob: -15.625000953674316
    4. '))' → logprob: -15.750000953674316
    5. '())' → logprob: -15.875000953674316
    6. ')return' → logprob: -16.625
    7. ')#' → logprob: -17.75
    8. '}' → logprob: -17.875
    9. '   ' → logprob: -17.875
    10. '<|end|>' → logprob: -17.875

Token 2335: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5756329298019409
    2. 'def' → logprob: -1.075632929801941
    3. '<|end|>' → logprob: -2.7006330490112305
    4. '```' → logprob: -3.8256330490112305
    5. '#' → logprob: -5.0756330490112305
    6. 'import' → logprob: -6.9506330490112305
    7. ' if' → logprob: -8.32563304901123
    8. '<|end|>' → logprob: -9.82563304901123
    9. '#!/' → logprob: -11.07563304901123
    10. '...' → logprob: -11.07563304901123

Token 2336: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.2519792318344116
    2. ' main' → logprob: -1.5019792318344116
    3. 'def' → logprob: -10.501978874206543
    4. '_main' → logprob: -10.876978874206543
    5. '__' → logprob: -13.751978874206543
    6. ' def' → logprob: -14.251978874206543
    7. '
' → logprob: -14.376978874206543
    8. 'm' → logprob: -14.751978874206543
    9. '	main' → logprob: -15.001978874206543
    10. 'solve' → logprob: -15.626978874206543

Token 2337: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001407017232850194
    2. '():
' → logprob: -6.626407146453857
    3. '()' → logprob: -9.5014066696167
    4. '():
' → logprob: -13.2514066696167
    5. ' ():' → logprob: -13.6264066696167
    6. '()>' → logprob: -14.0014066696167
    7. '()">' → logprob: -14.3764066696167
    8. '():

' → logprob: -14.7514066696167
    9. '().__' → logprob: -14.8764066696167
    10. '().' → logprob: -16.001407623291016

Token 2338: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001970150275155902
    2. 'problem' → logprob: -7.376970291137695
    3. 'input' → logprob: -7.626970291137695
    4. 'import' → logprob: -8.251970291137695
    5. ' problem' → logprob: -8.376970291137695
    6. '    
' → logprob: -9.001970291137695
    7. '   ' → logprob: -9.251970291137695
    8. '
' → logprob: -10.626970291137695
    9. '	pro' → logprob: -10.626970291137695
    10. '_problem' → logprob: -10.751970291137695

Token 2339: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' (adapté à ' problem') → logprob: -0.011118210852146149
    2. '   ' → logprob: -5.011118412017822
    3. 'input' → logprob: -5.886118412017822
    4. 'import' → logprob: -6.886118412017822
    5. 'pi' → logprob: -7.636118412017822
    6. ' problem' → logprob: -9.511117935180664
    7. 'prob' → logprob: -10.761117935180664
    8. 'p' → logprob: -12.261117935180664
    9. 'sys' → logprob: -12.886117935180664
    10. 'inp' → logprob: -13.261117935180664

Token 2340: ' =' (ID: 314)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.009810983203351498
    2. '_' → logprob: -4.634810924530029
    3. '   ' → logprob: -11.759811401367188
    4. '_inputs' → logprob: -11.759811401367188
    5. 'input' → logprob: -12.009811401367188
    6. '()' → logprob: -12.009811401367188
    7. 'Input' → logprob: -12.259811401367188
    8. ' _' → logprob: -12.509811401367188
    9. ')' → logprob: -12.509811401367188
    10. '_in' → logprob: -13.134811401367188

Token 2341: ' parse' (ID: 8420)
  Prédit: 'Problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Problem' → logprob: -0.31362760066986084
    2. 'parse' → logprob: -1.3136276006698608
    3. ' parse' → logprob: -8.563627243041992
    4. ' Problem' → logprob: -8.688627243041992
    5. '   ' → logprob: -12.563627243041992
    6. '=parse' → logprob: -14.063627243041992
    7. '(parse' → logprob: -14.188627243041992
    8. 'Parse' → logprob: -14.688627243041992
    9. '_problem' → logprob: -15.313627243041992
    10. '	parse' → logprob: -15.688627243041992

Token 2342: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.5094070477061905e-05
    2. '_problem' → logprob: -11.375015258789062
    3. 'input' → logprob: -13.375015258789062
    4. '_' → logprob: -14.375015258789062
    5. 'Input' → logprob: -14.625015258789062
    6. '()' → logprob: -15.250015258789062
    7. '```' → logprob: -15.875015258789062
    8. 'problem' → logprob: -16.250015258789062
    9. '
' → logprob: -16.250015258789062
    10. '_output' → logprob: -16.500015258789062

Token 2343: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001876755035482347
    2. '
' → logprob: -6.5018768310546875
    3. 'planner' → logprob: -8.626876831054688
    4. 'tp' → logprob: -9.751876831054688
    5. '    
' → logprob: -9.876876831054688
    6. 'solver' → logprob: -10.001876831054688
    7. 'plan' → logprob: -10.876876831054688
    8. 'pl' → logprob: -12.126876831054688
    9. '```' → logprob: -12.501876831054688
    10. ' planner' → logprob: -12.876876831054688

Token 2344: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020221376791596413
    2. 'planner' → logprob: -4.27022123336792
    3. ' planner' → logprob: -5.14522123336792
    4. 'solver' → logprob: -9.020221710205078
    5. 'pl' → logprob: -10.395221710205078
    6. ' solver' → logprob: -10.645221710205078
    7. 'plan' → logprob: -11.020221710205078
    8. 'tp' → logprob: -12.145221710205078
    9. '   ' → logprob: -12.520221710205078
    10. '	pl' → logprob: -12.895221710205078

Token 2345: ' planner' (ID: 66791)
  Prédit: 'planner'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'planner' (adapté à ' planner') → logprob: -0.0019348275382071733
    2. 'solver' → logprob: -6.251935005187988
    3. 'tp' → logprob: -12.501935005187988
    4. 'plan' → logprob: -13.501935005187988
    5. '   ' → logprob: -14.001935005187988
    6. ' planner' → logprob: -15.501935005187988
    7. 'pl' → logprob: -17.376934051513672
    8. 'solution' → logprob: -18.626934051513672
    9. 'planning' → logprob: -18.876934051513672
    10. 'Planner' → logprob: -19.376934051513672

Token 2346: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007617156486958265
    2. '=' → logprob: -4.882616996765137
    3. '   ' → logprob: -11.882616996765137
    4. '.' → logprob: -13.632616996765137
    5. ' ' → logprob: -14.257616996765137
    6. '  ' → logprob: -14.632616996765137
    7. 'planner' → logprob: -15.007616996765137
    8. '	' → logprob: -15.132616996765137
    9. '_pl' → logprob: -15.382616996765137
    10. 'Planner' → logprob: -15.382616996765137

Token 2347: ' Tra' (ID: 12393)
  Prédit: 'Trajectory'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Trajectory' → logprob: 0.0
    2. 'Tra' → logprob: -19.125
    3. 'Velocity' → logprob: -19.375
    4. 'Terrain' → logprob: -19.5
    5. 'Topology' → logprob: -20.25
    6. '   ' → logprob: -20.375
    7. 'T' → logprob: -20.5
    8. '	T' → logprob: -20.75
    9. 'Telemetry' → logprob: -21.0
    10. 'Projectile' → logprob: -21.0

Token 2348: 'jectory' (ID: 42401)
  Prédit: 'jectory'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jectory' → logprob: -0.00014358828775584698
    2. 'ject' → logprob: -8.875144004821777
    3. '   ' → logprob: -13.000144004821777
    4. '``' → logprob: -14.500144004821777
    5. '       ' → logprob: -15.375144004821777
    6. 'j' → logprob: -15.500144004821777
    7. 'planner' → logprob: -16.50014305114746
    8. 'ct' → logprob: -16.87514305114746
    9. '           ' → logprob: -17.00014305114746
    10. '```' → logprob: -17.25014305114746

Token 2349: 'Planner' (ID: 120933)
  Prédit: 'Planner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Planner' → logprob: -4.320199877838604e-07
    2. 'planner' → logprob: -14.875
    3. 'Plan' → logprob: -17.0
    4. ' Planner' → logprob: -17.25
    5. ' planner' → logprob: -19.25
    6. 'Planning' → logprob: -20.375
    7. '
' → logprob: -20.5
    8. 'Pl' → logprob: -20.75
    9. 'Solver' → logprob: -21.125
    10. '   ' → logprob: -21.375

Token 2350: '(problem' (ID: 190865)
  Prédit: '(problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(problem' → logprob: -1.4140441635390744e-05
    2. '(plan' → logprob: -11.625014305114746
    3. '(' → logprob: -13.375014305114746
    4. 'problem' → logprob: -13.625014305114746
    5. '(prob' → logprob: -13.625014305114746
    6. '(pl' → logprob: -13.875014305114746
    7. '(pro' → logprob: -16.12501335144043
    8. '(program' → logprob: -16.50001335144043
    9. '(
' → logprob: -16.87501335144043
    10. 'Problem' → logprob: -17.62501335144043

Token 2351: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7488259077072144
    2. ')' → logprob: -1.1238259077072144
    3. ')
' → logprob: -1.7488259077072144
    4. 'planner' → logprob: -4.498826026916504
    5. '
' → logprob: -5.373826026916504
    6. '(pl' → logprob: -5.748826026916504
    7. ').' → logprob: -5.873826026916504
    8. '.solve' → logprob: -6.123826026916504
    9. '(plan' → logprob: -7.123826026916504
    10. '(problem' → logprob: -7.123826026916504

Token 2352: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010185245424509048
    2. 'result' → logprob: -5.010185241699219
    3. 'print' → logprob: -6.010185241699219
    4. ' result' → logprob: -7.510185241699219
    5. 'speed' → logprob: -8.135185241699219
    6. ' print' → logprob: -9.510185241699219
    7. '```' → logprob: -9.885185241699219
    8. ' speed' → logprob: -11.010185241699219
    9. '
' → logprob: -12.010185241699219
    10. 'answer' → logprob: -12.135185241699219

Token 2353: ' ans' (ID: 3345)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6800968050956726
    2. 'speed' → logprob: -0.9300968050956726
    3. 'print' → logprob: -3.1800968647003174
    4. 'res' → logprob: -3.4300968647003174
    5. 'min' → logprob: -4.180096626281738
    6. 'answer' → logprob: -5.430096626281738
    7. 'best' → logprob: -6.055096626281738
    8. 'ans' (adapté à ' ans') → logprob: -6.180096626281738
    9. '   ' → logprob: -7.805096626281738
    10. 'initial' → logprob: -9.055096626281738

Token 2354: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03127376735210419
    2. '=' → logprob: -3.53127384185791
    3. '   ' → logprob: -6.65627384185791
    4. '.' → logprob: -9.53127384185791
    5. 'u' → logprob: -10.15627384185791
    6. ' ' → logprob: -11.03127384185791
    7. 'ow' → logprob: -11.15627384185791
    8. 'wer' → logprob: -11.28127384185791
    9. '_' → logprob: -11.40627384185791
    10. '    ' → logprob: -11.53127384185791

Token 2355: ' planner' (ID: 66791)
  Prédit: 'planner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'planner' → logprob: -0.06196846812963486
    2. ' planner' → logprob: -2.8119685649871826
    3. 'pl' → logprob: -15.186968803405762
    4. 'plan' → logprob: -15.436968803405762
    5. ' planer' → logprob: -15.686968803405762
    6. '   ' → logprob: -16.061967849731445
    7. 'planning' → logprob: -17.436967849731445
    8. ' f' → logprob: -18.436967849731445
    9. ' planners' → logprob: -18.436967849731445
    10. 'round' → logprob: -18.561967849731445

Token 2356: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -6.704273118884885e-07
    2. '.' → logprob: -14.875000953674316
    3. 'solve' → logprob: -15.250000953674316
    4. '.sol' → logprob: -17.375
    5. ' .' → logprob: -17.875
    6. '.s' → logprob: -19.625
    7. '   ' → logprob: -20.375
    8. '.solution' → logprob: -20.875
    9. '.save' → logprob: -21.125
    10. '.run' → logprob: -21.625

Token 2357: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2767795920372009
    2. 'print' → logprob: -1.9017796516418457
    3. '()
' → logprob: -2.6517796516418457
    4. '
' → logprob: -4.026779651641846
    5. ' print' → logprob: -6.026779651641846
    6. '()' → logprob: -7.026779651641846
    7. '```' → logprob: -7.526779651641846
    8. '(print' → logprob: -9.651779174804688
    9. '	print' → logprob: -9.901779174804688
    10. '#print' → logprob: -10.151779174804688

Token 2358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.251956045627594
    2. 'print' → logprob: -1.5019559860229492
    3. '```' → logprob: -11.25195598602295
    4. ' print' → logprob: -11.62695598602295
    5. '	print' → logprob: -12.50195598602295
    6. '#print' → logprob: -14.87695598602295
    7. '    
' → logprob: -15.25195598602295
    8. '
' → logprob: -15.87695598602295
    9. 'import' → logprob: -16.126956939697266
    10. '`' → logprob: -16.126956939697266

Token 2359: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.06198303773999214
    2. '   ' → logprob: -2.811983108520508
    3. ' print' → logprob: -11.311983108520508
    4. '
' → logprob: -13.061983108520508
    5. '```' → logprob: -14.561983108520508
    6. '	print' → logprob: -15.186983108520508
    7. '#print' → logprob: -16.186983108520508
    8. '    
' → logprob: -16.186983108520508
    9. 'printf' → logprob: -17.311983108520508
    10. 'sys' → logprob: -18.186983108520508

Token 2360: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.00046808819752186537
    2. '(round' → logprob: -8.000468254089355
    3. '(ans' → logprob: -9.125468254089355
    4. '(' → logprob: -11.125468254089355
    5. '("{' → logprob: -12.250468254089355
    6. 'f' → logprob: -13.625468254089355
    7. '(format' → logprob: -13.625468254089355
    8. '("%.' → logprob: -14.250468254089355
    9. '(int' → logprob: -15.250468254089355
    10. '{' → logprob: -15.250468254089355

Token 2361: '"{' (ID: 27510)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.011061026714742184
    2. '"{' → logprob: -4.511061191558838
    3. ''{' → logprob: -12.01106071472168
    4. 'f' → logprob: -12.88606071472168
    5. '(ans' → logprob: -13.01106071472168
    6. '("{' → logprob: -13.88606071472168
    7. '{"' → logprob: -14.51106071472168
    8. '{
' → logprob: -15.01106071472168
    9. '(f' → logprob: -15.51106071472168
    10. '("%.' → logprob: -16.01106071472168

Token 2362: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -3.128163257315464e-07
    2. ' ans' → logprob: -15.25
    3. '(ans' → logprob: -17.5
    4. '	ans' → logprob: -19.25
    5. '{' → logprob: -19.375
    6. 'answer' → logprob: -21.375
    7. '_ans' → logprob: -22.375
    8. '0' → logprob: -22.75
    9. '   ' → logprob: -23.125
    10. 'ANS' → logprob: -23.5

Token 2363: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -2.129266067640856e-05
    2. ':' → logprob: -11.125020980834961
    3. '.' → logprob: -12.500020980834961
    4. ' :.' → logprob: -13.500020980834961
    5. '{' → logprob: -14.875020980834961
    6. '():' → logprob: -15.000020980834961
    7. '}' → logprob: -15.250020980834961
    8. '(.' → logprob: -15.750020980834961
    9. '(' → logprob: -16.00002098083496
    10. '   ' → logprob: -16.75002098083496

Token 2364: '5' (ID: 20)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.6579445004463196
    2. '9' → logprob: -1.4079444408416748
    3. '6' → logprob: -2.282944440841675
    4. '10' → logprob: -2.532944440841675
    5. '8' → logprob: -3.282944440841675
    6. '12' → logprob: -4.657944679260254
    7. '15' → logprob: -4.782944679260254
    8. '14' → logprob: -8.032944679260254
    9. '11' → logprob: -8.532944679260254
    10. '13' → logprob: -9.157944679260254

Token 2365: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. 'g' → logprob: -17.875
    3. '6' → logprob: -19.75
    4. 'lf' → logprob: -20.125
    5. 'e' → logprob: -21.25
    6. '	f' → logprob: -21.875
    7. '}' → logprob: -22.0
    8. '7' → logprob: -22.5
    9. '```' → logprob: -22.5
    10. 'ф' → logprob: -22.625

Token 2366: '}")

' (ID: 119200)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.0008180848672054708
    2. '")' → logprob: -7.500818252563477
    3. ')")' → logprob: -8.250818252563477
    4. '}")
' → logprob: -12.750818252563477
    5. '}' → logprob: -14.750818252563477
    6. ')' → logprob: -15.250818252563477
    7. '}")
' → logprob: -16.250818252563477
    8. ')}' → logprob: -16.375818252563477
    9. '})' → logprob: -16.375818252563477
    10. ' }' → logprob: -16.875818252563477

Token 2367: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0001532401074655354
    2. '<|end|>' → logprob: -9.875153541564941
    3. '```' → logprob: -10.000153541564941
    4. '
' → logprob: -10.500153541564941
    5. ' if' → logprob: -10.875153541564941
    6. '#' → logprob: -12.125153541564941
    7. '#if' → logprob: -14.125153541564941
    8. '  
' → logprob: -14.250153541564941
    9. '    
' → logprob: -14.375153541564941
    10. '@if' → logprob: -15.250153541564941

Token 2368: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.029820965602993965
    2. ' __' → logprob: -3.5298209190368652
    3. 'name' → logprob: -9.654821395874023
    4. '___' → logprob: -13.279821395874023
    5. '_name' → logprob: -13.279821395874023
    6. 'if' → logprob: -13.654821395874023
    7. '____' → logprob: -14.404821395874023
    8. ''' → logprob: -14.904821395874023
    9. ' "__' → logprob: -15.029821395874023
    10. '"' → logprob: -15.904821395874023

Token 2369: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.9933058619499207
    2. ' ==' → logprob: -0.9933058619499207
    3. '==' → logprob: -1.4933059215545654
    4. '=="' → logprob: -3.4933059215545654
    5. '=='' → logprob: -6.618305683135986
    6. ' __' → logprob: -7.243305683135986
    7. 'name' → logprob: -7.243305683135986
    8. '_' → logprob: -7.493305683135986
    9. '_name' → logprob: -7.618305683135986
    10. '_main' → logprob: -8.993306159973145

Token 2370: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00035357745946384966
    2. '==' → logprob: -8.250353813171387
    3. '=="' → logprob: -9.875353813171387
    4. '__.__' → logprob: -10.500353813171387
    5. ' ==' → logprob: -11.500353813171387
    6. '__.' → logprob: -13.625353813171387
    7. '__["' → logprob: -14.375353813171387
    8. '=='' → logprob: -14.750353813171387
    9. '__":
' → logprob: -15.375353813171387
    10. '__('' → logprob: -15.625353813171387

Token 2371: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3139320909976959
    2. '__' → logprob: -1.8139320611953735
    3. '=="' → logprob: -2.563932180404663
    4. ' ==' → logprob: -3.813932180404663
    5. '=='' → logprob: -5.063931941986084
    6. '["' → logprob: -8.188932418823242
    7. '['' → logprob: -8.313932418823242
    8. '===' → logprob: -9.188932418823242
    9. '[' → logprob: -9.438932418823242
    10. '"' → logprob: -9.813932418823242

Token 2372: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0015062900492921472
    2. ''' → logprob: -6.501506328582764
    3. '__' → logprob: -12.751505851745605
    4. ' "__' → logprob: -14.376505851745605
    5. '"user' → logprob: -16.126506805419922
    6. 'main' → logprob: -16.501506805419922
    7. '"name' → logprob: -16.751506805419922
    8. '"log' → logprob: -18.376506805419922
    9. '"class' → logprob: -19.001506805419922
    10. '"default' → logprob: -19.001506805419922

Token 2373: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0054026078432798386
    2. '__' → logprob: -5.255402565002441
    3. '"' → logprob: -8.880402565002441
    4. ''' → logprob: -10.755402565002441
    5. 'name' → logprob: -12.505402565002441
    6. '=="' → logprob: -13.380402565002441
    7. '_main' → logprob: -14.380402565002441
    8. 'built' → logprob: -14.630402565002441
    9. '__":
' → logprob: -15.255402565002441
    10. '```' → logprob: -15.380402565002441

Token 2374: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.23114873468875885
    2. '__' → logprob: -1.6061487197875977
    3. '__':
' → logprob: -5.231148719787598
    4. '__
' → logprob: -8.856148719787598
    5. '__.__' → logprob: -8.981148719787598
    6. '__["' → logprob: -9.856148719787598
    7. '__.' → logprob: -10.481148719787598
    8. '__
' → logprob: -11.231148719787598
    9. '__);
' → logprob: -12.731148719787598
    10. '__()
' → logprob: -13.481148719787598

Token 2375: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.49562492966651917
    2. '   ' → logprob: -1.1206248998641968
    3. '	main' → logprob: -2.7456250190734863
    4. ' main' → logprob: -7.745625019073486
    5. '_main' → logprob: -9.870624542236328
    6. '(main' → logprob: -11.370624542236328
    7. '   ' → logprob: -11.870624542236328
    8. '    
' → logprob: -12.245624542236328
    9. '```' → logprob: -12.495624542236328
    10. '	Main' → logprob: -12.995624542236328

Token 2376: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.5
    3. '	main' → logprob: -18.25
    4. '   ' → logprob: -21.5
    5. '_main' → logprob: -22.375
    6. 'sys' → logprob: -24.0
    7. '.main' → logprob: -24.125
    8. '(main' → logprob: -24.25
    9. 'Main' → logprob: -26.125
    10. 'import' → logprob: -26.375

Token 2377: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2375
Tokens correctement prédits (1ère position, stricte): 863
Tokens correctement prédits (1ère position, avec adaptation): 923
Tokens correctement prédits (top 10): 1789
Précision stricte (1ère position): 36.34%
Précision adaptée (1ère position): 38.86%
Précision (top 10): 75.33%
================================================================================
