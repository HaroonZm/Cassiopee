================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

N, E, T = map(int, input().split())
W = list(map(int, input().split()))

rules = [[] for _ in range(N+1)]
for _ in range(E):
    line = list(map(int, input().split()))
    G = line[0]
    C = line[1]
    S = line[2:]
    rules[G].append(S)

INF = 10**9
memo = {}

def dfs(m):
    if m in memo:
        return memo[m]
    if W[m-1] == 1:
        memo[m] = 1
        return 1
    if not rules[m]:
        memo[m] = INF
        return INF
    res = INF
    for comb in rules[m]:
        ssum = 0
        used = set()
        ok = True
        for x in comb:
            if x in used:
                ok = False
                break
            used.add(x)
            val = dfs(x)
            if val == INF:
                ok = False
                break
            ssum += val
        if ok:
            if ssum < res:
                res = ssum
    memo[m] = res
    return res

ans = dfs(T)
if ans == INF:
    print(-1)
else:
    print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3437388837337494
    2. '.' → logprob: -1.5937389135360718
    3. '<|end|>' → logprob: -2.9687387943267822
    4. '\' → logprob: -4.468739032745361
    5. 'import' → logprob: -5.093739032745361
    6. 'newline' → logprob: -5.093739032745361
    7. '<|end|>' → logprob: -5.968739032745361
    8. '' → logprob: -5.968739032745361
    9. '\r' → logprob: -6.093739032745361
    10. '
' → logprob: -6.343739032745361

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -9.078839502763003e-05
    2. '[' → logprob: -11.250090599060059
    3. '.import' → logprob: -11.625090599060059
    4. '.readline' → logprob: -11.750090599060059
    5. '```' → logprob: -11.750090599060059
    6. ' .' → logprob: -12.000090599060059
    7. '.
' → logprob: -12.500090599060059
    8. '.`' → logprob: -12.625090599060059
    9. '`.' → logprob: -12.875090599060059
    10. '.user' → logprob: -12.875090599060059

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.7563169002532959
    2. 's' → logprob: -1.131316900253296
    3. 't' → logprob: -3.006316900253296
    4. 'sys' → logprob: -3.256316900253296
    5. 'set' → logprob: -3.631316900253296
    6. 'soft' → logprob: -4.006317138671875
    7. 'default' → logprob: -4.256317138671875
    8. 'ex' → logprob: -4.881317138671875
    9. '_' → logprob: -5.006317138671875
    10. 'suffix' → logprob: -5.131317138671875

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.003742952598258853
    2. 'ursive' → logprob: -6.3787431716918945
    3. 'limit' → logprob: -7.0037431716918945
    4. 'ur' → logprob: -7.5037431716918945
    5. 'urse' → logprob: -9.253743171691895
    6. '_limit' → logprob: -9.628743171691895
    7. 'urs' → logprob: -9.628743171691895
    8. 'ut' → logprob: -9.753743171691895
    9. 'u' → logprob: -10.003743171691895
    10. 't' → logprob: -10.128743171691895

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.25208455324172974
    2. '_limit' → logprob: -1.502084493637085
    3. '_depth' → logprob: -9.752084732055664
    4. 'lim' → logprob: -10.002084732055664
    5. ' limit' → logprob: -10.752084732055664
    6. 'depth' → logprob: -11.252084732055664
    7. '_lim' → logprob: -12.627084732055664
    8. '_' → logprob: -12.752084732055664
    9. 'Limit' → logprob: -13.502084732055664
    10. '(limit' → logprob: -13.752084732055664

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.694766489090398e-05
    2. '(
' → logprob: -10.500066757202148
    3. ' (' → logprob: -11.375066757202148
    4. '40' → logprob: -11.875066757202148
    5. '(

' → logprob: -12.500066757202148
    6. '((' → logprob: -12.750066757202148
    7. '```' → logprob: -12.750066757202148
    8. '(.' → logprob: -13.000066757202148
    9. '('' → logprob: -13.125066757202148
    10. '(()' → logprob: -13.250066757202148

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12741151452064514
    2. '100' → logprob: -2.1274116039276123
    3. ' ' → logprob: -8.002411842346191
    4. '500' → logprob: -9.752411842346191
    5. '300' → logprob: -9.877411842346191
    6. '250' → logprob: -10.752411842346191
    7. '  ' → logprob: -12.252411842346191
    8. '   ' → logprob: -12.502411842346191
    9. '200' → logprob: -12.877411842346191
    10. '150' → logprob: -13.127411842346191

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005634739995002747
    2. '00' → logprob: -6.005634784698486
    3. '000' → logprob: -6.005634784698486
    4. '4' → logprob: -7.505634784698486
    5. '6' → logprob: -9.130634307861328
    6. '5' → logprob: -11.755634307861328
    7. '```' → logprob: -12.255634307861328
    8. ')' → logprob: -12.505634307861328
    9. '3' → logprob: -12.630634307861328
    10. '**' → logprob: -12.630634307861328

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00762082589790225
    2. '9' → logprob: -5.507620811462402
    3. '6' → logprob: -5.757620811462402
    4. '8' → logprob: -7.882620811462402
    5. '```' → logprob: -15.757620811462402
    6. ' ' → logprob: -16.38262176513672
    7. '(' → logprob: -17.13262176513672
    8. '5' → logprob: -17.75762176513672
    9. '``' → logprob: -18.25762176513672
    10. '999' → logprob: -18.38262176513672

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.676292231422849e-05
    2. '))' → logprob: -11.375017166137695
    3. ' )' → logprob: -12.250017166137695
    4. ')
' → logprob: -15.875017166137695
    5. ')`' → logprob: -16.000017166137695
    6. ')))' → logprob: -16.625017166137695
    7. '`)' → logprob: -17.000017166137695
    8. ' ' → logprob: -17.750017166137695
    9. '）' → logprob: -17.875017166137695
    10. '),' → logprob: -17.875017166137695

Token 13: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47406914830207825
    2. '\' → logprob: -1.2240691184997559
    3. '\n' → logprob: -3.599069118499756
    4. '
' → logprob: -4.224069118499756
    5. '```' → logprob: -4.224069118499756
    6. ')' → logprob: -5.099069118499756
    7. '`' → logprob: -5.474069118499756
    8. 'import' → logprob: -5.599069118499756
    9. '#' → logprob: -5.599069118499756
    10. '

' → logprob: -6.724069118499756

Token 14: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17562882602214813
    2. ' ' → logprob: -2.175628900527954
    3. ',' → logprob: -3.800628900527954
    4. '=' → logprob: -3.800628900527954
    5. ' ,' → logprob: -6.300628662109375
    6. ')' → logprob: -8.425628662109375
    7. '.' → logprob: -8.550628662109375
    8. '  ' → logprob: -9.175628662109375
    9. '<|end|>' → logprob: -9.175628662109375
    10. ' )' → logprob: -9.300628662109375

Token 15: ' E' (ID: 457)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8980337381362915
    2. ' M' → logprob: -1.8980337381362915
    3. ' ' → logprob: -2.148033618927002
    4. ' input' → logprob: -2.398033618927002
    5. 'M' → logprob: -2.648033618927002
    6. ' =' → logprob: -2.898033618927002
    7. '=' → logprob: -3.023033618927002
    8. '=input' → logprob: -4.023033618927002
    9. 'space' → logprob: -4.773033618927002
    10. '  ' → logprob: -4.898033618927002

Token 16: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16042590141296387
    2. '=' → logprob: -1.9104259014129639
    3. ',' → logprob: -8.660426139831543
    4. ' ' → logprob: -10.785426139831543
    5. '=input' → logprob: -12.785426139831543
    6. ' ,' → logprob: -13.535426139831543
    7. ' =
' → logprob: -14.035426139831543
    8. ')' → logprob: -14.285426139831543
    9. '  ' → logprob: -15.160426139831543
    10. ' =
' → logprob: -15.410426139831543

Token 17: ' T' (ID: 353)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -1.8321259021759033
    2. 'K' → logprob: -2.2071259021759033
    3. ' =' → logprob: -2.2071259021759033
    4. ' K' → logprob: -2.2071259021759033
    5. 'V' → logprob: -2.8321259021759033
    6. 'F' → logprob: -2.9571259021759033
    7. ' M' → logprob: -2.9571259021759033
    8. 'M' → logprob: -3.3321259021759033
    9. ' Q' → logprob: -3.4571259021759033
    10. 'T' → logprob: -3.4571259021759033

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04919447377324104
    2. '=' → logprob: -3.049194574356079
    3. ',' → logprob: -7.4241943359375
    4. ' ,' → logprob: -11.9241943359375
    5. '=input' → logprob: -13.7991943359375
    6. ' ' → logprob: -14.2991943359375
    7. ')' → logprob: -14.7991943359375
    8. ' =
' → logprob: -15.1741943359375
    9. '<|end|>' → logprob: -15.4241943359375
    10. '=int' → logprob: -15.6741943359375

Token 19: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2519470453262329
    2. 'map' → logprob: -1.501947045326233
    3. '	map' → logprob: -12.626947402954102
    4. ' [' → logprob: -12.751947402954102
    5. ' ' → logprob: -13.001947402954102
    6. '(map' → logprob: -13.251947402954102
    7. '[' → logprob: -13.501947402954102
    8. '0' → logprob: -13.501947402954102
    9. 'list' → logprob: -14.001947402954102
    10. 'input' → logprob: -14.001947402954102

Token 20: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.12968072295188904
    2. '(' → logprob: -2.129680633544922
    3. '(str' → logprob: -6.254680633544922
    4. '(input' → logprob: -7.379680633544922
    5. '(lambda' → logprob: -8.879680633544922
    6. '(list' → logprob: -10.379680633544922
    7. '(
' → logprob: -11.379680633544922
    8. 'int' → logprob: -12.129680633544922
    9. '(eval' → logprob: -12.379680633544922
    10. '(tuple' → logprob: -12.379680633544922

Token 21: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.053801778703927994
    2. '(' → logprob: -3.6788017749786377
    3. ',input' → logprob: -4.553802013397217
    4. '(sys' → logprob: -4.678802013397217
    5. ',' → logprob: -5.178802013397217
    6. ')' → logprob: -7.053802013397217
    7. 'input' → logprob: -7.428802013397217
    8. '=input' → logprob: -10.303801536560059
    9. ')(' → logprob: -10.428801536560059
    10. ' input' → logprob: -10.553801536560059

Token 22: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25502917170524597
    2. ' input' → logprob: -1.5050292015075684
    3. 'sys' → logprob: -6.255029201507568
    4. ' sys' → logprob: -6.755029201507568
    5. ')' → logprob: -12.00502872467041
    6. ' ' → logprob: -13.63002872467041
    7. ' )' → logprob: -14.63002872467041
    8. '(input' → logprob: -14.75502872467041
    9. '(sys' → logprob: -15.00502872467041
    10. '	input' → logprob: -15.00502872467041

Token 23: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.8591567277908325
    2. '()' → logprob: -1.1091567277908325
    3. '().' → logprob: -1.4841567277908325
    4. '(' → logprob: -4.234156608581543
    5. '('' → logprob: -5.984156608581543
    6. '());' → logprob: -7.234156608581543
    7. '()))' → logprob: -7.484156608581543
    8. '(()' → logprob: -7.734156608581543
    9. ')' → logprob: -7.859156608581543
    10. '(),' → logprob: -8.734156608581543

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.947715832618997e-05
    2. 'strip' → logprob: -9.375089645385742
    3. 'rstrip' → logprob: -12.625089645385742
    4. ' split' → logprob: -14.750089645385742
    5. ')' → logprob: -15.000089645385742
    6. '(split' → logprob: -15.125089645385742
    7. 'spl' → logprob: -15.875089645385742
    8. 'read' → logprob: -16.000089645385742
    9. 'startswith' → logprob: -18.500089645385742
    10. 's' → logprob: -18.875089645385742

Token 25: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14049944281578064
    2. '))' → logprob: -2.5154993534088135
    3. '())' → logprob: -3.0154993534088135
    4. '()))' → logprob: -7.140499591827393
    5. '()' → logprob: -8.015499114990234
    6. '(' → logprob: -10.265499114990234
    7. '),' → logprob: -10.515499114990234
    8. ')))' → logprob: -11.140499114990234
    9. '('' → logprob: -11.890499114990234
    10. ' )' → logprob: -12.640499114990234

Token 26: 'W' (ID: 54)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.313469797372818
    2. 'edges' → logprob: -3.063469886779785
    3. 'dp' → logprob: -3.188469886779785
    4. 'd' → logprob: -3.563469886779785
    5. '\n' → logprob: -3.688469886779785
    6. 'neighbors' → logprob: -4.063469886779785
    7. 'dist' → logprob: -4.188469886779785
    8. ' graph' → logprob: -4.813469886779785
    9. '\' → logprob: -4.938469886779785
    10. 'for' → logprob: -5.063469886779785

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2004878968000412
    2. '=' → logprob: -2.4504878520965576
    3. ',' → logprob: -2.8254878520965576
    4. '[' → logprob: -3.8254878520965576
    5. 's' → logprob: -5.450488090515137
    6. 'hile' → logprob: -5.700488090515137
    7. '[]' → logprob: -5.950488090515137
    8. ')' → logprob: -7.200488090515137
    9. '=[]' → logprob: -7.200488090515137
    10. '.' → logprob: -7.700488090515137

Token 28: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7124791741371155
    2. '[' → logprob: -1.8374791145324707
    3. '[int' → logprob: -1.8374791145324707
    4. '{}' → logprob: -2.5874791145324707
    5. 'list' → logprob: -2.9624791145324707
    6. ' []' → logprob: -3.7124791145324707
    7. ' [' → logprob: -4.087479114532471
    8. '[list' → logprob: -4.462479114532471
    9. '[input' → logprob: -5.587479114532471
    10. ' {}' → logprob: -5.837479114532471

Token 29: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3600821793079376
    2. '(map' → logprob: -1.2350821495056152
    3. '(int' → logprob: -4.735082149505615
    4. '(range' → logprob: -6.360082149505615
    5. '(input' → logprob: -7.235082149505615
    6. '(eval' → logprob: -9.360082626342773
    7. '(

' → logprob: -10.110082626342773
    8. '(list' → logprob: -10.110082626342773
    9. '(
' → logprob: -10.235082626342773
    10. '(sys' → logprob: -10.985082626342773

Token 30: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008130819769576192
    2. '(' → logprob: -7.125813007354736
    3. '[int' → logprob: -12.500813484191895
    4. 'int' → logprob: -13.625813484191895
    5. '(input' → logprob: -13.750813484191895
    6. '<int' → logprob: -14.000813484191895
    7. '=int' → logprob: -14.375813484191895
    8. ' (' → logprob: -15.375813484191895
    9. ',int' → logprob: -15.750813484191895
    10. '(lambda' → logprob: -15.750813484191895

Token 31: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.32545602321624756
    2. '(' → logprob: -1.8254560232162476
    3. '(int' → logprob: -2.200456142425537
    4. ',' → logprob: -5.950456142425537
    5. ' (' → logprob: -6.825456142425537
    6. ',input' → logprob: -7.075456142425537
    7. '```' → logprob: -8.075455665588379
    8. '(eval' → logprob: -8.450455665588379
    9. ')' → logprob: -8.450455665588379
    10. '(list' → logprob: -9.575455665588379

Token 32: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018151817843317986
    2. ' input' → logprob: -4.018151760101318
    3. '(input' → logprob: -14.643152236938477
    4. ' ' → logprob: -14.768152236938477
    5. 'int' → logprob: -15.643152236938477
    6. 'lambda' → logprob: -15.893152236938477
    7. ',input' → logprob: -15.893152236938477
    8. 'list' → logprob: -16.268152236938477
    9. '<input' → logprob: -16.518152236938477
    10. '=input' → logprob: -16.643152236938477

Token 33: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002549024939071387
    2. '()' → logprob: -8.50025463104248
    3. '(' → logprob: -10.37525463104248
    4. '(.' → logprob: -12.00025463104248
    5. ')' → logprob: -12.12525463104248
    6. '.' → logprob: -12.75025463104248
    7. ' ().' → logprob: -13.50025463104248
    8. '()))' → logprob: -14.00025463104248
    9. '())' → logprob: -14.25025463104248
    10. ').' → logprob: -14.87525463104248

Token 34: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. ' split' → logprob: -15.250000953674316
    3. '(split' → logprob: -15.250000953674316
    4. 'strip' → logprob: -15.500000953674316
    5. 'spl' → logprob: -17.25
    6. 'rstrip' → logprob: -17.875
    7. 's' → logprob: -20.375
    8. 'plit' → logprob: -20.875
    9. '.split' → logprob: -21.0
    10. '_split' → logprob: -21.5

Token 35: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.08301199227571487
    2. '())' → logprob: -2.833012104034424
    3. '(' → logprob: -4.708012104034424
    4. '()' → logprob: -4.833012104034424
    5. '))' → logprob: -5.708012104034424
    6. ')' → logprob: -8.208011627197266
    7. '()));' → logprob: -9.333011627197266
    8. '()))
' → logprob: -9.708011627197266
    9. '())))' → logprob: -10.708011627197266
    10. '(input' → logprob: -11.458011627197266

Token 36: 'rules' (ID: 50321)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.823752760887146
    2. 'dp' → logprob: -0.948752760887146
    3. 'dist' → logprob: -2.5737528800964355
    4. 'edges' → logprob: -3.8237528800964355
    5. 'def' → logprob: -4.4487528800964355
    6. 'adj' → logprob: -4.4487528800964355
    7. 'visited' → logprob: -4.5737528800964355
    8. 'parent' → logprob: -5.0737528800964355
    9. 'for' → logprob: -5.3237528800964355
    10. 'd' → logprob: -5.3237528800964355

Token 37: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3504575192928314
    2. ' =' → logprob: -1.2254575490951538
    3. '=
' → logprob: -7.350457668304443
    4. 'for' → logprob: -8.225457191467285
    5. ':' → logprob: -8.350457191467285
    6. '=[]
' → logprob: -8.600457191467285
    7. ' =
' → logprob: -8.975457191467285
    8. '=[]' → logprob: -9.225457191467285
    9. 's' → logprob: -9.725457191467285
    10. ',' → logprob: -9.975457191467285

Token 38: ' [[]' (ID: 182908)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.11709916591644287
    2. '{}' → logprob: -2.7420992851257324
    3. ' []' → logprob: -3.4920992851257324
    4. '[' → logprob: -4.242099285125732
    5. ' {}' → logprob: -7.242099285125732
    6. ' [' → logprob: -7.992099285125732
    7. 'dict' → logprob: -9.492098808288574
    8. '[]}' → logprob: -10.992098808288574
    9. '[][]' → logprob: -11.117098808288574
    10. '{' → logprob: -11.117098808288574

Token 39: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3262235224246979
    2. ' for' → logprob: -1.9512234926223755
    3. ')' → logprob: -2.076223611831665
    4. ']' → logprob: -4.826223373413086
    5. ',' → logprob: -6.826223373413086
    6. '()' → logprob: -6.951223373413086
    7. '(' → logprob: -8.076223373413086
    8. '(N' → logprob: -8.201223373413086
    9. '(E' → logprob: -9.326223373413086
    10. '	for' → logprob: -10.201223373413086

Token 40: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.012137681245803833
    2. ' range' → logprob: -5.2621378898620605
    3. 'range' → logprob: -5.5121378898620605
    4. '_range' → logprob: -6.5121378898620605
    5. '(range' → logprob: -6.8871378898620605
    6. ' _' → logprob: -8.512137413024902
    7. '(' → logprob: -9.012137413024902
    8. '(i' → logprob: -13.387137413024902
    9. '	range' → logprob: -13.387137413024902
    10. '_i' → logprob: -13.512137413024902

Token 41: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16030648350715637
    2. ' in' → logprob: -1.910306453704834
    3. 'range' → logprob: -9.785306930541992
    4. ' ' → logprob: -11.660306930541992
    5. '(range' → logprob: -12.285306930541992
    6. '_' → logprob: -12.410306930541992
    7. '(' → logprob: -13.035306930541992
    8. '(in' → logprob: -13.910306930541992
    9. '(N' → logprob: -14.035306930541992
    10. ' range' → logprob: -14.160306930541992

Token 42: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02324605919420719
    2. ' range' → logprob: -3.7732460498809814
    3. '(range' → logprob: -15.273245811462402
    4. '	range' → logprob: -15.773245811462402
    5. ' ' → logprob: -16.02324676513672
    6. '   ' → logprob: -17.64824676513672
    7. '  ' → logprob: -17.77324676513672
    8. 'r' → logprob: -18.27324676513672
    9. ')' → logprob: -18.27324676513672
    10. '_' → logprob: -19.14824676513672

Token 43: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.003230233211070299
    2. '(' → logprob: -6.378230094909668
    3. '(range' → logprob: -6.628230094909668
    4. '(E' → logprob: -8.753230094909668
    5. '(W' → logprob: -11.003230094909668
    6. '((' → logprob: -11.628230094909668
    7. ' range' → logprob: -11.878230094909668
    8. 'range' → logprob: -12.753230094909668
    9. '(T' → logprob: -13.128230094909668
    10. '(D' → logprob: -13.378230094909668

Token 44: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00010390079842181876
    2. ']' → logprob: -9.375103950500488
    3. ')' → logprob: -11.250103950500488
    4. '])' → logprob: -13.500103950500488
    5. '>]' → logprob: -13.625103950500488
    6. ' )' → logprob: -13.875103950500488
    7. '+' → logprob: -14.250103950500488
    8. ')]
' → logprob: -14.625103950500488
    9. '])]' → logprob: -14.625103950500488
    10. ' ]' → logprob: -15.250103950500488

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018387178715784103
    2. '2' → logprob: -9.250184059143066
    3. ' ' → logprob: -9.375184059143066
    4. '0' → logprob: -14.375184059143066
    5. '3' → logprob: -15.062684059143066
    6. ')' → logprob: -15.187684059143066
    7. '```' → logprob: -15.187684059143066
    8. '   ' → logprob: -15.500184059143066
    9. '  ' → logprob: -15.937684059143066
    10. '(' → logprob: -15.937684059143066

Token 46: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.027277512475848198
    2. ']' → logprob: -3.7772774696350098
    3. ')' → logprob: -5.52727746963501
    4. '])' → logprob: -10.152277946472168
    5. ' ]' → logprob: -13.402277946472168
    6. '])]' → logprob: -13.402277946472168
    7. ')])' → logprob: -13.902277946472168
    8. ' )' → logprob: -13.902277946472168
    9. '>]' → logprob: -14.027277946472168
    10. '}]' → logprob: -14.527277946472168

Token 47: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00016551809676457196
    2. ' for' → logprob: -8.750165939331055
    3. '
' → logprob: -12.250165939331055
    4. '```' → logprob: -13.875165939331055
    5. 'edges' → logprob: -15.750165939331055
    6. 'from' → logprob: -16.125165939331055
    7. 'For' → logprob: -16.375165939331055
    8. '	for' → logprob: -16.500165939331055
    9. 'f' → logprob: -16.500165939331055
    10. 'import' → logprob: -16.500165939331055

Token 48: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.006272170692682266
    2. '_' → logprob: -5.131272315979004
    3. ' i' → logprob: -8.131272315979004
    4. ' ' → logprob: -10.381272315979004
    5. ' range' → logprob: -11.256272315979004
    6. ' ‌' → logprob: -13.256272315979004
    7. ' in' → logprob: -13.756272315979004
    8. ' ​' → logprob: -14.131272315979004
    9. ' ▁' → logprob: -14.381272315979004
    10. ' ' → logprob: -15.006272315979004

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07143215090036392
    2. 'in' → logprob: -2.696432113647461
    3. ' ' → logprob: -6.696432113647461
    4. '_' → logprob: -9.196432113647461
    5. 'n' → logprob: -9.446432113647461
    6. 'range' → logprob: -10.571432113647461
    7. ' i' → logprob: -10.696432113647461
    8. 'i' → logprob: -11.321432113647461
    9. '  ' → logprob: -12.321432113647461
    10. ' _' → logprob: -12.321432113647461

Token 50: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.020543988794088364
    2. ' range' → logprob: -3.8955440521240234
    3. '(range' → logprob: -14.020544052124023
    4. '	range' → logprob: -15.270544052124023
    5. 'ange' → logprob: -15.395544052124023
    6. ' ' → logprob: -15.395544052124023
    7. ')' → logprob: -16.020544052124023
    8. 'input' → logprob: -16.520544052124023
    9. 'r' → logprob: -16.520544052124023
    10. 'rang' → logprob: -16.895544052124023

Token 51: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.0007476831669919193
    2. '(' → logprob: -7.2507476806640625
    3. ' (' → logprob: -10.750747680664062
    4. 'E' → logprob: -11.750747680664062
    5. ' E' → logprob: -12.750747680664062
    6. '(N' → logprob: -13.375747680664062
    7. '(T' → logprob: -13.750747680664062
    8. ' ' → logprob: -14.375747680664062
    9. '(e' → logprob: -14.375747680664062
    10. '(int' → logprob: -14.500747680664062

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003793144423980266
    2. ' ):' → logprob: -8.62537956237793
    3. ')' → logprob: -9.25037956237793
    4. '):
' → logprob: -9.25037956237793
    5. ':' → logprob: -12.25037956237793
    6. ',' → logprob: -13.37537956237793
    7. '):
' → logprob: -15.00037956237793
    8. '():' → logprob: -15.50037956237793
    9. ' )' → logprob: -16.12537956237793
    10. ']:' → logprob: -16.75037956237793

Token 53: '   ' (ID: 271)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -1.0360708236694336
    2. '   ' → logprob: -1.4110708236694336
    3. ' s' → logprob: -2.1610708236694336
    4. ' a' → logprob: -2.7860708236694336
    5. ' x' → logprob: -3.0360708236694336
    6. 'a' → logprob: -3.1610708236694336
    7. ' from' → logprob: -3.6610708236694336
    8. 'u' → logprob: -3.7860708236694336
    9. ' A' → logprob: -3.9110708236694336
    10. 's' → logprob: -5.036070823669434

Token 54: ' line' (ID: 2543)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.27313902974128723
    2. 'u' → logprob: -1.8981389999389648
    3. ' a' → logprob: -3.023138999938965
    4. ' u' → logprob: -3.398138999938965
    5. 'A' → logprob: -5.898138999938965
    6. 'x' → logprob: -6.398138999938965
    7. 'from' → logprob: -7.398138999938965
    8. 's' → logprob: -7.773138999938965
    9. ' A' → logprob: -8.148138999938965
    10. 'f' → logprob: -8.148138999938965

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06201395019888878
    2. '=' → logprob: -2.812013864517212
    3. '=input' → logprob: -11.187013626098633
    4. 's' → logprob: -11.312013626098633
    5. '=line' → logprob: -11.562013626098633
    6. ' ' → logprob: -12.062013626098633
    7. '=sys' → logprob: -13.812013626098633
    8. '_input' → logprob: -13.937013626098633
    9. ')' → logprob: -14.687013626098633
    10. '   ' → logprob: -14.687013626098633

Token 56: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.17026133835315704
    2. 'input' → logprob: -1.9202613830566406
    3. ' list' → logprob: -4.920261383056641
    4. ' input' → logprob: -5.920261383056641
    5. 'tuple' → logprob: -12.54526138305664
    6. 'sys' → logprob: -14.04526138305664
    7. 'map' → logprob: -14.79526138305664
    8. ' tuple' → logprob: -15.54526138305664
    9. 'int' → logprob: -15.67026138305664
    10. ' sys' → logprob: -16.92026138305664

Token 57: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -7.719917630311102e-05
    2. '(' → logprob: -9.500077247619629
    3. '(int' → logprob: -13.250077247619629
    4. '(input' → logprob: -14.750077247619629
    5. 'map' → logprob: -18.000076293945312
    6. ' map' → logprob: -18.125076293945312
    7. ' (' → logprob: -18.375076293945312
    8. '	map' → logprob: -18.375076293945312
    9. '(range' → logprob: -18.500076293945312
    10. '(
' → logprob: -18.875076293945312

Token 58: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0001860174525063485
    2. 'int' → logprob: -9.5001859664917
    3. '(' → logprob: -10.2501859664917
    4. '[int' → logprob: -10.5001859664917
    5. '<int' → logprob: -10.6251859664917
    6. '=int' → logprob: -11.6251859664917
    7. ',int' → logprob: -12.0001859664917
    8. ']int' → logprob: -12.6251859664917
    9. '(input' → logprob: -13.2501859664917
    10. '(lambda' → logprob: -13.6251859664917

Token 59: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06244107335805893
    2. ',input' → logprob: -3.062441110610962
    3. ',' → logprob: -4.312440872192383
    4. 'input' → logprob: -8.687440872192383
    5. '(' → logprob: -8.812440872192383
    6. '(sys' → logprob: -11.812440872192383
    7. '=input' → logprob: -11.937440872192383
    8. ' (' → logprob: -12.312440872192383
    9. ')' → logprob: -12.312440872192383
    10. ' input' → logprob: -12.437440872192383

Token 60: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008621551096439362
    2. ' input' → logprob: -4.758621692657471
    3. 'sys' → logprob: -12.008621215820312
    4. ' sys' → logprob: -14.508621215820312
    5. '(input' → logprob: -15.133621215820312
    6. ',input' → logprob: -16.508621215820312
    7. ' ' → logprob: -17.383621215820312
    8. ',' → logprob: -18.133621215820312
    9. 'stdin' → logprob: -18.133621215820312
    10. ')' → logprob: -18.383621215820312

Token 61: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.570319702499546e-05
    2. '()' → logprob: -10.625025749206543
    3. ' ().' → logprob: -14.875025749206543
    4. '.' → logprob: -15.250025749206543
    5. ')' → logprob: -15.750025749206543
    6. '(' → logprob: -15.875025749206543
    7. '   ' → logprob: -16.000024795532227
    8. '()))' → logprob: -16.125024795532227
    9. '.readline' → logprob: -16.750024795532227
    10. '()
' → logprob: -17.375024795532227

Token 62: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.522638169466518e-05
    2. 'strip' → logprob: -10.625024795532227
    3. '(split' → logprob: -14.500024795532227
    4. 'rstrip' → logprob: -15.875024795532227
    5. ' split' → logprob: -16.125024795532227
    6. 'read' → logprob: -16.750024795532227
    7. 'spl' → logprob: -17.375024795532227
    8. ')' → logprob: -18.250024795532227
    9. 'plit' → logprob: -20.500024795532227
    10. 's' → logprob: -20.500024795532227

Token 63: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00517351645976305
    2. '))' → logprob: -6.130173683166504
    3. '()' → logprob: -6.505173683166504
    4. '())' → logprob: -6.755173683166504
    5. '()))
' → logprob: -8.380173683166504
    6. '(' → logprob: -9.755173683166504
    7. '()));' → logprob: -11.005173683166504
    8. '()))

' → logprob: -12.380173683166504
    9. '())))' → logprob: -12.630173683166504
    10. '().' → logprob: -12.630173683166504

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1783011108636856
    2. '[' → logprob: -2.8033010959625244
    3. ')' → logprob: -3.0533010959625244
    4. ',' → logprob: -4.3033013343811035
    5. ' ' → logprob: -5.4283013343811035
    6. '<|end|>' → logprob: -5.5533013343811035
    7. 'for' → logprob: -5.6783013343811035
    8. '    
' → logprob: -5.8033013343811035
    9. '    ' → logprob: -5.8033013343811035
    10. 'rules' → logprob: -6.0533013343811035

Token 65: ' G' (ID: 499)
  Prédit: ' rules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rules' → logprob: -0.46845605969429016
    2. 'rules' → logprob: -1.8434560298919678
    3. ' u' → logprob: -1.9684560298919678
    4. 'u' → logprob: -2.8434560298919678
    5. 'a' → logprob: -5.468456268310547
    6. ' a' → logprob: -5.593456268310547
    7. ' from' → logprob: -5.968456268310547
    8. ' for' → logprob: -6.093456268310547
    9. 'from' → logprob: -6.593456268310547
    10. ' if' → logprob: -6.718456268310547

Token 66: ' =' (ID: 314)
  Prédit: '[line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[line' → logprob: -0.04174813628196716
    2. 'raph' → logprob: -3.541748046875
    3. '=line' → logprob: -4.541748046875
    4. '[' → logprob: -7.791748046875
    5. '=' → logprob: -8.041748046875
    6. ' =' → logprob: -8.041748046875
    7. 'raphics' → logprob: -10.041748046875
    8. 'line' → logprob: -10.041748046875
    9. 'ive' → logprob: -11.291748046875
    10. '.append' → logprob: -11.416748046875

Token 67: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.3492306172847748
    2. ' line' → logprob: -1.2242306470870972
    3. '[line' → logprob: -7.474230766296387
    4. '(line' → logprob: -8.974230766296387
    5. 'rules' → logprob: -11.099230766296387
    6. ' rules' → logprob: -11.099230766296387
    7. 'rule' → logprob: -11.599230766296387
    8. '	line' → logprob: -11.724230766296387
    9. '=line' → logprob: -11.974230766296387
    10. 'len' → logprob: -11.974230766296387

Token 68: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004134322516620159
    2. '[-' → logprob: -6.254134178161621
    3. '[:]' → logprob: -7.129134178161621
    4. '[::-' → logprob: -7.754134178161621
    5. '[:' → logprob: -7.754134178161621
    6. '[:-' → logprob: -7.879134178161621
    7. '   ' → logprob: -11.129134178161621
    8. ' [' → logprob: -11.129134178161621
    9. '[]' → logprob: -11.129134178161621
    10. '1' → logprob: -11.254134178161621

Token 69: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14996305108070374
    2. '2' → logprob: -2.399963140487671
    3. '0' → logprob: -3.774963140487671
    4. ':' → logprob: -4.774962902069092
    5. ':]' → logprob: -5.524962902069092
    6. '::-' → logprob: -5.524962902069092
    7. ':-' → logprob: -5.649962902069092
    8. '-' → logprob: -6.024962902069092
    9. '3' → logprob: -6.149962902069092
    10. '::' → logprob: -7.899962902069092

Token 70: ']
' (ID: 1592)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.42533019185066223
    2. ']' → logprob: -1.3003301620483398
    3. ')' → logprob: -2.80033016204834
    4. ']
' → logprob: -5.80033016204834
    5. ']-' → logprob: -6.05033016204834
    6. '])
' → logprob: -6.05033016204834
    7. ')
' → logprob: -6.30033016204834
    8. '-' → logprob: -6.92533016204834
    9. '])-' → logprob: -7.42533016204834
    10. ' ])' → logprob: -8.30033016204834

Token 71: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05600389465689659
    2. ' for' → logprob: -2.9310038089752197
    3. 'if' → logprob: -8.18100357055664
    4. ',' → logprob: -8.18100357055664
    5. '   ' → logprob: -9.18100357055664
    6. 'A' → logprob: -9.80600357055664
    7. 'R' → logprob: -10.05600357055664
    8. 'I' → logprob: -10.05600357055664
    9. 'B' → logprob: -10.43100357055664
    10. 'edges' → logprob: -10.55600357055664

Token 72: ' C' (ID: 363)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3601636290550232
    2. ' for' → logprob: -1.235163688659668
    3. 'rules' → logprob: -6.235163688659668
    4. ' edges' → logprob: -6.735163688659668
    5. 'edges' → logprob: -6.735163688659668
    6. ' rules' → logprob: -6.985163688659668
    7. 'if' → logprob: -6.985163688659668
    8. ' if' → logprob: -7.485163688659668
    9. 'r' → logprob: -7.610163688659668
    10. 'k' → logprob: -7.735163688659668

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3168393671512604
    2. '=' → logprob: -1.316839337348938
    3. ',' → logprob: -5.691839218139648
    4. '=line' → logprob: -9.066839218139648
    5. ' ' → logprob: -10.316839218139648
    6. 's' → logprob: -12.316839218139648
    7. 'on' → logprob: -12.691839218139648
    8. '   ' → logprob: -12.754339218139648
    9. '<|end|>' → logprob: -12.879339218139648
    10. '  ' → logprob: -12.879339218139648

Token 74: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.10026243329048157
    2. ' line' → logprob: -2.350262403488159
    3. '[line' → logprob: -11.100262641906738
    4. '1' → logprob: -11.475262641906738
    5. 'len' → logprob: -11.850262641906738
    6. '(line' → logprob: -11.975262641906738
    7. '=line' → logprob: -12.225262641906738
    8. '	line' → logprob: -12.475262641906738
    9. 'int' → logprob: -13.100262641906738
    10. 'ine' → logprob: -13.350262641906738

Token 75: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.374227425316349e-05
    2. '1' → logprob: -10.250073432922363
    3. '[-' → logprob: -10.375073432922363
    4. '```' → logprob: -13.375073432922363
    5. ' [' → logprob: -13.625073432922363
    6. '2' → logprob: -14.500073432922363
    7. '[:' → logprob: -14.625073432922363
    8. '\[' → logprob: -14.750073432922363
    9. '[:]' → logprob: -15.437573432922363
    10. 's' → logprob: -15.500073432922363

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004587903094943613
    2. ']' → logprob: -9.250458717346191
    3. '2' → logprob: -9.375458717346191
    4. ':' → logprob: -9.375458717346191
    5. ':]' → logprob: -9.500458717346191
    6. ' ' → logprob: -10.375458717346191
    7. '+' → logprob: -11.125458717346191
    8. ']+' → logprob: -11.250458717346191
    9. 'len' → logprob: -11.500458717346191
    10. '-' → logprob: -11.625458717346191

Token 77: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4994543492794037
    2. '   ' → logprob: -1.499454379081726
    3. '
' → logprob: -2.8744542598724365
    4. ')' → logprob: -2.8744542598724365
    5. ',' → logprob: -3.6244542598724365
    6. ']
' → logprob: -4.249454498291016
    7. '<|end|>' → logprob: -5.374454498291016
    8. '-' → logprob: -6.249454498291016
    9. '<|end|>' → logprob: -6.249454498291016
    10. ')
' → logprob: -6.624454498291016

Token 78: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1725892871618271
    2. '   ' → logprob: -2.5475893020629883
    3. ' for' → logprob: -2.6725893020629883
    4. 'edges' → logprob: -6.047589302062988
    5. 'neighbors' → logprob: -6.297589302062988
    6. 'A' → logprob: -6.672589302062988
    7. 'rules' → logprob: -6.797589302062988
    8. ' edges' → logprob: -7.797589302062988
    9. 'R' → logprob: -7.922589302062988
    10. 'B' → logprob: -8.172589302062988

Token 79: ' S' (ID: 336)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7551406621932983
    2. ' for' → logprob: -1.8801406621932983
    3. 'D' → logprob: -2.630140781402588
    4. 'rules' → logprob: -2.880140781402588
    5. 'A' → logprob: -3.380140781402588
    6. ' rules' → logprob: -3.505140781402588
    7. 'neighbors' → logprob: -3.755140781402588
    8. ' neighbors' → logprob: -3.880140781402588
    9. ' D' → logprob: -4.630140781402588
    10. '   ' → logprob: -4.630140781402588

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02352823130786419
    2. '=' → logprob: -3.7735283374786377
    3. '=line' → logprob: -8.273528099060059
    4. ' ' → logprob: -12.148528099060059
    5. '   ' → logprob: -12.148528099060059
    6. 's' → logprob: -12.273528099060059
    7. ',' → logprob: -12.773528099060059
    8. '  ' → logprob: -13.273528099060059
    9. 't' → logprob: -14.523528099060059
    10. 'p' → logprob: -14.648528099060059

Token 81: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.038161750882864
    2. ' line' → logprob: -3.2881617546081543
    3. '[line' → logprob: -10.663161277770996
    4. '1' → logprob: -11.163161277770996
    5. 'set' → logprob: -11.163161277770996
    6. 'len' → logprob: -11.288161277770996
    7. 'list' → logprob: -11.913161277770996
    8. '0' → logprob: -11.913161277770996
    9. '[]' → logprob: -11.913161277770996
    10. '[' → logprob: -12.038161277770996

Token 82: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00203475309535861
    2. '2' → logprob: -6.252034664154053
    3. '3' → logprob: -10.127035140991211
    4. '```' → logprob: -11.377035140991211
    5. 'x' → logprob: -11.627035140991211
    6. '[-' → logprob: -11.752035140991211
    7. '[
' → logprob: -12.002035140991211
    8. '\[' → logprob: -12.627035140991211
    9. ' [' → logprob: -13.127035140991211
    10. '4' → logprob: -13.252035140991211

Token 83: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.452426608419046e-05
    2. '-' → logprob: -10.75003433227539
    3. ']' → logprob: -12.50003433227539
    4. '3' → logprob: -12.75003433227539
    5. '])' → logprob: -12.75003433227539
    6. '1' → logprob: -13.87503433227539
    7. ' ' → logprob: -14.12503433227539
    8. ')' → logprob: -14.62503433227539
    9. '```' → logprob: -15.43753433227539
    10. '0' → logprob: -15.75003433227539

Token 84: ':]
' (ID: 61598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014903665520250797
    2. ']' → logprob: -4.764903545379639
    3. ')
' → logprob: -5.389903545379639
    4. '   ' → logprob: -6.514903545379639
    5. ')]' → logprob: -9.639904022216797
    6. '])' → logprob: -10.264904022216797
    7. ' )' → logprob: -10.389904022216797
    8. ']
' → logprob: -10.639904022216797
    9. '<|end|>' → logprob: -11.139904022216797
    10. ' ' → logprob: -11.639904022216797

Token 85: '   ' (ID: 271)
  Prédit: 'rules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rules' → logprob: -0.39981600642204285
    2. 'for' → logprob: -1.7748160362243652
    3. ' for' → logprob: -2.2748160362243652
    4. ' rules' → logprob: -3.2748160362243652
    5. '   ' → logprob: -4.399816036224365
    6. '```' → logprob: -5.899816036224365
    7. '[' → logprob: -6.899816036224365
    8. '    
' → logprob: -7.274816036224365
    9. '<|end|>' → logprob: -7.274816036224365
    10. '	for' → logprob: -7.649816036224365

Token 86: ' rules' (ID: 9607)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35970941185951233
    2. ' for' → logprob: -1.23470938205719
    3. 'rules' (adapté à ' rules') → logprob: -5.2347092628479
    4. '   ' → logprob: -5.6097092628479
    5. '	for' → logprob: -7.1097092628479
    6. ' rules' → logprob: -7.3597092628479
    7. ')' → logprob: -8.734709739685059
    8. '[' → logprob: -8.984709739685059
    9. '```' → logprob: -9.109709739685059
    10. ':' → logprob: -9.234709739685059

Token 87: '[G' (ID: 187982)
  Prédit: '[G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[G' → logprob: -0.00012190054985694587
    2. '[C' → logprob: -9.1251220703125
    3. '[' → logprob: -11.3751220703125
    4. 'G' → logprob: -14.3751220703125
    5. '[g' → logprob: -14.6251220703125
    6. '```' → logprob: -15.6251220703125
    7. '[S' → logprob: -16.3751220703125
    8. '\[' → logprob: -17.2501220703125
    9. ' G' → logprob: -17.7501220703125
    10. '[c' → logprob: -17.8751220703125

Token 88: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0014803402591496706
    2. ']' → logprob: -6.8764801025390625
    3. '.' → logprob: -7.8764801025390625
    4. ']+=' → logprob: -10.251480102539062
    5. ' ].' → logprob: -11.751480102539062
    6. ').' → logprob: -11.751480102539062
    7. '.append' → logprob: -12.126480102539062
    8. '.extend' → logprob: -12.626480102539062
    9. '][' → logprob: -12.876480102539062
    10. '.]' → logprob: -13.251480102539062

Token 89: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.2519521713256836
    2. 'extend' → logprob: -1.5019521713256836
    3. 'extends' → logprob: -11.876952171325684
    4. 'app' → logprob: -12.626952171325684
    5. '.append' → logprob: -12.626952171325684
    6. 'appen' → logprob: -12.626952171325684
    7. '.extend' → logprob: -12.876952171325684
    8. 'ext' → logprob: -13.251952171325684
    9. ' extend' → logprob: -14.501952171325684
    10. ' append' → logprob: -14.626952171325684

Token 90: '(S' (ID: 6181)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.05226210132241249
    2. '(' → logprob: -3.0522620677948
    3. '(S' → logprob: -5.802262306213379
    4. '(s' → logprob: -7.677262306213379
    5. '([' → logprob: -9.052262306213379
    6. '(C' → logprob: -9.802262306213379
    7. '(('' → logprob: -12.802262306213379
    8. '(tuple' → logprob: -13.052262306213379
    9. '(
' → logprob: -13.677262306213379
    10. '(([' → logprob: -14.302262306213379

Token 91: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001593195047462359
    2. ' )' → logprob: -9.00015926361084
    3. '[' → logprob: -10.87515926361084
    4. '))' → logprob: -11.75015926361084
    5. ')
' → logprob: -13.37515926361084
    6. '   ' → logprob: -13.75015926361084
    7. '[])' → logprob: -14.25015926361084
    8. ')))' → logprob: -14.25015926361084
    9. '<|end|>' → logprob: -14.37515926361084
    10. ',' → logprob: -14.50015926361084

Token 92: 'INF' (ID: 64358)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8037831783294678
    2. ')' → logprob: -0.9287831783294678
    3. 'def' → logprob: -2.1787831783294678
    4. '<|end|>' → logprob: -4.053783416748047
    5. ' for' → logprob: -4.928783416748047
    6. ']' → logprob: -5.428783416748047
    7. ':' → logprob: -5.928783416748047
    8. '```' → logprob: -6.178783416748047
    9. '[' → logprob: -6.303783416748047
    10. '0' → logprob: -6.428783416748047

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20147863030433655
    2. '=' → logprob: -1.7014786005020142
    3. ',' → logprob: -10.576478958129883
    4. '_' → logprob: -10.826478958129883
    5. ')' → logprob: -12.076478958129883
    6. ' ' → logprob: -12.826478958129883
    7. '=int' → logprob: -13.076478958129883
    8. '.' → logprob: -13.576478958129883
    9. ' =)' → logprob: -13.826478958129883
    10. '>' → logprob: -13.951478958129883

Token 94: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5794340968132019
    2. ' ' → logprob: -1.0794341564178467
    3. ' float' → logprob: -2.9544341564178467
    4. 'float' → logprob: -3.0794341564178467
    5. 'int' → logprob: -6.954433917999268
    6. '1' → logprob: -7.454433917999268
    7. ' int' → logprob: -8.329434394836426
    8. '100' → logprob: -9.579434394836426
    9. ' ' → logprob: -11.829434394836426
    10. '987' → logprob: -11.829434394836426

Token 95: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1640755832195282
    2. 'float' → logprob: -1.9140756130218506
    3. 'int' → logprob: -5.7890753746032715
    4. '1' → logprob: -7.6640753746032715
    5. '100' → logprob: -8.91407585144043
    6. ' float' → logprob: -10.03907585144043
    7. ' ' → logprob: -10.03907585144043
    8. '999' → logprob: -10.28907585144043
    9. '987' → logprob: -11.28907585144043
    10. '2' → logprob: -12.03907585144043

Token 96: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.008036813698709011
    2. '10' → logprob: -5.0080366134643555
    3. '18' → logprob: -7.8830366134643555
    4. '15' → logprob: -8.008036613464355
    5. '12' → logprob: -8.508036613464355
    6. '7' → logprob: -8.758036613464355
    7. '8' → logprob: -9.008036613464355
    8. '**' → logprob: -9.383036613464355
    9. '20' → logprob: -11.508036613464355
    10. '09' → logprob: -11.508036613464355

Token 97: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.007493520155549049
    2. '15' → logprob: -5.757493495941162
    3. '10' → logprob: -5.882493495941162
    4. '18' → logprob: -6.882493495941162
    5. '12' → logprob: -8.13249397277832
    6. '8' → logprob: -9.75749397277832
    7. '7' → logprob: -10.00749397277832
    8. '14' → logprob: -10.13249397277832
    9. '16' → logprob: -10.63249397277832
    10. '11' → logprob: -11.38249397277832

Token 98: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0850121974945068
    2. 'dist' → logprob: -1.3350121974945068
    3. '
' → logprob: -1.4600121974945068
    4. 'distance' → logprob: -2.585012197494507
    5. 'for' → logprob: -2.585012197494507
    6. 'def' → logprob: -4.710012435913086
    7. 'visited' → logprob: -6.210012435913086
    8. ' for' → logprob: -6.460012435913086
    9. '
' → logprob: -7.710012435913086
    10. '' → logprob: -8.210012435913086

Token 99: 'memo' (ID: 113822)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.43288981914520264
    2. 'dp' → logprob: -1.0578898191452026
    3. 'distance' → logprob: -5.932889938354492
    4. 'visited' → logprob: -8.057889938354492
    5. 'def' → logprob: -8.182889938354492
    6. 'time' → logprob: -8.807889938354492
    7. 'from' → logprob: -8.932889938354492
    8. 'cost' → logprob: -9.182889938354492
    9. 'DP' → logprob: -9.182889938354492
    10. 'd' → logprob: -9.432889938354492

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2044406235218048
    2. '=' → logprob: -1.7044405937194824
    3. '[' → logprob: -5.954440593719482
    4. '<|end|>' → logprob: -9.45444107055664
    5. ',' → logprob: -9.57944107055664
    6. ' ' → logprob: -9.82944107055664
    7. '_' → logprob: -9.82944107055664
    8. '=[]' → logprob: -10.32944107055664
    9. '=[' → logprob: -10.70444107055664
    10. '[:]' → logprob: -10.95444107055664

Token 101: ' {}

' (ID: 21724)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5773916840553284
    2. '[' → logprob: -1.3273916244506836
    3. '[-' → logprob: -2.8273916244506836
    4. '{}' → logprob: -3.0773916244506836
    5. ' [-' → logprob: -3.5773916244506836
    6. ' [[' → logprob: -3.8273916244506836
    7. ' {}' → logprob: -4.702391624450684
    8. '[[' → logprob: -4.702391624450684
    9. ' [{}' → logprob: -8.077391624450684
    10. ' [[]' → logprob: -11.327391624450684

Token 102: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.6240566083070007e-06
    2. 'de' → logprob: -14.000001907348633
    3. ' def' → logprob: -15.250001907348633
    4. 'd' → logprob: -15.375001907348633
    5. ')' → logprob: -15.750001907348633
    6. ':def' → logprob: -17.250001907348633
    7. '0' → logprob: -17.375001907348633
    8. '-def' → logprob: -18.125001907348633
    9. '```' → logprob: -18.125001907348633
    10. '
' → logprob: -18.875001907348633

Token 103: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.01802140101790428
    2. ' dp' → logprob: -4.143021583557129
    3. 'dfs' → logprob: -6.518021583557129
    4. ' solve' → logprob: -8.143021583557129
    5. 'dp' → logprob: -9.143021583557129
    6. ' f' → logprob: -9.768021583557129
    7. ' ' → logprob: -11.268021583557129
    8. ' func' → logprob: -11.768021583557129
    9. ' def' → logprob: -12.018021583557129
    10. ' calc' → logprob: -12.393021583557129

Token 104: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1976679116487503
    2. '(G' → logprob: -2.4476678371429443
    3. '(node' → logprob: -2.9476678371429443
    4. '(g' → logprob: -3.3226678371429443
    5. '(n' → logprob: -6.947668075561523
    6. '(u' → logprob: -7.197668075561523
    7. '(x' → logprob: -7.197668075561523
    8. '(i' → logprob: -7.197668075561523
    9. '(k' → logprob: -7.697668075561523
    10. '(s' → logprob: -8.697668075561523

Token 105: '):
' (ID: 1883)
  Prédit: 'emo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'emo' → logprob: -0.6506059765815735
    2. ',' → logprob: -1.4006059169769287
    3. 'ask' → logprob: -3.0256059169769287
    4. 'o' → logprob: -3.7756059169769287
    5. '):' → logprob: -3.7756059169769287
    6. 'e' → logprob: -4.025606155395508
    7. 'em' → logprob: -4.525606155395508
    8. 'x' → logprob: -4.900606155395508
    9. 'u' → logprob: -5.025606155395508
    10. '(' → logprob: -5.150606155395508

Token 106: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15336042642593384
    2. '   ' → logprob: -2.153360366821289
    3. 'if' → logprob: -3.653360366821289
    4. ' ' → logprob: -9.653360366821289
    5. '	if' → logprob: -9.903360366821289
    6. '  ' → logprob: -10.653360366821289
    7. '    
' → logprob: -11.028360366821289
    8. '    ' → logprob: -11.028360366821289
    9. '   ' → logprob: -12.778360366821289
    10. ' 
' → logprob: -13.528360366821289

Token 107: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.054990384727716446
    2. ' if' → logprob: -2.929990291595459
    3. '   ' → logprob: -9.554990768432617
    4. 'for' → logprob: -10.554990768432617
    5. ' for' → logprob: -13.554990768432617
    6. ')' → logprob: -13.929990768432617
    7. 'x' → logprob: -13.929990768432617
    8. 'i' → logprob: -13.929990768432617
    9. 'stack' → logprob: -14.054990768432617
    10. 'max' → logprob: -14.179990768432617

Token 108: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.02324547804892063
    2. ' m' → logprob: -3.7732455730438232
    3. ' ' → logprob: -17.273244857788086
    4. ' not' → logprob: -18.148244857788086
    5. ')m' → logprob: -18.898244857788086
    6. 'memo' → logprob: -19.148244857788086
    7. '	m' → logprob: -19.273244857788086
    8. '   ' → logprob: -19.273244857788086
    9. ' memo' → logprob: -19.648244857788086
    10. ')' → logprob: -19.773244857788086

Token 109: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011245639994740486
    2. 'in' → logprob: -4.5112457275390625
    3. ')' → logprob: -9.636245727539062
    4. ' ==' → logprob: -10.011245727539062
    5. ' not' → logprob: -10.136245727539062
    6. '==' → logprob: -10.511245727539062
    7. ' ' → logprob: -11.511245727539062
    8. 'not' → logprob: -12.386245727539062
    9. '>' → logprob: -13.386245727539062
    10. 'n' → logprob: -14.261245727539062

Token 110: ' memo' (ID: 46393)
  Prédit: ' memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' memo' → logprob: -0.5759425163269043
    2. 'memo' → logprob: -0.8259425163269043
    3. 'm' → logprob: -13.325942993164062
    4. '.memo' → logprob: -14.575942993164062
    5. 'mem' → logprob: -14.700942993164062
    6. ' meme' → logprob: -16.075942993164062
    7. ')' → logprob: -16.200942993164062
    8. 'Memo' → logprob: -16.575942993164062
    9. ' ' → logprob: -16.950942993164062
    10. ' memoir' → logprob: -17.450942993164062

Token 111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007939011557027698
    2. ':
' → logprob: -7.500793933868408
    3. ':return' → logprob: -8.37579345703125
    4. '):' → logprob: -11.87579345703125
    5. ' :' → logprob: -12.75079345703125
    6. ' and' → logprob: -15.37579345703125
    7. '   ' → logprob: -15.75079345703125
    8. ')' → logprob: -16.75079345703125
    9. '):
' → logprob: -16.75079345703125
    10. '():' → logprob: -17.12579345703125

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029292043298482895
    2. ':' → logprob: -3.654292106628418
    3. ':return' → logprob: -6.654292106628418
    4. ' return' → logprob: -7.654292106628418
    5. ':
' → logprob: -7.654292106628418
    6. '   ' → logprob: -7.904292106628418
    7. '<|end|>' → logprob: -8.779292106628418
    8. 'return' → logprob: -9.029292106628418
    9. ',' → logprob: -10.654292106628418
    10. ')' → logprob: -11.154292106628418

Token 113: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3188842236995697
    2. 'return' (adapté à ' return') → logprob: -1.568884253501892
    3. '       ' → logprob: -2.8188841342926025
    4. '
' → logprob: -5.818884372711182
    5. '   ' → logprob: -7.318884372711182
    6. ':return' → logprob: -7.318884372711182
    7. ' 
' → logprob: -8.068883895874023
    8. '	return' → logprob: -8.693883895874023
    9. '           ' → logprob: -8.943883895874023
    10. '<|end|>' → logprob: -10.068883895874023

Token 114: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.02640247903764248
    2. ' memo' → logprob: -3.651402473449707
    3. '0' → logprob: -9.776402473449707
    4. 'm' → logprob: -10.151402473449707
    5. 'mem' → logprob: -13.026402473449707
    6. '1' → logprob: -13.776402473449707
    7. ' ' → logprob: -13.776402473449707
    8. 'memory' → logprob: -14.776402473449707
    9. ' ' → logprob: -15.276402473449707
    10. '
' → logprob: -15.651402473449707

Token 115: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -4.961759259458631e-06
    2. 'm' → logprob: -13.000004768371582
    3. '[' → logprob: -13.375004768371582
    4. '```' → logprob: -15.000004768371582
    5. '[
' → logprob: -15.125004768371582
    6. '][' → logprob: -16.2500057220459
    7. ']' → logprob: -16.7500057220459
    8. '
' → logprob: -16.7500057220459
    9. '\[' → logprob: -16.7500057220459
    10. '	m' → logprob: -17.0000057220459

Token 116: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00018041854491457343
    2. ']
' → logprob: -9.1251802444458
    3. ')' → logprob: -10.0001802444458
    4. ']

' → logprob: -11.5001802444458
    5. ')]' → logprob: -11.6251802444458
    6. ' ]' → logprob: -12.8751802444458
    7. '])' → logprob: -13.0001802444458
    8. '   ' → logprob: -15.0001802444458
    9. '()]' → logprob: -15.1251802444458
    10. ']+' → logprob: -15.5001802444458

Token 117: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4950501620769501
    2. '   ' → logprob: -1.3700501918792725
    3. '    
' → logprob: -2.9950501918792725
    4. '<|end|>' → logprob: -2.9950501918792725
    5. '  
' → logprob: -4.870049953460693
    6. '\n' → logprob: -4.995049953460693
    7. ' if' → logprob: -4.995049953460693
    8. ' 
' → logprob: -5.495049953460693
    9. ' ' → logprob: -5.745049953460693
    10. '0' → logprob: -5.995049953460693

Token 118: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6148673892021179
    2. 'if' (adapté à ' if') → logprob: -0.9898673892021179
    3. 'ret' → logprob: -3.8648674488067627
    4. 'max' → logprob: -3.9898674488067627
    5. 'ans' → logprob: -4.614867210388184
    6. 'cost' → logprob: -4.739867210388184
    7. ' if' → logprob: -4.989867210388184
    8. 'min' → logprob: -5.239867210388184
    9. ' res' → logprob: -5.364867210388184
    10. 'time' → logprob: -5.989867210388184

Token 119: ' W' (ID: 486)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.28690189123153687
    2. ' m' → logprob: -1.4119019508361816
    3. 'W' → logprob: -6.036901950836182
    4. ' W' → logprob: -6.911901950836182
    5. ' len' → logprob: -7.036901950836182
    6. 'len' → logprob: -7.286901950836182
    7. ' not' → logprob: -7.661901950836182
    8. 'T' → logprob: -9.786901473999023
    9. ' T' → logprob: -10.161901473999023
    10. ' ' → logprob: -10.286901473999023

Token 120: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -7.5649528298527e-05
    2. '[' → logprob: -9.750075340270996
    3. 'm' → logprob: -11.625075340270996
    4. ')' → logprob: -13.500075340270996
    5. '<m' → logprob: -14.125075340270996
    6. ' [' → logprob: -14.250075340270996
    7. '[
' → logprob: -14.500075340270996
    8. '[min' → logprob: -14.500075340270996
    9. '[len' → logprob: -14.625075340270996
    10. ')m' → logprob: -14.625075340270996

Token 121: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05107353627681732
    2. ']==' → logprob: -3.5510735511779785
    3. '[m' → logprob: -5.0510735511779785
    4. ']>=' → logprob: -5.0510735511779785
    5. ']>' → logprob: -5.6760735511779785
    6. ']<=' → logprob: -6.1760735511779785
    7. '[' → logprob: -6.5510735511779785
    8. ' ]' → logprob: -7.8010735511779785
    9. ']<' → logprob: -7.8010735511779785
    10. 'm' → logprob: -9.30107307434082

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.607391408877447e-05
    2. ' ' → logprob: -10.375036239624023
    3. '<|end|>' → logprob: -13.625036239624023
    4. '0' → logprob: -14.437536239624023
    5. ')' → logprob: -14.687536239624023
    6. '2' → logprob: -15.062536239624023
    7. '   ' → logprob: -15.500036239624023
    8. ']' → logprob: -15.562536239624023
    9. '-' → logprob: -15.750036239624023
    10. ',' → logprob: -15.875036239624023

Token 123: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.5226366519927979
    2. ' ==' → logprob: -1.5226366519927979
    3. ' >' → logprob: -1.6476366519927979
    4. '>' → logprob: -1.7726366519927979
    5. ']' → logprob: -1.8976366519927979
    6. ']==' → logprob: -4.397636413574219
    7. ' >=' → logprob: -4.897636413574219
    8. ' <' → logprob: -5.147636413574219
    9. '>=' → logprob: -5.147636413574219
    10. ' <=' → logprob: -5.397636413574219

Token 124: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6218522787094116
    2. '>' → logprob: -1.3718522787094116
    3. ' ==' → logprob: -2.371852397918701
    4. '==' → logprob: -2.621852397918701
    5. ' >=' → logprob: -4.246852397918701
    6. ' <=' → logprob: -4.871852397918701
    7. '>=' → logprob: -4.871852397918701
    8. '<=' → logprob: -5.246852397918701
    9. ' <' → logprob: -5.371852397918701
    10. '<' → logprob: -5.746852397918701

Token 125: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14910724759101868
    2. 'T' → logprob: -3.2741072177886963
    3. '1' → logprob: -3.3991072177886963
    4. ' ' → logprob: -3.7741072177886963
    5. 'INF' → logprob: -3.7741072177886963
    6. '-' → logprob: -4.024107456207275
    7. 'E' → logprob: -7.024107456207275
    8. ' -' → logprob: -7.524107456207275
    9. ' T' → logprob: -7.649107456207275
    10. '100' → logprob: -8.274106979370117

Token 126: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13394993543624878
    2. '1' → logprob: -2.8839499950408936
    3. '-' → logprob: -3.7589499950408936
    4. 'T' → logprob: -3.7589499950408936
    5. 'INF' → logprob: -4.2589497566223145
    6. ' ' → logprob: -5.6339497566223145
    7. 'E' → logprob: -6.3839497566223145
    8. '100' → logprob: -7.2589497566223145
    9. '2' → logprob: -7.7589497566223145
    10. '3' → logprob: -8.008950233459473

Token 127: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004485662095248699
    2. ':
' → logprob: -5.629485607147217
    3. ':return' → logprob: -8.004486083984375
    4. ' or' → logprob: -8.129486083984375
    5. ' and' → logprob: -8.879486083984375
    6. ' :' → logprob: -9.254486083984375
    7. 'and' → logprob: -11.879486083984375
    8. '   ' → logprob: -12.129486083984375
    9. '):' → logprob: -13.129486083984375
    10. ' :
' → logprob: -13.379486083984375

Token 128: '       ' (ID: 309)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.7379220128059387
    2. 'return' → logprob: -1.237921953201294
    3. '   ' → logprob: -2.112921953201294
    4. ' memo' → logprob: -2.987921953201294
    5. '0' → logprob: -3.862921953201294
    6. ' return' → logprob: -4.237922191619873
    7. '
' → logprob: -5.112922191619873
    8. ' ' → logprob: -5.237922191619873
    9. '1' → logprob: -5.487922191619873
    10. ':return' → logprob: -5.862922191619873

Token 129: ' memo' (ID: 46393)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1134633868932724
    2. ' return' → logprob: -2.9884634017944336
    3. 'memo' (adapté à ' memo') → logprob: -3.1134634017944336
    4. '1' → logprob: -5.238463401794434
    5. '0' → logprob: -5.738463401794434
    6. ' memo' → logprob: -5.863463401794434
    7. '   ' → logprob: -7.113463401794434
    8. ' ' → logprob: -8.613463401794434
    9. '
' → logprob: -10.988463401794434
    10. 'ret' → logprob: -11.863463401794434

Token 130: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.00044675805838778615
    2. '[' → logprob: -7.750446796417236
    3. 'm' → logprob: -11.500446319580078
    4. '[(' → logprob: -12.750446319580078
    5. 'return' → logprob: -13.875446319580078
    6. '[n' → logprob: -14.875446319580078
    7. '[-' → logprob: -15.000446319580078
    8. '[N' → logprob: -15.000446319580078
    9. '[M' → logprob: -15.625446319580078
    10. ' [' → logprob: -15.625446319580078

Token 131: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06933488696813583
    2. '=' → logprob: -2.9443349838256836
    3. ' =' → logprob: -4.819334983825684
    4. ']=' → logprob: -5.569334983825684
    5. ')' → logprob: -6.319334983825684
    6. '[' → logprob: -8.319334983825684
    7. 'return' → logprob: -9.069334983825684
    8. ' ' → logprob: -9.444334983825684
    9. ' ]' → logprob: -10.194334983825684
    10. '0' → logprob: -10.319334983825684

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868945240974426
    2. '=' → logprob: -1.1368944644927979
    3. ' ' → logprob: -12.136894226074219
    4. 'return' → logprob: -12.386894226074219
    5. '[' → logprob: -12.511894226074219
    6. '=True' → logprob: -13.011894226074219
    7. '0' → logprob: -13.511894226074219
    8. '
' → logprob: -13.886894226074219
    9. ',' → logprob: -14.136894226074219
    10. ']' → logprob: -14.261894226074219

Token 133: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08694447576999664
    2. '1' → logprob: -2.586944580078125
    3. 'T' → logprob: -5.711944580078125
    4. 'True' → logprob: -6.086944580078125
    5. '(' → logprob: -6.961944580078125
    6. '[' → logprob: -7.336944580078125
    7. ' ' → logprob: -8.836944580078125
    8. 'W' → logprob: -8.961944580078125
    9. '10' → logprob: -9.336944580078125
    10. 'm' → logprob: -9.461944580078125

Token 134: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1269969791173935
    2. '1' → logprob: -2.2519969940185547
    3. 'True' → logprob: -5.001996994018555
    4. 'T' → logprob: -5.501996994018555
    5. '(' → logprob: -7.001996994018555
    6. '[' → logprob: -7.501996994018555
    7. 'INF' → logprob: -7.501996994018555
    8. '10' → logprob: -8.626996994018555
    9. ' ' → logprob: -8.876996994018555
    10. 'W' → logprob: -8.876996994018555

Token 135: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03653009608387947
    2. '   ' → logprob: -3.411530017852783
    3. '
' → logprob: -7.161530017852783
    4. '    
' → logprob: -7.161530017852783
    5. '<|end|>' → logprob: -7.411530017852783
    6. 'return' → logprob: -8.411530494689941
    7. '       ' → logprob: -8.786530494689941
    8. ' ' → logprob: -9.911530494689941
    9. ' return' → logprob: -10.161530494689941
    10. '  
' → logprob: -10.536530494689941

Token 136: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08104178309440613
    2. '       ' → logprob: -3.0810418128967285
    3. '
' → logprob: -3.8310418128967285
    4. 'return' → logprob: -5.8310418128967285
    5. '<|end|>' → logprob: -5.8310418128967285
    6. '    
' → logprob: -6.4560418128967285
    7. ' return' → logprob: -6.9560418128967285
    8. '	return' → logprob: -7.7060418128967285
    9. ' ' → logprob: -8.45604133605957
    10. '	' → logprob: -8.58104133605957

Token 137: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08440680056810379
    2. ' return' → logprob: -2.584406852722168
    3. '   ' → logprob: -5.209406852722168
    4. '       ' → logprob: -11.459406852722168
    5. '	return' → logprob: -11.834406852722168
    6. '0' → logprob: -12.084406852722168
    7. ' ' → logprob: -12.334406852722168
    8. '
' → logprob: -12.584406852722168
    9. '    ' → logprob: -13.334406852722168
    10. ':return' → logprob: -13.959406852722168

Token 138: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.227250610711053e-05
    2. ' ' → logprob: -10.500041961669922
    3. 'memo' → logprob: -11.750041961669922
    4. 'True' → logprob: -12.375041961669922
    5. 'm' → logprob: -13.750041961669922
    6. '0' → logprob: -13.875041961669922
    7. ' True' → logprob: -16.000041961669922
    8. '
' → logprob: -16.000041961669922
    9. ' memo' → logprob: -16.625041961669922
    10. '

' → logprob: -17.625041961669922

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0921942703134846e-05
    2. 'memo' → logprob: -12.12501049041748
    3. 'm' → logprob: -12.25001049041748
    4. ' ' → logprob: -14.62501049041748
    5. 'True' → logprob: -15.87501049041748
    6. '
' → logprob: -17.750011444091797
    7. '[m' → logprob: -17.875011444091797
    8. '0' → logprob: -17.875011444091797
    9. 'true' → logprob: -18.125011444091797
    10. '```' → logprob: -18.375011444091797

Token 140: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056487761437892914
    2. '<|end|>' → logprob: -3.431487798690796
    3. '    
' → logprob: -4.431487560272217
    4. '
' → logprob: -5.181487560272217
    5. '\n' → logprob: -6.806487560272217
    6. '  ' → logprob: -7.306487560272217
    7. ')' → logprob: -7.556487560272217
    8. '  
' → logprob: -7.556487560272217
    9. '   
' → logprob: -8.056488037109375
    10. ' ' → logprob: -8.056488037109375

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03334735333919525
    2. '    
' → logprob: -4.408347129821777
    3. 'for' → logprob: -4.908347129821777
    4. '```' → logprob: -4.908347129821777
    5. '
' → logprob: -6.033347129821777
    6. ' for' → logprob: -6.908347129821777
    7. 'if' → logprob: -7.658347129821777
    8. '<|end|>' → logprob: -7.783347129821777
    9. '  
' → logprob: -8.283347129821777
    10. '  ' → logprob: -8.783347129821777

Token 142: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.2134512960910797
    2. 'ans' → logprob: -2.463451385498047
    3. 'ret' → logprob: -2.963451385498047
    4. 'min' → logprob: -3.713451385498047
    5. 'best' → logprob: -4.088451385498047
    6. 'dp' → logprob: -6.088451385498047
    7. 'memo' → logprob: -6.088451385498047
    8. 'answer' → logprob: -6.588451385498047
    9. 'mn' → logprob: -6.588451385498047
    10. 'r' → logprob: -7.088451385498047

Token 143: ' not' (ID: 625)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.26164019107818604
    2. 'm' → logprob: -1.636640191078186
    3. 'len' → logprob: -4.3866400718688965
    4. 'all' → logprob: -4.8866400718688965
    5. 'not' → logprob: -5.2616400718688965
    6. 'memo' → logprob: -5.3866400718688965
    7. 'rules' → logprob: -6.3866400718688965
    8. 'sum' → logprob: -6.8866400718688965
    9. 'N' → logprob: -7.3866400718688965
    10. 'max' → logprob: -7.5116400718688965

Token 144: ' rules' (ID: 9607)
  Prédit: 'rules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rules' → logprob: -0.009764114394783974
    2. ' rules' → logprob: -4.634764194488525
    3. 'r' → logprob: -12.134763717651367
    4. 'rule' → logprob: -14.009763717651367
    5. '.rules' → logprob: -14.634763717651367
    6. 'ru' → logprob: -15.384763717651367
    7. '(r' → logprob: -15.509763717651367
    8. 'm' → logprob: -15.884763717651367
    9. 'len' → logprob: -16.259763717651367
    10. 's' → logprob: -16.384763717651367

Token 145: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -14.125001907348633
    3. 'm' → logprob: -14.375001907348633
    4. '[G' → logprob: -15.875001907348633
    5. ' [' → logprob: -16.250001907348633
    6. '[M' → logprob: -17.125001907348633
    7. '[
' → logprob: -17.500001907348633
    8. '
' → logprob: -18.000001907348633
    9. '```' → logprob: -18.125001907348633
    10. '[s' → logprob: -18.250001907348633

Token 146: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.18186438083648682
    2. '):' → logprob: -1.8068643808364868
    3. '):
' → logprob: -7.556864261627197
    4. ':' → logprob: -7.556864261627197
    5. ']:
' → logprob: -7.681864261627197
    6. ']):' → logprob: -8.056864738464355
    7. ']' → logprob: -8.806864738464355
    8. ' ):' → logprob: -9.181864738464355
    9. ')' → logprob: -11.306864738464355
    10. '}:' → logprob: -12.556864738464355

Token 147: '       ' (ID: 309)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.2716071903705597
    2. '
' → logprob: -2.6466071605682373
    3. '   ' → logprob: -2.7716071605682373
    4. ' memo' → logprob: -2.8966071605682373
    5. '       ' → logprob: -4.021607398986816
    6. 'return' → logprob: -5.021607398986816
    7. ' for' → logprob: -5.521607398986816
    8. '    
' → logprob: -5.771607398986816
    9. 'for' → logprob: -5.771607398986816
    10. ':' → logprob: -6.021607398986816

Token 148: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' (adapté à ' memo') → logprob: -0.6763454079627991
    2. 'return' → logprob: -1.6763453483581543
    3. 'INF' → logprob: -1.6763453483581543
    4. '0' → logprob: -2.1763453483581543
    5. '   ' → logprob: -6.676345348358154
    6. ' memo' → logprob: -7.176345348358154
    7. ' return' → logprob: -7.176345348358154
    8. ' INF' → logprob: -7.426345348358154
    9. 'inf' → logprob: -8.551345825195312
    10. ' ' → logprob: -9.551345825195312

Token 149: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.00013798571308143437
    2. '[' → logprob: -9.000138282775879
    3. 'm' → logprob: -11.750138282775879
    4. '[-' → logprob: -12.875138282775879
    5. '=' → logprob: -13.500138282775879
    6. '=m' → logprob: -14.750138282775879
    7. ' [' → logprob: -14.750138282775879
    8. ' =' → logprob: -14.875138282775879
    9. '```' → logprob: -15.250138282775879
    10. '   ' → logprob: -15.375138282775879

Token 150: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04545408859848976
    2. ' =' → logprob: -3.1704540252685547
    3. ']' → logprob: -6.170454025268555
    4. ')' → logprob: -8.045454025268555
    5. ']=' → logprob: -10.295454025268555
    6. ')=' → logprob: -12.045454025268555
    7. '=
' → logprob: -14.795454025268555
    8. '=None' → logprob: -15.420454025268555
    9. '}' → logprob: -16.295454025268555
    10. '=m' → logprob: -16.545454025268555

Token 151: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815006136894226
    2. ' =' → logprob: -4.0181498527526855
    3. '=
' → logprob: -16.268150329589844
    4. '=

' → logprob: -19.143150329589844
    5. ' ' → logprob: -19.268150329589844
    6. ']' → logprob: -19.768150329589844
    7. '＝' → logprob: -19.768150329589844
    8. ')' → logprob: -19.768150329589844
    9. '=}' → logprob: -19.893150329589844
    10. '=int' → logprob: -19.893150329589844

Token 152: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.11654996871948242
    2. '0' → logprob: -2.2415499687194824
    3. '-' → logprob: -6.116549968719482
    4. '-INF' → logprob: -6.741549968719482
    5. ' INF' → logprob: -8.74155044555664
    6. ' ' → logprob: -9.49155044555664
    7. ' -' → logprob: -10.61655044555664
    8. '1' → logprob: -10.86655044555664
    9. 'IN' → logprob: -11.11655044555664
    10. '2' → logprob: -11.99155044555664

Token 153: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2905850112438202
    2. '   ' → logprob: -1.6655850410461426
    3. 'return' → logprob: -3.6655850410461426
    4. '    
' → logprob: -3.6655850410461426
    5. ' return' → logprob: -5.290585041046143
    6. '<|end|>' → logprob: -5.915585041046143
    7. '\n' → logprob: -6.665585041046143
    8. '+' → logprob: -7.790585041046143
    9. '  
' → logprob: -7.790585041046143
    10. '	return' → logprob: -7.915585041046143

Token 154: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08131371438503265
    2. '       ' → logprob: -2.5813136100769043
    3. '<|end|>' → logprob: -6.456313610076904
    4. '    
' → logprob: -8.206314086914062
    5. '    ' → logprob: -8.456314086914062
    6. '  ' → logprob: -9.581314086914062
    7. 'return' → logprob: -10.206314086914062
    8. '     ' → logprob: -10.331314086914062
    9. '	' → logprob: -10.331314086914062
    10. ')' → logprob: -10.456314086914062

Token 155: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13044428825378418
    2. ' return' → logprob: -2.130444288253784
    3. '   ' → logprob: -6.130444526672363
    4. '       ' → logprob: -6.630444526672363
    5. '	return' → logprob: -11.505444526672363
    6. ' ' → logprob: -13.130444526672363
    7. '    ' → logprob: -13.880444526672363
    8. '           ' → logprob: -14.255444526672363
    9. '  ' → logprob: -14.505444526672363
    10. ':return' → logprob: -15.380444526672363

Token 156: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.0009124171338044107
    2. ' INF' → logprob: -7.000912189483643
    3. 'IN' → logprob: -14.0009126663208
    4. '-INF' → logprob: -17.250911712646484
    5. '_INF' → logprob: -17.625911712646484
    6. ' ' → logprob: -17.750911712646484
    7. 'memo' → logprob: -18.500911712646484
    8. '   ' → logprob: -19.375911712646484
    9. ' ' → logprob: -20.000911712646484
    10. '  ' → logprob: -20.000911712646484

Token 157: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01943250373005867
    2. '    
' → logprob: -4.144432544708252
    3. '<|end|>' → logprob: -6.769432544708252
    4. '\n' → logprob: -7.519432544708252
    5. 'n' → logprob: -8.144432067871094
    6. '    ' → logprob: -8.269432067871094
    7. ')' → logprob: -8.644432067871094
    8. ' for' → logprob: -8.894432067871094
    9. 'for' → logprob: -9.019432067871094
    10. '   
' → logprob: -9.144432067871094

Token 158: '   ' (ID: 271)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5927481651306152
    2. 'res' → logprob: -1.0927481651306152
    3. 'ans' → logprob: -3.5927481651306152
    4. '   ' → logprob: -3.8427481651306152
    5. 'count' → logprob: -3.9677481651306152
    6. 'total' → logprob: -4.342748165130615
    7. 'for' → logprob: -5.217748165130615
    8. 'minimum' → logprob: -5.342748165130615
    9. 'max' → logprob: -5.467748165130615
    10. 'ret' → logprob: -5.467748165130615

Token 159: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.09330400079488754
    2. 'min' → logprob: -2.468303918838501
    3. 'ret' → logprob: -6.09330415725708
    4. 'ans' → logprob: -6.96830415725708
    5. 'best' → logprob: -7.71830415725708
    6. 'max' → logprob: -8.593303680419922
    7. 'cost' → logprob: -9.093303680419922
    8. 'mn' → logprob: -9.468303680419922
    9. 'minimum' → logprob: -9.968303680419922
    10. 'mi' → logprob: -10.093303680419922

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0067156096920371056
    2. '=' → logprob: -5.006715774536133
    3. ' ' → logprob: -16.631715774536133
    4. ' =
' → logprob: -17.381715774536133
    5. ',' → logprob: -17.756715774536133
    6. ' ' → logprob: -17.756715774536133
    7. '=int' → logprob: -17.881715774536133
    8. '_' → logprob: -18.131715774536133
    9. ' =)' → logprob: -18.256715774536133
    10. '  ' → logprob: -18.506715774536133

Token 161: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -3.416665640543215e-05
    2. '0' → logprob: -11.12503433227539
    3. ' INF' → logprob: -11.25003433227539
    4. 'min' → logprob: -12.12503433227539
    5. '-INF' → logprob: -15.00003433227539
    6. '10' → logprob: -15.87503433227539
    7. 'inf' → logprob: -16.00003433227539
    8. 'IN' → logprob: -16.37503433227539
    9. 'max' → logprob: -16.50003433227539
    10. 'MIN' → logprob: -16.62503433227539

Token 162: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.020990371704101562
    2. 'for' → logprob: -4.395990371704102
    3. ' for' → logprob: -5.770990371704102
    4. ' 
' → logprob: -6.395990371704102
    5. '<|end|>' → logprob: -6.645990371704102
    6. '  
' → logprob: -7.020990371704102
    7. '    
' → logprob: -7.145990371704102
    8. '
' → logprob: -8.770990371704102
    9. '' → logprob: -8.895990371704102
    10. '\n' → logprob: -9.145990371704102

Token 163: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34342604875564575
    2. ' for' → logprob: -2.093425989151001
    3. 'for' → logprob: -3.218425989151001
    4. '   ' → logprob: -3.343425989151001
    5. '<|end|>' → logprob: -3.343425989151001
    6. '+' → logprob: -3.968425989151001
    7. '    
' → logprob: -4.21842622756958
    8. ' 
' → logprob: -5.21842622756958
    9. '  
' → logprob: -5.34342622756958
    10. ' +' → logprob: -5.59342622756958

Token 164: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0015053401002660394
    2. ' for' → logprob: -6.501505374908447
    3. '   ' → logprob: -12.751504898071289
    4. '	for' → logprob: -16.12650489807129
    5. ' ' → logprob: -17.50150489807129
    6. '
' → logprob: -17.75150489807129
    7. '    
' → logprob: -17.87650489807129
    8. 'if' → logprob: -18.25150489807129
    9. '+' → logprob: -19.12650489807129
    10. '  ' → logprob: -19.50150489807129

Token 165: ' comb' (ID: 4134)
  Prédit: 'rule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rule' → logprob: -1.6204439401626587
    2. 'option' → logprob: -1.7454439401626587
    3. 'S' → logprob: -1.8704439401626587
    4. 's' → logprob: -2.245443820953369
    5. 'seq' → logprob: -2.370443820953369
    6. 'path' → logprob: -2.995443820953369
    7. 'sub' → logprob: -3.120443820953369
    8. 'child' → logprob: -3.495443820953369
    9. 'next' → logprob: -3.620443820953369
    10. 'group' → logprob: -3.620443820953369

Token 166: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.08430556207895279
    2. ' in' → logprob: -3.20930552482605
    3. 'ination' → logprob: -3.20930552482605
    4. 'inations' → logprob: -10.334305763244629
    5. '   ' → logprob: -12.084305763244629
    6. 'ina' → logprob: -12.084305763244629
    7. 'o' → logprob: -12.084305763244629
    8. ',' → logprob: -12.209305763244629
    9. '  ' → logprob: -12.334305763244629
    10. 'inition' → logprob: -12.459305763244629

Token 167: ' rules' (ID: 9607)
  Prédit: 'rules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rules' → logprob: -0.0031786637846380472
    2. ' rules' → logprob: -5.753178596496582
    3. 'rule' → logprob: -14.753178596496582
    4. 'r' → logprob: -15.628178596496582
    5. '.rules' → logprob: -16.3781795501709
    6. 'ules' → logprob: -16.8781795501709
    7. '   ' → logprob: -17.2531795501709
    8. ' ' → logprob: -17.2531795501709
    9. '_rules' → logprob: -17.8781795501709
    10. '
' → logprob: -17.8781795501709

Token 168: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -1.3306015716807451e-05
    2. 'm' → logprob: -11.75001335144043
    3. '[' → logprob: -12.62501335144043
    4. '[s' → logprob: -14.25001335144043
    5. '```' → logprob: -14.75001335144043
    6. '[G' → logprob: -15.50001335144043
    7. ' [' → logprob: -16.50001335144043
    8. '(m' → logprob: -16.50001335144043
    9. '][' → logprob: -16.62501335144043
    10. '[M' → logprob: -16.62501335144043

Token 169: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.03702545911073685
    2. ']:
' → logprob: -3.6620254516601562
    3. '):' → logprob: -4.912025451660156
    4. '):
' → logprob: -6.537025451660156
    5. ':' → logprob: -6.912025451660156
    6. ']):' → logprob: -7.662025451660156
    7. ']' → logprob: -8.412025451660156
    8. ']):
' → logprob: -9.662025451660156
    9. ']:
' → logprob: -10.287025451660156
    10. '   ' → logprob: -11.162025451660156

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014132121577858925
    2. '
' → logprob: -7.626413345336914
    3. '        
' → logprob: -8.376413345336914
    4. ':' → logprob: -8.626413345336914
    5. 'res' → logprob: -8.876413345336914
    6. '   ' → logprob: -8.876413345336914
    7. '<|end|>' → logprob: -9.376413345336914
    8. ')' → logprob: -10.501413345336914
    9. '```' → logprob: -10.876413345336914
    10. '):
' → logprob: -11.501413345336914

Token 171: ' s' (ID: 265)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -1.1781868934631348
    2. 'tmp' → logprob: -1.5531868934631348
    3. 'cost' → logprob: -2.1781868934631348
    4. 'min' → logprob: -2.3031868934631348
    5. 'total' → logprob: -2.6781868934631348
    6. 'sum' → logprob: -3.4281868934631348
    7. 'current' → logprob: -3.4281868934631348
    8. 'curr' → logprob: -3.5531868934631348
    9. 'cur' → logprob: -3.6781868934631348
    10. 'res' → logprob: -4.053186893463135

Token 172: 'sum' (ID: 12298)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0020951840560883284
    2. ' =' → logprob: -7.1270952224731445
    3. 'ub' → logprob: -7.6270952224731445
    4. 'core' → logprob: -8.252095222473145
    5. 'u' → logprob: -8.627095222473145
    6. 'sum' → logprob: -9.252095222473145
    7. '=' → logprob: -9.502095222473145
    8. 'ums' → logprob: -10.252095222473145
    9. 'umm' → logprob: -10.252095222473145
    10. 'uma' → logprob: -11.002095222473145

Token 173: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804366663098335
    2. ' =' → logprob: -3.288043737411499
    3. 'um' → logprob: -14.163043975830078
    4. '=sum' → logprob: -14.288043975830078
    5. '_' → logprob: -14.788043975830078
    6. '_=' → logprob: -15.413043975830078
    7. ' ' → logprob: -15.663043975830078
    8. ',' → logprob: -16.038043975830078
    9. '+=' → logprob: -16.788043975830078
    10. ' ' → logprob: -17.163043975830078

Token 174: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020663968462031335
    2. ' ' → logprob: -8.50020694732666
    3. '1' → logprob: -13.37520694732666
    4. 'sum' → logprob: -14.50020694732666
    5. '  ' → logprob: -16.125205993652344
    6. '   ' → logprob: -16.187705993652344
    7. 'dfs' → logprob: -16.250205993652344
    8. 'max' → logprob: -16.312705993652344
    9. ' ' → logprob: -16.437705993652344
    10. '۰' → logprob: -16.625205993652344

Token 175: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.598092684522271e-05
    2. ' ' → logprob: -10.000056266784668
    3. 'sum' → logprob: -11.625056266784668
    4. '1' → logprob: -13.875056266784668
    5. 'max' → logprob: -15.375056266784668
    6. '   ' → logprob: -16.25005531311035
    7. 'dfs' → logprob: -16.31255531311035
    8. '  ' → logprob: -16.56255531311035
    9. ' sum' → logprob: -17.06255531311035
    10. ' ' → logprob: -17.87505531311035

Token 176: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04801420867443085
    2. '<|end|>' → logprob: -3.1730141639709473
    3. '
' → logprob: -5.923014163970947
    4. ' for' → logprob: -6.548014163970947
    5. '<|end|>' → logprob: -7.923014163970947
    6. 'for' → logprob: -8.548014640808105
    7. ',' → logprob: -9.423014640808105
    8. ' ' → logprob: -9.548014640808105
    9. '        
' → logprob: -10.548014640808105
    10. '   ' → logprob: -10.673014640808105

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30503782629966736
    2. ' for' → logprob: -1.5550378561019897
    3. '
' → logprob: -3.6800377368927
    4. 'for' → logprob: -4.055037975311279
    5. '<|end|>' → logprob: -4.930037975311279
    6. ' ' → logprob: -8.180037498474121
    7. '   ' → logprob: -8.305037498474121
    8. ' 
' → logprob: -8.430037498474121
    9. '        
' → logprob: -8.555037498474121
    10. ')' → logprob: -9.055037498474121

Token 178: ' used' (ID: 2061)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07118571549654007
    2. ' for' → logprob: -2.821185827255249
    3. '       ' → logprob: -4.69618558883667
    4. ' valid' → logprob: -10.946186065673828
    5. 'valid' → logprob: -10.946186065673828
    6. '   ' → logprob: -12.071186065673828
    7. 'flag' → logprob: -14.446186065673828
    8. ' ' → logprob: -14.446186065673828
    9. '           ' → logprob: -14.696186065673828
    10. '	for' → logprob: -14.946186065673828

Token 179: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2035665065050125
    2. '=' → logprob: -1.703566551208496
    3. '_' → logprob: -6.953566551208496
    4. '=set' → logprob: -6.953566551208496
    5. 's' → logprob: -9.578566551208496
    6. ' ' → logprob: -9.953566551208496
    7. ',' → logprob: -10.703566551208496
    8. '_set' → logprob: -11.203566551208496
    9. 'for' → logprob: -11.328566551208496
    10. '_tokens' → logprob: -11.578566551208496

Token 180: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.012942795641720295
    2. '{}' → logprob: -5.512942790985107
    3. '[]' → logprob: -5.512942790985107
    4. ' set' → logprob: -5.887942790985107
    5. '[' → logprob: -6.262942790985107
    6. '{' → logprob: -10.137943267822266
    7. ' []' → logprob: -10.762943267822266
    8. ' [' → logprob: -10.887943267822266
    9. '0' → logprob: -11.762943267822266
    10. ' ' → logprob: -12.137943267822266

Token 181: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008371464791707695
    2. '()
' → logprob: -7.250837326049805
    3. '(' → logprob: -9.250837326049805
    4. '()

' → logprob: -11.125837326049805
    5. '()\' → logprob: -11.875837326049805
    6. ' ()' → logprob: -13.125837326049805
    7. '()]' → logprob: -13.125837326049805
    8. '();' → logprob: -13.750837326049805
    9. '(),' → logprob: -13.750837326049805
    10. '())' → logprob: -13.750837326049805

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49071669578552246
    2. '<|end|>' → logprob: -0.9907166957855225
    3. ' ' → logprob: -5.365716934204102
    4. ' for' → logprob: -5.490716934204102
    5. '<|end|>' → logprob: -6.115716934204102
    6. '
' → logprob: -6.240716934204102
    7. '        
' → logprob: -6.740716934204102
    8. '        ' → logprob: -7.365716934204102
    9. '  
' → logprob: -7.740716934204102
    10. ' 
' → logprob: -7.990716934204102

Token 183: ' ok' (ID: 4763)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5324621796607971
    2. ' ' → logprob: -1.7824621200561523
    3. 'for' → logprob: -1.7824621200561523
    4. ' 
' → logprob: -3.2824621200561523
    5. '\n' → logprob: -4.157462120056152
    6. '\' → logprob: -4.907462120056152
    7. '<|end|>' → logprob: -4.907462120056152
    8. '
' → logprob: -5.782462120056152
    9. '       ' → logprob: -6.157462120056152
    10. '        ' → logprob: -7.782462120056152

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16031327843666077
    2. '=' → logprob: -1.9103132486343384
    3. '=True' → logprob: -9.910313606262207
    4. ':' → logprob: -10.660313606262207
    5. ',' → logprob: -11.785313606262207
    6. ' ' → logprob: -12.660313606262207
    7. '=False' → logprob: -12.785313606262207
    8. ' |=' → logprob: -13.535313606262207
    9. ' &=' → logprob: -15.410313606262207
    10. '[' → logprob: -15.910313606262207

Token 185: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.6931495666503906
    2. ' True' → logprob: -0.6931495666503906
    3. '(True' → logprob: -13.69314956665039
    4. 'False' → logprob: -14.94314956665039
    5. '=True' → logprob: -15.19314956665039
    6. ' ' → logprob: -15.19314956665039
    7. '   ' → logprob: -15.31814956665039
    8. '1' → logprob: -15.81814956665039
    9. '  ' → logprob: -17.44314956665039
    10. ' False' → logprob: -17.56814956665039

Token 186: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.957917332649231
    2. '       ' → logprob: -1.332917332649231
    3. '<|end|>' → logprob: -1.707917332649231
    4. ' 
' → logprob: -2.4579172134399414
    5. '  
' → logprob: -4.082917213439941
    6. ' ' → logprob: -4.207917213439941
    7. ' for' → logprob: -4.207917213439941
    8. '\n' → logprob: -4.332917213439941
    9. '        
' → logprob: -4.457917213439941
    10. '\' → logprob: -5.332917213439941

Token 187: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 188: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5761637091636658
    2. ' for' → logprob: -0.8261637091636658
    3. '       ' → logprob: -8.701163291931152
    4. ' ' → logprob: -10.576163291931152
    5. '	for' → logprob: -11.326163291931152
    6. ' 
' → logprob: -12.326163291931152
    7. '
' → logprob: -12.451163291931152
    8. ' ' → logprob: -12.576163291931152
    9. '        ' → logprob: -12.701163291931152
    10. '<|end|>' → logprob: -13.451163291931152

Token 189: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7699328064918518
    2. 'c' → logprob: -1.769932746887207
    3. 'node' → logprob: -2.894932746887207
    4. 'child' → logprob: -3.269932746887207
    5. 'n' → logprob: -3.394932746887207
    6. 'i' → logprob: -3.644932746887207
    7. 'v' → logprob: -3.769932746887207
    8. 'p' → logprob: -4.144932746887207
    9. 'k' → logprob: -4.144932746887207
    10. 'item' → logprob: -4.269932746887207

Token 190: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026404913514852524
    2. 'in' → logprob: -3.651404857635498
    3. ' ' → logprob: -9.526405334472656
    4. '<|end|>' → logprob: -11.401405334472656
    5. '	in' → logprob: -12.276405334472656
    6. ',' → logprob: -12.651405334472656
    7. ' ' → logprob: -12.901405334472656
    8. ' x' → logprob: -13.401405334472656
    9. '<|end|>' → logprob: -13.401405334472656
    10. 'x' → logprob: -13.526405334472656

Token 191: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.023264113813638687
    2. ' comb' → logprob: -3.773264169692993
    3. 'com' → logprob: -11.148263931274414
    4. '   ' → logprob: -13.648263931274414
    5. ' ' → logprob: -14.273263931274414
    6. 'ss' → logprob: -14.648263931274414
    7. 'range' → logprob: -14.773263931274414
    8. ' range' → logprob: -15.273263931274414
    9. 's' → logprob: -15.273263931274414
    10. '    ' → logprob: -15.773263931274414

Token 192: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009845096617937088
    2. ':
' → logprob: -4.63484525680542
    3. ' :' → logprob: -9.634844779968262
    4. '):
' → logprob: -11.884844779968262
    5. '):' → logprob: -12.384844779968262
    6. ' :
' → logprob: -12.634844779968262
    7. ',' → logprob: -13.009844779968262
    8. ' in' → logprob: -13.509844779968262
    9. '<|end|>' → logprob: -13.634844779968262
    10. ' ' → logprob: -14.009844779968262

Token 193: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4692017138004303
    2. '<|end|>' → logprob: -1.344201683998108
    3. ' ' → logprob: -3.0942018032073975
    4. '            ' → logprob: -4.094201564788818
    5. '<|end|>' → logprob: -4.469201564788818
    6. '
' → logprob: -4.844201564788818
    7. ' if' → logprob: -4.969201564788818
    8. ' 
' → logprob: -5.094201564788818
    9. '        ' → logprob: -5.594201564788818
    10. ',' → logprob: -5.719201564788818

Token 194: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07678165286779404
    2. 'if' (adapté à ' if') → logprob: -2.701781749725342
    3. '               ' → logprob: -6.076781749725342
    4. '
' → logprob: -6.326781749725342
    5. ' ' → logprob: -6.326781749725342
    6. '           ' → logprob: -7.951781749725342
    7. ' 
' → logprob: -8.326781272888184
    8. '            ' → logprob: -9.201781272888184
    9. '                
' → logprob: -10.201781272888184
    10. '<|end|>' → logprob: -10.201781272888184

Token 195: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.062257274985313416
    2. ' x' → logprob: -2.8122572898864746
    3. 'W' → logprob: -8.437256813049316
    4. ' W' → logprob: -9.812256813049316
    5. ' ' → logprob: -11.937256813049316
    6. '   ' → logprob: -12.999756813049316
    7. 'm' → logprob: -13.687256813049316
    8. '(x' → logprob: -13.749756813049316
    9. 'w' → logprob: -13.812256813049316
    10. '  ' → logprob: -14.124756813049316

Token 196: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02447805553674698
    2. 'in' → logprob: -3.774477958679199
    3. ' not' → logprob: -6.899477958679199
    4. ' ' → logprob: -8.5244779586792
    5. ' ==' → logprob: -12.1494779586792
    6. 'not' → logprob: -12.1494779586792
    7. ' x' → logprob: -12.5244779586792
    8. '==' → logprob: -12.6494779586792
    9. '<|end|>' → logprob: -13.0244779586792
    10. ' <' → logprob: -13.3994779586792

Token 197: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.20141655206680298
    2. ' used' → logprob: -1.7014164924621582
    3. ' ' → logprob: -13.576416969299316
    4. '
' → logprob: -14.576416969299316
    5. '   ' → logprob: -14.576416969299316
    6. 'visited' → logprob: -15.576416969299316
    7. '  ' → logprob: -15.701416969299316
    8. 'Used' → logprob: -15.826416969299316
    9. '_used' → logprob: -16.076416015625
    10. 'use' → logprob: -16.201416015625

Token 198: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0039045691955834627
    2. ':
' → logprob: -5.628904342651367
    3. ' or' → logprob: -8.878904342651367
    4. ' :' → logprob: -9.378904342651367
    5. '           ' → logprob: -10.753904342651367
    6. ':return' → logprob: -10.753904342651367
    7. '):' → logprob: -11.378904342651367
    8. ' and' → logprob: -11.878904342651367
    9. ',' → logprob: -12.753904342651367
    10. ':

' → logprob: -12.753904342651367

Token 199: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5205089449882507
    2. ':
' → logprob: -1.2705090045928955
    3. '               ' → logprob: -2.1455090045928955
    4. '           ' → logprob: -5.270508766174316
    5. ' continue' → logprob: -7.020508766174316
    6. ' and' → logprob: -7.270508766174316
    7. ' or' → logprob: -7.270508766174316
    8. 'continue' → logprob: -8.395508766174316
    9. ' :
' → logprob: -9.520508766174316
    10. ' :' → logprob: -9.770508766174316

Token 200: ' ok' (ID: 4763)
  Prédit: ' ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.19043290615081787
    2. 'ok' (adapté à ' ok') → logprob: -1.8154329061508179
    3. ' continue' → logprob: -5.565433025360107
    4. 'continue' → logprob: -5.815433025360107
    5. '           ' → logprob: -6.190433025360107
    6. '               ' → logprob: -7.315433025360107
    7. '   ' → logprob: -7.565433025360107
    8. '                   ' → logprob: -8.44043254852295
    9. '	ok' → logprob: -9.06543254852295
    10. ' okay' → logprob: -10.19043254852295

Token 201: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8979791402816772
    2. '==' → logprob: -1.2729791402816772
    3. ' =' → logprob: -1.3979791402816772
    4. ' ==' → logprob: -2.772979259490967
    5. '=False' → logprob: -6.022979259490967
    6. ':' → logprob: -7.647979259490967
    7. ':
' → logprob: -10.022978782653809
    8. ')' → logprob: -10.772978782653809
    9. ' is' → logprob: -11.272978782653809
    10. ')==' → logprob: -11.272978782653809

Token 202: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.003178071230649948
    2. ' False' → logprob: -5.753178119659424
    3. 'True' → logprob: -16.253177642822266
    4. '=False' → logprob: -16.253177642822266
    5. '(False' → logprob: -16.628177642822266
    6. '
' → logprob: -17.753177642822266
    7. '```' → logprob: -17.753177642822266
    8. '0' → logprob: -17.878177642822266
    9. '   ' → logprob: -18.753177642822266
    10. 'false' → logprob: -19.753177642822266

Token 203: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019245869480073452
    2. '                   ' → logprob: -6.876924514770508
    3. '<|end|>' → logprob: -8.001924514770508
    4. '           ' → logprob: -8.251924514770508
    5. '                ' → logprob: -8.876924514770508
    6. '              ' → logprob: -10.251924514770508
    7. '                       ' → logprob: -10.626924514770508
    8. '                
' → logprob: -10.751924514770508
    9. '       ' → logprob: -11.251924514770508
    10. ',' → logprob: -11.251924514770508

Token 204: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002676368225365877
    2. '<|end|>' → logprob: -6.877676486968994
    3. '           ' → logprob: -7.252676486968994
    4. '                   ' → logprob: -7.502676486968994
    5. '                ' → logprob: -8.877676010131836
    6. '                               ' → logprob: -9.877676010131836
    7. '              ' → logprob: -9.877676010131836
    8. '       ' → logprob: -10.752676010131836
    9. '                       ' → logprob: -11.002676010131836
    10. '                           ' → logprob: -11.252676010131836

Token 205: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.14555665850639343
    2. ' break' → logprob: -2.145556688308716
    3. '               ' → logprob: -4.020556449890137
    4. '                   ' → logprob: -8.020556449890137
    5. '           ' → logprob: -9.645556449890137
    6. '	break' → logprob: -9.895556449890137
    7. '
' → logprob: -10.395556449890137
    8. '                       ' → logprob: -11.520556449890137
    9. '```' → logprob: -12.020556449890137
    10. 'continue' → logprob: -12.270556449890137

Token 206: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012601142516359687
    2. '            
' → logprob: -7.626260280609131
    3. ' 
' → logprob: -7.876260280609131
    4. '
' → logprob: -8.751259803771973
    5. '            ' → logprob: -9.126259803771973
    6. '<|end|>' → logprob: -10.376259803771973
    7. '               ' → logprob: -11.126259803771973
    8. ' ' → logprob: -11.251259803771973
    9. '  
' → logprob: -11.251259803771973
    10. ',' → logprob: -11.501259803771973

Token 207: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001669485354796052
    2. '            ' → logprob: -9.625166893005371
    3. '               ' → logprob: -10.750166893005371
    4. ' else' → logprob: -11.000166893005371
    5. '            
' → logprob: -11.250166893005371
    6. '<|end|>' → logprob: -11.500166893005371
    7. ' ' → logprob: -11.750166893005371
    8. '          ' → logprob: -11.750166893005371
    9. 'else' → logprob: -12.375166893005371
    10. ' 
' → logprob: -12.500166893005371

Token 208: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.03657514974474907
    2. '           ' → logprob: -3.4115750789642334
    3. 'used' (adapté à ' used') → logprob: -5.9115753173828125
    4. ' 
' → logprob: -9.536575317382812
    5. '            
' → logprob: -9.786575317382812
    6. ' else' → logprob: -10.536575317382812
    7. '            ' → logprob: -10.911575317382812
    8. '               ' → logprob: -11.286575317382812
    9. ' if' → logprob: -11.911575317382812
    10. '```' → logprob: -12.286575317382812

Token 209: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0012259430950507522
    2. '.' → logprob: -6.75122594833374
    3. ' .' → logprob: -9.876225471496582
    4. ' add' → logprob: -13.626225471496582
    5. 'add' → logprob: -14.001225471496582
    6. '.update' → logprob: -14.126225471496582
    7. '.append' → logprob: -14.751225471496582
    8. '.Add' → logprob: -15.001225471496582
    9. '.remove' → logprob: -15.626225471496582
    10. '=' → logprob: -15.626225471496582

Token 210: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0031790214125066996
    2. '(' → logprob: -5.75317907333374
    3. ' (' → logprob: -14.378178596496582
    4. '(
' → logprob: -14.503178596496582
    5. 'x' → logprob: -15.628178596496582
    6. '(s' → logprob: -17.1281795501709
    7. ' x' → logprob: -18.5031795501709
    8. '((' → logprob: -18.5031795501709
    9. '(

' → logprob: -18.6281795501709
    10. '()' → logprob: -18.8781795501709

Token 211: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08908723294734955
    2. ')
' → logprob: -2.4640872478485107
    3. '           ' → logprob: -9.58908748626709
    4. ')
' → logprob: -10.33908748626709
    5. ' )' → logprob: -10.83908748626709
    6. ' )
' → logprob: -12.08908748626709
    7. ')

' → logprob: -12.83908748626709
    8. '       ' → logprob: -12.96408748626709
    9. '               ' → logprob: -12.96408748626709
    10. '),' → logprob: -13.21408748626709

Token 212: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04402534291148186
    2. '
' → logprob: -3.919025421142578
    3. ' 
' → logprob: -5.044025421142578
    4. '            
' → logprob: -5.419025421142578
    5. ' ' → logprob: -5.919025421142578
    6. '  
' → logprob: -6.169025421142578
    7. ' s' → logprob: -6.669025421142578
    8. ',' → logprob: -7.044025421142578
    9. '<|end|>' → logprob: -7.169025421142578
    10. '               ' → logprob: -7.544025421142578

Token 213: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -1.2100838422775269
    2. 'cost' → logprob: -1.5850838422775269
    3. 'tmp' → logprob: -1.7100838422775269
    4. 'ss' → logprob: -2.7100839614868164
    5. 'ret' → logprob: -2.8350839614868164
    6. 'res' → logprob: -3.2100839614868164
    7. 'v' → logprob: -3.2100839614868164
    8. 't' → logprob: -3.7100839614868164
    9. ' val' → logprob: -3.9600839614868164
    10. 'd' → logprob: -4.085083961486816

Token 214: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1228252425789833
    2. ' =' → logprob: -2.2478251457214355
    3. '+=' → logprob: -4.9978251457214355
    4. ' +=' → logprob: -5.7478251457214355
    5. '   ' → logprob: -12.747825622558594
    6. '+' → logprob: -12.872825622558594
    7. ',' → logprob: -13.122825622558594
    8. ' ' → logprob: -13.122825622558594
    9. ')' → logprob: -15.872825622558594
    10. ']+=' → logprob: -15.997825622558594

Token 215: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.004627360496670008
    2. ' dfs' → logprob: -5.379627227783203
    3. '
' → logprob: -12.629627227783203
    4. 'df' → logprob: -12.879627227783203
    5. '   ' → logprob: -14.629627227783203
    6. ' ' → logprob: -15.754627227783203
    7. 'd' → logprob: -16.004627227783203
    8. '  ' → logprob: -16.254627227783203
    9. '
' → logprob: -16.754627227783203
    10. 'ds' → logprob: -17.004627227783203

Token 216: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.001068654702976346
    2. '(' → logprob: -6.876068592071533
    3. 'x' → logprob: -10.501069068908691
    4. '(
' → logprob: -11.876069068908691
    5. ' (' → logprob: -14.126069068908691
    6. '<|end|>' → logprob: -14.501069068908691
    7. '```' → logprob: -17.126068115234375
    8. '(

' → logprob: -17.751068115234375
    9. '(int' → logprob: -17.751068115234375
    10. '((' → logprob: -17.876068115234375

Token 217: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0336616076529026
    2. ')
' → logprob: -3.4086616039276123
    3. ' )' → logprob: -12.033661842346191
    4. ')+' → logprob: -12.283661842346191
    5. ')
' → logprob: -13.283661842346191
    6. '           ' → logprob: -13.533661842346191
    7. ' )
' → logprob: -14.408661842346191
    8. ')

' → logprob: -14.408661842346191
    9. '))' → logprob: -15.533661842346191
    10. ')`
' → logprob: -16.033660888671875

Token 218: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.031301841139793396
    2. '+' → logprob: -4.531301975250244
    3. '
' → logprob: -4.906301975250244
    4. 'ss' → logprob: -5.406301975250244
    5. '            
' → logprob: -5.656301975250244
    6. '```' → logprob: -6.906301975250244
    7. '<|end|>' → logprob: -7.781301975250244
    8. ' if' → logprob: -7.781301975250244
    9. ' +' → logprob: -7.906301975250244
    10. ' 
' → logprob: -8.031301498413086

Token 219: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7256481051445007
    2. ' if' → logprob: -0.7256481051445007
    3. 'ss' → logprob: -3.6006481647491455
    4. ' ss' → logprob: -6.100647926330566
    5. '           ' → logprob: -6.475647926330566
    6. ' s' → logprob: -7.225647926330566
    7. '
' → logprob: -9.475647926330566
    8. 's' → logprob: -10.600647926330566
    9. '```' → logprob: -11.100647926330566
    10. ' ' → logprob: -11.600647926330566

Token 220: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.1002068892121315
    2. ' val' → logprob: -2.3502068519592285
    3. '	val' → logprob: -16.22520637512207
    4. '(val' → logprob: -16.35020637512207
    5. '   ' → logprob: -16.97520637512207
    6. ' ' → logprob: -17.22520637512207
    7. '[val' → logprob: -17.47520637512207
    8. '  ' → logprob: -17.97520637512207
    9. ',val' → logprob: -18.22520637512207
    10. '```' → logprob: -18.97520637512207

Token 221: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.182174414396286
    2. '==' → logprob: -1.8071744441986084
    3. ' >=' → logprob: -6.432174205780029
    4. '>=' → logprob: -7.182174205780029
    5. '>' → logprob: -10.932174682617188
    6. ' >' → logprob: -11.557174682617188
    7. ' ' → logprob: -11.557174682617188
    8. ')==' → logprob: -12.557174682617188
    9. '===' → logprob: -12.807174682617188
    10. '=' → logprob: -12.932174682617188

Token 222: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -1.0445127372804563e-05
    2. ' INF' → logprob: -11.50001049041748
    3. 'IN' → logprob: -15.87501049041748
    4. '-INF' → logprob: -16.000009536743164
    5. '_INF' → logprob: -17.750009536743164
    6. ' ' → logprob: -18.750009536743164
    7. '   ' → logprob: -18.875009536743164
    8. '0' → logprob: -19.000009536743164
    9. '  ' → logprob: -19.625009536743164
    10. 'INV' → logprob: -20.500009536743164

Token 223: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05188402906060219
    2. ':
' → logprob: -3.0518839359283447
    3. ' or' → logprob: -5.926884174346924
    4. '):' → logprob: -8.676883697509766
    5. '           ' → logprob: -9.051883697509766
    6. '):
' → logprob: -9.426883697509766
    7. ':return' → logprob: -9.551883697509766
    8. ')' → logprob: -9.926883697509766
    9. ' :' → logprob: -10.301883697509766
    10. '               ' → logprob: -10.301883697509766

Token 224: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0025011058896780014
    2. '
' → logprob: -6.627501010894775
    3. '                
' → logprob: -7.127501010894775
    4. '              ' → logprob: -9.627501487731934
    5. '           ' → logprob: -9.752501487731934
    6. '    
' → logprob: -9.877501487731934
    7. ' 
' → logprob: -10.002501487731934
    8. '                   ' → logprob: -10.627501487731934
    9. '```' → logprob: -10.627501487731934
    10. '            
' → logprob: -10.752501487731934

Token 225: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' (adapté à ' ok') → logprob: -0.5271062850952148
    2. '               ' → logprob: -1.5271062850952148
    3. ' ok' → logprob: -1.6521062850952148
    4. '                   ' → logprob: -8.152106285095215
    5. '           ' → logprob: -8.277106285095215
    6. '	ok' → logprob: -9.402106285095215
    7. '
' → logprob: -9.902106285095215
    8. '              ' → logprob: -10.152106285095215
    9. '```' → logprob: -10.277106285095215
    10. '   ' → logprob: -11.027106285095215

Token 226: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10116049647331238
    2. ' =' → logprob: -2.3511605262756348
    3. '=False' → logprob: -6.976160526275635
    4. '=True' → logprob: -11.351160049438477
    5. '==' → logprob: -12.476160049438477
    6. '           ' → logprob: -14.101160049438477
    7. ')' → logprob: -14.351160049438477
    8. ' ' → logprob: -14.726160049438477
    9. '=
' → logprob: -14.726160049438477
    10. '               ' → logprob: -15.226160049438477

Token 227: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.583550642360933e-05
    2. ' False' → logprob: -10.250036239624023
    3. 'True' → logprob: -14.750036239624023
    4. '(False' → logprob: -19.750036239624023
    5. '=False' → logprob: -19.750036239624023
    6. 'false' → logprob: -21.625036239624023
    7. '_false' → logprob: -22.750036239624023
    8. '```' → logprob: -22.750036239624023
    9. '
' → logprob: -23.125036239624023
    10. '.False' → logprob: -23.625036239624023

Token 228: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.341087570646778e-05
    2. '           ' → logprob: -9.625093460083008
    3. '                   ' → logprob: -11.625093460083008
    4. '<|end|>' → logprob: -11.875093460083008
    5. ',' → logprob: -12.875093460083008
    6. '                
' → logprob: -13.250093460083008
    7. '              ' → logprob: -13.500093460083008
    8. '       ' → logprob: -13.750093460083008
    9. '
' → logprob: -14.125093460083008
    10. '                ' → logprob: -14.375093460083008

Token 229: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00013965457037556916
    2. '           ' → logprob: -9.625139236450195
    3. '
' → logprob: -10.500139236450195
    4. '                   ' → logprob: -10.625139236450195
    5. '       ' → logprob: -12.500139236450195
    6. '    
' → logprob: -12.625139236450195
    7. '                
' → logprob: -12.625139236450195
    8. '            
' → logprob: -13.625139236450195
    9. 'break' → logprob: -13.625139236450195
    10. '  
' → logprob: -13.750139236450195

Token 230: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.041068185120821
    2. ' break' → logprob: -3.7910680770874023
    3. '               ' → logprob: -4.041068077087402
    4. '           ' → logprob: -9.916068077087402
    5. '                   ' → logprob: -10.791068077087402
    6. '	break' → logprob: -11.666068077087402
    7. '       ' → logprob: -12.916068077087402
    8. '                       ' → logprob: -13.916068077087402
    9. '   ' → logprob: -14.041068077087402
    10. '              ' → logprob: -14.416068077087402

Token 231: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.039956044405698776
    2. '
' → logprob: -3.2899560928344727
    3. '  
' → logprob: -7.039956092834473
    4. ' 
' → logprob: -7.664956092834473
    5. '            
' → logprob: -8.539956092834473
    6. '    
' → logprob: -9.039956092834473
    7. ' s' → logprob: -9.539956092834473
    8. '
' → logprob: -10.664956092834473
    9. '<|end|>' → logprob: -10.664956092834473
    10. '   
' → logprob: -10.789956092834473

Token 232: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00036287534749135375
    2. '<|end|>' → logprob: -8.87536334991455
    3. '            
' → logprob: -9.75036334991455
    4. '  
' → logprob: -10.37536334991455
    5. '          ' → logprob: -10.50036334991455
    6. '               ' → logprob: -11.00036334991455
    7. ' ' → logprob: -11.25036334991455
    8. ' 
' → logprob: -11.37536334991455
    9. '            ' → logprob: -11.75036334991455
    10. '<|end|>' → logprob: -11.87536334991455

Token 233: ' s' (ID: 265)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05635742098093033
    2. ' s' → logprob: -3.0563573837280273
    3. '
' → logprob: -5.556357383728027
    4. 's' (adapté à ' s') → logprob: -6.806357383728027
    5. '       ' → logprob: -7.056357383728027
    6. 'ss' → logprob: -7.556357383728027
    7. '            
' → logprob: -8.181357383728027
    8. '               ' → logprob: -8.431357383728027
    9. '   ' → logprob: -8.806357383728027
    10. ' 
' → logprob: -8.931357383728027

Token 234: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.008632530458271503
    2. 'um' → logprob: -4.758632659912109
    3. 's' → logprob: -11.25863265991211
    4. '+=' → logprob: -13.38363265991211
    5. ' sum' → logprob: -13.88363265991211
    6. ' +=' → logprob: -14.38363265991211
    7. '+' → logprob: -15.13363265991211
    8. 'sm' → logprob: -15.50863265991211
    9. '_sum' → logprob: -15.50863265991211
    10. '=' → logprob: -15.63363265991211

Token 235: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0789082944393158
    2. ' +=' → logprob: -2.5789082050323486
    3. '+' → logprob: -11.57890796661377
    4. '=' → logprob: -12.07890796661377
    5. ']+=' → logprob: -12.95390796661377
    6. '   ' → logprob: -14.82890796661377
    7. '```' → logprob: -15.07890796661377
    8. '+=(' → logprob: -16.328908920288086
    9. '+="' → logprob: -17.078908920288086
    10. '    ' → logprob: -17.078908920288086

Token 236: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.00020616286201402545
    2. ' val' → logprob: -8.500205993652344
    3. '1' → logprob: -13.125205993652344
    4. '(val' → logprob: -15.375205993652344
    5. '
' → logprob: -16.375205993652344
    6. '```' → logprob: -16.625205993652344
    7. '	val' → logprob: -16.750205993652344
    8. '   ' → logprob: -17.375205993652344
    9. ' ' → logprob: -17.750205993652344
    10. 'dfs' → logprob: -17.750205993652344

Token 237: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010214031673967838
    2. '
' → logprob: -5.260213851928711
    3. '<|end|>' → logprob: -5.885213851928711
    4. '        
' → logprob: -7.385213851928711
    5. ',' → logprob: -7.510213851928711
    6. '<|end|>' → logprob: -8.260213851928711
    7. '  
' → logprob: -8.635213851928711
    8. '   ' → logprob: -9.010213851928711
    9. '    
' → logprob: -9.260213851928711
    10. '           ' → logprob: -9.510213851928711

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019876365549862385
    2. '
' → logprob: -7.001987457275391
    3. '<|end|>' → logprob: -7.626987457275391
    4. '        
' → logprob: -8.75198745727539
    5. ' if' → logprob: -9.12698745727539
    6. '           ' → logprob: -9.75198745727539
    7. '  
' → logprob: -9.75198745727539
    8. '   ' → logprob: -9.87698745727539
    9. ',' → logprob: -10.00198745727539
    10. '<|end|>' → logprob: -10.75198745727539

Token 239: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03916046768426895
    2. '
' → logprob: -3.5391604900360107
    3. ' if' → logprob: -4.914160251617432
    4. '   ' → logprob: -8.03916072845459
    5. '<|end|>' → logprob: -8.03916072845459
    6. ' ' → logprob: -8.53916072845459
    7. '        
' → logprob: -8.66416072845459
    8. 'if' (adapté à ' if') → logprob: -8.91416072845459
    9. '```' → logprob: -9.03916072845459
    10. '  
' → logprob: -9.28916072845459

Token 240: ' ok' (ID: 4763)
  Prédit: ' ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.0005651841638609767
    2. 'ok' → logprob: -7.500565052032471
    3. ' okay' → logprob: -12.500565528869629
    4. ' not' → logprob: -12.625565528869629
    5. '	ok' → logprob: -12.875565528869629
    6. ' ' → logprob: -13.875565528869629
    7. ' ' → logprob: -14.000565528869629
    8. ' ок' → logprob: -15.375565528869629
    9. '(ok' → logprob: -15.375565528869629
    10. '  ' → logprob: -16.125564575195312

Token 241: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6802353858947754
    2. ':' → logprob: -1.5552353858947754
    3. ' <' → logprob: -1.6802353858947754
    4. 'and' → logprob: -2.8052353858947754
    5. '<' → logprob: -3.6802353858947754
    6. '           ' → logprob: -4.930235385894775
    7. ' ' → logprob: -7.555235385894775
    8. '       ' → logprob: -7.680235385894775
    9. '==' → logprob: -7.805235385894775
    10. '=' → logprob: -8.055234909057617

Token 242: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0044691660441458225
    2. ' if' → logprob: -6.254469394683838
    3. ' res' → logprob: -6.504469394683838
    4. '               ' → logprob: -7.754469394683838
    5. '       ' → logprob: -8.25446891784668
    6. '
' → logprob: -9.00446891784668
    7. 'res' → logprob: -9.50446891784668
    8. '   ' → logprob: -9.62946891784668
    9. '```' → logprob: -11.00446891784668
    10. ' s' → logprob: -11.12946891784668

Token 243: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3147531747817993
    2. ' res' → logprob: -1.3147531747817993
    3. '           ' → logprob: -6.81475305557251
    4. ' if' → logprob: -8.314753532409668
    5. 'if' (adapté à ' if') → logprob: -9.314753532409668
    6. '               ' → logprob: -11.064753532409668
    7. '   ' → logprob: -11.189753532409668
    8. '       ' → logprob: -11.189753532409668
    9. '
' → logprob: -11.439753532409668
    10. ' ' → logprob: -14.064753532409668

Token 244: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.03633870929479599
    2. 'ss' → logprob: -3.4113388061523438
    3. ' res' → logprob: -6.286338806152344
    4. 'res' → logprob: -7.786338806152344
    5. ' ss' → logprob: -7.911338806152344
    6. 's' → logprob: -11.036338806152344
    7. '(ss' → logprob: -11.661338806152344
    8. 'sss' → logprob: -12.036338806152344
    9. '   ' → logprob: -12.161338806152344
    10. 'SS' → logprob: -13.786338806152344

Token 245: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0003326049481984228
    2. 'um' → logprob: -8.125332832336426
    3. 's' → logprob: -11.125332832336426
    4. 'ss' → logprob: -11.625332832336426
    5. '_sum' → logprob: -13.000332832336426
    6. '   ' → logprob: -13.625332832336426
    7. '=sum' → logprob: -13.625332832336426
    8. ' sum' → logprob: -13.875332832336426
    9. 'sm' → logprob: -13.875332832336426
    10. '(sum' → logprob: -14.000332832336426

Token 246: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3494587540626526
    2. '<' → logprob: -1.2244586944580078
    3. ' <=' → logprob: -7.349458694458008
    4. '+' → logprob: -8.474458694458008
    5. '<=' → logprob: -9.974458694458008
    6. ' +' → logprob: -10.224458694458008
    7. '<|end|>' → logprob: -11.224458694458008
    8. '<size' → logprob: -11.349458694458008
    9. ' ' → logprob: -11.599458694458008
    10. '<int' → logprob: -11.974458694458008

Token 247: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.06196768581867218
    2. ' res' → logprob: -2.811967611312866
    3. '   ' → logprob: -17.061967849731445
    4. '	res' → logprob: -17.186967849731445
    5. 'rs' → logprob: -18.061967849731445
    6. '
' → logprob: -18.186967849731445
    7. '(res' → logprob: -18.561967849731445
    8. 'ress' → logprob: -18.561967849731445
    9. '=res' → logprob: -18.811967849731445
    10. '           ' → logprob: -19.061967849731445

Token 248: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2849186658859253
    2. ':
' → logprob: -1.4099186658859253
    3. '           ' → logprob: -6.534918785095215
    4. '               ' → logprob: -6.784918785095215
    5. '):
' → logprob: -7.659918785095215
    6. '):' → logprob: -8.659918785095215
    7. ' :
' → logprob: -8.784918785095215
    8. '       ' → logprob: -9.409918785095215
    9. ' :' → logprob: -9.409918785095215
    10. ')' → logprob: -10.034918785095215

Token 249: '               ' (ID: 506)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.40014880895614624
    2. '               ' → logprob: -1.150148868560791
    3. 'res' → logprob: -4.650148868560791
    4. ' =' → logprob: -7.025148868560791
    5. ' ss' → logprob: -7.025148868560791
    6. ' ' → logprob: -7.150148868560791
    7. ' s' → logprob: -7.400148868560791
    8. '           ' → logprob: -9.275148391723633
    9. 'ss' → logprob: -9.650148391723633
    10. ' ' → logprob: -9.900148391723633

Token 250: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.030656099319458008
    2. 'res' (adapté à ' res') → logprob: -3.905656099319458
    3. '               ' → logprob: -4.780655860900879
    4. '                ' → logprob: -6.655655860900879
    5. '                   ' → logprob: -8.530655860900879
    6. ' ' → logprob: -9.530655860900879
    7. ' 
' → logprob: -9.655655860900879
    8. '           ' → logprob: -11.780655860900879
    9. '            ' → logprob: -12.530655860900879
    10. '
' → logprob: -12.530655860900879

Token 251: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196802109479904
    2. '=' → logprob: -2.8119680881500244
    3. ' =
' → logprob: -15.686967849731445
    4. '＝' → logprob: -16.561967849731445
    5. ' ' → logprob: -16.936967849731445
    6. ' =)' → logprob: -16.936967849731445
    7. '<|end|>' → logprob: -18.186967849731445
    8. ' =
' → logprob: -18.561967849731445
    9. '   ' → logprob: -18.686967849731445
    10. '    ' → logprob: -18.811967849731445

Token 252: ' s' (ID: 265)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.31331145763397217
    2. ' s' → logprob: -1.3133114576339722
    3. ' ss' → logprob: -10.938311576843262
    4. 'sss' → logprob: -11.563311576843262
    5. '	ss' → logprob: -12.438311576843262
    6. 'ssd' → logprob: -12.563311576843262
    7. 'ssss' → logprob: -12.688311576843262
    8. 'ssp' → logprob: -12.813311576843262
    9. '(ss' → logprob: -12.938311576843262
    10. 'ssh' → logprob: -13.688311576843262

Token 253: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0019416073337197304
    2. 'um' → logprob: -6.251941680908203
    3. 's' → logprob: -12.376941680908203
    4. 'cum' → logprob: -12.626941680908203
    5. ' sum' → logprob: -13.751941680908203
    6. 'psum' → logprob: -13.876941680908203
    7. 'val' → logprob: -14.001941680908203
    8. 'su' → logprob: -15.001941680908203
    9. 'sm' → logprob: -15.126941680908203
    10. ' um' → logprob: -15.251941680908203

Token 254: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44042959809303284
    2. '   ' → logprob: -1.1904295682907104
    3. '    
' → logprob: -3.6904296875
    4. '+' → logprob: -3.9404296875
    5. 'return' → logprob: -5.6904296875
    6. '  
' → logprob: -7.0654296875
    7. '\n' → logprob: -7.6904296875
    8. ' return' → logprob: -7.6904296875
    9. ' 
' → logprob: -7.6904296875
    10. 'memo' → logprob: -7.6904296875

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45316389203071594
    2. 'memo' → logprob: -1.8281638622283936
    3. '    
' → logprob: -2.4531638622283936
    4. '
' → logprob: -2.4531638622283936
    5. ' memo' → logprob: -4.328164100646973
    6. '\n' → logprob: -4.703164100646973
    7. 'return' → logprob: -5.828164100646973
    8. '```' → logprob: -5.953164100646973
    9. '  
' → logprob: -6.953164100646973
    10. ' 
' → logprob: -7.203164100646973

Token 256: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' (adapté à ' memo') → logprob: -0.006857454776763916
    2. ' memo' → logprob: -5.256857395172119
    3. '   ' → logprob: -6.506857395172119
    4. 'return' → logprob: -9.006857872009277
    5. '
' → logprob: -13.381857872009277
    6. '```' → logprob: -13.631857872009277
    7. '.memo' → logprob: -14.006857872009277
    8. 'mem' → logprob: -14.006857872009277
    9. '    
' → logprob: -14.131857872009277
    10. ' return' → logprob: -14.381857872009277

Token 257: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -5.3120038501219824e-05
    2. '[' → logprob: -9.875053405761719
    3. '```' → logprob: -14.500053405761719
    4. '[M' → logprob: -14.875053405761719
    5. '\[' → logprob: -15.125053405761719
    6. '[...]' → logprob: -15.875053405761719
    7. 'm' → logprob: -15.875053405761719
    8. '[mem' → logprob: -16.87505340576172
    9. '[
' → logprob: -16.87505340576172
    10. ' [' → logprob: -17.00005340576172

Token 258: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01210164837539196
    2. '[m' → logprob: -5.012101650238037
    3. ']=' → logprob: -5.637101650238037
    4. '=' → logprob: -6.387101650238037
    5. '[' → logprob: -9.512101173400879
    6. ' =' → logprob: -10.012101173400879
    7. '=m' → logprob: -12.887101173400879
    8. ' ]' → logprob: -13.012101173400879
    9. '   ' → logprob: -15.137101173400879
    10. 'm' → logprob: -15.387101173400879

Token 259: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00033558503491804004
    2. ' =' → logprob: -8.000335693359375
    3. '=
' → logprob: -17.000335693359375
    4. '=

' → logprob: -17.375335693359375
    5. '＝' → logprob: -18.375335693359375
    6. '=}' → logprob: -19.875335693359375
    7. '=m' → logprob: -20.375335693359375
    8. '=res' → logprob: -20.625335693359375
    9. '=`' → logprob: -20.750335693359375
    10. '.=' → logprob: -20.875335693359375

Token 260: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0010332842357456684
    2. ' res' → logprob: -6.876033306121826
    3. '1' → logprob: -14.876032829284668
    4. '(res' → logprob: -16.501033782958984
    5. 'rs' → logprob: -17.501033782958984
    6. 'r' → logprob: -17.751033782958984
    7. 'ress' → logprob: -18.126033782958984
    8. '	res' → logprob: -18.126033782958984
    9. '$res' → logprob: -18.501033782958984
    10. ' ' → logprob: -18.501033782958984

Token 261: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3676932454109192
    2. '
' → logprob: -1.9926931858062744
    3. 'return' → logprob: -1.9926931858062744
    4. ' return' → logprob: -3.7426931858062744
    5. '    
' → logprob: -5.1176934242248535
    6. '	return' → logprob: -5.9926934242248535
    7. '\n' → logprob: -6.6176934242248535
    8. ':return' → logprob: -7.9926934242248535
    9. '  
' → logprob: -8.867692947387695
    10. '' → logprob: -8.867692947387695

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10866184532642365
    2. 'return' → logprob: -2.9836618900299072
    3. ' return' → logprob: -3.1086618900299072
    4. '	return' → logprob: -5.483661651611328
    5. '
' → logprob: -5.858661651611328
    6. '    
' → logprob: -8.358661651611328
    7. '<|end|>' → logprob: -8.733661651611328
    8. '```' → logprob: -9.858661651611328
    9. ')' → logprob: -9.983661651611328
    10. ':return' → logprob: -9.983661651611328

Token 263: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.010108894668519497
    2. ' return' → logprob: -4.760108947753906
    3. '   ' → logprob: -6.510108947753906
    4. '	return' → logprob: -12.510108947753906
    5. '```' → logprob: -14.510108947753906
    6. '
' → logprob: -15.635108947753906
    7. ':return' → logprob: -16.260108947753906
    8. '    
' → logprob: -16.385108947753906
    9. ' ' → logprob: -16.385108947753906
    10. 'eturn' → logprob: -16.510108947753906

Token 264: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0007099286303855479
    2. ' res' → logprob: -7.2507100105285645
    3. '(res' → logprob: -21.625709533691406
    4. '	res' → logprob: -21.875709533691406
    5. '$res' → logprob: -22.875709533691406
    6. 'm' → logprob: -23.875709533691406
    7. 'r' → logprob: -23.875709533691406
    8. 're' → logprob: -24.125709533691406
    9. ' ' → logprob: -24.125709533691406
    10. '_res' → logprob: -24.375709533691406

Token 265: '

' (ID: 279)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4427281618118286
    2. 'print' → logprob: -1.1927281618118286
    3. 'ans' → logprob: -3.567728042602539
    4. 'res' → logprob: -4.317728042602539
    5. 'answer' → logprob: -4.817728042602539
    6. 'r' → logprob: -5.567728042602539
    7. 'val' → logprob: -8.567728042602539
    8. 'for' → logprob: -8.817728042602539
    9. 'cost' → logprob: -9.442728042602539
    10. 'v' → logprob: -9.567728042602539

Token 266: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08579441159963608
    2. 'result' → logprob: -2.585794448852539
    3. 'ans' → logprob: -5.960794448852539
    4. 'res' → logprob: -6.335794448852539
    5. 'answer' → logprob: -6.335794448852539
    6. 'r' → logprob: -7.460794448852539
    7. 'if' → logprob: -10.085794448852539
    8. 'for' → logprob: -10.710794448852539
    9. 'v' → logprob: -10.710794448852539
    10. 'p' → logprob: -11.085794448852539

Token 267: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.778266966342926
    2. ' =' → logprob: -0.778266966342926
    3. '=' → logprob: -2.5282669067382812
    4. '[' → logprob: -6.653266906738281
    5. '(m' → logprob: -8.778266906738281
    6. ',' → logprob: -9.403266906738281
    7. '_' → logprob: -9.653266906738281
    8. '()' → logprob: -9.778266906738281
    9. ' (' → logprob: -10.153266906738281
    10. ')' → logprob: -10.903266906738281

Token 268: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.008620012551546097
    2. ' dfs' → logprob: -4.758619785308838
    3. 'df' → logprob: -12.883620262145996
    4. '0' → logprob: -13.758620262145996
    5. ' ' → logprob: -15.008620262145996
    6. 'dp' → logprob: -15.133620262145996
    7. '```' → logprob: -15.758620262145996
    8. '1' → logprob: -15.883620262145996
    9. 'ds' → logprob: -15.883620262145996
    10. 'ans' → logprob: -16.50861930847168

Token 269: '(T' (ID: 7014)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003936275374144316
    2. '(N' → logprob: -6.253936290740967
    3. '(E' → logprob: -6.253936290740967
    4. '(T' → logprob: -9.503935813903809
    5. '1' → logprob: -12.378935813903809
    6. '(
' → logprob: -13.378935813903809
    7. ' (' → logprob: -13.628935813903809
    8. '(A' → logprob: -15.503935813903809
    9. 'T' → logprob: -15.628935813903809
    10. 'N' → logprob: -15.628935813903809

Token 270: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.750436007976532e-05
    2. ')
' → logprob: -10.75003719329834
    3. ' )' → logprob: -11.12503719329834
    4. ')+' → logprob: -14.75003719329834
    5. '))' → logprob: -15.50003719329834
    6. ')`' → logprob: -15.87503719329834
    7. ')#' → logprob: -16.375038146972656
    8. ')

' → logprob: -16.625038146972656
    9. '[' → logprob: -17.125038146972656
    10. '+' → logprob: -17.375038146972656

Token 271: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.048602476716041565
    2. 'if' → logprob: -3.04860258102417
    3. '```' → logprob: -11.673602104187012
    4. '
' → logprob: -12.798602104187012
    5. ' if' → logprob: -13.298602104187012
    6. ' print' → logprob: -13.423602104187012
    7. '``' → logprob: -15.548602104187012
    8. '+' → logprob: -16.173603057861328
    9. '#print' → logprob: -16.673603057861328
    10. '#' → logprob: -16.673603057861328

Token 272: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.011067510582506657
    2. 'ans' → logprob: -4.5110673904418945
    3. '(ans' → logprob: -10.886067390441895
    4. '	ans' → logprob: -14.261067390441895
    5. ' ' → logprob: -15.511067390441895
    6. ' ' → logprob: -15.886067390441895
    7. '_ans' → logprob: -17.26106834411621
    8. '  ' → logprob: -19.26106834411621
    9. 'Ans' → logprob: -19.88606834411621
    10. 'answer' → logprob: -20.51106834411621

Token 273: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.051103558391332626
    2. '<=' → logprob: -3.0511035919189453
    3. ' ==' → logprob: -6.051103591918945
    4. '==' → logprob: -8.926103591918945
    5. ' !=' → logprob: -11.176103591918945
    6. '!=' → logprob: -13.176103591918945
    7. ' <' → logprob: -13.426103591918945
    8. '[' → logprob: -13.551103591918945
    9. ' ' → logprob: -13.801103591918945
    10. ' >=' → logprob: -13.801103591918945

Token 274: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -8.41866585687967e-06
    2. ' INF' → logprob: -11.750008583068848
    3. '-INF' → logprob: -15.375008583068848
    4. '10' → logprob: -16.12500762939453
    5. '_INF' → logprob: -16.62500762939453
    6. 'IN' → logprob: -17.62500762939453
    7. 'inf' → logprob: -18.12500762939453
    8. '   ' → logprob: -18.25000762939453
    9. ' ' → logprob: -18.87500762939453
    10. '-' → logprob: -19.00000762939453

Token 275: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2519323229789734
    2. ':
' → logprob: -1.5019323825836182
    3. 'print' → logprob: -13.751932144165039
    4. ':
' → logprob: -14.251932144165039
    5. '   ' → logprob: -14.876932144165039
    6. ' :' → logprob: -15.376932144165039
    7. ' or' → logprob: -15.501932144165039
    8. ':

' → logprob: -15.501932144165039
    9. '):
' → logprob: -16.12693214416504
    10. ' :
' → logprob: -16.12693214416504

Token 276: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0016331668011844158
    2. '   ' → logprob: -7.001633167266846
    3. ' print' → logprob: -7.251633167266846
    4. '-' → logprob: -12.251632690429688
    5. '```' → logprob: -13.126632690429688
    6. '	print' → logprob: -13.251632690429688
    7. '.print' → logprob: -14.251632690429688
    8. '-print' → logprob: -14.376632690429688
    9. '
' → logprob: -14.501632690429688
    10. '``' → logprob: -14.501632690429688

Token 277: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.845798710244708e-05
    2. ' print' → logprob: -10.375038146972656
    3. '   ' → logprob: -12.500038146972656
    4. '
' → logprob: -12.875038146972656
    5. '```' → logprob: -15.125038146972656
    6. 'printf' → logprob: -15.750038146972656
    7. '-' → logprob: -16.000038146972656
    8. '``' → logprob: -16.250038146972656
    9. '
' → logprob: -16.625038146972656
    10. 'pr' → logprob: -17.375038146972656

Token 278: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.009023059159517288
    2. '(-' → logprob: -4.759023189544678
    3. '("' → logprob: -8.50902271270752
    4. '0' → logprob: -9.38402271270752
    5. '(' → logprob: -10.63402271270752
    6. '"No' → logprob: -10.75902271270752
    7. 'Impossible' → logprob: -11.13402271270752
    8. 'No' → logprob: -11.38402271270752
    9. '"' → logprob: -11.63402271270752
    10. '-im' → logprob: -12.00902271270752

Token 279: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '2' → logprob: -19.125
    3. '-' → logprob: -19.5
    4. ' ' → logprob: -20.625
    5. '```' → logprob: -20.75
    6. '１' → logprob: -21.125
    7. '9' → logprob: -21.375
    8. '3' → logprob: -21.875
    9. '۱' → logprob: -22.25
    10. '4' → logprob: -22.3125

Token 280: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014164801687002182
    2. ')
' → logprob: -4.264164924621582
    3. 'else' → logprob: -13.764164924621582
    4. ' )' → logprob: -16.139163970947266
    5. '),' → logprob: -17.139163970947266
    6. ')
' → logprob: -17.764163970947266
    7. ')`
' → logprob: -17.764163970947266
    8. ')`' → logprob: -17.764163970947266
    9. '())' → logprob: -17.889163970947266
    10. '```' → logprob: -17.889163970947266

Token 281: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -8.53050296427682e-05
    2. ' else' → logprob: -9.37508487701416
    3. 'elif' → logprob: -15.00008487701416
    4. '_else' → logprob: -17.125085830688477
    5. '```' → logprob: -17.875085830688477
    6. '#else' → logprob: -18.375085830688477
    7. 'print' → logprob: -18.875085830688477
    8. '	else' → logprob: -19.125085830688477
    9. '<|end|>' → logprob: -19.125085830688477
    10. 'elses' → logprob: -19.250085830688477

Token 282: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5501106381416321
    2. '   ' → logprob: -0.9251106381416321
    3. 'print' → logprob: -4.675110816955566
    4. ':
' → logprob: -4.925110816955566
    5. ' print' → logprob: -5.050110816955566
    6. '    ' → logprob: -6.300110816955566
    7. ' :' → logprob: -7.300110816955566
    8. '       ' → logprob: -8.050110816955566
    9. '(print' → logprob: -8.925110816955566
    10. '(' → logprob: -9.175110816955566

Token 283: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0031878093723207712
    2. ' print' → logprob: -5.753187656402588
    3. '   ' → logprob: -11.503188133239746
    4. '```' → logprob: -18.12818717956543
    5. '	print' → logprob: -19.87818717956543
    6. '.print' → logprob: -20.25318717956543
    7. '(print' → logprob: -20.50318717956543
    8. 'printf' → logprob: -21.00318717956543
    9. '  ' → logprob: -21.37818717956543
    10. ' ' → logprob: -21.62818717956543

Token 284: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.842555426876061e-06
    2. ' print' → logprob: -12.250004768371582
    3. 'pr' → logprob: -19.2500057220459
    4. '   ' → logprob: -19.8750057220459
    5. '```' → logprob: -20.0000057220459
    6. 'printf' → logprob: -21.3750057220459
    7. 'prin' → logprob: -21.7500057220459
    8. '.print' → logprob: -22.7500057220459
    9. 'prit' → logprob: -22.8750057220459
    10. '(print' → logprob: -23.8750057220459

Token 285: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.005235648714005947
    2. 'ans' → logprob: -5.25523567199707
    3. ' ans' → logprob: -13.25523567199707
    4. '(' → logprob: -17.13023567199707
    5. '	ans' → logprob: -17.88023567199707
    6. '_ans' → logprob: -18.88023567199707
    7. 'ANS' → logprob: -20.25523567199707
    8. '(answer' → logprob: -20.25523567199707
    9. ' (' → logprob: -20.50523567199707
    10. 'Ans' → logprob: -20.88023567199707

Token 286: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ' )' → logprob: -13.00000286102295
    3. '+' → logprob: -15.37500286102295
    4. ')
' → logprob: -15.62500286102295
    5. '())' → logprob: -16.000003814697266
    6. '()' → logprob: -16.375003814697266
    7. '))' → logprob: -16.625003814697266
    8. ')`' → logprob: -16.750003814697266
    9. '```' → logprob: -17.750003814697266
    10. '`)' → logprob: -17.875003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 284
Tokens correctement prédits (1ère position, stricte): 104
Tokens correctement prédits (1ère position, avec adaptation): 120
Tokens correctement prédits (top 10): 245
Précision stricte (1ère position): 36.62%
Précision adaptée (1ère position): 42.25%
Précision (top 10): 86.27%
================================================================================
