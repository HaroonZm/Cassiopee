================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:18:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    a = list(map(int, input().split()))
    ohajiki = 32
    idx = 0
    while ohajiki > 0:
        # 一郎君の番
        take_ichiro = (ohajiki - 1) % 5
        if take_ichiro == 0:
            take_ichiro = 1
        ohajiki -= take_ichiro
        print(ohajiki)
        if ohajiki == 0:
            break
        # 次郎君の番
        take_jirou = a[idx]
        if take_jirou > ohajiki:
            take_jirou = ohajiki
        ohajiki -= take_jirou
        print(ohajiki)
        idx = (idx + 1) % n
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5957265496253967
    2. '\' → logprob: -2.220726490020752
    3. ' ' → logprob: -2.470726490020752
    4. '```' → logprob: -2.845726490020752
    5. '    ' → logprob: -2.970726490020752
    6. '    
' → logprob: -3.220726490020752
    7. '\n' → logprob: -3.720726490020752
    8. ' 
' → logprob: -3.845726490020752
    9. '<|end|>' → logprob: -3.970726490020752
    10. '  
' → logprob: -5.095726490020752

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19517217576503754
    2. '    ' → logprob: -2.695172071456909
    3. ' ' → logprob: -3.070172071456909
    4. '```' → logprob: -3.195172071456909
    5. '       ' → logprob: -5.195172309875488
    6. '    
' → logprob: -5.695172309875488
    7. ' pass' → logprob: -5.945172309875488
    8. '  ' → logprob: -6.445172309875488
    9. 'pass' → logprob: -6.445172309875488
    10. ' ```' → logprob: -6.945172309875488

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6069875359535217
    2. 'u' → logprob: -1.731987476348877
    3. '=' → logprob: -2.481987476348877
    4. 'o' → logprob: -2.481987476348877
    5. '   ' → logprob: -3.356987476348877
    6. 'e' → logprob: -4.606987476348877
    7. '_' → logprob: -4.731987476348877
    8. ' =' → logprob: -4.731987476348877
    9. '+' → logprob: -4.856987476348877
    10. '%' → logprob: -5.106987476348877

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.09271397441625595
    2. ' input' → logprob: -2.5927140712738037
    3. 'int' → logprob: -4.592713832855225
    4. 'input' → logprob: -5.717713832855225
    5. ' n' → logprob: -8.592714309692383
    6. ' ' → logprob: -9.717714309692383
    7. ' randint' → logprob: -10.967714309692383
    8. 'n' → logprob: -11.717714309692383
    9. ' eval' → logprob: -12.217714309692383
    10. ' i' → logprob: -12.217714309692383

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012691522017121315
    2. '(input' → logprob: -4.387691497802734
    3. ' (' → logprob: -10.012691497802734
    4. 'input' → logprob: -10.137691497802734
    5. '()' → logprob: -10.262691497802734
    6. '(n' → logprob: -10.512691497802734
    7. '(
' → logprob: -11.512691497802734
    8. ' ' → logprob: -12.262691497802734
    9. ')' → logprob: -12.512691497802734
    10. '  ' → logprob: -13.137691497802734

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38052013516426086
    2. ')' → logprob: -1.8805201053619385
    3. '()' → logprob: -2.0055201053619385
    4. '())' → logprob: -3.7555201053619385
    5. '))' → logprob: -5.755520343780518
    6. '()))' → logprob: -7.005520343780518
    7. '('' → logprob: -7.880520343780518
    8. '(
' → logprob: -7.880520343780518
    9. ' ' → logprob: -8.63051986694336
    10. '(""))' → logprob: -8.75551986694336

Token 9: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39164337515830994
    2. ' if' → logprob: -2.0166432857513428
    3. '   ' → logprob: -2.6416432857513428
    4. ')' → logprob: -3.6416432857513428
    5. ':' → logprob: -3.6416432857513428
    6. '  ' → logprob: -3.8916432857513428
    7. '<|end|>' → logprob: -4.266643524169922
    8. 'if' → logprob: -4.641643524169922
    9. '    ' → logprob: -5.391643524169922
    10. ',' → logprob: -5.641643524169922

Token 10: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1099934577941895
    2. ' ' → logprob: -1.3599934577941895
    3. '<|end|>' → logprob: -1.8599934577941895
    4. '   ' → logprob: -2.6099934577941895
    5. ':' → logprob: -2.8599934577941895
    6. '  ' → logprob: -3.2349934577941895
    7. ')' → logprob: -3.6099934577941895
    8. 'if' (adapté à ' if') → logprob: -3.9849934577941895
    9. '    ' → logprob: -4.2349934577941895
    10. '```' → logprob: -5.4849934577941895

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0034862698521465063
    2. ' ' → logprob: -6.003486156463623
    3. ' not' → logprob: -7.378486156463623
    4. 'n' → logprob: -7.878486156463623
    5. ' ' → logprob: -12.378486633300781
    6. 'not' → logprob: -13.628486633300781
    7. '  ' → logprob: -15.003486633300781
    8. ' (' → logprob: -15.753486633300781
    9. '(n' → logprob: -15.878486633300781
    10. '<|end|>' → logprob: -16.12848663330078

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6851745247840881
    2. ' >' → logprob: -1.0601744651794434
    3. ' <=' → logprob: -2.5601744651794434
    4. ' <' → logprob: -3.5601744651794434
    5. ' ' → logprob: -4.310174465179443
    6. '==' → logprob: -4.310174465179443
    7. '>' → logprob: -4.435174465179443
    8. ' >=' → logprob: -6.435174465179443
    9. '  ' → logprob: -7.560174465179443
    10. ')' → logprob: -7.560174465179443

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10021023452281952
    2. '0' → logprob: -2.350210189819336
    3. ' ' → logprob: -13.975210189819336
    4. '1' → logprob: -14.100210189819336
    5. '32' → logprob: -15.225210189819336
    6. ' -' → logprob: -15.912710189819336
    7. '  ' → logprob: -15.975210189819336
    8. ' a' → logprob: -16.225210189819336
    9. ' EOF' → logprob: -16.225210189819336
    10. '4' → logprob: -16.225210189819336

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022028323728591204
    2. ' ' → logprob: -6.127202987670898
    3. '-' → logprob: -11.252202987670898
    4. '1' → logprob: -13.502202987670898
    5. ' -' → logprob: -13.627202987670898
    6. '42' → logprob: -14.252202987670898
    7. '   ' → logprob: -14.377202987670898
    8. '  ' → logprob: -15.502202987670898
    9. '```' → logprob: -15.877202987670898
    10. '    ' → logprob: -16.0022029876709

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.755678961984813e-05
    2. ':
' → logprob: -9.875077247619629
    3. ' :' → logprob: -11.625077247619629
    4. '   ' → logprob: -12.125077247619629
    5. ':return' → logprob: -12.500077247619629
    6. '       ' → logprob: -13.000077247619629
    7. ':\' → logprob: -13.125077247619629
    8. '):' → logprob: -13.375077247619629
    9. '    ' → logprob: -14.375077247619629
    10. ':**' → logprob: -15.250077247619629

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004328164737671614
    2. '   ' → logprob: -6.00432825088501
    3. ' break' → logprob: -7.12932825088501
    4. '\n' → logprob: -7.50432825088501
    5. '    ' → logprob: -8.504327774047852
    6. ':' → logprob: -10.004327774047852
    7. ' \' → logprob: -10.129327774047852
    8. '\t' → logprob: -10.254327774047852
    9. '\' → logprob: -10.504327774047852
    10. ' ' → logprob: -10.629327774047852

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.028081431984901428
    2. '       ' → logprob: -4.02808141708374
    3. 'break' (adapté à ' break') → logprob: -4.65308141708374
    4. '   ' → logprob: -8.653081893920898
    5. '	break' → logprob: -9.403081893920898
    6. '```' → logprob: -10.153081893920898
    7. '_break' → logprob: -11.028081893920898
    8. '        
' → logprob: -11.903081893920898
    9. '\n' → logprob: -12.028081893920898
    10. '    ' → logprob: -12.278081893920898

Token 18: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.778116762638092
    2. '   ' → logprob: -1.2781167030334473
    3. ':' → logprob: -1.5281167030334473
    4. '    
' → logprob: -4.153116703033447
    5. '\' → logprob: -4.653116703033447
    6. '```' → logprob: -5.528116703033447
    7. '\r' → logprob: -5.528116703033447
    8. '
' → logprob: -6.403116703033447
    9. '<|end|>' → logprob: -6.403116703033447
    10. 'n' → logprob: -6.528116703033447

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7498542666435242
    2. '\n' → logprob: -1.624854326248169
    3. '<|end|>' → logprob: -1.624854326248169
    4. '    
' → logprob: -3.249854326248169
    5. '\' → logprob: -3.874854326248169
    6. '```' → logprob: -3.999854326248169
    7. '
' → logprob: -4.12485408782959
    8. '#' → logprob: -4.24985408782959
    9. ':' → logprob: -5.12485408782959
    10. ')' → logprob: -5.87485408782959

Token 20: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3405855596065521
    2. ' ' → logprob: -2.590585470199585
    3. '<|end|>' → logprob: -2.590585470199585
    4. '\n' → logprob: -3.590585470199585
    5. ')' → logprob: -3.840585470199585
    6. 'n' → logprob: -4.215585708618164
    7. '    ' → logprob: -4.340585708618164
    8. '\' → logprob: -4.590585708618164
    9. 'print' → logprob: -4.715585708618164
    10. ':' → logprob: -5.090585708618164

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9828966856002808
    2. 'rr' → logprob: -1.1078966856002808
    3. ',' → logprob: -2.7328968048095703
    4. 'rray' → logprob: -2.8578968048095703
    5. ' ' → logprob: -3.1078968048095703
    6. 'r' → logprob: -3.2328968048095703
    7. '=' → logprob: -3.4828968048095703
    8. '[' → logprob: -4.10789680480957
    9. ' +=' → logprob: -4.10789680480957
    10. '[i' → logprob: -5.48289680480957

Token 22: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.2154563069343567
    2. ' [' → logprob: -2.840456247329712
    3. '[]' → logprob: -3.090456247329712
    4. ' n' → logprob: -3.465456247329712
    5. ' list' → logprob: -3.465456247329712
    6. 'n' → logprob: -4.340456485748291
    7. '[' → logprob: -5.840456485748291
    8. ' ' → logprob: -5.965456485748291
    9. 'list' → logprob: -6.090456485748291
    10. '[n' → logprob: -6.215456485748291

Token 23: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0039039766415953636
    2. '(range' → logprob: -6.128903865814209
    3. '(a' → logprob: -6.503903865814209
    4. '(input' → logprob: -9.503904342651367
    5. '()' → logprob: -10.253904342651367
    6. '(int' → logprob: -10.753904342651367
    7. '(map' → logprob: -11.003904342651367
    8. '(
' → logprob: -11.878904342651367
    9. '(eval' → logprob: -12.003904342651367
    10. '(n' → logprob: -12.128904342651367

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.023470476269721985
    2. '(' → logprob: -3.773470401763916
    3. 'int' → logprob: -8.773470878601074
    4. '(str' → logprob: -10.773470878601074
    5. '(lambda' → logprob: -11.273470878601074
    6. ')' → logprob: -11.523470878601074
    7. '(
' → logprob: -11.523470878601074
    8. '<int' → logprob: -11.648470878601074
    9. '=int' → logprob: -13.148470878601074
    10. '(input' → logprob: -13.773470878601074

Token 25: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04190522059798241
    2. '(' → logprob: -3.291905164718628
    3. ',input' → logprob: -6.166905403137207
    4. 'input' → logprob: -6.916905403137207
    5. ')' → logprob: -7.666905403137207
    6. '(
' → logprob: -9.416905403137207
    7. ',' → logprob: -9.791905403137207
    8. '=input' → logprob: -10.291905403137207
    9. ' input' → logprob: -10.416905403137207
    10. '<|end|>' → logprob: -10.791905403137207

Token 26: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3485398590564728
    2. 'input' → logprob: -1.2235398292541504
    3. '(input' → logprob: -9.848540306091309
    4. ')' → logprob: -10.473540306091309
    5. ',input' → logprob: -11.848540306091309
    6. ' )' → logprob: -12.848540306091309
    7. '=input' → logprob: -13.473540306091309
    8. '	input' → logprob: -13.598540306091309
    9. '))' → logprob: -14.723540306091309
    10. '[input' → logprob: -14.973540306091309

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.02075103484094143
    2. '()' → logprob: -4.145750999450684
    3. '(' → logprob: -5.645750999450684
    4. '()))' → logprob: -7.395750999450684
    5. '())' → logprob: -7.770750999450684
    6. '(()' → logprob: -10.270750999450684
    7. '())))' → logprob: -10.770750999450684
    8. '()));' → logprob: -10.770750999450684
    9. '('' → logprob: -11.770750999450684
    10. '()
' → logprob: -11.770750999450684

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004517646157182753
    2. 'strip' → logprob: -7.750451564788818
    3. 'rstrip' → logprob: -11.000452041625977
    4. ' split' → logprob: -12.500452041625977
    5. '(split' → logprob: -14.625452041625977
    6. 'spl' → logprob: -15.375452041625977
    7. 's' → logprob: -17.375452041625977
    8. ')' → logprob: -17.500452041625977
    9. 'sp' → logprob: -18.125452041625977
    10. ' strip' → logprob: -18.375452041625977

Token 29: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.15084542334079742
    2. '))' → logprob: -2.775845527648926
    3. '())' → logprob: -2.775845527648926
    4. '()' → logprob: -5.150845527648926
    5. '(' → logprob: -5.525845527648926
    6. ')' → logprob: -5.525845527648926
    7. '('' → logprob: -7.525845527648926
    8. '())))' → logprob: -8.025845527648926
    9. '()))
' → logprob: -8.150845527648926
    10. ''))' → logprob: -9.025845527648926

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6413094401359558
    2. '[' → logprob: -1.1413094997406006
    3. ')' → logprob: -2.8913094997406006
    4. ' ' → logprob: -3.8913094997406006
    5. '    
' → logprob: -4.3913092613220215
    6. '\' → logprob: -4.6413092613220215
    7. ' 
' → logprob: -5.2663092613220215
    8. '```' → logprob: -5.2663092613220215
    9. ':' → logprob: -5.3913092613220215
    10. '.' → logprob: -5.3913092613220215

Token 31: ' oh' (ID: 8718)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5258050560951233
    2. 's' → logprob: -1.9008049964904785
    3. 'c' → logprob: -2.9008049964904785
    4. 'r' → logprob: -3.6508049964904785
    5. 'sum' → logprob: -3.6508049964904785
    6. 'n' → logprob: -4.0258049964904785
    7. '[' → logprob: -4.2758049964904785
    8. ' ' → logprob: -4.2758049964904785
    9. 'count' → logprob: -4.2758049964904785
    10. 'd' → logprob: -4.6508049964904785

Token 32: 'aj' (ID: 1255)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1429564952850342
    2. '[' → logprob: -1.2679564952850342
    3. '=' → logprob: -2.392956495285034
    4. '.' → logprob: -2.642956495285034
    5. ' =' → logprob: -2.642956495285034
    6. '(' → logprob: -3.142956495285034
    7. ',' → logprob: -3.142956495285034
    8. ' ' → logprob: -3.642956495285034
    9. 'a' → logprob: -4.392956733703613
    10. ')' → logprob: -4.892956733703613

Token 33: 'iki' (ID: 5368)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.7715305089950562
    2. 'a' → logprob: -1.0215305089950562
    3. 'i' → logprob: -2.6465306282043457
    4. 'b' → logprob: -3.1465306282043457
    5. 'n' → logprob: -4.521530628204346
    6. 'm' → logprob: -4.771530628204346
    7. 'e' → logprob: -4.771530628204346
    8. 'l' → logprob: -5.271530628204346
    9. 'k' → logprob: -5.396530628204346
    10. 's' → logprob: -5.521530628204346

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7529075145721436
    2. '=' → logprob: -1.8779075145721436
    3. '_' → logprob: -2.2529075145721436
    4. '_count' → logprob: -2.5029075145721436
    5. 's' → logprob: -2.8779075145721436
    6. '[' → logprob: -3.1279075145721436
    7. '.' → logprob: -3.3779075145721436
    8. '_counts' → logprob: -3.6279075145721436
    9. ' ' → logprob: -5.252907752990723
    10. '=[]' → logprob: -5.627907752990723

Token 35: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.057302474975586
    2. '0' → logprob: -1.557302474975586
    3. '[' → logprob: -1.807302474975586
    4. 'a' → logprob: -1.807302474975586
    5. 'sum' → logprob: -3.307302474975586
    6. '[a' → logprob: -3.807302474975586
    7. 'set' → logprob: -4.057302474975586
    8. '{}' → logprob: -4.557302474975586
    9. 'sorted' → logprob: -4.807302474975586
    10. '[len' → logprob: -5.432302474975586

Token 36: '32' (ID: 1398)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6971142888069153
    2. '[' → logprob: -2.3221142292022705
    3. '[]' → logprob: -2.3221142292022705
    4. '0' → logprob: -2.4471142292022705
    5. '[a' → logprob: -2.5721142292022705
    6. 'sum' → logprob: -3.0721142292022705
    7. 'sorted' → logprob: -3.9471142292022705
    8. 'max' → logprob: -4.19711446762085
    9. 'len' → logprob: -4.19711446762085
    10. 'set' → logprob: -4.32211446762085

Token 37: '
' (ID: 198)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3697915077209473
    2. ' ' → logprob: -1.3697915077209473
    3. '*' → logprob: -1.4947915077209473
    4. ' *' → logprob: -2.9947915077209473
    5. '-' → logprob: -3.1197915077209473
    6. '    ' → logprob: -3.2447915077209473
    7. '   ' → logprob: -3.8697915077209473
    8. '<|end|>' → logprob: -3.8697915077209473
    9. ')' → logprob: -3.9947915077209473
    10. '+' → logprob: -4.244791507720947

Token 38: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' idx' (ID: 14016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5829891562461853
    2. ' for' → logprob: -1.58298921585083
    3. '   ' → logprob: -2.70798921585083
    4. 'count' → logprob: -3.83298921585083
    5. 'max' → logprob: -3.83298921585083
    6. '=' → logprob: -4.08298921585083
    7. ' ' → logprob: -4.20798921585083
    8. 'while' → logprob: -4.45798921585083
    9. '    ' → logprob: -4.58298921585083
    10. 'a' → logprob: -4.95798921585083

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029034892097115517
    2. '=' → logprob: -3.7790348529815674
    3. '_' → logprob: -5.7790350914001465
    4. ' ' → logprob: -6.0290350914001465
    5. 's' → logprob: -9.029034614562988
    6. ' +=' → logprob: -9.779034614562988
    7. ',' → logprob: -11.154034614562988
    8. '0' → logprob: -11.404034614562988
    9. 'x' → logprob: -11.904034614562988
    10. 'ex' → logprob: -11.904034614562988

Token 41: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2850179672241211
    2. ' ' → logprob: -1.410017967224121
    3. 'a' → logprob: -6.660017967224121
    4. '-' → logprob: -7.535017967224121
    5. ' -' → logprob: -7.535017967224121
    6. ' a' → logprob: -7.910017967224121
    7. '[' → logprob: -8.160017967224121
    8. '1' → logprob: -8.285017967224121
    9. ' [' → logprob: -8.785017967224121
    10. 'len' → logprob: -9.535017967224121

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011349361389875412
    2. '-' → logprob: -5.261349201202393
    3. 'a' → logprob: -5.511349201202393
    4. 'oh' → logprob: -7.636349201202393
    5. 'len' → logprob: -7.761349201202393
    6. '[' → logprob: -8.26134967803955
    7. 'n' → logprob: -8.63634967803955
    8. '1' → logprob: -8.63634967803955
    9. '32' → logprob: -8.63634967803955
    10. 'max' → logprob: -10.01134967803955

Token 43: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36017486453056335
    2. '   ' → logprob: -1.9851748943328857
    3. '<|end|>' → logprob: -2.7351748943328857
    4. ' while' → logprob: -3.2351748943328857
    5. '    ' → logprob: -4.235174655914307
    6. ' 
' → logprob: -4.735174655914307
    7. '  ' → logprob: -4.860174655914307
    8. 'while' → logprob: -5.110174655914307
    9. '+' → logprob: -5.610174655914307
    10. '     
' → logprob: -5.735174655914307

Token 44: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7992793321609497
    2. '<|end|>' → logprob: -1.0492793321609497
    3. '   ' → logprob: -2.17427921295166
    4. ' 
' → logprob: -3.17427921295166
    5. ' while' → logprob: -4.42427921295166
    6. '<|end|>' → logprob: -5.17427921295166
    7. '  ' → logprob: -5.42427921295166
    8. '\n' → logprob: -5.67427921295166
    9. '    ' → logprob: -5.79927921295166
    10. 'while' → logprob: -5.79927921295166

Token 45: ' while' (ID: 2049)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17656856775283813
    2. '   ' → logprob: -3.1765685081481934
    3. '<|end|>' → logprob: -3.3015685081481934
    4. ' while' → logprob: -4.051568508148193
    5. 'while' (adapté à ' while') → logprob: -4.551568508148193
    6. '    ' → logprob: -4.551568508148193
    7. '+' → logprob: -4.801568508148193
    8. 'for' → logprob: -5.176568508148193
    9. ' for' → logprob: -5.676568508148193
    10. '\n' → logprob: -5.676568508148193

Token 46: ' oh' (ID: 8718)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.004072939977049828
    2. 'idx' → logprob: -6.004073143005371
    3. ' oh' → logprob: -7.004073143005371
    4. ' a' → logprob: -8.129073143005371
    5. ' n' → logprob: -8.129073143005371
    6. ' ' → logprob: -10.629073143005371
    7. ' len' → logprob: -10.879073143005371
    8. 'n' → logprob: -11.504073143005371
    9. '	idx' → logprob: -11.504073143005371
    10. ' abs' → logprob: -12.004073143005371

Token 47: 'aj' (ID: 1255)
  Prédit: 'aj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.004715514834970236
    2. 'a' → logprob: -5.379715442657471
    3. ' a' → logprob: -10.754715919494629
    4. ' ' → logprob: -11.004715919494629
    5. ' >' → logprob: -11.504715919494629
    6. '   ' → logprob: -11.504715919494629
    7. ' aj' → logprob: -12.004715919494629
    8. '>' → logprob: -12.754715919494629
    9. '_' → logprob: -12.754715919494629
    10. 'aji' → logprob: -12.879715919494629

Token 48: 'iki' (ID: 5368)
  Prédit: 'iki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iki' → logprob: -1.3306015716807451e-05
    2. 'ik' → logprob: -11.37501335144043
    3. 'i' → logprob: -15.12501335144043
    4. 'ики' → logprob: -15.62501335144043
    5. 'iku' → logprob: -15.75001335144043
    6. 'uki' → logprob: -15.87501335144043
    7. 'Iki' → logprob: -16.00001335144043
    8. '   ' → logprob: -16.12501335144043
    9. '```' → logprob: -16.12501335144043
    10. 'iriki' → logprob: -16.25001335144043

Token 49: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.16724571585655212
    2. '>' → logprob: -2.042245626449585
    3. ' <' → logprob: -4.417245864868164
    4. ' >=' → logprob: -4.667245864868164
    5. '>=' → logprob: -6.792245864868164
    6. '<' → logprob: -7.292245864868164
    7. ' <=' → logprob: -7.667245864868164
    8. ' ' → logprob: -9.417245864868164
    9. ' -' → logprob: -9.542245864868164
    10. '-' → logprob: -9.542245864868164

Token 50: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5773603916168213
    2. '0' → logprob: -0.8273603916168213
    3. 'a' → logprob: -7.452360153198242
    4. ' a' → logprob: -7.702360153198242
    5. '1' → logprob: -8.452360153198242
    6. '>' → logprob: -9.952360153198242
    7. 'idx' → logprob: -11.327360153198242
    8. ' idx' → logprob: -11.452360153198242
    9. '10' → logprob: -11.577360153198242
    10. '=' → logprob: -11.827360153198242

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007509264163672924
    2. 'a' → logprob: -5.132509231567383
    3. '1' → logprob: -6.882509231567383
    4. ' ' → logprob: -7.632509231567383
    5. '10' → logprob: -11.882509231567383
    6. '32' → logprob: -12.007509231567383
    7. '2' → logprob: -12.132509231567383
    8. '16' → logprob: -12.132509231567383
    9. '5' → logprob: -12.257509231567383
    10. 'n' → logprob: -12.757509231567383

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.050208885222673416
    2. ' and' → logprob: -3.175208806991577
    3. '   ' → logprob: -5.300209045410156
    4. ' :' → logprob: -7.300209045410156
    5. 'and' → logprob: -7.425209045410156
    6. '       ' → logprob: -8.300209045410156
    7. ':
' → logprob: -8.425209045410156
    8. '    ' → logprob: -8.675209045410156
    9. '<|end|>' → logprob: -9.425209045410156
    10. ' ' → logprob: -9.925209045410156

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.064682960510254
    2. '    ' → logprob: -1.439682960510254
    3. '   ' → logprob: -1.689682960510254
    4. ' ' → logprob: -2.689682960510254
    5. '<|end|>' → logprob: -2.939682960510254
    6. ' if' → logprob: -3.439682960510254
    7. '[' → logprob: -4.314682960510254
    8. '    
' → logprob: -4.564682960510254
    9. ':' → logprob: -4.689682960510254
    10. ' 
' → logprob: -4.814682960510254

Token 54: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.37229472398757935
    2. ' idx' → logprob: -2.6222946643829346
    3. ' oh' → logprob: -3.2472946643829346
    4. 'if' → logprob: -3.3722946643829346
    5. '    ' → logprob: -3.4972946643829346
    6. 'idx' → logprob: -3.6222946643829346
    7. '   ' → logprob: -3.6222946643829346
    8. 'a' → logprob: -3.8722946643829346
    9. ' a' → logprob: -4.247294902801514
    10. ' ' → logprob: -4.622294902801514

Token 55: ' 一' (ID: 16304)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0394920110702515
    2. ' if' → logprob: -1.4144920110702515
    3. '    ' → logprob: -2.039492130279541
    4. ' idx' → logprob: -2.289492130279541
    5. ' oh' → logprob: -2.539492130279541
    6. 'a' → logprob: -3.289492130279541
    7. ' ' → logprob: -4.164492130279541
    8. '   ' → logprob: -4.414492130279541
    9. 'idx' → logprob: -5.039492130279541
    10. 'if' → logprob: -5.164492130279541

Token 56: '郎' (ID: 72507)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8041279315948486
    2. ' ' → logprob: -2.0541279315948486
    3. '   ' → logprob: -2.5541279315948486
    4. 'nd' → logprob: -2.6791279315948486
    5. ' =' → logprob: -2.8041279315948486
    6. ']' → logprob: -3.1791279315948486
    7. 'つ' → logprob: -3.3041279315948486
    8. '0' → logprob: -3.4291279315948486
    9. 'n' → logprob: -3.6791279315948486
    10. '+' → logprob: -3.6791279315948486

Token 57: '君' (ID: 82180)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.268029808998108
    2. 'if' → logprob: -2.0180296897888184
    3. ' =' → logprob: -2.2680296897888184
    4. '   ' → logprob: -2.2680296897888184
    5. '+=' → logprob: -2.2680296897888184
    6. ' if' → logprob: -3.0180296897888184
    7. '=' → logprob: -3.1430296897888184
    8. '       ' → logprob: -3.6430296897888184
    9. 'の' → logprob: -4.018029689788818
    10. '+' → logprob: -4.268029689788818

Token 58: 'の' (ID: 3385)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.8945456147193909
    2. ' +=' → logprob: -1.519545555114746
    3. '=' → logprob: -2.394545555114746
    4. '   ' → logprob: -2.894545555114746
    5. 'if' → logprob: -2.894545555114746
    6. ' =' → logprob: -2.894545555114746
    7. '       ' → logprob: -3.894545555114746
    8. ' if' → logprob: -3.894545555114746
    9. 'a' → logprob: -4.394545555114746
    10. '+' → logprob: -4.519545555114746

Token 59: '番' (ID: 30357)
  Prédit: 'oh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oh' → logprob: -1.0352610349655151
    2. 'if' → logprob: -1.2852610349655151
    3. 'move' → logprob: -2.5352611541748047
    4. 'index' → logprob: -3.5352611541748047
    5. 'idx' → logprob: -3.5352611541748047
    6. '動' → logprob: -3.6602611541748047
    7. '手' → logprob: -3.6602611541748047
    8. '移' → logprob: -3.6602611541748047
    9. 'a' → logprob: -4.285261154174805
    10. 'turn' → logprob: -4.535261154174805

Token 60: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0288745164871216
    2. '       ' → logprob: -1.6538745164871216
    3. '    ' → logprob: -2.153874397277832
    4. ' ' → logprob: -2.528874397277832
    5. '   ' → logprob: -2.903874397277832
    6. '<|end|>' → logprob: -2.903874397277832
    7. '        ' → logprob: -3.528874397277832
    8. '
' → logprob: -3.653874397277832
    9. '<|end|>' → logprob: -4.028874397277832
    10. 'if' → logprob: -4.278874397277832

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3391779065132141
    2. ' if' → logprob: -1.8391778469085693
    3. 'if' → logprob: -2.5891778469085693
    4. '        ' → logprob: -3.7141778469085693
    5. '    ' → logprob: -4.589178085327148
    6. '        
' → logprob: -5.214178085327148
    7. ' ' → logprob: -5.589178085327148
    8. '   ' → logprob: -5.839178085327148
    9. ' for' → logprob: -6.214178085327148
    10. 'for' → logprob: -7.214178085327148

Token 62: ' take' (ID: 2304)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.46341753005981445
    2. ' if' → logprob: -1.8384175300598145
    3. 'idx' → logprob: -3.3384175300598145
    4. 'for' → logprob: -3.5884175300598145
    5. 'oh' → logprob: -3.7134175300598145
    6. 'a' → logprob: -3.8384175300598145
    7. '       ' → logprob: -3.9634175300598145
    8. '    ' → logprob: -4.0884175300598145
    9. 'while' → logprob: -4.3384175300598145
    10. ' for' → logprob: -4.3384175300598145

Token 63: '_' (ID: 62)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023619867861270905
    2. '=' → logprob: -3.7736198902130127
    3. ' ' → logprob: -8.523619651794434
    4. '_' → logprob: -9.023619651794434
    5. '   ' → logprob: -11.023619651794434
    6. '=int' → logprob: -11.523619651794434
    7. '_amount' → logprob: -12.898619651794434
    8. '＝' → logprob: -12.898619651794434
    9. ',' → logprob: -13.023619651794434
    10. '    ' → logprob: -13.023619651794434

Token 64: 'ich' (ID: 703)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5248596668243408
    2. ' =' → logprob: -0.8998596668243408
    3. '1' → logprob: -7.774859428405762
    4. ' ' → logprob: -8.024859428405762
    5. 'count' → logprob: -8.149859428405762
    6. '=int' → logprob: -8.774859428405762
    7. 'num' → logprob: -9.524859428405762
    8. '   ' → logprob: -9.524859428405762
    9. 'amount' → logprob: -10.024859428405762
    10. 'idx' → logprob: -10.399859428405762

Token 65: 'iro' (ID: 4509)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0494674444198608
    2. ' =' → logprob: -2.0494675636291504
    3. 'iji' → logprob: -2.1744675636291504
    4. 'ir' → logprob: -2.2994675636291504
    5. 'iro' → logprob: -2.5494675636291504
    6. 'igo' → logprob: -3.0494675636291504
    7. 'ijo' → logprob: -3.1744675636291504
    8. 'ij' → logprob: -3.7994675636291504
    9. 'ik' → logprob: -3.7994675636291504
    10. 'iju' → logprob: -4.54946756362915

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.034152738749980927
    2. '=' → logprob: -3.4091527462005615
    3. ' ' → logprob: -8.03415298461914
    4. ' +=' → logprob: -9.40915298461914
    5. '   ' → logprob: -10.15915298461914
    6. '+=' → logprob: -11.53415298461914
    7. '  ' → logprob: -11.78415298461914
    8. '_' → logprob: -12.03415298461914
    9. '    ' → logprob: -12.15915298461914
    10. ')' → logprob: -12.28415298461914

Token 67: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5034891366958618
    2. 'min' → logprob: -1.1284891366958618
    3. ' min' → logprob: -3.3784890174865723
    4. '1' → logprob: -4.253489017486572
    5. ' a' → logprob: -4.253489017486572
    6. 'oh' → logprob: -5.503489017486572
    7. '0' → logprob: -6.253489017486572
    8. 'max' → logprob: -6.503489017486572
    9. '2' → logprob: -7.753489017486572
    10. ' ' → logprob: -8.12848949432373

Token 68: 'oh' (ID: 2308)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2996487617492676
    2. 'oh' → logprob: -2.1746487617492676
    3. 'min' → logprob: -2.5496487617492676
    4. ' min' → logprob: -3.7996487617492676
    5. ' a' → logprob: -4.299648761749268
    6. 'n' → logprob: -5.049648761749268
    7. ' oh' → logprob: -5.549648761749268
    8. '1' → logprob: -5.674648761749268
    9. 'idx' → logprob: -5.799648761749268
    10. 'max' → logprob: -6.049648761749268

Token 69: 'aj' (ID: 1255)
  Prédit: 'aj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.00025311444187536836
    2. 'a' → logprob: -9.125252723693848
    3. ' ' → logprob: -9.750252723693848
    4. ' aj' → logprob: -10.500252723693848
    5. '   ' → logprob: -11.375252723693848
    6. 'あ' → logprob: -11.500252723693848
    7. 'j' → logprob: -11.750252723693848
    8. 'aji' → logprob: -12.375252723693848
    9. ' -' → logprob: -12.625252723693848
    10. ')' → logprob: -13.125252723693848

Token 70: 'iki' (ID: 5368)
  Prédit: 'iki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iki' → logprob: -5.796184723294573e-06
    2. 'ik' → logprob: -12.875005722045898
    3. '   ' → logprob: -13.875005722045898
    4. 'IKI' → logprob: -14.875005722045898
    5. '```' → logprob: -15.000005722045898
    6. 'i' → logprob: -15.625005722045898
    7. 'ki' → logprob: -15.750005722045898
    8. 'uki' → logprob: -16.0000057220459
    9. '  ' → logprob: -16.2500057220459
    10. 'oki' → logprob: -16.3750057220459

Token 71: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4361060857772827
    2. ' //' → logprob: -2.0611062049865723
    3. '+' → logprob: -2.1861062049865723
    4. ' -' → logprob: -2.8111062049865723
    5. ' ' → logprob: -3.9361062049865723
    6. ' if' → logprob: -4.436106204986572
    7. '-' → logprob: -4.811106204986572
    8. ' %' → logprob: -5.561106204986572
    9. ')' → logprob: -5.811106204986572
    10. '%' → logprob: -6.561106204986572

Token 72: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026264995336532593
    2. ' ' → logprob: -3.7762649059295654
    3. '7' → logprob: -7.7762651443481445
    4. ' idx' → logprob: -7.7762651443481445
    5. 'idx' → logprob: -7.9012651443481445
    6. ' (' → logprob: -7.9012651443481445
    7. '2' → logprob: -8.401265144348145
    8. '9' → logprob: -8.526265144348145
    9. '3' → logprob: -8.776265144348145
    10. ' a' → logprob: -9.026265144348145

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02620113268494606
    2. 'a' → logprob: -3.9012012481689453
    3. 'idx' → logprob: -6.901201248168945
    4. 'max' → logprob: -7.151201248168945
    5. ' ' → logprob: -7.401201248168945
    6. '2' → logprob: -7.401201248168945
    7. '(' → logprob: -8.026201248168945
    8. 'min' → logprob: -8.151201248168945
    9. '3' → logprob: -8.151201248168945
    10. '(a' → logprob: -8.401201248168945

Token 74: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006968025118112564
    2. ')//' → logprob: -5.006968021392822
    3. ')%' → logprob: -8.63196849822998
    4. ' )' → logprob: -9.88196849822998
    5. '//' → logprob: -12.00696849822998
    6. ')>>' → logprob: -12.00696849822998
    7. '）' → logprob: -12.63196849822998
    8. '%' → logprob: -12.75696849822998
    9. ')/' → logprob: -14.00696849822998
    10. '1' → logprob: -14.69446849822998

Token 75: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.04642738774418831
    2. ' %' → logprob: -3.1714274883270264
    3. ')' → logprob: -5.921427249908447
    4. ')%' → logprob: -7.546427249908447
    5. ' if' → logprob: -9.921427726745605
    6. '<|end|>' → logprob: -10.546427726745605
    7. ' ' → logprob: -10.796427726745605
    8. ' )' → logprob: -10.921427726745605
    9. ' ' → logprob: -11.546427726745605
    10. '```' → logprob: -11.921427726745605

Token 76: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -1.1223541498184204
    2. '5' → logprob: -1.2473541498184204
    3. '9' → logprob: -1.7473541498184204
    4. '3' → logprob: -2.747354030609131
    5. '4' → logprob: -2.872354030609131
    6. '7' → logprob: -3.747354030609131
    7. '11' → logprob: -3.872354030609131
    8. '6' → logprob: -4.622354030609131
    9. '8' → logprob: -4.622354030609131
    10. '33' → logprob: -4.997354030609131

Token 77: '5' (ID: 20)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.43113839626312256
    2. '11' → logprob: -2.181138515472412
    3. '5' → logprob: -2.556138515472412
    4. '9' → logprob: -3.306138515472412
    5. '7' → logprob: -3.556138515472412
    6. '3' → logprob: -3.556138515472412
    7. '6' → logprob: -4.181138515472412
    8. '4' → logprob: -4.431138515472412
    9. '8' → logprob: -4.556138515472412
    10. '13' → logprob: -4.931138515472412

Token 78: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2217254638671875
    2. '<|end|>' → logprob: -1.2217254638671875
    3. '       ' → logprob: -1.9717254638671875
    4. ' +' → logprob: -2.0967254638671875
    5. '+' → logprob: -2.2217254638671875
    6. '   ' → logprob: -4.7217254638671875
    7. '<|end|>' → logprob: -4.8467254638671875
    8. ' if' → logprob: -5.0967254638671875
    9. ' ' → logprob: -5.3467254638671875
    10. ')' → logprob: -5.5967254638671875

Token 79: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8694072961807251
    2. ' if' → logprob: -0.9944072961807251
    3. ' or' → logprob: -2.1194071769714355
    4. 'if' → logprob: -3.7444071769714355
    5. ' +' → logprob: -3.8694071769714355
    6. '+' → logprob: -3.8694071769714355
    7. '<|end|>' → logprob: -4.1194071769714355
    8. ' ' → logprob: -5.7444071769714355
    9. '<|end|>' → logprob: -6.8694071769714355
    10. '   ' → logprob: -6.9944071769714355

Token 80: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5891470313072205
    2. ' if' → logprob: -1.2141470909118652
    3. ' or' → logprob: -2.9641470909118652
    4. 'if' (adapté à ' if') → logprob: -3.0891470909118652
    5. '<|end|>' → logprob: -3.4641470909118652
    6. '+' → logprob: -5.089147090911865
    7. '<|end|>' → logprob: -5.339147090911865
    8. ' ' → logprob: -6.089147090911865
    9. ' +' → logprob: -6.839147090911865
    10. '       ' → logprob: -7.214147090911865

Token 81: ' take' (ID: 2304)
  Prédit: ' take'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' take' → logprob: -0.0031995740719139576
    2. ' ' → logprob: -6.628199577331543
    3. 'take' → logprob: -6.878199577331543
    4. ' not' → logprob: -7.378199577331543
    5. ' oh' → logprob: -8.753199577331543
    6. ' ' → logprob: -10.753199577331543
    7. '  ' → logprob: -11.253199577331543
    8. ' tak' → logprob: -12.128199577331543
    9. '    ' → logprob: -13.003199577331543
    10. 'oh' → logprob: -13.253199577331543

Token 82: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.630610641877865e-06
    2. '==' → logprob: -12.250006675720215
    3. ' ==' → logprob: -13.500006675720215
    4. '>' → logprob: -16.2500057220459
    5. '<' → logprob: -17.0000057220459
    6. '```' → logprob: -17.0000057220459
    7. 'ich' → logprob: -17.1250057220459
    8. 'ing' → logprob: -17.7500057220459
    9. '=' → logprob: -17.7500057220459
    10. ' >' → logprob: -17.8750057220459

Token 83: 'ich' (ID: 703)
  Prédit: 'ich'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ich' → logprob: -0.00014036978245712817
    2. '_' → logprob: -9.125140190124512
    3. 'Ich' → logprob: -12.375140190124512
    4. ' ich' → logprob: -12.375140190124512
    5. 'ic' → logprob: -12.875140190124512
    6. '```' → logprob: -12.875140190124512
    7. '>' → logprob: -13.125140190124512
    8. '0' → logprob: -13.125140190124512
    9. 'oh' → logprob: -13.125140190124512
    10. 'a' → logprob: -13.875140190124512

Token 84: 'iro' (ID: 4509)
  Prédit: 'iro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iro' → logprob: -0.049821749329566956
    2. 'ro' → logprob: -3.0498218536376953
    3. 'o' → logprob: -7.549821853637695
    4. 'ろ' → logprob: -8.799821853637695
    5. '_ro' → logprob: -9.424821853637695
    6. 'oji' → logprob: -9.674821853637695
    7. '```' → logprob: -9.674821853637695
    8. 'ir' → logprob: -10.049821853637695
    9. 'roi' → logprob: -10.299821853637695
    10. 'ロ' → logprob: -10.299821853637695

Token 85: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11474219709634781
    2. '==' → logprob: -2.2397422790527344
    3. ' <' → logprob: -7.614742279052734
    4. ' >' → logprob: -7.739742279052734
    5. ' !=' → logprob: -8.239742279052734
    6. '>' → logprob: -8.489742279052734
    7. ' +' → logprob: -8.989742279052734
    8. '<' → logprob: -9.239742279052734
    9. '+' → logprob: -9.364742279052734
    10. ' ' → logprob: -9.489742279052734

Token 86: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0788913294672966
    2. '0' → logprob: -2.5788912773132324
    3. '1' → logprob: -14.32889175415039
    4. ' ' → logprob: -15.45389175415039
    5. '4' → logprob: -16.20389175415039
    6. '  ' → logprob: -16.45389175415039
    7. '<|end|>' → logprob: -16.45389175415039
    8. '2' → logprob: -16.82889175415039
    9. ' )' → logprob: -17.01639175415039
    10. ' 
' → logprob: -17.01639175415039

Token 87: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016036363318562508
    2. ' ' → logprob: -4.141036510467529
    3. '1' → logprob: -14.016036033630371
    4. '4' → logprob: -15.703536033630371
    5. '０' → logprob: -16.078536987304688
    6. '2' → logprob: -16.328536987304688
    7. '  ' → logprob: -16.391036987304688
    8. '	' → logprob: -16.703536987304688
    9. '```' → logprob: -16.766036987304688
    10. ' ' → logprob: -16.953536987304688

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015596829354763031
    2. ' or' → logprob: -4.390596866607666
    3. ' and' → logprob: -7.015596866607666
    4. ':
' → logprob: -7.640596866607666
    5. ' :' → logprob: -7.640596866607666
    6. '       ' → logprob: -8.265596389770508
    7. '   ' → logprob: -8.640596389770508
    8. ' ' → logprob: -8.765596389770508
    9. '           ' → logprob: -8.765596389770508
    10. '    ' → logprob: -9.140596389770508

Token 89: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.34678301215171814
    2. ':' → logprob: -1.4717830419540405
    3. '       ' → logprob: -3.846782922744751
    4. '           ' → logprob: -4.09678316116333
    5. '   ' → logprob: -4.22178316116333
    6. 'take' → logprob: -5.34678316116333
    7. ' take' → logprob: -6.09678316116333
    8. '1' → logprob: -7.34678316116333
    9. ' ' → logprob: -7.47178316116333
    10. '
' → logprob: -7.47178316116333

Token 90: ' take' (ID: 2304)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'take' (adapté à ' take') → logprob: -0.5614809989929199
    2. ' take' → logprob: -1.43648099899292
    3. '5' → logprob: -1.93648099899292
    4. '1' → logprob: -3.18648099899292
    5. '4' → logprob: -5.56148099899292
    6. '   ' → logprob: -6.43648099899292
    7. ' ' → logprob: -7.93648099899292
    8. 't' → logprob: -9.436481475830078
    9. 'tak' → logprob: -9.561481475830078
    10. '2' → logprob: -9.561481475830078

Token 91: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0002919638354796916
    2. '=' → logprob: -8.62529182434082
    3. ' =' → logprob: -9.50029182434082
    4. '1' → logprob: -11.25029182434082
    5. '_=' → logprob: -11.25029182434082
    6. ' ' → logprob: -12.12529182434082
    7. ' +=' → logprob: -13.62529182434082
    8. 'ich' → logprob: -13.87529182434082
    9. 's' → logprob: -14.25029182434082
    10. '  ' → logprob: -15.00029182434082

Token 92: 'ich' (ID: 703)
  Prédit: 'ich'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ich' → logprob: -0.027930041775107384
    2. '1' → logprob: -3.7779300212860107
    3. 'oh' → logprob: -5.40293025970459
    4. '5' → logprob: -9.90293025970459
    5. 'Ich' → logprob: -11.02793025970459
    6. 'och' → logprob: -11.15293025970459
    7. 'ichi' → logprob: -11.40293025970459
    8. '2' → logprob: -11.52793025970459
    9. '0' → logprob: -11.90293025970459
    10. '_' → logprob: -12.15293025970459

Token 93: 'iro' (ID: 4509)
  Prédit: 'iro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iro' → logprob: -0.0008193961111828685
    2. 'or' → logprob: -8.250819206237793
    3. '_' → logprob: -8.875819206237793
    4. 'ro' → logprob: -9.125819206237793
    5. 'ori' → logprob: -9.250819206237793
    6. 'oji' → logprob: -9.375819206237793
    7. 'hiro' → logprob: -10.125819206237793
    8. '```' → logprob: -11.250819206237793
    9. 'oro' → logprob: -11.500819206237793
    10. '_ro' → logprob: -11.875819206237793

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03367013484239578
    2. '=' → logprob: -3.40867018699646
    3. ' +=' → logprob: -10.783670425415039
    4. '+=' → logprob: -12.908670425415039
    5. ' ' → logprob: -14.158670425415039
    6. '1' → logprob: -15.783670425415039
    7. '＝' → logprob: -16.40867042541504
    8. ' =
' → logprob: -16.78367042541504
    9. ' ==' → logprob: -17.53367042541504
    10. ' ' → logprob: -18.03367042541504

Token 95: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012910663150250912
    2. '4' → logprob: -4.512910842895508
    3. ' ' → logprob: -6.762910842895508
    4. '5' → logprob: -7.262910842895508
    5. '2' → logprob: -14.262910842895508
    6. 'min' → logprob: -14.325410842895508
    7. '   ' → logprob: -14.762910842895508
    8. '

' → logprob: -14.887910842895508
    9. '  ' → logprob: -15.325410842895508
    10. '6' → logprob: -15.325410842895508

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03576859459280968
    2. '4' → logprob: -3.410768508911133
    3. '5' → logprob: -6.160768508911133
    4. ' ' → logprob: -12.160768508911133
    5. '2' → logprob: -13.410768508911133
    6. '3' → logprob: -14.285768508911133
    7. '

' → logprob: -15.098268508911133
    8. '   ' → logprob: -15.410768508911133
    9. '6' → logprob: -15.410768508911133
    10. 'min' → logprob: -15.473268508911133

Token 97: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15249276161193848
    2. '       ' → logprob: -2.1524927616119385
    3. '<|end|>' → logprob: -4.152492523193359
    4. '        
' → logprob: -5.902492523193359
    5. '    
' → logprob: -6.152492523193359
    6. 'elif' → logprob: -6.902492523193359
    7. '   ' → logprob: -7.902492523193359
    8. '        ' → logprob: -8.02749252319336
    9. ' 
' → logprob: -8.02749252319336
    10. '' → logprob: -8.15249252319336

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2152804136276245
    2. '
' → logprob: -1.9652804136276245
    3. '   ' → logprob: -4.090280532836914
    4. '<|end|>' → logprob: -4.715280532836914
    5. '    ' → logprob: -4.965280532836914
    6. ' if' → logprob: -5.215280532836914
    7. '        ' → logprob: -5.465280532836914
    8. '        
' → logprob: -5.965280532836914
    9. '    
' → logprob: -6.090280532836914
    10. ' 
' → logprob: -7.340280532836914

Token 99: ' oh' (ID: 8718)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15634772181510925
    2. '       ' → logprob: -2.1563477516174316
    3. '<|end|>' → logprob: -5.156347751617432
    4. '        
' → logprob: -5.531347751617432
    5. ' if' → logprob: -5.656347751617432
    6. '   ' → logprob: -5.781347751617432
    7. '    ' → logprob: -6.031347751617432
    8. ' 
' → logprob: -6.156347751617432
    9. '        ' → logprob: -6.281347751617432
    10. '    
' → logprob: -6.531347751617432

Token 100: 'aj' (ID: 1255)
  Prédit: 'aj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.0010456704767420888
    2. 'a' → logprob: -6.8760457038879395
    3. '   ' → logprob: -12.501045227050781
    4. 'aji' → logprob: -13.376045227050781
    5. ' aj' → logprob: -13.376045227050781
    6. ' a' → logprob: -13.626045227050781
    7. ' ' → logprob: -13.626045227050781
    8. 'ají' → logprob: -14.626045227050781
    9. '_' → logprob: -14.751045227050781
    10. 'ah' → logprob: -15.251045227050781

Token 101: 'iki' (ID: 5368)
  Prédit: 'iki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iki' → logprob: -4.723352049040841e-06
    2. 'ik' → logprob: -13.000004768371582
    3. 'oki' → logprob: -14.125004768371582
    4. 'uki' → logprob: -15.000004768371582
    5. '   ' → logprob: -15.250004768371582
    6. 'IKI' → logprob: -15.875004768371582
    7. 'ike' → logprob: -16.250003814697266
    8. 'p' → logprob: -16.250003814697266
    9. 'iku' → logprob: -16.500003814697266
    10. 'iriki' → logprob: -16.625003814697266

Token 102: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.0003347506280988455
    2. '-=' → logprob: -8.500334739685059
    3. ' =' → logprob: -9.375334739685059
    4. '-' → logprob: -11.000334739685059
    5. ' -' → logprob: -11.250334739685059
    6. '=' → logprob: -11.625334739685059
    7. ' +=' → logprob: -12.500334739685059
    8. ' ' → logprob: -12.625334739685059
    9. '    ' → logprob: -14.875334739685059
    10. ' ' → logprob: -16.000335693359375

Token 103: ' take' (ID: 2304)
  Prédit: ' take'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' take' → logprob: -0.38687190413475037
    2. 'take' → logprob: -1.1368719339370728
    3. ' ' → logprob: -14.886872291564941
    4. ' ' → logprob: -15.261872291564941
    5. 'tak' → logprob: -16.261871337890625
    6. ' tak' → logprob: -16.386871337890625
    7. '   ' → logprob: -16.511871337890625
    8. 't' → logprob: -17.886871337890625
    9. '	t' → logprob: -17.886871337890625
    10. '.take' → logprob: -18.761871337890625

Token 104: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -9.088346359931165e-07
    2. 'ich' → logprob: -14.125000953674316
    3. '```' → logprob: -16.875
    4. 's' → logprob: -17.875
    5. '_ai' → logprob: -17.875
    6. ' ' → logprob: -18.0
    7. '‌' → logprob: -18.0
    8. 'ist' → logprob: -18.625
    9. '＿' → logprob: -18.75
    10. ' _' → logprob: -18.75

Token 105: 'ich' (ID: 703)
  Prédit: 'ich'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ich' → logprob: -0.000399091251892969
    2. 'oh' → logprob: -8.375398635864258
    3. 'och' → logprob: -9.750398635864258
    4. 'Ich' → logprob: -10.750398635864258
    5. 'iro' → logprob: -11.000398635864258
    6. '1' → logprob: -11.125398635864258
    7. 'ichi' → logprob: -11.375398635864258
    8. '```' → logprob: -11.750398635864258
    9. ' ich' → logprob: -11.875398635864258
    10. 'ch' → logprob: -12.500398635864258

Token 106: 'iro' (ID: 4509)
  Prédit: 'oki'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oki' → logprob: -0.7353693246841431
    2. 'iki' → logprob: -0.9853693246841431
    3. 'oji' → logprob: -3.1103692054748535
    4. 'iro' → logprob: -3.2353692054748535
    5. 'aj' → logprob: -3.8603692054748535
    6. 'r' → logprob: -5.1103692054748535
    7. 'ro' → logprob: -5.2353692054748535
    8. 'ir' → logprob: -5.3603692054748535
    9. 'aji' → logprob: -5.6103692054748535
    10. 'ji' → logprob: -5.7353692054748535

Token 107: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4776366353034973
    2. '
' → logprob: -1.1026365756988525
    3. '   ' → logprob: -4.102636814117432
    4. '<|end|>' → logprob: -4.102636814117432
    5. '    
' → logprob: -5.352636814117432
    6. '        
' → logprob: -5.352636814117432
    7. '  
' → logprob: -6.602636814117432
    8. '<|end|>' → logprob: -6.727636814117432
    9. ' 
' → logprob: -7.477636814117432
    10. '\n' → logprob: -7.852636814117432

Token 108: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6152850985527039
    2. '       ' → logprob: -0.9902850985527039
    3. '   ' → logprob: -3.7402851581573486
    4. '<|end|>' → logprob: -3.7402851581573486
    5. '        
' → logprob: -4.2402849197387695
    6. '    
' → logprob: -4.6152849197387695
    7. '\n' → logprob: -5.4902849197387695
    8. '  
' → logprob: -5.6152849197387695
    9. ' 
' → logprob: -5.7402849197387695
    10. '\' → logprob: -6.9902849197387695

Token 109: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7769227623939514
    2. 'idx' → logprob: -1.6519227027893066
    3. 'if' → logprob: -1.9019227027893066
    4. ' if' → logprob: -2.2769227027893066
    5. '   ' → logprob: -2.9019227027893066
    6. ' idx' → logprob: -3.2769227027893066
    7. 'print' (adapté à ' print') → logprob: -7.526922702789307
    8. ' ' → logprob: -7.901922702789307
    9. ' for' → logprob: -8.026923179626465
    10. '
' → logprob: -8.151923179626465

Token 110: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6397936940193176
    2. '(f' → logprob: -1.6397936344146729
    3. '(t' → logprob: -2.264793634414673
    4. '("' → logprob: -2.639793634414673
    5. '("("' → logprob: -2.889793634414673
    6. '('' → logprob: -3.264793634414673
    7. '("(' → logprob: -5.389793872833252
    8. '()' → logprob: -6.389793872833252
    9. '((' → logprob: -7.264793872833252
    10. '(idx' → logprob: -7.389793872833252

Token 111: 'oh' (ID: 2308)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.21703797578811646
    2. '"' → logprob: -1.9670379161834717
    3. 'f' → logprob: -3.7170379161834717
    4. 'idx' → logprob: -4.967038154602051
    5. 'oh' → logprob: -5.717038154602051
    6. ''' → logprob: -5.967038154602051
    7. 't' → logprob: -6.092038154602051
    8. 'str' → logprob: -6.217038154602051
    9. 'tak' → logprob: -6.217038154602051
    10. '"Oh' → logprob: -6.342038154602051

Token 112: 'aj' (ID: 1255)
  Prédit: 'aj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.0014846279518678784
    2. 'a' → logprob: -7.251484394073486
    3. 'ir' → logprob: -8.376484870910645
    4. '   ' → logprob: -8.626484870910645
    5. 'print' → logprob: -9.376484870910645
    6. 'iro' → logprob: -10.126484870910645
    7. 'aji' → logprob: -10.501484870910645
    8. 'あ' → logprob: -10.626484870910645
    9. ' ' → logprob: -11.001484870910645
    10. 'raj' → logprob: -11.501484870910645

Token 113: 'iki' (ID: 5368)
  Prédit: 'iki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iki' → logprob: -9.758300438988954e-05
    2. 'ki' → logprob: -10.000097274780273
    3. 'i' → logprob: -11.125097274780273
    4. 'oki' → logprob: -11.875097274780273
    5. 'iku' → logprob: -12.250097274780273
    6. 'ik' → logprob: -12.375097274780273
    7. 'き' → logprob: -12.500097274780273
    8. 'uki' → logprob: -13.000097274780273
    9. '```' → logprob: -13.250097274780273
    10. '#' → logprob: -13.750097274780273

Token 114: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05618477612733841
    2. ',' → logprob: -2.931184768676758
    3. ',end' → logprob: -7.181184768676758
    4. ' )' → logprob: -8.556184768676758
    5. ')
' → logprob: -8.931184768676758
    6. '   ' → logprob: -9.181184768676758
    7. ' ,' → logprob: -10.306184768676758
    8. 'end' → logprob: -11.306184768676758
    9. '+' → logprob: -11.556184768676758
    10. '),' → logprob: -12.181184768676758

Token 115: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13089826703071594
    2. ' if' → logprob: -3.6308982372283936
    3. 'if' (adapté à ' if') → logprob: -4.255898475646973
    4. '        
' → logprob: -4.255898475646973
    5. ' ' → logprob: -4.380898475646973
    6. ' 
' → logprob: -4.630898475646973
    7. '
' → logprob: -4.755898475646973
    8. '<|end|>' → logprob: -4.755898475646973
    9. '   ' → logprob: -5.005898475646973
    10. '        ' → logprob: -5.255898475646973

Token 117: ' oh' (ID: 8718)
  Prédit: ' oh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' oh' → logprob: -0.003609339939430356
    2. 'oh' → logprob: -5.6286091804504395
    3. ' ' → logprob: -13.003609657287598
    4. ' ' → logprob: -13.128609657287598
    5. ' not' → logprob: -13.253609657287598
    6. '   ' → logprob: -14.628609657287598
    7. ' o' → logprob: -14.753609657287598
    8. '  ' → logprob: -14.753609657287598
    9. 'Oh' → logprob: -14.878609657287598
    10. 'n' → logprob: -14.878609657287598

Token 118: 'aj' (ID: 1255)
  Prédit: 'aj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -2.7252845029579476e-05
    2. 'a' → logprob: -10.750027656555176
    3. '```' → logprob: -13.875027656555176
    4. 'ah' → logprob: -14.125027656555176
    5. '   ' → logprob: -14.125027656555176
    6. '<' → logprob: -14.750027656555176
    7. '==' → logprob: -15.000027656555176
    8. 'aji' → logprob: -15.125027656555176
    9. 'あ' → logprob: -15.375027656555176
    10. 'ajj' → logprob: -15.750027656555176

Token 119: 'iki' (ID: 5368)
  Prédit: 'iki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iki' → logprob: -0.0005280109471641481
    2. 'ik' → logprob: -7.625527858734131
    3. '>' → logprob: -11.375528335571289
    4. 'i' → logprob: -11.875528335571289
    5. 'iku' → logprob: -12.250528335571289
    6. 'き' → logprob: -13.125528335571289
    7. '   ' → logprob: -13.125528335571289
    8. 'aj' → logprob: -13.375528335571289
    9. 'j' → logprob: -13.500528335571289
    10. 'ika' → logprob: -13.750528335571289

Token 120: ' ==' (ID: 951)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.36646613478660583
    2. ' <=' → logprob: -1.3664661645889282
    3. '==' → logprob: -3.2414660453796387
    4. ' ==' → logprob: -4.366466045379639
    5. '<' → logprob: -12.366466522216797
    6. '=' → logprob: -12.866466522216797
    7. ' ' → logprob: -13.116466522216797
    8. '>' → logprob: -14.116466522216797
    9. ')<=' → logprob: -14.991466522216797
    10. ' <' → logprob: -15.366466522216797

Token 121: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.386874258518219
    2. '0' → logprob: -1.1368741989135742
    3. ' ' → logprob: -13.511874198913574
    4. '   ' → logprob: -14.261874198913574
    5. '  ' → logprob: -14.824374198913574
    6. '    ' → logprob: -15.011874198913574
    7. '```' → logprob: -16.57437515258789
    8. '<|end|>' → logprob: -16.63687515258789
    9. '1' → logprob: -16.69937515258789
    10. 's' → logprob: -17.13687515258789

Token 122: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005236717872321606
    2. ' ' → logprob: -5.255236625671387
    3. '1' → logprob: -14.817736625671387
    4. '  ' → logprob: -14.880236625671387
    5. '   ' → logprob: -14.942736625671387
    6. '    ' → logprob: -15.317736625671387
    7. ' ' → logprob: -15.630236625671387
    8. '０' → logprob: -15.755236625671387
    9. '00' → logprob: -16.192737579345703
    10. '2' → logprob: -16.442737579345703

Token 123: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018032750114798546
    2. '           ' → logprob: -4.393032550811768
    3. ':
' → logprob: -5.268032550811768
    4. '       ' → logprob: -8.018033027648926
    5. ' or' → logprob: -12.018033027648926
    6. ',' → logprob: -12.643033027648926
    7. ' and' → logprob: -12.768033027648926
    8. '   ' → logprob: -12.893033027648926
    9. ':

' → logprob: -13.268033027648926
    10. ':
' → logprob: -13.518033027648926

Token 124: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008987197652459145
    2. ' break' → logprob: -7.750898838043213
    3. 'break' → logprob: -8.625898361206055
    4. 'print' → logprob: -8.875898361206055
    5. '       ' → logprob: -9.375898361206055
    6. ' print' → logprob: -11.000898361206055
    7. '   ' → logprob: -11.625898361206055
    8. ':
' → logprob: -12.125898361206055
    9. '            
' → logprob: -12.375898361206055
    10. '	       ' → logprob: -12.375898361206055

Token 125: ' break' (ID: 2338)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.29593783617019653
    2. '           ' → logprob: -1.5459377765655518
    3. ' print' → logprob: -3.5459377765655518
    4. 'break' (adapté à ' break') → logprob: -5.295938014984131
    5. '       ' → logprob: -5.420938014984131
    6. '   ' → logprob: -5.670938014984131
    7. ' break' → logprob: -6.920938014984131
    8. '	print' → logprob: -9.420937538146973
    9. '               ' → logprob: -10.170937538146973
    10. 'continue' → logprob: -10.170937538146973

Token 126: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010566076263785362
    2. '<|end|>' → logprob: -5.260566234588623
    3. '        
' → logprob: -6.260566234588623
    4. '   ' → logprob: -6.260566234588623
    5. '
' → logprob: -6.885566234588623
    6. '<|end|>' → logprob: -9.135565757751465
    7. '    
' → logprob: -9.260565757751465
    8. '    ' → logprob: -10.385565757751465
    9. '	' → logprob: -10.510565757751465
    10. '		
' → logprob: -10.760565757751465

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13076721131801605
    2. '
' → logprob: -3.0057671070098877
    3. '        
' → logprob: -3.3807671070098877
    4. '    
' → logprob: -4.130767345428467
    5. '   ' → logprob: -4.255767345428467
    6. '<|end|>' → logprob: -6.380767345428467
    7. '		
' → logprob: -6.755767345428467
    8. '        ' → logprob: -6.880767345428467
    9. '    ' → logprob: -6.880767345428467
    10. '```' → logprob: -7.005767345428467

Token 128: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026592520996928215
    2. 'take' → logprob: -4.02659273147583
    3. '   ' → logprob: -5.65159273147583
    4. '#' (adapté à ' #') → logprob: -6.15159273147583
    5. '        
' → logprob: -6.77659273147583
    6. ' take' → logprob: -7.27659273147583
    7. '
' → logprob: -8.901592254638672
    8. '    
' → logprob: -9.026592254638672
    9. 'idx' → logprob: -10.026592254638672
    10. '```' → logprob: -10.026592254638672

Token 129: ' 次' (ID: 88923)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.5609738230705261
    2. '#' → logprob: -1.810973882675171
    3. 't' → logprob: -2.560973882675171
    4. 'f' → logprob: -3.560973882675171
    5. 'idx' → logprob: -3.685973882675171
    6. 'k' → logprob: -4.185973644256592
    7. 'tak' → logprob: -4.185973644256592
    8. 'a' → logprob: -4.310973644256592
    9. 'j' → logprob: -4.435973644256592
    10. 'b' → logprob: -4.935973644256592

Token 130: '郎' (ID: 72507)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.24671028554439545
    2. '   ' → logprob: -2.2467103004455566
    3. '_' → logprob: -2.7467103004455566
    4. 't' → logprob: -4.871710300445557
    5. '郎' → logprob: -4.996710300445557
    6. 'は' → logprob: -5.246710300445557
    7. '       ' → logprob: -5.371710300445557
    8. 'に' → logprob: -5.621710300445557
    9. 'た' → logprob: -6.121710300445557
    10. ' ' → logprob: -6.121710300445557

Token 131: '君' (ID: 82180)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.10475818812847137
    2. '   ' → logprob: -3.4797582626342773
    3. '君' → logprob: -3.4797582626342773
    4. '       ' → logprob: -3.8547582626342773
    5. 'の' → logprob: -5.104758262634277
    6. ' =' → logprob: -5.354758262634277
    7. '=' → logprob: -5.854758262634277
    8. 'tak' → logprob: -7.479758262634277
    9. 'く' → logprob: -7.979758262634277
    10. '     ' → logprob: -8.729758262634277

Token 132: 'の' (ID: 3385)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23246881365776062
    2. '=' → logprob: -2.232468843460083
    3. ' =' → logprob: -2.482468843460083
    4. ' take' → logprob: -4.732468605041504
    5. 'take' → logprob: -5.232468605041504
    6. '   ' → logprob: -7.107468605041504
    7. '        
' → logprob: -7.982468605041504
    8. '        ' → logprob: -8.357468605041504
    9. '_take' → logprob: -8.982468605041504
    10. 'の' → logprob: -9.232468605041504

Token 133: '番' (ID: 30357)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.2090606987476349
    2. 'turn' → logprob: -1.7090606689453125
    3. '番' → logprob: -6.0840606689453125
    4. 'idx' → logprob: -6.5840606689453125
    5. '#' → logprob: -6.7090606689453125
    6. 'token' → logprob: -7.2090606689453125
    7. 'if' → logprob: -7.5840606689453125
    8. ' take' → logprob: -8.084060668945312
    9. ' turn' → logprob: -8.459060668945312
    10. 'move' → logprob: -8.834060668945312

Token 134: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004998328629881144
    2. '
' → logprob: -6.129998207092285
    3. 'take' → logprob: -6.879998207092285
    4. ' take' → logprob: -7.254998207092285
    5. '        
' → logprob: -7.504998207092285
    6. '   ' → logprob: -8.879998207092285
    7. ',' → logprob: -9.254998207092285
    8. '    
' → logprob: -10.379998207092285
    9. '	' → logprob: -10.754998207092285
    10. '=' → logprob: -10.879998207092285

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010775440372526646
    2. 'take' → logprob: -5.010775566101074
    3. ' take' → logprob: -6.260775566101074
    4. '
' → logprob: -7.010775566101074
    5. '   ' → logprob: -7.135775566101074
    6. '        
' → logprob: -8.385775566101074
    7. '    
' → logprob: -10.385775566101074
    8. ',' → logprob: -10.385775566101074
    9. '	' → logprob: -10.885775566101074
    10. '           ' → logprob: -11.135775566101074

Token 136: ' take' (ID: 2304)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'take' (adapté à ' take') → logprob: -0.05427217483520508
    2. 'if' → logprob: -3.929272174835205
    3. 'oh' → logprob: -4.179272174835205
    4. 'idx' → logprob: -4.429272174835205
    5. '   ' → logprob: -6.804272174835205
    6. 'for' → logprob: -6.929272174835205
    7. '#' → logprob: -7.054272174835205
    8. 'print' → logprob: -7.554272174835205
    9. 'while' → logprob: -7.804272174835205
    10. 'j' → logprob: -8.304271697998047

Token 137: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.39120447635650635
    2. '_' → logprob: -1.1412044763565063
    3. '_next' → logprob: -6.141204357147217
    4. '_t' → logprob: -7.391204357147217
    5. 'jir' → logprob: -7.641204357147217
    6. '_second' → logprob: -7.766204357147217
    7. '_js' → logprob: -9.516204833984375
    8. '_dir' → logprob: -10.266204833984375
    9. ' ' → logprob: -10.516204833984375
    10. ' =' → logprob: -10.516204833984375

Token 138: 'ir' (ID: 380)
  Prédit: 'iro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iro' → logprob: -0.7384044528007507
    2. '_' → logprob: -1.1134045124053955
    3. 'ir' → logprob: -2.1134045124053955
    4. 'j' → logprob: -3.1134045124053955
    5. '_j' → logprob: -4.363404273986816
    6. 'oj' → logprob: -5.988404273986816
    7. '__' → logprob: -6.613404273986816
    8. 'oh' → logprob: -6.613404273986816
    9. '```' → logprob: -6.613404273986816
    10. 'o' → logprob: -7.113404273986816

Token 139: 'ou' (ID: 283)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.01488112285733223
    2. 'ou' → logprob: -4.264881134033203
    3. 'oi' → logprob: -7.639881134033203
    4. 'oku' → logprob: -9.389881134033203
    5. 'о' → logprob: -10.264881134033203
    6. 'oki' → logprob: -10.514881134033203
    7. 'ō' → logprob: -11.014881134033203
    8. 'ok' → logprob: -11.139881134033203
    9. 'oji' → logprob: -11.764881134033203
    10. '_' → logprob: -11.889881134033203

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014184780418872833
    2. '=' → logprob: -4.264184951782227
    3. ' ' → logprob: -10.889184951782227
    4. ' =(' → logprob: -14.389184951782227
    5. ')' → logprob: -14.514184951782227
    6. '_' → logprob: -15.014184951782227
    7. '＝' → logprob: -15.014184951782227
    8. ' )' → logprob: -15.639184951782227
    9. '=int' → logprob: -16.264184951782227
    10. ',' → logprob: -16.764184951782227

Token 141: ' a' (ID: 261)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46960726380348206
    2. '1' → logprob: -2.219607353210449
    3. ' (' → logprob: -2.344607353210449
    4. 'oh' → logprob: -2.844607353210449
    5. '((' → logprob: -4.094607353210449
    6. 'a' → logprob: -4.094607353210449
    7. '4' → logprob: -4.344607353210449
    8. '5' → logprob: -4.344607353210449
    9. '(a' → logprob: -4.344607353210449
    10. ' ' → logprob: -4.969607353210449

Token 142: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00019150081789121032
    2. '[' → logprob: -8.875191688537598
    3. 'idx' → logprob: -11.000191688537598
    4. '[j' → logprob: -11.375191688537598
    5. '[(' → logprob: -12.000191688537598
    6. '[i' → logprob: -12.125191688537598
    7. '[id' → logprob: -12.625191688537598
    8. '[index' → logprob: -12.875191688537598
    9. '[ind' → logprob: -13.500191688537598
    10. '[
' → logprob: -13.875191688537598

Token 143: ']
' (ID: 1592)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.48105087876319885
    2. ']' → logprob: -0.9810508489608765
    3. ']%' → logprob: -5.231050968170166
    4. '%' → logprob: -7.356050968170166
    5. '[idx' → logprob: -8.231050491333008
    6. '[' → logprob: -8.606050491333008
    7. ' ])' → logprob: -8.856050491333008
    8. '][' → logprob: -9.356050491333008
    9. ')' → logprob: -9.606050491333008
    10. ']
' → logprob: -10.106050491333008

Token 144: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30094483494758606
    2. '       ' → logprob: -1.8009448051452637
    3. ' 
' → logprob: -2.5509448051452637
    4. '        
' → logprob: -4.675944805145264
    5. '
' → logprob: -6.175944805145264
    6. '    
' → logprob: -6.675944805145264
    7. ' oh' → logprob: -6.925944805145264
    8. '   ' → logprob: -7.175944805145264
    9. '<|end|>' → logprob: -7.675944805145264
    10. '           ' → logprob: -8.175945281982422

Token 145: ' if' (ID: 538)
  Prédit: ' oh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' oh' → logprob: -0.09575070440769196
    2. 'oh' → logprob: -2.8457508087158203
    3. '       ' → logprob: -4.22075080871582
    4. ' if' → logprob: -4.47075080871582
    5. ' idx' → logprob: -5.22075080871582
    6. 'if' (adapté à ' if') → logprob: -7.84575080871582
    7. 'idx' → logprob: -7.84575080871582
    8. '        
' → logprob: -8.59575080871582
    9. ' 
' → logprob: -8.84575080871582
    10. ' Oh' → logprob: -9.09575080871582

Token 146: ' take' (ID: 2304)
  Prédit: ' take'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' take' → logprob: -0.11511626094579697
    2. 'take' → logprob: -2.2401163578033447
    3. ' oh' → logprob: -6.240116119384766
    4. 'oh' → logprob: -8.615116119384766
    5. ' ' → logprob: -9.365116119384766
    6. '>' → logprob: -11.115116119384766
    7. '   ' → logprob: -11.240116119384766
    8. ' a' → logprob: -11.927616119384766
    9. 'a' → logprob: -12.240116119384766
    10. 'j' → logprob: -12.427616119384766

Token 147: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0031815171241760254
    2. '_' → logprob: -5.753181457519531
    3. 'j' → logprob: -14.253181457519531
    4. '_
' → logprob: -14.378181457519531
    5. '	j' → logprob: -15.128181457519531
    6. ' ' → logprob: -15.253181457519531
    7. '_a' → logprob: -15.628181457519531
    8. '>' → logprob: -15.753181457519531
    9. ' _' → logprob: -15.878181457519531
    10. '   ' → logprob: -15.878181457519531

Token 148: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.004216112662106752
    2. 'iro' → logprob: -5.754216194152832
    3. 'ou' → logprob: -7.004216194152832
    4. '_' → logprob: -10.754216194152832
    5. 'iru' → logprob: -10.879216194152832
    6. 'or' → logprob: -11.254216194152832
    7. 'our' → logprob: -11.629216194152832
    8. '_ir' → logprob: -11.754216194152832
    9. '```' → logprob: -11.879216194152832
    10. 'oru' → logprob: -12.129216194152832

Token 149: 'ou' (ID: 283)
  Prédit: 'ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.0019118614727631211
    2. 'o' → logprob: -7.001911640167236
    3. 'oku' → logprob: -7.251911640167236
    4. 'oki' → logprob: -8.751912117004395
    5. 'ouk' → logprob: -9.876912117004395
    6. 'iki' → logprob: -11.001912117004395
    7. '```' → logprob: -11.251912117004395
    8. 'ir' → logprob: -12.251912117004395
    9. 'う' → logprob: -12.376912117004395
    10. 'a' → logprob: -12.501912117004395

Token 150: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.25238025188446045
    2. '>' → logprob: -1.5023802518844604
    3. ' <=' → logprob: -8.25238037109375
    4. '<=' → logprob: -9.50238037109375
    5. ' >=' → logprob: -9.62738037109375
    6. '>=' → logprob: -10.62738037109375
    7. ' ' → logprob: -11.37738037109375
    8. '   ' → logprob: -12.25238037109375
    9. '<' → logprob: -13.37738037109375
    10. ' <' → logprob: -13.50238037109375

Token 151: ' oh' (ID: 8718)
  Prédit: 'oh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oh' → logprob: -0.04300969839096069
    2. ' oh' → logprob: -3.1680097579956055
    3. '0' → logprob: -12.668009757995605
    4. ' ' → logprob: -13.668009757995605
    5. 'Oh' → logprob: -14.043009757995605
    6. '>' → logprob: -14.418009757995605
    7. 'o' → logprob: -14.418009757995605
    8. 'ohn' → logprob: -15.168009757995605
    9. ' ' → logprob: -15.293009757995605
    10. 'ol' → logprob: -15.418009757995605

Token 152: 'aj' (ID: 1255)
  Prédit: 'aj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -8.061054359131958e-06
    2. 'a' → logprob: -12.875007629394531
    3. 'ij' → logprob: -14.000007629394531
    4. 'j' → logprob: -14.000007629394531
    5. '   ' → logprob: -14.625007629394531
    6. ' aj' → logprob: -14.875007629394531
    7. '

' → logprob: -15.250007629394531
    8. 'p' → logprob: -15.375007629394531
    9. 'ah' → logprob: -15.375007629394531
    10. '```' → logprob: -15.375007629394531

Token 153: 'iki' (ID: 5368)
  Prédit: 'iki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iki' → logprob: -3.8889261304575484e-06
    2. 'ik' → logprob: -13.375003814697266
    3. 'iku' → logprob: -14.375003814697266
    4. 'oki' → logprob: -14.875003814697266
    5. 'uki' → logprob: -15.375003814697266
    6. '```' → logprob: -16.000003814697266
    7. '   ' → logprob: -16.125003814697266
    8. '>' → logprob: -16.125003814697266
    9. 'IKI' → logprob: -16.125003814697266
    10. 'ki' → logprob: -16.125003814697266

Token 154: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021674908697605133
    2. ':
' → logprob: -3.896674871444702
    3. '       ' → logprob: -7.521675109863281
    4. '<|end|>' → logprob: -8.396675109863281
    5. '           ' → logprob: -8.521675109863281
    6. '   ' → logprob: -9.771675109863281
    7. '<|end|>' → logprob: -10.271675109863281
    8. ' or' → logprob: -11.021675109863281
    9. '):' → logprob: -11.521675109863281
    10. '):
' → logprob: -12.271675109863281

Token 155: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.032896898686885834
    2. ' take' → logprob: -3.7828969955444336
    3. 'take' → logprob: -4.657896995544434
    4. '       ' → logprob: -9.907896995544434
    5. '   ' → logprob: -10.907896995544434
    6. '               ' → logprob: -11.907896995544434
    7. ' break' → logprob: -12.157896995544434
    8. '.take' → logprob: -12.282896995544434
    9. 'break' → logprob: -12.407896995544434
    10. 'oh' → logprob: -12.532896995544434

Token 156: ' take' (ID: 2304)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'take' (adapté à ' take') → logprob: -0.38017281889915466
    2. ' take' → logprob: -1.380172848701477
    3. '           ' → logprob: -3.3801727294921875
    4. '       ' → logprob: -3.8801727294921875
    5. 'break' → logprob: -5.3801727294921875
    6. ' break' → logprob: -5.8801727294921875
    7. 'oh' → logprob: -6.7551727294921875
    8. ' oh' → logprob: -7.6301727294921875
    9. '   ' → logprob: -7.8801727294921875
    10. 'tak' → logprob: -9.005172729492188

Token 157: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.00043102685594931245
    2. '_' → logprob: -7.750431060791016
    3. 'j' → logprob: -16.000431060791016
    4. '	j' → logprob: -16.875431060791016
    5. '[j' → logprob: -17.625431060791016
    6. '_i' → logprob: -17.875431060791016
    7. '_

' → logprob: -18.250431060791016
    8. '\' → logprob: -18.500431060791016
    9. '_=' → logprob: -18.625431060791016
    10. '=' → logprob: -18.750431060791016

Token 158: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0049291737377643585
    2. '_j' → logprob: -5.879929065704346
    3. 'iro' → logprob: -6.754929065704346
    4. 'j' → logprob: -7.629929065704346
    5. 'jir' → logprob: -8.504929542541504
    6. 'oj' → logprob: -10.129929542541504
    7. '_' → logprob: -10.254929542541504
    8. 'ij' → logprob: -10.629929542541504
    9. 'ur' → logprob: -10.754929542541504
    10. 'ou' → logprob: -10.754929542541504

Token 159: 'ou' (ID: 283)
  Prédit: 'ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -1.7432603272027336e-06
    2. 'o' → logprob: -14.500001907348633
    3. 'ouk' → logprob: -15.000001907348633
    4. 'jou' → logprob: -15.625001907348633
    5. '```' → logprob: -15.625001907348633
    6. 'oui' → logprob: -15.625001907348633
    7. 'you' → logprob: -15.875001907348633
    8. 'oki' → logprob: -16.000001907348633
    9. 'iki' → logprob: -16.625001907348633
    10. 'oku' → logprob: -16.625001907348633

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408226132392883
    2. '=' → logprob: -0.9740822315216064
    3. ' -=' → logprob: -13.849081993103027
    4. '＝' → logprob: -13.974081993103027
    5. ' ' → logprob: -14.099081993103027
    6. ' =
' → logprob: -14.224081993103027
    7. '=
' → logprob: -14.224081993103027
    8. '    ' → logprob: -15.099081993103027
    9. '-=' → logprob: -15.224081993103027
    10. '   ' → logprob: -15.974081993103027

Token 161: ' oh' (ID: 8718)
  Prédit: ' oh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' oh' → logprob: -0.01603495515882969
    2. 'oh' → logprob: -4.141035079956055
    3. ' ' → logprob: -14.891035079956055
    4. ' ' → logprob: -15.766035079956055
    5. ' Oh' → logprob: -16.891035079956055
    6. ' o' → logprob: -17.016035079956055
    7. '    ' → logprob: -17.141035079956055
    8. 'Oh' → logprob: -17.266035079956055
    9. '0' → logprob: -17.641035079956055
    10. ' ah' → logprob: -17.891035079956055

Token 162: 'aj' (ID: 1255)
  Prédit: 'aj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.0009424308082088828
    2. 'ik' → logprob: -7.500942230224609
    3. 'j' → logprob: -8.37594223022461
    4. 'ij' → logprob: -9.87594223022461
    5. 'jik' → logprob: -11.12594223022461
    6. 'ak' → logprob: -11.37594223022461
    7. 'あ' → logprob: -11.75094223022461
    8. 'pik' → logprob: -12.00094223022461
    9. 'ijk' → logprob: -12.25094223022461
    10. 'か' → logprob: -12.25094223022461

Token 163: 'iki' (ID: 5368)
  Prédit: 'iki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iki' → logprob: -0.0002153378736693412
    2. 'ik' → logprob: -8.625215530395508
    3. 'j' → logprob: -11.000215530395508
    4. 'iku' → logprob: -11.875215530395508
    5. 'ki' → logprob: -13.125215530395508
    6. 'uki' → logprob: -13.250215530395508
    7. 'oki' → logprob: -13.375215530395508
    8. 'aj' → logprob: -13.750215530395508
    9. 'k' → logprob: -14.250215530395508
    10. 'i' → logprob: -14.500215530395508

Token 164: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3523108959197998
    2. '       ' → logprob: -1.2273108959197998
    3. '   ' → logprob: -6.227311134338379
    4. 'oh' → logprob: -7.227311134338379
    5. '        
' → logprob: -7.602311134338379
    6. '    
' → logprob: -7.727311134338379
    7. '
' → logprob: -8.977311134338379
    8. ' oh' → logprob: -10.852311134338379
    9. '<|end|>' → logprob: -11.477311134338379
    10. ' 
' → logprob: -11.602311134338379

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10823594033718109
    2. '
' → logprob: -2.3582358360290527
    3. 'oh' → logprob: -5.358235836029053
    4. '   ' → logprob: -5.983235836029053
    5. '        
' → logprob: -7.983235836029053
    6. ' oh' → logprob: -8.733236312866211
    7. '    
' → logprob: -9.233236312866211
    8. '
' → logprob: -9.483236312866211
    9. '           ' → logprob: -10.608236312866211
    10. '<|end|>' → logprob: -11.483236312866211

Token 166: ' oh' (ID: 8718)
  Prédit: 'oh'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oh' (adapté à ' oh') → logprob: -0.07652218639850616
    2. '       ' → logprob: -3.3265221118927
    3. ' oh' → logprob: -3.7015221118927
    4. '   ' → logprob: -4.451522350311279
    5. '
' → logprob: -6.826522350311279
    6. '        
' → logprob: -8.826521873474121
    7. '    
' → logprob: -9.701521873474121
    8. ' 
' → logprob: -10.576521873474121
    9. '
' → logprob: -11.451521873474121
    10. ' ' → logprob: -11.576521873474121

Token 167: 'aj' (ID: 1255)
  Prédit: 'aj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -2.8087270038668066e-05
    2. 'a' → logprob: -10.750027656555176
    3. '   ' → logprob: -12.750027656555176
    4. 'ah' → logprob: -13.375027656555176
    5. ' aj' → logprob: -14.875027656555176
    6. 'ap' → logprob: -15.125027656555176
    7. ' ' → logprob: -15.250027656555176
    8. 'ab' → logprob: -15.750027656555176
    9. 'あ' → logprob: -16.250028610229492
    10. '  ' → logprob: -16.375028610229492

Token 168: 'iki' (ID: 5368)
  Prédit: 'iki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iki' → logprob: -0.0072051286697387695
    2. 'ik' → logprob: -5.382205009460449
    3. 'aj' → logprob: -6.132205009460449
    4. 'j' → logprob: -8.38220500946045
    5. 'ij' → logprob: -10.38220500946045
    6. 'p' → logprob: -10.63220500946045
    7. 'iku' → logprob: -11.38220500946045
    8. 'oki' → logprob: -11.38220500946045
    9. 'ike' → logprob: -11.50720500946045
    10. 'h' → logprob: -11.75720500946045

Token 169: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.39289000630378723
    2. ' -=' → logprob: -1.1428899765014648
    3. '-' → logprob: -5.142889976501465
    4. '=' → logprob: -9.017889976501465
    5. '   ' → logprob: -10.892889976501465
    6. '    ' → logprob: -11.767889976501465
    7. ' -' → logprob: -12.267889976501465
    8. '+=' → logprob: -13.517889976501465
    9. '>' → logprob: -13.642889976501465
    10. '	' → logprob: -13.767889976501465

Token 170: ' take' (ID: 2304)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.1269553005695343
    2. ' take' → logprob: -2.126955270767212
    3. 'tak' → logprob: -11.126955032348633
    4. ' ' → logprob: -12.251955032348633
    5. '   ' → logprob: -12.251955032348633
    6. ' tak' → logprob: -14.126955032348633
    7. '  ' → logprob: -14.251955032348633
    8. 't' → logprob: -15.126955032348633
    9. '    ' → logprob: -15.376955032348633
    10. ' ' → logprob: -15.501955032348633

Token 171: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -9.17420256882906e-05
    2. '_' → logprob: -9.625091552734375
    3. 'j' → logprob: -10.625091552734375
    4. 'jir' → logprob: -14.000091552734375
    5. '	j' → logprob: -16.250091552734375
    6. ' ' → logprob: -16.875091552734375
    7. '```' → logprob: -17.125091552734375
    8. 'jou' → logprob: -17.375091552734375
    9. '   ' → logprob: -17.500091552734375
    10. 'jor' → logprob: -17.625091552734375

Token 172: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.24085308611392975
    2. 'ou' → logprob: -2.1158530712127686
    3. 'ur' → logprob: -3.6158530712127686
    4. 'or' → logprob: -3.8658530712127686
    5. 'iro' → logprob: -4.115853309631348
    6. 'uro' → logprob: -4.740853309631348
    7. 'rou' → logprob: -4.990853309631348
    8. 'roku' → logprob: -5.740853309631348
    9. 'ouro' → logprob: -6.115853309631348
    10. 'ro' → logprob: -6.115853309631348

Token 173: 'ou' (ID: 283)
  Prédit: 'ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.5148933529853821
    2. 'oki' → logprob: -1.0148932933807373
    3. 'oku' → logprob: -4.014893531799316
    4. 'ok' → logprob: -5.014893531799316
    5. 'jou' → logprob: -5.139893531799316
    6. 'uki' → logprob: -5.764893531799316
    7. 'j' → logprob: -6.764893531799316
    8. 'ku' → logprob: -7.014893531799316
    9. 'o' → logprob: -7.014893531799316
    10. 'oji' → logprob: -7.764893531799316

Token 174: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007626506965607405
    2. '       ' → logprob: -6.007626533508301
    3. '\n' → logprob: -6.507626533508301
    4. '   ' → logprob: -7.257626533508301
    5. 'idx' → logprob: -7.382626533508301
    6. '[idx' → logprob: -7.757626533508301
    7. '    
' → logprob: -7.757626533508301
    8. '
' → logprob: -8.1326265335083
    9. ' idx' → logprob: -8.1326265335083
    10. '<|end|>' → logprob: -8.2576265335083

Token 175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6606878638267517
    2. '
' → logprob: -1.0356879234313965
    3. '\n' → logprob: -3.0356879234313965
    4. '   ' → logprob: -3.5356879234313965
    5. 'idx' → logprob: -3.6606879234313965
    6. '    
' → logprob: -5.4106879234313965
    7. '  
' → logprob: -5.5356879234313965
    8. ' idx' → logprob: -5.6606879234313965
    9. '<|end|>' → logprob: -5.7856879234313965
    10. '        
' → logprob: -5.9106879234313965

Token 176: ' print' (ID: 2123)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.1297878473997116
    2. 'print' (adapté à ' print') → logprob: -2.1297879219055176
    3. ' idx' → logprob: -6.629787921905518
    4. '   ' → logprob: -6.754787921905518
    5. '       ' → logprob: -8.50478744506836
    6. 'if' → logprob: -9.62978744506836
    7. ' print' → logprob: -9.87978744506836
    8. '	idx' → logprob: -10.25478744506836
    9. 'index' → logprob: -11.62978744506836
    10. ' ' → logprob: -13.75478744506836

Token 177: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3856492842023727e-06
    2. '()' → logprob: -14.625000953674316
    3. ' (' → logprob: -15.125000953674316
    4. '((' → logprob: -15.875000953674316
    5. 'oh' → logprob: -16.125001907348633
    6. '('' → logprob: -16.125001907348633
    7. '("("' → logprob: -17.125001907348633
    8. '(ob' → logprob: -17.375001907348633
    9. '(
' → logprob: -17.500001907348633
    10. '(o' → logprob: -17.625001907348633

Token 178: 'oh' (ID: 2308)
  Prédit: 'oh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oh' → logprob: -0.00010402000043541193
    2. ' oh' → logprob: -9.625103950500488
    3. '(' → logprob: -10.250103950500488
    4. 'o' → logprob: -13.875103950500488
    5. 'ohn' → logprob: -15.125103950500488
    6. 'oj' → logprob: -15.500103950500488
    7. '   ' → logprob: -15.500103950500488
    8. ' ' → logprob: -15.875103950500488
    9. 'Oh' → logprob: -16.125104904174805
    10. '0' → logprob: -16.375104904174805

Token 179: 'aj' (ID: 1255)
  Prédit: 'aj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -5.931863051955588e-05
    2. 'a' → logprob: -11.000059127807617
    3. '   ' → logprob: -11.750059127807617
    4. 'j' → logprob: -12.000059127807617
    5. 'ij' → logprob: -12.125059127807617
    6. 'ak' → logprob: -12.375059127807617
    7. ' ' → logprob: -12.625059127807617
    8. 'ik' → logprob: -12.750059127807617
    9. ' aj' → logprob: -13.625059127807617
    10. 'aji' → logprob: -13.750059127807617

Token 180: 'iki' (ID: 5368)
  Prédit: 'iki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iki' → logprob: -0.0006171276327222586
    2. 'ki' → logprob: -8.125617027282715
    3. 'i' → logprob: -9.000617027282715
    4. 'ik' → logprob: -9.750617027282715
    5. 'oki' → logprob: -10.000617027282715
    6. 'uki' → logprob: -10.875617027282715
    7. '```' → logprob: -10.875617027282715
    8. '[' → logprob: -12.125617027282715
    9. '(' → logprob: -12.125617027282715
    10. '#' → logprob: -12.250617027282715

Token 181: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019381542224436998
    2. ')
' → logprob: -6.251938343048096
    3. '   ' → logprob: -12.376937866210938
    4. ' )' → logprob: -13.001937866210938
    5. '       ' → logprob: -14.001937866210938
    6. ')

' → logprob: -14.876937866210938
    7. '
' → logprob: -15.376937866210938
    8. ')
' → logprob: -15.376937866210938
    9. '')' → logprob: -15.501937866210938
    10. ')}' → logprob: -15.626937866210938

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5957651734352112
    2. '
' → logprob: -1.5957651138305664
    3. '   ' → logprob: -2.2207651138305664
    4. '    
' → logprob: -3.2207651138305664
    5. '<|end|>' → logprob: -3.2207651138305664
    6. '        
' → logprob: -3.8457651138305664
    7. '\n' → logprob: -4.970765113830566
    8. '  
' → logprob: -5.220765113830566
    9. '```' → logprob: -5.470765113830566
    10. '	' → logprob: -5.845765113830566

Token 183: ' idx' (ID: 14016)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0648002177476883
    2. 'idx' (adapté à ' idx') → logprob: -3.189800262451172
    3. '   ' → logprob: -4.064800262451172
    4. '	idx' → logprob: -6.064800262451172
    5. ' idx' → logprob: -6.689800262451172
    6. '	' → logprob: -8.064800262451172
    7. ' ' → logprob: -8.939800262451172
    8. '\t' → logprob: -9.189800262451172
    9. '	   ' → logprob: -9.439800262451172
    10. '[idx' → logprob: -9.939800262451172

Token 184: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06936858594417572
    2. ' +=' → logprob: -2.944368600845337
    3. '+' → logprob: -4.444368362426758
    4. '=' → logprob: -5.944368362426758
    5. ']+=' → logprob: -12.444368362426758
    6. '<|end|>' → logprob: -12.569368362426758
    7. ' =' → logprob: -12.944368362426758
    8. ' +' → logprob: -13.319368362426758
    9. '+='' → logprob: -13.819368362426758
    10. '   ' → logprob: -13.944368362426758

Token 185: ' (' (ID: 350)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.07945489138364792
    2. ' (' → logprob: -2.5794548988342285
    3. '(index' → logprob: -8.20445442199707
    4. '(ans' → logprob: -9.07945442199707
    5. '(' → logprob: -9.95445442199707
    6. '(id' → logprob: -10.82945442199707
    7. '(i' → logprob: -11.07945442199707
    8. '(img' → logprob: -11.45445442199707
    9. '(next' → logprob: -11.45445442199707
    10. '   ' → logprob: -11.57945442199707

Token 186: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0029352677520364523
    2. '(idx' → logprob: -5.877935409545898
    3. ' idx' → logprob: -9.002935409545898
    4. ' (' → logprob: -13.002935409545898
    5. '	idx' → logprob: -13.002935409545898
    6. '[idx' → logprob: -13.752935409545898
    7. '   ' → logprob: -13.877935409545898
    8. 'index' → logprob: -15.127935409545898
    9. '_idx' → logprob: -15.752935409545898
    10. '       ' → logprob: -16.5029354095459

Token 187: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018151111900806427
    2. ' +' → logprob: -4.01815128326416
    3. 'idx' → logprob: -14.39315128326416
    4. '＋' → logprob: -15.64315128326416
    5. '+
' → logprob: -15.76815128326416
    6. ' idx' → logprob: -16.143150329589844
    7. '1' → logprob: -16.393150329589844
    8. '(idx' → logprob: -17.393150329589844
    9. '[idx' → logprob: -18.518150329589844
    10. '   ' → logprob: -19.643150329589844

Token 188: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004330532974563539
    2. ' ' → logprob: -7.750432968139648
    3. '   ' → logprob: -13.000432968139648
    4. '  ' → logprob: -17.37543296813965
    5. ')' → logprob: -17.87543296813965
    6. '       ' → logprob: -17.87543296813965
    7. '１' → logprob: -18.00043296813965
    8. '    ' → logprob: -18.50043296813965
    9. '```' → logprob: -18.68793296813965
    10. ' ' → logprob: -18.81293296813965

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2113979209971149e-05
    2. ' ' → logprob: -11.500012397766113
    3. '   ' → logprob: -13.250012397766113
    4. '
' → logprob: -17.062511444091797
    5. '１' → logprob: -17.312511444091797
    6. '  ' → logprob: -17.562511444091797
    7. '```' → logprob: -17.625011444091797
    8. '       ' → logprob: -18.000011444091797
    9. '    ' → logprob: -18.250011444091797
    10. '     ' → logprob: -18.812511444091797

Token 190: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.064297824399546e-05
    2. ')%' → logprob: -9.625070571899414
    3. ' )' → logprob: -12.375070571899414
    4. '%' → logprob: -14.750070571899414
    5. ')
' → logprob: -17.625070571899414
    6. '1' → logprob: -17.625070571899414
    7. '）' → logprob: -19.250070571899414
    8. '+' → logprob: -19.375070571899414
    9. '}' → logprob: -19.625070571899414
    10. '   ' → logprob: -19.750070571899414

Token 191: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.12699918448925018
    2. ' %' → logprob: -2.1269991397857666
    3. '%n' → logprob: -9.751998901367188
    4. ')' → logprob: -12.876998901367188
    5. ')%' → logprob: -13.001998901367188
    6. '1' → logprob: -13.376998901367188
    7. '%
' → logprob: -14.001998901367188
    8. '%d' → logprob: -14.126998901367188
    9. ' ' → logprob: -14.376998901367188
    10. '%i' → logprob: -14.376998901367188

Token 192: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07151184231042862
    2. 'len' → logprob: -2.946511745452881
    3. ' n' → logprob: -4.196511745452881
    4. ' len' → logprob: -6.571511745452881
    5. '   ' → logprob: -11.071512222290039
    6. ' ' → logprob: -11.821512222290039
    7. '(n' → logprob: -12.446512222290039
    8. '(len' → logprob: -12.446512222290039
    9. '5' → logprob: -12.821512222290039
    10. '	n' → logprob: -13.321512222290039


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 190
Tokens correctement prédits (1ère position, stricte): 98
Tokens correctement prédits (1ère position, avec adaptation): 102
Tokens correctement prédits (top 10): 163
Précision stricte (1ère position): 51.58%
Précision adaptée (1ère position): 53.68%
Précision (top 10): 85.79%
================================================================================
