================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:27:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def can_form_triplets(counts):
    # Retourne True si on peut partitionner les cartes en tris selon la règle (triplets identiques ou séquences)

    def backtrack(counts):
        # Trouve le prochain index avec count > 0
        for i in range(1, 10):
            if counts[i] > 0:
                break
        else:
            return True  # tous traités

        # Essayer triplet identique
        if counts[i] >= 3:
            counts[i] -= 3
            if backtrack(counts):
                counts[i] += 3
                return True
            counts[i] += 3

        # Essayer suite i, i+1, i+2 si possible
        if i <= 7 and counts[i] > 0 and counts[i + 1] > 0 and counts[i + 2] > 0:
            counts[i] -= 1
            counts[i+1] -= 1
            counts[i+2] -= 1
            if backtrack(counts):
                counts[i] += 1
                counts[i+1] += 1
                counts[i+2] += 1
                return True
            counts[i] += 1
            counts[i+1] += 1
            counts[i+2] += 1
        return False

    return backtrack(counts[:])

def is_valid_combination(cards):
    # cards est une liste de 14 chiffres
    from collections import Counter

    counts = [0]*10
    for c in cards:
        counts[c] += 1
        if counts[c] > 4:  # max 4 même chiffre
            return False

    # On doit trouver une paire (deux cartes identiques)
    for i in range(1, 10):
        if counts[i] >= 2:
            counts[i] -= 2  # on réserve la paire
            # Vérifier si le reste peut se partitionner en 4 triplets
            if can_form_triplets(counts):
                counts[i] += 2
                return True
            counts[i] += 2
    return False

import sys

for line in sys.stdin:
    line=line.strip()
    if not line:
        continue
    cards = list(map(int,list(line)))
    result = []

    for x in range(1,10):
        if cards.count(x) >= 4:
            # pas possible d'ajouter ce chiffre
            continue
        new_cards = cards + [x]
        if is_valid_combination(new_cards):
            result.append(str(x))
    if result:
        print(" ".join(result))
    else:
        print(0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' can' (ID: 665)
  → Token d'amorce (pas de prédiction)

Token 2: '_form' (ID: 18664)
  → Token d'amorce (pas de prédiction)

Token 3: '_trip' (ID: 154353)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004789426457136869
    2. '(' → logprob: -6.254789352416992
    3. '```' → logprob: -6.504789352416992
    4. '_form' → logprob: -7.629789352416992
    5. '_space' → logprob: -8.254789352416992
    6. '(_' → logprob: -9.129789352416992
    7. '_parent' → logprob: -9.254789352416992
    8. '_a' → logprob: -9.629789352416992
    9. '_token' → logprob: -9.879789352416992
    10. '_word' → logprob: -9.879789352416992

Token 4: 'lets' (ID: 12222)
  Prédit: 'let'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'let' → logprob: -0.10989577323198318
    2. 'le' → logprob: -2.984895706176758
    3. '_' → logprob: -3.234895706176758
    4. '_le' → logprob: -5.109895706176758
    5. '(let' → logprob: -5.484895706176758
    6. 'l' → logprob: -6.109895706176758
    7. 'lete' → logprob: -7.734895706176758
    8. '_l' → logprob: -8.484895706176758
    9. '(' → logprob: -8.734895706176758
    10. '__' → logprob: -8.859895706176758

Token 5: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012079726438969374
    2. '():' → logprob: -7.6262078285217285
    3. '(:' → logprob: -8.501208305358887
    4. '_' → logprob: -8.501208305358887
    5. ':' → logprob: -10.001208305358887
    6. '(_' → logprob: -10.126208305358887
    7. '(_:' → logprob: -10.126208305358887
    8. ' (' → logprob: -10.376208305358887
    9. '```' → logprob: -10.626208305358887
    10. '(a' → logprob: -11.126208305358887

Token 6: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8774921894073486
    2. ')' → logprob: -1.1274921894073486
    3. '):' → logprob: -1.3774921894073486
    4. '[' → logprob: -4.8774919509887695
    5. '[s' → logprob: -8.62749195098877
    6. ')s' → logprob: -9.25249195098877
    7. ',' → logprob: -10.12749195098877
    8. '(' → logprob: -10.12749195098877
    9. '[]):' → logprob: -10.62749195098877
    10. '_counts' → logprob: -11.75249195098877

Token 7: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6693785190582275
    2. '):' → logprob: -1.2943785190582275
    3. '[' → logprob: -1.5443785190582275
    4. ':' → logprob: -9.544378280639648
    5. ',' → logprob: -9.544378280639648
    6. '   ' → logprob: -9.794378280639648
    7. '<|end|>' → logprob: -10.419378280639648
    8. '[token' → logprob: -10.794378280639648
    9. '[
' → logprob: -11.044378280639648
    10. '```' → logprob: -11.044378280639648

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010041738860309124
    2. ':
' → logprob: -5.2600417137146
    3. '   ' → logprob: -6.6350417137146
    4. '```' → logprob: -6.8850417137146
    5. '(:' → logprob: -7.1350417137146
    6. '(' → logprob: -7.1350417137146
    7. '():' → logprob: -7.6350417137146
    8. '    
' → logprob: -10.260042190551758
    9. '`:' → logprob: -10.385042190551758
    10. '(
' → logprob: -10.760042190551758

Token 9: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05280967056751251
    2. '```' → logprob: -3.677809715270996
    3. '   ' → logprob: -5.052809715270996
    4. '\' → logprob: -5.802809715270996
    5. ':
' → logprob: -6.052809715270996
    6. '(' → logprob: -6.052809715270996
    7. '[' → logprob: -6.052809715270996
    8. '`' → logprob: -6.177809715270996
    9. '\n' → logprob: -6.552809715270996
    10. ''' → logprob: -6.677809715270996

Token 10: ' Retour' (ID: 146830)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.36119750142097473
    2. '   ' → logprob: -2.7361974716186523
    3. 'for' → logprob: -2.9861974716186523
    4. ' ' → logprob: -3.2361974716186523
    5. ' return' → logprob: -3.2361974716186523
    6. '    ' → logprob: -3.3611974716186523
    7. ' ```' → logprob: -3.7361974716186523
    8. '```' → logprob: -5.111197471618652
    9. ' pass' → logprob: -5.486197471618652
    10. 'return' → logprob: -5.486197471618652

Token 11: 'ne' (ID: 611)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005343250813893974
    2. 'u' → logprob: -7.750534534454346
    3. ' n' → logprob: -10.375534057617188
    4. ' ' → logprob: -10.625534057617188
    5. '   ' → logprob: -11.000534057617188
    6. 'ner' → logprob: -11.125534057617188
    7. 'e' → logprob: -12.000534057617188
    8. 'a' → logprob: -13.375534057617188
    9. 'ne' → logprob: -13.500534057617188
    10. ' True' → logprob: -13.625534057617188

Token 12: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.054672256112098694
    2. ' ' → logprob: -3.0546722412109375
    3. 'True' → logprob: -5.5546722412109375
    4. '  ' → logprob: -7.1796722412109375
    5. ' False' → logprob: -7.3046722412109375
    6. 'e' → logprob: -8.429672241210938
    7. ''' → logprob: -8.679672241210938
    8. 's' → logprob: -9.554672241210938
    9. '_' → logprob: -9.804672241210938
    10. '(True' → logprob: -10.554672241210938

Token 13: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3130307197570801
    2. '   ' → logprob: -2.43803071975708
    3. ',' → logprob: -2.56303071975708
    4. '    ' → logprob: -3.43803071975708
    5. '(' → logprob: -3.93803071975708
    6. '[' → logprob: -4.31303071975708
    7. '```' → logprob: -4.56303071975708
    8. '  ' → logprob: -5.43803071975708
    9. ''' → logprob: -5.56303071975708
    10. '_' → logprob: -5.68803071975708

Token 14: ' on' (ID: 402)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.3824148178100586
    2. ' any' → logprob: -1.5074148178100586
    3. ' ' → logprob: -2.0074148178100586
    4. '   ' → logprob: -2.1324148178100586
    5. ' counts' → logprob: -2.2574148178100586
    6. ' toutes' → logprob: -3.3824148178100586
    7. ' True' → logprob: -3.7574148178100586
    8. '    ' → logprob: -4.007414817810059
    9. ' tous' → logprob: -4.132414817810059
    10. '  ' → logprob: -4.257414817810059

Token 15: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.031284164637327194
    2. 'pe' → logprob: -4.156284332275391
    3. ' a' → logprob: -5.281284332275391
    4. ' peux' → logprob: -5.531284332275391
    5. ' ' → logprob: -5.781284332275391
    6. ' trouve' → logprob: -6.906284332275391
    7. '   ' → logprob: -7.781284332275391
    8. '[' → logprob: -8.15628433227539
    9. ' can' → logprob: -8.78128433227539
    10. ' ' → logprob: -8.90628433227539

Token 16: ' partition' (ID: 31512)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3848995864391327
    2. ' ' → logprob: -1.634899616241455
    3. ' form' → logprob: -3.134899616241455
    4. '   ' → logprob: -3.884899616241455
    5. ' former' → logprob: -4.759899616241455
    6. '    ' → logprob: -5.134899616241455
    7. ' _' → logprob: -5.134899616241455
    8. '  ' → logprob: -5.134899616241455
    9. ' continuer' → logprob: -5.259899616241455
    10. ' formar' → logprob: -6.134899616241455

Token 17: 'ner' (ID: 1247)
  Prédit: 'ner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.31666049361228943
    2. 'er' → logprob: -1.3166605234146118
    3. 'r' → logprob: -6.566660404205322
    4. 'nner' → logprob: -7.441660404205322
    5. '_' → logprob: -7.566660404205322
    6. ' er' → logprob: -8.69166088104248
    7. '   ' → logprob: -8.81666088104248
    8. 'n' → logprob: -8.81666088104248
    9. ' ner' → logprob: -8.81666088104248
    10. ' ' → logprob: -9.06666088104248

Token 18: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17571555078029633
    2. '_' → logprob: -2.175715446472168
    3. '   ' → logprob: -4.300715446472168
    4. ' en' → logprob: -4.300715446472168
    5. ' counts' → logprob: -5.425715446472168
    6. '(' → logprob: -5.550715446472168
    7. '```' → logprob: -6.050715446472168
    8. ' _' → logprob: -6.675715446472168
    9. '  ' → logprob: -6.800715446472168
    10. ' (' → logprob: -6.925715446472168

Token 19: ' cartes' (ID: 70753)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.6862449049949646
    2. 'counts' → logprob: -0.9362449049949646
    3. 'd' → logprob: -3.5612449645996094
    4. ' éléments' → logprob: -4.061244964599609
    5. ' comptes' → logprob: -5.061244964599609
    6. ' valeurs' → logprob: -5.311244964599609
    7. ' compte' → logprob: -5.436244964599609
    8. ' elements' → logprob: -5.436244964599609
    9. 'count' → logprob: -6.186244964599609
    10. ' cartes' → logprob: -6.186244964599609

Token 20: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.07881432771682739
    2. '   ' → logprob: -2.7038142681121826
    3. ' ' → logprob: -5.203814506530762
    4. '_' → logprob: -6.953814506530762
    5. ',' → logprob: -7.203814506530762
    6. 'en' → logprob: -7.328814506530762
    7. ' _' → logprob: -8.828814506530762
    8. '    ' → logprob: -8.953814506530762
    9. ' ,' → logprob: -9.078814506530762
    10. '[' → logprob: -9.203814506530762

Token 21: ' tris' (ID: 183328)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.9150171279907227
    2. ' trip' → logprob: -1.0400171279907227
    3. ' trois' → logprob: -2.0400171279907227
    4. '   ' → logprob: -3.2900171279907227
    5. 'trip' → logprob: -3.7900171279907227
    6. ' triples' → logprob: -3.9150171279907227
    7. '```' → logprob: -4.415017127990723
    8. '3' → logprob: -5.040017127990723
    9. '_trip' → logprob: -5.040017127990723
    10. ' ' → logprob: -5.540017127990723

Token 22: ' selon' (ID: 27571)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0865603685379028
    2. '   ' → logprob: -1.3365603685379028
    3. 's' → logprob: -1.9615603685379028
    4. 'def' → logprob: -1.9615603685379028
    5. ':' → logprob: -3.4615602493286133
    6. 'e' → logprob: -4.461560249328613
    7. 'es' → logprob: -4.461560249328613
    8. ' :' → logprob: -4.586560249328613
    9. 'p' → logprob: -4.711560249328613
    10. '    ' → logprob: -5.586560249328613

Token 23: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.3106284141540527
    2. '   ' → logprob: -1.4356284141540527
    3. ' la' → logprob: -2.0606284141540527
    4. ' des' → logprob: -2.3106284141540527
    5. '```' → logprob: -2.3106284141540527
    6. ' un' → logprob: -3.6856284141540527
    7. ' trois' → logprob: -3.6856284141540527
    8. ' le' → logprob: -3.9356284141540527
    9. '    ' → logprob: -4.185628414154053
    10. ' ' → logprob: -4.685628414154053

Token 24: ' règle' (ID: 115826)
  Prédit: ' règle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' règle' → logprob: -0.7159484028816223
    2. 'r' → logprob: -1.4659483432769775
    3. 'counts' → logprob: -2.7159483432769775
    4. ' valeur' → logprob: -3.8409483432769775
    5. 'count' → logprob: -3.8409483432769775
    6. 'val' → logprob: -3.9659483432769775
    7. ' règles' → logprob: -4.215948581695557
    8. ' couleur' → logprob: -4.465948581695557
    9. ' logique' → logprob: -4.465948581695557
    10. 'mé' → logprob: -4.465948581695557

Token 25: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7101340889930725
    2. ':' → logprob: -1.4601340293884277
    3. '    ' → logprob: -1.9601340293884277
    4. ' :' → logprob: -2.2101340293884277
    5. ' ' → logprob: -4.460134029388428
    6. ',' → logprob: -4.835134029388428
    7. '  ' → logprob: -6.835134029388428
    8. '       ' → logprob: -6.835134029388428
    9. ' ,' → logprob: -7.210134029388428
    10. ' :
' → logprob: -7.710134029388428

Token 26: 'trip' (ID: 51122)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39423492550849915
    2. ' )' → logprob: -1.3942348957061768
    3. '   ' → logprob: -2.7692348957061768
    4. ',' → logprob: -5.269235134124756
    5. '    ' → logprob: -6.019235134124756
    6. 'def' → logprob: -6.519235134124756
    7. ' ,' → logprob: -7.019235134124756
    8. '):' → logprob: -7.269235134124756
    9. ' ' → logprob: -7.644235134124756
    10. '  ' → logprob: -7.894235134124756

Token 27: 'lets' (ID: 12222)
  Prédit: 'lets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lets' → logprob: -0.22907856106758118
    2. 'let' → logprob: -1.6040785312652588
    3. 'les' → logprob: -5.854078769683838
    4. 'le' → logprob: -7.604078769683838
    5. ')' → logprob: -9.35407829284668
    6. ' )' → logprob: -10.22907829284668
    7. 'lete' → logprob: -10.35407829284668
    8. 'lette' → logprob: -10.85407829284668
    9. 'l' → logprob: -10.97907829284668
    10. 'letes' → logprob: -11.10407829284668

Token 28: ' ident' (ID: 3951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08202309161424637
    2. ',' → logprob: -3.7070231437683105
    3. ' )' → logprob: -3.9570231437683105
    4. '   ' → logprob: -4.0820231437683105
    5. '),' → logprob: -5.4570231437683105
    6. '):' → logprob: -5.4570231437683105
    7. ' ou' → logprob: -5.8320231437683105
    8. 's' → logprob: -6.3320231437683105
    9. 'def' → logprob: -6.8320231437683105
    10. ' or' → logprob: -7.4570231437683105

Token 29: 'iques' (ID: 11654)
  Prédit: 'iques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iques' → logprob: -0.09960828721523285
    2. 's' → logprob: -2.9746081829071045
    3. 'ique' → logprob: -3.4746081829071045
    4. 'ques' → logprob: -5.724608421325684
    5. ')' → logprob: -6.099608421325684
    6. '```' → logprob: -6.349608421325684
    7. 'ic' → logprob: -6.599608421325684
    8. 'ical' → logprob: -6.599608421325684
    9. 'f' → logprob: -8.224608421325684
    10. 'c' → logprob: -8.474608421325684

Token 30: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19044482707977295
    2. ' ou' → logprob: -2.5654449462890625
    3. ' )' → logprob: -3.3154449462890625
    4. ' or' → logprob: -3.6904449462890625
    5. ',' → logprob: -3.9404449462890625
    6. 's' → logprob: -5.8154449462890625
    7. '  ' → logprob: -5.8154449462890625
    8. '   ' → logprob: -5.9404449462890625
    9. 'ou' → logprob: -6.3154449462890625
    10. 'def' → logprob: -6.5654449462890625

Token 31: ' sé' (ID: 7462)
  Prédit: ' suites'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suites' → logprob: -1.4730581045150757
    2. ' sé' → logprob: -1.7230581045150757
    3. 'sé' → logprob: -1.9730581045150757
    4. 's' → logprob: -1.9730581045150757
    5. ' cons' → logprob: -2.4730582237243652
    6. 'suite' → logprob: -2.8480582237243652
    7. 'se' → logprob: -2.8480582237243652
    8. '   ' → logprob: -3.2230582237243652
    9. ' sequences' → logprob: -4.348058223724365
    10. ' une' → logprob: -5.348058223724365

Token 32: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.08880859613418579
    2. 'quence' → logprob: -2.713808536529541
    3. 'ries' → logprob: -4.963808536529541
    4. 'qu' → logprob: -6.213808536529541
    5. 'par' → logprob: -6.463808536529541
    6. '   ' → logprob: -6.463808536529541
    7. 'quent' → logprob: -6.588808536529541
    8. 'rie' → logprob: -6.588808536529541
    9. 'q' → logprob: -7.088808536529541
    10. '```' → logprob: -7.463808536529541

Token 33: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.724075198173523
    2. ' de' → logprob: -0.849075198173523
    3. 'de' → logprob: -2.5990753173828125
    4. ',' → logprob: -5.4740753173828125
    5. ' of' → logprob: -6.3490753173828125
    6. ' )' → logprob: -6.3490753173828125
    7. '),' → logprob: -6.5990753173828125
    8. ' d' → logprob: -6.8490753173828125
    9. 'd' → logprob: -7.7240753173828125
    10. '```' → logprob: -7.8490753173828125

Token 34: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20737268030643463
    2. '   ' → logprob: -2.4573726654052734
    3. ' :' → logprob: -3.3323726654052734
    4. '    ' → logprob: -4.207372665405273
    5. ' ' → logprob: -4.457372665405273
    6. '
' → logprob: -4.832372665405273
    7. '\' → logprob: -5.082372665405273
    8. '\n' → logprob: -5.207372665405273
    9. ':
' → logprob: -5.207372665405273
    10. '```' → logprob: -5.707372665405273

Token 35: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3233948051929474
    2. ' ' → logprob: -2.323394775390625
    3. 'n' → logprob: -3.198394775390625
    4. '    ' → logprob: -3.323394775390625
    5. ' for' → logprob: -3.448394775390625
    6. 'for' → logprob: -3.823394775390625
    7. 'i' → logprob: -4.573394775390625
    8. 'c' → logprob: -4.948394775390625
    9. '     
' → logprob: -4.948394775390625
    10. ' 
' → logprob: -5.698394775390625

Token 36: ' back' (ID: 1602)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.39508649706840515
    2. ' can' → logprob: -1.7700865268707275
    3. ' helper' → logprob: -2.0200865268707275
    4. ' valid' → logprob: -4.270086288452148
    5. ' possible' → logprob: -5.520086288452148
    6. ' back' → logprob: -6.645086288452148
    7. ' ' → logprob: -7.395086288452148
    8. ' check' → logprob: -7.395086288452148
    9. 'can' → logprob: -7.520086288452148
    10. '_' → logprob: -8.020086288452148

Token 37: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -0.4624479115009308
    2. 't' → logprob: -1.7124478816986084
    3. 'tracking' → logprob: -2.3374478816986084
    4. 'tr' → logprob: -2.9624478816986084
    5. 'tra' → logprob: -3.4624478816986084
    6. 'trace' → logprob: -5.7124481201171875
    7. '_' → logprob: -5.9624481201171875
    8. 'tract' → logprob: -6.5874481201171875
    9. 'tracker' → logprob: -6.7124481201171875
    10. '_track' → logprob: -7.8374481201171875

Token 38: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006091015879064798
    2. '(count' → logprob: -5.631091117858887
    3. ' (' → logprob: -6.131091117858887
    4. '   ' → logprob: -10.006091117858887
    5. '(
' → logprob: -10.381091117858887
    6. '(s' → logprob: -10.381091117858887
    7. '('' → logprob: -10.506091117858887
    8. '((' → logprob: -10.631091117858887
    9. '(i' → logprob: -10.881091117858887
    10. '  ' → logprob: -11.256091117858887

Token 39: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6166903151315637e-05
    2. ')' → logprob: -11.625016212463379
    3. '(' → logprob: -12.125016212463379
    4. ' s' → logprob: -14.750016212463379
    5. '   ' → logprob: -14.875016212463379
    6. '[' → logprob: -15.000016212463379
    7. ',' → logprob: -16.125015258789062
    8. '(s' → logprob: -16.375015258789062
    9. ')s' → logprob: -16.500015258789062
    10. '_s' → logprob: -16.750015258789062

Token 40: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11339985579252243
    2. ',' → logprob: -2.2383997440338135
    3. ')' → logprob: -8.113399505615234
    4. '):
' → logprob: -9.113399505615234
    5. ':' → logprob: -9.613399505615234
    6. ' ):' → logprob: -10.113399505615234
    7. '[' → logprob: -10.863399505615234
    8. ' ,' → logprob: -11.488399505615234
    9. '   ' → logprob: -11.863399505615234
    10. ' ' → logprob: -12.488399505615234

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3475174009799957
    2. ':' → logprob: -2.222517490386963
    3. '<|end|>' → logprob: -2.347517490386963
    4. '    ' → logprob: -3.347517490386963
    5. ' ' → logprob: -4.472517490386963
    6. '        ' → logprob: -4.597517490386963
    7. '   ' → logprob: -4.597517490386963
    8. '(' → logprob: -4.847517490386963
    9. ')' → logprob: -5.472517490386963
    10. '      ' → logprob: -6.597517490386963

Token 42: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3064031600952148
    2. ' for' → logprob: -1.4314031600952148
    3. '        ' → logprob: -1.5564031600952148
    4. '       ' → logprob: -1.9314031600952148
    5. 'for' → logprob: -3.181403160095215
    6. '    ' → logprob: -3.806403160095215
    7. ' 
' → logprob: -4.056403160095215
    8. '        
' → logprob: -4.306403160095215
    9. '  
' → logprob: -5.306403160095215
    10. '  ' → logprob: -5.431403160095215

Token 43: ' Trou' (ID: 58947)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24339990317821503
    2. '    ' → logprob: -1.9933998584747314
    3. '        ' → logprob: -3.8683998584747314
    4. '   ' → logprob: -4.1184000968933105
    5. '       ' → logprob: -4.8684000968933105
    6. '<|end|>' → logprob: -4.8684000968933105
    7. ' for' → logprob: -5.1184000968933105
    8. '  ' → logprob: -5.3684000968933105
    9. 'for' → logprob: -5.7434000968933105
    10. ')' → logprob: -5.8684000968933105

Token 44: 've' (ID: 737)
  Prédit: 've'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 've' → logprob: -0.003046642756089568
    2. 'ver' → logprob: -5.87804651260376
    3. 'v' → logprob: -9.628046989440918
    4. 'ves' → logprob: -9.753046989440918
    5. 'vez' → logprob: -10.378046989440918
    6. '   ' → logprob: -10.878046989440918
    7. 'vera' → logprob: -11.003046989440918
    8. 'vé' → logprob: -11.378046989440918
    9. 'ne' → logprob: -11.753046989440918
    10. '       ' → logprob: -12.503046989440918

Token 45: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11150210350751877
    2. '(' → logprob: -2.736502170562744
    3. '   ' → logprob: -4.236502170562744
    4. '  ' → logprob: -4.986502170562744
    5. ' (' → logprob: -4.986502170562744
    6. '    ' → logprob: -5.986502170562744
    7. ')' → logprob: -6.111502170562744
    8. '[' → logprob: -6.361502170562744
    9. 's' → logprob: -6.611502170562744
    10. ' )' → logprob: -6.861502170562744

Token 46: ' prochain' (ID: 52413)
  Prédit: ' premier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premier' → logprob: -1.0014493465423584
    2. 'prem' → logprob: -1.1264493465423584
    3. ' next' → logprob: -2.3764493465423584
    4. ' first' → logprob: -2.7514493465423584
    5. 'next' → logprob: -2.7514493465423584
    6. 'first' → logprob: -3.2514493465423584
    7. ' prochain' → logprob: -3.5014493465423584
    8. ' prochaine' → logprob: -5.2514495849609375
    9. 'token' → logprob: -6.2514495849609375
    10. 'pro' → logprob: -6.2514495849609375

Token 47: ' index' (ID: 3472)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4124830365180969
    2. '_' → logprob: -1.5374829769134521
    3. ' i' → logprob: -2.537482976913452
    4. ' _' → logprob: -4.037483215332031
    5. ' token' → logprob: -5.037483215332031
    6. ' card' → logprob: -5.662483215332031
    7. '  ' → logprob: -6.037483215332031
    8. 'i' → logprob: -6.412483215332031
    9. 'token' → logprob: -6.412483215332031
    10. '    ' → logprob: -6.537483215332031

Token 48: ' avec' (ID: 3937)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3033311367034912
    2. '_' → logprob: -1.5533311367034912
    3. '(' → logprob: -2.178331136703491
    4. '    ' → logprob: -2.428331136703491
    5. ' (' → logprob: -2.928331136703491
    6. ',' → logprob: -3.303331136703491
    7. ' i' → logprob: -3.303331136703491
    8. ' =' → logprob: -3.428331136703491
    9. '       ' → logprob: -3.553331136703491
    10. '        ' → logprob: -3.678331136703491

Token 49: ' count' (ID: 3605)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6423805952072144
    2. ' une' → logprob: -1.7673805952072144
    3. ' counts' → logprob: -2.142380714416504
    4. ' ' → logprob: -2.767380714416504
    5. ' count' → logprob: -3.267380714416504
    6. 'counts' → logprob: -3.642380714416504
    7. 'count' → logprob: -3.892380714416504
    8. ' des' → logprob: -4.767380714416504
    9. '>' → logprob: -5.017380714416504
    10. ' non' → logprob: -5.267380714416504

Token 50: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6672607660293579
    2. 's' → logprob: -0.7922607660293579
    3. '[' → logprob: -4.292260646820068
    4. '>' → logprob: -4.417260646820068
    5. '[s' → logprob: -5.667260646820068
    6. ' ' → logprob: -6.042260646820068
    7. '[i' → logprob: -7.167260646820068
    8. '   ' → logprob: -7.542260646820068
    9. '[index' → logprob: -8.042261123657227
    10. ' ==' → logprob: -9.042261123657227

Token 51: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04859282076358795
    2. ' ' → logprob: -3.0485928058624268
    3. ' ' → logprob: -12.298592567443848
    4. '1' → logprob: -15.048592567443848
    5. '  ' → logprob: -15.048592567443848
    6. '```' → logprob: -15.548592567443848
    7. '>' → logprob: -16.923593521118164
    8. '   ' → logprob: -17.298593521118164
    9. '[' → logprob: -17.423593521118164
    10. '`' → logprob: -17.548593521118164

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '```' → logprob: -17.25010871887207
    4. '1' → logprob: -17.62510871887207
    5. '۰' → logprob: -18.12510871887207
    6. ' ' → logprob: -18.50010871887207
    7. '  ' → logprob: -19.12510871887207
    8. '٠' → logprob: -19.87510871887207
    9. '>' → logprob: -20.25010871887207
    10. '０' → logprob: -20.37510871887207

Token 53: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12073341757059097
    2. '       ' → logprob: -2.7457334995269775
    3. ' :' → logprob: -3.2457334995269775
    4. ' ' → logprob: -5.370733261108398
    5. '        
' → logprob: -6.870733261108398
    6. ',' → logprob: -7.370733261108398
    7. '        ' → logprob: -7.370733261108398
    8. ':
' → logprob: -7.620733261108398
    9. '):' → logprob: -7.620733261108398
    10. '<|end|>' → logprob: -7.745733261108398

Token 54: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6062484383583069
    2. '       ' → logprob: -0.8562484383583069
    3. ' :' → logprob: -3.731248378753662
    4. '   ' → logprob: -6.231248378753662
    5. ' ' → logprob: -7.106248378753662
    6. '):' → logprob: -7.731248378753662
    7. '    ' → logprob: -7.731248378753662
    8. ',' → logprob: -7.731248378753662
    9. '        ' → logprob: -7.856248378753662
    10. '<|end|>' → logprob: -8.10624885559082

Token 55: ' for' (ID: 395)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5615946054458618
    2. '       ' → logprob: -1.9365946054458618
    3. ' for' → logprob: -2.0615944862365723
    4. 'i' → logprob: -2.5615944862365723
    5. ' idx' → logprob: -4.061594486236572
    6. 'for' (adapté à ' for') → logprob: -4.311594486236572
    7. 'n' → logprob: -4.436594486236572
    8. 'idx' → logprob: -4.811594486236572
    9. '           ' → logprob: -5.186594486236572
    10. ' ' → logprob: -5.186594486236572

Token 56: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00011844364780699834
    2. 'i' → logprob: -9.750118255615234
    3. ' ' → logprob: -10.375118255615234
    4. ' idx' → logprob: -10.750118255615234
    5. ' index' → logprob: -12.375118255615234
    6. '	i' → logprob: -13.250118255615234
    7. ' ' → logprob: -14.375118255615234
    8. ' _' → logprob: -15.375118255615234
    9. ' ```' → logprob: -15.750118255615234
    10. ' count' → logprob: -16.375118255615234

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013319060672074556
    2. 'in' → logprob: -7.126331806182861
    3. ' ' → logprob: -7.876331806182861
    4. ',' → logprob: -9.50133228302002
    5. '  ' → logprob: -10.37633228302002
    6. ' ,' → logprob: -10.50133228302002
    7. '   ' → logprob: -13.00133228302002
    8. '    ' → logprob: -13.12633228302002
    9. '<|end|>' → logprob: -13.12633228302002
    10. ' i' → logprob: -13.37633228302002

Token 58: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00038825106457807124
    2. 'range' → logprob: -8.125388145446777
    3. ' counts' → logprob: -9.625388145446777
    4. ' len' → logprob: -11.375388145446777
    5. ' ' → logprob: -11.750388145446777
    6. ' xrange' → logprob: -12.875388145446777
    7. '	range' → logprob: -13.625388145446777
    8. '(range' → logprob: -13.875388145446777
    9. ' in' → logprob: -14.250388145446777
    10. ',' → logprob: -15.250388145446777

Token 59: '(' (ID: 7)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.12434682250022888
    2. '(' → logprob: -2.2493467330932617
    3. ' (' → logprob: -4.874346733093262
    4. ' len' → logprob: -5.749346733093262
    5. 'len' → logprob: -8.499346733093262
    6. ' )' → logprob: -9.874346733093262
    7. ' ' → logprob: -9.874346733093262
    8. '<len' → logprob: -9.874346733093262
    9. '	len' → logprob: -9.999346733093262
    10. ')' → logprob: -10.124346733093262

Token 60: '1' (ID: 16)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0007204149151220918
    2. ' len' → logprob: -8.000720024108887
    3. '(len' → logprob: -9.125720024108887
    4. '13' → logprob: -9.375720024108887
    5. '14' → logprob: -9.500720024108887
    6. '9' → logprob: -10.375720024108887
    7. '15' → logprob: -10.750720024108887
    8. '27' → logprob: -10.875720024108887
    9. '1' → logprob: -11.375720024108887
    10. '26' → logprob: -12.125720024108887

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20379407703876495
    2. ' ,' → logprob: -1.7037941217422485
    3. ',len' → logprob: -6.078794002532959
    4. '(len' → logprob: -10.578794479370117
    5. '6' → logprob: -10.828794479370117
    6. 'len' → logprob: -11.953794479370117
    7. '1' → logprob: -12.203794479370117
    8. ' ' → logprob: -12.453794479370117
    9. '4' → logprob: -12.578794479370117
    10. '0' → logprob: -12.703794479370117

Token 62: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4800674319267273
    2. 'len' → logprob: -1.105067491531372
    3. '14' → logprob: -3.230067491531372
    4. '34' → logprob: -5.855067253112793
    5. ' len' → logprob: -5.855067253112793
    6. '15' → logprob: -6.230067253112793
    7. '35' → logprob: -7.105067253112793
    8. '40' → logprob: -7.980067253112793
    9. '30' → logprob: -7.980067253112793
    10. '```' → logprob: -8.230067253112793

Token 63: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2540283501148224
    2. 'len' → logprob: -1.8790283203125
    3. '14' → logprob: -3.0040283203125
    4. '34' → logprob: -4.8790283203125
    5. '30' → logprob: -5.3790283203125
    6. '40' → logprob: -5.8790283203125
    7. '35' → logprob: -6.1290283203125
    8. '28' → logprob: -6.5040283203125
    9. '15' → logprob: -7.1290283203125
    10. '11' → logprob: -8.0040283203125

Token 64: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005302300211042166
    2. '):
' → logprob: -5.255302429199219
    3. ':' → logprob: -10.505302429199219
    4. ')' → logprob: -10.880302429199219
    5. ' ):' → logprob: -10.880302429199219
    6. '   ' → logprob: -14.255302429199219
    7. '):
' → logprob: -14.505302429199219
    8. '       ' → logprob: -14.880302429199219
    9. '0' → logprob: -15.130302429199219
    10. '+' → logprob: -15.130302429199219

Token 65: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39794328808784485
    2. ':' → logprob: -1.1479432582855225
    3. '           ' → logprob: -5.897943496704102
    4. '<|end|>' → logprob: -6.022943496704102
    5. ':
' → logprob: -6.272943496704102
    6. ' :' → logprob: -6.397943496704102
    7. ' if' → logprob: -7.397943496704102
    8. '   ' → logprob: -7.772943496704102
    9. '        ' → logprob: -8.022943496704102
    10. ' ' → logprob: -8.772943496704102

Token 66: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20218028128147125
    2. 'if' (adapté à ' if') → logprob: -1.82718026638031
    3. '           ' → logprob: -4.0771803855896
    4. '       ' → logprob: -5.7021803855896
    5. '               ' → logprob: -7.2021803855896
    6. ' ' → logprob: -7.5771803855896
    7. '        ' → logprob: -8.202179908752441
    8. '<|end|>' → logprob: -8.702179908752441
    9. '   ' → logprob: -9.952179908752441
    10. '            ' → logprob: -10.327179908752441

Token 67: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.0059442054480314255
    2. 'counts' → logprob: -5.13094425201416
    3. 'count' → logprob: -11.63094425201416
    4. ' count' → logprob: -12.00594425201416
    5. '_counts' → logprob: -14.88094425201416
    6. 'Counts' → logprob: -16.005943298339844
    7. ' ' → logprob: -17.255943298339844
    8. '	count' → logprob: -17.880943298339844
    9. ' ' → logprob: -18.255943298339844
    10. ' Counts' → logprob: -18.380943298339844

Token 68: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.8206473871250637e-05
    2. '[' → logprob: -10.500028610229492
    3. '```' → logprob: -15.750028610229492
    4. '[I' → logprob: -15.875028610229492
    5. 'i' → logprob: -16.000028610229492
    6. ' [' → logprob: -16.500028610229492
    7. '][' → logprob: -18.000028610229492
    8. 's' → logprob: -18.250028610229492
    9. '[j' → logprob: -18.500028610229492
    10. '[
' → logprob: -18.625028610229492

Token 69: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02715025097131729
    2. ' ]' → logprob: -4.2771501541137695
    3. ']>' → logprob: -4.4021501541137695
    4. ' >' → logprob: -7.9021501541137695
    5. '>' → logprob: -8.27715015411377
    6. '[' → logprob: -11.15215015411377
    7. '']' → logprob: -12.15215015411377
    8. '"]' → logprob: -13.02715015411377
    9. ' ' → logprob: -13.65215015411377
    10. '">' → logprob: -13.77715015411377

Token 70: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.12697356939315796
    2. '>' → logprob: -2.1269736289978027
    3. ')>' → logprob: -11.251973152160645
    4. ')' → logprob: -11.501973152160645
    5. '[' → logprob: -11.501973152160645
    6. '">' → logprob: -12.876973152160645
    7. ' ' → logprob: -12.876973152160645
    8. ']>' → logprob: -13.251973152160645
    9. ']' → logprob: -13.626973152160645
    10. ' ' → logprob: -14.376973152160645

Token 71: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3868798017501831
    2. ' ' → logprob: -1.136879801750183
    3. '<|end|>' → logprob: -11.886879920959473
    4. ' ' → logprob: -14.261879920959473
    5. '>' → logprob: -14.886879920959473
    6. '<|end|>' → logprob: -15.261879920959473
    7. '  ' → logprob: -16.261878967285156
    8. '1' → logprob: -16.386878967285156
    9. '=' → logprob: -16.574378967285156
    10. '۰' → logprob: -16.636878967285156

Token 72: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '۰' → logprob: -19.00004005432129
    4. ' ' → logprob: -19.62504005432129
    5. '>' → logprob: -20.75004005432129
    6. '  ' → logprob: -20.75004005432129
    7. '```' → logprob: -21.00004005432129
    8. '<|end|>' → logprob: -21.00004005432129
    9. '1' → logprob: -21.12504005432129
    10. '٠' → logprob: -21.12504005432129

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004599823441822082
    2. ' :' → logprob: -8.375459671020508
    3. ':
' → logprob: -9.000459671020508
    4. '):' → logprob: -9.375459671020508
    5. ':return' → logprob: -11.250459671020508
    6. ')' → logprob: -13.375459671020508
    7. ',' → logprob: -13.500459671020508
    8. '           ' → logprob: -13.750459671020508
    9. '<|end|>' → logprob: -14.125459671020508
    10. '               ' → logprob: -14.375459671020508

Token 74: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4423980712890625
    2. ':' → logprob: -1.1923980712890625
    3. ' :' → logprob: -3.3173980712890625
    4. '                ' → logprob: -5.3173980712890625
    5. '           ' → logprob: -5.3173980712890625
    6. ':
' → logprob: -5.9423980712890625
    7. '            ' → logprob: -6.3173980712890625
    8. '                               ' → logprob: -7.6923980712890625
    9. '):' → logprob: -7.6923980712890625
    10. ' :
' → logprob: -7.8173980712890625

Token 75: ' break' (ID: 2338)
  Prédit: '                '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.3503569960594177
    2. '               ' → logprob: -1.4753570556640625
    3. ' :' → logprob: -3.4753570556640625
    4. '            ' → logprob: -5.1003570556640625
    5. ' ' → logprob: -5.2253570556640625
    6. ':' → logprob: -5.3503570556640625
    7. '                   ' → logprob: -5.8503570556640625
    8. '                
' → logprob: -5.8503570556640625
    9. '                    ' → logprob: -5.9753570556640625
    10. ' break' → logprob: -6.1003570556640625

Token 76: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4248725473880768
    2. '       ' → logprob: -1.4248725175857544
    3. 'else' → logprob: -2.924872636795044
    4. ' else' → logprob: -3.049872636795044
    5. '    
' → logprob: -6.924872398376465
    6. ' 
' → logprob: -6.924872398376465
    7. '  
' → logprob: -7.299872398376465
    8. ':' → logprob: -7.674872398376465
    9. '        
' → logprob: -7.674872398376465
    10. '   ' → logprob: -8.424872398376465

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5278856754302979
    2. 'else' → logprob: -1.5278856754302979
    3. ' else' → logprob: -1.6528856754302979
    4. '
' → logprob: -7.402885437011719
    5. '   ' → logprob: -7.902885437011719
    6. '           ' → logprob: -8.902885437011719
    7. '        ' → logprob: -9.027885437011719
    8. '    
' → logprob: -9.402885437011719
    9. '	else' → logprob: -9.652885437011719
    10. '```' → logprob: -10.027885437011719

Token 78: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.10821614414453506
    2. 'else' (adapté à ' else') → logprob: -2.4832160472869873
    3. '       ' → logprob: -3.9832160472869873
    4. '   ' → logprob: -7.983216285705566
    5. '    ' → logprob: -10.108216285705566
    6. '        ' → logprob: -10.358216285705566
    7. ' ' → logprob: -11.233216285705566
    8. '	else' → logprob: -11.483216285705566
    9. ' ' → logprob: -11.733216285705566
    10. ':' → logprob: -12.608216285705566

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009264685213565826
    2. ':return' → logprob: -7.875926494598389
    3. ' :' → logprob: -8.00092601776123
    4. ':
' → logprob: -8.62592601776123
    5. '<|end|>' → logprob: -10.50092601776123
    6. '<|end|>' → logprob: -13.62592601776123
    7. ' :
' → logprob: -13.87592601776123
    8. ':void' → logprob: -15.12592601776123
    9. ':

' → logprob: -15.75092601776123
    10. '```' → logprob: -15.87592601776123

Token 80: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03691723197698593
    2. ' return' → logprob: -4.036917209625244
    3. '       ' → logprob: -4.286917209625244
    4. 'return' → logprob: -5.411917209625244
    5. '   ' → logprob: -8.286917686462402
    6. ' ' → logprob: -9.786917686462402
    7. '               ' → logprob: -10.036917686462402
    8. ':return' → logprob: -11.786917686462402
    9. '	return' → logprob: -12.161917686462402
    10. ' ' → logprob: -12.661917686462402

Token 81: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.18403825163841248
    2. ' True' → logprob: -2.0590381622314453
    3. 'return' (adapté à ' return') → logprob: -3.5590381622314453
    4. '       ' → logprob: -4.934038162231445
    5. '           ' → logprob: -5.809038162231445
    6. 'True' → logprob: -6.809038162231445
    7. ' ' → logprob: -8.059038162231445
    8. '   ' → logprob: -8.309038162231445
    9. ' 
' → logprob: -9.309038162231445
    10. '               ' → logprob: -10.559038162231445

Token 82: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.02324605919420719
    2. 'True' → logprob: -3.7732460498809814
    3. ' ' → logprob: -15.148245811462402
    4. ' ' → logprob: -15.273245811462402
    5. '(True' → logprob: -17.39824676513672
    6. ' False' → logprob: -18.14824676513672
    7. 'False' → logprob: -19.27324676513672
    8. ' Tru' → logprob: -19.39824676513672
    9. '   ' → logprob: -19.77324676513672
    10. '  ' → logprob: -20.27324676513672

Token 83: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6764136552810669
    2. '    
' → logprob: -1.801413655281067
    3. '        
' → logprob: -1.801413655281067
    4. ' 
' → logprob: -3.5514135360717773
    5. '   
' → logprob: -3.9264135360717773
    6. ' ' → logprob: -4.051413536071777
    7. '    ' → logprob: -4.176413536071777
    8. '   ' → logprob: -4.176413536071777
    9. '  
' → logprob: -4.551413536071777
    10. '     
' → logprob: -4.801413536071777

Token 84: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2122105360031128
    2. '        
' → logprob: -2.5872106552124023
    3. ' ' → logprob: -2.9622106552124023
    4. '        ' → logprob: -4.212210655212402
    5. '    ' → logprob: -4.212210655212402
    6. '   ' → logprob: -5.087210655212402
    7. '   
' → logprob: -5.587210655212402
    8. '    
' → logprob: -5.587210655212402
    9. ' 
' → logprob: -5.587210655212402
    10. '  ' → logprob: -5.712210655212402

Token 85: ' tous' (ID: 10688)
  Prédit: ' Toutes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Toutes' → logprob: -1.4782705307006836
    2. ' all' → logprob: -1.7282705307006836
    3. 'Toutes' → logprob: -1.8532705307006836
    4. 'All' → logprob: -2.1032705307006836
    5. 'Tous' → logprob: -2.2282705307006836
    6. ' Tous' → logprob: -3.4782705307006836
    7. ' All' → logprob: -3.7282705307006836
    8. '#' → logprob: -4.228270530700684
    9. ' toutes' → logprob: -4.228270530700684
    10. 'Tout' → logprob: -4.228270530700684

Token 86: ' trait' (ID: 15458)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7287988066673279
    2. 'les' → logprob: -1.1037988662719727
    3. ' counts' → logprob: -2.6037988662719727
    4. 'counts' → logprob: -2.7287988662719727
    5. 'count' → logprob: -3.9787988662719727
    6. 's' → logprob: -4.603798866271973
    7. 'cards' → logprob: -5.603798866271973
    8. ' ' → logprob: -5.853798866271973
    9. ' cards' → logprob: -5.978798866271973
    10. ' count' → logprob: -6.228798866271973

Token 87: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0024028855841606855
    2. 's' → logprob: -6.7524027824401855
    3. 'é' → logprob: -7.7524027824401855
    4. 'ements' → logprob: -8.877403259277344
    5. 'rés' → logprob: -9.002403259277344
    6. 'ments' → logprob: -9.127403259277344
    7. 'm' → logprob: -9.752403259277344
    8. 'ées' → logprob: -9.752403259277344
    9. 'ment' → logprob: -10.002403259277344
    10. 'ement' → logprob: -10.127403259277344

Token 88: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2643952965736389
    2. ' ' → logprob: -2.139395236968994
    3. '        
' → logprob: -3.139395236968994
    4. '        ' → logprob: -4.139395236968994
    5. '    ' → logprob: -4.514395236968994
    6. ' 
' → logprob: -4.889395236968994
    7. '   ' → logprob: -5.139395236968994
    8. '    
' → logprob: -5.264395236968994
    9. '  
' → logprob: -5.264395236968994
    10. '  ' → logprob: -5.639395236968994

Token 89: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2071951925754547
    2. '   ' → logprob: -2.457195281982422
    3. '        
' → logprob: -3.832195281982422
    4. ' 
' → logprob: -4.082195281982422
    5. '    ' → logprob: -4.207195281982422
    6. '    
' → logprob: -4.457195281982422
    7. ' ' → logprob: -4.457195281982422
    8. '     
' → logprob: -5.207195281982422
    9. '   
' → logprob: -5.457195281982422
    10. ':' → logprob: -5.957195281982422

Token 90: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7785810232162476
    2. '       ' → logprob: -1.2785810232162476
    3. 'c' → logprob: -2.903581142425537
    4. '#' (adapté à ' #') → logprob: -3.153581142425537
    5. ' if' → logprob: -3.278581142425537
    6. '   ' → logprob: -3.278581142425537
    7. 'i' → logprob: -3.403581142425537
    8. 'for' → logprob: -3.403581142425537
    9. '  ' → logprob: -5.653581142425537
    10. '    ' → logprob: -5.653581142425537

Token 91: ' Ess' (ID: 12256)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9274658560752869
    2. ' if' → logprob: -0.9274658560752869
    3. '       ' → logprob: -1.6774659156799316
    4. '   ' → logprob: -4.802465915679932
    5. '#' → logprob: -5.427465915679932
    6. ' for' → logprob: -6.177465915679932
    7. 'for' → logprob: -6.427465915679932
    8. ' i' → logprob: -6.927465915679932
    9. ' #' → logprob: -7.177465915679932
    10. 'i' → logprob: -7.302465915679932

Token 92: 'ayer' (ID: 1630)
  Prédit: 'ayer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ayer' → logprob: -0.013218345120549202
    2. 'aye' → logprob: -4.638218402862549
    3. 'ay' → logprob: -6.763218402862549
    4. '       ' → logprob: -7.138218402862549
    5. '   ' → logprob: -8.13821792602539
    6. 'a' → logprob: -8.38821792602539
    7. 'ayers' → logprob: -8.38821792602539
    8. 'uyer' → logprob: -8.51321792602539
    9. 'ayes' → logprob: -9.01321792602539
    10. 'AYER' → logprob: -9.63821792602539

Token 93: ' trip' (ID: 8831)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1028506755828857
    2. '    ' → logprob: -1.1028506755828857
    3. ' de' → logprob: -1.4778506755828857
    4. ' d' → logprob: -2.9778506755828857
    5. '   ' → logprob: -4.477850914001465
    6. ':' → logprob: -4.727850914001465
    7. '     
' → logprob: -4.727850914001465
    8. '        ' → logprob: -4.852850914001465
    9. ' :' → logprob: -5.477850914001465
    10. ' :
' → logprob: -6.227850914001465

Token 94: 'let' (ID: 1347)
  Prédit: 'plet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plet' → logprob: -0.8529555797576904
    2. 'let' → logprob: -1.3529555797576904
    3. '       ' → logprob: -2.4779555797576904
    4. '   ' → logprob: -2.9779555797576904
    5. 's' → logprob: -3.4779555797576904
    6. 't' → logprob: -3.8529555797576904
    7. 'lets' → logprob: -3.8529555797576904
    8. '           ' → logprob: -3.8529555797576904
    9. 'plets' → logprob: -3.9779555797576904
    10. 'p' → logprob: -5.1029558181762695

Token 95: ' ident' (ID: 3951)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03630020469427109
    2. ':' → logprob: -4.286300182342529
    3. '        ' → logprob: -4.536300182342529
    4. 's' → logprob: -6.036300182342529
    5. '   ' → logprob: -6.411300182342529
    6. ' if' → logprob: -6.661300182342529
    7. '    ' → logprob: -6.911300182342529
    8. '           ' → logprob: -7.036300182342529
    9. '(' → logprob: -7.161300182342529
    10. '        
' → logprob: -7.286300182342529

Token 96: 'ique' (ID: 2222)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5313725471496582
    2. 'que' → logprob: -1.6563725471496582
    3. 'ique' → logprob: -2.281372547149658
    4. 'iques' → logprob: -3.281372547149658
    5. 'ques' → logprob: -3.781372547149658
    6. '   ' → logprob: -4.031372547149658
    7. 'tiques' → logprob: -4.156372547149658
    8. '       ' → logprob: -5.531372547149658
    9. 'ti' → logprob: -5.656372547149658
    10. 'qu' → logprob: -5.781372547149658

Token 97: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0649288147687912
    2. ':' → logprob: -3.3149287700653076
    3. '        ' → logprob: -4.314929008483887
    4. '           ' → logprob: -5.814929008483887
    5. '        
' → logprob: -5.814929008483887
    6. '    ' → logprob: -6.689929008483887
    7. '   ' → logprob: -6.689929008483887
    8. ',' → logprob: -6.939929008483887
    9. ' :' → logprob: -7.564929008483887
    10. '      ' → logprob: -8.064929008483887

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003633804153650999
    2. '   ' → logprob: -6.503633975982666
    3. '        
' → logprob: -7.003633975982666
    4. ' if' → logprob: -8.878633499145508
    5. '           ' → logprob: -8.878633499145508
    6. '    ' → logprob: -8.878633499145508
    7. ':' → logprob: -9.128633499145508
    8. '        ' → logprob: -9.253633499145508
    9. ' ' → logprob: -9.253633499145508
    10. 'n' → logprob: -9.378633499145508

Token 99: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05150683969259262
    2. ' if' → logprob: -3.676506757736206
    3. '    ' → logprob: -4.801506996154785
    4. '        ' → logprob: -4.926506996154785
    5. 'if' (adapté à ' if') → logprob: -5.926506996154785
    6. ' ' → logprob: -5.926506996154785
    7. '   ' → logprob: -6.176506996154785
    8. '        
' → logprob: -7.676506996154785
    9. ' i' → logprob: -8.426506996154785
    10. ' 
' → logprob: -8.676506996154785

Token 100: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.0028267467860132456
    2. 'counts' → logprob: -5.877826690673828
    3. ' count' → logprob: -10.877826690673828
    4. 'count' → logprob: -12.877826690673828
    5. ' ' → logprob: -15.377826690673828
    6. '_counts' → logprob: -16.627826690673828
    7. ' ' → logprob: -17.627826690673828
    8. '	count' → logprob: -17.752826690673828
    9. '   ' → logprob: -18.127826690673828
    10. '(count' → logprob: -18.252826690673828

Token 101: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.684157026233152e-05
    2. '[' → logprob: -9.500077247619629
    3. ' [' → logprob: -13.375077247619629
    4. 'i' → logprob: -15.125077247619629
    5. ' i' → logprob: -16.375076293945312
    6. '[
' → logprob: -18.500076293945312
    7. '[index' → logprob: -18.875076293945312
    8. '[I' → logprob: -19.000076293945312
    9. '```' → logprob: -19.500076293945312
    10. ' ' → logprob: -19.500076293945312

Token 102: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03857910633087158
    2. ']>=' → logprob: -3.288578987121582
    3. ' >=' → logprob: -8.538578987121582
    4. ' ]' → logprob: -8.538578987121582
    5. ')' → logprob: -9.663578987121582
    6. '>=' → logprob: -10.288578987121582
    7. ')>=' → logprob: -10.538578987121582
    8. '[' → logprob: -10.913578987121582
    9. '']' → logprob: -14.413578987121582
    10. '[i' → logprob: -14.413578987121582

Token 103: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.02635522186756134
    2. '>=' → logprob: -3.651355266571045
    3. ')>=' → logprob: -10.651354789733887
    4. ' ' → logprob: -11.151354789733887
    5. ']>=' → logprob: -11.526354789733887
    6. '[' → logprob: -13.651354789733887
    7. ')' → logprob: -13.776354789733887
    8. '   ' → logprob: -14.026354789733887
    9. '>' → logprob: -14.026354789733887
    10. '    ' → logprob: -14.151354789733887

Token 104: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.08894404023885727
    2. ' ' → logprob: -2.4639439582824707
    3. '   ' → logprob: -13.213944435119629
    4. ' ' → logprob: -13.588944435119629
    5. '  ' → logprob: -14.588944435119629
    6. '```' → logprob: -15.151444435119629
    7. '۳' → logprob: -15.588944435119629
    8. '	' → logprob: -16.713943481445312
    9. '３' → logprob: -16.776443481445312
    10. ' ' → logprob: -16.776443481445312

Token 105: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.125009536743164
    4. '۳' → logprob: -16.750009536743164
    5. '```' → logprob: -17.187509536743164
    6. '৩' → logprob: -17.437509536743164
    7. '٣' → logprob: -17.875009536743164
    8. '३' → logprob: -18.000009536743164
    9. '３' → logprob: -18.500009536743164
    10. '  ' → logprob: -19.000009536743164

Token 106: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013701190473511815
    2. ':
' → logprob: -7.126369953155518
    3. ' :' → logprob: -7.876369953155518
    4. '):' → logprob: -8.876370429992676
    5. '       ' → logprob: -10.751370429992676
    6. ' :
' → logprob: -11.501370429992676
    7. '           ' → logprob: -12.376370429992676
    8. ')' → logprob: -12.876370429992676
    9. ' and' → logprob: -13.126370429992676
    10. '):
' → logprob: -13.126370429992676

Token 107: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012639016844332218
    2. '       ' → logprob: -5.387639045715332
    3. '
' → logprob: -6.262639045715332
    4. '               ' → logprob: -6.387639045715332
    5. '            
' → logprob: -6.887639045715332
    6. '            ' → logprob: -7.012639045715332
    7. ' 
' → logprob: -7.137639045715332
    8. '        ' → logprob: -7.887639045715332
    9. ':
' → logprob: -8.512639045715332
    10. ' :
' → logprob: -8.887639045715332

Token 108: ' counts' (ID: 28991)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5730465054512024
    2. ' counts' → logprob: -1.1980464458465576
    3. 'counts' (adapté à ' counts') → logprob: -2.8230464458465576
    4. '               ' → logprob: -3.0730464458465576
    5. ' 
' → logprob: -3.9480464458465576
    6. '       ' → logprob: -5.823046684265137
    7. '
' → logprob: -6.198046684265137
    8. '            
' → logprob: -6.698046684265137
    9. ' ' → logprob: -7.323046684265137
    10. 'count' → logprob: -7.948046684265137

Token 109: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.2166411478538066e-05
    2. '[' → logprob: -9.875052452087402
    3. ' [' → logprob: -14.375052452087402
    4. 'i' → logprob: -16.875051498413086
    5. '[I' → logprob: -17.000051498413086
    6. ' i' → logprob: -17.625051498413086
    7. '[index' → logprob: -18.625051498413086
    8. '   ' → logprob: -18.875051498413086
    9. '```' → logprob: -19.000051498413086
    10. ' ' → logprob: -19.000051498413086

Token 110: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004330532974563539
    2. '[i' → logprob: -8.375432968139648
    3. ' ]' → logprob: -9.000432968139648
    4. ']-' → logprob: -9.625432968139648
    5. '[' → logprob: -11.625432968139648
    6. '"]' → logprob: -14.250432968139648
    7. '           ' → logprob: -14.250432968139648
    8. '-' → logprob: -14.375432968139648
    9. ' -=' → logprob: -14.500432968139648
    10. '']' → logprob: -14.625432968139648

Token 111: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.0677684023976326
    2. '-=' → logprob: -2.8177683353424072
    3. '-' → logprob: -5.192768573760986
    4. '    ' → logprob: -9.317768096923828
    5. '[' → logprob: -10.317768096923828
    6. ' -' → logprob: -10.442768096923828
    7. '        ' → logprob: -11.317768096923828
    8. '           ' → logprob: -11.567768096923828
    9. '   ' → logprob: -11.692768096923828
    10. '[-' → logprob: -11.817768096923828

Token 112: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.009756204672157764
    2. ' ' → logprob: -4.634756088256836
    3. '1' → logprob: -16.509756088256836
    4. '   ' → logprob: -16.884756088256836
    5. '۳' → logprob: -17.134756088256836
    6. '```' → logprob: -17.384756088256836
    7. ' ' → logprob: -17.759756088256836
    8. '  ' → logprob: -17.822256088256836
    9. '৩' → logprob: -18.259756088256836
    10. '٣' → logprob: -18.447256088256836

Token 113: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -17.750001907348633
    4. '۳' → logprob: -17.875001907348633
    5. '1' → logprob: -18.500001907348633
    6. '٣' → logprob: -18.625001907348633
    7. '৩' → logprob: -18.750001907348633
    8. '   ' → logprob: -19.000001907348633
    9. '３' → logprob: -19.062501907348633
    10. '३' → logprob: -19.062501907348633

Token 114: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0881275087594986
    2. '       ' → logprob: -2.713127613067627
    3. '
' → logprob: -4.838127613067627
    4. '               ' → logprob: -5.588127613067627
    5. '   ' → logprob: -5.963127613067627
    6. '            
' → logprob: -6.713127613067627
    7. ' 
' → logprob: -6.838127613067627
    8. '    
' → logprob: -7.838127613067627
    9. '                   ' → logprob: -8.588127136230469
    10. '                           ' → logprob: -9.088127136230469

Token 115: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11359311640262604
    2. '
' → logprob: -2.363593101501465
    3. '       ' → logprob: -4.988593101501465
    4. 'return' → logprob: -6.238593101501465
    5. '            
' → logprob: -6.613593101501465
    6. ' 
' → logprob: -6.738593101501465
    7. '    
' → logprob: -7.363593101501465
    8. '               ' → logprob: -7.613593101501465
    9. '   ' → logprob: -7.988593101501465
    10. ' return' → logprob: -9.113593101501465

Token 116: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1078290119767189
    2. '           ' → logprob: -2.8578290939331055
    3. ' if' → logprob: -3.1078290939331055
    4. '       ' → logprob: -8.982829093933105
    5. '   ' → logprob: -13.732829093933105
    6. 'result' → logprob: -14.482829093933105
    7. '	if' → logprob: -15.357829093933105
    8. 'If' → logprob: -16.35782814025879
    9. '               ' → logprob: -16.73282814025879
    10. '		' → logprob: -16.98282814025879

Token 117: ' back' (ID: 1602)
  Prédit: ' back'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' back' → logprob: -0.002813194179907441
    2. 'back' → logprob: -5.877813339233398
    3. ' can' → logprob: -12.002813339233398
    4. '(back' → logprob: -14.002813339233398
    5. ' ' → logprob: -14.627813339233398
    6. '	back' → logprob: -15.002813339233398
    7. '           ' → logprob: -15.627813339233398
    8. '_back' → logprob: -16.5028133392334
    9. ' ' → logprob: -16.8778133392334
    10. 'Back' → logprob: -17.0028133392334

Token 118: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -3.8219583075260743e-05
    2. 'tr' → logprob: -11.125038146972656
    3. 'tracking' → logprob: -11.250038146972656
    4. 'count' → logprob: -12.500038146972656
    5. 't' → logprob: -12.625038146972656
    6. 'tract' → logprob: -13.500038146972656
    7. 'tracks' → logprob: -14.375038146972656
    8. '_track' → logprob: -14.875038146972656
    9. 'tra' → logprob: -15.125038146972656
    10. '(track' → logprob: -15.250038146972656

Token 119: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.00011975488450843841
    2. '(' → logprob: -9.250120162963867
    3. ' (' → logprob: -10.750120162963867
    4. '(
' → logprob: -13.375120162963867
    5. '(cnt' → logprob: -15.250120162963867
    6. ' counts' → logprob: -16.375120162963867
    7. '   ' → logprob: -16.875120162963867
    8. '           ' → logprob: -17.250120162963867
    9. '(

' → logprob: -17.500120162963867
    10. '               ' → logprob: -17.875120162963867

Token 120: 's' (ID: 82)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.2721407413482666
    2. 'counts' → logprob: -2.2721407413482666
    3. 's' → logprob: -2.3971407413482666
    4. 'unts' → logprob: -4.1471405029296875
    5. ')' → logprob: -4.2721405029296875
    6. '(count' → logprob: -4.5221405029296875
    7. 'ts' → logprob: -6.3971405029296875
    8. ' counts' → logprob: -8.022140502929688
    9. '(' → logprob: -8.772140502929688
    10. 'nts' → logprob: -8.897140502929688

Token 121: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6337670683860779
    2. '):' → logprob: -0.8837670683860779
    3. ')' → logprob: -2.8837671279907227
    4. '):
' → logprob: -9.508767127990723
    5. '           ' → logprob: -9.883767127990723
    6. '               ' → logprob: -10.258767127990723
    7. ' ):' → logprob: -10.508767127990723
    8. '):

' → logprob: -10.883767127990723
    9. ' ):
' → logprob: -10.883767127990723
    10. '():
' → logprob: -11.508767127990723

Token 122: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003687247633934021
    2. ' return' → logprob: -5.878687381744385
    3. 'return' → logprob: -7.878687381744385
    4. '                
' → logprob: -8.128686904907227
    5. '           ' → logprob: -9.503686904907227
    6. ':return' → logprob: -10.628686904907227
    7. '            
' → logprob: -10.753686904907227
    8. ':
' → logprob: -10.878686904907227
    9. ' 
' → logprob: -11.253686904907227
    10. '
' → logprob: -11.753686904907227

Token 123: ' counts' (ID: 28991)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2841378450393677
    2. ' return' → logprob: -1.7841378450393677
    3. 'return' → logprob: -2.534137725830078
    4. ' ' → logprob: -10.659137725830078
    5. '                ' → logprob: -10.784137725830078
    6. '                   ' → logprob: -11.534137725830078
    7. ' 
' → logprob: -12.534137725830078
    8. '           ' → logprob: -13.034137725830078
    9. '                
' → logprob: -13.534137725830078
    10. '	return' → logprob: -14.409137725830078

Token 124: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0024814847856760025
    2. '[' → logprob: -6.002481460571289
    3. 'i' → logprob: -12.877481460571289
    4. ' [' → logprob: -13.752481460571289
    5. '[I' → logprob: -14.252481460571289
    6. ' i' → logprob: -15.002481460571289
    7. '[index' → logprob: -15.502481460571289
    8. ']' → logprob: -15.877481460571289
    9. '```' → logprob: -16.37748146057129
    10. '[idx' → logprob: -16.62748146057129

Token 125: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03859998285770416
    2. ']+=' → logprob: -3.288599967956543
    3. ' ]' → logprob: -7.538599967956543
    4. ' +=' → logprob: -11.788599967956543
    5. '[i' → logprob: -11.788599967956543
    6. ']+' → logprob: -12.538599967956543
    7. '[' → logprob: -12.788599967956543
    8. '+=' → logprob: -12.913599967956543
    9. ')' → logprob: -14.163599967956543
    10. '+' → logprob: -14.288599967956543

Token 126: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2014956921339035
    2. ' +=' → logprob: -1.70149564743042
    3. ']+=' → logprob: -9.826496124267578
    4. '+' → logprob: -10.576496124267578
    5. '=' → logprob: -13.451496124267578
    6. '            ' → logprob: -14.826496124267578
    7. ' ' → logprob: -15.451496124267578
    8. '>=' → logprob: -15.701496124267578
    9. '           ' → logprob: -15.826496124267578
    10. ' +' → logprob: -16.076496124267578

Token 127: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '۳' → logprob: -18.875
    4. '৩' → logprob: -19.25
    5. '３' → logprob: -19.5
    6. '٣' → logprob: -19.5
    7. '३' → logprob: -19.625
    8. '```' → logprob: -20.875
    9. '³' → logprob: -21.6875
    10. '三' → logprob: -21.75

Token 128: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '۳' → logprob: -18.0
    4. '৩' → logprob: -18.0
    5. '३' → logprob: -18.25
    6. '٣' → logprob: -18.75
    7. '３' → logprob: -18.75
    8. '-' → logprob: -19.5
    9. '```' → logprob: -20.0625
    10. '³' → logprob: -20.8125

Token 129: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038086242973804474
    2. '               ' → logprob: -3.288086175918579
    3. '       ' → logprob: -10.9130859375
    4. 'return' → logprob: -11.6630859375
    5. ' return' → logprob: -11.9130859375
    6. '                   ' → logprob: -12.7880859375
    7. '            ' → logprob: -13.1630859375
    8. '            
' → logprob: -13.4130859375
    9. '   ' → logprob: -13.5380859375
    10. '		' → logprob: -14.2880859375

Token 130: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03372327238321304
    2. '           ' → logprob: -3.4087233543395996
    3. ' return' → logprob: -10.908722877502441
    4. '                   ' → logprob: -11.408722877502441
    5. '	           ' → logprob: -11.533722877502441
    6. 'return' → logprob: -11.658722877502441
    7. '            ' → logprob: -11.783722877502441
    8. '       ' → logprob: -12.533722877502441
    9. '                ' → logprob: -12.658722877502441
    10. '                
' → logprob: -12.783722877502441

Token 131: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.35907912254333496
    2. '               ' → logprob: -1.359079122543335
    3. ' return' → logprob: -3.109079122543335
    4. '                   ' → logprob: -8.984079360961914
    5. '           ' → logprob: -12.359079360961914
    6. '	return' → logprob: -12.484079360961914
    7. '                ' → logprob: -12.859079360961914
    8. ':return' → logprob: -12.859079360961914
    9. '   ' → logprob: -14.234079360961914
    10. '                       ' → logprob: -14.359079360961914

Token 132: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0007099286303855479
    2. ' True' → logprob: -7.2507100105285645
    3. '(True' → logprob: -21.375709533691406
    4. 'False' → logprob: -21.750709533691406
    5. 'true' → logprob: -22.375709533691406
    6. 'Tr' → logprob: -22.625709533691406
    7. '=True' → logprob: -23.000709533691406
    8. '   ' → logprob: -23.375709533691406
    9. ' ' → logprob: -25.125709533691406
    10. '_true' → logprob: -25.875709533691406

Token 133: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014868678525090218
    2. 'counts' → logprob: -4.26486873626709
    3. ' counts' → logprob: -7.38986873626709
    4. '       ' → logprob: -10.76486873626709
    5. '            
' → logprob: -10.76486873626709
    6. '
' → logprob: -11.51486873626709
    7. 'count' → logprob: -11.63986873626709
    8. '_counts' → logprob: -12.01486873626709
    9. '    
' → logprob: -12.76486873626709
    10. 'else' → logprob: -13.01486873626709

Token 134: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34181028604507446
    2. 'counts' → logprob: -1.3418102264404297
    3. ' counts' → logprob: -3.5918102264404297
    4. '_counts' → logprob: -8.59181022644043
    5. '            
' → logprob: -9.09181022644043
    6. '       ' → logprob: -9.71681022644043
    7. 'else' → logprob: -10.21681022644043
    8. 'count' → logprob: -10.46681022644043
    9. ' 
' → logprob: -10.46681022644043
    10. '
' → logprob: -10.96681022644043

Token 135: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.6041316390037537
    2. '           ' → logprob: -0.8541316390037537
    3. ' counts' → logprob: -3.6041316986083984
    4. '       ' → logprob: -7.729131698608398
    5. '_counts' → logprob: -9.354131698608398
    6. 'count' → logprob: -10.354131698608398
    7. '               ' → logprob: -11.604131698608398
    8. '
' → logprob: -11.854131698608398
    9. '   ' → logprob: -12.479131698608398
    10. 'else' → logprob: -12.979131698608398

Token 136: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0010468624532222748
    2. '[' → logprob: -6.876046657562256
    3. 'i' → logprob: -11.376047134399414
    4. '[I' → logprob: -13.251047134399414
    5. '[
' → logprob: -15.751047134399414
    6. ' i' → logprob: -16.001047134399414
    7. '][' → logprob: -16.501047134399414
    8. ']' → logprob: -16.501047134399414
    9. '	i' → logprob: -16.501047134399414
    10. ' [' → logprob: -17.126047134399414

Token 137: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002135748043656349
    2. '[i' → logprob: -6.252135753631592
    3. '[' → logprob: -8.877135276794434
    4. ']+=' → logprob: -10.127135276794434
    5. ']-' → logprob: -11.377135276794434
    6. ' ]' → logprob: -11.877135276794434
    7. '>' → logprob: -12.502135276794434
    8. 'i' → logprob: -13.252135276794434
    9. '][' → logprob: -13.752135276794434
    10. ']>' → logprob: -14.127135276794434

Token 138: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6941487193107605
    2. '+=' → logprob: -0.6941487193107605
    3. '+' → logprob: -6.944148540496826
    4. ']+=' → logprob: -10.694149017333984
    5. ' ' → logprob: -11.694149017333984
    6. ' +' → logprob: -12.694149017333984
    7. '=' → logprob: -13.444149017333984
    8. '    ' → logprob: -15.194149017333984
    9. ')' → logprob: -15.694149017333984
    10. ' ' → logprob: -16.069149017333984

Token 139: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0004309076175559312
    2. ' ' → logprob: -7.750431060791016
    3. '۳' → logprob: -17.250431060791016
    4. '  ' → logprob: -17.687931060791016
    5. '   ' → logprob: -17.687931060791016
    6. '1' → logprob: -17.937931060791016
    7. '৩' → logprob: -18.062931060791016
    8. '٣' → logprob: -18.125431060791016
    9. '３' → logprob: -18.187931060791016
    10. '३' → logprob: -18.250431060791016

Token 140: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '۳' → logprob: -18.125001907348633
    4. '৩' → logprob: -18.187501907348633
    5. '३' → logprob: -18.250001907348633
    6. '٣' → logprob: -18.812501907348633
    7. '３' → logprob: -19.187501907348633
    8. '   ' → logprob: -19.812501907348633
    9. '-' → logprob: -19.937501907348633
    10. '1' → logprob: -20.187501907348633

Token 141: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.693899929523468
    2. '
' → logprob: -0.943899929523468
    3. ' 
' → logprob: -2.5688998699188232
    4. '        
' → logprob: -3.8188998699188232
    5. '  
' → logprob: -4.943900108337402
    6. '    
' → logprob: -5.818900108337402
    7. '   
' → logprob: -7.693900108337402
    8. '' → logprob: -7.818900108337402
    9. '<|end|>' → logprob: -7.818900108337402
    10. '            
' → logprob: -8.068900108337402

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10814960300922394
    2. '
' → logprob: -2.483149528503418
    3. ' 
' → logprob: -4.358149528503418
    4. '        
' → logprob: -5.483149528503418
    5. '  
' → logprob: -6.983149528503418
    6. '    
' → logprob: -7.483149528503418
    7. '   ' → logprob: -8.483149528503418
    8. '   
' → logprob: -9.358149528503418
    9. '       
' → logprob: -9.483149528503418
    10. '            
' → logprob: -10.108149528503418

Token 143: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07904500514268875
    2. '#' (adapté à ' #') → logprob: -3.204045057296753
    3. '   ' → logprob: -4.704044818878174
    4. ' 
' → logprob: -4.954044818878174
    5. '        
' → logprob: -5.454044818878174
    6. ' #' → logprob: -5.454044818878174
    7. 'if' → logprob: -5.704044818878174
    8. ' ' → logprob: -6.454044818878174
    9. '
' → logprob: -6.579044818878174
    10. ' if' → logprob: -6.579044818878174

Token 144: ' Ess' (ID: 12256)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4849229156970978
    2. ' #' → logprob: -1.8599228858947754
    3. ' if' → logprob: -2.6099228858947754
    4. 'if' → logprob: -2.6099228858947754
    5. ' try' → logprob: -4.359922885894775
    6. ' Ess' → logprob: -4.359922885894775
    7. 'counts' → logprob: -4.484922885894775
    8. 'Ess' → logprob: -4.609922885894775
    9. 'try' → logprob: -4.734922885894775
    10. ' counts' → logprob: -4.984922885894775

Token 145: 'ayer' (ID: 1630)
  Prédit: 'ayer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ayer' → logprob: -0.00029267906211316586
    2. 'ay' → logprob: -8.875292778015137
    3. '   ' → logprob: -10.000292778015137
    4. '       ' → logprob: -10.250292778015137
    5. 'a' → logprob: -10.625292778015137
    6. 'aye' → logprob: -11.375292778015137
    7. 's' → logprob: -11.625292778015137
    8. 'uyer' → logprob: -12.125292778015137
    9. 'AYER' → logprob: -12.500292778015137
    10. 'ayers' → logprob: -12.500292778015137

Token 146: ' suite' (ID: 13800)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.12467321753501892
    2. 'counts' → logprob: -2.3746731281280518
    3. ' trip' → logprob: -4.124673366546631
    4. ' sequences' → logprob: -5.749673366546631
    5. 'trip' → logprob: -6.874673366546631
    6. ' de' → logprob: -7.374673366546631
    7. ' count' → logprob: -7.499673366546631
    8. 'count' → logprob: -7.749673366546631
    9. ' sequence' → logprob: -7.749673366546631
    10. 'seq' → logprob: -8.124672889709473

Token 147: ' i' (ID: 575)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04026845470070839
    2. '       ' → logprob: -3.7902684211730957
    3. 'if' → logprob: -4.290268421173096
    4. '[i' → logprob: -6.665268421173096
    5. ' i' → logprob: -7.040268421173096
    6. ' (' → logprob: -8.665268898010254
    7. ' s' → logprob: -8.915268898010254
    8. '(i' → logprob: -9.040268898010254
    9. 's' → logprob: -9.165268898010254
    10. '   ' → logprob: -9.290268898010254

Token 148: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09901300817728043
    2. ' +' → logprob: -3.224013090133667
    3. '[i' → logprob: -3.474013090133667
    4. ',' → logprob: -5.224012851715088
    5. '   ' → logprob: -5.599012851715088
    6. 'if' → logprob: -5.724012851715088
    7. ' +=' → logprob: -6.599012851715088
    8. '=' → logprob: -6.724012851715088
    9. ' =' → logprob: -6.724012851715088
    10. ':' → logprob: -6.849012851715088

Token 149: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.160483255982399
    2. ' i' → logprob: -1.9104832410812378
    3. ' counts' → logprob: -9.160483360290527
    4. 'counts' → logprob: -9.660483360290527
    5. 'if' → logprob: -10.410483360290527
    6. ' if' → logprob: -10.910483360290527
    7. ' ' → logprob: -11.910483360290527
    8. ',' → logprob: -12.410483360290527
    9. 'count' → logprob: -12.535483360290527
    10. ',i' → logprob: -12.785483360290527

Token 150: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005351874511688948
    2. ' +' → logprob: -5.255352020263672
    3. '+
' → logprob: -9.505352020263672
    4. ',' → logprob: -11.255352020263672
    5. '+,' → logprob: -11.505352020263672
    6. ' ' → logprob: -12.380352020263672
    7. '1' → logprob: -12.505352020263672
    8. ' +
' → logprob: -12.755352020263672
    9. ' ,' → logprob: -13.505352020263672
    10. 's' → logprob: -13.630352020263672

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018065694894175977
    2. ' ' → logprob: -8.6251802444458
    3. ',' → logprob: -14.7501802444458
    4. '2' → logprob: -15.0001802444458
    5. '+' → logprob: -15.7501802444458
    6. ' ,' → logprob: -16.875181198120117
    7. '```' → logprob: -16.875181198120117
    8. '  ' → logprob: -18.000181198120117
    9. ' ' → logprob: -18.125181198120117
    10. '   ' → logprob: -18.125181198120117

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14762979745864868
    2. ' ,' → logprob: -2.022629737854004
    3. ',
' → logprob: -6.022629737854004
    4. ' ,
' → logprob: -7.397629737854004
    5. '+' → logprob: -7.522629737854004
    6. ' and' → logprob: -7.897629737854004
    7. 'and' → logprob: -8.397629737854004
    8. 'if' → logprob: -8.897629737854004
    9. ' +' → logprob: -9.022629737854004
    10. ' ' → logprob: -9.147629737854004

Token 153: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3869341015815735
    2. 'i' → logprob: -1.1369340419769287
    3. ' ' → logprob: -10.511934280395508
    4. ' ' → logprob: -10.886934280395508
    5. ',' → logprob: -12.886934280395508
    6. ' counts' → logprob: -13.011934280395508
    7. ',i' → logprob: -13.386934280395508
    8. '(i' → logprob: -13.511934280395508
    9. '+' → logprob: -13.636934280395508
    10. 'counts' → logprob: -13.636934280395508

Token 154: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00017159747949335724
    2. ' +' → logprob: -8.750171661376953
    3. '+
' → logprob: -12.000171661376953
    4. '2' → logprob: -12.875171661376953
    5. '1' → logprob: -13.375171661376953
    6. 's' → logprob: -14.375171661376953
    7. '```' → logprob: -14.500171661376953
    8. ',' → logprob: -14.750171661376953
    9. '+,' → logprob: -15.000171661376953
    10. 'plus' → logprob: -15.375171661376953

Token 155: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.2020991056924686e-05
    2. ' ' → logprob: -10.375032424926758
    3. '<|end|>' → logprob: -15.250032424926758
    4. '1' → logprob: -15.375032424926758
    5. '```' → logprob: -16.125032424926758
    6. '+' → logprob: -17.125032424926758
    7. '[' → logprob: -17.250032424926758
    8. '3' → logprob: -17.750032424926758
    9. '{' → logprob: -18.000032424926758
    10. '۲' → logprob: -18.062532424926758

Token 156: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18438388407230377
    2. ' if' → logprob: -2.3093838691711426
    3. 'if' → logprob: -3.5593838691711426
    4. '
' → logprob: -3.6843838691711426
    5. '   ' → logprob: -4.684383869171143
    6. ' ' → logprob: -6.059383869171143
    7. ' 
' → logprob: -6.809383869171143
    8. '        
' → logprob: -7.184383869171143
    9. '  
' → logprob: -7.184383869171143
    10. '           ' → logprob: -7.809383869171143

Token 157: ' possible' (ID: 4149)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5769750475883484
    2. 'i' → logprob: -0.8269750475883484
    3. ' counts' → logprob: -7.326974868774414
    4. 'counts' → logprob: -8.576974868774414
    5. 'len' → logprob: -9.701974868774414
    6. ' len' → logprob: -10.326974868774414
    7. '(i' → logprob: -10.576974868774414
    8. ' (' → logprob: -10.826974868774414
    9. ' ' → logprob: -11.326974868774414
    10. '```' → logprob: -11.826974868774414

Token 158: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04232329502701759
    2. ' if' → logprob: -3.417323350906372
    3. 'if' → logprob: -5.917323112487793
    4. ' 
' → logprob: -5.917323112487793
    5. '        ' → logprob: -7.292323112487793
    6. '   ' → logprob: -7.417323112487793
    7. ' ' → logprob: -7.542323112487793
    8. '  
' → logprob: -7.792323112487793
    9. '        
' → logprob: -8.417323112487793
    10. '
' → logprob: -8.542323112487793

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007003904785960913
    2. ' if' → logprob: -5.8820037841796875
    3. ' 
' → logprob: -6.0070037841796875
    4. '  
' → logprob: -7.8820037841796875
    5. ' ' → logprob: -8.007003784179688
    6. ' ' → logprob: -8.007003784179688
    7. '   ' → logprob: -8.507003784179688
    8. '        
' → logprob: -8.757003784179688
    9. 'if' → logprob: -8.882003784179688
    10. '        ' → logprob: -9.632003784179688

Token 160: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6666533946990967
    2. '       ' → logprob: -0.7916533946990967
    3. 'if' (adapté à ' if') → logprob: -3.5416533946990967
    4. ' for' → logprob: -6.416653633117676
    5. ' 
' → logprob: -6.791653633117676
    6. ' ' → logprob: -7.791653633117676
    7. '   ' → logprob: -8.041653633117676
    8. '        ' → logprob: -8.166653633117676
    9. '
' → logprob: -8.541653633117676
    10. 'for' → logprob: -8.791653633117676

Token 161: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.020591406151652336
    2. 'i' → logprob: -3.8955914974212646
    3. ' ' → logprob: -10.770591735839844
    4. '   ' → logprob: -11.395591735839844
    5. ' counts' → logprob: -12.020591735839844
    6. '	i' → logprob: -12.395591735839844
    7. '  ' → logprob: -13.020591735839844
    8. ' (' → logprob: -13.895591735839844
    9. '(i' → logprob: -14.145591735839844
    10. ' ' → logprob: -14.145591735839844

Token 162: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3350217640399933
    2. '<=' → logprob: -1.460021734237671
    3. '+' → logprob: -3.210021734237671
    4. ' +' → logprob: -4.46002197265625
    5. ' ' → logprob: -8.96002197265625
    6. ' <' → logprob: -9.21002197265625
    7. 'and' → logprob: -9.58502197265625
    8. '<' → logprob: -9.71002197265625
    9. '1' → logprob: -10.83502197265625
    10. 'len' → logprob: -10.96002197265625

Token 163: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -18.625
    4. '8' → logprob: -20.0
    5. '７' → logprob: -21.0
    6. '۷' → logprob: -21.125
    7. '٧' → logprob: -21.125
    8. '07' → logprob: -21.5
    9. '77' → logprob: -21.75
    10. '   ' → logprob: -22.0

Token 164: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '```' → logprob: -18.375
    4. '8' → logprob: -19.125
    5. '７' → logprob: -19.375
    6. '٧' → logprob: -19.75
    7. '۷' → logprob: -20.125
    8. '७' → logprob: -20.375
    9. '07' → logprob: -20.625
    10. '77' → logprob: -21.25

Token 165: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.009763410314917564
    2. 'and' → logprob: -4.634763240814209
    3. '           ' → logprob: -13.134763717651367
    4. ':
' → logprob: -13.259763717651367
    5. ' ' → logprob: -13.634763717651367
    6. '   ' → logprob: -13.884763717651367
    7. ':' → logprob: -14.759763717651367
    8. '	and' → logprob: -15.009763717651367
    9. '       ' → logprob: -15.384763717651367
    10. ',' → logprob: -15.384763717651367

Token 166: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.08896683901548386
    2. 'counts' → logprob: -2.4639668464660645
    3. 'count' → logprob: -10.713966369628906
    4. ' count' → logprob: -13.463966369628906
    5. 'all' → logprob: -13.838966369628906
    6. ' all' → logprob: -14.088966369628906
    7. ' ' → logprob: -14.088966369628906
    8. '   ' → logprob: -14.213966369628906
    9. 'Counts' → logprob: -15.963966369628906
    10. '_counts' → logprob: -15.963966369628906

Token 167: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1756367712223437e-05
    2. '[' → logprob: -11.375011444091797
    3. ' [' → logprob: -15.875011444091797
    4. 'i' → logprob: -17.250011444091797
    5. '[I' → logprob: -17.625011444091797
    6. '[
' → logprob: -17.750011444091797
    7. '```' → logprob: -18.125011444091797
    8. '[j' → logprob: -18.875011444091797
    9. '][' → logprob: -20.000011444091797
    10. ' i' → logprob: -20.375011444091797

Token 168: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002553784754127264
    2. ']>' → logprob: -6.252553939819336
    3. ' ]' → logprob: -7.877553939819336
    4. ']>=' → logprob: -8.627553939819336
    5. '>' → logprob: -10.127553939819336
    6. '[' → logprob: -11.502553939819336
    7. '[i' → logprob: -12.627553939819336
    8. '   ' → logprob: -12.752553939819336
    9. '']' → logprob: -12.752553939819336
    10. '"]' → logprob: -13.502553939819336

Token 169: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.31821808218955994
    2. ' >' → logprob: -1.5682181119918823
    3. 'and' → logprob: -3.0682179927825928
    4. ' and' → logprob: -4.068218231201172
    5. '>=' → logprob: -8.318218231201172
    6. ' ' → logprob: -8.943218231201172
    7. ' >=' → logprob: -9.568218231201172
    8. '   ' → logprob: -10.693218231201172
    9. ']>' → logprob: -11.318218231201172
    10. '1' → logprob: -11.943218231201172

Token 170: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010317281819880009
    2. ' ' → logprob: -4.635317325592041
    3. '=' → logprob: -7.510317325592041
    4. '>' → logprob: -11.260316848754883
    5. ' ' → logprob: -15.010316848754883
    6. '  ' → logprob: -16.385316848754883
    7. ',' → logprob: -16.697816848754883
    8. '
' → logprob: -17.135316848754883
    9. '-' → logprob: -17.447816848754883
    10. ' =' → logprob: -17.572816848754883

Token 171: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005549400229938328
    2. ' ' → logprob: -7.500555038452148
    3. '>' → logprob: -13.375555038452148
    4. '=' → logprob: -15.500555038452148
    5. '-' → logprob: -17.18805503845215
    6. '1' → logprob: -17.25055503845215
    7. '  ' → logprob: -17.68805503845215
    8. '۰' → logprob: -17.87555503845215
    9. ' ' → logprob: -18.18805503845215
    10. '   ' → logprob: -18.18805503845215

Token 172: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.020551348105072975
    2. 'and' → logprob: -3.8955514430999756
    3. '           ' → logprob: -12.520551681518555
    4. '            ' → logprob: -13.145551681518555
    5. '	and' → logprob: -13.395551681518555
    6. '    ' → logprob: -14.145551681518555
    7. '        ' → logprob: -14.395551681518555
    8. ' ' → logprob: -15.395551681518555
    9. '   ' → logprob: -15.770551681518555
    10. '          ' → logprob: -15.770551681518555

Token 173: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.5760563611984253
    2. 'counts' → logprob: -0.8260563611984253
    3. 'count' → logprob: -9.576056480407715
    4. '   ' → logprob: -10.326056480407715
    5. ' ' → logprob: -11.701056480407715
    6. '    ' → logprob: -12.951056480407715
    7. '  ' → logprob: -13.451056480407715
    8. ' count' → logprob: -14.201056480407715
    9. '           ' → logprob: -14.576056480407715
    10. '               ' → logprob: -14.701056480407715

Token 174: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007156503852456808
    2. '[' → logprob: -7.250715732574463
    3. ' [' → logprob: -13.500715255737305
    4. '```' → logprob: -13.625715255737305
    5. 'i' → logprob: -13.750715255737305
    6. '[
' → logprob: -14.125715255737305
    7. '[I' → logprob: -14.500715255737305
    8. ']' → logprob: -15.375715255737305
    9. '>' → logprob: -16.500715255737305
    10. '[...]' → logprob: -16.625715255737305

Token 175: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0604136660695076
    2. '[i' → logprob: -3.3104135990142822
    3. ']' → logprob: -4.060413837432861
    4. ' +' → logprob: -5.560413837432861
    5. '[' → logprob: -7.560413837432861
    6. '+i' → logprob: -7.935413837432861
    7. ']>' → logprob: -9.935413360595703
    8. ']+' → logprob: -10.185413360595703
    9. '[
' → logprob: -11.435413360595703
    10. 'i' → logprob: -11.435413360595703

Token 176: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001181777217425406
    2. ' ' → logprob: -6.751181602478027
    3. '0' → logprob: -11.501181602478027
    4. '   ' → logprob: -13.876181602478027
    5. '  ' → logprob: -15.126181602478027
    6. '```' → logprob: -16.251182556152344
    7. ']' → logprob: -17.376182556152344
    8. '    ' → logprob: -17.563682556152344
    9. '[' → logprob: -17.626182556152344
    10. '+' → logprob: -17.626182556152344

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.73183855926618e-05
    2. ' ' → logprob: -9.500077247619629
    3. '2' → logprob: -13.500077247619629
    4. '0' → logprob: -15.000077247619629
    5. '   ' → logprob: -15.937577247619629
    6. '```' → logprob: -16.187578201293945
    7. '  ' → logprob: -16.625078201293945
    8. '{' → logprob: -16.687578201293945
    9. '11' → logprob: -16.812578201293945
    10. '
' → logprob: -17.062578201293945

Token 178: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4376387596130371
    2. ']' → logprob: -1.187638759613037
    3. '>' → logprob: -3.062638759613037
    4. ']>' → logprob: -6.312638759613037
    5. ' ]' → logprob: -7.062638759613037
    6. '']' → logprob: -10.187639236450195
    7. ' ' → logprob: -11.437639236450195
    8. '"]' → logprob: -11.562639236450195
    9. 'and' → logprob: -13.562639236450195
    10. '[' → logprob: -13.687639236450195

Token 179: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.02054772712290287
    2. '>' → logprob: -3.89554762840271
    3. ' and' → logprob: -12.770547866821289
    4. ' ' → logprob: -13.020547866821289
    5. 'and' → logprob: -14.520547866821289
    6. ' ' → logprob: -16.14554786682129
    7. '[' → logprob: -16.39554786682129
    8. '   ' → logprob: -17.27054786682129
    9. ' >
' → logprob: -17.64554786682129
    10. '()>' → logprob: -17.64554786682129

Token 180: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0430021695792675
    2. ' ' → logprob: -3.168002128601074
    3. '=' → logprob: -13.543002128601074
    4. '>' → logprob: -14.168002128601074
    5. '  ' → logprob: -15.605502128601074
    6. '1' → logprob: -15.605502128601074
    7. ' ' → logprob: -15.918002128601074
    8. '   ' → logprob: -16.16800308227539
    9. '۰' → logprob: -17.29300308227539
    10. '```' → logprob: -17.66800308227539

Token 181: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020461321400944144
    2. ' ' → logprob: -8.500205039978027
    3. '1' → logprob: -14.500205039978027
    4. '=' → logprob: -14.875205039978027
    5. '>' → logprob: -16.31270408630371
    6. '2' → logprob: -17.00020408630371
    7. ' ' → logprob: -17.06270408630371
    8. '   ' → logprob: -17.12520408630371
    9. '۰' → logprob: -17.62520408630371
    10. '```' → logprob: -17.68770408630371

Token 182: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005933893844485283
    2. 'and' → logprob: -5.13093376159668
    3. ' ' → logprob: -12.63093376159668
    4. '           ' → logprob: -14.00593376159668
    5. '            ' → logprob: -14.75593376159668
    6. ' ' → logprob: -15.75593376159668
    7. '```' → logprob: -16.00593376159668
    8. '   ' → logprob: -16.63093376159668
    9. '               ' → logprob: -16.88093376159668
    10. ',' → logprob: -17.00593376159668

Token 183: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.009776394814252853
    2. 'counts' → logprob: -4.634776592254639
    3. 'count' → logprob: -11.50977611541748
    4. ' count' → logprob: -12.00977611541748
    5. ' ' → logprob: -13.13477611541748
    6. ' ' → logprob: -14.25977611541748
    7. '_counts' → logprob: -14.50977611541748
    8. 'c' → logprob: -15.38477611541748
    9. 'Counts' → logprob: -15.63477611541748
    10. '   ' → logprob: -15.75977611541748

Token 184: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.511406809295295e-06
    2. '[' → logprob: -12.250006675720215
    3. 'i' → logprob: -13.750006675720215
    4. '[
' → logprob: -14.875006675720215
    5. ' [' → logprob: -15.125006675720215
    6. '```' → logprob: -17.7500057220459
    7. ']' → logprob: -18.0000057220459
    8. '[I' → logprob: -18.1250057220459
    9. ' i' → logprob: -18.2500057220459
    10. '{i' → logprob: -18.7500057220459

Token 185: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08923356980085373
    2. ' +' → logprob: -2.464233636856079
    3. ']' → logprob: -8.2142333984375
    4. '[' → logprob: -10.9642333984375
    5. '   ' → logprob: -13.2142333984375
    6. ']+' → logprob: -13.5892333984375
    7. '[i' → logprob: -14.0892333984375
    8. '+i' → logprob: -14.2142333984375
    9. ' ' → logprob: -15.2142333984375
    10. '＋' → logprob: -15.4642333984375

Token 186: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0028084407094866037
    2. ' ' → logprob: -5.877808570861816
    3. '1' → logprob: -13.627808570861816
    4. '  ' → logprob: -13.627808570861816
    5. '   ' → logprob: -14.252808570861816
    6. '```' → logprob: -15.690308570861816
    7. '۲' → logprob: -16.6278076171875
    8. '    ' → logprob: -17.2528076171875
    9. '+' → logprob: -17.2528076171875
    10. '     ' → logprob: -17.3153076171875

Token 187: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.583550642360933e-05
    2. ' ' → logprob: -10.875036239624023
    3. '1' → logprob: -11.125036239624023
    4. '
' → logprob: -14.750036239624023
    5. '   ' → logprob: -15.062536239624023
    6. '```' → logprob: -15.125036239624023
    7. '3' → logprob: -15.625036239624023
    8. '  ' → logprob: -15.875036239624023
    9. '0' → logprob: -16.250036239624023
    10. '{' → logprob: -16.312536239624023

Token 188: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010915198363363743
    2. ']>' → logprob: -7.001091480255127
    3. ' ]' → logprob: -9.376091957092285
    4. '>' → logprob: -9.501091957092285
    5. '[' → logprob: -12.126091957092285
    6. ' >' → logprob: -12.751091957092285
    7. '   ' → logprob: -12.876091957092285
    8. '[i' → logprob: -12.876091957092285
    9. '-' → logprob: -13.251091957092285
    10. '']' → logprob: -13.751091957092285

Token 189: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.14270181953907013
    2. '>' → logprob: -2.0177018642425537
    3. ']' → logprob: -11.892702102661133
    4. ' ' → logprob: -12.142702102661133
    5. '[' → logprob: -12.142702102661133
    6. ']>' → logprob: -12.767702102661133
    7. ' ' → logprob: -13.017702102661133
    8. '-' → logprob: -13.892702102661133
    9. '   ' → logprob: -14.767702102661133
    10. ':' → logprob: -15.080202102661133

Token 190: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012520482763648033
    2. ' ' → logprob: -4.3875203132629395
    3. '2' → logprob: -12.512520790100098
    4. '1' → logprob: -12.887520790100098
    5. '   ' → logprob: -13.512520790100098
    6. '>' → logprob: -13.575020790100098
    7. '  ' → logprob: -14.387520790100098
    8. '    ' → logprob: -15.637520790100098
    9. ' ' → logprob: -15.700020790100098
    10. '```' → logprob: -15.762520790100098

Token 191: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010607946896925569
    2. ' ' → logprob: -6.876060962677002
    3. '2' → logprob: -10.626060485839844
    4. '1' → logprob: -12.626060485839844
    5. '   ' → logprob: -15.813560485839844
    6. '  ' → logprob: -16.251060485839844
    7. '>' → logprob: -16.688560485839844
    8. '```' → logprob: -16.813560485839844
    9. '3' → logprob: -17.001060485839844
    10. '	' → logprob: -17.626060485839844

Token 192: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20143623650074005
    2. ':
' → logprob: -1.7014362812042236
    3. ' :
' → logprob: -12.201436042785645
    4. '       ' → logprob: -12.326436042785645
    5. '           ' → logprob: -12.701436042785645
    6. '   ' → logprob: -12.826436042785645
    7. ':

' → logprob: -13.201436042785645
    8. '):
' → logprob: -13.201436042785645
    9. ' :' → logprob: -13.326436042785645
    10. ':
' → logprob: -13.326436042785645

Token 193: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003337171860039234
    2. ' counts' → logprob: -6.253337383270264
    3. 'counts' → logprob: -6.753337383270264
    4. '       ' → logprob: -9.253336906433105
    5. '   ' → logprob: -9.378336906433105
    6. '               ' → logprob: -10.003336906433105
    7. 'count' → logprob: -11.503336906433105
    8. '_counts' → logprob: -14.253336906433105
    9. '[count' → logprob: -14.503336906433105
    10. '	       ' → logprob: -14.628336906433105

Token 194: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.6693274974822998
    2. 'counts' (adapté à ' counts') → logprob: -0.9193274974822998
    3. '           ' → logprob: -2.4193274974823
    4. '               ' → logprob: -9.544327735900879
    5. 'count' → logprob: -9.919327735900879
    6. '   ' → logprob: -10.419327735900879
    7. '       ' → logprob: -10.669327735900879
    8. '_counts' → logprob: -13.294327735900879
    9. '
' → logprob: -13.919327735900879
    10. ' ' → logprob: -14.794327735900879

Token 195: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.600714161526412e-05
    2. '[' → logprob: -9.500076293945312
    3. 'i' → logprob: -14.875076293945312
    4. ' [' → logprob: -15.250076293945312
    5. '```' → logprob: -15.250076293945312
    6. '[I' → logprob: -15.375076293945312
    7. '[index' → logprob: -17.750076293945312
    8. '[count' → logprob: -18.250076293945312
    9. '[s' → logprob: -18.250076293945312
    10. '[u' → logprob: -18.875076293945312

Token 196: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004027865652460605
    2. ']-' → logprob: -7.875402927398682
    3. ' ]' → logprob: -10.875402450561523
    4. '']' → logprob: -13.250402450561523
    5. '"]' → logprob: -14.250402450561523
    6. '           ' → logprob: -15.250402450561523
    7. '   ' → logprob: -15.250402450561523
    8. '[' → logprob: -15.375402450561523
    9. '-' → logprob: -15.750402450561523
    10. '[i' → logprob: -15.875402450561523

Token 197: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.7213552594184875
    2. '-=' → logprob: -0.7213552594184875
    3. '-' → logprob: -3.5963551998138428
    4. '>' → logprob: -9.221355438232422
    5. ')' → logprob: -9.596355438232422
    6. ']' → logprob: -9.971355438232422
    7. ' -' → logprob: -9.971355438232422
    8. '=' → logprob: -9.971355438232422
    9. '[' → logprob: -10.221355438232422
    10. ']-' → logprob: -11.221355438232422

Token 198: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -19.5
    4. '۱' → logprob: -20.25
    5. '１' → logprob: -20.375
    6. '
' → logprob: -21.0
    7. '```' → logprob: -21.25
    8. '१' → logprob: -22.25
    9. '{' → logprob: -22.375
    10. '১' → logprob: -22.5

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '۱' → logprob: -20.0
    4. '   ' → logprob: -20.125
    5. '１' → logprob: -20.125
    6. '{' → logprob: -20.5
    7. '```' → logprob: -20.5
    8. '
' → logprob: -20.625
    9. '১' → logprob: -21.375
    10. '१' → logprob: -21.375

Token 200: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09949854016304016
    2. 'counts' → logprob: -2.8494985103607178
    3. ' counts' → logprob: -3.3494985103607178
    4. '               ' → logprob: -7.224498748779297
    5. '<|end|>' → logprob: -7.849498748779297
    6. '            ' → logprob: -8.099498748779297
    7. ' 
' → logprob: -8.849498748779297
    8. '            
' → logprob: -10.599498748779297
    9. '                   ' → logprob: -10.599498748779297
    10. '_counts' → logprob: -10.849498748779297

Token 201: '           ' (ID: 352)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.19279362261295319
    2. 'counts' → logprob: -1.942793607711792
    3. '           ' → logprob: -3.442793607711792
    4. 'count' → logprob: -10.192793846130371
    5. ' ' → logprob: -11.567793846130371
    6. '_counts' → logprob: -11.567793846130371
    7. '   ' → logprob: -13.192793846130371
    8. ' ' → logprob: -13.192793846130371
    9. 'Counts' → logprob: -13.442793846130371
    10. '            ' → logprob: -13.442793846130371

Token 202: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.20148174464702606
    2. ' counts' → logprob: -1.7014816999435425
    3. 'count' → logprob: -9.701481819152832
    4. '           ' → logprob: -11.951481819152832
    5. '   ' → logprob: -15.076481819152832
    6. 'Counts' → logprob: -15.451481819152832
    7. '_counts' → logprob: -15.576481819152832
    8. ' ' → logprob: -17.201480865478516
    9. '       ' → logprob: -17.451480865478516
    10. '               ' → logprob: -17.576480865478516

Token 203: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -13.250001907348633
    3. ' [' → logprob: -16.375001907348633
    4. 'i' → logprob: -16.750001907348633
    5. '[I' → logprob: -18.125001907348633
    6. '```' → logprob: -18.125001907348633
    7. '(i' → logprob: -18.750001907348633
    8. ']' → logprob: -19.000001907348633
    9. '[
' → logprob: -19.500001907348633
    10. '][' → logprob: -19.500001907348633

Token 204: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.019953228533267975
    2. ' +' → logprob: -4.01995325088501
    3. ']' → logprob: -6.39495325088501
    4. '[' → logprob: -9.019952774047852
    5. '1' → logprob: -12.269952774047852
    6. '[i' → logprob: -13.144952774047852
    7. '   ' → logprob: -14.019952774047852
    8. '+]' → logprob: -14.394952774047852
    9. ' ' → logprob: -14.644952774047852
    10. ']+' → logprob: -15.144952774047852

Token 205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036423576530069113
    2. ' ' → logprob: -5.628642559051514
    3. '2' → logprob: -10.128642082214355
    4. '```' → logprob: -14.378642082214355
    5. '0' → logprob: -14.628642082214355
    6. '+' → logprob: -15.191142082214355
    7. '   ' → logprob: -15.378642082214355
    8. ']' → logprob: -15.378642082214355
    9. ' ]' → logprob: -15.753642082214355
    10. '	' → logprob: -16.628643035888672

Token 206: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020421291701495647
    2. ']-' → logprob: -6.752042293548584
    3. ' ]' → logprob: -7.127042293548584
    4. '-' → logprob: -10.252041816711426
    5. ' -=' → logprob: -10.752041816711426
    6. '']' → logprob: -12.502041816711426
    7. ' -' → logprob: -13.002041816711426
    8. '           ' → logprob: -13.252041816711426
    9. ')' → logprob: -14.252041816711426
    10. '    ' → logprob: -14.627041816711426

Token 207: ' -=' (ID: 12583)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8456153869628906
    2. ' -=' → logprob: -1.0956153869628906
    3. '-=' → logprob: -1.4706153869628906
    4. ']' → logprob: -6.095615386962891
    5. ']-' → logprob: -6.345615386962891
    6. ' -' → logprob: -6.595615386962891
    7. '           ' → logprob: -6.970615386962891
    8. '```' → logprob: -9.59561538696289
    9. '            ' → logprob: -9.72061538696289
    10. '>' → logprob: -10.22061538696289

Token 208: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. '```' → logprob: -16.750709533691406
    4. '<|end|>' → logprob: -18.250709533691406
    5. '   ' → logprob: -19.000709533691406
    6. '１' → logprob: -19.000709533691406
    7. ' ' → logprob: -19.125709533691406
    8. '۱' → logprob: -19.375709533691406
    9. '  ' → logprob: -20.500709533691406
    10. '0' → logprob: -20.875709533691406

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -16.625001907348633
    4. '１' → logprob: -20.000001907348633
    5. '<|end|>' → logprob: -20.000001907348633
    6. '۱' → logprob: -20.250001907348633
    7. '   ' → logprob: -20.312501907348633
    8. '
' → logprob: -21.125001907348633
    9. '१' → logprob: -21.312501907348633
    10. '`' → logprob: -21.625001907348633

Token 210: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034585874527692795
    2. ' counts' → logprob: -6.003458499908447
    3. 'counts' → logprob: -7.003458499908447
    4. '            ' → logprob: -11.128458976745605
    5. 'count' → logprob: -11.253458976745605
    6. '            
' → logprob: -11.503458976745605
    7. ' 
' → logprob: -11.628458976745605
    8. '
' → logprob: -11.878458976745605
    9. '               ' → logprob: -12.503458976745605
    10. '1' → logprob: -12.753458976745605

Token 211: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12136415392160416
    2. ' counts' → logprob: -2.746364116668701
    3. 'counts' → logprob: -2.996364116668701
    4. 'count' → logprob: -9.49636459350586
    5. '            ' → logprob: -10.62136459350586
    6. '       ' → logprob: -11.49636459350586
    7. '               ' → logprob: -11.49636459350586
    8. '   ' → logprob: -11.49636459350586
    9. ' ' → logprob: -12.12136459350586
    10. '1' → logprob: -12.49636459350586

Token 212: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.4740951359272003
    2. 'counts' (adapté à ' counts') → logprob: -0.9740951061248779
    3. 'count' → logprob: -11.099095344543457
    4. '1' → logprob: -13.474095344543457
    5. '           ' → logprob: -14.349095344543457
    6. ' ' → logprob: -14.724095344543457
    7. ' count' → logprob: -15.724095344543457
    8. '   ' → logprob: -15.974095344543457
    9. '_counts' → logprob: -15.974095344543457
    10. '            ' → logprob: -17.34909439086914

Token 213: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.7133641196996905e-05
    2. 'i' → logprob: -11.00002670288086
    3. '[' → logprob: -11.50002670288086
    4. ' [' → logprob: -15.50002670288086
    5. ' i' → logprob: -16.87502670288086
    6. '(i' → logprob: -17.62502670288086
    7. '```' → logprob: -17.62502670288086
    8. '[
' → logprob: -18.12502670288086
    9. '{i' → logprob: -18.12502670288086
    10. 'I' → logprob: -18.87502670288086

Token 214: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003009041247423738
    2. ' +' → logprob: -8.250301361083984
    3. '2' → logprob: -10.625301361083984
    4. '[' → logprob: -11.125301361083984
    5. ']' → logprob: -15.625301361083984
    6. '```' → logprob: -15.750301361083984
    7. '+
' → logprob: -16.500301361083984
    8. ' ' → logprob: -16.875301361083984
    9. '[
' → logprob: -17.750301361083984
    10. ']+' → logprob: -17.750301361083984

Token 215: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.625024795532227
    3. '+' → logprob: -17.000024795532227
    4. '1' → logprob: -17.250024795532227
    5. '```' → logprob: -17.500024795532227
    6. '۲' → logprob: -17.562524795532227
    7. '  ' → logprob: -17.687524795532227
    8. '<|end|>' → logprob: -17.875024795532227
    9. '   ' → logprob: -18.375024795532227
    10. '3' → logprob: -18.562524795532227

Token 216: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000736846646759659
    2. ']-' → logprob: -8.125737190246582
    3. ' ]' → logprob: -8.375737190246582
    4. '-' → logprob: -8.750737190246582
    5. ' -=' → logprob: -10.250737190246582
    6. '']' → logprob: -12.750737190246582
    7. '   ' → logprob: -12.875737190246582
    8. ' -' → logprob: -12.875737190246582
    9. '```' → logprob: -13.000737190246582
    10. '-=' → logprob: -13.375737190246582

Token 217: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.4982692301273346
    2. '-=' → logprob: -0.9982692003250122
    3. '-' → logprob: -3.7482693195343018
    4. ']' → logprob: -9.123269081115723
    5. ']-' → logprob: -9.748269081115723
    6. '=' → logprob: -9.748269081115723
    7. ' -' → logprob: -10.373269081115723
    8. '           ' → logprob: -10.373269081115723
    9. '   ' → logprob: -11.373269081115723
    10. '[' → logprob: -11.373269081115723

Token 218: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '```' → logprob: -17.500059127807617
    4. '１' → logprob: -18.625059127807617
    5. ' ' → logprob: -19.062559127807617
    6. '   ' → logprob: -19.062559127807617
    7. '۱' → logprob: -19.437559127807617
    8. '3' → logprob: -20.000059127807617
    9. '१' → logprob: -20.625059127807617
    10. '  ' → logprob: -20.875059127807617

Token 219: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '```' → logprob: -18.37501335144043
    4. '１' → logprob: -18.56251335144043
    5. '۱' → logprob: -18.93751335144043
    6. '   ' → logprob: -19.93751335144043
    7. '3' → logprob: -20.18751335144043
    8. '' → logprob: -20.31251335144043
    9. '१' → logprob: -20.31251335144043
    10. '১' → logprob: -20.50001335144043

Token 220: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.044774848967790604
    2. '
' → logprob: -3.1697747707366943
    3. '            
' → logprob: -7.544775009155273
    4. ' 
' → logprob: -7.919775009155273
    5. ' if' → logprob: -8.544775009155273
    6. '    
' → logprob: -9.044775009155273
    7. '  
' → logprob: -9.044775009155273
    8. '<|end|>' → logprob: -9.169775009155273
    9. 'if' → logprob: -9.294775009155273
    10. '       ' → logprob: -9.294775009155273

Token 221: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007101670489646494
    2. '
' → logprob: -8.250710487365723
    3. ' counts' → logprob: -8.750710487365723
    4. ' 
' → logprob: -8.875710487365723
    5. '            
' → logprob: -9.750710487365723
    6. 'counts' → logprob: -10.750710487365723
    7. ' if' → logprob: -10.875710487365723
    8. '       ' → logprob: -11.250710487365723
    9. '   ' → logprob: -11.500710487365723
    10. '  
' → logprob: -12.000710487365723

Token 222: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.32363682985305786
    2. ' if' → logprob: -1.323636770248413
    3. '           ' → logprob: -4.573637008666992
    4. '               ' → logprob: -14.823637008666992
    5. '       ' → logprob: -15.198637008666992
    6. '   ' → logprob: -15.573637008666992
    7. '
' → logprob: -16.573637008666992
    8. 'If' → logprob: -16.698637008666992
    9. 'return' → logprob: -16.698637008666992
    10. '	if' → logprob: -16.823637008666992

Token 223: ' back' (ID: 1602)
  Prédit: ' back'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' back' → logprob: -0.00861468818038702
    2. 'back' → logprob: -4.758614540100098
    3. '(back' → logprob: -16.133615493774414
    4. '	back' → logprob: -17.133615493774414
    5. ' ' → logprob: -17.883615493774414
    6. '_back' → logprob: -18.383615493774414
    7. 'backs' → logprob: -18.883615493774414
    8. 'Back' → logprob: -19.383615493774414
    9. ' ' → logprob: -19.883615493774414
    10. '.back' → logprob: -20.133615493774414

Token 224: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -3.128163257315464e-07
    2. 'tracking' → logprob: -15.375
    3. '       ' → logprob: -17.75
    4. 'tracker' → logprob: -17.75
    5. 'back' → logprob: -18.25
    6. 'count' → logprob: -18.375
    7. 'stack' → logprob: -18.625
    8. 'trace' → logprob: -18.625
    9. 'tracks' → logprob: -18.75
    10. '```' → logprob: -19.25

Token 225: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -14.250000953674316
    3. 'counts' → logprob: -15.375000953674316
    4. ' counts' → logprob: -15.500000953674316
    5. '[count' → logprob: -16.625001907348633
    6. ' (' → logprob: -17.250001907348633
    7. 'count' → logprob: -18.000001907348633
    8. '(
' → logprob: -19.000001907348633
    9. '(cnt' → logprob: -19.500001907348633
    10. '```' → logprob: -19.500001907348633

Token 226: 's' (ID: 82)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.07583731412887573
    2. 'ount' → logprob: -3.8258373737335205
    3. '(count' → logprob: -3.8258373737335205
    4. 'ts' → logprob: -4.700837135314941
    5. 'unts' → logprob: -4.950837135314941
    6. 'count' → logprob: -5.075837135314941
    7. 'nts' → logprob: -6.450837135314941
    8. ' counts' → logprob: -6.450837135314941
    9. 's' → logprob: -6.575837135314941
    10. 'unt' → logprob: -6.700837135314941

Token 227: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4742478132247925
    2. '):' → logprob: -0.9742478132247925
    3. ' counts' → logprob: -9.224247932434082
    4. ')' → logprob: -10.474247932434082
    5. '               ' → logprob: -11.224247932434082
    6. '):

' → logprob: -11.974247932434082
    7. 'counts' → logprob: -11.974247932434082
    8. '(count' → logprob: -12.224247932434082
    9. '):
' → logprob: -12.599247932434082
    10. '           ' → logprob: -12.724247932434082

Token 228: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01160157285630703
    2. ' counts' → logprob: -4.636601448059082
    3. 'counts' → logprob: -6.386601448059082
    4. '           ' → logprob: -9.136601448059082
    5. '```' → logprob: -10.011601448059082
    6. '   ' → logprob: -13.011601448059082
    7. '_counts' → logprob: -13.136601448059082
    8. '                   ' → logprob: -13.761601448059082
    9. 'count' → logprob: -14.511601448059082
    10. '       ' → logprob: -15.011601448059082

Token 229: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.589914858341217
    2. ' counts' → logprob: -0.839914858341217
    3. '               ' → logprob: -4.589914798736572
    4. '           ' → logprob: -5.714914798736572
    5. '   ' → logprob: -7.964914798736572
    6. '       ' → logprob: -10.33991527557373
    7. 'count' → logprob: -10.83991527557373
    8. '_counts' → logprob: -10.96491527557373
    9. '                   ' → logprob: -12.46491527557373
    10. 'return' → logprob: -13.33991527557373

Token 230: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.955703818472102e-05
    2. '[' → logprob: -9.875059127807617
    3. 'i' → logprob: -12.000059127807617
    4. '[
' → logprob: -14.625059127807617
    5. ']' → logprob: -14.875059127807617
    6. '[count' → logprob: -15.750059127807617
    7. '[index' → logprob: -16.250059127807617
    8. '[...]' → logprob: -16.250059127807617
    9. '[I' → logprob: -16.250059127807617
    10. '[]' → logprob: -16.500059127807617

Token 231: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012570773833431304
    2. ']+=' → logprob: -9.000125885009766
    3. ' ]' → logprob: -13.750125885009766
    4. '+' → logprob: -14.875125885009766
    5. ']+' → logprob: -15.125125885009766
    6. '']' → logprob: -15.250125885009766
    7. '+]' → logprob: -16.625125885009766
    8. 'i' → logprob: -16.625125885009766
    9. '"]' → logprob: -17.250125885009766
    10. '   ' → logprob: -17.625125885009766

Token 232: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.38699960708618164
    2. '+=' → logprob: -1.1369996070861816
    3. '+' → logprob: -9.136999130249023
    4. ']+=' → logprob: -10.886999130249023
    5. '    ' → logprob: -14.261999130249023
    6. '            ' → logprob: -14.386999130249023
    7. '   ' → logprob: -15.386999130249023
    8. '=' → logprob: -15.386999130249023
    9. '           ' → logprob: -15.636999130249023
    10. ' ' → logprob: -15.761999130249023

Token 233: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -18.562501907348633
    4. '   ' → logprob: -19.250001907348633
    5. '3' → logprob: -19.375001907348633
    6. '۱' → logprob: -20.125001907348633
    7. '१' → logprob: -20.125001907348633
    8. '১' → logprob: -20.250001907348633
    9. '１' → logprob: -20.375001907348633
    10. '0' → logprob: -21.375001907348633

Token 234: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '3' → logprob: -17.5
    4. '```' → logprob: -19.0
    5. '
' → logprob: -19.3125
    6. '১' → logprob: -19.625
    7. '۱' → logprob: -19.625
    8. '१' → logprob: -19.6875
    9. '   ' → logprob: -19.875
    10. '2' → logprob: -20.4375

Token 235: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25239044427871704
    2. '               ' → logprob: -1.5023903846740723
    3. 'counts' → logprob: -7.877390384674072
    4. ' counts' → logprob: -9.62739086151123
    5. '                   ' → logprob: -11.50239086151123
    6. '       ' → logprob: -13.00239086151123
    7. '              ' → logprob: -13.87739086151123
    8. 'count' → logprob: -14.37739086151123
    9. '            ' → logprob: -14.37739086151123
    10. '          ' → logprob: -14.75239086151123

Token 236: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011497041210532188
    2. 'counts' → logprob: -4.5114970207214355
    3. '               ' → logprob: -8.011497497558594
    4. ' counts' → logprob: -9.261497497558594
    5. 'count' → logprob: -11.136497497558594
    6. '       ' → logprob: -12.511497497558594
    7. '                   ' → logprob: -13.261497497558594
    8. '          ' → logprob: -14.136497497558594
    9. '   ' → logprob: -14.386497497558594
    10. '            ' → logprob: -14.511497497558594

Token 237: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.00011129142512800172
    2. ' counts' → logprob: -9.25011157989502
    3. '               ' → logprob: -11.75011157989502
    4. '           ' → logprob: -12.00011157989502
    5. '   ' → logprob: -14.50011157989502
    6. 'count' → logprob: -14.75011157989502
    7. 'return' → logprob: -17.000110626220703
    8. '                   ' → logprob: -17.750110626220703
    9. ' ' → logprob: -19.000110626220703
    10. 'i' → logprob: -19.625110626220703

Token 238: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.921253225300461e-05
    2. '+' → logprob: -9.625069618225098
    3. '+i' → logprob: -13.125069618225098
    4. '[' → logprob: -14.125069618225098
    5. 'i' → logprob: -15.500069618225098
    6. '+[' → logprob: -15.875069618225098
    7. '][' → logprob: -17.75006866455078
    8. '[j' → logprob: -18.50006866455078
    9. '(i' → logprob: -18.87506866455078
    10. '[I' → logprob: -19.12506866455078

Token 239: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.3080716346157715e-05
    2. ' +' → logprob: -10.750022888183594
    3. '[' → logprob: -14.250022888183594
    4. '+
' → logprob: -15.250022888183594
    5. '+i' → logprob: -15.375022888183594
    6. '1' → logprob: -15.500022888183594
    7. '+[' → logprob: -16.125022888183594
    8. ']' → logprob: -17.125022888183594
    9. ']+' → logprob: -17.250022888183594
    10. '   ' → logprob: -18.375022888183594

Token 240: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.020631931722164154
    2. '1' → logprob: -3.895632028579712
    3. ' ' → logprob: -9.395631790161133
    4. '+' → logprob: -12.270631790161133
    5. '0' → logprob: -14.145631790161133
    6. '   ' → logprob: -14.645631790161133
    7. '	' → logprob: -15.458131790161133
    8. '  ' → logprob: -15.895631790161133
    9. '[' → logprob: -16.333131790161133
    10. '    ' → logprob: -16.583131790161133

Token 241: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3790285885334015
    2. ' +=' → logprob: -1.504028558731079
    3. ']+=' → logprob: -2.754028558731079
    4. ' ]' → logprob: -4.129028797149658
    5. '+=' → logprob: -4.754028797149658
    6. ')' → logprob: -6.754028797149658
    7. '               ' → logprob: -6.754028797149658
    8. '+' → logprob: -7.004028797149658
    9. '                ' → logprob: -7.254028797149658
    10. '                   ' → logprob: -8.1290283203125

Token 242: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2618212401866913
    2. '+=' → logprob: -1.5118212699890137
    3. '+' → logprob: -4.636821269989014
    4. ']+=' → logprob: -9.261820793151855
    5. ' +' → logprob: -10.011820793151855
    6. ')' → logprob: -12.511820793151855
    7. '<|end|>' → logprob: -12.886820793151855
    8. '```' → logprob: -13.136820793151855
    9. '           ' → logprob: -13.511820793151855
    10. ' ' → logprob: -13.886820793151855

Token 243: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. '```' → logprob: -17.501502990722656
    4. ' ' → logprob: -17.751502990722656
    5. '１' → logprob: -18.626502990722656
    6. '3' → logprob: -19.251502990722656
    7. '0' → logprob: -19.439002990722656
    8. '   ' → logprob: -19.689002990722656
    9. '2' → logprob: -19.689002990722656
    10. '۱' → logprob: -19.939002990722656

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '１' → logprob: -19.000003814697266
    4. '```' → logprob: -19.125003814697266
    5. '۱' → logprob: -19.500003814697266
    6. '   ' → logprob: -19.687503814697266
    7. '<|end|>' → logprob: -20.375003814697266
    8. '১' → logprob: -20.625003814697266
    9. '१' → logprob: -20.812503814697266
    10. '3' → logprob: -21.125003814697266

Token 245: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007618102710694075
    2. '           ' → logprob: -4.882617950439453
    3. 'counts' → logprob: -12.382617950439453
    4. '              ' → logprob: -13.132617950439453
    5. ' counts' → logprob: -13.257617950439453
    6. '                   ' → logprob: -13.382617950439453
    7. '			' → logprob: -14.632617950439453
    8. '       ' → logprob: -14.882617950439453
    9. '             ' → logprob: -14.882617950439453
    10. 'count' → logprob: -15.007617950439453

Token 246: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.38706082105636597
    2. '           ' → logprob: -1.1370608806610107
    3. 'counts' → logprob: -9.01206111907959
    4. ' counts' → logprob: -9.88706111907959
    5. '                   ' → logprob: -12.38706111907959
    6. '       ' → logprob: -12.38706111907959
    7. '              ' → logprob: -13.01206111907959
    8. '            ' → logprob: -13.51206111907959
    9. '```' → logprob: -13.63706111907959
    10. '   ' → logprob: -13.88706111907959

Token 247: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.001174747827462852
    2. ' counts' → logprob: -6.7511749267578125
    3. 'count' → logprob: -12.376174926757812
    4. '               ' → logprob: -15.251174926757812
    5. '           ' → logprob: -16.126174926757812
    6. 'i' → logprob: -17.626174926757812
    7. '   ' → logprob: -18.376174926757812
    8. 'c' → logprob: -18.876174926757812
    9. '                   ' → logprob: -19.876174926757812
    10. '_counts' → logprob: -20.376174926757812

Token 248: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.676292231422849e-05
    2. '[' → logprob: -11.125017166137695
    3. 'i' → logprob: -13.375017166137695
    4. ' [' → logprob: -15.125017166137695
    5. '```' → logprob: -16.500017166137695
    6. '[I' → logprob: -17.125017166137695
    7. '[
' → logprob: -17.500017166137695
    8. '][' → logprob: -18.250017166137695
    9. '`' → logprob: -18.500017166137695
    10. ' i' → logprob: -19.000017166137695

Token 249: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003513125702738762
    2. ' +' → logprob: -8.000350952148438
    3. '2' → logprob: -11.750350952148438
    4. '[' → logprob: -11.875350952148438
    5. ']+' → logprob: -14.375350952148438
    6. ']' → logprob: -15.500350952148438
    7. '```' → logprob: -16.875350952148438
    8. '+
' → logprob: -17.250350952148438
    9. '   ' → logprob: -17.250350952148438
    10. '＋' → logprob: -17.750350952148438

Token 250: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.000006675720215
    3. '1' → logprob: -15.500006675720215
    4. '+' → logprob: -16.68750762939453
    5. '۲' → logprob: -17.31250762939453
    6. '```' → logprob: -17.43750762939453
    7. '3' → logprob: -17.81250762939453
    8. ']' → logprob: -17.93750762939453
    9. ')' → logprob: -18.31250762939453
    10. '   ' → logprob: -18.68750762939453

Token 251: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001410850090906024
    2. ']+=' → logprob: -9.250141143798828
    3. ' ]' → logprob: -10.500141143798828
    4. '']' → logprob: -11.125141143798828
    5. ']+' → logprob: -14.000141143798828
    6. ' +=' → logprob: -14.875141143798828
    7. '"]' → logprob: -15.125141143798828
    8. ')' → logprob: -15.125141143798828
    9. '+' → logprob: -15.375141143798828
    10. '+=' → logprob: -15.375141143798828

Token 252: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12824171781539917
    2. ' +=' → logprob: -2.128241777420044
    3. '+' → logprob: -6.753241539001465
    4. ']+=' → logprob: -8.878241539001465
    5. '```' → logprob: -13.378241539001465
    6. ')' → logprob: -13.378241539001465
    7. '=' → logprob: -13.878241539001465
    8. ' +' → logprob: -14.128241539001465
    9. ']' → logprob: -15.253241539001465
    10. '+='' → logprob: -15.753241539001465

Token 253: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -16.87500762939453
    4. '   ' → logprob: -18.31250762939453
    5. '<|end|>' → logprob: -18.43750762939453
    6. '+' → logprob: -18.81250762939453
    7. '۱' → logprob: -18.81250762939453
    8. '１' → logprob: -19.25000762939453
    9. '3' → logprob: -19.43750762939453
    10. '১' → logprob: -19.87500762939453

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.125001907348633
    3. '3' → logprob: -15.625001907348633
    4. '```' → logprob: -17.375001907348633
    5. '11' → logprob: -17.625001907348633
    6. '13' → logprob: -17.750001907348633
    7. '۱' → logprob: -17.812501907348633
    8. '   ' → logprob: -18.187501907348633
    9. '<|end|>' → logprob: -18.687501907348633
    10. '１' → logprob: -18.937501907348633

Token 255: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.141186450899113e-05
    2. 'return' → logprob: -10.875020980834961
    3. ' return' → logprob: -13.750020980834961
    4. '           ' → logprob: -14.500020980834961
    5. '                   ' → logprob: -15.000020980834961
    6. '                
' → logprob: -15.875020980834961
    7. '              ' → logprob: -16.25002098083496
    8. '       ' → logprob: -16.87502098083496
    9. '                ' → logprob: -17.00002098083496
    10. ':return' → logprob: -17.12502098083496

Token 256: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.5577775128767826e-06
    2. '           ' → logprob: -12.750005722045898
    3. 'return' → logprob: -13.250005722045898
    4. ' return' → logprob: -14.875005722045898
    5. '                   ' → logprob: -15.625005722045898
    6. '       ' → logprob: -16.1250057220459
    7. '              ' → logprob: -16.5000057220459
    8. '<|end|>' → logprob: -16.7500057220459
    9. '                
' → logprob: -17.6250057220459
    10. '			' → logprob: -17.7500057220459

Token 257: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01566489227116108
    2. ' return' → logprob: -4.265665054321289
    3. '               ' → logprob: -6.515665054321289
    4. '                   ' → logprob: -11.265665054321289
    5. '           ' → logprob: -12.015665054321289
    6. '   ' → logprob: -14.515665054321289
    7. ':return' → logprob: -15.515665054321289
    8. '       ' → logprob: -15.640665054321289
    9. '	return' → logprob: -15.640665054321289
    10. '                       ' → logprob: -16.01566505432129

Token 258: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0031777136027812958
    2. ' True' → logprob: -5.753177642822266
    3. 'False' → logprob: -17.878177642822266
    4. '(True' → logprob: -20.753177642822266
    5. '=True' → logprob: -21.753177642822266
    6. '_true' → logprob: -24.128177642822266
    7. 'Tr' → logprob: -24.378177642822266
    8. 'T' → logprob: -25.003177642822266
    9. '.True' → logprob: -25.753177642822266
    10. 'true' → logprob: -26.128177642822266

Token 259: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005678066518157721
    2. 'counts' → logprob: -7.50056791305542
    3. '       ' → logprob: -11.500567436218262
    4. ' counts' → logprob: -12.625567436218262
    5. '               ' → logprob: -14.375567436218262
    6. '   ' → logprob: -14.625567436218262
    7. '_counts' → logprob: -17.375568389892578
    8. '          ' → logprob: -17.375568389892578
    9. 'count' → logprob: -17.375568389892578
    10. '```' → logprob: -17.625568389892578

Token 260: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02111702226102352
    2. 'counts' → logprob: -3.8961169719696045
    3. ' counts' → logprob: -8.021117210388184
    4. '       ' → logprob: -8.396117210388184
    5. '   ' → logprob: -11.271117210388184
    6. '               ' → logprob: -12.646117210388184
    7. '```' → logprob: -13.021117210388184
    8. '_counts' → logprob: -13.771117210388184
    9. '
' → logprob: -15.146117210388184
    10. '          ' → logprob: -15.396117210388184

Token 261: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.16800877451896667
    2. '           ' → logprob: -1.918008804321289
    3. ' counts' → logprob: -4.918008804321289
    4. '       ' → logprob: -8.293008804321289
    5. '               ' → logprob: -9.168008804321289
    6. '   ' → logprob: -9.668008804321289
    7. 'count' → logprob: -11.043008804321289
    8. '_counts' → logprob: -12.668008804321289
    9. '
' → logprob: -14.168008804321289
    10. '                   ' → logprob: -14.293008804321289

Token 262: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.9795445849886164e-05
    2. '[' → logprob: -9.750060081481934
    3. 'i' → logprob: -13.750060081481934
    4. '[I' → logprob: -15.250060081481934
    5. '[count' → logprob: -17.750059127807617
    6. '[...]' → logprob: -18.125059127807617
    7. '(i' → logprob: -18.250059127807617
    8. '[j' → logprob: -18.250059127807617
    9. '[index' → logprob: -18.500059127807617
    10. ']' → logprob: -18.750059127807617

Token 263: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010849492624402046
    2. ']+=' → logprob: -4.760849475860596
    3. '+' → logprob: -6.260849475860596
    4. ']+' → logprob: -8.385849952697754
    5. '[i' → logprob: -10.010849952697754
    6. 'i' → logprob: -11.010849952697754
    7. '+=' → logprob: -11.260849952697754
    8. ' ]' → logprob: -12.135849952697754
    9. '][' → logprob: -12.635849952697754
    10. '[' → logprob: -12.760849952697754

Token 264: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.009136002510786057
    2. ' +=' → logprob: -4.759136199951172
    3. ']+=' → logprob: -7.759136199951172
    4. '+' → logprob: -9.384136199951172
    5. '=' → logprob: -11.634136199951172
    6. ']' → logprob: -13.884136199951172
    7. ')' → logprob: -14.759136199951172
    8. '>' → logprob: -16.634136199951172
    9. '[' → logprob: -16.884136199951172
    10. ']+' → logprob: -17.134136199951172

Token 265: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -20.500011444091797
    4. '１' → logprob: -21.000011444091797
    5. '```' → logprob: -21.312511444091797
    6. '3' → logprob: -21.937511444091797
    7. '۱' → logprob: -22.125011444091797
    8. '0' → logprob: -22.250011444091797
    9. '  ' → logprob: -22.312511444091797
    10. ' ' → logprob: -22.375011444091797

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '   ' → logprob: -19.25
    4. '3' → logprob: -19.5
    5. '１' → logprob: -20.0
    6. '0' → logprob: -20.3125
    7. '```' → logprob: -20.375
    8. '2' → logprob: -20.75
    9. '۱' → logprob: -20.8125
    10. '१' → logprob: -21.0

Token 267: '
' (ID: 198)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.49919092655181885
    2. '           ' → logprob: -0.9991909265518188
    3. ' counts' → logprob: -3.7491908073425293
    4. '               ' → logprob: -7.249190807342529
    5. 'count' → logprob: -8.624191284179688
    6. '   ' → logprob: -8.999191284179688
    7. '[i' → logprob: -9.874191284179688
    8. '1' → logprob: -10.249191284179688
    9. '                   ' → logprob: -10.374191284179688
    10. '
' → logprob: -10.499191284179688

Token 268: '           ' (ID: 352)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.2354772835969925
    2. 'i' → logprob: -1.985477328300476
    3. '[i' → logprob: -3.1104772090911865
    4. '1' → logprob: -3.8604772090911865
    5. ' counts' → logprob: -5.235477447509766
    6. 'count' → logprob: -6.985477447509766
    7. ' i' → logprob: -8.860477447509766
    8. '           ' → logprob: -8.985477447509766
    9. '(i' → logprob: -9.860477447509766
    10. '   ' → logprob: -10.110477447509766

Token 269: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.001927567063830793
    2. ' counts' → logprob: -6.501927375793457
    3. '1' → logprob: -8.126927375793457
    4. 'count' → logprob: -9.001927375793457
    5. 'i' → logprob: -12.001927375793457
    6. '_counts' → logprob: -16.126928329467773
    7. '+' → logprob: -17.126928329467773
    8. ' ' → logprob: -17.126928329467773
    9. '   ' → logprob: -17.501928329467773
    10. 'indices' → logprob: -17.626928329467773

Token 270: '[i' (ID: 1768)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004740314558148384
    2. '[i' → logprob: -5.379740238189697
    3. '+i' → logprob: -9.379740715026855
    4. '[' → logprob: -10.379740715026855
    5. ' +' → logprob: -13.129740715026855
    6. '+[' → logprob: -13.504740715026855
    7. 'i' → logprob: -14.879740715026855
    8. '+
' → logprob: -15.004740715026855
    9. '```' → logprob: -15.254740715026855
    10. '2' → logprob: -16.62973976135254

Token 271: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003485745983198285
    2. ' +' → logprob: -8.250349044799805
    3. '2' → logprob: -9.375349044799805
    4. ']' → logprob: -14.125349044799805
    5. '+
' → logprob: -14.375349044799805
    6. ']+' → logprob: -14.375349044799805
    7. ' ' → logprob: -16.000349044799805
    8. '-' → logprob: -16.250349044799805
    9. '[' → logprob: -16.375349044799805
    10. '   ' → logprob: -16.500349044799805

Token 272: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.688212614681106e-05
    2. '1' → logprob: -11.250017166137695
    3. ' ' → logprob: -12.625017166137695
    4. '   ' → logprob: -15.750017166137695
    5. '
' → logprob: -16.000017166137695
    6. '２' → logprob: -17.312517166137695
    7. '```' → logprob: -17.437517166137695
    8. '۲' → logprob: -17.437517166137695
    9. '+' → logprob: -17.937517166137695
    10. '	' → logprob: -18.000017166137695

Token 273: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09810897707939148
    2. ']+=' → logprob: -3.223109006881714
    3. ' +=' → logprob: -3.723109006881714
    4. '+' → logprob: -3.973109006881714
    5. ' ]' → logprob: -4.848108768463135
    6. '+=' → logprob: -6.348108768463135
    7. ']+' → logprob: -7.473108768463135
    8. ')' → logprob: -8.348109245300293
    9. ' +' → logprob: -9.473109245300293
    10. '']' → logprob: -9.973109245300293

Token 274: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06589291244745255
    2. '+=' → logprob: -3.1908929347991943
    3. ' +=' → logprob: -3.8158929347991943
    4. ' +' → logprob: -7.940892696380615
    5. ']+=' → logprob: -8.315893173217773
    6. ']' → logprob: -12.315893173217773
    7. ')' → logprob: -12.440893173217773
    8. '1' → logprob: -13.690893173217773
    9. ']+' → logprob: -13.940893173217773
    10. ')+' → logprob: -14.315893173217773

Token 275: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004879915213678032
    2. ' ' → logprob: -7.625487804412842
    3. '2' → logprob: -18.50048828125
    4. '１' → logprob: -19.00048828125
    5. '   ' → logprob: -19.25048828125
    6. '```' → logprob: -19.37548828125
    7. '۱' → logprob: -19.87548828125
    8. '  ' → logprob: -20.06298828125
    9. '	' → logprob: -20.43798828125
    10. ' ' → logprob: -20.43798828125

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '2' → logprob: -17.375003814697266
    4. '۱' → logprob: -17.875003814697266
    5. '```' → logprob: -18.000003814697266
    6. '１' → logprob: -18.312503814697266
    7. '<|end|>' → logprob: -18.437503814697266
    8. '0' → logprob: -19.437503814697266
    9. '+' → logprob: -19.500003814697266
    10. '11' → logprob: -19.625003814697266

Token 277: '
' (ID: 198)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.7673043608665466
    2. ' counts' → logprob: -1.2673044204711914
    3. '           ' → logprob: -1.3923044204711914
    4. '+' → logprob: -5.892304420471191
    5. 'count' → logprob: -6.517304420471191
    6. '               ' → logprob: -7.267304420471191
    7. ' +' → logprob: -8.267304420471191
    8. '            ' → logprob: -8.517304420471191
    9. '[i' → logprob: -10.392304420471191
    10. '```' → logprob: -10.392304420471191

Token 278: '           ' (ID: 352)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.11465238779783249
    2. '           ' → logprob: -2.614652395248413
    3. ' counts' → logprob: -3.364652395248413
    4. '               ' → logprob: -8.114652633666992
    5. 'count' → logprob: -8.739652633666992
    6. '1' → logprob: -10.114652633666992
    7. '   ' → logprob: -11.114652633666992
    8. '+' → logprob: -11.114652633666992
    9. '            ' → logprob: -12.114652633666992
    10. '[i' → logprob: -12.239652633666992

Token 279: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.00013524403038900346
    2. ' counts' → logprob: -9.75013542175293
    3. 'count' → logprob: -9.87513542175293
    4. 'i' → logprob: -10.62513542175293
    5. '1' → logprob: -15.25013542175293
    6. '   ' → logprob: -15.37513542175293
    7. '[i' → logprob: -15.37513542175293
    8. 'c' → logprob: -15.37513542175293
    9. '               ' → logprob: -16.25013542175293
    10. '           ' → logprob: -16.37513542175293

Token 280: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.129266067640856e-05
    2. '[' → logprob: -11.000020980834961
    3. '+' → logprob: -12.500020980834961
    4. ' [' → logprob: -14.250020980834961
    5. '+i' → logprob: -16.12502098083496
    6. 'i' → logprob: -16.62502098083496
    7. '```' → logprob: -16.87502098083496
    8. '[
' → logprob: -17.62502098083496
    9. '[I' → logprob: -18.00002098083496
    10. '   ' → logprob: -19.12502098083496

Token 281: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002469158498570323
    2. ' +' → logprob: -8.37524700164795
    3. '[' → logprob: -11.12524700164795
    4. '2' → logprob: -13.87524700164795
    5. '```' → logprob: -14.87524700164795
    6. '+[' → logprob: -16.750246047973633
    7. '＋' → logprob: -16.875246047973633
    8. '+
' → logprob: -17.000246047973633
    9. '+i' → logprob: -17.312746047973633
    10. '++' → logprob: -17.750246047973633

Token 282: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.729906196298543e-06
    2. ' ' → logprob: -11.625009536743164
    3. '3' → logprob: -15.750009536743164
    4. '   ' → logprob: -16.062509536743164
    5. '1' → logprob: -16.187509536743164
    6. '```' → logprob: -16.875009536743164
    7. '+' → logprob: -16.937509536743164
    8. '۲' → logprob: -17.125009536743164
    9. '
' → logprob: -17.312509536743164
    10. '  ' → logprob: -17.375009536743164

Token 283: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00014561474381480366
    2. ' ]' → logprob: -9.12514591217041
    3. ']+=' → logprob: -10.37514591217041
    4. '   ' → logprob: -13.50014591217041
    5. ']+' → logprob: -13.75014591217041
    6. '']' → logprob: -14.00014591217041
    7. ' +=' → logprob: -14.00014591217041
    8. '+' → logprob: -14.37514591217041
    9. '+=' → logprob: -15.75014591217041
    10. '+]' → logprob: -16.000144958496094

Token 284: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1568119078874588
    2. ' +=' → logprob: -2.1568119525909424
    3. '+' → logprob: -3.5318119525909424
    4. ']+=' → logprob: -8.656811714172363
    5. ' +' → logprob: -11.906811714172363
    6. '```' → logprob: -12.656811714172363
    7. ')' → logprob: -13.781811714172363
    8. '+='' → logprob: -14.156811714172363
    9. ']' → logprob: -14.531811714172363
    10. ']+' → logprob: -14.656811714172363

Token 285: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004078758880496025
    2. ' ' → logprob: -5.5040788650512695
    3. '3' → logprob: -16.004077911376953
    4. ' ' → logprob: -17.004077911376953
    5. '   ' → logprob: -17.004077911376953
    6. '2' → logprob: -17.191577911376953
    7. '  ' → logprob: -17.691577911376953
    8. '```' → logprob: -17.754077911376953
    9. '<|end|>' → logprob: -18.191577911376953
    10. '0' → logprob: -18.254077911376953

Token 286: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011033779446734115
    2. ' ' → logprob: -9.125110626220703
    3. '3' → logprob: -14.875110626220703
    4. '   ' → logprob: -15.375110626220703
    5. '2' → logprob: -15.875110626220703
    6. '0' → logprob: -16.187610626220703
    7. '  ' → logprob: -16.437610626220703
    8. '```' → logprob: -16.437610626220703
    9. '-' → logprob: -16.937610626220703
    10. '' → logprob: -17.062610626220703

Token 287: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004025481757707894
    2. 'return' → logprob: -8.625402450561523
    3. '   ' → logprob: -9.125402450561523
    4. '
' → logprob: -9.250402450561523
    5. '           ' → logprob: -11.375402450561523
    6. ' return' → logprob: -12.625402450561523
    7. '        
' → logprob: -13.500402450561523
    8. '    
' → logprob: -13.750402450561523
    9. '	return' → logprob: -15.375402450561523
    10. '               ' → logprob: -15.875402450561523

Token 288: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00030936390976421535
    2. '   ' → logprob: -8.625308990478516
    3. 'return' → logprob: -9.625308990478516
    4. '           ' → logprob: -10.125308990478516
    5. '
' → logprob: -10.750308990478516
    6. ' return' → logprob: -14.125308990478516
    7. '        
' → logprob: -14.750308990478516
    8. '               ' → logprob: -15.000308990478516
    9. '    
' → logprob: -15.125308990478516
    10. '```' → logprob: -15.250308990478516

Token 289: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040647514164447784
    2. 'return' (adapté à ' return') → logprob: -3.290647506713867
    3. '   ' → logprob: -6.415647506713867
    4. '
' → logprob: -7.040647506713867
    5. ' return' → logprob: -9.540647506713867
    6. '    
' → logprob: -11.665647506713867
    7. '        
' → logprob: -12.415647506713867
    8. '	return' → logprob: -12.790647506713867
    9. '           ' → logprob: -13.165647506713867
    10. '```' → logprob: -14.790647506713867

Token 290: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.7697225252486533e-06
    2. ' False' → logprob: -12.500003814697266
    3. 'false' → logprob: -23.750003814697266
    4. '(False' → logprob: -24.250003814697266
    5. 'F' → logprob: -25.250003814697266
    6. 'True' → logprob: -25.625003814697266
    7. '_false' → logprob: -25.625003814697266
    8. '=False' → logprob: -27.375003814697266
    9. 'None' → logprob: -27.875003814697266
    10. 'FALSE' → logprob: -28.000003814697266

Token 291: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06391359120607376
    2. 'return' → logprob: -3.063913583755493
    3. '<|end|>' → logprob: -4.813913822174072
    4. '
' → logprob: -5.563913822174072
    5. '    
' → logprob: -6.563913822174072
    6. ' return' → logprob: -7.063913822174072
    7. '	return' → logprob: -8.188913345336914
    8. ')' → logprob: -8.438913345336914
    9. '<|end|>' → logprob: -9.188913345336914
    10. 'def' → logprob: -9.438913345336914

Token 292: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01724381372332573
    2. 'return' → logprob: -4.5172438621521
    3. ' return' → logprob: -5.5172438621521
    4. '    
' → logprob: -7.0172438621521
    5. '	return' → logprob: -7.8922438621521
    6. 'count' → logprob: -8.017243385314941
    7. ' counts' → logprob: -9.142243385314941
    8. 'c' → logprob: -9.267243385314941
    9. 'counts' → logprob: -9.267243385314941
    10. '
' → logprob: -10.142243385314941

Token 293: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10777977854013443
    2. ' return' → logprob: -2.8577797412872314
    3. '   ' → logprob: -3.1077797412872314
    4. '
' → logprob: -10.732779502868652
    5. '    
' → logprob: -10.732779502868652
    6. '	return' → logprob: -10.732779502868652
    7. ' ' → logprob: -11.982779502868652
    8. ' 
' → logprob: -13.232779502868652
    9. '  ' → logprob: -13.732779502868652
    10. '       ' → logprob: -13.857779502868652

Token 294: ' back' (ID: 1602)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.0009114635176956654
    2. ' back' → logprob: -7.000911235809326
    3. 'all' → logprob: -20.250911712646484
    4. 'backs' → logprob: -21.125911712646484
    5. 'backup' → logprob: -21.625911712646484
    6. '	back' → logprob: -21.750911712646484
    7. '(back' → logprob: -22.000911712646484
    8. 'b' → logprob: -22.375911712646484
    9. 'Back' → logprob: -22.625911712646484
    10. 'True' → logprob: -23.875911712646484

Token 295: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -3.8889261304575484e-06
    2. 'tr' → logprob: -13.375003814697266
    3. '(track' → logprob: -14.500003814697266
    4. 'tract' → logprob: -14.625003814697266
    5. 't' → logprob: -14.875003814697266
    6. 'tracking' → logprob: -15.000003814697266
    7. 'back' → logprob: -15.500003814697266
    8. 'trace' → logprob: -16.125003814697266
    9. '_track' → logprob: -16.125003814697266
    10. 'tra' → logprob: -16.250003814697266

Token 296: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.00014370749704539776
    2. '(' → logprob: -8.875144004821777
    3. '_counts' → logprob: -13.750144004821777
    4. 'counts' → logprob: -14.125144004821777
    5. '[count' → logprob: -14.375144004821777
    6. ' counts' → logprob: -15.250144004821777
    7. '(copy' → logprob: -15.500144004821777
    8. ' (' → logprob: -15.750144004821777
    9. '(co' → logprob: -15.875144004821777
    10. '(c' → logprob: -16.12514305114746

Token 297: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0024603179190307856
    2. 'ts' → logprob: -6.127460479736328
    3. 'nts' → logprob: -8.502460479736328
    4. ')' → logprob: -10.002460479736328
    5. '[' → logprob: -11.752460479736328
    6. '(s' → logprob: -12.127460479736328
    7. 'unts' → logprob: -12.252460479736328
    8. 'sts' → logprob: -13.627460479736328
    9. ')
' → logprob: -13.877460479736328
    10. 'ents' → logprob: -14.002460479736328

Token 298: '[:' (ID: 7808)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ' )' → logprob: -13.375001907348633
    3. '[' → logprob: -16.000001907348633
    4. ')
' → logprob: -16.375001907348633
    5. '))' → logprob: -18.375001907348633
    6. ')`' → logprob: -18.625001907348633
    7. ' ' → logprob: -19.500001907348633
    8. '[])' → logprob: -20.125001907348633
    9. '   ' → logprob: -20.125001907348633
    10. '(' → logprob: -20.250001907348633

Token 299: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00035453110467642546
    2. ')' → logprob: -8.125354766845703
    3. ']' → logprob: -10.125354766845703
    4. '])
' → logprob: -11.750354766845703
    5. ' ])' → logprob: -12.250354766845703
    6. ']))' → logprob: -13.250354766845703
    7. '))' → logprob: -13.875354766845703
    8. '()' → logprob: -14.500354766845703
    9. ')])' → logprob: -14.500354766845703
    10. ')]' → logprob: -14.500354766845703

Token 300: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 301: ' is' (ID: 382)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.43881288170814514
    2. ' is' → logprob: -2.1888129711151123
    3. ' calculate' → logprob: -3.3138129711151123
    4. ' find' → logprob: -3.5638129711151123
    5. ' check' → logprob: -3.5638129711151123
    6. ' possible' → logprob: -3.9388129711151123
    7. ' parse' → logprob: -4.563812732696533
    8. ' score' → logprob: -4.563812732696533
    9. ' sum' → logprob: -4.688812732696533
    10. ' valid' → logprob: -4.688812732696533

Token 302: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.2812545597553253
    2. '_w' → logprob: -1.906254529953003
    3. '_complete' → logprob: -3.531254529953003
    4. '_hand' → logprob: -4.531254768371582
    5. '_partition' → logprob: -4.781254768371582
    6. '_trip' → logprob: -4.781254768371582
    7. '_possible' → logprob: -4.906254768371582
    8. '_k' → logprob: -5.156254768371582
    9. '_' → logprob: -5.906254768371582
    10. '_s' → logprob: -6.156254768371582

Token 303: '_comb' (ID: 105956)
  Prédit: '_hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hand' → logprob: -0.0006909898947924376
    2. '_' → logprob: -8.500691413879395
    3. '_p' → logprob: -9.000691413879395
    4. '_comb' → logprob: -9.125691413879395
    5. '_m' → logprob: -9.500691413879395
    6. '_partition' → logprob: -10.125691413879395
    7. '(hand' → logprob: -11.000691413879395
    8. '_tile' → logprob: -11.125691413879395
    9. '_sh' → logprob: -11.250691413879395
    10. '_combo' → logprob: -11.625691413879395

Token 304: 'ination' (ID: 3273)
  Prédit: 'ination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ination' → logprob: -2.463036435074173e-05
    2. 'in' → logprob: -11.750024795532227
    3. 'ined' → logprob: -11.875024795532227
    4. 'ining' → logprob: -13.125024795532227
    5. 'ation' → logprob: -13.250024795532227
    6. 'onation' → logprob: -13.625024795532227
    7. 'inação' → logprob: -13.875024795532227
    8. 'ina' → logprob: -14.000024795532227
    9. 'INATION' → logprob: -14.500024795532227
    10. 'bination' → logprob: -14.500024795532227

Token 305: '(cards' (ID: 161529)
  Prédit: '(hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(hand' → logprob: -0.983832836151123
    2. '(cards' → logprob: -1.108832836151123
    3. '(' → logprob: -1.608832836151123
    4. '(count' → logprob: -3.233832836151123
    5. '(card' → logprob: -3.358832836151123
    6. '(deck' → logprob: -4.233832836151123
    7. '(com' → logprob: -5.608832836151123
    8. ' (' → logprob: -6.108832836151123
    9. '(c' → logprob: -8.358833312988281
    10. '(combo' → logprob: -8.358833312988281

Token 306: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006886465474963188
    2. ',' → logprob: -5.0068864822387695
    3. ' ):' → logprob: -9.63188648223877
    4. ':' → logprob: -10.13188648223877
    5. '):
' → logprob: -11.25688648223877
    6. ')' → logprob: -11.50688648223877
    7. ' ,' → logprob: -11.88188648223877
    8. '   ' → logprob: -12.13188648223877
    9. ',c' → logprob: -12.25688648223877
    10. '[]):' → logprob: -12.63188648223877

Token 307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02187470719218254
    2. ' counts' → logprob: -4.146874904632568
    3. 'counts' → logprob: -6.021874904632568
    4. '<|end|>' → logprob: -6.396874904632568
    5. '_counts' → logprob: -7.021874904632568
    6. '    
' → logprob: -8.27187442779541
    7. 'count' → logprob: -8.52187442779541
    8. '	count' → logprob: -9.39687442779541
    9. ' count' → logprob: -9.52187442779541
    10. '    ' → logprob: -10.64687442779541

Token 308: ' #' (ID: 1069)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.4432624280452728
    2. '   ' → logprob: -1.3182624578475952
    3. ' from' → logprob: -2.9432623386383057
    4. 'counts' → logprob: -3.8182623386383057
    5. ' count' → logprob: -5.693262577056885
    6. ' 
' → logprob: -6.068262577056885
    7. '    ' → logprob: -6.193262577056885
    8. 'count' → logprob: -6.193262577056885
    9. '    
' → logprob: -6.443262577056885
    10. ' if' → logprob: -6.818262577056885

Token 309: ' cards' (ID: 10541)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -1.0554853677749634
    2. ' if' → logprob: -1.5554853677749634
    3. 'from' → logprob: -1.5554853677749634
    4. 'counts' → logprob: -2.305485248565674
    5. ' counts' → logprob: -2.555485248565674
    6. 'if' → logprob: -3.180485248565674
    7. '   ' → logprob: -5.430485248565674
    8. 'count' → logprob: -5.680485248565674
    9. ' count' → logprob: -6.680485248565674
    10. '#' → logprob: -8.305485725402832

Token 310: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4890882968902588
    2. '=' → logprob: -1.1140882968902588
    3. '_counts' → logprob: -3.864088296890259
    4. '   ' → logprob: -4.48908805847168
    5. '_count' → logprob: -4.98908805847168
    6. 'counts' → logprob: -5.23908805847168
    7. ')' → logprob: -5.36408805847168
    8. '):' → logprob: -5.61408805847168
    9. 'count' → logprob: -6.73908805847168
    10. '_counter' → logprob: -6.98908805847168

Token 311: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5450658798217773
    2. '[]' → logprob: -1.7950658798217773
    3. ' un' → logprob: -2.0450658798217773
    4. ' a' → logprob: -2.4200658798217773
    5. '[' → logprob: -4.670065879821777
    6. '   ' → logprob: -4.920065879821777
    7. ' [' → logprob: -5.420065879821777
    8. ' list' → logprob: -5.670065879821777
    9. ' sorted' → logprob: -5.670065879821777
    10. 'une' → logprob: -6.045065879821777

Token 312: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4830740988254547
    2. ' list' → logprob: -0.9830740690231323
    3. 'dict' → logprob: -5.483074188232422
    4. ' dict' → logprob: -5.983074188232422
    5. 'liste' → logprob: -6.358074188232422
    6. ' liste' → logprob: -8.858074188232422
    7. ' dictionary' → logprob: -9.483074188232422
    8. 'List' → logprob: -9.608074188232422
    9. 'dictionary' → logprob: -9.608074188232422
    10. '   ' → logprob: -10.108074188232422

Token 313: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.2579386234283447
    2. ' of' → logprob: -1.3829386234283447
    3. '[' → logprob: -1.6329386234283447
    4. ' ' → logprob: -2.1329386234283447
    5. '   ' → logprob: -2.5079386234283447
    6. ' =' → logprob: -3.7579386234283447
    7. ')' → logprob: -4.757938385009766
    8. ' des' → logprob: -5.007938385009766
    9. ',' → logprob: -5.632938385009766
    10. '(' → logprob: -6.132938385009766

Token 314: ' ' (ID: 220)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07283185422420502
    2. ' int' → logprob: -2.697831869125366
    3. 'ints' → logprob: -6.447831630706787
    4. 'inte' → logprob: -7.947831630706787
    5. '10' → logprob: -8.072832107543945
    6. ' ' → logprob: -9.197832107543945
    7. ' integers' → logprob: -9.197832107543945
    8. '9' → logprob: -9.572832107543945
    9. ' ints' → logprob: -9.822832107543945
    10. ' cartes' → logprob: -10.072832107543945

Token 315: '14' (ID: 1265)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007688904879614711
    2. 'ints' → logprob: -8.125768661499023
    3. ' int' → logprob: -8.250768661499023
    4. '(int' → logprob: -9.625768661499023
    5. '[int' → logprob: -10.000768661499023
    6. 'inte' → logprob: -10.250768661499023
    7. 'str' → logprob: -10.375768661499023
    8. '[' → logprob: -12.000768661499023
    9. 'ent' → logprob: -12.000768661499023
    10. '9' → logprob: -12.375768661499023

Token 316: ' chiffres' (ID: 105565)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.042660098522901535
    2. ' ,' → logprob: -3.9176599979400635
    3. ' cards' → logprob: -4.917660236358643
    4. '<|end|>' → logprob: -5.417660236358643
    5. ' integers' → logprob: -6.167660236358643
    6. ',' → logprob: -6.167660236358643
    7. '[' → logprob: -6.792660236358643
    8. '  ' → logprob: -6.917660236358643
    9. ' [' → logprob: -7.167660236358643
    10. ' )' → logprob: -7.417660236358643

Token 317: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024178454652428627
    2. ':' → logprob: -4.274178504943848
    3. 's' → logprob: -5.774178504943848
    4. ' counts' → logprob: -7.024178504943848
    5. 'from' → logprob: -7.024178504943848
    6. ' :' → logprob: -7.024178504943848
    7. ',' → logprob: -7.149178504943848
    8. 'counts' → logprob: -7.524178504943848
    9. '(' → logprob: -7.649178504943848
    10. '_counts' → logprob: -8.024178504943848

Token 318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03607404977083206
    2. ':' → logprob: -3.786074161529541
    3. '    
' → logprob: -6.036074161529541
    4. '[' → logprob: -6.286074161529541
    5. ' 
' → logprob: -6.536074161529541
    6. ' ' → logprob: -7.036074161529541
    7. '<|end|>' → logprob: -7.036074161529541
    8. '  
' → logprob: -7.161074161529541
    9. ' :' → logprob: -7.411074161529541
    10. '    ' → logprob: -7.411074161529541

Token 319: ' from' (ID: 591)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.3616100251674652
    2. '   ' → logprob: -2.111609935760498
    3. ' counts' → logprob: -2.611609935760498
    4. ' from' → logprob: -3.486609935760498
    5. '    
' → logprob: -3.611609935760498
    6. '
' → logprob: -3.986609935760498
    7. 'counts' → logprob: -3.986609935760498
    8. 'from' (adapté à ' from') → logprob: -5.111609935760498
    9. 'count' → logprob: -6.111609935760498
    10. ' if' → logprob: -6.361609935760498

Token 320: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.12693734467029572
    2. ' collections' → logprob: -2.1269373893737793
    3. 'copy' → logprob: -12.126936912536621
    4. 'collection' → logprob: -13.126936912536621
    5. 'collect' → logprob: -13.751936912536621
    6. ' copy' → logprob: -14.626936912536621
    7. ' collection' → logprob: -15.876936912536621
    8. 'c' → logprob: -16.376937866210938
    9. '.collections' → logprob: -16.751937866210938
    10. '_' → logprob: -17.251937866210938

Token 321: ' import' (ID: 1588)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.44848376512527466
    2. 'n' → logprob: -2.19848370552063
    3. 'import' → logprob: -2.57348370552063
    4. 'rt' → logprob: -3.19848370552063
    5. 'ctions' → logprob: -3.19848370552063
    6. 'ptions' → logprob: -3.44848370552063
    7. 'collections' → logprob: -4.073483943939209
    8. 'r' → logprob: -4.698483943939209
    9. 'tion' → logprob: -4.823483943939209
    10. 'ations' → logprob: -5.823483943939209

Token 322: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.0011266445508226752
    2. ' Counter' → logprob: -7.001126766204834
    3. 'default' → logprob: -8.501126289367676
    4. '.Counter' → logprob: -11.751126289367676
    5. 'counter' → logprob: -13.251126289367676
    6. ' defaultdict' → logprob: -13.376126289367676
    7. '_counter' → logprob: -14.751126289367676
    8. 'import' → logprob: -15.501126289367676
    9. 'deque' → logprob: -16.251127243041992
    10. 'collections' → logprob: -16.626127243041992

Token 323: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005728617310523987
    2. '    
' → logprob: -5.505728721618652
    3. '
' → logprob: -6.880728721618652
    4. ' counts' → logprob: -7.880728721618652
    5. 'counts' → logprob: -9.130728721618652
    6. '_counts' → logprob: -9.880728721618652
    7. '   
' → logprob: -10.880728721618652
    8. '  
' → logprob: -11.130728721618652
    9. '    ' → logprob: -11.255728721618652
    10. 'count' → logprob: -11.755728721618652

Token 324: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010485394857823849
    2. ' counts' → logprob: -5.3854851722717285
    3. '
' → logprob: -6.1354851722717285
    4. '    
' → logprob: -6.6354851722717285
    5. 'counts' → logprob: -7.0104851722717285
    6. 'count' → logprob: -7.3854851722717285
    7. ' count' → logprob: -7.8854851722717285
    8. ' card' → logprob: -8.635485649108887
    9. ' cards' → logprob: -10.135485649108887
    10. ' counter' → logprob: -10.260485649108887

Token 325: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.2017594575881958
    2. 'count' → logprob: -1.8267594575881958
    3. 'counter' → logprob: -4.451759338378906
    4. ' counts' → logprob: -4.826759338378906
    5. 'for' → logprob: -7.451759338378906
    6. 'cnt' → logprob: -7.576759338378906
    7. 'if' → logprob: -7.951759338378906
    8. ' count' → logprob: -8.326759338378906
    9. 'c' → logprob: -8.701759338378906
    10. ' counter' → logprob: -9.451759338378906

Token 326: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804194927215576
    2. '=' → logprob: -3.2880420684814453
    3. ')' → logprob: -15.038042068481445
    4. '_counts' → logprob: -17.288042068481445
    5. ' =
' → logprob: -17.413042068481445
    6. '	' → logprob: -17.538042068481445
    7. '＝' → logprob: -17.663042068481445
    8. '  ' → logprob: -17.663042068481445
    9. ' =)' → logprob: -17.788042068481445
    10. 's' → logprob: -17.913042068481445

Token 327: ' [' (ID: 723)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.29497477412223816
    2. ' Counter' → logprob: -1.4199748039245605
    3. '[' → logprob: -4.4199748039245605
    4. ' [' → logprob: -6.4199748039245605
    5. '   ' → logprob: -10.044974327087402
    6. ' ' → logprob: -11.294974327087402
    7. ' counter' → logprob: -13.294974327087402
    8. 'Counters' → logprob: -13.294974327087402
    9. '.Counter' → logprob: -13.669974327087402
    10. 'counter' → logprob: -13.919974327087402

Token 328: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '15' → logprob: -17.875
    4. '14' → logprob: -17.875
    5. '
' → logprob: -18.875
    6. '   ' → logprob: -19.125
    7. '```' → logprob: -20.125
    8. '16' → logprob: -20.625
    9. '۰' → logprob: -20.625
    10. '1' → logprob: -20.625

Token 329: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02342226728796959
    2. ']*' → logprob: -3.7734222412109375
    3. ']*(' → logprob: -9.523422241210938
    4. ']+' → logprob: -9.648422241210938
    5. ' for' → logprob: -10.773422241210938
    6. ',' → logprob: -11.648422241210938
    7. ' ]' → logprob: -11.648422241210938
    8. 'for' → logprob: -15.523422241210938
    9. '0' → logprob: -15.648422241210938
    10. ']+=' → logprob: -15.648422241210938

Token 330: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.003993392456322908
    2. '15' → logprob: -5.753993511199951
    3. '14' → logprob: -7.253993511199951
    4. '(' → logprob: -9.378993034362793
    5. '11' → logprob: -11.878993034362793
    6. '20' → logprob: -12.253993034362793
    7. '34' → logprob: -12.878993034362793
    8. '16' → logprob: -13.128993034362793
    9. '35' → logprob: -13.378993034362793
    10. '12' → logprob: -14.003993034362793

Token 331: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06436840444803238
    2. ' for' → logprob: -4.06436824798584
    3. ' 
' → logprob: -4.31436824798584
    4. '   ' → logprob: -4.68936824798584
    5. 'for' → logprob: -5.06436824798584
    6. '  
' → logprob: -5.06436824798584
    7. '    
' → logprob: -5.06436824798584
    8. '<|end|>' → logprob: -6.43936824798584
    9. '   
' → logprob: -7.18936824798584
    10. ' ' → logprob: -7.43936824798584

Token 332: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10209490358829498
    2. ' for' → logprob: -2.477094888687134
    3. 'for' → logprob: -4.352095127105713
    4. '    
' → logprob: -9.852094650268555
    5. '
' → logprob: -9.977094650268555
    6. '<|end|>' → logprob: -9.977094650268555
    7. '  ' → logprob: -11.102094650268555
    8. '  
' → logprob: -11.727094650268555
    9. '	for' → logprob: -11.727094650268555
    10. ' ' → logprob: -11.727094650268555

Token 333: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1305258870124817
    2. ' for' → logprob: -2.130525827407837
    3. '   ' → logprob: -5.630526065826416
    4. ' ' → logprob: -13.130525588989258
    5. 'counter' → logprob: -13.880525588989258
    6. '  ' → logprob: -14.505525588989258
    7. '	for' → logprob: -14.755525588989258
    8. '    
' → logprob: -14.880525588989258
    9. 'count' → logprob: -15.380525588989258
    10. '
' → logprob: -15.880525588989258

Token 334: ' c' (ID: 274)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.21380667388439178
    2. 'c' → logprob: -1.9638066291809082
    3. ' card' → logprob: -2.963806629180908
    4. ' c' → logprob: -7.588806629180908
    5. 'num' → logprob: -10.088807106018066
    6. '	card' → logprob: -13.588807106018066
    7. 'car' → logprob: -14.713807106018066
    8. ' num' → logprob: -15.338807106018066
    9. 'digit' → logprob: -15.463807106018066
    10. '(card' → logprob: -16.08880615234375

Token 335: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011110070161521435
    2. 'in' → logprob: -4.511110305786133
    3. ' ' → logprob: -9.886110305786133
    4. '   ' → logprob: -12.511110305786133
    5. 'c' → logprob: -13.261110305786133
    6. '  ' → logprob: -13.261110305786133
    7. 's' → logprob: -13.386110305786133
    8. 'i' → logprob: -14.386110305786133
    9. ' c' → logprob: -14.386110305786133
    10. 'n' → logprob: -15.261110305786133

Token 336: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.005247395019978285
    2. ' cards' → logprob: -5.255247592926025
    3. '(cards' → logprob: -11.255247116088867
    4. '.cards' → logprob: -15.255247116088867
    5. 'card' → logprob: -16.005247116088867
    6. 'c' → logprob: -16.005247116088867
    7. '_cards' → logprob: -16.255247116088867
    8. '/cards' → logprob: -17.255247116088867
    9. '
' → logprob: -17.880247116088867
    10. 'Cards' → logprob: -18.380247116088867

Token 337: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1224946603178978
    2. ':
' → logprob: -2.247494697570801
    3. '   ' → logprob: -5.247494697570801
    4. ' counts' → logprob: -6.372494697570801
    5. ' :
' → logprob: -7.247494697570801
    6. '       ' → logprob: -7.497494697570801
    7. ' :' → logprob: -7.872494697570801
    8. 'counts' → logprob: -8.1224946975708
    9. ' +=' → logprob: -8.2474946975708
    10. '_counts' → logprob: -8.9974946975708

Token 338: '       ' (ID: 309)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.03771081194281578
    2. '       ' → logprob: -3.5377109050750732
    3. 'counts' → logprob: -5.412710666656494
    4. '   ' → logprob: -5.787710666656494
    5. '    ' → logprob: -8.162711143493652
    6. '_counts' → logprob: -10.412711143493652
    7. ' 
' → logprob: -10.412711143493652
    8. ' ' → logprob: -10.912711143493652
    9. '    
' → logprob: -11.037711143493652
    10. ' count' → logprob: -12.287711143493652

Token 339: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.2014516294002533
    2. ' counts' → logprob: -1.7014516592025757
    3. 'count' → logprob: -10.701451301574707
    4. '   ' → logprob: -11.076451301574707
    5. '       ' → logprob: -15.951451301574707
    6. '_counts' → logprob: -16.076452255249023
    7. '    ' → logprob: -16.576452255249023
    8. ' count' → logprob: -17.201452255249023
    9. 'c' → logprob: -17.326452255249023
    10. ' ' → logprob: -17.451452255249023

Token 340: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.375001907348633
    3. '[count' → logprob: -14.500001907348633
    4. 'c' → logprob: -15.500001907348633
    5. ' [' → logprob: -17.625001907348633
    6. '[int' → logprob: -17.875001907348633
    7. '[C' → logprob: -19.125001907348633
    8. '[
' → logprob: -19.625001907348633
    9. '[counter' → logprob: -20.000001907348633
    10. '[cnt' → logprob: -20.125001907348633

Token 341: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08020145446062088
    2. ']+=' → logprob: -2.5802013874053955
    3. '+=' → logprob: -6.955201625823975
    4. ' ]' → logprob: -8.455201148986816
    5. ' +=' → logprob: -8.955201148986816
    6. '+' → logprob: -11.830201148986816
    7. '+]' → logprob: -12.580201148986816
    8. ')' → logprob: -13.330201148986816
    9. '']' → logprob: -13.580201148986816
    10. '   ' → logprob: -14.330201148986816

Token 342: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018255650997161865
    2. ' +=' → logprob: -4.018255710601807
    3. ']+=' → logprob: -9.518255233764648
    4. '+' → logprob: -10.393255233764648
    5. '=' → logprob: -13.768255233764648
    6. '+='' → logprob: -15.643255233764648
    7. '<|end|>' → logprob: -15.893255233764648
    8. '1' → logprob: -17.64325523376465
    9. ' ' → logprob: -17.64325523376465
    10. ']' → logprob: -17.76825523376465

Token 343: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -21.000001907348633
    4. '   ' → logprob: -21.500001907348633
    5. '<|end|>' → logprob: -22.000001907348633
    6. '۱' → logprob: -22.000001907348633
    7. '
' → logprob: -22.250001907348633
    8. '１' → logprob: -22.625001907348633
    9. '  ' → logprob: -23.750001907348633
    10. ' ' → logprob: -23.812501907348633

Token 344: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -21.0
    4. '۱' → logprob: -21.25
    5. '
' → logprob: -21.75
    6. '<|end|>' → logprob: -22.125
    7. '１' → logprob: -22.625
    8. '   ' → logprob: -22.625
    9. '`' → logprob: -23.375
    10. '१' → logprob: -23.6875

Token 345: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9085178971290588
    2. '
' → logprob: -1.283517837524414
    3. ' for' → logprob: -1.658517837524414
    4. ' if' → logprob: -2.533517837524414
    5. 'for' → logprob: -4.158517837524414
    6. '<|end|>' → logprob: -4.408517837524414
    7. '    
' → logprob: -4.658517837524414
    8. 'if' → logprob: -5.283517837524414
    9. ' 
' → logprob: -6.158517837524414
    10. '#' → logprob: -6.533517837524414

Token 346: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7144678235054016
    2. 'for' → logprob: -0.7144678235054016
    3. '   ' → logprob: -4.339468002319336
    4. '#' → logprob: -5.714468002319336
    5. 'pairs' → logprob: -5.964468002319336
    6. ' pairs' → logprob: -7.214468002319336
    7. 'def' → logprob: -7.589468002319336
    8. 'possible' → logprob: -8.589468002319336
    9. ' #' → logprob: -8.714468002319336
    10. 'trip' → logprob: -9.214468002319336

Token 347: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4015094041824341
    2. 'if' (adapté à ' if') → logprob: -1.151509404182434
    3. '
' → logprob: -4.6515092849731445
    4. '   ' → logprob: -6.1515092849731445
    5. ' ' → logprob: -7.0265092849731445
    6. '#' → logprob: -7.7765092849731445
    7. ' 
' → logprob: -8.026509284973145
    8. ' for' → logprob: -8.276509284973145
    9. 'return' → logprob: -8.401509284973145
    10. 'for' → logprob: -8.651509284973145

Token 348: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.023245712742209435
    2. 'counts' → logprob: -3.7732458114624023
    3. ' any' → logprob: -15.773245811462402
    4. 'count' → logprob: -16.773244857788086
    5. 'Counts' → logprob: -17.273244857788086
    6. 'c' → logprob: -17.648244857788086
    7. '_counts' → logprob: -18.148244857788086
    8. 'any' → logprob: -18.523244857788086
    9. 'max' → logprob: -19.023244857788086
    10. ' ' → logprob: -19.148244857788086

Token 349: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.000000953674316
    3. 'c' → logprob: -16.875001907348633
    4. '
' → logprob: -19.000001907348633
    5. '[
' → logprob: -19.125001907348633
    6. ' [' → logprob: -19.500001907348633
    7. '[count' → logprob: -19.750001907348633
    8. '	c' → logprob: -19.750001907348633
    9. '```' → logprob: -20.000001907348633
    10. '>' → logprob: -20.625001907348633

Token 350: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3353736400604248
    2. ']' → logprob: -1.5853736400604248
    3. '[c' → logprob: -2.960373640060425
    4. ']>' → logprob: -3.710373640060425
    5. ' >' → logprob: -5.710373878479004
    6. '[' → logprob: -7.835373878479004
    7. 'c' → logprob: -11.085373878479004
    8. '">' → logprob: -11.335373878479004
    9. ' ]' → logprob: -11.460373878479004
    10. '>[' → logprob: -11.835373878479004

Token 351: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.012514598667621613
    2. ' >' → logprob: -4.387514591217041
    3. '[' → logprob: -13.2625150680542
    4. '()>' → logprob: -13.5125150680542
    5. '>
' → logprob: -14.5125150680542
    6. ' ' → logprob: -14.7625150680542
    7. '>=' → logprob: -15.3875150680542
    8. ')>' → logprob: -15.3875150680542
    9. '>

' → logprob: -16.262514114379883
    10. '">' → logprob: -16.262514114379883

Token 352: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.339278580620885e-06
    2. '
' → logprob: -13.625001907348633
    3. ' ' → logprob: -14.375001907348633
    4. '=' → logprob: -15.125001907348633
    5. '14' → logprob: -16.000001907348633
    6. '

' → logprob: -16.250001907348633
    7. '}' → logprob: -17.750001907348633
    8. '_' → logprob: -17.812501907348633
    9. '```' → logprob: -18.062501907348633
    10. '４' → logprob: -18.625001907348633

Token 353: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -9.253090865968261e-06
    2. '
' → logprob: -12.000009536743164
    3. ' ' → logprob: -13.500009536743164
    4. '=' → logprob: -14.375009536743164
    5. '14' → logprob: -15.125009536743164
    6. '

' → logprob: -15.250009536743164
    7. '3' → logprob: -16.312509536743164
    8. '5' → logprob: -16.875009536743164
    9. '４' → logprob: -17.000009536743164
    10. '```' → logprob: -17.062509536743164

Token 354: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.047593045979738235
    2. ':
' → logprob: -3.547593116760254
    3. ':return' → logprob: -4.172593116760254
    4. ' :' → logprob: -6.422593116760254
    5. ' :
' → logprob: -7.672593116760254
    6. '       ' → logprob: -9.297593116760254
    7. '   ' → logprob: -10.297593116760254
    8. '           ' → logprob: -10.672593116760254
    9. ' return' → logprob: -11.297593116760254
    10. ' ' → logprob: -12.047593116760254

Token 355: ' ' (ID: 220)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.18355388939380646
    2. 'return' → logprob: -2.18355393409729
    3. '           ' → logprob: -3.05855393409729
    4. '       ' → logprob: -5.183553695678711
    5. '   ' → logprob: -6.308553695678711
    6. '
' → logprob: -7.433553695678711
    7. '	return' → logprob: -9.808553695678711
    8. ' 
' → logprob: -11.808553695678711
    9. ' ' → logprob: -12.433553695678711
    10. '               ' → logprob: -12.558553695678711

Token 356: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.25249287486076355
    2. ' return' → logprob: -1.502492904663086
    3. '   ' → logprob: -8.127492904663086
    4. '       ' → logprob: -8.752492904663086
    5. '
' → logprob: -9.502492904663086
    6. '           ' → logprob: -10.502492904663086
    7. '	return' → logprob: -12.002492904663086
    8. ' ' → logprob: -14.502492904663086
    9. ' 
' → logprob: -14.502492904663086
    10. '    
' → logprob: -15.627492904663086

Token 357: ' max' (ID: 2999)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6933552622795105
    2. 'return' → logprob: -0.6933552622795105
    3. '   ' → logprob: -8.693355560302734
    4. '       ' → logprob: -11.068355560302734
    5. '#' → logprob: -11.193355560302734
    6. '
' → logprob: -12.568355560302734
    7. ' #' → logprob: -12.818355560302734
    8. '           ' → logprob: -13.443355560302734
    9. '	return' → logprob: -13.568355560302734
    10. ' ' → logprob: -14.568355560302734

Token 358: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.2716679573059082
    2. 'cards' → logprob: -2.271667957305908
    3. ' cards' → logprob: -2.396667957305908
    4. ' ' → logprob: -2.646667957305908
    5. ' return' → logprob: -2.896667957305908
    6. ' count' → logprob: -3.021667957305908
    7. ' par' → logprob: -3.021667957305908
    8. ' cartes' → logprob: -3.021667957305908
    9. ' allowed' → logprob: -3.271667957305908
    10. 'return' → logprob: -3.271667957305908

Token 359: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.9449387192726135
    2. '1' → logprob: -1.0699386596679688
    3. ' allowed' → logprob: -2.8199386596679688
    4. ' par' → logprob: -2.9449386596679688
    5. 'par' → logprob: -3.0699386596679688
    6. 'cards' → logprob: -3.5699386596679688
    7. ' cartes' → logprob: -3.8199386596679688
    8. 'allowed' → logprob: -3.9449386596679688
    9. ' cards' → logprob: -4.319938659667969
    10. ' ' → logprob: -4.569938659667969

Token 360: ' même' (ID: 9679)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 361: ' chiffre' (ID: 107420)
  Prédit: 'cart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cart' → logprob: -0.48097601532936096
    2. 'car' → logprob: -1.9809759855270386
    3. ' cartes' → logprob: -1.9809759855270386
    4. 'ex' → logprob: -3.105976104736328
    5. ' exempl' → logprob: -3.355976104736328
    6. ' carte' → logprob: -4.605976104736328
    7. 'cards' → logprob: -4.855976104736328
    8. 'c' → logprob: -5.855976104736328
    9. '```' → logprob: -6.730976104736328
    10. 'fois' → logprob: -6.980976104736328

Token 362: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18175147473812103
    2. '       ' → logprob: -2.3067514896392822
    3. ':
' → logprob: -3.6817514896392822
    4. ':' → logprob: -4.056751251220703
    5. ':return' → logprob: -4.431751251220703
    6. ' :
' → logprob: -5.306751251220703
    7. ' return' → logprob: -5.931751251220703
    8. '               ' → logprob: -6.181751251220703
    9. ' :' → logprob: -6.556751251220703
    10. '   ' → logprob: -7.806751251220703

Token 363: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05746643245220184
    2. ' return' → logprob: -3.057466506958008
    3. 'return' → logprob: -4.932466506958008
    4. '
' → logprob: -6.682466506958008
    5. '       ' → logprob: -8.057466506958008
    6. '               ' → logprob: -10.307466506958008
    7. ' 
' → logprob: -11.557466506958008
    8. '            
' → logprob: -11.932466506958008
    9. '   ' → logprob: -12.432466506958008
    10. '          ' → logprob: -12.807466506958008

Token 364: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.048744626343250275
    2. ' return' → logprob: -3.0487446784973145
    3. '       ' → logprob: -9.298744201660156
    4. '           ' → logprob: -9.923744201660156
    5. '   ' → logprob: -11.673744201660156
    6. '               ' → logprob: -12.298744201660156
    7. '
' → logprob: -12.798744201660156
    8. '	return' → logprob: -14.298744201660156
    9. ' ' → logprob: -15.798744201660156
    10. '  ' → logprob: -18.048744201660156

Token 365: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0007099286303855479
    2. ' False' → logprob: -7.2507100105285645
    3. 'false' → logprob: -21.625709533691406
    4. '(False' → logprob: -22.250709533691406
    5. 'True' → logprob: -22.500709533691406
    6. '_false' → logprob: -24.375709533691406
    7. '=False' → logprob: -24.750709533691406
    8. 'F' → logprob: -25.125709533691406
    9. 'None' → logprob: -25.625709533691406
    10. 'FALSE' → logprob: -26.500709533691406

Token 366: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12127450853586197
    2. '   ' → logprob: -2.496274471282959
    3. '<|end|>' → logprob: -4.371274471282959
    4. ' 
' → logprob: -4.621274471282959
    5. '  
' → logprob: -5.496274471282959
    6. '    
' → logprob: -6.121274471282959
    7. ' return' → logprob: -6.996274471282959
    8. ' ' → logprob: -7.871274471282959
    9. '   
' → logprob: -8.246274948120117
    10. '       ' → logprob: -8.371274948120117

Token 367: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11830146610736847
    2. ' for' → logprob: -2.6183013916015625
    3. 'for' → logprob: -3.8683013916015625
    4. ' if' → logprob: -5.4933013916015625
    5. '#' → logprob: -5.6183013916015625
    6. 'if' → logprob: -5.7433013916015625
    7. ' pairs' → logprob: -5.9933013916015625
    8. 'pairs' → logprob: -6.2433013916015625
    9. ' #' → logprob: -7.7433013916015625
    10. '
' → logprob: -7.7433013916015625

Token 368: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20158584415912628
    2. '#' (adapté à ' #') → logprob: -2.3265857696533203
    3. 'pairs' → logprob: -2.8265857696533203
    4. '   ' → logprob: -3.8265857696533203
    5. ' for' → logprob: -5.95158576965332
    6. 'pair' → logprob: -7.70158576965332
    7. 'possible' → logprob: -8.45158576965332
    8. ' pairs' → logprob: -9.07658576965332
    9. 'return' → logprob: -9.20158576965332
    10. 'total' → logprob: -9.32658576965332

Token 369: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14297381043434143
    2. '#' → logprob: -2.1429738998413086
    3. 'pairs' → logprob: -5.267973899841309
    4. ' for' → logprob: -5.392973899841309
    5. 'found' → logprob: -5.517973899841309
    6. 'possible' → logprob: -7.892973899841309
    7. 'counts' → logprob: -8.142973899841309
    8. 'pair' → logprob: -8.142973899841309
    9. 'count' → logprob: -8.517973899841309
    10. 'from' → logprob: -8.892973899841309

Token 370: ' doit' (ID: 21822)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.43427515029907227
    2. 'for' → logprob: -1.0592751502990723
    3. '#' → logprob: -5.809275150299072
    4. 'return' → logprob: -7.684275150299072
    5. 'count' → logprob: -8.059274673461914
    6. 'continue' → logprob: -8.184274673461914
    7. '   ' → logprob: -8.184274673461914
    8. ' continue' → logprob: -9.434274673461914
    9. 'cherche' → logprob: -9.434274673461914
    10. ' return' → logprob: -9.559274673461914

Token 371: ' trouver' (ID: 23195)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.283488392829895
    2. ' trouver' → logprob: -1.408488392829895
    3. 'avoir' → logprob: -2.4084882736206055
    4. ' tester' → logprob: -2.9084882736206055
    5. ' vérifier' → logprob: -3.0334882736206055
    6. 'chercher' → logprob: -3.0334882736206055
    7. 'former' → logprob: -3.1584882736206055
    8. 'v' → logprob: -3.4084882736206055
    9. 'tester' → logprob: -3.5334882736206055
    10. ' essayer' → logprob: -4.0334882736206055

Token 372: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.25539010763168335
    2. 'un' → logprob: -1.6303901672363281
    3. 'a' → logprob: -5.130390167236328
    4. 'if' → logprob: -5.380390167236328
    5. 'i' → logprob: -5.505390167236328
    6. 'True' → logprob: -6.005390167236328
    7. ' une' → logprob: -6.130390167236328
    8. ' un' → logprob: -6.255390167236328
    9. 'si' → logprob: -6.255390167236328
    10. 'le' → logprob: -6.630390167236328

Token 373: ' paire' (ID: 148856)
  Prédit: ' paire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paire' → logprob: -0.20413051545619965
    2. 'pa' → logprob: -2.3291304111480713
    3. 'pair' → logprob: -2.9541304111480713
    4. ' pair' → logprob: -3.5791304111480713
    5. 'p' → logprob: -6.82913064956665
    6. 'pause' → logprob: -7.20413064956665
    7. ' couple' → logprob: -7.20413064956665
    8. 'val' → logprob: -7.20413064956665
    9. ' p' → logprob: -7.45413064956665
    10. 'cou' → logprob: -7.70413064956665

Token 374: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06613238900899887
    2. 'for' → logprob: -2.8161323070526123
    3. '   ' → logprob: -5.941132545471191
    4. ' (' → logprob: -8.066132545471191
    5. ',' → logprob: -8.191132545471191
    6. '<|end|>' → logprob: -8.316132545471191
    7. '(' → logprob: -9.066132545471191
    8. ' pour' → logprob: -9.191132545471191
    9. ' and' → logprob: -9.441132545471191
    10. 'def' → logprob: -9.441132545471191

Token 375: 'de' (ID: 613)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0197478532791138
    2. ' i' → logprob: -1.1447478532791138
    3. 'i' → logprob: -1.7697478532791138
    4. 'for' → logprob: -2.269747734069824
    5. ')' → logprob: -3.894747734069824
    6. 'c' → logprob: -4.644747734069824
    7. ' c' → logprob: -5.394747734069824
    8. ' pour' → logprob: -5.394747734069824
    9. ' True' → logprob: -5.769747734069824
    10. 'True' → logprob: -7.269747734069824

Token 376: 'ux' (ID: 1778)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8339197039604187
    2. 'ux' → logprob: -2.2089197635650635
    3. 'c' → logprob: -2.4589197635650635
    4. '2' → logprob: -2.7089197635650635
    5. 'quel' → logprob: -3.3339197635650635
    6. ' même' → logprob: -3.7089197635650635
    7. ' chiffres' → logprob: -3.7089197635650635
    8. ' cards' → logprob: -3.8339197635650635
    9. ')' → logprob: -3.9589197635650635
    10. ' counts' → logprob: -4.083919525146484

Token 377: ' cartes' (ID: 70753)
  Prédit: ' cartes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cartes' → logprob: -0.13351204991340637
    2. ' mêmes' → logprob: -3.383512020111084
    3. ')' → logprob: -3.633512020111084
    4. ' ident' → logprob: -4.008512020111084
    5. ' identical' → logprob: -4.383512020111084
    6. ' fois' → logprob: -4.883512020111084
    7. ' même' → logprob: -5.133512020111084
    8. ' )' → logprob: -5.258512020111084
    9. ' cards' → logprob: -5.383512020111084
    10. ' chiffres' → logprob: -6.383512020111084

Token 378: ' ident' (ID: 3951)
  Prédit: ' ident'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ident' → logprob: -0.13690729439258575
    2. 'ident' → logprob: -2.5119073390960693
    3. ')' → logprob: -3.8869073390960693
    4. ' identical' → logprob: -4.76190710067749
    5. ' ég' → logprob: -5.01190710067749
    6. ' iguales' → logprob: -5.88690710067749
    7. ' de' → logprob: -6.01190710067749
    8. ' of' → logprob: -6.13690710067749
    9. ' du' → logprob: -6.63690710067749
    10. ' iguais' → logprob: -7.51190710067749

Token 379: 'iques' (ID: 11654)
  Prédit: 'iques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iques' → logprob: -0.00033999193692579865
    2. 'ques' → logprob: -8.375340461730957
    3. 'ique' → logprob: -9.750340461730957
    4. 'ical' → logprob: -10.375340461730957
    5. 'i' → logprob: -11.750340461730957
    6. '```' → logprob: -12.500340461730957
    7. 'ales' → logprob: -12.875340461730957
    8. '=' → logprob: -13.625340461730957
    9. '``' → logprob: -14.500340461730957
    10. 'ic' → logprob: -14.625340461730957

Token 380: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003256911295466125
    2. ' )' → logprob: -8.750326156616211
    3. '),' → logprob: -9.875326156616211
    4. ')
' → logprob: -10.000326156616211
    5. ' pour' → logprob: -10.500326156616211
    6. 'for' → logprob: -10.625326156616211
    7. ' for' → logprob: -12.250326156616211
    8. 'pour' → logprob: -12.250326156616211
    9. ',' → logprob: -12.625326156616211
    10. '   ' → logprob: -13.125326156616211

Token 381: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1687609702348709
    2. 'for' → logprob: -2.0437610149383545
    3. '   ' → logprob: -3.6687610149383545
    4. '
' → logprob: -8.418761253356934
    5. '	for' → logprob: -12.043761253356934
    6. '    
' → logprob: -12.418761253356934
    7. '<|end|>' → logprob: -12.793761253356934
    8. ' ' → logprob: -12.918761253356934
    9. '  
' → logprob: -13.543761253356934
    10. 'def' → logprob: -14.043761253356934

Token 382: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20146441459655762
    2. ' for' → logprob: -1.7014644145965576
    3. '   ' → logprob: -9.951464653015137
    4. '
' → logprob: -13.076464653015137
    5. 'def' → logprob: -14.326464653015137
    6. '	for' → logprob: -15.201464653015137
    7. ' ' → logprob: -15.701464653015137
    8. '    
' → logprob: -15.951464653015137
    9. '  
' → logprob: -16.57646369934082
    10. ' 
' → logprob: -16.95146369934082

Token 383: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7524714469909668
    2. ' i' → logprob: -0.8774714469909668
    3. 'num' → logprob: -3.252471446990967
    4. 'pair' → logprob: -3.502471446990967
    5. ' num' → logprob: -4.252471446990967
    6. ' pair' → logprob: -4.502471446990967
    7. 't' → logprob: -5.877471446990967
    8. 'j' → logprob: -5.877471446990967
    9. 'x' → logprob: -6.377471446990967
    10. ' val' → logprob: -6.627471446990967

Token 384: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016510646790266037
    2. 'in' → logprob: -4.141510486602783
    3. ' ' → logprob: -7.766510486602783
    4. '  ' → logprob: -11.141510963439941
    5. ',' → logprob: -12.141510963439941
    6. '   ' → logprob: -12.266510963439941
    7. '1' → logprob: -13.016510963439941
    8. 'n' → logprob: -13.016510963439941
    9. 'range' → logprob: -13.141510963439941
    10. '	in' → logprob: -13.266510963439941

Token 385: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759395956993103
    2. ' range' → logprob: -0.8259395956993103
    3. ' ' → logprob: -16.325939178466797
    4. '(range' → logprob: -16.450939178466797
    5. '	range' → logprob: -17.325939178466797
    6. '   ' → logprob: -18.325939178466797
    7. '1' → logprob: -18.825939178466797
    8. 'rang' → logprob: -19.575939178466797
    9. 'Range' → logprob: -19.950939178466797
    10. '  ' → logprob: -20.075939178466797

Token 386: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.710618905955926e-05
    2. '1' → logprob: -9.250097274780273
    3. ' (' → logprob: -14.250097274780273
    4. '   ' → logprob: -15.750097274780273
    5. '(
' → logprob: -16.000097274780273
    6. 'def' → logprob: -16.625097274780273
    7. ' ' → logprob: -17.750097274780273
    8. '
' → logprob: -17.875097274780273
    9. '(len' → logprob: -18.250097274780273
    10. '[' → logprob: -19.750097274780273

Token 387: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4987974029500037e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.125024795532227
    4. '(' → logprob: -16.125024795532227
    5. '10' → logprob: -16.125024795532227
    6. '
' → logprob: -17.750024795532227
    7. '14' → logprob: -18.250024795532227
    8. 'len' → logprob: -18.250024795532227
    9. '```' → logprob: -18.375024795532227
    10. '9' → logprob: -18.750024795532227

Token 388: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007459438405930996
    2. ' ,' → logprob: -5.00745964050293
    3. '10' → logprob: -7.50745964050293
    4. '0' → logprob: -9.13245964050293
    5. ' ' → logprob: -10.13245964050293
    6. '1' → logprob: -10.25745964050293
    7. '   ' → logprob: -12.25745964050293
    8. '9' → logprob: -12.50745964050293
    9. ',
' → logprob: -13.63245964050293
    10. '(' → logprob: -14.50745964050293

Token 389: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0005547016044147313
    2. ' ' → logprob: -7.50055456161499
    3. 'len' → logprob: -14.625555038452148
    4. '9' → logprob: -15.000555038452148
    5. '   ' → logprob: -15.000555038452148
    6. '14' → logprob: -15.625555038452148
    7. '```' → logprob: -15.750555038452148
    8. '11' → logprob: -15.875555038452148
    9. ' len' → logprob: -16.25055503845215
    10. ' ten' → logprob: -17.12555503845215

Token 390: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.125000953674316
    3. 'len' → logprob: -16.375001907348633
    4. '```' → logprob: -17.250001907348633
    5. '9' → logprob: -17.375001907348633
    6. '1' → logprob: -17.375001907348633
    7. '14' → logprob: -17.875001907348633
    8. '11' → logprob: -18.250001907348633
    9. '
' → logprob: -18.750001907348633
    10. '   ' → logprob: -19.625001907348633

Token 391: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10053897649049759
    2. '):' → logprob: -2.350538969039917
    3. ':' → logprob: -8.850539207458496
    4. ' ):
' → logprob: -9.725539207458496
    5. '   ' → logprob: -9.850539207458496
    6. ')' → logprob: -10.475539207458496
    7. ':
' → logprob: -11.100539207458496
    8. ' ):' → logprob: -11.475539207458496
    9. '+' → logprob: -12.350539207458496
    10. '):
' → logprob: -12.600539207458496

Token 392: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7061077952384949
    2. '       ' → logprob: -0.9561077952384949
    3. ' if' → logprob: -2.2061078548431396
    4. 'if' → logprob: -4.7061076164245605
    5. '<|end|>' → logprob: -6.5811076164245605
    6. ' ' → logprob: -7.7061076164245605
    7. ':' → logprob: -8.581108093261719
    8. '	if' → logprob: -8.831108093261719
    9. ',' → logprob: -9.081108093261719
    10. '
' → logprob: -9.206108093261719

Token 393: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18920129537582397
    2. ' if' → logprob: -1.9392013549804688
    3. '   ' → logprob: -3.5642013549804688
    4. '       ' → logprob: -8.439201354980469
    5. ' ' → logprob: -11.564201354980469
    6. '	if' → logprob: -11.939201354980469
    7. 'counts' → logprob: -12.564201354980469
    8. '  ' → logprob: -13.439201354980469
    9. ' counts' → logprob: -13.439201354980469
    10. '    ' → logprob: -13.564201354980469

Token 394: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.006738580763339996
    2. ' counts' → logprob: -5.006738662719727
    3. 'count' → logprob: -10.881738662719727
    4. 'cards' → logprob: -12.381738662719727
    5. 'c' → logprob: -16.131738662719727
    6. '   ' → logprob: -16.881738662719727
    7. ' cards' → logprob: -16.881738662719727
    8. 'can' → logprob: -17.256738662719727
    9. ' ' → logprob: -18.131738662719727
    10. '_counts' → logprob: -18.381738662719727

Token 395: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. 'i' → logprob: -18.375
    3. '[c' → logprob: -19.25
    4. '   ' → logprob: -19.25
    5. ' [' → logprob: -19.375
    6. '
' → logprob: -19.5
    7. '[' → logprob: -19.625
    8. '[
' → logprob: -20.625
    9. '       ' → logprob: -21.5
    10. '[I' → logprob: -21.625

Token 396: ']' (ID: 60)
  Prédit: ']>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']>=' → logprob: -0.30437684059143066
    2. ']' → logprob: -1.5543768405914307
    3. '>=' → logprob: -3.0543768405914307
    4. ' >=' → logprob: -6.304376602172852
    5. ')>=' → logprob: -6.554376602172852
    6. ')' → logprob: -8.054376602172852
    7. '>' → logprob: -8.429376602172852
    8. '']' → logprob: -9.304376602172852
    9. '}' → logprob: -10.679376602172852
    10. ']>' → logprob: -11.304376602172852

Token 397: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.0010612714104354382
    2. ' >=' → logprob: -6.87606143951416
    3. ']>=' → logprob: -10.62606143951416
    4. ')>=' → logprob: -13.12606143951416
    5. '>' → logprob: -13.87606143951416
    6. '≥' → logprob: -14.50106143951416
    7. '2' → logprob: -15.25106143951416
    8. '   ' → logprob: -15.37606143951416
    9. ' ' → logprob: -15.75106143951416
    10. '
' → logprob: -16.876060485839844

Token 398: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0028061794582754374
    2. ' ' → logprob: -5.877806186676025
    3. '   ' → logprob: -13.627805709838867
    4. '```' → logprob: -17.127805709838867
    5. '  ' → logprob: -17.252805709838867
    6. '
' → logprob: -18.502805709838867
    7. '۲' → logprob: -18.627805709838867
    8. ' ' → logprob: -20.002805709838867
    9. '<|end|>' → logprob: -20.065305709838867
    10. '２' → logprob: -20.252805709838867

Token 399: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -17.7500057220459
    4. '   ' → logprob: -18.0000057220459
    5. '
' → logprob: -18.0000057220459
    6. '۲' → logprob: -18.8750057220459
    7. '২' → logprob: -20.2500057220459
    8. '२' → logprob: -20.3125057220459
    9. '	' → logprob: -20.4375057220459
    10. '２' → logprob: -20.5000057220459

Token 400: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3502045273780823
    2. ':' → logprob: -1.2252044677734375
    3. ' :
' → logprob: -6.8502044677734375
    4. '       ' → logprob: -7.7252044677734375
    5. ' :' → logprob: -8.975204467773438
    6. ' and' → logprob: -9.725204467773438
    7. '           ' → logprob: -10.600204467773438
    8. '   ' → logprob: -10.850204467773438
    9. '):
' → logprob: -11.600204467773438
    10. ':

' → logprob: -11.850204467773438

Token 401: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05363287776708603
    2. '       ' → logprob: -3.053632974624634
    3. ' counts' → logprob: -5.678632736206055
    4. 'counts' → logprob: -6.803632736206055
    5. '
' → logprob: -8.928632736206055
    6. '   ' → logprob: -9.428632736206055
    7. ':
' → logprob: -9.678632736206055
    8. '        
' → logprob: -9.928632736206055
    9. 'count' → logprob: -10.553632736206055
    10. ':' → logprob: -11.303632736206055

Token 402: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.23753422498703003
    2. 'counts' (adapté à ' counts') → logprob: -2.237534284591675
    3. '           ' → logprob: -2.362534284591675
    4. '       ' → logprob: -4.612534046173096
    5. '   ' → logprob: -7.987534046173096
    6. 'count' → logprob: -9.362534523010254
    7. '               ' → logprob: -9.487534523010254
    8. '_counts' → logprob: -10.737534523010254
    9. '
' → logprob: -11.362534523010254
    10. ' new' → logprob: -11.487534523010254

Token 403: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. ' [' → logprob: -14.125000953674316
    3. '_copy' → logprob: -16.000001907348633
    4. '[' → logprob: -16.500001907348633
    5. '           ' → logprob: -16.625001907348633
    6. ' =' → logprob: -16.750001907348633
    7. '   ' → logprob: -17.000001907348633
    8. '       ' → logprob: -17.625001907348633
    9. 'Copy' → logprob: -17.750001907348633
    10. 'i' → logprob: -18.375001907348633

Token 404: ']' (ID: 60)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -1.0599384307861328
    2. ' -=' → logprob: -1.1849384307861328
    3. ']' → logprob: -1.4349384307861328
    4. '           ' → logprob: -3.184938430786133
    5. ']-' → logprob: -3.434938430786133
    6. '-' → logprob: -4.184938430786133
    7. '       ' → logprob: -4.434938430786133
    8. '   ' → logprob: -5.309938430786133
    9. '```' → logprob: -6.934938430786133
    10. '    ' → logprob: -7.059938430786133

Token 405: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.07944432646036148
    2. ' -=' → logprob: -2.579444408416748
    3. '-' → logprob: -8.45444393157959
    4. '           ' → logprob: -8.70444393157959
    5. '   ' → logprob: -9.45444393157959
    6. '       ' → logprob: -9.45444393157959
    7. '    ' → logprob: -11.70444393157959
    8. '     ' → logprob: -13.20444393157959
    9. '```' → logprob: -13.32944393157959
    10. '      ' → logprob: -13.82944393157959

Token 406: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020377879263833165
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.625204086303711
    4. '```' → logprob: -18.87520408630371
    5. '  ' → logprob: -19.12520408630371
    6. '۲' → logprob: -19.25020408630371
    7. '２' → logprob: -20.12520408630371
    8. '
' → logprob: -20.62520408630371
    9. '       ' → logprob: -20.68770408630371
    10. '           ' → logprob: -20.87520408630371

Token 407: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -18.125001907348633
    4. '۲' → logprob: -20.250001907348633
    5. '```' → logprob: -20.250001907348633
    6. '２' → logprob: -21.000001907348633
    7. '২' → logprob: -21.375001907348633
    8. '           ' → logprob: -21.500001907348633
    9. '२' → logprob: -21.562501907348633
    10. '
' → logprob: -21.625001907348633

Token 408: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012022851034998894
    2. '
' → logprob: -4.512022972106934
    3. '            
' → logprob: -7.637022972106934
    4. '<|end|>' → logprob: -9.137022972106934
    5. '  
' → logprob: -9.512022972106934
    6. '       ' → logprob: -9.637022972106934
    7. ' if' → logprob: -9.762022972106934
    8. ' 
' → logprob: -9.762022972106934
    9. '    
' → logprob: -10.137022972106934
    10. '   ' → logprob: -10.762022972106934

Token 409: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.090760431718081e-05
    2. ' if' → logprob: -10.000090599060059
    3. 'if' → logprob: -10.250090599060059
    4. '
' → logprob: -12.125090599060059
    5. '       ' → logprob: -13.375090599060059
    6. '            
' → logprob: -13.625090599060059
    7. '   ' → logprob: -14.250090599060059
    8. ' and' → logprob: -14.750090599060059
    9. ',' → logprob: -15.375090599060059
    10. '          ' → logprob: -15.625090599060059

Token 410: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3935737609863281
    2. 'if' → logprob: -1.1435737609863281
    3. ' if' → logprob: -5.018573760986328
    4. '       ' → logprob: -10.143573760986328
    5. '   ' → logprob: -11.643573760986328
    6. '            
' → logprob: -12.018573760986328
    7. '
' → logprob: -12.268573760986328
    8. '          ' → logprob: -13.268573760986328
    9. '               ' → logprob: -14.018573760986328
    10. 'result' → logprob: -14.268573760986328

Token 411: ' réserve' (ID: 107161)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6976355314254761
    2. 'continue' → logprob: -1.197635531425476
    3. ' continue' → logprob: -3.3226356506347656
    4. 'contin' → logprob: -3.6976356506347656
    5. 'test' → logprob: -3.9476356506347656
    6. '           ' → logprob: -3.9476356506347656
    7. 'p' → logprob: -4.197635650634766
    8. 'if' → logprob: -4.697635650634766
    9. 'try' → logprob: -4.697635650634766
    10. ' #' → logprob: -5.197635650634766

Token 412: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 413: ' paire' (ID: 148856)
  Prédit: 'pa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pa' → logprob: -0.016411568969488144
    2. ' paire' → logprob: -4.391411781311035
    3. 'pair' → logprob: -5.641411781311035
    4. 'p' → logprob: -9.016411781311035
    5. 'pause' → logprob: -10.016411781311035
    6. 'de' → logprob: -10.141411781311035
    7. 'par' → logprob: -10.516411781311035
    8. '2' → logprob: -11.141411781311035
    9. ' ' → logprob: -11.266411781311035
    10. 'pile' → logprob: -11.391411781311035

Token 414: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011439072113716975
    2. ' if' → logprob: -9.875114440917969
    3. '            
' → logprob: -10.250114440917969
    4. '<|end|>' → logprob: -11.625114440917969
    5. 'if' → logprob: -12.375114440917969
    6. '       ' → logprob: -12.625114440917969
    7. '
' → logprob: -12.750114440917969
    8. ',' → logprob: -12.875114440917969
    9. '<|end|>' → logprob: -13.750114440917969
    10. '   ' → logprob: -14.000114440917969

Token 415: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029889941215515137
    2. '
' → logprob: -6.627988815307617
    3. ' if' → logprob: -7.127988815307617
    4. '       ' → logprob: -7.877988815307617
    5. 'if' → logprob: -8.752988815307617
    6. '   ' → logprob: -8.877988815307617
    7. '            
' → logprob: -8.877988815307617
    8. ' 
' → logprob: -11.252988815307617
    9. '  
' → logprob: -11.752988815307617
    10. '    
' → logprob: -11.877988815307617

Token 416: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3143961727619171
    2. '           ' → logprob: -1.5643961429595947
    3. ' if' → logprob: -2.8143961429595947
    4. '       ' → logprob: -7.439396381378174
    5. '   ' → logprob: -10.564395904541016
    6. '               ' → logprob: -14.439395904541016
    7. '          ' → logprob: -15.189395904541016
    8. 'If' → logprob: -15.814395904541016
    9. '
' → logprob: -16.064395904541016
    10. '            
' → logprob: -16.189395904541016

Token 417: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007266086060553789
    2. ' if' → logprob: -5.007266044616699
    3. '           ' → logprob: -7.507266044616699
    4. '       ' → logprob: -14.1322660446167
    5. 'If' → logprob: -14.5072660446167
    6. '   ' → logprob: -15.2572660446167
    7. '            
' → logprob: -17.257266998291016
    8. '	if' → logprob: -18.507266998291016
    9. ' ' → logprob: -18.757266998291016
    10. '```' → logprob: -18.882266998291016

Token 418: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.2957685589790344
    2. 'if' → logprob: -1.9207684993743896
    3. 'ifie' → logprob: -2.2957684993743896
    4. 'ify' → logprob: -6.045768737792969
    5. '           ' → logprob: -6.045768737792969
    6. '   ' → logprob: -6.545768737792969
    7. ' if' → logprob: -6.795768737792969
    8. 'ifer' → logprob: -7.420768737792969
    9. 'ifiez' → logprob: -7.670768737792969
    10. 'i' → logprob: -9.045768737792969

Token 419: ' si' (ID: 1784)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45196592807769775
    2. ' if' → logprob: -1.0769659280776978
    3. 'if' → logprob: -3.826965808868408
    4. ' si' → logprob: -7.201965808868408
    5. '   ' → logprob: -8.201966285705566
    6. '       ' → logprob: -9.701966285705566
    7. 'si' → logprob: -9.826966285705566
    8. 'If' → logprob: -11.576966285705566
    9. '          ' → logprob: -11.576966285705566
    10. '    ' → logprob: -11.576966285705566

Token 420: ' le' (ID: 505)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.38688382506370544
    2. 'can' → logprob: -1.1368838548660278
    3. '	can' → logprob: -12.261883735656738
    4. '   ' → logprob: -13.261883735656738
    5. '(can' → logprob: -13.386883735656738
    6. ' ' → logprob: -13.511883735656738
    7. ' ' → logprob: -14.136883735656738
    8. '           ' → logprob: -14.386883735656738
    9. '_can' → logprob: -14.511883735656738
    10. 'Can' → logprob: -15.136883735656738

Token 421: ' reste' (ID: 26769)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.12694479525089264
    2. ' can' → logprob: -2.1269447803497314
    3. '   ' → logprob: -12.251944541931152
    4. '	can' → logprob: -12.501944541931152
    5. ' ' → logprob: -12.751944541931152
    6. '  ' → logprob: -14.001944541931152
    7. '_can' → logprob: -14.251944541931152
    8. '(can' → logprob: -14.501944541931152
    9. 'counts' → logprob: -14.876944541931152
    10. '     ' → logprob: -15.251944541931152

Token 422: ' peut' (ID: 9216)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.3700239062309265
    2. 'can' → logprob: -1.3700239658355713
    3. ' peut' → logprob: -3.2450239658355713
    4. '           ' → logprob: -4.370023727416992
    5. ' est' → logprob: -7.245023727416992
    6. '   ' → logprob: -7.245023727416992
    7. 'pe' → logprob: -7.370023727416992
    8. 'est' → logprob: -7.870023727416992
    9. ' peux' → logprob: -7.870023727416992
    10. '               ' → logprob: -7.995023727416992

Token 423: ' se' (ID: 458)
  Prédit: ' être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.6146900653839111
    2. 'être' → logprob: -2.239690065383911
    3. 'former' → logprob: -2.364690065383911
    4. '           ' → logprob: -2.614690065383911
    5. ' form' → logprob: -2.989690065383911
    6. ' be' → logprob: -2.989690065383911
    7. ' former' → logprob: -3.739690065383911
    8. '   ' → logprob: -4.864689826965332
    9. ' se' → logprob: -4.864689826965332
    10. '               ' → logprob: -4.989689826965332

Token 424: ' partition' (ID: 31512)
  Prédit: 'partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partition' → logprob: -0.07645371556282043
    2. ' partition' → logprob: -2.951453685760498
    3. 'part' → logprob: -4.451453685760498
    4. 'former' → logprob: -5.326453685760498
    5. 'form' → logprob: -5.576453685760498
    6. 'forme' → logprob: -7.826453685760498
    7. ' form' → logprob: -8.701454162597656
    8. 'div' → logprob: -9.076454162597656
    9. ' div' → logprob: -9.826454162597656
    10. 'formed' → logprob: -10.201454162597656

Token 425: 'ner' (ID: 1247)
  Prédit: 'ner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.0017227731877937913
    2. 'nner' → logprob: -6.501722812652588
    3. 'er' → logprob: -8.87672233581543
    4. 'n' → logprob: -9.87672233581543
    5. 'onner' → logprob: -11.12672233581543
    6. 'ion' → logprob: -12.12672233581543
    7. 'tion' → logprob: -12.87672233581543
    8. 'oner' → logprob: -13.12672233581543
    9. '           ' → logprob: -14.00172233581543
    10. '               ' → logprob: -14.50172233581543

Token 426: ' en' (ID: 469)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009375413879752159
    2. ' en' → logprob: -4.88437557220459
    3. ' if' → logprob: -6.50937557220459
    4. ' into' → logprob: -9.25937557220459
    5. 'if' → logprob: -9.25937557220459
    6. ' in' → logprob: -10.25937557220459
    7. 'en' → logprob: -10.50937557220459
    8. '               ' → logprob: -12.25937557220459
    9. ' ' → logprob: -12.38437557220459
    10. ',' → logprob: -13.13437557220459

Token 427: ' ' (ID: 220)
  Prédit: ' trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trip' → logprob: -1.2089216709136963
    2. 'trip' → logprob: -1.3339216709136963
    3. 'can' → logprob: -1.4589216709136963
    4. ' can' → logprob: -1.5839216709136963
    5. ' ' → logprob: -9.333921432495117
    6. '   ' → logprob: -9.458921432495117
    7. '_trip' → logprob: -10.083921432495117
    8. 'def' → logprob: -10.458921432495117
    9. 'tr' → logprob: -10.958921432495117
    10. '  ' → logprob: -11.083921432495117

Token 428: '4' (ID: 19)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trip' → logprob: -0.32619014382362366
    2. ' trip' → logprob: -1.3261901140213013
    3. 'can' → logprob: -4.826189994812012
    4. ' can' → logprob: -5.451189994812012
    5. 'tr' → logprob: -8.951189994812012
    6. '   ' → logprob: -9.076189994812012
    7. '_trip' → logprob: -9.326189994812012
    8. ' ' → logprob: -9.576189994812012
    9. '  ' → logprob: -10.576189994812012
    10. 'def' → logprob: -10.951189994812012

Token 429: ' trip' (ID: 8831)
  Prédit: ' trip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trip' → logprob: -0.08254318684339523
    2. 'trip' → logprob: -2.582543134689331
    3. '_trip' → logprob: -6.45754337310791
    4. 'tr' → logprob: -7.08254337310791
    5. 'tris' → logprob: -7.45754337310791
    6. ' sets' → logprob: -8.70754337310791
    7. ' tris' → logprob: -9.20754337310791
    8. 'sets' → logprob: -9.83254337310791
    9. ' groupes' → logprob: -10.08254337310791
    10. ' triples' → logprob: -10.08254337310791

Token 430: 'lets' (ID: 12222)
  Prédit: 'lets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lets' → logprob: -1.259079363080673e-05
    2. 'let' → logprob: -12.000012397766113
    3. 'letes' → logprob: -12.500012397766113
    4. 'plets' → logprob: -13.500012397766113
    5. '       ' → logprob: -14.750012397766113
    6. '   ' → logprob: -15.000012397766113
    7. '           ' → logprob: -15.250012397766113
    8. 'ets' → logprob: -15.875012397766113
    9. 'le' → logprob: -16.37501335144043
    10. 'lett' → logprob: -17.25001335144043

Token 431: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.061676347395405e-05
    2. ' if' → logprob: -10.00005054473877
    3. '       ' → logprob: -13.37505054473877
    4. '            
' → logprob: -13.37505054473877
    5. 'if' → logprob: -14.00005054473877
    6. '          ' → logprob: -15.25005054473877
    7. '<|end|>' → logprob: -15.50005054473877
    8. '
' → logprob: -15.62505054473877
    9. '   ' → logprob: -15.75005054473877
    10. ',' → logprob: -16.000051498413086

Token 432: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010437761375214905
    2. '       ' → logprob: -9.250103950500488
    3. '   ' → logprob: -12.750103950500488
    4. ' if' → logprob: -12.750103950500488
    5. 'if' → logprob: -13.250103950500488
    6. '          ' → logprob: -14.750103950500488
    7. '               ' → logprob: -16.750104904174805
    8. '         ' → logprob: -17.375104904174805
    9. '	   ' → logprob: -17.500104904174805
    10. '		' → logprob: -17.500104904174805

Token 433: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13805131614208221
    2. 'if' (adapté à ' if') → logprob: -2.1380512714385986
    3. ' if' → logprob: -4.638051509857178
    4. '       ' → logprob: -6.638051509857178
    5. '   ' → logprob: -9.51305103302002
    6. '          ' → logprob: -13.88805103302002
    7. '               ' → logprob: -15.63805103302002
    8. 'return' → logprob: -16.013051986694336
    9. 'If' → logprob: -16.013051986694336
    10. '         ' → logprob: -16.388051986694336

Token 434: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.10021423548460007
    2. 'can' → logprob: -2.3502142429351807
    3. '   ' → logprob: -12.975214004516602
    4. '	can' → logprob: -13.225214004516602
    5. '           ' → logprob: -13.725214004516602
    6. '(can' → logprob: -14.100214004516602
    7. ' ' → logprob: -15.100214004516602
    8. ' is' → logprob: -15.475214004516602
    9. '_can' → logprob: -15.850214004516602
    10. '.can' → logprob: -15.975214004516602

Token 435: '_form' (ID: 18664)
  Prédit: '_form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_form' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -13.12500286102295
    3. ' _' → logprob: -14.87500286102295
    4. '_can' → logprob: -17.500001907348633
    5. '_forms' → logprob: -18.500001907348633
    6. '_Form' → logprob: -18.875001907348633
    7. 'form' → logprob: -19.125001907348633
    8. '_FORM' → logprob: -19.500001907348633
    9. ' form' → logprob: -20.000001907348633
    10. '_for' → logprob: -20.125001907348633

Token 436: '_trip' (ID: 154353)
  Prédit: '_trip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_trip' → logprob: -1.4021237802808173e-05
    2. 'trip' → logprob: -11.250014305114746
    3. ' trip' → logprob: -15.125014305114746
    4. '_' → logprob: -15.125014305114746
    5. '_tr' → logprob: -15.750014305114746
    6. '_tri' → logprob: -16.00001335144043
    7. '_form' → logprob: -17.75001335144043
    8. 's' → logprob: -18.00001335144043
    9. 'count' → logprob: -18.00001335144043
    10. '(count' → logprob: -18.12501335144043

Token 437: 'lets' (ID: 12222)
  Prédit: 'lets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lets' → logprob: -4.668304245569743e-05
    2. 'let' → logprob: -10.125046730041504
    3. 'ets' → logprob: -12.125046730041504
    4. 'plets' → logprob: -14.125046730041504
    5. 'ts' → logprob: -15.500046730041504
    6. 'sets' → logprob: -15.750046730041504
    7. '[' → logprob: -17.625045776367188
    8. 'les' → logprob: -17.875045776367188
    9. 'l' → logprob: -18.125045776367188
    10. '(' → logprob: -18.250045776367188

Token 438: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -1.5332478142227046e-05
    2. ' (' → logprob: -11.250015258789062
    3. '(' → logprob: -13.125015258789062
    4. 'counts' → logprob: -16.500015258789062
    5. '[count' → logprob: -16.625015258789062
    6. ' counts' → logprob: -17.500015258789062
    7. '((' → logprob: -17.500015258789062
    8. '   ' → logprob: -17.625015258789062
    9. '(
' → logprob: -17.875015258789062
    10. 'count' → logprob: -18.125015258789062

Token 439: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.320199877838604e-07
    2. 'counts' → logprob: -15.25
    3. '(count' → logprob: -16.75
    4. '[count' → logprob: -17.25
    5. '[' → logprob: -18.0
    6. 'S' → logprob: -18.125
    7. ')' → logprob: -18.625
    8. ' s' → logprob: -18.75
    9. ' counts' → logprob: -18.75
    10. '   ' → logprob: -18.875

Token 440: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.023377200588583946
    2. '):' → logprob: -3.7733771800994873
    3. ')' → logprob: -9.773377418518066
    4. '):
' → logprob: -10.648377418518066
    5. '           ' → logprob: -10.773377418518066
    6. ' ):
' → logprob: -11.023377418518066
    7. '               ' → logprob: -12.273377418518066
    8. '):

' → logprob: -12.648377418518066
    9. '[:' → logprob: -13.273377418518066
    10. '       ' → logprob: -13.273377418518066

Token 441: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.052377623040229e-05
    2. ' return' → logprob: -9.625070571899414
    3. 'return' → logprob: -13.000070571899414
    4. '           ' → logprob: -13.625070571899414
    5. '                
' → logprob: -14.625070571899414
    6. '                   ' → logprob: -16.250070571899414
    7. '              ' → logprob: -16.500070571899414
    8. ' True' → logprob: -16.750070571899414
    9. '       ' → logprob: -17.375070571899414
    10. '                       ' → logprob: -17.375070571899414

Token 442: ' counts' (ID: 28991)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5379547476768494
    2. '               ' → logprob: -1.0379548072814941
    3. ' return' → logprob: -2.787954807281494
    4. '           ' → logprob: -8.537954330444336
    5. '                   ' → logprob: -8.912954330444336
    6. '   ' → logprob: -14.287954330444336
    7. '	return' → logprob: -14.662954330444336
    8. '                       ' → logprob: -14.912954330444336
    9. ':return' → logprob: -14.912954330444336
    10. '       ' → logprob: -15.162954330444336

Token 443: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[' → logprob: -17.875
    3. '
' → logprob: -19.125
    4. '[
' → logprob: -19.25
    5. '[I' → logprob: -20.0
    6. ' [' → logprob: -21.375
    7. '=' → logprob: -21.5
    8. 'i' → logprob: -21.5
    9. '[c' → logprob: -21.625
    10. '[index' → logprob: -21.875

Token 444: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07242967188358307
    2. ' +=' → logprob: -2.822429656982422
    3. ']+=' → logprob: -4.572429656982422
    4. ']' → logprob: -9.947429656982422
    5. '+' → logprob: -10.947429656982422
    6. '[' → logprob: -13.322429656982422
    7. ')' → logprob: -13.572429656982422
    8. '    ' → logprob: -13.697429656982422
    9. '   ' → logprob: -13.697429656982422
    10. '           ' → logprob: -13.822429656982422

Token 445: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00524217588827014
    2. ' +=' → logprob: -5.255242347717285
    3. ']+=' → logprob: -12.130242347717285
    4. '+' → logprob: -13.005242347717285
    5. '=' → logprob: -14.880242347717285
    6. '   ' → logprob: -15.255242347717285
    7. '    ' → logprob: -16.50524139404297
    8. ' ' → logprob: -17.50524139404297
    9. '           ' → logprob: -18.25524139404297
    10. '       ' → logprob: -18.50524139404297

Token 446: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -17.501502990722656
    4. '  ' → logprob: -18.876502990722656
    5. '２' → logprob: -19.314002990722656
    6. '۲' → logprob: -19.439002990722656
    7. '```' → logprob: -19.689002990722656
    8. '२' → logprob: -20.251502990722656
    9. '২' → logprob: -20.314002990722656
    10. '0' → logprob: -20.501502990722656

Token 447: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -19.12500762939453
    4. '۲' → logprob: -19.18750762939453
    5. '२' → logprob: -19.43750762939453
    6. '২' → logprob: -19.50000762939453
    7. '```' → logprob: -20.00000762939453
    8. '２' → logprob: -20.31250762939453
    9. '1' → logprob: -20.93750762939453
    10. '  ' → logprob: -21.06250762939453

Token 448: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.796184723294573e-06
    2. 'return' → logprob: -12.625005722045898
    3. '                   ' → logprob: -13.625005722045898
    4. ' return' → logprob: -14.375005722045898
    5. '           ' → logprob: -15.000005722045898
    6. '       ' → logprob: -15.750005722045898
    7. '              ' → logprob: -16.3750057220459
    8. '   ' → logprob: -16.7500057220459
    9. '                ' → logprob: -17.3750057220459
    10. '```' → logprob: -17.8750057220459

Token 449: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.372294698550832e-06
    2. 'return' → logprob: -12.000009536743164
    3. '                   ' → logprob: -13.375009536743164
    4. ' return' → logprob: -14.125009536743164
    5. '           ' → logprob: -14.625009536743164
    6. '       ' → logprob: -15.875009536743164
    7. '                
' → logprob: -16.375009536743164
    8. '              ' → logprob: -16.375009536743164
    9. '<|end|>' → logprob: -16.750009536743164
    10. '                       ' → logprob: -17.250009536743164

Token 450: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0700685977935791
    2. '               ' → logprob: -2.820068597793579
    3. ' return' → logprob: -4.820068359375
    4. '           ' → logprob: -13.570068359375
    5. '                   ' → logprob: -14.445068359375
    6. '       ' → logprob: -16.445068359375
    7. '   ' → logprob: -16.945068359375
    8. '	return' → logprob: -16.945068359375
    9. '
' → logprob: -17.570068359375
    10. ':return' → logprob: -17.695068359375

Token 451: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00861456897109747
    2. ' True' → logprob: -4.758614540100098
    3. '(True' → logprob: -20.008615493774414
    4. '=True' → logprob: -21.883615493774414
    5. 'False' → logprob: -22.383615493774414
    6. 'true' → logprob: -22.758615493774414
    7. ' ' → logprob: -23.258615493774414
    8. '   ' → logprob: -23.258615493774414
    9. ' ' → logprob: -24.258615493774414
    10. '.True' → logprob: -24.883615493774414

Token 452: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022845028433948755
    2. '   ' → logprob: -9.125228881835938
    3. 'counts' → logprob: -9.375228881835938
    4. '       ' → logprob: -10.750228881835938
    5. ' counts' → logprob: -11.500228881835938
    6. '
' → logprob: -13.500228881835938
    7. '               ' → logprob: -14.000228881835938
    8. '            
' → logprob: -15.375228881835938
    9. 'return' → logprob: -15.625228881835938
    10. '                   ' → logprob: -16.500228881835938

Token 453: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008720364421606064
    2. '   ' → logprob: -8.000871658325195
    3. '       ' → logprob: -8.250871658325195
    4. 'counts' → logprob: -8.250871658325195
    5. ' counts' → logprob: -11.250871658325195
    6. '               ' → logprob: -14.500871658325195
    7. '
' → logprob: -15.625871658325195
    8. '          ' → logprob: -16.000871658325195
    9. '		' → logprob: -16.500871658325195
    10. 'count' → logprob: -16.625871658325195

Token 454: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.2167360782623291
    2. '           ' → logprob: -1.716736078262329
    3. ' counts' → logprob: -4.59173583984375
    4. '       ' → logprob: -5.71673583984375
    5. '   ' → logprob: -6.34173583984375
    6. 'count' → logprob: -11.34173583984375
    7. '_counts' → logprob: -13.21673583984375
    8. ' ' → logprob: -13.34173583984375
    9. '               ' → logprob: -13.46673583984375
    10. '         ' → logprob: -14.34173583984375

Token 455: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -13.875000953674316
    3. 'i' → logprob: -15.250000953674316
    4. '[I' → logprob: -18.375001907348633
    5. '	i' → logprob: -18.625001907348633
    6. ' i' → logprob: -19.000001907348633
    7. ' [' → logprob: -19.625001907348633
    8. '[j' → logprob: -19.750001907348633
    9. '   ' → logprob: -20.000001907348633
    10. '[count' → logprob: -20.250001907348633

Token 456: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03302527219057083
    2. ' +=' → logprob: -3.5330252647399902
    3. ']+=' → logprob: -5.78302526473999
    4. '+' → logprob: -8.908025741577148
    5. ']' → logprob: -9.908025741577148
    6. ')' → logprob: -13.283025741577148
    7. '=' → logprob: -13.783025741577148
    8. '[' → logprob: -14.408025741577148
    9. '[i' → logprob: -14.783025741577148
    10. ']+' → logprob: -14.783025741577148

Token 457: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0019317318219691515
    2. ' +=' → logprob: -6.251931667327881
    3. '+' → logprob: -13.251932144165039
    4. ']+=' → logprob: -13.501932144165039
    5. '=' → logprob: -17.25193214416504
    6. ' ' → logprob: -20.50193214416504
    7. '+=(' → logprob: -20.75193214416504
    8. '+='' → logprob: -20.75193214416504
    9. '+="' → logprob: -21.25193214416504
    10. '   ' → logprob: -22.12693214416504

Token 458: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '   ' → logprob: -19.12537956237793
    4. '  ' → logprob: -20.56287956237793
    5. '۲' → logprob: -20.68787956237793
    6. '２' → logprob: -20.87537956237793
    7. '२' → logprob: -21.06287956237793
    8. '	' → logprob: -21.25037956237793
    9. '২' → logprob: -21.37537956237793
    10. '0' → logprob: -22.18787956237793

Token 459: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -20.12501335144043
    4. '0' → logprob: -21.00001335144043
    5. '  ' → logprob: -21.12501335144043
    6. '۲' → logprob: -21.31251335144043
    7. '२' → logprob: -21.43751335144043
    8. '２' → logprob: -21.62501335144043
    9. '২' → logprob: -21.68751335144043
    10. '1' → logprob: -22.00001335144043

Token 460: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028279269114136696
    2. ' return' → logprob: -3.9032793045043945
    3. '
' → logprob: -5.2782793045043945
    4. 'return' → logprob: -6.0282793045043945
    5. '<|end|>' → logprob: -9.903279304504395
    6. '    
' → logprob: -10.528279304504395
    7. '       ' → logprob: -10.653279304504395
    8. '	return' → logprob: -11.028279304504395
    9. ':return' → logprob: -11.028279304504395
    10. '  
' → logprob: -11.278279304504395

Token 461: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010816368740051985
    2. 'return' → logprob: -7.001081466674805
    3. ' return' → logprob: -9.251081466674805
    4. 'False' → logprob: -9.751081466674805
    5. '
' → logprob: -11.876081466674805
    6. '       ' → logprob: -12.501081466674805
    7. 'None' → logprob: -13.001081466674805
    8. ' False' → logprob: -14.251081466674805
    9. '  ' → logprob: -14.376081466674805
    10. '0' → logprob: -14.876081466674805

Token 462: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3568804860115051
    2. '   ' → logprob: -1.6068804264068604
    3. 'False' → logprob: -2.3568804264068604
    4. ' return' → logprob: -5.3568806648254395
    5. ' False' → logprob: -9.481880187988281
    6. '```' → logprob: -10.231880187988281
    7. '	return' → logprob: -10.606880187988281
    8. '    
' → logprob: -10.731880187988281
    9. '
' → logprob: -10.981880187988281
    10. 'false' → logprob: -11.731880187988281

Token 463: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0005530327325686812
    2. ' False' → logprob: -7.500553131103516
    3. '(False' → logprob: -20.375553131103516
    4. 'false' → logprob: -21.625553131103516
    5. '=False' → logprob: -23.000553131103516
    6. '   ' → logprob: -23.500553131103516
    7. 'True' → logprob: -23.750553131103516
    8. '_false' → logprob: -23.875553131103516
    9. 'F' → logprob: -24.125553131103516
    10. '.False' → logprob: -25.250553131103516

Token 464: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 465: 'import' (ID: 561)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 466: ' sys' (ID: 12228)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.23741614818572998
    2. ' itertools' → logprob: -1.73741614818573
    3. ' sys' → logprob: -4.1124162673950195
    4. ' random' → logprob: -4.3624162673950195
    5. 'collections' → logprob: -5.3624162673950195
    6. ' copy' → logprob: -6.7374162673950195
    7. ' math' → logprob: -8.61241626739502
    8. 'random' → logprob: -9.11241626739502
    9. ' functools' → logprob: -10.48741626739502
    10. 'copy' → logprob: -10.86241626739502

Token 467: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5718210339546204
    2. 'input' → logprob: -1.0718209743499756
    3. 'data' → logprob: -2.9468209743499756
    4. '
' → logprob: -4.071821212768555
    5. 'if' → logprob: -4.696821212768555
    6. 'def' → logprob: -4.946821212768555
    7. 'n' → logprob: -6.196821212768555
    8. 'import' → logprob: -6.696821212768555
    9. 'line' → logprob: -6.821821212768555
    10. 'cards' → logprob: -7.696821212768555

Token 468: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.951215922832489
    2. 'cards' → logprob: -0.951215922832489
    3. 'input' → logprob: -2.201215982437134
    4. 'line' → logprob: -2.701215982437134
    5. 'lines' → logprob: -3.701215982437134
    6. 'if' → logprob: -4.451215744018555
    7. 'def' → logprob: -4.451215744018555
    8. 'data' → logprob: -7.076215744018555
    9. 'deck' → logprob: -8.076215744018555
    10. 'n' → logprob: -8.326215744018555

Token 469: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.006254042498767376
    2. ' cards' → logprob: -5.131254196166992
    3. ' _' → logprob: -8.756254196166992
    4. 'line' → logprob: -9.006254196166992
    5. ' hand' → logprob: -11.506254196166992
    6. 'cards' → logprob: -11.631254196166992
    7. '_' → logprob: -12.006254196166992
    8. '_line' → logprob: -12.506254196166992
    9. '_cards' → logprob: -12.506254196166992
    10. '	line' → logprob: -12.506254196166992

Token 470: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018172068521380424
    2. 'in' → logprob: -4.018172264099121
    3. ' ' → logprob: -11.018172264099121
    4. ' ' → logprob: -13.893172264099121
    5. '_' → logprob: -14.018172264099121
    6. 'import' → logprob: -14.268172264099121
    7. 's' → logprob: -14.643172264099121
    8. ' i' → logprob: -14.643172264099121
    9. 'line' → logprob: -14.893172264099121
    10. '	in' → logprob: -15.268172264099121

Token 471: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00861681904643774
    2. ' sys' → logprob: -4.758616924285889
    3. '=sys' → logprob: -13.13361644744873
    4. '	sys' → logprob: -15.38361644744873
    5. '(sys' → logprob: -17.258617401123047
    6. '```' → logprob: -17.508617401123047
    7. 'stdin' → logprob: -18.508617401123047
    8. 'import' → logprob: -18.758617401123047
    9. '_' → logprob: -19.883617401123047
    10. 'in' → logprob: -20.133617401123047

Token 472: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.07665126025676727
    2. '.readline' → logprob: -3.3266513347625732
    3. '.' → logprob: -3.4516513347625732
    4. 'stdin' → logprob: -5.701651096343994
    5. 'import' → logprob: -6.826651096343994
    6. 'in' → logprob: -7.701651096343994
    7. '.readlines' → logprob: -7.701651096343994
    8. '(stdin' → logprob: -8.201651573181152
    9. '```' → logprob: -8.951651573181152
    10. '().' → logprob: -9.826651573181152

Token 473: ':
' (ID: 734)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.020387135446071625
    2. ':' → logprob: -4.270387172698975
    3. ' in' → logprob: -5.895387172698975
    4. '.readlines' → logprob: -6.145387172698975
    5. '.strip' → logprob: -7.645387172698975
    6. '.' → logprob: -8.020386695861816
    7. '.rstrip' → logprob: -8.145386695861816
    8. ' readline' → logprob: -10.145386695861816
    9. 'rstrip' → logprob: -10.270386695861816
    10. ':
' → logprob: -10.395386695861816

Token 474: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001246348983841017
    2. '    
' → logprob: -9.50012493133545
    3. '.strip' → logprob: -11.50012493133545
    4. '(cards' → logprob: -11.87512493133545
    5. ' cards' → logprob: -11.87512493133545
    6. ' line' → logprob: -12.37512493133545
    7. '```' → logprob: -12.37512493133545
    8. ' if' → logprob: -12.75012493133545
    9. '.rstrip' → logprob: -13.12512493133545
    10. 'tokens' → logprob: -13.37512493133545

Token 475: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14789366722106934
    2. 'cards' → logprob: -2.2728936672210693
    3. ' cards' → logprob: -3.6478936672210693
    4. ' line' → logprob: -5.272893905639648
    5. 'line' (adapté à ' line') → logprob: -5.772893905639648
    6. '(cards' → logprob: -9.647893905639648
    7. '```' → logprob: -11.022893905639648
    8. '.cards' → logprob: -11.147893905639648
    9. '_cards' → logprob: -11.147893905639648
    10. 'c' → logprob: -11.272893905639648

Token 476: '=line' (ID: 192488)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02335425838828087
    2. '=line' → logprob: -4.0233540534973145
    3. ' =' → logprob: -5.2733540534973145
    4. '.strip' → logprob: -9.773354530334473
    5. 'strip' → logprob: -12.898354530334473
    6. '.rstrip' → logprob: -13.398354530334473
    7. 'rstrip' → logprob: -13.648354530334473
    8. '=
' → logprob: -13.773354530334473
    9. 's' → logprob: -15.148354530334473
    10. '_strip' → logprob: -15.273354530334473

Token 477: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0007875907467678189
    2. '.rstrip' → logprob: -7.250787734985352
    3. '.' → logprob: -9.625787734985352
    4. 'strip' → logprob: -11.500787734985352
    5. '().' → logprob: -14.625787734985352
    6. '.replace' → logprob: -15.500787734985352
    7. 'rstrip' → logprob: -16.00078773498535
    8. '.trim' → logprob: -16.25078773498535
    9. '.readline' → logprob: -16.25078773498535
    10. '(strip' → logprob: -16.50078773498535

Token 478: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08976873010396957
    2. '()
' → logprob: -2.464768648147583
    3. '().' → logprob: -7.214768886566162
    4. '.split' → logprob: -10.714768409729004
    5. '()

' → logprob: -11.214768409729004
    6. '   ' → logprob: -11.464768409729004
    7. '()\' → logprob: -11.464768409729004
    8. '();' → logprob: -11.589768409729004
    9. '():
' → logprob: -12.464768409729004
    10. '()
' → logprob: -12.589768409729004

Token 479: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2120632827281952
    2. ' if' → logprob: -1.7120633125305176
    3. 'if' → logprob: -4.587063312530518
    4. ' and' → logprob: -8.83706283569336
    5. '    
' → logprob: -9.21206283569336
    6. '	if' → logprob: -10.08706283569336
    7. 'and' → logprob: -10.58706283569336
    8. ',' → logprob: -10.83706283569336
    9. '=' → logprob: -11.46206283569336
    10. '<|end|>' → logprob: -11.46206283569336

Token 480: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -2.4153549020411447e-05
    2. 'cards' → logprob: -11.00002384185791
    3. ' if' → logprob: -11.87502384185791
    4. '   ' → logprob: -14.87502384185791
    5. 'If' → logprob: -17.625024795532227
    6. '	if' → logprob: -18.625024795532227
    7. '```' → logprob: -18.875024795532227
    8. '    
' → logprob: -19.250024795532227
    9. 'ifs' → logprob: -19.375024795532227
    10. '
' → logprob: -20.125024795532227

Token 481: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.4034094512462616
    2. ' not' → logprob: -1.153409481048584
    3. 'line' → logprob: -4.153409481048584
    4. ' line' → logprob: -7.278409481048584
    5. 'len' → logprob: -15.528409004211426
    6. '	not' → logprob: -15.528409004211426
    7. 'no' → logprob: -15.778409004211426
    8. '!' → logprob: -15.778409004211426
    9. '=line' → logprob: -15.903409004211426
    10. '```' → logprob: -15.903409004211426

Token 482: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.01815006136894226
    2. ' line' → logprob: -4.0181498527526855
    3. '	line' → logprob: -16.643150329589844
    4. '
' → logprob: -17.643150329589844
    5. '#line' → logprob: -18.268150329589844
    6. '(line' → logprob: -18.643150329589844
    7. ' ' → logprob: -18.768150329589844
    8. 'lin' → logprob: -19.268150329589844
    9. 'len' → logprob: -19.643150329589844
    10. 'l' → logprob: -19.768150329589844

Token 483: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07019595056772232
    2. ':
' → logprob: -2.6951959133148193
    3. ' or' → logprob: -8.820196151733398
    4. 'or' → logprob: -9.945196151733398
    5. ':return' → logprob: -10.570196151733398
    6. ' :' → logprob: -11.820196151733398
    7. '.' → logprob: -11.820196151733398
    8. '[' → logprob: -12.695196151733398
    9. '   ' → logprob: -12.945196151733398
    10. '<|end|>' → logprob: -13.195196151733398

Token 484: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3963063955307007
    2. '       ' → logprob: -1.1463063955307007
    3. ':' → logprob: -4.77130651473999
    4. ':
' → logprob: -7.02130651473999
    5. '   ' → logprob: -12.021306037902832
    6. ',' → logprob: -12.771306037902832
    7. '<|end|>' → logprob: -12.771306037902832
    8. '	   ' → logprob: -12.896306037902832
    9. ' :' → logprob: -13.396306037902832
    10. '	break' → logprob: -13.521306037902832

Token 485: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.015771562233567238
    2. 'continue' (adapté à ' continue') → logprob: -4.765771389007568
    3. ' break' → logprob: -5.265771389007568
    4. '   ' → logprob: -6.265771389007568
    5. ' continue' → logprob: -10.140771865844727
    6. '       ' → logprob: -10.765771865844727
    7. '	break' → logprob: -12.265771865844727
    8. '           ' → logprob: -15.390771865844727
    9. '	continue' → logprob: -16.640771865844727
    10. '    ' → logprob: -16.765771865844727

Token 486: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005759088089689612
    2. '    
' → logprob: -7.625576019287109
    3. '
' → logprob: -9.37557601928711
    4. '  
' → logprob: -13.87557601928711
    5. '```' → logprob: -14.50057601928711
    6. '        
' → logprob: -14.62557601928711
    7. '<|end|>' → logprob: -14.87557601928711
    8. 'cards' → logprob: -15.37557601928711
    9. '   
' → logprob: -15.62557601928711
    10. ' 
' → logprob: -16.12557601928711

Token 487: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10208865255117416
    2. 'cards' → logprob: -2.477088689804077
    3. ' cards' → logprob: -4.477088451385498
    4. '    
' → logprob: -6.727088451385498
    5. '
' → logprob: -8.352088928222656
    6. '(cards' → logprob: -9.352088928222656
    7. '_cards' → logprob: -9.977088928222656
    8. '.cards' → logprob: -10.352088928222656
    9. '```' → logprob: -10.977088928222656
    10. 'tokens' → logprob: -11.227088928222656

Token 488: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' (adapté à ' cards') → logprob: -0.0001246348983841017
    2. ' cards' → logprob: -9.50012493133545
    3. 'numbers' → logprob: -10.50012493133545
    4. '   ' → logprob: -11.37512493133545
    5. 'nums' → logprob: -12.25012493133545
    6. 'digits' → logprob: -13.25012493133545
    7. 'parts' → logprob: -13.62512493133545
    8. 'hand' → logprob: -13.87512493133545
    9. '(cards' → logprob: -14.50012493133545
    10. '_cards' → logprob: -15.12512493133545

Token 489: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048870187252759933
    2. ' =' → logprob: -3.048870086669922
    3. '=list' → logprob: -8.548870086669922
    4. '=line' → logprob: -9.423870086669922
    5. '=[' → logprob: -12.048870086669922
    6. '=[]' → logprob: -13.548870086669922
    7. '=int' → logprob: -14.673870086669922
    8. '=input' → logprob: -15.548870086669922
    9. ' =[' → logprob: -15.673870086669922
    10. '＝' → logprob: -15.923870086669922

Token 490: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -5.512236498361744e-07
    2. ' list' → logprob: -15.500000953674316
    3. '[list' → logprob: -15.500000953674316
    4. '[' → logprob: -20.0
    5. '=list' → logprob: -21.375
    6. '(list' → logprob: -22.25
    7. 'List' → logprob: -23.625
    8. '.list' → logprob: -24.5
    9. '	list' → logprob: -24.75
    10. 'map' → logprob: -24.75

Token 491: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -8.41866585687967e-06
    2. 'map' → logprob: -11.750008583068848
    3. '(' → logprob: -15.000008583068848
    4. '(int' → logprob: -15.875008583068848
    5. ' map' → logprob: -21.00000762939453
    6. '(
' → logprob: -21.12500762939453
    7. '()' → logprob: -21.62500762939453
    8. ',map' → logprob: -21.62500762939453
    9. '.map' → logprob: -21.87500762939453
    10. '	map' → logprob: -21.87500762939453

Token 492: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00010020548506872728
    2. 'int' → logprob: -9.250100135803223
    3. '(str' → logprob: -12.750100135803223
    4. '(' → logprob: -14.125100135803223
    5. 'str' → logprob: -15.625100135803223
    6. ',int' → logprob: -15.875100135803223
    7. ' int' → logprob: -17.00010108947754
    8. '   ' → logprob: -17.25010108947754
    9. '=int' → logprob: -17.87510108947754
    10. '<int' → logprob: -18.37510108947754

Token 493: ',list' (ID: 162011)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.018794644623994827
    2. ',line' → logprob: -4.018794536590576
    3. ',' → logprob: -7.393794536590576
    4. ' line' → logprob: -11.393795013427734
    5. '=line' → logprob: -11.893795013427734
    6. '(' → logprob: -12.393795013427734
    7. ' (' → logprob: -12.643795013427734
    8. 'line' → logprob: -13.518795013427734
    9. ' ,' → logprob: -14.018795013427734
    10. '[line' → logprob: -14.643795013427734

Token 494: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -4.842555426876061e-06
    2. 'line' → logprob: -12.250004768371582
    3. '(' → logprob: -18.1250057220459
    4. '=line' → logprob: -18.6250057220459
    5. '#line' → logprob: -20.2500057220459
    6. '[line' → logprob: -20.3750057220459
    7. ' line' → logprob: -20.5000057220459
    8. ',line' → logprob: -21.1250057220459
    9. '(
' → logprob: -22.8750057220459
    10. '(Line' → logprob: -23.5000057220459

Token 495: ')))
' (ID: 12562)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.6319562792778015
    2. '(line' → logprob: -1.2569563388824463
    3. '.strip' → logprob: -2.3819563388824463
    4. ')))' → logprob: -3.0069563388824463
    5. '(strip' → logprob: -3.8819563388824463
    6. '().' → logprob: -4.631956100463867
    7. '()))' → logprob: -4.881956100463867
    8. '())))
' → logprob: -6.381956100463867
    9. '()' → logprob: -6.756956100463867
    10. '(' → logprob: -7.006956100463867

Token 496: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0337425172328949
    2. 'if' → logprob: -3.5337424278259277
    3. ' if' → logprob: -5.783742427825928
    4. '<|end|>' → logprob: -7.033742427825928
    5. '    
' → logprob: -12.158742904663086
    6. '<|end|>' → logprob: -12.408742904663086
    7. '	if' → logprob: -12.658742904663086
    8. ')' → logprob: -12.908742904663086
    9. '```' → logprob: -12.908742904663086
    10. '
' → logprob: -13.033742904663086

Token 497: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20216333866119385
    2. 'if' → logprob: -1.7021633386611938
    3. '   ' → logprob: -7.702163219451904
    4. ' if' → logprob: -8.327163696289062
    5. ' print' → logprob: -9.827163696289062
    6. 'result' (adapté à ' result') → logprob: -13.327163696289062
    7. '    
' → logprob: -15.452163696289062
    8. 'for' → logprob: -15.702163696289062
    9. '```' → logprob: -16.202163696289062
    10. '	print' → logprob: -18.202163696289062

Token 498: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132679760456085
    2. '=' → logprob: -1.3132679462432861
    3. '(' → logprob: -13.688267707824707
    4. '＝' → logprob: -14.063267707824707
    5. '=result' → logprob: -14.313267707824707
    6. '_' → logprob: -14.563267707824707
    7. ')' → logprob: -14.938267707824707
    8. '=True' → logprob: -14.938267707824707
    9. '_=' → logprob: -15.063267707824707
    10. ' =)' → logprob: -15.188267707824707

Token 499: ' []

' (ID: 32833)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.09532414376735687
    2. '"is' → logprob: -2.8453240394592285
    3. '"' → logprob: -3.7203240394592285
    4. ' is' → logprob: -5.3453240394592285
    5. ''is' → logprob: -5.8453240394592285
    6. ''' → logprob: -7.7203240394592285
    7. 'True' → logprob: -8.345324516296387
    8. ' "' → logprob: -8.845324516296387
    9. 'str' → logprob: -9.720324516296387
    10. 'int' → logprob: -11.970324516296387

Token 500: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009214204736053944
    2. 'for' → logprob: -5.009214401245117
    3. ' for' → logprob: -6.009214401245117
    4. 'if' → logprob: -11.259214401245117
    5. '	for' → logprob: -11.634214401245117
    6. ' if' → logprob: -12.384214401245117
    7. ' ' → logprob: -12.759214401245117
    8. '<|end|>' → logprob: -12.759214401245117
    9. '    
' → logprob: -12.884214401245117
    10. '  ' → logprob: -13.259214401245117

Token 501: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.010889589786529541
    2. '   ' → logprob: -4.635889530181885
    3. ' for' → logprob: -7.885889530181885
    4. 'if' → logprob: -8.010890007019043
    5. 'valid' → logprob: -8.635890007019043
    6. 'pairs' → logprob: -8.885890007019043
    7. 'found' → logprob: -10.010890007019043
    8. 'counts' → logprob: -10.260890007019043
    9. 'count' → logprob: -11.260890007019043
    10. 'possible' → logprob: -12.260890007019043

Token 502: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0550202801823616
    2. 'length' → logprob: -3.555020332336426
    3. 'x' → logprob: -5.430020332336426
    4. 'start' → logprob: -5.680020332336426
    5. 'num' → logprob: -5.805020332336426
    6. 'card' → logprob: -6.055020332336426
    7. 'd' → logprob: -6.680020332336426
    8. 'split' → logprob: -6.680020332336426
    9. 'size' → logprob: -6.680020332336426
    10. 'digit' → logprob: -6.805020332336426

Token 503: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07901526242494583
    2. 'in' → logprob: -2.5790152549743652
    3. '   ' → logprob: -10.829015731811523
    4. 'range' → logprob: -11.079015731811523
    5. 'to' → logprob: -11.704015731811523
    6. 'n' → logprob: -11.704015731811523
    7. 'In' → logprob: -11.829015731811523
    8. 'x' → logprob: -11.829015731811523
    9. 'd' → logprob: -12.079015731811523
    10. '1' → logprob: -12.329015731811523

Token 504: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001596771035110578
    2. ' range' → logprob: -8.75015926361084
    3. '[' → logprob: -13.87515926361084
    4. '(range' → logprob: -15.37515926361084
    5. '(' → logprob: -17.375160217285156
    6. '1' → logprob: -18.250160217285156
    7. '	range' → logprob: -18.875160217285156
    8. 'cards' → logprob: -19.125160217285156
    9. '   ' → logprob: -19.125160217285156
    10. 'list' → logprob: -20.250160217285156

Token 505: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4855663721391466e-05
    2. '1' → logprob: -11.125015258789062
    3. ' (' → logprob: -16.875015258789062
    4. ' ' → logprob: -18.125015258789062
    5. '(
' → logprob: -18.500015258789062
    6. ',' → logprob: -19.375015258789062
    7. '[' → logprob: -20.000015258789062
    8. '10' → logprob: -20.500015258789062
    9. '   ' → logprob: -21.000015258789062
    10. 's' → logprob: -21.250015258789062

Token 506: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011009939044015482
    2. '(' → logprob: -9.125109672546387
    3. ' ' → logprob: -14.250109672546387
    4. '10' → logprob: -14.500109672546387
    5. '`' → logprob: -18.250110626220703
    6. '_' → logprob: -18.625110626220703
    7. '１' → logprob: -18.875110626220703
    8. '[' → logprob: -18.875110626220703
    9. '{' → logprob: -19.000110626220703
    10. '```' → logprob: -19.000110626220703

Token 507: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.062250666320323944
    2. '0' → logprob: -2.8122506141662598
    3. ' ,' → logprob: -8.187251091003418
    4. '10' → logprob: -12.812251091003418
    5. ' ' → logprob: -13.312251091003418
    6. '1' → logprob: -15.437251091003418
    7. '_,' → logprob: -16.4372501373291
    8. '   ' → logprob: -17.3122501373291
    9. ',
' → logprob: -17.6872501373291
    10. '‌,' → logprob: -17.9372501373291

Token 508: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -6.704273118884885e-07
    2. '9' → logprob: -15.375000953674316
    3. '0' → logprob: -15.875000953674316
    4. ' ' → logprob: -16.375
    5. '1' → logprob: -16.625
    6. '=' → logprob: -16.875
    7. '```' → logprob: -17.75
    8. '{' → logprob: -18.0
    9. '
' → logprob: -18.25
    10. '8' → logprob: -18.25

Token 509: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5764650702476501
    2. '):
' → logprob: -0.8264650702476501
    3. '+' → logprob: -7.951465129852295
    4. ':' → logprob: -8.826464653015137
    5. ')' → logprob: -11.201464653015137
    6. '):
' → logprob: -12.951464653015137
    7. '   ' → logprob: -12.951464653015137
    8. ' ):' → logprob: -13.451464653015137
    9. ':
' → logprob: -13.576464653015137
    10. '0' → logprob: -13.826464653015137

Token 510: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004860496148467064
    2. ':' → logprob: -5.6298604011535645
    3. '<|end|>' → logprob: -7.1298604011535645
    4. '   ' → logprob: -9.129860877990723
    5. ':
' → logprob: -9.254860877990723
    6. ' if' → logprob: -9.504860877990723
    7. ',' → logprob: -10.004860877990723
    8. '        
' → logprob: -10.504860877990723
    9. '<|end|>' → logprob: -10.504860877990723
    10. '):' → logprob: -11.379860877990723

Token 511: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.331575483083725
    2. 'counts' → logprob: -1.9565755128860474
    3. ' counts' → logprob: -2.206575393676758
    4. '   ' → logprob: -4.706575393676758
    5. 'cards' → logprob: -4.831575393676758
    6. ' if' → logprob: -5.081575393676758
    7. 'if' (adapté à ' if') → logprob: -6.081575393676758
    8. ' cards' → logprob: -6.456575393676758
    9. ' new' → logprob: -6.581575393676758
    10. 'count' → logprob: -6.956575393676758

Token 512: ' cards' (ID: 10541)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.010810339823365211
    2. 'cards' → logprob: -5.010810375213623
    3. ' is' → logprob: -5.635810375213623
    4. 'counts' → logprob: -8.135809898376465
    5. 'can' → logprob: -9.885809898376465
    6. ' cards' → logprob: -10.135809898376465
    7. '   ' → logprob: -10.510809898376465
    8. 'len' → logprob: -10.635809898376465
    9. 'result' → logprob: -10.885809898376465
    10. '(cards' → logprob: -11.010809898376465

Token 513: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.00025633294717408717
    2. '[x' → logprob: -8.750256538391113
    3. '.' → logprob: -9.375256538391113
    4. '[count' → logprob: -12.500256538391113
    5. 'count' → logprob: -12.625256538391113
    6. '.append' → logprob: -12.750256538391113
    7. ' .' → logprob: -13.625256538391113
    8. '[c' → logprob: -14.000256538391113
    9. '[' → logprob: -14.500256538391113
    10. '.c' → logprob: -15.750256538391113

Token 514: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -7.896309739408025e-07
    2. 'x' → logprob: -14.750000953674316
    3. '(' → logprob: -14.875000953674316
    4. '(
' → logprob: -19.375
    5. '((' → logprob: -20.0
    6. '	x' → logprob: -20.25
    7. ' x' → logprob: -21.125
    8. '
' → logprob: -21.375
    9. ' (' → logprob: -22.125
    10. '(i' → logprob: -22.25

Token 515: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011804800480604172
    2. ')+' → logprob: -5.011804580688477
    3. ')<' → logprob: -5.636804580688477
    4. ')>' → logprob: -7.011804580688477
    5. ')==' → logprob: -8.261804580688477
    6. ')>=' → logprob: -8.761804580688477
    7. '+' → logprob: -9.261804580688477
    8. '<' → logprob: -10.261804580688477
    9. ' )' → logprob: -10.511804580688477
    10. ' +' → logprob: -11.761804580688477

Token 516: ' >=' (ID: 5064)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.20165151357650757
    2. ' <' → logprob: -1.7016515731811523
    3. '<x' → logprob: -8.951651573181152
    4. '()<' → logprob: -9.326651573181152
    5. ')<' → logprob: -12.826651573181152
    6. '<int' → logprob: -12.951651573181152
    7. '<count' → logprob: -13.076651573181152
    8. '   ' → logprob: -13.701651573181152
    9. ')' → logprob: -13.826651573181152
    10. '<size' → logprob: -13.951651573181152

Token 517: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.37500286102295
    3. '
' → logprob: -14.00000286102295
    4. '1' → logprob: -16.500001907348633
    5. '   ' → logprob: -17.000001907348633
    6. '5' → logprob: -17.250001907348633
    7. '

' → logprob: -17.375001907348633
    8. '14' → logprob: -17.625001907348633
    9. '```' → logprob: -17.875001907348633
    10. '2' → logprob: -18.000001907348633

Token 518: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.5776860184123507e-06
    2. '1' → logprob: -14.00000286102295
    3. '
' → logprob: -14.00000286102295
    4. '2' → logprob: -15.50000286102295
    5. '5' → logprob: -16.000001907348633
    6. '3' → logprob: -16.000001907348633
    7. '

' → logprob: -16.375001907348633
    8. ' ' → logprob: -16.500001907348633
    9. '0' → logprob: -16.875001907348633
    10. '"' → logprob: -17.250001907348633

Token 519: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0268969535827637
    2. '       ' → logprob: -1.2768969535827637
    3. ':' → logprob: -1.4018969535827637
    4. '           ' → logprob: -2.1518969535827637
    5. ' or' → logprob: -8.526897430419922
    6. '   ' → logprob: -9.401897430419922
    7. '	       ' → logprob: -9.776897430419922
    8. '	   ' → logprob: -9.901897430419922
    9. '	' → logprob: -10.026897430419922
    10. ',' → logprob: -10.276897430419922

Token 520: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03227785602211952
    2. '       ' → logprob: -3.657277822494507
    3. ' continue' → logprob: -5.532278060913086
    4. 'continue' → logprob: -6.907278060913086
    5. '
' → logprob: -7.032278060913086
    6. '	       ' → logprob: -9.907278060913086
    7. '		' → logprob: -10.907278060913086
    8. '	continue' → logprob: -11.157278060913086
    9. '   ' → logprob: -11.907278060913086
    10. ',' → logprob: -12.157278060913086

Token 521: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5106850266456604
    2. '       ' → logprob: -1.6356849670410156
    3. 'continue' → logprob: -1.6356849670410156
    4. ' continue' → logprob: -4.635684967041016
    5. '   ' → logprob: -8.510684967041016
    6. '	continue' → logprob: -8.510684967041016
    7. '               ' → logprob: -9.135684967041016
    8. '	       ' → logprob: -10.260684967041016
    9. 'contin' → logprob: -11.635684967041016
    10. '_continue' → logprob: -12.010684967041016

Token 522: ' pas' (ID: 2173)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.25634437799453735
    2. '       ' → logprob: -2.0063443183898926
    3. ' continue' → logprob: -2.6313443183898926
    4. '           ' → logprob: -4.131344318389893
    5. '   ' → logprob: -5.756344318389893
    6. '	continue' → logprob: -8.00634479522705
    7. 'result' → logprob: -9.75634479522705
    8. ' ' → logprob: -11.50634479522705
    9. 'contin' → logprob: -11.75634479522705
    10. '               ' → logprob: -11.88134479522705

Token 523: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8148261308670044
    2. ' ' → logprob: -1.8148261308670044
    3. '       ' → logprob: -1.8148261308670044
    4. ' continue' → logprob: -1.8148261308670044
    5. '    ' → logprob: -3.814826011657715
    6. ' continuer' → logprob: -4.564826011657715
    7. 'continue' → logprob: -4.814826011657715
    8. 's' → logprob: -4.814826011657715
    9. '  ' → logprob: -4.939826011657715
    10. 'contin' → logprob: -5.689826011657715

Token 524: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1830887645483017
    2. '           ' → logprob: -1.808088779449463
    3. ' continue' → logprob: -5.933088779449463
    4. '               ' → logprob: -8.433088302612305
    5. '   ' → logprob: -8.558088302612305
    6. 'continue' → logprob: -8.683088302612305
    7. '
' → logprob: -10.183088302612305
    8. ',' → logprob: -10.183088302612305
    9. '	continue' → logprob: -11.433088302612305
    10. ':' → logprob: -11.808088302612305

Token 525: ''aj' (ID: 116735)
  Prédit: ''aj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''aj' → logprob: -0.2350924164056778
    2. 'aj' → logprob: -1.9850924015045166
    3. ''avoir' → logprob: -3.8600924015045166
    4. ' ajouter' → logprob: -3.9850924015045166
    5. '’aj' → logprob: -4.985092639923096
    6. 'e' → logprob: -5.235092639923096
    7. 'contin' → logprob: -5.485092639923096
    8. 'avoir' → logprob: -5.860092639923096
    9. 'add' → logprob: -6.110092639923096
    10. 'éc' → logprob: -6.235092639923096

Token 526: 'outer' (ID: 5838)
  Prédit: 'outer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -0.00014895245840307325
    2. 'out' → logprob: -9.62514877319336
    3. 'oute' → logprob: -10.25014877319336
    4. 'ouer' → logprob: -10.87514877319336
    5. 'ou' → logprob: -11.62514877319336
    6. 'o' → logprob: -12.00014877319336
    7. 'outez' → logprob: -12.00014877319336
    8. '

' → logprob: -13.62514877319336
    9. '_outer' → logprob: -14.00014877319336
    10. '
' → logprob: -14.00014877319336

Token 527: ' ce' (ID: 2357)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.3176686465740204
    2. '           ' → logprob: -1.8176686763763428
    3. '       ' → logprob: -2.8176686763763428
    4. 'continue' → logprob: -3.3176686763763428
    5. ' continuer' → logprob: -5.067668437957764
    6. '   ' → logprob: -6.067668437957764
    7. '               ' → logprob: -6.692668437957764
    8. ' x' → logprob: -6.942668437957764
    9. 'contin' → logprob: -7.567668437957764
    10. '	continue' → logprob: -7.567668437957764

Token 528: ' chiffre' (ID: 107420)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0723884254693985
    2. ' x' → logprob: -2.6973884105682373
    3. ' card' → logprob: -7.697388648986816
    4. ' ' → logprob: -7.697388648986816
    5. ' token' → logprob: -7.697388648986816
    6. ' carte' → logprob: -7.697388648986816
    7. ' carta' → logprob: -9.072388648986816
    8. ' nombre' → logprob: -9.322388648986816
    9. ' cartes' → logprob: -9.947388648986816
    10. 'c' → logprob: -10.072388648986816

Token 529: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1994440108537674
    2. '       ' → logprob: -1.824444055557251
    3. ' continue' → logprob: -4.074443817138672
    4. ',' → logprob: -7.199443817138672
    5. '               ' → logprob: -7.199443817138672
    6. 'continue' → logprob: -7.324443817138672
    7. '   ' → logprob: -9.324443817138672
    8. '	continue' → logprob: -9.699443817138672
    9. '
' → logprob: -9.824443817138672
    10. '		' → logprob: -10.574443817138672

Token 530: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005288192071020603
    2. '       ' → logprob: -5.380288124084473
    3. ' continue' → logprob: -7.505288124084473
    4. '		' → logprob: -10.755288124084473
    5. '	       ' → logprob: -10.880288124084473
    6. '               ' → logprob: -10.880288124084473
    7. ',' → logprob: -11.130288124084473
    8. 'continue' → logprob: -11.255288124084473
    9. '   ' → logprob: -11.505288124084473
    10. '
' → logprob: -11.755288124084473

Token 531: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0652320384979248
    2. 'continue' (adapté à ' continue') → logprob: -1.0652320384979248
    3. ' continue' → logprob: -1.1902320384979248
    4. '       ' → logprob: -5.065232276916504
    5. '   ' → logprob: -9.065232276916504
    6. 'result' → logprob: -9.690232276916504
    7. '	continue' → logprob: -10.190232276916504
    8. '               ' → logprob: -11.440232276916504
    9. 'contin' → logprob: -12.315232276916504
    10. ' result' → logprob: -13.190232276916504

Token 532: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.135819760151207e-05
    2. '
' → logprob: -9.62507152557373
    3. '        
' → logprob: -12.75007152557373
    4. '<|end|>' → logprob: -13.50007152557373
    5. '   ' → logprob: -15.12507152557373
    6. '  
' → logprob: -16.375070571899414
    7. ',' → logprob: -16.375070571899414
    8. '           ' → logprob: -16.625070571899414
    9. '	' → logprob: -16.875070571899414
    10. '      ' → logprob: -17.125070571899414

Token 533: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00032843282679095864
    2. '
' → logprob: -8.125328063964844
    3. '        
' → logprob: -11.000328063964844
    4. '<|end|>' → logprob: -11.500328063964844
    5. '   ' → logprob: -13.625328063964844
    6. 'if' → logprob: -14.250328063964844
    7. '  
' → logprob: -14.625328063964844
    8. '	' → logprob: -15.000328063964844
    9. '           ' → logprob: -15.562828063964844
    10. 'result' → logprob: -15.625328063964844

Token 534: ' new' (ID: 620)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3751310408115387
    2. 'counts' → logprob: -1.8751310110092163
    3. ' counts' → logprob: -2.750131130218506
    4. 'cards' → logprob: -3.625131130218506
    5. '   ' → logprob: -3.875131130218506
    6. ' cards' → logprob: -4.500131130218506
    7. 'temp' → logprob: -4.750131130218506
    8. ' if' → logprob: -5.000131130218506
    9. 'if' → logprob: -5.250131130218506
    10. ' new' → logprob: -5.375131130218506

Token 535: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.008004176430404186
    2. 'cards' → logprob: -5.008004188537598
    3. '_hand' → logprob: -6.883004188537598
    4. 'hand' → logprob: -8.508004188537598
    5. '_card' → logprob: -10.508004188537598
    6. 'Cards' → logprob: -11.883004188537598
    7. ' =' → logprob: -12.133004188537598
    8. '=' → logprob: -12.133004188537598
    9. '_list' → logprob: -12.383004188537598
    10. '_count' → logprob: -13.133004188537598

Token 536: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0040785204619169235
    2. ' =' → logprob: -5.504078388214111
    3. '=c' → logprob: -17.879077911376953
    4. '.append' → logprob: -18.504077911376953
    5. '＝' → logprob: -18.879077911376953
    6. '.=' → logprob: -19.879077911376953
    7. '=line' → logprob: -19.879077911376953
    8. '=[]' → logprob: -20.254077911376953
    9. '(cards' → logprob: -20.379077911376953
    10. '=
' → logprob: -20.379077911376953

Token 537: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.0052406336180865765
    2. ' cards' → logprob: -5.255240440368652
    3. '   ' → logprob: -12.005240440368652
    4. '(cards' → logprob: -14.880240440368652
    5. 'card' → logprob: -15.880240440368652
    6. 'list' → logprob: -16.25524139404297
    7. '.cards' → logprob: -17.38024139404297
    8. ' ' → logprob: -17.50524139404297
    9. '  ' → logprob: -17.75524139404297
    10. 'cars' → logprob: -17.75524139404297

Token 538: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011938270181417465
    2. ' +' → logprob: -4.511938095092773
    3. '+[' → logprob: -7.261938095092773
    4. '[:]' → logprob: -8.636938095092773
    5. '.copy' → logprob: -11.636938095092773
    6. '.append' → logprob: -14.511938095092773
    7. '[:' → logprob: -14.511938095092773
    8. '+c' → logprob: -15.011938095092773
    9. '＋' → logprob: -15.136938095092773
    10. '+x' → logprob: -15.386938095092773

Token 539: ' [' (ID: 723)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.12793390452861786
    2. ' [' → logprob: -2.127933979034424
    3. '[' → logprob: -7.127933979034424
    4. '[new' → logprob: -8.627933502197266
    5. '[int' → logprob: -11.377933502197266
    6. '[text' → logprob: -13.752933502197266
    7. '[next' → logprob: -14.002933502197266
    8. '[str' → logprob: -14.252933502197266
    9. '[element' → logprob: -14.252933502197266
    10. '[value' → logprob: -14.377933502197266

Token 540: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.088346359931165e-07
    2. ' x' → logprob: -14.000000953674316
    3. '$x' → logprob: -25.25
    4. '{x' → logprob: -25.375
    5. '	x' → logprob: -25.625
    6. '(x' → logprob: -25.75
    7. '"x' → logprob: -25.75
    8. '%x' → logprob: -26.125
    9. ')x' → logprob: -26.875
    10. ',x' → logprob: -27.125

Token 541: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.5760822892189026
    2. ']' → logprob: -0.8260822892189026
    3. ']
' → logprob: -9.451082229614258
    4. ' ]
' → logprob: -10.826082229614258
    5. '       ' → logprob: -11.076082229614258
    6. ' ]' → logprob: -11.201082229614258
    7. ']

' → logprob: -11.451082229614258
    8. '   ' → logprob: -12.326082229614258
    9. ' ' → logprob: -17.201082229614258
    10. ']

' → logprob: -17.951082229614258

Token 542: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002249933750135824
    2. 'if' → logprob: -9.375225067138672
    3. ' if' → logprob: -9.375225067138672
    4. '   ' → logprob: -10.000225067138672
    5. '        
' → logprob: -12.125225067138672
    6. '<|end|>' → logprob: -12.875225067138672
    7. '           ' → logprob: -14.375225067138672
    8. '
' → logprob: -14.375225067138672
    9. '```' → logprob: -15.750225067138672
    10. '    
' → logprob: -15.750225067138672

Token 543: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.019444430246949196
    2. '   ' → logprob: -4.269444465637207
    3. ' if' → logprob: -5.269444465637207
    4. '       ' → logprob: -9.144444465637207
    5. 'result' → logprob: -11.269444465637207
    6. ' ' → logprob: -14.519444465637207
    7. '  ' → logprob: -15.019444465637207
    8. '	if' → logprob: -15.269444465637207
    9. ' result' → logprob: -16.89444351196289
    10. '```' → logprob: -17.14444351196289

Token 544: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.00861456897109747
    2. ' is' → logprob: -4.758614540100098
    3. '   ' → logprob: -16.633615493774414
    4. '	is' → logprob: -20.133615493774414
    5. ' ' → logprob: -20.258615493774414
    6. 'not' → logprob: -20.383615493774414
    7. '(is' → logprob: -20.383615493774414
    8. 'len' → logprob: -21.008615493774414
    9. '       ' → logprob: -21.633615493774414
    10. '
' → logprob: -22.008615493774414

Token 545: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -9.088346359931165e-07
    2. '_val' → logprob: -14.500000953674316
    3. 'valid' → logprob: -15.750000953674316
    4. '_' → logprob: -16.375
    5. '_v' → logprob: -17.125
    6. '_possible' → logprob: -19.0
    7. 'Valid' → logprob: -19.375
    8. '_invalid' → logprob: -19.625
    9. '_va' → logprob: -19.75
    10. ' _' → logprob: -19.875

Token 546: '_comb' (ID: 105956)
  Prédit: '_comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comb' → logprob: -2.45848218582978e-06
    2. '_com' → logprob: -13.12500286102295
    3. '_' → logprob: -15.75000286102295
    4. '```' → logprob: -16.500001907348633
    5. '_valid' → logprob: -16.750001907348633
    6. '
' → logprob: -16.875001907348633
    7. '\' → logprob: -17.750001907348633
    8. '_combo' → logprob: -18.500001907348633
    9. ' _' → logprob: -18.750001907348633
    10. 'comb' → logprob: -19.250001907348633

Token 547: 'ination' (ID: 3273)
  Prédit: 'ination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ination' → logprob: -0.014381269924342632
    2. 'ation' → logprob: -4.264381408691406
    3. 'bination' → logprob: -9.014381408691406
    4. 'nation' → logprob: -10.014381408691406
    5. 'entation' → logprob: -10.264381408691406
    6. '(' → logprob: -12.639381408691406
    7. 'inition' → logprob: -13.139381408691406
    8. 'iation' → logprob: -13.514381408691406
    9. 'INATION' → logprob: -13.514381408691406
    10. 'ration' → logprob: -13.639381408691406

Token 548: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.250000953674316
    3. ' (' → logprob: -16.75
    4. 'new' → logprob: -18.75
    5. '(
' → logprob: -20.375
    6. ' new' → logprob: -21.125
    7. '(New' → logprob: -21.25
    8. '[new' → logprob: -21.25
    9. ',new' → logprob: -21.375
    10. '(n' → logprob: -21.875

Token 549: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.00424899673089385
    2. '(new' → logprob: -5.629249095916748
    3. 'ation' → logprob: -7.754249095916748
    4. '_items' → logprob: -10.00424861907959
    5. '_nodes' → logprob: -10.87924861907959
    6. '_chars' → logprob: -11.12924861907959
    7. '_words' → logprob: -11.12924861907959
    8. '   ' → logprob: -11.50424861907959
    9. '_letters' → logprob: -11.62924861907959
    10. '(' → logprob: -11.62924861907959

Token 550: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.17020413279533386
    2. '):' → logprob: -2.6702041625976562
    3. ':' → logprob: -2.7952041625976562
    4. ':
' → logprob: -3.6702041625976562
    5. '():
' → logprob: -8.170204162597656
    6. '       ' → logprob: -8.420204162597656
    7. '   ' → logprob: -9.045204162597656
    8. '           ' → logprob: -10.170204162597656
    9. ')' → logprob: -11.420204162597656
    10. ']:
' → logprob: -11.545204162597656

Token 551: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005289645632728934
    2. '       ' → logprob: -7.625528812408447
    3. 'result' → logprob: -10.875529289245605
    4. '	       ' → logprob: -11.875529289245605
    5. '
' → logprob: -12.375529289245605
    6. ' result' → logprob: -12.625529289245605
    7. '```' → logprob: -13.125529289245605
    8. '            
' → logprob: -13.375529289245605
    9. '          ' → logprob: -13.750529289245605
    10. '		' → logprob: -14.625529289245605

Token 552: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.08498916029930115
    2. '       ' → logprob: -3.084989070892334
    3. ' result' → logprob: -3.584989070892334
    4. '           ' → logprob: -4.834989070892334
    5. '   ' → logprob: -10.209989547729492
    6. '               ' → logprob: -10.709989547729492
    7. '	result' → logprob: -13.334989547729492
    8. ',result' → logprob: -13.834989547729492
    9. '
' → logprob: -14.084989547729492
    10. 'results' → logprob: -15.834989547729492

Token 553: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.023248620331287384
    2. '.' → logprob: -3.7732486724853516
    3. '.app' → logprob: -13.648248672485352
    4. '.Append' → logprob: -14.523248672485352
    5. '.ap' → logprob: -14.773248672485352
    6. ' .' → logprob: -14.898248672485352
    7. 'append' → logprob: -15.273248672485352
    8. '.add' → logprob: -15.648248672485352
    9. '.extend' → logprob: -16.52324867248535
    10. '.py' → logprob: -17.64824867248535

Token 554: '(str' (ID: 7946)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.47412756085395813
    2. '(str' → logprob: -0.9741275310516357
    3. '(' → logprob: -10.474127769470215
    4. 'str' → logprob: -11.349127769470215
    5. 'x' → logprob: -11.599127769470215
    6. '('' → logprob: -14.849127769470215
    7. '(chr' → logprob: -14.849127769470215
    8. ' str' → logprob: -15.974127769470215
    9. '(int' → logprob: -16.2241268157959
    10. ' (' → logprob: -16.2241268157959

Token 555: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.3856492842023727e-06
    2. 'x' → logprob: -13.750000953674316
    3. '(' → logprob: -15.250000953674316
    4. '(
' → logprob: -19.125001907348633
    5. ' (' → logprob: -20.625001907348633
    6. ' x' → logprob: -21.000001907348633
    7. '((' → logprob: -21.875001907348633
    8. ')x' → logprob: -21.875001907348633
    9. '	x' → logprob: -22.250001907348633
    10. '   ' → logprob: -22.875001907348633

Token 556: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.018155446276068687
    2. ')' → logprob: -4.018155574798584
    3. '])' → logprob: -12.893155097961426
    4. ')))' → logprob: -13.518155097961426
    5. '))
' → logprob: -14.268155097961426
    6. ' ))' → logprob: -14.768155097961426
    7. '()))' → logprob: -14.893155097961426
    8. ')]' → logprob: -16.143156051635742
    9. '   ' → logprob: -16.643156051635742
    10. '())' → logprob: -17.143156051635742

Token 557: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05191119387745857
    2. '   ' → logprob: -3.0519111156463623
    3. 'if' → logprob: -6.051911354064941
    4. ' print' → logprob: -7.551911354064941
    5. '
' → logprob: -7.926911354064941
    6. '    
' → logprob: -9.676911354064941
    7. ' if' → logprob: -11.801911354064941
    8. '  
' → logprob: -12.051911354064941
    9. '```' → logprob: -13.926911354064941
    10. ' 
' → logprob: -14.426911354064941

Token 558: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005269214976578951
    2. 'if' (adapté à ' if') → logprob: -5.2552690505981445
    3. '
' → logprob: -11.005269050598145
    4. ' print' → logprob: -11.005269050598145
    5. ' if' → logprob: -13.755269050598145
    6. '   ' → logprob: -14.255269050598145
    7. '    
' → logprob: -15.130269050598145
    8. '

' → logprob: -16.75527000427246
    9. '  
' → logprob: -16.75527000427246
    10. ' 
' → logprob: -17.13027000427246

Token 559: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.20142056047916412
    2. 'result' → logprob: -1.701420545578003
    3. ' not' → logprob: -12.076420783996582
    4. ' len' → logprob: -13.576420783996582
    5. 'not' → logprob: -15.826420783996582
    6. 'len' → logprob: -16.076419830322266
    7. '(result' → logprob: -18.576419830322266
    8. ' ' → logprob: -19.201419830322266
    9. '   ' → logprob: -19.576419830322266
    10. '	result' → logprob: -19.576419830322266

Token 560: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08178430795669556
    2. '==' → logprob: -2.581784248352051
    3. ':
' → logprob: -6.956784248352051
    4. '>' → logprob: -7.831784248352051
    5. ' ==' → logprob: -7.831784248352051
    6. '!=' → logprob: -8.08178424835205
    7. '.' → logprob: -8.45678424835205
    8. ')' → logprob: -8.45678424835205
    9. '=' → logprob: -8.70678424835205
    10. '):' → logprob: -10.33178424835205

Token 561: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7027360796928406
    2. 'print' → logprob: -0.7027360796928406
    3. ' print' → logprob: -4.702735900878906
    4. '	print' → logprob: -7.702735900878906
    5. '       ' → logprob: -11.077735900878906
    6. '```' → logprob: -13.077735900878906
    7. '.print' → logprob: -13.702735900878906
    8. '   ' → logprob: -13.827735900878906
    9. '
' → logprob: -15.077735900878906
    10. ':' → logprob: -15.702735900878906

Token 562: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.5048530030981055e-06
    2. ' print' → logprob: -13.500001907348633
    3. '   ' → logprob: -16.750001907348633
    4. '	print' → logprob: -22.125001907348633
    5. '```' → logprob: -22.500001907348633
    6. 'println' → logprob: -23.125001907348633
    7. 'printf' → logprob: -23.250001907348633
    8. '    
' → logprob: -23.750001907348633
    9. 'pr' → logprob: -24.625001907348633
    10. 'import' → logprob: -25.000001907348633

Token 563: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.06200006976723671
    2. '("' → logprob: -2.812000036239624
    3. '(' → logprob: -10.437000274658203
    4. '"' → logprob: -13.437000274658203
    5. '''.' → logprob: -13.437000274658203
    6. '(""' → logprob: -16.812000274658203
    7. '("").' → logprob: -17.812000274658203
    8. '(*' → logprob: -17.937000274658203
    9. '('').' → logprob: -18.187000274658203
    10. ''' → logprob: -18.312000274658203

Token 564: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004226558841764927
    2. '''.' → logprob: -5.5042266845703125
    3. ''' → logprob: -9.629226684570312
    4. ' "".' → logprob: -9.879226684570312
    5. '""' → logprob: -10.504226684570312
    6. ' ''.' → logprob: -13.379226684570312
    7. '",".' → logprob: -13.629226684570312
    8. '''' → logprob: -14.879226684570312
    9. '("' → logprob: -15.379226684570312
    10. '".' → logprob: -15.629226684570312

Token 565: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.005216682329773903
    2. '".' → logprob: -5.505216598510742
    3. '.join' → logprob: -7.005216598510742
    4. 'print' → logprob: -8.755216598510742
    5. ' join' → logprob: -9.880216598510742
    6. ''.' → logprob: -11.005216598510742
    7. '"' → logprob: -13.255216598510742
    8. 'joined' → logprob: -14.255216598510742
    9. '.' → logprob: -14.755216598510742
    10. '''.' → logprob: -14.880216598510742

Token 566: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0001584850688232109
    2. 'result' → logprob: -8.750158309936523
    3. '=result' → logprob: -18.000158309936523
    4. '[result' → logprob: -20.375158309936523
    5. ' result' → logprob: -20.500158309936523
    6. '	result' → logprob: -20.625158309936523
    7. ',result' → logprob: -21.625158309936523
    8. '(' → logprob: -22.000158309936523
    9. '(results' → logprob: -22.625158309936523
    10. '_result' → logprob: -22.625158309936523

Token 567: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03806077316403389
    2. '))' → logprob: -3.2880606651306152
    3. '())' → logprob: -11.663061141967773
    4. ')")' → logprob: -11.913061141967773
    5. ')))' → logprob: -12.913061141967773
    6. '))
' → logprob: -14.788061141967773
    7. '")' → logprob: -15.163061141967773
    8. ')
' → logprob: -15.163061141967773
    9. ')}' → logprob: -15.288061141967773
    10. '})' → logprob: -15.663061141967773

Token 568: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 569: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -8.542423165636137e-05
    2. ' else' → logprob: -9.375085830688477
    3. '   ' → logprob: -15.375085830688477
    4. '```' → logprob: -15.750085830688477
    5. '<|end|>' → logprob: -16.375085830688477
    6. '	else' → logprob: -18.375085830688477
    7. '[]' → logprob: -18.750085830688477
    8. '_else' → logprob: -18.875085830688477
    9. 'continue' → logprob: -19.625085830688477
    10. 'elif' → logprob: -19.625085830688477

Token 570: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022789858281612396
    2. ':
' → logprob: -4.02278995513916
    3. '   ' → logprob: -6.02278995513916
    4. '       ' → logprob: -6.14778995513916
    5. '{' → logprob: -11.14778995513916
    6. 'print' → logprob: -11.27278995513916
    7. '():
' → logprob: -12.02278995513916
    8. '    ' → logprob: -12.64778995513916
    9. '           ' → logprob: -12.64778995513916
    10. ' :' → logprob: -12.64778995513916

Token 571: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12725113332271576
    2. '   ' → logprob: -2.127251148223877
    3. ' print' → logprob: -8.127250671386719
    4. '	print' → logprob: -10.627250671386719
    5. ' ' → logprob: -13.252250671386719
    6. '  ' → logprob: -14.252250671386719
    7. '    ' → logprob: -14.877250671386719
    8. '       ' → logprob: -15.627250671386719
    9. '   ' → logprob: -15.752250671386719
    10. 'printf' → logprob: -16.50225067138672

Token 572: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0031089074909687042
    2. '0' → logprob: -6.878108978271484
    3. 'NONE' → logprob: -7.003108978271484
    4. ' print' → logprob: -7.378108978271484
    5. 'None' → logprob: -8.003108978271484
    6. 'println' → logprob: -9.878108978271484
    7. '-' → logprob: -10.378108978271484
    8. 'NOP' → logprob: -11.128108978271484
    9. 'N' → logprob: -11.378108978271484
    10. 'Print' → logprob: -11.503108978271484

Token 573: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23885495960712433
    2. '0' → logprob: -1.863855004310608
    3. '()' → logprob: -3.6138548851013184
    4. '(-' → logprob: -3.9888548851013184
    5. '("' → logprob: -4.613854885101318
    6. '()-' → logprob: -7.863854885101318
    7. '-' → logprob: -8.363855361938477
    8. '(None' → logprob: -8.613855361938477
    9. '(NO' → logprob: -8.613855361938477
    10. 'None' → logprob: -8.738855361938477

Token 574: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0026580586563795805
    2. '"' → logprob: -6.377657890319824
    3. 'None' → logprob: -8.252657890319824
    4. '"N' → logprob: -8.502657890319824
    5. 'NONE' → logprob: -8.752657890319824
    6. '-' → logprob: -9.377657890319824
    7. ''' → logprob: -9.502657890319824
    8. 'N' → logprob: -9.752657890319824
    9. '"No' → logprob: -10.002657890319824
    10. 'NA' → logprob: -10.877657890319824

Token 575: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. '")' → logprob: -13.125004768371582
    3. '')' → logprob: -14.250004768371582
    4. '<|end|>' → logprob: -14.375004768371582
    5. '`)' → logprob: -14.875004768371582
    6. ' )' → logprob: -15.625004768371582
    7. '))' → logprob: -15.625004768371582
    8. '```' → logprob: -15.875004768371582
    9. '())' → logprob: -16.000003814697266
    10. '}' → logprob: -16.125003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 573
Tokens correctement prédits (1ère position, stricte): 262
Tokens correctement prédits (1ère position, avec adaptation): 292
Tokens correctement prédits (top 10): 479
Précision stricte (1ère position): 45.72%
Précision adaptée (1ère position): 50.96%
Précision (top 10): 83.60%
================================================================================
