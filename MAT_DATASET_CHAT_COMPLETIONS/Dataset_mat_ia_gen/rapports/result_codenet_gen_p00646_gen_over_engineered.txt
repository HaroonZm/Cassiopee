================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
from typing import Iterator, Tuple, Dict

class InputHandler:
    def __init__(self, source: Iterator[str]):
        self.source = source
    
    def __iter__(self) -> Iterator[int]:
        for line in self.source:
            value = int(line.strip())
            if value == 0:
                break
            yield value

class OutputHandler:
    def __init__(self):
        self.results = []
    
    def add_result(self, result: int):
        self.results.append(result)
    
    def flush(self):
        for res in self.results:
            print(res)

class PrimeSieve:
    def __init__(self, limit: int):
        self.limit = limit
        self._sieve = self._build_sieve()
    
    def _build_sieve(self) -> list:
        sieve = [True] * (self.limit + 1)
        sieve[0] = False
        sieve[1] = False
        for i in range(2, int(self.limit ** 0.5) + 1):
            if sieve[i]:
                for j in range(i*i, self.limit + 1, i):
                    sieve[j] = False
        return sieve
    
    def get_primes(self) -> Iterator[int]:
        return (i for i, prime in enumerate(self._sieve) if prime)

class FactorizationEngine:
    def __init__(self, prime_limit: int = 10**6):
        self.prime_sieve = PrimeSieve(prime_limit)
        self.primes = list(self.prime_sieve.get_primes())
    
    def factorize(self, n: int) -> Dict[int, int]:
        factors = {}
        remaining = n
        for p in self.primes:
            if p * p > remaining:
                break
            count = 0
            while remaining % p == 0:
                remaining //= p
                count += 1
            if count > 0:
                factors[p] = count
        if remaining > 1:
            factors[remaining] = 1
        return factors

class PairCounter:
    def __init__(self, factorization_engine: FactorizationEngine):
        self.factorization_engine = factorization_engine
    
    def count_lcm_pairs(self, L: int) -> int:
        # Number of pairs (a,b) with a <= b and lcm(a,b) = L equals
        # product over primes of (2*exponent + 1) + 1 divided by 2
        factorization = self.factorization_engine.factorize(L)
        product = 1
        for exp in factorization.values():
            product *= (2 * exp + 1)
        return (product + 1) // 2

class Solver:
    def __init__(self, input_source: Iterator[str]):
        self.input_handler = InputHandler(input_source)
        self.output_handler = OutputHandler()
        self.factorization_engine = FactorizationEngine()
        self.pair_counter = PairCounter(self.factorization_engine)
    
    def run(self):
        for L in self.input_handler:
            result = self.pair_counter.count_lcm_pairs(L)
            self.output_handler.add_result(result)
        self.output_handler.flush()

if __name__ == "__main__":
    solver = Solver(sys.stdin)
    solver.run()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3441300094127655
    2. '.' → logprob: -1.594130039215088
    3. '<|end|>' → logprob: -2.969130039215088
    4. '\' → logprob: -4.469130039215088
    5. 'import' → logprob: -5.094130039215088
    6. 'newline' → logprob: -5.094130039215088
    7. '' → logprob: -5.844130039215088
    8. '<|end|>' → logprob: -5.969130039215088
    9. '\r' → logprob: -6.094130039215088
    10. '
' → logprob: -6.344130039215088

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0015031944494694471
    2. 'os' → logprob: -6.501502990722656
    3. '"os' → logprob: -14.626502990722656
    4. ' re' → logprob: -16.126502990722656
    5. ' math' → logprob: -16.251502990722656
    6. '_os' → logprob: -16.251502990722656
    7. '	os' → logprob: -16.626502990722656
    8. ' json' → logprob: -17.126502990722656
    9. ' io' → logprob: -18.251502990722656
    10. ' argparse' → logprob: -19.001502990722656

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10138683021068573
    2. '\' → logprob: -3.601386785507202
    3. '\n' → logprob: -3.976386785507202
    4. 'import' → logprob: -4.351387023925781
    5. '<|end|>' → logprob: -4.601387023925781
    6. '```' → logprob: -4.726387023925781
    7. '
' → logprob: -4.976387023925781
    8. '

' → logprob: -5.476387023925781
    9. '<|end|>' → logprob: -6.601387023925781
    10. '' → logprob: -6.601387023925781

Token 6: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8601821660995483
    2. '\n' → logprob: -1.2351821660995483
    3. '
' → logprob: -2.235182285308838
    4. '.' → logprob: -2.735182285308838
    5. '\' → logprob: -3.360182285308838
    6. '```' → logprob: -3.360182285308838
    7. '

' → logprob: -3.860182285308838
    8. '<|end|>' → logprob: -5.360182285308838
    9. '' → logprob: -5.485182285308838
    10. ',' → logprob: -5.485182285308838

Token 7: ' typing' (ID: 34152)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.2601761519908905
    2. ' os' → logprob: -1.635176181793213
    3. 'collections' → logprob: -3.885176181793213
    4. 'os' → logprob: -5.385176181793213
    5. ' datetime' → logprob: -5.760176181793213
    6. ' itertools' → logprob: -6.385176181793213
    7. ' typing' → logprob: -6.885176181793213
    8. ' numpy' → logprob: -7.510176181793213
    9. ' statistics' → logprob: -7.760176181793213
    10. ' math' → logprob: -7.760176181793213

Token 8: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.07951907813549042
    2. 'import' → logprob: -2.579519033432007
    3. '.' → logprob: -8.079519271850586
    4. '_import' → logprob: -9.829519271850586
    5. '<|end|>' → logprob: -9.829519271850586
    6. ' ' → logprob: -9.954519271850586
    7. '```' → logprob: -10.079519271850586
    8. '[' → logprob: -10.579519271850586
    9. '	import' → logprob: -10.954519271850586
    10. '_' → logprob: -11.204519271850586

Token 9: ' Iterator' (ID: 41994)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.13604772090911865
    2. ' Any' → logprob: -2.136047840118408
    3. ' Union' → logprob: -6.136047840118408
    4. ' ' → logprob: -6.261047840118408
    5. ' Optional' → logprob: -6.386047840118408
    6. 'Any' → logprob: -6.386047840118408
    7. 'List' → logprob: -6.761047840118408
    8. ' Tuple' → logprob: -8.63604736328125
    9. ' Iterable' → logprob: -9.13604736328125
    10. ' Generator' → logprob: -9.38604736328125

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.113577127456665
    2. '

' → logprob: -1.238577127456665
    3. '.' → logprob: -2.238577127456665
    4. '
' → logprob: -2.488577127456665
    5. '\n' → logprob: -2.488577127456665
    6. '```' → logprob: -3.488577127456665
    7. '\' → logprob: -3.738577127456665
    8. 'import' → logprob: -3.863577127456665
    9. ':' → logprob: -4.363576889038086
    10. 'def' → logprob: -5.613576889038086

Token 11: ' Tuple' (ID: 50841)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.43390658497810364
    2. 'List' → logprob: -1.9339065551757812
    3. 'Iterable' → logprob: -2.0589065551757812
    4. ' Iterable' → logprob: -2.9339065551757812
    5. ' Generator' → logprob: -4.933906555175781
    6. ' Optional' → logprob: -5.433906555175781
    7. 'Generator' → logprob: -5.933906555175781
    8. 'Any' → logprob: -5.933906555175781
    9. 'Optional' → logprob: -6.058906555175781
    10. ' Union' → logprob: -6.308906555175781

Token 12: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0663254261016846
    2. '```' → logprob: -1.1913254261016846
    3. '

' → logprob: -1.6913254261016846
    4. '
' → logprob: -2.3163254261016846
    5. 'import' → logprob: -3.5663254261016846
    6. ',' → logprob: -4.4413251876831055
    7. '\' → logprob: -4.6913251876831055
    8. 'def' → logprob: -4.6913251876831055
    9. '``' → logprob: -5.5663251876831055
    10. 'class' → logprob: -6.8163251876831055

Token 13: ' Dict' (ID: 55179)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.7745351791381836
    2. 'List' → logprob: -1.0245351791381836
    3. 'Iterable' → logprob: -2.6495351791381836
    4. ' Optional' → logprob: -3.6495351791381836
    5. 'Optional' → logprob: -3.8995351791381836
    6. ' Union' → logprob: -4.274535179138184
    7. ' Iterable' → logprob: -4.399535179138184
    8. 'Union' → logprob: -4.399535179138184
    9. 'Any' → logprob: -4.524535179138184
    10. ' Any' → logprob: -5.774535179138184

Token 14: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.07179379463195801
    2. '
' → logprob: -3.321793794631958
    3. '```' → logprob: -4.071793556213379
    4. ',' → logprob: -5.196793556213379
    5. '\n' → logprob: -5.571793556213379
    6. 'import' → logprob: -6.071793556213379
    7. ',

' → logprob: -6.821793556213379
    8. 'class' → logprob: -7.196793556213379
    9. 'def' → logprob: -7.321793556213379
    10. '


' → logprob: -7.571793556213379

Token 15: 'class' (ID: 1444)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8997196555137634
    2. 'class' → logprob: -1.3997197151184082
    3. 'def' → logprob: -1.5247197151184082
    4. '

' → logprob: -3.524719715118408
    5. 'import' → logprob: -3.524719715118408
    6. ',' → logprob: -3.774719715118408
    7. '
' → logprob: -4.899719715118408
    8. '\' → logprob: -5.149719715118408
    9. '``' → logprob: -5.274719715118408
    10. ',
' → logprob: -5.399719715118408

Token 16: ' Input' (ID: 10090)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014021401293575764
    2. ' My' → logprob: -5.389021396636963
    3. ' Vector' → logprob: -5.764021396636963
    4. ' Parser' → logprob: -6.139021396636963
    5. ' Geometry' → logprob: -7.014021396636963
    6. ' Factor' → logprob: -7.514021396636963
    7. ' Calculator' → logprob: -7.889021396636963
    8. ' Data' → logprob: -7.889021396636963
    9. ' Math' → logprob: -8.014021873474121
    10. ' Space' → logprob: -8.264021873474121

Token 17: 'Handler' (ID: 4139)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.6090408563613892
    2. 'Stream' → logprob: -0.9840408563613892
    3. 'Handler' → logprob: -3.6090407371520996
    4. 'Data' → logprob: -3.6090407371520996
    5. 'Processor' → logprob: -4.8590407371521
    6. 'Parser' → logprob: -4.9840407371521
    7. ':' → logprob: -5.2340407371521
    8. 'Buffer' → logprob: -5.6090407371521
    9. 'Layer' → logprob: -6.6090407371521
    10. 'Generator' → logprob: -6.8590407371521

Token 18: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023456037044525146
    2. '(' → logprob: -3.77345609664917
    3. '():' → logprob: -9.023455619812012
    4. ':**' → logprob: -10.523455619812012
    5. '(:' → logprob: -10.773455619812012
    6. ' :' → logprob: -11.898455619812012
    7. '```' → logprob: -11.898455619812012
    8. '):' → logprob: -11.898455619812012
    9. '<|end|>' → logprob: -12.023455619812012
    10. ',' → logprob: -12.773455619812012

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04491777718067169
    2. ' def' → logprob: -4.294917583465576
    3. 'def' → logprob: -4.419917583465576
    4. '    
' → logprob: -4.919917583465576
    5. '```' → logprob: -5.044917583465576
    6. ':' → logprob: -6.044917583465576
    7. '<|end|>' → logprob: -6.919917583465576
    8. '	def' → logprob: -8.044918060302734
    9. '<|end|>' → logprob: -8.919918060302734
    10. ' indentation' → logprob: -9.169918060302734

Token 20: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.02987278625369072
    2. 'def' (adapté à ' def') → logprob: -3.5298728942871094
    3. '   ' → logprob: -9.02987289428711
    4. '	def' → logprob: -14.15487289428711
    5. '    
' → logprob: -14.40487289428711
    6. ' ' → logprob: -14.52987289428711
    7. '    ' → logprob: -15.02987289428711
    8. ' pass' → logprob: -15.40487289428711
    9. '```' → logprob: -16.40487289428711
    10. ' 
' → logprob: -17.02987289428711

Token 21: ' __' (ID: 2516)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.16937041282653809
    2. 'itialize' → logprob: -2.294370412826538
    3. 't' → logprob: -3.669370412826538
    4. 'init' → logprob: -4.794370651245117
    5. 'nit' → logprob: -4.919370651245117
    6. 'ialize' → logprob: -5.544370651245117
    7. ' __' → logprob: -6.044370651245117
    8. 'put' → logprob: -6.169370651245117
    9. ' nit' → logprob: -6.919370651245117
    10. ' def' → logprob: -7.044370651245117

Token 22: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'ini' → logprob: -16.125
    3. '_init' → logprob: -19.375
    4. 'in' → logprob: -19.625
    5. ' init' → logprob: -20.25
    6. 'innit' → logprob: -20.25
    7. 'inite' → logprob: -21.0
    8. 'int' → logprob: -21.125
    9. 'inti' → logprob: -21.25
    10. 'initi' → logprob: -22.25

Token 23: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.03723990544676781
    2. '__' → logprob: -3.4122397899627686
    3. '(' → logprob: -6.037240028381348
    4. '__(
' → logprob: -8.037240028381348
    5. '_' → logprob: -8.412240028381348
    6. '_(' → logprob: -8.662240028381348
    7. '__((' → logprob: -8.662240028381348
    8. '(self' → logprob: -9.287240028381348
    9. '__('' → logprob: -9.287240028381348
    10. '__(*' → logprob: -10.287240028381348

Token 24: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.433829159708694e-05
    2. ' self' → logprob: -9.62507438659668
    3. ')' → logprob: -11.75007438659668
    4. '	self' → logprob: -16.00007438659668
    5. ' ' → logprob: -17.00007438659668
    6. '(self' → logprob: -17.12507438659668
    7. '_self' → logprob: -17.87507438659668
    8. ' )' → logprob: -18.00007438659668
    9. '   ' → logprob: -18.75007438659668
    10. 's' → logprob: -18.87507438659668

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004266677424311638
    2. 'self' → logprob: -6.254266738891602
    3. ' ,' → logprob: -6.629266738891602
    4. ')' → logprob: -7.254266738891602
    5. '):' → logprob: -8.504266738891602
    6. ',self' → logprob: -10.379266738891602
    7. ' )' → logprob: -11.254266738891602
    8. ' self' → logprob: -11.629266738891602
    9. ',input' → logprob: -11.629266738891602
    10. '_,' → logprob: -11.879266738891602

Token 26: ' source' (ID: 4256)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.411173015832901
    2. 'self' → logprob: -1.1611729860305786
    3. ' input' → logprob: -4.536172866821289
    4. 'input' → logprob: -5.911172866821289
    5. ' sys' → logprob: -6.036172866821289
    6. ' lines' → logprob: -6.161172866821289
    7. ')' → logprob: -6.536172866821289
    8. ' data' → logprob: -6.786172866821289
    9. ' source' → logprob: -7.036172866821289
    10. ' file' → logprob: -7.286172866821289

Token 27: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3881009519100189
    2. '):' → logprob: -1.1381009817123413
    3. ')' → logprob: -7.513101100921631
    4. ' :' → logprob: -8.013100624084473
    5. ' ):' → logprob: -8.388100624084473
    6. '):
' → logprob: -10.138100624084473
    7. ':str' → logprob: -11.013100624084473
    8. '=' → logprob: -11.138100624084473
    9. '=None' → logprob: -11.388100624084473
    10. ':)' → logprob: -11.888100624084473

Token 28: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.3642912209033966
    2. ' Iterator' → logprob: -1.4892911911010742
    3. 'str' → logprob: -2.864291191101074
    4. ' str' → logprob: -4.739291191101074
    5. 'sys' → logprob: -5.239291191101074
    6. 'Iterable' → logprob: -5.239291191101074
    7. ')' → logprob: -6.364291191101074
    8. ' sys' → logprob: -7.614291191101074
    9. 'Callable' → logprob: -7.739291191101074
    10. ' Iterable' → logprob: -8.739291191101074

Token 29: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.002533332910388708
    2. '[' → logprob: -6.002533435821533
    3. '[int' → logprob: -10.877532958984375
    4. 'str' → logprob: -11.127532958984375
    5. ')' → logprob: -11.627532958984375
    6. '):' → logprob: -12.752532958984375
    7. '```' → logprob: -13.127532958984375
    8. '

' → logprob: -13.502532958984375
    9. '[String' → logprob: -13.627532958984375
    10. '[List' → logprob: -13.877532958984375

Token 30: ']):
' (ID: 51989)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3631875813007355
    2. ']):' → logprob: -1.238187551498413
    3. ']' → logprob: -4.363187789916992
    4. ']):
' → logprob: -6.738187789916992
    5. ')' → logprob: -8.238187789916992
    6. ']:' → logprob: -8.613187789916992
    7. '):' → logprob: -9.488187789916992
    8. '],' → logprob: -9.863187789916992
    9. '[str' → logprob: -9.988187789916992
    10. '[' → logprob: -10.363187789916992

Token 31: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028867334127426147
    2. ':' → logprob: -3.653867244720459
    3. '):' → logprob: -6.653867244720459
    4. ')' → logprob: -7.153867244720459
    5. '   ' → logprob: -8.403867721557617
    6. '      ' → logprob: -10.028867721557617
    7. 'self' → logprob: -10.153867721557617
    8. '    ' → logprob: -10.528867721557617
    9. ' :' → logprob: -10.528867721557617
    10. '<|end|>' → logprob: -10.528867721557617

Token 32: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.18269063532352448
    2. '       ' → logprob: -1.9326906204223633
    3. ' self' → logprob: -3.8076906204223633
    4. '   ' → logprob: -11.682690620422363
    5. '           ' → logprob: -12.807690620422363
    6. '	self' → logprob: -13.682690620422363
    7. ' ' → logprob: -13.807690620422363
    8. '      ' → logprob: -14.307690620422363
    9. '        ' → logprob: -14.432690620422363
    10. ' ' → logprob: -15.182690620422363

Token 33: '.source' (ID: 27872)
  Prédit: '.source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.source' → logprob: -0.0299987755715847
    2. '.' → logprob: -3.529998779296875
    3. ' .' → logprob: -9.154998779296875
    4. 'source' → logprob: -9.654998779296875
    5. '.next' → logprob: -11.154998779296875
    6. '._' → logprob: -11.404998779296875
    7. '.target' → logprob: -11.529998779296875
    8. '.token' → logprob: -11.529998779296875
    9. '.input' → logprob: -11.779998779296875
    10. ' source' → logprob: -12.279998779296875

Token 34: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16071665287017822
    2. ' =' → logprob: -1.9107166528701782
    3. ':' → logprob: -8.660717010498047
    4. '.' → logprob: -9.285717010498047
    5. '   ' → logprob: -9.285717010498047
    6. ' ' → logprob: -9.785717010498047
    7. '_next' → logprob: -11.160717010498047
    8. '_iter' → logprob: -11.660717010498047
    9. '.next' → logprob: -11.660717010498047
    10. '_' → logprob: -11.785717010498047

Token 35: ' source' (ID: 4256)
  Prédit: 'source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'source' → logprob: -0.31327974796295166
    2. ' source' → logprob: -1.3132797479629517
    3. '	source' → logprob: -11.68828010559082
    4. '(source' → logprob: -12.43828010559082
    5. 'iter' → logprob: -12.68828010559082
    6. ' iter' → logprob: -13.56328010559082
    7. '_source' → logprob: -14.68828010559082
    8. '[source' → logprob: -15.18828010559082
    9. 'Source' → logprob: -15.81328010559082
    10. 'self' → logprob: -16.06328010559082

Token 36: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34674811363220215
    2. '<|end|>' → logprob: -1.4717481136322021
    3. 'def' → logprob: -3.971748113632202
    4. '    
' → logprob: -3.971748113632202
    5. '   ' → logprob: -4.971748352050781
    6. '  
' → logprob: -5.596748352050781
    7. '<|end|>' → logprob: -5.596748352050781
    8. ' 
' → logprob: -5.721748352050781
    9. 'newline' → logprob: -6.096748352050781
    10. '\n' → logprob: -6.471748352050781

Token 37: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5811715126037598
    2. '   ' → logprob: -0.8311715126037598
    3. '       ' → logprob: -5.58117151260376
    4. ' def' → logprob: -6.58117151260376
    5. 'self' → logprob: -9.956171035766602
    6. '    
' → logprob: -11.956171035766602
    7. '
' → logprob: -12.956171035766602
    8. '	def' → logprob: -12.956171035766602
    9. '        
' → logprob: -13.706171035766602
    10. ' self' → logprob: -14.206171035766602

Token 38: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0005573204252868891
    2. ' def' → logprob: -7.6255574226379395
    3. '   ' → logprob: -10.250556945800781
    4. 'self' → logprob: -10.375556945800781
    5. 'next' → logprob: -13.375556945800781
    6. 'line' → logprob: -14.875556945800781
    7. 'current' → logprob: -15.875556945800781
    8. '       ' → logprob: -15.875556945800781
    9. 'Next' → logprob: -16.12555694580078
    10. ' ' → logprob: -16.37555694580078

Token 39: ' __' (ID: 2516)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.5600831508636475
    2. 'next' → logprob: -1.9350831508636475
    3. ' __' → logprob: -2.1850831508636475
    4. '__' → logprob: -2.4350831508636475
    5. ' readline' → logprob: -3.1850831508636475
    6. '_next' → logprob: -3.9350831508636475
    7. 'read' → logprob: -4.060083389282227
    8. ' read' → logprob: -5.685083389282227
    9. ' get' → logprob: -6.435083389282227
    10. 'get' → logprob: -8.185083389282227

Token 40: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.07889165729284286
    2. 'next' → logprob: -2.5788917541503906
    3. 'init' → logprob: -13.45389175415039
    4. 'ait' → logprob: -15.20389175415039
    5. ' next' → logprob: -16.70389175415039
    6. 'an' → logprob: -16.70389175415039
    7. 'call' → logprob: -18.57889175415039
    8. 'getitem' → logprob: -19.20389175415039
    9. 'it' → logprob: -19.45389175415039
    10. '_iter' → logprob: -19.95389175415039

Token 41: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.006720347795635462
    2. '__' → logprob: -5.006720542907715
    3. '__(
' → logprob: -12.381720542907715
    4. '__('' → logprob: -15.006720542907715
    5. '__("' → logprob: -16.0067195892334
    6. '__

' → logprob: -16.1317195892334
    7. '__((' → logprob: -16.2567195892334
    8. '___' → logprob: -16.6317195892334
    9. '__(*' → logprob: -16.7567195892334
    10. '__:' → logprob: -17.0067195892334

Token 42: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.214019307051785e-05
    2. ')' → logprob: -10.375032424926758
    3. '):
' → logprob: -15.125032424926758
    4. '   ' → logprob: -16.000032424926758
    5. '(self' → logprob: -16.125032424926758
    6. '       ' → logprob: -16.375032424926758
    7. 's' → logprob: -16.375032424926758
    8. ' self' → logprob: -16.500032424926758
    9. '):' → logprob: -16.875032424926758
    10. '_self' → logprob: -18.125032424926758

Token 43: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005612696520984173
    2. ')' → logprob: -5.880612850189209
    3. '):
' → logprob: -5.880612850189209
    4. ':' → logprob: -12.88061237335205
    5. '):
' → logprob: -13.13061237335205
    6. '   ' → logprob: -13.25561237335205
    7. ' ):' → logprob: -13.50561237335205
    8. 'self' → logprob: -13.75561237335205
    9. '):

' → logprob: -14.25561237335205
    10. ',' → logprob: -14.25561237335205

Token 44: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006799076218158007
    2. '):' → logprob: -8.000679969787598
    3. '():' → logprob: -8.500679969787598
    4. '   ' → logprob: -10.500679969787598
    5. '(self' → logprob: -10.750679969787598
    6. '(' → logprob: -10.875679969787598
    7. ')' → logprob: -11.125679969787598
    8. ':
' → logprob: -11.375679969787598
    9. '       ' → logprob: -11.625679969787598
    10. ' :' → logprob: -11.625679969787598

Token 45: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.2910204827785492
    2. 'str' → logprob: -2.166020393371582
    3. ' Iterator' → logprob: -2.541020393371582
    4. ''' → logprob: -3.791020393371582
    5. '"' → logprob: -4.041020393371582
    6. 'Tuple' → logprob: -4.916020393371582
    7. ' str' → logprob: -5.666020393371582
    8. ''s' → logprob: -5.791020393371582
    9. ' '' → logprob: -6.416020393371582
    10. 'Input' → logprob: -7.291020393371582

Token 46: '[int' (ID: 40124)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.08078022301197052
    2. '[' → logprob: -2.580780267715454
    3. ':' → logprob: -6.705780029296875
    4. '[int' → logprob: -7.455780029296875
    5. '[T' → logprob: -9.705780029296875
    6. 'str' → logprob: -11.580780029296875
    7. '[[' → logprob: -12.830780029296875
    8. ':str' → logprob: -12.955780029296875
    9. '[
' → logprob: -13.705780029296875
    10. '[String' → logprob: -13.830780029296875

Token 47: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16118846833705902
    2. ']:' → logprob: -1.9111884832382202
    3. ':' → logprob: -7.41118860244751
    4. ']' → logprob: -9.286188125610352
    5. '>:' → logprob: -9.286188125610352
    6. '):
' → logprob: -9.411188125610352
    7. ')' → logprob: -10.536188125610352
    8. ']):' → logprob: -11.161188125610352
    9. '>' → logprob: -11.286188125610352
    10. '）：' → logprob: -12.286188125610352

Token 48: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.20603168499656e-05
    2. '   ' → logprob: -11.000061988830566
    3. ':' → logprob: -11.500061988830566
    4. ' for' → logprob: -11.500061988830566
    5. 'for' → logprob: -12.375061988830566
    6. '      ' → logprob: -12.625061988830566
    7. '    ' → logprob: -12.625061988830566
    8. '        ' → logprob: -13.125061988830566
    9. '     ' → logprob: -13.625061988830566
    10. 'yield' → logprob: -13.625061988830566

Token 49: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5278455018997192
    2. 'for' (adapté à ' for') → logprob: -1.5278455018997192
    3. ' for' → logprob: -1.7778455018997192
    4. 'yield' → logprob: -4.27784538269043
    5. 'return' → logprob: -5.15284538269043
    6. ' yield' → logprob: -6.27784538269043
    7. ' return' → logprob: -6.90284538269043
    8. 'while' → logprob: -7.40284538269043
    9. '   ' → logprob: -7.52784538269043
    10. ' while' → logprob: -8.77784538269043

Token 50: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.020569443702697754
    2. 'line' → logprob: -3.895569324493408
    3. '	line' → logprob: -11.270569801330566
    4. '_line' → logprob: -11.895569801330566
    5. ' token' → logprob: -12.895569801330566
    6. 'token' → logprob: -13.020569801330566
    7. '(line' → logprob: -14.020569801330566
    8. ' lin' → logprob: -15.145569801330566
    9. 'Line' → logprob: -15.395569801330566
    10. 's' → logprob: -15.520569801330566

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0002989968634210527
    2. 'in' → logprob: -8.125299453735352
    3. ' ' → logprob: -13.875299453735352
    4. 'line' → logprob: -14.625299453735352
    5. 's' → logprob: -14.750299453735352
    6. 'import' → logprob: -15.250299453735352
    7. '_in' → logprob: -15.875299453735352
    8. '    ' → logprob: -16.12529945373535
    9. '	in' → logprob: -16.25029945373535
    10. '_' → logprob: -16.37529945373535

Token 52: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31326204538345337
    2. ' self' → logprob: -1.3132619857788086
    3. '	self' → logprob: -15.938261985778809
    4. '   ' → logprob: -16.438262939453125
    5. ' ' → logprob: -16.563262939453125
    6. '(self' → logprob: -16.688262939453125
    7. 's' → logprob: -17.063262939453125
    8. '       ' → logprob: -17.688262939453125
    9. ' ' → logprob: -18.188262939453125
    10. '    ' → logprob: -18.438262939453125

Token 53: '.source' (ID: 27872)
  Prédit: '.source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.source' → logprob: -0.03375519812107086
    2. '.' → logprob: -3.408755302429199
    3. 'source' → logprob: -9.4087553024292
    4. ' .' → logprob: -11.1587553024292
    5. '.user' → logprob: -12.0337553024292
    6. '.s' → logprob: -12.5337553024292
    7. '[source' → logprob: -14.4087553024292
    8. '	source' → logprob: -14.7837553024292
    9. ' source' → logprob: -15.1587553024292
    10. '.sources' → logprob: -15.4087553024292

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002200571121647954
    2. '           ' → logprob: -7.377200603485107
    3. '.' → logprob: -8.00220012664795
    4. '.strip' → logprob: -8.12720012664795
    5. ':
' → logprob: -8.12720012664795
    6. '       ' → logprob: -8.50220012664795
    7. ' :' → logprob: -9.00220012664795
    8. '.split' → logprob: -9.12720012664795
    9. '):' → logprob: -9.50220012664795
    10. '():' → logprob: -10.00220012664795

Token 55: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004075789824128151
    2. 'yield' → logprob: -5.87907600402832
    3. ' yield' → logprob: -6.75407600402832
    4. '            
' → logprob: -10.00407600402832
    5. '       ' → logprob: -11.25407600402832
    6. '               ' → logprob: -12.00407600402832
    7. '	yield' → logprob: -12.25407600402832
    8. '          ' → logprob: -12.37907600402832
    9. '.strip' → logprob: -12.62907600402832
    10. ' ' → logprob: -12.87907600402832

Token 56: ' value' (ID: 1432)
  Prédit: ' yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.5221743583679199
    2. '           ' → logprob: -1.39717435836792
    3. 'yield' → logprob: -1.89717435836792
    4. '               ' → logprob: -4.77217435836792
    5. '	yield' → logprob: -7.39717435836792
    6. ' for' → logprob: -8.522174835205078
    7. ' if' → logprob: -9.897174835205078
    8. ' stripped' → logprob: -10.397174835205078
    9. '   ' → logprob: -10.647174835205078
    10. '       ' → logprob: -10.897174835205078

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08895799517631531
    2. '=' → logprob: -2.4639580249786377
    3. '=int' → logprob: -11.713957786560059
    4. '           ' → logprob: -12.463957786560059
    5. 's' → logprob: -13.463957786560059
    6. '=line' → logprob: -13.713957786560059
    7. '   ' → logprob: -14.463957786560059
    8. ' ' → logprob: -14.713957786560059
    9. '            ' → logprob: -14.963957786560059
    10. '       ' → logprob: -14.963957786560059

Token 58: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06268765032291412
    2. ' int' → logprob: -2.937687635421753
    3. 'line' → logprob: -5.062687873840332
    4. ' line' → logprob: -6.562687873840332
    5. '           ' → logprob: -10.437687873840332
    6. '   ' → logprob: -13.812687873840332
    7. '=int' → logprob: -14.437687873840332
    8. '(int' → logprob: -14.437687873840332
    9. ':int' → logprob: -14.687687873840332
    10. '               ' → logprob: -14.812687873840332

Token 59: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.006732303183525801
    2. '(' → logprob: -5.00673246383667
    3. '(value' → logprob: -11.131731986999512
    4. 'line' → logprob: -14.256731986999512
    5. '(
' → logprob: -14.631731986999512
    6. '=line' → logprob: -15.131731986999512
    7. ' line' → logprob: -15.506731986999512
    8. '(

' → logprob: -15.881731986999512
    9. ' (' → logprob: -15.881731986999512
    10. '((' → logprob: -16.131732940673828

Token 60: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.004228339530527592
    2. ')' → logprob: -5.504228115081787
    3. '.rstrip' → logprob: -9.379228591918945
    4. '.' → logprob: -10.879228591918945
    5. '().' → logprob: -11.129228591918945
    6. '.split' → logprob: -11.629228591918945
    7. ')
' → logprob: -11.879228591918945
    8. 'strip' → logprob: -12.254228591918945
    9. ' .' → logprob: -12.754228591918945
    10. '.trim' → logprob: -13.129228591918945

Token 61: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0005846070707775652
    2. '()' → logprob: -7.500584602355957
    3. '())
' → logprob: -10.750584602355957
    4. ')' → logprob: -12.500584602355957
    5. ' ())' → logprob: -12.500584602355957
    6. '())

' → logprob: -13.750584602355957
    7. '()))' → logprob: -14.250584602355957
    8. '(' → logprob: -15.625584602355957
    9. '()]' → logprob: -15.875584602355957
    10. '())
' → logprob: -15.875584602355957

Token 62: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1578660011291504
    2. 'yield' → logprob: -2.0328660011291504
    3. ' yield' → logprob: -4.28286600112915
    4. '            
' → logprob: -7.90786600112915
    5. '
' → logprob: -8.157865524291992
    6. '```' → logprob: -8.157865524291992
    7. '	yield' → logprob: -8.657865524291992
    8. '               ' → logprob: -9.782865524291992
    9. '\n' → logprob: -10.407865524291992
    10. 'Yield' → logprob: -11.032865524291992

Token 63: ' if' (ID: 538)
  Prédit: ' yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.5975944399833679
    2. 'yield' → logprob: -0.8475944399833679
    3. '           ' → logprob: -3.8475944995880127
    4. '	yield' → logprob: -9.347594261169434
    5. 'Yield' → logprob: -13.222594261169434
    6. '```' → logprob: -13.722594261169434
    7. '       ' → logprob: -15.097594261169434
    8. '
' → logprob: -15.597594261169434
    9. '            
' → logprob: -15.597594261169434
    10. '            ' → logprob: -15.597594261169434

Token 64: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.05701172724366188
    2. 'value' → logprob: -2.932011842727661
    3. ' not' → logprob: -6.182011604309082
    4. 'not' → logprob: -10.307011604309082
    5. ' isinstance' → logprob: -11.557011604309082
    6. ' ' → logprob: -12.307011604309082
    7. ' self' → logprob: -12.807011604309082
    8. '(value' → logprob: -12.932011604309082
    9. '"value' → logprob: -13.057011604309082
    10. '	value' → logprob: -13.432011604309082

Token 65: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.452892005443573
    2. '>' → logprob: -1.2028920650482178
    3. ' >=' → logprob: -3.5778920650482178
    4. ' <=' → logprob: -4.577891826629639
    5. ' <' → logprob: -4.827891826629639
    6. '>=' → logprob: -4.952891826629639
    7. ' ==' → logprob: -5.827891826629639
    8. '<=' → logprob: -6.202891826629639
    9. '<' → logprob: -6.577891826629639
    10. '<|end|>' → logprob: -6.702891826629639

Token 66: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41698572039604187
    2. '0' → logprob: -1.1669857501983643
    3. '-' → logprob: -4.041985511779785
    4. ' -' → logprob: -4.416985511779785
    5. '  ' → logprob: -11.916985511779785
    6. '   ' → logprob: -12.291985511779785
    7. '42' → logprob: -12.604485511779785
    8. '1' → logprob: -12.854485511779785
    9. ' EOF' → logprob: -13.104485511779785
    10. '    ' → logprob: -13.166985511779785

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2906520366668701
    2. '-' → logprob: -1.4156520366668701
    3. ' ' → logprob: -4.790652275085449
    4. ' -' → logprob: -6.790652275085449
    5. '42' → logprob: -11.91565227508545
    6. '   ' → logprob: -12.04065227508545
    7. '1' → logprob: -12.66565227508545
    8. '  ' → logprob: -13.04065227508545
    9. '999' → logprob: -14.16565227508545
    10. 'EOF' → logprob: -14.29065227508545

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018175341188907623
    2. ':
' → logprob: -4.01817512512207
    3. ' :' → logprob: -11.01817512512207
    4. ':return' → logprob: -12.14317512512207
    5. ':
' → logprob: -13.26817512512207
    6. '           ' → logprob: -14.14317512512207
    7. ':

' → logprob: -14.76817512512207
    8. ' :
' → logprob: -14.76817512512207
    9. '               ' → logprob: -15.51817512512207
    10. '):' → logprob: -15.89317512512207

Token 69: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004815545107703656
    2. ':' → logprob: -8.000481605529785
    3. '           ' → logprob: -9.375481605529785
    4. '                
' → logprob: -11.125481605529785
    5. ':
' → logprob: -11.625481605529785
    6. '                   ' → logprob: -12.000481605529785
    7. '              ' → logprob: -12.125481605529785
    8. ' break' → logprob: -12.125481605529785
    9. ':return' → logprob: -12.250481605529785
    10. '	           ' → logprob: -12.875481605529785

Token 70: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7196792960166931
    2. 'break' (adapté à ' break') → logprob: -0.9696792960166931
    3. 'return' → logprob: -2.719679355621338
    4. ' break' → logprob: -3.219679355621338
    5. '               ' → logprob: -3.969679355621338
    6. ' return' → logprob: -4.844679355621338
    7. '                ' → logprob: -7.594679355621338
    8. '                    ' → logprob: -8.09467887878418
    9. '   ' → logprob: -8.71967887878418
    10. '	break' → logprob: -8.84467887878418

Token 71: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0574091374874115
    2. ' yield' → logprob: -3.4324090480804443
    3. 'yield' → logprob: -3.9324090480804443
    4. '            
' → logprob: -5.807409286499023
    5. '
' → logprob: -7.307409286499023
    6. '	yield' → logprob: -9.432409286499023
    7. 'Yield' → logprob: -10.682409286499023
    8. ' yields' → logprob: -10.932409286499023
    9. ' 
' → logprob: -10.932409286499023
    10. '```' → logprob: -11.182409286499023

Token 72: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029037320986390114
    2. ' yield' → logprob: -4.1540374755859375
    3. 'yield' → logprob: -4.4040374755859375
    4. '            
' → logprob: -7.5290374755859375
    5. 'Yield' → logprob: -10.154037475585938
    6. '```' → logprob: -10.404037475585938
    7. '	yield' → logprob: -10.404037475585938
    8. ' yields' → logprob: -11.404037475585938
    9. '       ' → logprob: -11.654037475585938
    10. ' Yield' → logprob: -11.904037475585938

Token 73: ' yield' (ID: 14376)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6945788264274597
    2. 'yield' (adapté à ' yield') → logprob: -0.9445788264274597
    3. ' yield' → logprob: -2.1945788860321045
    4. '	yield' → logprob: -8.319579124450684
    5. '       ' → logprob: -8.694579124450684
    6. 'Yield' → logprob: -10.444579124450684
    7. '```' → logprob: -11.319579124450684
    8. '            
' → logprob: -11.694579124450684
    9. '
' → logprob: -13.694579124450684
    10. ' yields' → logprob: -14.069579124450684

Token 74: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.029754308983683586
    2. 'value' → logprob: -3.529754400253296
    3. '(value' → logprob: -13.404754638671875
    4. ' ' → logprob: -13.654754638671875
    5. ' ' → logprob: -14.529754638671875
    6. ')value' → logprob: -15.279754638671875
    7. '"value' → logprob: -16.279754638671875
    8. '	value' → logprob: -16.404754638671875
    9. '<|end|>' → logprob: -16.779754638671875
    10. ''value' → logprob: -17.154754638671875

Token 75: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' Output' (ID: 18315)
  Prédit: ' Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Output' → logprob: -0.9290515780448914
    2. ' Data' → logprob: -1.6790516376495361
    3. ' Solution' → logprob: -2.179051637649536
    4. 'Output' → logprob: -2.679051637649536
    5. ' Math' → logprob: -3.304051637649536
    6. ' Calculator' → logprob: -3.304051637649536
    7. ' Processor' → logprob: -3.554051637649536
    8. 'Data' → logprob: -3.929051637649536
    9. ' Solver' → logprob: -4.054051399230957
    10. ' Prime' → logprob: -4.304051399230957

Token 78: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.000743995129596442
    2. 'Writer' → logprob: -7.375743865966797
    3. 'Formatter' → logprob: -10.000743865966797
    4. 'Processor' → logprob: -10.750743865966797
    5. '_Handler' → logprob: -11.000743865966797
    6. 'Manager' → logprob: -11.500743865966797
    7. 'ter' → logprob: -11.875743865966797
    8. 'andler' → logprob: -12.000743865966797
    9. ':' → logprob: -12.750743865966797
    10. 'Builder' → logprob: -13.500743865966797

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.786196975852363e-05
    2. ' :' → logprob: -11.250038146972656
    3. ':
' → logprob: -12.000038146972656
    4. '):' → logprob: -12.250038146972656
    5. ':def' → logprob: -12.375038146972656
    6. '(' → logprob: -12.625038146972656
    7. '<|end|>' → logprob: -13.375038146972656
    8. '():' → logprob: -13.750038146972656
    9. ':

' → logprob: -14.250038146972656
    10. ':**' → logprob: -14.750038146972656

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004535980988293886
    2. ' def' → logprob: -5.504536151885986
    3. 'def' → logprob: -7.754536151885986
    4. 'class' → logprob: -11.379535675048828
    5. '    ' → logprob: -12.004535675048828
    6. ':' → logprob: -13.004535675048828
    7. '    
' → logprob: -13.754535675048828
    8. ' class' → logprob: -13.754535675048828
    9. '  ' → logprob: -14.129535675048828
    10. ')' → logprob: -14.254535675048828

Token 81: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5797259211540222
    2. ' def' → logprob: -0.8297259211540222
    3. '   ' → logprob: -5.579725742340088
    4. 'class' → logprob: -13.329726219177246
    5. ' ' → logprob: -13.704726219177246
    6. '	def' → logprob: -14.079726219177246
    7. '```' → logprob: -14.204726219177246
    8. '    ' → logprob: -14.454726219177246
    9. ':def' → logprob: -14.829726219177246
    10. '  ' → logprob: -14.829726219177246

Token 82: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4583127498626709
    2. ' __' → logprob: -1.708312749862671
    3. ' nit' → logprob: -2.458312749862671
    4. 'n' → logprob: -2.708312749862671
    5. ' n' → logprob: -4.33331298828125
    6. 'nit' → logprob: -4.95831298828125
    7. ' def' → logprob: -5.33331298828125
    8. ' init' → logprob: -5.33331298828125
    9. ' _' → logprob: -6.08331298828125
    10. '_' → logprob: -7.70831298828125

Token 83: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.003429481526836753
    2. 'iter' → logprob: -5.753429412841797
    3. 'call' → logprob: -8.878429412841797
    4. 'ini' → logprob: -10.753429412841797
    5. ' init' → logprob: -10.753429412841797
    6. '   ' → logprob: -11.003429412841797
    7. 'in' → logprob: -11.378429412841797
    8. 'i' → logprob: -11.503429412841797
    9. '```' → logprob: -12.003429412841797
    10. 'it' → logprob: -12.503429412841797

Token 84: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07973077893257141
    2. ' (' → logprob: -2.579730749130249
    3. ' ' → logprob: -7.454730987548828
    4. '<|end|>' → logprob: -9.329730987548828
    5. '_' → logprob: -9.579730987548828
    6. '(space' → logprob: -10.704730987548828
    7. '(self' → logprob: -10.954730987548828
    8. ',' → logprob: -11.454730987548828
    9. ' (
' → logprob: -11.454730987548828
    10. '__(' → logprob: -11.829730987548828

Token 85: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.356644868850708
    2. ')' → logprob: -1.231644868850708
    3. '):' → logprob: -5.106644630432129
    4. '   ' → logprob: -7.356644630432129
    5. ' self' → logprob: -7.606644630432129
    6. '):
' → logprob: -7.856644630432129
    7. ' ' → logprob: -8.231644630432129
    8. '	self' → logprob: -9.606644630432129
    9. '  ' → logprob: -10.231644630432129
    10. 'source' → logprob: -10.231644630432129

Token 86: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15699920058250427
    2. '):' → logprob: -2.281999111175537
    3. ' ):' → logprob: -3.781999111175537
    4. ' ,' → logprob: -4.406999111175537
    5. ')' → logprob: -5.156999111175537
    6. ' )' → logprob: -6.406999111175537
    7. ' ' → logprob: -8.406999588012695
    8. 'source' → logprob: -8.531999588012695
    9. '):
' → logprob: -9.156999588012695
    10. '   ' → logprob: -9.781999588012695

Token 87: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6734157204627991
    2. '       ' → logprob: -0.7984157204627991
    3. '    ' → logprob: -3.7984156608581543
    4. '    
' → logprob: -4.923415660858154
    5. ' pass' → logprob: -5.923415660858154
    6. ' ' → logprob: -6.298415660858154
    7. ')' → logprob: -6.673415660858154
    8. 'def' → logprob: -6.923415660858154
    9. 'n' → logprob: -7.423415660858154
    10. ' def' → logprob: -7.798415660858154

Token 88: ' self' (ID: 1051)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.5633383989334106
    2. ' self' → logprob: -1.4383383989334106
    3. 'self' (adapté à ' self') → logprob: -2.563338279724121
    4. '       ' → logprob: -2.938338279724121
    5. 'pass' → logprob: -2.938338279724121
    6. '   ' → logprob: -5.438338279724121
    7. ' ' → logprob: -6.188338279724121
    8. '    ' → logprob: -6.813338279724121
    9. '        ' → logprob: -7.188338279724121
    10. 'def' → logprob: -7.813338279724121

Token 89: '.results' (ID: 53203)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '._' → logprob: -0.9626302719116211
    2. '.' → logprob: -1.087630271911621
    3. ' .' → logprob: -1.712630271911621
    4. '.output' → logprob: -2.962630271911621
    5. '.data' → logprob: -4.212630271911621
    6. '.buffer' → logprob: -4.837630271911621
    7. '.items' → logprob: -6.212630271911621
    8. '.s' → logprob: -6.337630271911621
    9. '_output' → logprob: -6.337630271911621
    10. '.write' → logprob: -6.462630271911621

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026603322476148605
    2. '=' → logprob: -3.6516032218933105
    3. ' ' → logprob: -8.651603698730469
    4. '=[]' → logprob: -9.276603698730469
    5. '_' → logprob: -11.401603698730469
    6. '.append' → logprob: -11.901603698730469
    7. '.' → logprob: -12.276603698730469
    8. '  ' → logprob: -13.026603698730469
    9. '[:]' → logprob: -13.026603698730469
    10. '[]' → logprob: -13.276603698730469

Token 91: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.12696139514446259
    2. ' []' → logprob: -2.1269614696502686
    3. '[]
' → logprob: -11.001961708068848
    4. '[' → logprob: -11.626961708068848
    5. ' ' → logprob: -12.876961708068848
    6. '[]}' → logprob: -12.876961708068848
    7. ' []
' → logprob: -14.126961708068848
    8. '[]

' → logprob: -14.376961708068848
    9. '[]"' → logprob: -14.876961708068848
    10. '{}' → logprob: -15.001961708068848

Token 92: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5890437960624695
    2. ' 
' → logprob: -1.9640438556671143
    3. '    
' → logprob: -1.9640438556671143
    4. '   ' → logprob: -2.0890438556671143
    5. '<|end|>' → logprob: -3.9640438556671143
    6. ' ' → logprob: -5.214043617248535
    7. '  
' → logprob: -5.339043617248535
    8. ' def' → logprob: -5.589043617248535
    9. '   
' → logprob: -5.839043617248535
    10. 'def' → logprob: -6.589043617248535

Token 93: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13365191221237183
    2. ' def' → logprob: -2.1336519718170166
    3. '   ' → logprob: -5.0086517333984375
    4. '	def' → logprob: -11.133651733398438
    5. ' ' → logprob: -12.508651733398438
    6. '
' → logprob: -13.508651733398438
    7. 'de' → logprob: -13.758651733398438
    8. 'd' → logprob: -15.133651733398438
    9. '  ' → logprob: -16.508651733398438
    10. 'Def' → logprob: -16.758651733398438

Token 94: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001234428636962548
    2. ' def' → logprob: -9.000123023986816
    3. '   ' → logprob: -16.875123977661133
    4. 'de' → logprob: -19.875123977661133
    5. 'd' → logprob: -20.000123977661133
    6. '	def' → logprob: -20.250123977661133
    7. ' ' → logprob: -21.375123977661133
    8. 'Def' → logprob: -21.875123977661133
    9. '```' → logprob: -22.000123977661133
    10. '
' → logprob: -22.750123977661133

Token 95: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.04001079127192497
    2. ' append' → logprob: -3.290010690689087
    3. ' write' → logprob: -6.415010929107666
    4. ' def' → logprob: -8.415010452270508
    5. '.append' → logprob: -10.665010452270508
    6. 'append' → logprob: -10.665010452270508
    7. 'add' → logprob: -11.415010452270508
    8. '.add' → logprob: -11.790010452270508
    9. ' push' → logprob: -12.040010452270508
    10. ' process' → logprob: -12.040010452270508

Token 96: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008648915681988001
    2. ' (' → logprob: -7.5008649826049805
    3. '_result' → logprob: -9.00086498260498
    4. '('' → logprob: -10.37586498260498
    5. '(
' → logprob: -10.50086498260498
    6. '(self' → logprob: -10.50086498260498
    7. '<|end|>' → logprob: -10.50086498260498
    8. '(value' → logprob: -11.12586498260498
    9. '_value' → logprob: -11.87586498260498
    10. '("' → logprob: -12.25086498260498

Token 97: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00040362097206525505
    2. ' (' → logprob: -8.00040340423584
    3. '(self' → logprob: -10.12540340423584
    4. '(
' → logprob: -11.25040340423584
    5. '('' → logprob: -11.75040340423584
    6. '<|end|>' → logprob: -12.87540340423584
    7. '("("' → logprob: -13.00040340423584
    8. '("' → logprob: -14.37540340423584
    9. '(

' → logprob: -14.50040340423584
    10. '("""' → logprob: -15.62540340423584

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018870217725634575
    2. ' ,' → logprob: -4.3938703536987305
    3. ')' → logprob: -5.3938703536987305
    4. '(' → logprob: -6.7688703536987305
    5. '[' → logprob: -8.14387035369873
    6. ',value' → logprob: -9.51887035369873
    7. ' )' → logprob: -9.51887035369873
    8. '<|end|>' → logprob: -10.01887035369873
    9. ',[' → logprob: -10.51887035369873
    10. ' ' → logprob: -10.64387035369873

Token 99: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.14070990681648254
    2. ' value' → logprob: -2.76570987701416
    3. 'result' → logprob: -3.14070987701416
    4. 'value' → logprob: -4.51570987701416
    5. ' number' → logprob: -5.14070987701416
    6. ' )' → logprob: -5.76570987701416
    7. ')' → logprob: -6.51570987701416
    8. ' n' → logprob: -6.89070987701416
    9. 'number' → logprob: -7.26570987701416
    10. ' val' → logprob: -7.51570987701416

Token 100: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14194226264953613
    2. ')' → logprob: -2.766942262649536
    3. ':' → logprob: -2.891942262649536
    4. '(' → logprob: -4.391942024230957
    5. '):
' → logprob: -7.266942024230957
    6. ' ):' → logprob: -7.391942024230957
    7. ',' → logprob: -9.516942024230957
    8. ' )' → logprob: -9.891942024230957
    9. ' ' → logprob: -10.141942024230957
    10. '   ' → logprob: -10.266942024230957

Token 101: ' int' (ID: 677)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1734939813613892
    2. ' )' → logprob: -1.1734939813613892
    3. ' int' → logprob: -1.9234939813613892
    4. ' str' → logprob: -2.1734938621520996
    5. ' ' → logprob: -2.9234938621520996
    6. 'int' → logprob: -3.5484938621520996
    7. 'str' → logprob: -3.7984938621520996
    8. ' '' → logprob: -5.0484938621521
    9. ' "' → logprob: -5.9234938621521
    10. '"' → logprob: -6.1734938621521

Token 102: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011804685927927494
    2. ')' → logprob: -4.761804580688477
    3. '):
' → logprob: -5.761804580688477
    4. ':' → logprob: -10.886804580688477
    5. '):
' → logprob: -11.386804580688477
    6. ' ):' → logprob: -12.511804580688477
    7. '   ' → logprob: -12.636804580688477
    8. ')->' → logprob: -13.886804580688477
    9. ' ' → logprob: -14.386804580688477
    10. '       ' → logprob: -14.761804580688477

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00045557913836091757
    2. ' self' → logprob: -8.000455856323242
    3. 'self' → logprob: -9.250455856323242
    4. '   ' → logprob: -11.750455856323242
    5. '      ' → logprob: -13.125455856323242
    6. ')' → logprob: -13.250455856323242
    7. ' ' → logprob: -13.250455856323242
    8. '        
' → logprob: -13.375455856323242
    9. '```' → logprob: -13.375455856323242
    10. ',' → logprob: -13.750455856323242

Token 104: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.15503039956092834
    2. 'self' (adapté à ' self') → logprob: -2.0300304889678955
    3. '       ' → logprob: -4.405030250549316
    4. ' ' → logprob: -10.030030250549316
    5. '	self' → logprob: -12.405030250549316
    6. '        ' → logprob: -12.530030250549316
    7. '```' → logprob: -12.655030250549316
    8. '   ' → logprob: -13.155030250549316
    9. ' ' → logprob: -13.280030250549316
    10. '(self' → logprob: -13.655030250549316

Token 105: '.results' (ID: 53203)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.47471070289611816
    2. '.results' → logprob: -0.9747107028961182
    3. ' .' → logprob: -7.474710464477539
    4. 'results' → logprob: -10.224710464477539
    5. '.result' → logprob: -12.349710464477539
    6. ').' → logprob: -12.599710464477539
    7. ' results' → logprob: -12.849710464477539
    8. '._' → logprob: -12.974710464477539
    9. '.outputs' → logprob: -13.349710464477539
    10. '`.' → logprob: -13.474710464477539

Token 106: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0024816039949655533
    2. '.' → logprob: -6.002481460571289
    3. '.extend' → logprob: -12.377481460571289
    4. '.app' → logprob: -14.377481460571289
    5. ' .' → logprob: -14.502481460571289
    6. '.ap' → logprob: -15.377481460571289
    7. '.push' → logprob: -16.00248146057129
    8. '.add' → logprob: -16.37748146057129
    9. 'append' → logprob: -16.75248146057129
    10. '.Append' → logprob: -16.87748146057129

Token 107: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.2014196664094925
    2. '(' → logprob: -1.701419711112976
    3. '(value' → logprob: -13.201419830322266
    4. '(results' → logprob: -13.701419830322266
    5. ' (' → logprob: -14.076419830322266
    6. '((' → logprob: -14.201419830322266
    7. '(
' → logprob: -14.326419830322266
    8. '(resultado' → logprob: -14.576419830322266
    9. '(

' → logprob: -15.701419830322266
    10. '(f' → logprob: -15.826419830322266

Token 108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003837213444057852
    2. ')
' → logprob: -7.8753838539123535
    3. ' )' → logprob: -13.375383377075195
    4. '   ' → logprob: -13.875383377075195
    5. ')

' → logprob: -14.500383377075195
    6. '
' → logprob: -15.875383377075195
    7. ' ' → logprob: -16.750383377075195
    8. '       ' → logprob: -16.750383377075195
    9. '`)' → logprob: -16.750383377075195
    10. ')`' → logprob: -16.750383377075195

Token 109: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.947637677192688
    2. '    
' → logprob: -1.072637677192688
    3. '
' → logprob: -1.322637677192688
    4. '        
' → logprob: -5.697637557983398
    5. '<|end|>' → logprob: -8.822637557983398
    6. ' 
' → logprob: -9.072637557983398
    7. '  
' → logprob: -9.822637557983398
    8. 'def' → logprob: -10.322637557983398
    9. '   
' → logprob: -10.447637557983398
    10. '

' → logprob: -10.822637557983398

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020376505330204964
    2. 'def' → logprob: -4.020376682281494
    3. '    
' → logprob: -6.395376682281494
    4. '
' → logprob: -7.645376682281494
    5. ' def' → logprob: -9.895376205444336
    6. '        
' → logprob: -11.145376205444336
    7. ' 
' → logprob: -12.270376205444336
    8. '

' → logprob: -12.895376205444336
    9. '	def' → logprob: -13.645376205444336
    10. '       ' → logprob: -13.770376205444336

Token 111: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0019441033946350217
    2. ' def' → logprob: -6.251944065093994
    3. '   ' → logprob: -11.126944541931152
    4. '	def' → logprob: -15.001944541931152
    5. '
' → logprob: -15.126944541931152
    6. ' ' → logprob: -16.126943588256836
    7. '    
' → logprob: -17.626943588256836
    8. '       ' → logprob: -18.751943588256836
    9. '        
' → logprob: -18.751943588256836
    10. ':def' → logprob: -18.876943588256836

Token 112: ' flush' (ID: 37790)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.04082388058304787
    2. ' print' → logprob: -4.790823936462402
    3. ' flush' → logprob: -4.915823936462402
    4. ' write' → logprob: -5.040823936462402
    5. ' __' → logprob: -5.165823936462402
    6. ' get' → logprob: -5.415823936462402
    7. ' display' → logprob: -5.540823936462402
    8. ' output' → logprob: -6.040823936462402
    9. 'def' → logprob: -6.790823936462402
    10. ' render' → logprob: -9.165823936462402

Token 113: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.010863528586924076
    2. '(' → logprob: -4.635863304138184
    3. '():' → logprob: -7.135863304138184
    4. '()' → logprob: -8.135863304138184
    5. '(s' → logprob: -12.260863304138184
    6. '(
' → logprob: -12.635863304138184
    7. ' (' → logprob: -12.760863304138184
    8. '(print' → logprob: -13.760863304138184
    9. '(output' → logprob: -14.385863304138184
    10. '   ' → logprob: -14.510863304138184

Token 114: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005114799831062555
    2. ')' → logprob: -5.880115032196045
    3. '):
' → logprob: -6.255115032196045
    4. ' ):' → logprob: -8.755114555358887
    5. 'self' → logprob: -9.005114555358887
    6. '(self' → logprob: -10.755114555358887
    7. '():' → logprob: -11.005114555358887
    8. ':' → logprob: -11.005114555358887
    9. ',' → logprob: -11.130114555358887
    10. '       ' → logprob: -12.130114555358887

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009741920977830887
    2. ' for' → logprob: -4.75974178314209
    3. '   ' → logprob: -7.63474178314209
    4. 'for' → logprob: -7.63474178314209
    5. '()' → logprob: -9.00974178314209
    6. '(' → logprob: -12.13474178314209
    7. '    ' → logprob: -12.25974178314209
    8. '```' → logprob: -12.38474178314209
    9. ' ' → logprob: -12.75974178314209
    10. ':' → logprob: -13.13474178314209

Token 116: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10024064034223557
    2. 'for' (adapté à ' for') → logprob: -2.350240707397461
    3. '       ' → logprob: -10.350240707397461
    4. ' print' → logprob: -14.100240707397461
    5. '	for' → logprob: -14.850240707397461
    6. '   ' → logprob: -14.975240707397461
    7. 'print' → logprob: -15.100240707397461
    8. ' if' → logprob: -15.350240707397461
    9. 'if' → logprob: -16.72524070739746
    10. ' while' → logprob: -17.22524070739746

Token 117: ' res' (ID: 694)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.12885360419750214
    2. 'result' → logprob: -2.1288535594940186
    3. ' res' → logprob: -6.503853797912598
    4. 'res' → logprob: -7.878853797912598
    5. ' r' → logprob: -10.753853797912598
    6. ' line' → logprob: -11.128853797912598
    7. 'r' → logprob: -12.003853797912598
    8. '   ' → logprob: -13.378853797912598
    9. 'line' → logprob: -13.503853797912598
    10. ' output' → logprob: -14.253853797912598

Token 118: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011338166892528534
    2. 'ult' → logprob: -4.511338233947754
    3. ' ult' → logprob: -8.886338233947754
    4. ' ' → logprob: -9.886338233947754
    5. 'ul' → logprob: -10.511338233947754
    6. '   ' → logprob: -11.011338233947754
    7. 'u' → logprob: -11.011338233947754
    8. 'ut' → logprob: -11.886338233947754
    9. 't' → logprob: -12.136338233947754
    10. '```' → logprob: -12.261338233947754

Token 119: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20141898095607758
    2. ' self' → logprob: -1.7014189958572388
    3. '   ' → logprob: -12.45141887664795
    4. '	self' → logprob: -14.32641887664795
    5. ' ' → logprob: -14.95141887664795
    6. '(self' → logprob: -15.32641887664795
    7. '       ' → logprob: -15.32641887664795
    8. '
' → logprob: -15.95141887664795
    9. '    ' → logprob: -16.326419830322266
    10. '[self' → logprob: -16.826419830322266

Token 120: '.results' (ID: 53203)
  Prédit: '.results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -0.00048358101048506796
    2. ' .' → logprob: -8.375483512878418
    3. '.' → logprob: -8.625483512878418
    4. 'results' → logprob: -9.875483512878418
    5. 's' → logprob: -11.625483512878418
    6. '.
' → logprob: -13.000483512878418
    7. '.outputs' → logprob: -13.125483512878418
    8. 'ults' → logprob: -13.625483512878418
    9. '
' → logprob: -13.750483512878418
    10. '.s' → logprob: -13.875483512878418

Token 121: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48573118448257446
    2. ':
' → logprob: -0.9857311844825745
    3. 'print' → logprob: -5.11073112487793
    4. '           ' → logprob: -5.48573112487793
    5. '       ' → logprob: -7.23573112487793
    6. ' print' → logprob: -8.23573112487793
    7. ',' → logprob: -8.73573112487793
    8. '):
' → logprob: -9.61073112487793
    9. '.print' → logprob: -10.48573112487793
    10. '   ' → logprob: -10.73573112487793

Token 122: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4832868278026581
    2. 'print' → logprob: -0.9832868576049805
    3. ' print' → logprob: -4.7332868576049805
    4. '
' → logprob: -8.48328685760498
    5. '       ' → logprob: -9.60828685760498
    6. '```' → logprob: -9.98328685760498
    7. '.print' → logprob: -11.48328685760498
    8. '            
' → logprob: -11.73328685760498
    9. '\n' → logprob: -12.23328685760498
    10. '        
' → logprob: -13.10828685760498

Token 123: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.12722846865653992
    2. ' print' → logprob: -2.1272284984588623
    3. '           ' → logprob: -8.127228736877441
    4. '```' → logprob: -13.252228736877441
    5. '       ' → logprob: -13.502228736877441
    6. '
' → logprob: -14.252228736877441
    7. '	print' → logprob: -14.752228736877441
    8. '   ' → logprob: -14.877228736877441
    9. '               ' → logprob: -15.377228736877441
    10. 'pr' → logprob: -17.127227783203125

Token 124: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.01131011825054884
    2. '(' → logprob: -4.51131010055542
    3. '(f' → logprob: -8.261310577392578
    4. 'res' → logprob: -13.011310577392578
    5. '(
' → logprob: -14.386310577392578
    6. '()' → logprob: -14.886310577392578
    7. '(str' → logprob: -15.261310577392578
    8. '('' → logprob: -16.011310577392578
    9. '(re' → logprob: -16.136310577392578
    10. ' (' → logprob: -16.261310577392578

Token 125: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.584239938296378e-06
    2. ')
' → logprob: -11.875007629394531
    3. ' )' → logprob: -14.750007629394531
    4. '()' → logprob: -16.25000762939453
    5. ')`' → logprob: -16.62500762939453
    6. '))' → logprob: -17.12500762939453
    7. '())' → logprob: -17.75000762939453
    8. ')

' → logprob: -18.12500762939453
    9. '`)' → logprob: -18.37500762939453
    10. '')' → logprob: -18.50000762939453

Token 126: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.11461666971445084
    2. '<|end|>' → logprob: -2.739616632461548
    3. 'def' → logprob: -3.489616632461548
    4. '
' → logprob: -4.614616870880127
    5. '#' → logprob: -6.489616870880127
    6. '```' → logprob: -7.989616870880127
    7. '    
' → logprob: -8.239616394042969
    8. 'd' → logprob: -8.614616394042969
    9. '   ' → logprob: -8.739616394042969
    10. '  
' → logprob: -9.489616394042969

Token 127: ' Prime' (ID: 20134)
  Prédit: 'Prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Prime' → logprob: -1.4497841596603394
    2. 'Solution' → logprob: -1.6997841596603394
    3. 'Math' → logprob: -2.199784278869629
    4. 'Solver' → logprob: -2.199784278869629
    5. 'Calculator' → logprob: -2.949784278869629
    6. 'Factor' → logprob: -2.949784278869629
    7. 'Processor' → logprob: -3.199784278869629
    8. 'Problem' → logprob: -3.324784278869629
    9. ' Calculator' → logprob: -4.074784278869629
    10. ' Solver' → logprob: -4.074784278869629

Token 128: 'S' (ID: 50)
  Prédit: 'Calculator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -0.6573797464370728
    2. 'Checker' → logprob: -1.2823797464370728
    3. 'S' → logprob: -2.407379627227783
    4. 'Generator' → logprob: -3.407379627227783
    5. 'Helper' → logprob: -3.407379627227783
    6. 'Handler' → logprob: -4.032379627227783
    7. 'Finder' → logprob: -4.282379627227783
    8. 'Utils' → logprob: -5.157379627227783
    9. 'Factor' → logprob: -5.532379627227783
    10. 'Solver' → logprob: -6.532379627227783

Token 129: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.002634515054523945
    2. 'earch' → logprob: -6.502634525299072
    3. 'olver' → logprob: -7.502634525299072
    4. 'egment' → logprob: -9.252634048461914
    5. 'canner' → logprob: -9.377634048461914
    6. 'ervice' → logprob: -9.377634048461914
    7. 'ieves' → logprob: -9.752634048461914
    8. 'Generator' → logprob: -10.002634048461914
    9. 'e' → logprob: -10.127634048461914
    10. 'ieving' → logprob: -10.627634048461914

Token 130: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002856497303582728
    2. ':
' → logprob: -8.875286102294922
    3. ' :' → logprob: -9.125286102294922
    4. '(' → logprob: -11.125286102294922
    5. '():' → logprob: -11.125286102294922
    6. '):' → logprob: -13.500286102294922
    7. '(object' → logprob: -13.625286102294922
    8. ':

' → logprob: -13.875286102294922
    9. '<|end|>' → logprob: -13.875286102294922
    10. ':**' → logprob: -14.125286102294922

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00871597696095705
    2. ' def' → logprob: -5.008716106414795
    3. 'def' → logprob: -6.258716106414795
    4. ':' → logprob: -9.508715629577637
    5. '	def' → logprob: -12.883715629577637
    6. '    
' → logprob: -13.008715629577637
    7. '(' → logprob: -13.508715629577637
    8. ':
' → logprob: -13.758715629577637
    9. '   ' → logprob: -13.758715629577637
    10. ',' → logprob: -14.883715629577637

Token 132: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.012552157044410706
    2. 'def' (adapté à ' def') → logprob: -4.637552261352539
    3. '   ' → logprob: -5.887552261352539
    4. ' ' → logprob: -11.637552261352539
    5. '    ' → logprob: -13.012552261352539
    6. '	def' → logprob: -13.012552261352539
    7. '  ' → logprob: -13.387552261352539
    8. ':' → logprob: -13.387552261352539
    9. ' __' → logprob: -13.887552261352539
    10. '```' → logprob: -15.012552261352539

Token 133: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.004499192815274
    2. ' def' → logprob: -6.0044989585876465
    3. ' ' → logprob: -6.8794989585876465
    4. '_init' → logprob: -7.8794989585876465
    5. '__' → logprob: -8.129499435424805
    6. ' init' → logprob: -8.629499435424805
    7. 'init' → logprob: -9.254499435424805
    8. 'def' → logprob: -10.629499435424805
    9. ' ___' → logprob: -12.504499435424805
    10. ' ```' → logprob: -12.629499435424805

Token 134: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.11432227492332458
    2. 'nit' → logprob: -2.2393221855163574
    3. 'it' → logprob: -6.864322185516357
    4. 'n' → logprob: -8.864322662353516
    5. '```' → logprob: -9.364322662353516
    6. '
' → logprob: -10.114322662353516
    7. 'new' → logprob: -10.239322662353516
    8. ' nit' → logprob: -10.489322662353516
    9. 'int' → logprob: -10.489322662353516
    10. ' init' → logprob: -10.989322662353516

Token 135: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.06839259713888168
    2. ' (' → logprob: -3.193392515182495
    3. '(' → logprob: -4.693392753601074
    4. '(self' → logprob: -4.943392753601074
    5. '__' → logprob: -5.193392753601074
    6. '_(' → logprob: -6.318392753601074
    7. '__(
' → logprob: -7.193392753601074
    8. '_' → logprob: -8.318392753601074
    9. '__((' → logprob: -8.318392753601074
    10. '<|end|>' → logprob: -9.568392753601074

Token 136: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.026336994022130966
    2. ' self' → logprob: -3.651336908340454
    3. ',' → logprob: -10.526336669921875
    4. '<|end|>' → logprob: -12.776336669921875
    5. ' ' → logprob: -12.901336669921875
    6. '(self' → logprob: -13.526336669921875
    7. '	self' → logprob: -13.901336669921875
    8. ',self' → logprob: -14.276336669921875
    9. '
' → logprob: -14.651336669921875
    10. 's' → logprob: -15.401336669921875

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037383107701316476
    2. 'self' → logprob: -8.000373840332031
    3. ' ,' → logprob: -10.375373840332031
    4. '(self' → logprob: -12.750373840332031
    5. ' self' → logprob: -13.250373840332031
    6. ',self' → logprob: -13.750373840332031
    7. ' (' → logprob: -14.750373840332031
    8. '(' → logprob: -15.375373840332031
    9. '_,' → logprob: -15.625373840332031
    10. ')' → logprob: -16.25037384033203

Token 138: ' limit' (ID: 5967)
  Prédit: ' limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -0.35074344277381897
    2. 'limit' → logprob: -1.8507434129714966
    3. ' n' → logprob: -2.725743532180786
    4. ' max' → logprob: -3.100743532180786
    5. ' self' → logprob: -4.600743293762207
    6. 'n' → logprob: -4.600743293762207
    7. 'self' → logprob: -5.600743293762207
    8. 'max' → logprob: -5.850743293762207
    9. ' upper' → logprob: -6.725743293762207
    10. ' ' → logprob: -9.725743293762207

Token 139: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05427488684654236
    2. '):' → logprob: -3.054274797439575
    3. ' ):' → logprob: -6.054275035858154
    4. ':int' → logprob: -6.179275035858154
    5. ' :' → logprob: -7.054275035858154
    6. '=' → logprob: -8.054274559020996
    7. '):
' → logprob: -9.929274559020996
    8. '=int' → logprob: -12.304274559020996
    9. ')' → logprob: -12.929274559020996
    10. ' =' → logprob: -12.929274559020996

Token 140: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.47431331872940063
    2. 'int' → logprob: -0.9743133187294006
    3. ' ' → logprob: -8.849313735961914
    4. ')' → logprob: -11.349313735961914
    5. '[int' → logprob: -11.474313735961914
    6. '100' → logprob: -11.849313735961914
    7. '	int' → logprob: -11.849313735961914
    8. ':int' → logprob: -11.849313735961914
    9. '<|end|>' → logprob: -12.099313735961914
    10. '  ' → logprob: -12.224313735961914

Token 141: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020254909992218018
    2. '):
' → logprob: -4.020255088806152
    3. ':' → logprob: -6.895255088806152
    4. ' ):' → logprob: -6.895255088806152
    5. '):
' → logprob: -10.520255088806152
    6. ')' → logprob: -10.645255088806152
    7. ' ):
' → logprob: -10.770255088806152
    8. '=' → logprob: -13.020255088806152
    9. ',' → logprob: -13.770255088806152
    10. ' ' → logprob: -14.520255088806152

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007477425504475832
    2. ' self' → logprob: -5.257477283477783
    3. 'self' → logprob: -7.007477283477783
    4. '        ' → logprob: -7.507477283477783
    5. ',' → logprob: -8.257477760314941
    6. ' 
' → logprob: -9.257477760314941
    7. '        
' → logprob: -9.257477760314941
    8. ' ' → logprob: -9.507477760314941
    9. '   ' → logprob: -10.007477760314941
    10. '
' → logprob: -10.257477760314941

Token 143: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3135213553905487
    2. ' self' → logprob: -1.313521385192871
    3. '       ' → logprob: -8.438521385192871
    4. '   ' → logprob: -10.438521385192871
    5. 'import' → logprob: -11.688521385192871
    6. '	self' → logprob: -12.938521385192871
    7. ' ' → logprob: -13.438521385192871
    8. '[self' → logprob: -15.063521385192871
    9. '    ' → logprob: -15.313521385192871
    10. '0' → logprob: -15.813521385192871

Token 144: '.limit' (ID: 75191)
  Prédit: '.limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.limit' → logprob: -0.7611138224601746
    2. ' =' → logprob: -1.0111138820648193
    3. 'limit' → logprob: -2.7611138820648193
    4. '=' → logprob: -3.5111138820648193
    5. '_limit' → logprob: -3.7611138820648193
    6. '.s' → logprob: -3.7611138820648193
    7. '.is' → logprob: -4.26111364364624
    8. ' limit' → logprob: -5.63611364364624
    9. ' sieve' → logprob: -5.76111364364624
    10. 'is' → logprob: -6.13611364364624

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25214412808418274
    2. '=' → logprob: -1.5021440982818604
    3. ' ' → logprob: -8.502143859863281
    4. '+' → logprob: -12.627143859863281
    5. '   ' → logprob: -13.002143859863281
    6. ',' → logprob: -13.502143859863281
    7. '  ' → logprob: -13.627143859863281
    8. ' +=' → logprob: -14.127143859863281
    9. '    ' → logprob: -14.502143859863281
    10. '=int' → logprob: -14.502143859863281

Token 146: ' limit' (ID: 5967)
  Prédit: ' limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -0.28139328956604004
    2. 'limit' → logprob: -1.40639328956604
    3. ' int' → logprob: -9.031393051147461
    4. '(limit' → logprob: -9.906393051147461
    5. 'int' → logprob: -10.031393051147461
    6. ' ' → logprob: -11.781393051147461
    7. '_limit' → logprob: -12.406393051147461
    8. ' [' → logprob: -12.781393051147461
    9. '[' → logprob: -12.781393051147461
    10. '.limit' → logprob: -13.156393051147461

Token 147: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0026873021852225065
    2. '<|end|>' → logprob: -6.877687454223633
    3. 'self' → logprob: -7.002687454223633
    4. '       ' → logprob: -8.627687454223633
    5. ',' → logprob: -8.627687454223633
    6. '
' → logprob: -8.752687454223633
    7. ' 
' → logprob: -9.627687454223633
    8. ' self' → logprob: -9.627687454223633
    9. '  
' → logprob: -10.252687454223633
    10. ',
' → logprob: -10.877687454223633

Token 148: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3099077045917511
    2. '
' → logprob: -1.9349076747894287
    3. ' self' → logprob: -2.1849076747894287
    4. '       ' → logprob: -4.934907913208008
    5. ',' → logprob: -7.434907913208008
    6. ' 
' → logprob: -7.934907913208008
    7. '<|end|>' → logprob: -8.434907913208008
    8. ' ' → logprob: -8.559907913208008
    9. '	self' → logprob: -8.934907913208008
    10. '   ' → logprob: -8.934907913208008

Token 149: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00862131267786026
    2. ' self' → logprob: -4.7586212158203125
    3. 's' → logprob: -12.258621215820312
    4. '	self' → logprob: -14.258621215820312
    5. '   ' → logprob: -14.508621215820312
    6. '[self' → logprob: -14.758621215820312
    7. ' sieve' → logprob: -15.383621215820312
    8. '       ' → logprob: -16.508621215820312
    9. ' ' → logprob: -17.258621215820312
    10. 'import' → logprob: -17.258621215820312

Token 150: '._' (ID: 2697)
  Prédit: ' sieve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sieve' → logprob: -0.5398906469345093
    2. '_s' → logprob: -1.7898906469345093
    3. ' _' → logprob: -2.164890766143799
    4. 's' → logprob: -2.914890766143799
    5. ' is' → logprob: -3.914890766143799
    6. 'is' → logprob: -4.414890766143799
    7. ' primes' → logprob: -4.414890766143799
    8. '_pr' → logprob: -4.789890766143799
    9. '_' → logprob: -4.789890766143799
    10. ' =' → logprob: -4.914890766143799

Token 151: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20419321954250336
    2. 'pr' → logprob: -2.329193115234375
    3. 'is' → logprob: -2.454193115234375
    4. 'prime' → logprob: -6.954193115234375
    5. ' sieve' → logprob: -8.454193115234375
    6. 'cache' → logprob: -9.954193115234375
    7. ' primes' → logprob: -10.829193115234375
    8. 'limit' → logprob: -11.204193115234375
    9. 'size' → logprob: -11.329193115234375
    10. 'sqrt' → logprob: -11.454193115234375

Token 152: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.0020214279647916555
    2. 'ieved' → logprob: -6.252021312713623
    3. 'qrt' → logprob: -10.752021789550781
    4. 'ize' → logprob: -10.877021789550781
    5. 't' → logprob: -11.377021789550781
    6. 'IEVE' → logprob: -11.752021789550781
    7. 's' → logprob: -12.002021789550781
    8. '   ' → logprob: -12.252021789550781
    9. 'ieving' → logprob: -12.377021789550781
    10. '_' → logprob: -12.377021789550781

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008923469111323357
    2. '=' → logprob: -4.758923530578613
    3. '[' → logprob: -8.883923530578613
    4. '_size' → logprob: -9.508923530578613
    5. '[:]' → logprob: -10.633923530578613
    6. ':' → logprob: -10.758923530578613
    7. '=[' → logprob: -11.633923530578613
    8. '=[]' → logprob: -11.633923530578613
    9. ' =[' → logprob: -11.758923530578613
    10. '_' → logprob: -11.758923530578613

Token 154: ' self' (ID: 1051)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5759462714195251
    2. '[' → logprob: -0.8259462714195251
    3. '[self' → logprob: -13.075945854187012
    4. ' ' → logprob: -14.200945854187012
    5. '[class' → logprob: -14.200945854187012
    6. '[int' → logprob: -14.700945854187012
    7. '[s' → logprob: -15.200945854187012
    8. '[type' → logprob: -15.450945854187012
    9. '[start' → logprob: -15.450945854187012
    10. '[Math' → logprob: -15.575945854187012

Token 155: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.47174370288848877
    2. '[' → logprob: -1.4717437028884888
    3. '.limit' → logprob: -2.596743583679199
    4. '_limit' → logprob: -3.596743583679199
    5. 'limit' → logprob: -3.846743583679199
    6. ' [' → logprob: -4.346743583679199
    7. '.' → logprob: -6.096743583679199
    8. '.__' → logprob: -6.596743583679199
    9. '.s' → logprob: -7.096743583679199
    10. '=[' → logprob: -7.096743583679199

Token 156: 'build' (ID: 9242)
  Prédit: 'create'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'create' → logprob: -0.3711912930011749
    2. 'generate' → logprob: -1.3711912631988525
    3. 'init' → logprob: -3.6211912631988525
    4. '[' → logprob: -4.246191501617432
    5. 'initialize' → logprob: -4.996191501617432
    6. 'build' → logprob: -5.496191501617432
    7. 'make' → logprob: -6.121191501617432
    8. 's' → logprob: -7.121191501617432
    9. 'compute' → logprob: -7.246191501617432
    10. 'construct' → logprob: -9.371191024780273

Token 157: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.004718010779470205
    2. '_' → logprob: -5.879717826843262
    3. '(limit' → logprob: -7.504717826843262
    4. '[' → logprob: -8.004717826843262
    5. '_limit' → logprob: -8.379717826843262
    6. 's' → logprob: -8.379717826843262
    7. '_array' → logprob: -8.504717826843262
    8. '(' → logprob: -8.879717826843262
    9. '[]' → logprob: -9.129717826843262
    10. '_list' → logprob: -10.004717826843262

Token 158: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.00020246754866093397
    2. 'ive' → logprob: -9.125202178955078
    3. 'iev' → logprob: -10.500202178955078
    4. 'i' → logprob: -12.000202178955078
    5. '_' → logprob: -12.125202178955078
    6. '   ' → logprob: -12.250202178955078
    7. '[' → logprob: -12.500202178955078
    8. ' sieve' → logprob: -12.625202178955078
    9. 'ieves' → logprob: -12.750202178955078
    10. '1' → logprob: -12.875202178955078

Token 159: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7289446592330933
    2. '(limit' → logprob: -0.7289446592330933
    3. '(' → logprob: -3.353944778442383
    4. '<|end|>' → logprob: -9.353944778442383
    5. ' (' → logprob: -10.603944778442383
    6. ' ()' → logprob: -10.603944778442383
    7. '()
' → logprob: -10.978944778442383
    8. '(
' → logprob: -10.978944778442383
    9. 'limit' → logprob: -11.978944778442383
    10. '(len' → logprob: -12.478944778442383

Token 160: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.555344820022583
    2. '
' → logprob: -1.930344820022583
    3. '()' → logprob: -2.305344820022583
    4. '()
' → logprob: -2.805344820022583
    5. '    
' → logprob: -3.055344820022583
    6. '(' → logprob: -3.305344820022583
    7. '

' → logprob: -4.680344581604004
    8. 'def' → logprob: -4.805344581604004
    9. '()

' → logprob: -5.055344581604004
    10. '  
' → logprob: -5.930344581604004

Token 161: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0717839002609253
    2. 'def' → logprob: -1.0717839002609253
    3. '   ' → logprob: -2.071784019470215
    4. '    
' → logprob: -2.446784019470215
    5. ' def' → logprob: -2.821784019470215
    6. '  
' → logprob: -4.321784019470215
    7. ' 
' → logprob: -4.446784019470215
    8. ' ' → logprob: -4.821784019470215
    9. '

' → logprob: -5.571784019470215
    10. '_' → logprob: -6.446784019470215

Token 162: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0021756007336080074
    2. ' def' → logprob: -6.252175807952881
    3. '   ' → logprob: -8.377175331115723
    4. ' ' → logprob: -11.627175331115723
    5. '	def' → logprob: -12.752175331115723
    6. '    
' → logprob: -13.377175331115723
    7. '_def' → logprob: -13.627175331115723
    8. ' 
' → logprob: -14.502175331115723
    9. '_' → logprob: -14.502175331115723
    10. '  
' → logprob: -14.877175331115723

Token 163: ' _' (ID: 1175)
  Prédit: '_build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_build' → logprob: -0.01264137588441372
    2. ' _' → logprob: -4.387641429901123
    3. '_s' → logprob: -9.137640953063965
    4. '_' → logprob: -11.387640953063965
    5. ' build' → logprob: -12.387640953063965
    6. '_b' → logprob: -12.762640953063965
    7. 'build' → logprob: -13.387640953063965
    8. ' def' → logprob: -14.012640953063965
    9. 'def' → logprob: -14.137640953063965
    10. '_builder' → logprob: -14.387640953063965

Token 164: 'build' (ID: 9242)
  Prédit: 'build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -1.0206720617134124e-05
    2. '_build' → logprob: -11.62501049041748
    3. ' build' → logprob: -14.00001049041748
    4. 'b' → logprob: -15.37501049041748
    5. 's' → logprob: -16.625009536743164
    6. 'def' → logprob: -16.750009536743164
    7. '	build' → logprob: -18.625009536743164
    8. '(build' → logprob: -19.000009536743164
    9. '```' → logprob: -19.000009536743164
    10. '_s' → logprob: -19.125009536743164

Token 165: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.000000953674316
    3. 's' → logprob: -15.500000953674316
    4. ' _' → logprob: -17.125001907348633
    5. '```' → logprob: -19.750001907348633
    6. '_a' → logprob: -19.875001907348633
    7. '_suffix' → logprob: -19.875001907348633
    8. '_S' → logprob: -19.875001907348633
    9. '   ' → logprob: -20.250001907348633
    10. '\' → logprob: -20.375001907348633

Token 166: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.007431276608258486
    2. '_' → logprob: -5.257431507110596
    3. '_s' → logprob: -6.257431507110596
    4. 's' → logprob: -8.382431030273438
    5. 'ive' → logprob: -12.007431030273438
    6. 't' → logprob: -12.007431030273438
    7. 'e' → logprob: -12.382431030273438
    8. 'IEVE' → logprob: -12.507431030273438
    9. 'eve' → logprob: -12.632431030273438
    10. '__' → logprob: -13.132431030273438

Token 167: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007696656510233879
    2. '(' → logprob: -4.882696628570557
    3. ' (' → logprob: -9.507697105407715
    4. '()' → logprob: -11.882697105407715
    5. 'self' → logprob: -12.382697105407715
    6. '(s' → logprob: -12.882697105407715
    7. '(
' → logprob: -14.007697105407715
    8. ' self' → logprob: -14.757697105407715
    9. ' ' → logprob: -14.882697105407715
    10. '   ' → logprob: -15.007697105407715

Token 168: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.048709437251091
    2. '(self' → logprob: -3.6737093925476074
    3. ')' → logprob: -4.298709392547607
    4. 'self' → logprob: -5.173709392547607
    5. '):
' → logprob: -6.173709392547607
    6. '():' → logprob: -7.673709392547607
    7. ' ):' → logprob: -8.673709869384766
    8. ':' → logprob: -9.548709869384766
    9. '()' → logprob: -10.423709869384766
    10. '):
' → logprob: -11.048709869384766

Token 169: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.016747476533055305
    2. ' ->' → logprob: -4.51674747467041
    3. ':' → logprob: -5.76674747467041
    4. '(' → logprob: -7.26674747467041
    5. ' (' → logprob: -7.64174747467041
    6. '():' → logprob: -7.64174747467041
    7. ' :' → logprob: -8.14174747467041
    8. '       ' → logprob: -8.76674747467041
    9. 'self' → logprob: -8.89174747467041
    10. '()' → logprob: -9.14174747467041

Token 170: ' list' (ID: 1562)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.5994824767112732
    2. 'list' → logprob: -0.9744824767112732
    3. 'Dict' → logprob: -2.724482536315918
    4. '[' → logprob: -5.224482536315918
    5. '[List' → logprob: -6.724482536315918
    6. '[list' → logprob: -7.224482536315918
    7. 'Tuple' → logprob: -8.724482536315918
    8. ' list' → logprob: -8.724482536315918
    9. '[]' → logprob: -9.474482536315918
    10. 'None' → logprob: -9.474482536315918

Token 171: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04064660146832466
    2. ':' → logprob: -3.665646553039551
    3. '[int' → logprob: -4.415646553039551
    4. ':
' → logprob: -6.415646553039551
    5. '(bool' → logprob: -8.41564655303955
    6. '   ' → logprob: -9.41564655303955
    7. '[self' → logprob: -9.66564655303955
    8. '<bool' → logprob: -10.04064655303955
    9. '       ' → logprob: -10.91564655303955
    10. 'bool' → logprob: -10.91564655303955

Token 172: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09398192912340164
    2. '       ' → logprob: -2.843981981277466
    3. ' [' → logprob: -4.093981742858887
    4. '[n' → logprob: -4.468981742858887
    5. '[size' → logprob: -6.343981742858887
    6. '   ' → logprob: -8.218981742858887
    7. '[self' → logprob: -8.468981742858887
    8. '[int' → logprob: -8.843981742858887
    9. ' ' → logprob: -9.218981742858887
    10. '```' → logprob: -9.343981742858887

Token 173: ' sieve' (ID: 142781)
  Prédit: ' sieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sieve' → logprob: -0.07353893667459488
    2. '[' → logprob: -3.4485390186309814
    3. 's' → logprob: -3.8235390186309814
    4. ' [' → logprob: -4.323538780212402
    5. '[s' → logprob: -5.698538780212402
    6. '       ' → logprob: -7.448538780212402
    7. '[n' → logprob: -10.323538780212402
    8. '   ' → logprob: -11.948538780212402
    9. '[size' → logprob: -11.948538780212402
    10. 'is' → logprob: -12.073538780212402

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008092156611382961
    2. '=' → logprob: -4.883091926574707
    3. '[' → logprob: -7.883091926574707
    4. '   ' → logprob: -10.133091926574707
    5. '(' → logprob: -11.008091926574707
    6. '=[' → logprob: -11.383091926574707
    7. ' =[' → logprob: -11.508091926574707
    8. '[]' → logprob: -11.633091926574707
    9. '       ' → logprob: -11.758091926574707
    10. ':' → logprob: -12.008091926574707

Token 175: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12694239616394043
    2. ' [' → logprob: -2.1269423961639404
    3. '[self' → logprob: -11.75194263458252
    4. ' ' → logprob: -12.75194263458252
    5. '   ' → logprob: -13.25194263458252
    6. '[int' → logprob: -14.75194263458252
    7. '[class' → logprob: -14.87694263458252
    8. '[Math' → logprob: -15.25194263458252
    9. '[n' → logprob: -16.001941680908203
    10. '[start' → logprob: -16.251941680908203

Token 176: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -9.9728669738397e-05
    2. ' True' → logprob: -9.250100135803223
    3. 'False' → logprob: -12.625100135803223
    4. '(True' → logprob: -15.375100135803223
    5. 'Tr' → logprob: -17.625099182128906
    6. '   ' → logprob: -19.250099182128906
    7. '

' → logprob: -20.125099182128906
    8. '
' → logprob: -20.500099182128906
    9. '=True' → logprob: -20.750099182128906
    10. '.True' → logprob: -21.375099182128906

Token 177: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007986200973391533
    2. ',' → logprob: -5.507986068725586
    3. ']*' → logprob: -6.132986068725586
    4. ' for' → logprob: -6.507986068725586
    5. ']*(' → logprob: -9.007986068725586
    6. ' ]' → logprob: -9.257986068725586
    7. 'for' → logprob: -11.757986068725586
    8. ']+' → logprob: -11.757986068725586
    9. ' ' → logprob: -13.757986068725586
    10. ')' → logprob: -13.882986068725586

Token 178: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4179730713367462
    2. ',' → logprob: -1.2929730415344238
    3. ' for' → logprob: -2.792973041534424
    4. ']*' → logprob: -6.042973041534424
    5. ']*(' → logprob: -6.417973041534424
    6. '[' → logprob: -7.167973041534424
    7. ' ]' → logprob: -7.917973041534424
    8. 'for' → logprob: -8.792973518371582
    9. ']+' → logprob: -8.792973518371582
    10. ')' → logprob: -9.167973518371582

Token 179: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010828252416104078
    2. ' (' → logprob: -6.876082897186279
    3. '(' → logprob: -10.501082420349121
    4. '(max' → logprob: -11.001082420349121
    5. '(this' → logprob: -13.376082420349121
    6. '((' → logprob: -13.376082420349121
    7. '(len' → logprob: -14.001082420349121
    8. 'self' → logprob: -14.501082420349121
    9. '(n' → logprob: -15.126082420349121
    10. '(limit' → logprob: -15.501082420349121

Token 180: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00014251544780563563
    2. ' self' → logprob: -8.875142097473145
    3. '(self' → logprob: -13.000142097473145
    4. '[self' → logprob: -16.37514305114746
    5. '   ' → logprob: -16.50014305114746
    6. '	self' → logprob: -16.75014305114746
    7. '
' → logprob: -17.00014305114746
    8. ' ' → logprob: -17.37514305114746
    9. ')' → logprob: -17.50014305114746
    10. '```' → logprob: -17.50014305114746

Token 181: '.limit' (ID: 75191)
  Prédit: '.limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.limit' → logprob: -2.0100624169572257e-05
    2. 'limit' → logprob: -10.875020027160645
    3. '.' → logprob: -14.500020027160645
    4. ' limit' → logprob: -15.125020027160645
    5. ' .' → logprob: -15.875020027160645
    6. '_limit' → logprob: -16.62502098083496
    7. '.l' → logprob: -17.50002098083496
    8. '-limit' → logprob: -17.75002098083496
    9. 'Limit' → logprob: -17.87502098083496
    10. '(limit' → logprob: -18.25002098083496

Token 182: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759547352790833
    2. ' +' → logprob: -0.8259547352790833
    3. ' ' → logprob: -11.32595443725586
    4. ' +
' → logprob: -13.45095443725586
    5. '+
' → logprob: -14.32595443725586
    6. ' plus' → logprob: -15.32595443725586
    7. '1' → logprob: -15.32595443725586
    8. ')' → logprob: -15.32595443725586
    9. '+)' → logprob: -15.82595443725586
    10. ' )' → logprob: -16.57595443725586

Token 183: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023247575387358665
    2. ' ' → logprob: -3.773247480392456
    3. ')' → logprob: -14.648247718811035
    4. '   ' → logprob: -14.773247718811035
    5. '  ' → logprob: -14.898247718811035
    6. '```' → logprob: -15.023247718811035
    7. '2' → logprob: -15.523247718811035
    8. '[' → logprob: -16.39824676513672
    9. '
' → logprob: -16.96074676513672
    10. '    ' → logprob: -17.58574676513672

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004884536610916257
    2. ' ' → logprob: -7.62548828125
    3. '2' → logprob: -16.37548828125
    4. '   ' → logprob: -16.62548828125
    5. '  ' → logprob: -17.06298828125
    6. '0' → logprob: -17.56298828125
    7. ')' → logprob: -18.12548828125
    8. '7' → logprob: -18.18798828125
    9. '```' → logprob: -18.25048828125
    10. '[' → logprob: -18.62548828125

Token 185: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02056162618100643
    2. ')
' → logprob: -3.895561695098877
    3. ' )' → logprob: -11.520561218261719
    4. ')
' → logprob: -12.395561218261719
    5. ' )
' → logprob: -13.020561218261719
    6. ')

' → logprob: -13.645561218261719
    7. '<|end|>' → logprob: -14.020561218261719
    8. '       ' → logprob: -14.520561218261719
    9. ')#' → logprob: -15.645561218261719
    10. '[' → logprob: -15.645561218261719

Token 186: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11854278296232224
    2. '<|end|>' → logprob: -2.9935426712036133
    3. '       ' → logprob: -3.1185426712036133
    4. ' sieve' → logprob: -4.618542671203613
    5. 's' → logprob: -5.493542671203613
    6. ' 
' → logprob: -6.743542671203613
    7. '[' → logprob: -7.368542671203613
    8. '        
' → logprob: -7.618542671203613
    9. '<|end|>' → logprob: -8.243542671203613
    10. '
' → logprob: -8.618542671203613

Token 187: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3697437644004822
    2. ' sieve' → logprob: -1.244743824005127
    3. '       ' → logprob: -3.869743824005127
    4. ' ' → logprob: -8.994743347167969
    5. '   ' → logprob: -9.994743347167969
    6. '```' → logprob: -11.119743347167969
    7. 'import' → logprob: -11.869743347167969
    8. '        
' → logprob: -12.369743347167969
    9. '	s' → logprob: -12.744743347167969
    10. '  ' → logprob: -13.369743347167969

Token 188: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. ' [' → logprob: -16.5
    3. '[:' → logprob: -19.5
    4. '[
' → logprob: -19.75
    5. '```' → logprob: -20.625
    6. ' ' → logprob: -21.5
    7. '\[' → logprob: -21.625
    8. '0' → logprob: -21.875
    9. ' =' → logprob: -23.25
    10. '
' → logprob: -23.375

Token 189: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006533435662277043
    2. ' ' → logprob: -7.500653266906738
    3. '1' → logprob: -9.625653266906738
    4. ':' → logprob: -10.625653266906738
    5. '   ' → logprob: -12.500653266906738
    6. '[' → logprob: -13.500653266906738
    7. ' :' → logprob: -13.750653266906738
    8. '  ' → logprob: -13.750653266906738
    9. '    ' → logprob: -14.438153266906738
    10. '2' → logprob: -15.000653266906738

Token 190: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.143808109802194e-05
    2. ' ]' → logprob: -10.750041007995605
    3. ']=' → logprob: -11.000041007995605
    4. '],' → logprob: -12.750041007995605
    5. ']
' → logprob: -15.750041007995605
    6. ':' → logprob: -16.000041961669922
    7. 'False' → logprob: -17.000041961669922
    8. ')' → logprob: -17.125041961669922
    9. '[' → logprob: -17.375041961669922
    10. ',' → logprob: -17.875041961669922

Token 191: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002016548067331314
    2. '=' → logprob: -6.502016544342041
    3. ' ' → logprob: -8.2520170211792
    4. ' =
' → logprob: -8.8770170211792
    5. ',' → logprob: -9.6270170211792
    6. '=False' → logprob: -10.5020170211792
    7. ' and' → logprob: -11.7520170211792
    8. ' ,' → logprob: -12.3770170211792
    9. '<|end|>' → logprob: -13.5020170211792
    10. ']' → logprob: -13.5020170211792

Token 192: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.38695383071899414
    2. ' False' → logprob: -1.1369538307189941
    3. ' sieve' → logprob: -9.636953353881836
    4. 's' → logprob: -11.386953353881836
    5. '(False' → logprob: -12.511953353881836
    6. '=False' → logprob: -14.386953353881836
    7. '.False' → logprob: -14.511953353881836
    8. ' ' → logprob: -15.011953353881836
    9. '```' → logprob: -15.511953353881836
    10. 'false' → logprob: -15.636953353881836

Token 193: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20910924673080444
    2. '<|end|>' → logprob: -1.7091093063354492
    3. 's' → logprob: -5.334109306335449
    4. '       ' → logprob: -6.584109306335449
    5. '<|end|>' → logprob: -6.834109306335449
    6. ' 
' → logprob: -8.45910930633545
    7. '
' → logprob: -9.70910930633545
    8. ' sieve' → logprob: -10.20910930633545
    9. '        
' → logprob: -11.45910930633545
    10. ',' → logprob: -11.83410930633545

Token 194: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41144585609436035
    2. '       ' → logprob: -1.6614458560943604
    3. 's' → logprob: -2.2864458560943604
    4. '<|end|>' → logprob: -3.1614458560943604
    5. ' sieve' → logprob: -5.911445617675781
    6. ' 
' → logprob: -8.411445617675781
    7. ' ' → logprob: -9.536445617675781
    8. '<|end|>' → logprob: -9.536445617675781
    9. ' and' → logprob: -9.911445617675781
    10. '
' → logprob: -10.161445617675781

Token 195: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002220914699137211
    2. ' sieve' → logprob: -6.12722110748291
    3. '       ' → logprob: -10.37722110748291
    4. '   ' → logprob: -13.75222110748291
    5. '1' → logprob: -13.75222110748291
    6. 'sie' → logprob: -13.87722110748291
    7. ' ' → logprob: -14.00222110748291
    8. '0' → logprob: -15.37722110748291
    9. '```' → logprob: -15.87722110748291
    10. '  ' → logprob: -16.127220153808594

Token 196: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8624639324116288e-06
    2. '[
' → logprob: -13.750001907348633
    3. ' [' → logprob: -15.000001907348633
    4. '1' → logprob: -16.000001907348633
    5. 's' → logprob: -16.250001907348633
    6. '```' → logprob: -16.500001907348633
    7. '<|end|>' → logprob: -16.500001907348633
    8. '
' → logprob: -18.000001907348633
    9. 'import' → logprob: -18.125001907348633
    10. ' ' → logprob: -18.500001907348633

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002060436672763899
    2. ' ' → logprob: -8.500205993652344
    3. '  ' → logprob: -14.437705993652344
    4. '   ' → logprob: -15.312705993652344
    5. '```' → logprob: -15.812705993652344
    6. ']' → logprob: -15.875205993652344
    7. '[' → logprob: -15.937705993652344
    8. '=' → logprob: -16.125205993652344
    9. '
' → logprob: -16.437705993652344
    10. ':' → logprob: -16.437705993652344

Token 198: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009876732947304845
    2. ' =' → logprob: -7.625987529754639
    3. '=' → logprob: -7.875987529754639
    4. ']=' → logprob: -9.125988006591797
    5. ' ]' → logprob: -12.250988006591797
    6. '[' → logprob: -13.000988006591797
    7. ')' → logprob: -13.125988006591797
    8. 'False' → logprob: -14.250988006591797
    9. '=False' → logprob: -14.375988006591797
    10. '<|end|>' → logprob: -14.750988006591797

Token 199: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014181364327669144
    2. '=' → logprob: -4.264181137084961
    3. '=False' → logprob: -11.014181137084961
    4. ' ' → logprob: -14.264181137084961
    5. ' =
' → logprob: -15.014181137084961
    6. ']' → logprob: -15.639181137084961
    7. 'False' → logprob: -16.26418113708496
    8. '<|end|>' → logprob: -16.38918113708496
    9. ' False' → logprob: -17.26418113708496
    10. ')' → logprob: -17.38918113708496

Token 200: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.014164102263748646
    2. ' False' → logprob: -4.264163970947266
    3. '(False' → logprob: -15.014163970947266
    4. '.False' → logprob: -16.014163970947266
    5. '=False' → logprob: -16.139163970947266
    6. '_false' → logprob: -16.889163970947266
    7. '[' → logprob: -17.514163970947266
    8. 'True' → logprob: -17.764163970947266
    9. ' ' → logprob: -19.014163970947266
    10. '```' → logprob: -19.639163970947266

Token 201: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0006969464011490345
    2. '<|end|>' → logprob: -7.500697135925293
    3. '       ' → logprob: -9.250697135925293
    4. '
' → logprob: -11.125697135925293
    5. ' 
' → logprob: -11.125697135925293
    6. '        
' → logprob: -12.000697135925293
    7. '<|end|>' → logprob: -12.625697135925293
    8. '  
' → logprob: -12.625697135925293
    9. '

' → logprob: -13.500697135925293
    10. '    
' → logprob: -13.625697135925293

Token 202: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01709265075623989
    2. '<|end|>' → logprob: -4.642092704772949
    3. '       ' → logprob: -5.142092704772949
    4. ' for' → logprob: -7.642092704772949
    5. ' 
' → logprob: -7.767092704772949
    6. '  
' → logprob: -8.51709270477295
    7. '        
' → logprob: -8.89209270477295
    8. '    
' → logprob: -10.01709270477295
    9. '<|end|>' → logprob: -10.01709270477295
    10. '
' → logprob: -10.01709270477295

Token 203: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2016497552394867
    2. ' for' → logprob: -1.701649785041809
    3. '       ' → logprob: -8.57664966583252
    4. '   ' → logprob: -10.45164966583252
    5. 'p' → logprob: -11.07664966583252
    6. ' p' → logprob: -13.45164966583252
    7. 'import' → logprob: -14.57664966583252
    8. 'i' → logprob: -14.70164966583252
    9. ' ' → logprob: -14.82664966583252
    10. '	for' → logprob: -14.82664966583252

Token 204: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.001070442725904286
    2. ' num' → logprob: -7.751070499420166
    3. 'i' → logprob: -8.001070022583008
    4. ' number' → logprob: -8.376070022583008
    5. ' p' → logprob: -9.751070022583008
    6. 'num' → logprob: -12.251070022583008
    7. ' n' → logprob: -12.376070022583008
    8. 'number' → logprob: -12.751070022583008
    9. '	i' → logprob: -13.376070022583008
    10. ' current' → logprob: -14.126070022583008

Token 205: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002715714741498232
    2. 'in' → logprob: -6.002715587615967
    3. ' ' → logprob: -8.377716064453125
    4. '<|end|>' → logprob: -12.752716064453125
    5. ' i' → logprob: -13.252716064453125
    6. '  ' → logprob: -13.377716064453125
    7. '	in' → logprob: -13.377716064453125
    8. ',' → logprob: -14.502716064453125
    9. 'range' → logprob: -15.377716064453125
    10. '2' → logprob: -15.377716064453125

Token 206: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.002476604888215661
    2. 'range' → logprob: -6.002476692199707
    3. ' ' → logprob: -14.502476692199707
    4. '	range' → logprob: -15.127476692199707
    5. '(range' → logprob: -17.12747573852539
    6. '   ' → logprob: -17.25247573852539
    7. '  ' → logprob: -17.87747573852539
    8. '    ' → logprob: -19.12747573852539
    9. '.range' → logprob: -19.12747573852539
    10. ' xrange' → logprob: -19.50247573852539

Token 207: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.93579563125968e-05
    2. '2' → logprob: -9.375089645385742
    3. ' ' → logprob: -12.750089645385742
    4. ' (' → logprob: -13.500089645385742
    5. '(
' → logprob: -16.000089645385742
    6. '   ' → logprob: -19.375089645385742
    7. '```' → logprob: -19.625089645385742
    8. '[' → logprob: -20.125089645385742
    9. '<|end|>' → logprob: -20.125089645385742
    10. '  ' → logprob: -20.750089645385742

Token 208: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -16.125051498413086
    4. '(' → logprob: -17.250051498413086
    5. '  ' → logprob: -18.625051498413086
    6. '```' → logprob: -19.250051498413086
    7. '    ' → logprob: -19.875051498413086
    8. ')' → logprob: -20.000051498413086
    9. '２' → logprob: -20.000051498413086
    10. '۲' → logprob: -20.125051498413086

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001034714630804956
    2. ' ,' → logprob: -6.876034736633301
    3. ',int' → logprob: -14.0010347366333
    4. ',len' → logprob: -14.8760347366333
    5. ' ' → logprob: -15.0010347366333
    6. ',self' → logprob: -15.7510347366333
    7. ',
' → logprob: -16.251033782958984
    8. '   ' → logprob: -17.251033782958984
    9. ',length' → logprob: -17.626033782958984
    10. '‌,' → logprob: -18.001033782958984

Token 210: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07902363687753677
    2. ' int' → logprob: -2.579023599624634
    3. 'math' → logprob: -9.079023361206055
    4. '   ' → logprob: -11.579023361206055
    5. ' math' → logprob: -11.704023361206055
    6. '	int' → logprob: -14.204023361206055
    7. ' ' → logprob: -14.204023361206055
    8. 'self' → logprob: -14.829023361206055
    9. '(int' → logprob: -15.454023361206055
    10. '    ' → logprob: -15.954023361206055

Token 211: '(self' (ID: 2402)
  Prédit: '(math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.20572613179683685
    2. '(self' → logprob: -1.705726146697998
    3. '(' → logprob: -5.455726146697998
    4. 'math' → logprob: -11.83072566986084
    5. ' (' → logprob: -11.95572566986084
    6. ' math' → logprob: -12.08072566986084
    7. '(s' → logprob: -12.33072566986084
    8. '((' → logprob: -12.70572566986084
    9. '(
' → logprob: -13.08072566986084
    10. '(m' → logprob: -14.08072566986084

Token 212: '.limit' (ID: 75191)
  Prédit: '.math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.math' → logprob: -0.1546553373336792
    2. '(math' → logprob: -2.0296554565429688
    3. '(self' → logprob: -5.154655456542969
    4. '.sqrt' → logprob: -6.654655456542969
    5. '[self' → logprob: -6.779655456542969
    6. '.self' → logprob: -7.154655456542969
    7. '.' → logprob: -7.279655456542969
    8. 'math' → logprob: -7.654655456542969
    9. ' math' → logprob: -7.779655456542969
    10. 'self' → logprob: -7.904655456542969

Token 213: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.005238140933215618
    2. ' **' → logprob: -5.255238056182861
    3. '(math' → logprob: -12.63023853302002
    4. '(' → logprob: -14.50523853302002
    5. ' ' → logprob: -15.13023853302002
    6. ' (' → logprob: -16.005237579345703
    7. '.sqrt' → logprob: -16.505237579345703
    8. ' math' → logprob: -16.630237579345703
    9. 'math' → logprob: -17.255237579345703
    10. '*' → logprob: -17.505237579345703

Token 214: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '.' → logprob: -16.875335693359375
    4. '(' → logprob: -17.250335693359375
    5. ' ' → logprob: -17.375335693359375
    6. '   ' → logprob: -17.875335693359375
    7. '  ' → logprob: -19.250335693359375
    8. '2' → logprob: -20.000335693359375
    9. '
' → logprob: -20.250335693359375
    10. '    ' → logprob: -20.375335693359375

Token 215: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '.' → logprob: -15.50001049041748
    4. '   ' → logprob: -17.500009536743164
    5. '(' → logprob: -18.875009536743164
    6. '

' → logprob: -19.750009536743164
    7. '{' → logprob: -19.750009536743164
    8. '2' → logprob: -19.875009536743164
    9. '  ' → logprob: -20.125009536743164
    10. '    ' → logprob: -21.000009536743164

Token 216: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -3.452426608419046e-05
    2. '0' → logprob: -10.37503433227539
    3. '5' → logprob: -13.87503433227539
    4. '1' → logprob: -14.00003433227539
    5. ' .' → logprob: -14.12503433227539
    6. '2' → logprob: -14.87503433227539
    7. '3' → logprob: -16.37503433227539
    8. '```' → logprob: -17.00003433227539
    9. '   ' → logprob: -17.25003433227539
    10. '50' → logprob: -17.37503433227539

Token 217: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -7.3458322731312364e-06
    2. '.' → logprob: -13.250007629394531
    3. '   ' → logprob: -13.875007629394531
    4. '

' → logprob: -14.625007629394531
    5. '```' → logprob: -14.812507629394531
    6. '...' → logprob: -15.187507629394531
    7. '4' → logprob: -15.500007629394531
    8. '
' → logprob: -15.562507629394531
    9. '6' → logprob: -15.562507629394531
    10. '"' → logprob: -15.687507629394531

Token 218: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0071745943278074265
    2. ')+' → logprob: -5.257174491882324
    3. ' )' → logprob: -6.257174491882324
    4. '()' → logprob: -11.382174491882324
    5. '   ' → logprob: -12.382174491882324
    6. ' +' → logprob: -12.882174491882324
    7. '+' → logprob: -13.632174491882324
    8. ' ' → logprob: -14.007174491882324
    9. '())' → logprob: -14.257174491882324
    10. '```' → logprob: -15.257174491882324

Token 219: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38793379068374634
    2. '+' → logprob: -1.1379337310791016
    3. ')' → logprob: -7.137933731079102
    4. ')+' → logprob: -8.887933731079102
    5. ' ' → logprob: -9.637933731079102
    6. '()' → logprob: -10.012933731079102
    7. '()+' → logprob: -11.512933731079102
    8. '   ' → logprob: -12.262933731079102
    9. ']+' → logprob: -13.887933731079102
    10. ' )' → logprob: -13.887933731079102

Token 220: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004882152716163546
    2. ' ' → logprob: -7.62548828125
    3. '   ' → logprob: -15.62548828125
    4. '```' → logprob: -16.75048828125
    5. '  ' → logprob: -16.87548828125
    6. '2' → logprob: -17.37548828125
    7. '(' → logprob: -17.87548828125
    8. ')' → logprob: -18.00048828125
    9. '
' → logprob: -18.50048828125
    10. '    ' → logprob: -18.62548828125

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.180879816180095e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -15.875051498413086
    4. '
' → logprob: -16.750051498413086
    5. '  ' → logprob: -17.250051498413086
    6. '```' → logprob: -17.500051498413086
    7. '2' → logprob: -17.875051498413086
    8. '

' → logprob: -18.375051498413086
    9. '    ' → logprob: -18.562551498413086
    10. ')' → logprob: -19.375051498413086

Token 222: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2050112634897232
    2. '):
' → logprob: -1.705011248588562
    3. ':' → logprob: -5.705011367797852
    4. '       ' → logprob: -8.955011367797852
    5. '):
' → logprob: -10.330011367797852
    6. ')' → logprob: -10.705011367797852
    7. ' ):' → logprob: -10.830011367797852
    8. ':
' → logprob: -10.830011367797852
    9. ',' → logprob: -11.205011367797852
    10. '   ' → logprob: -11.955011367797852

Token 223: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04654482752084732
    2. ':
' → logprob: -3.2965447902679443
    3. '       ' → logprob: -5.421545028686523
    4. '           ' → logprob: -6.296545028686523
    5. '   ' → logprob: -6.671545028686523
    6. '):
' → logprob: -8.046545028686523
    7. ' :' → logprob: -8.671545028686523
    8. ' if' → logprob: -9.046545028686523
    9. '):' → logprob: -9.046545028686523
    10. ' :
' → logprob: -9.421545028686523

Token 224: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0221085287630558
    2. ' ' → logprob: -4.647108554840088
    3. 'if' (adapté à ' if') → logprob: -4.647108554840088
    4. '           ' → logprob: -6.272108554840088
    5. '   ' → logprob: -7.522108554840088
    6. '       ' → logprob: -9.14710807800293
    7. '    ' → logprob: -9.52210807800293
    8. ' ' → logprob: -10.89710807800293
    9. '  ' → logprob: -11.27210807800293
    10. ' 
' → logprob: -11.39710807800293

Token 225: ' sieve' (ID: 142781)
  Prédit: ' sieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sieve' → logprob: -0.006738462019711733
    2. 's' → logprob: -5.006738662719727
    3. ' ' → logprob: -11.756738662719727
    4. ' not' → logprob: -11.881738662719727
    5. '	s' → logprob: -12.006738662719727
    6. ' ' → logprob: -14.631738662719727
    7. ' s' → logprob: -14.756738662719727
    8. '(s' → logprob: -15.006738662719727
    9. ' sift' → logprob: -15.631738662719727
    10. '```' → logprob: -16.006738662719727

Token 226: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.451116051815916e-05
    2. '[' → logprob: -10.625024795532227
    3. '[I' → logprob: -16.000024795532227
    4. 'i' → logprob: -16.875024795532227
    5. '[
' → logprob: -17.125024795532227
    6. ' [' → logprob: -17.500024795532227
    7. '\[' → logprob: -18.875024795532227
    8. '```' → logprob: -19.500024795532227
    9. '[ip' → logprob: -19.625024795532227
    10. ' ' → logprob: -19.875024795532227

Token 227: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0030052734073251486
    2. ']:
' → logprob: -5.878005504608154
    3. ']' → logprob: -9.003005027770996
    4. ':' → logprob: -9.628005027770996
    5. ' ]' → logprob: -12.378005027770996
    6. ']==' → logprob: -12.628005027770996
    7. ']:
' → logprob: -13.253005027770996
    8. ']:

' → logprob: -13.753005027770996
    9. ':]' → logprob: -14.753005027770996
    10. ']=' → logprob: -14.878005027770996

Token 228: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014776058960705996
    2. ' for' → logprob: -6.8764777183532715
    3. '           ' → logprob: -8.376477241516113
    4. ':' → logprob: -9.251477241516113
    5. ':
' → logprob: -9.626477241516113
    6. 'for' → logprob: -11.501477241516113
    7. ',' → logprob: -11.751477241516113
    8. '<|end|>' → logprob: -12.001477241516113
    9. '                
' → logprob: -12.001477241516113
    10. '                   ' → logprob: -12.251477241516113

Token 229: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.011634567752480507
    2. 'for' (adapté à ' for') → logprob: -5.136634349822998
    3. '               ' → logprob: -5.261634349822998
    4. '           ' → logprob: -8.511634826660156
    5. ' ' → logprob: -8.886634826660156
    6. ' ' → logprob: -9.011634826660156
    7. '   ' → logprob: -11.011634826660156
    8. '                ' → logprob: -11.761634826660156
    9. ' j' → logprob: -11.886634826660156
    10. '            ' → logprob: -12.886634826660156

Token 230: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.055278174579143524
    2. 'j' → logprob: -3.0552780628204346
    3. ' ' → logprob: -5.305278301239014
    4. ' i' → logprob: -7.305278301239014
    5. '    ' → logprob: -7.680278301239014
    6. ' (' → logprob: -8.055277824401855
    7. '   ' → logprob: -9.430277824401855
    8. '	j' → logprob: -9.805277824401855
    9. ' range' → logprob: -10.180277824401855
    10. '  ' → logprob: -10.805277824401855

Token 231: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016067100688815117
    2. 'in' → logprob: -4.141067028045654
    3. ' ' → logprob: -11.391067504882812
    4. ' i' → logprob: -12.016067504882812
    5. '	in' → logprob: -12.141067504882812
    6. '=' → logprob: -12.266067504882812
    7. ' =' → logprob: -13.016067504882812
    8. '<|end|>' → logprob: -13.266067504882812
    9. '    ' → logprob: -14.891067504882812
    10. 'In' → logprob: -15.516067504882812

Token 232: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008614926598966122
    2. ' range' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.508614540100098
    4. '	range' → logprob: -16.883615493774414
    5. '(range' → logprob: -18.008615493774414
    6. ' ' → logprob: -18.258615493774414
    7. '    ' → logprob: -19.383615493774414
    8. '  ' → logprob: -19.383615493774414
    9. 'i' → logprob: -20.258615493774414
    10. 'rang' → logprob: -20.758615493774414

Token 233: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.380904672667384e-05
    2. '(' → logprob: -10.375033378601074
    3. ' i' → logprob: -13.375033378601074
    4. 'i' → logprob: -14.625033378601074
    5. ' (' → logprob: -15.125033378601074
    6. '(
' → logprob: -15.750033378601074
    7. '(j' → logprob: -16.75003433227539
    8. ')' → logprob: -17.50003433227539
    9. '	i' → logprob: -18.00003433227539
    10. '(I' → logprob: -18.12503433227539

Token 234: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.03628905490040779
    2. ' *' → logprob: -3.5362889766693115
    3. '*' → logprob: -5.036289215087891
    4. 'i' → logprob: -10.91128921508789
    5. ' i' → logprob: -13.78628921508789
    6. ' ' → logprob: -16.66128921508789
    7. '*j' → logprob: -16.66128921508789
    8. '**' → logprob: -17.66128921508789
    9. '   ' → logprob: -17.78628921508789
    10. ',' → logprob: -18.91128921508789

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000651197915431112
    2. ',self' → logprob: -7.3756513595581055
    3. ' ,' → logprob: -10.875651359558105
    4. 'self' → logprob: -12.125651359558105
    5. ',len' → logprob: -15.750651359558105
    6. ' self' → logprob: -16.00065040588379
    7. ',
' → logprob: -16.12565040588379
    8. '(self' → logprob: -17.25065040588379
    9. ':self' → logprob: -18.25065040588379
    10. ',s' → logprob: -18.75065040588379

Token 236: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889088988304138
    2. ' self' → logprob: -2.578890800476074
    3. '   ' → logprob: -14.578890800476074
    4. '	self' → logprob: -15.328890800476074
    5. '(self' → logprob: -15.953890800476074
    6. '    ' → logprob: -16.32889175415039
    7. ' ' → logprob: -16.82889175415039
    8. '       ' → logprob: -17.82889175415039
    9. '  ' → logprob: -18.20389175415039
    10. '           ' → logprob: -18.20389175415039

Token 237: '.limit' (ID: 75191)
  Prédit: '.limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.limit' → logprob: -0.002255410421639681
    2. 'limit' → logprob: -6.127255439758301
    3. ' limit' → logprob: -10.6272554397583
    4. 'self' → logprob: -10.6272554397583
    5. '.self' → logprob: -11.8772554397583
    6. '_limit' → logprob: -12.1272554397583
    7. '.' → logprob: -12.6272554397583
    8. '-limit' → logprob: -13.1272554397583
    9. ' .' → logprob: -13.8772554397583
    10. '(limit' → logprob: -14.0022554397583

Token 238: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029751179739832878
    2. ' +' → logprob: -3.5297510623931885
    3. ',' → logprob: -15.52975082397461
    4. '+self' → logprob: -15.90475082397461
    5. '+,' → logprob: -16.15475082397461
    6. '+j' → logprob: -16.40475082397461
    7. '+i' → logprob: -16.90475082397461
    8. '   ' → logprob: -17.27975082397461
    9. '+
' → logprob: -17.40475082397461
    10. '1' → logprob: -17.77975082397461

Token 239: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043102685594931245
    2. ' ' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.250431060791016
    4. '```' → logprob: -17.000431060791016
    5. '  ' → logprob: -17.625431060791016
    6. ',' → logprob: -18.000431060791016
    7. '
' → logprob: -18.250431060791016
    8. ')' → logprob: -18.687931060791016
    9. '    ' → logprob: -18.812931060791016
    10. '

' → logprob: -19.312931060791016

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.6250057220459
    4. '```' → logprob: -19.5000057220459
    5. '  ' → logprob: -20.1250057220459
    6. '
' → logprob: -20.5000057220459
    7. ',' → logprob: -20.7500057220459
    8. '１' → logprob: -21.1875057220459
    9. ')' → logprob: -21.5625057220459
    10. '+' → logprob: -21.6875057220459

Token 241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011853814125061035
    2. ',i' → logprob: -4.5118536949157715
    3. ' ,' → logprob: -8.13685417175293
    4. ',j' → logprob: -8.26185417175293
    5. '               ' → logprob: -9.01185417175293
    6. '                   ' → logprob: -9.01185417175293
    7. '                ' → logprob: -12.63685417175293
    8. '                       ' → logprob: -13.13685417175293
    9. '```' → logprob: -14.13685417175293
    10. '                    ' → logprob: -14.13685417175293

Token 242: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4740913212299347
    2. 'i' → logprob: -0.9740912914276123
    3. '	i' → logprob: -11.724091529846191
    4. ')' → logprob: -12.849091529846191
    5. ' ' → logprob: -13.599091529846191
    6. ')i' → logprob: -13.599091529846191
    7. '   ' → logprob: -15.599091529846191
    8. '*i' → logprob: -15.724091529846191
    9. ' ' → logprob: -15.724091529846191
    10. ',i' → logprob: -16.349090576171875

Token 243: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05529904365539551
    2. '):
' → logprob: -2.9302990436553955
    3. '):
' → logprob: -8.805298805236816
    4. '*i' → logprob: -9.430298805236816
    5. ',i' → logprob: -9.680298805236816
    6. ')' → logprob: -10.180298805236816
    7. ' ):' → logprob: -10.805298805236816
    8. 'i' → logprob: -11.180298805236816
    9. '+i' → logprob: -11.180298805236816
    10. '):

' → logprob: -11.430298805236816

Token 244: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.16067931056022644
    2. 's' → logprob: -2.285679340362549
    3. ' sieve' → logprob: -3.160679340362549
    4. '                       ' → logprob: -5.660679340362549
    5. '               ' → logprob: -7.535679340362549
    6. '                    
' → logprob: -9.41067886352539
    7. '                           ' → logprob: -9.66067886352539
    8. '                  ' → logprob: -10.16067886352539
    9. '[s' → logprob: -10.78567886352539
    10. '                    ' → logprob: -10.78567886352539

Token 245: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47409793734550476
    2. ' sieve' → logprob: -0.9740979671478271
    3. '                   ' → logprob: -11.599098205566406
    4. '	s' → logprob: -12.849098205566406
    5. '               ' → logprob: -13.474098205566406
    6. '   ' → logprob: -13.724098205566406
    7. ' ' → logprob: -13.849098205566406
    8. 'sie' → logprob: -13.849098205566406
    9. ' s' → logprob: -14.349098205566406
    10. '                       ' → logprob: -14.599098205566406

Token 246: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.630610641877865e-06
    2. '[' → logprob: -12.000006675720215
    3. '[i' → logprob: -15.625006675720215
    4. ' [' → logprob: -16.3750057220459
    5. '```' → logprob: -17.1250057220459
    6. 'j' → logprob: -17.8750057220459
    7. '[js' → logprob: -17.8750057220459
    8. '[
' → logprob: -18.0000057220459
    9. '][' → logprob: -18.6250057220459
    10. '\[' → logprob: -19.2500057220459

Token 247: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001027331338264048
    2. ']=' → logprob: -7.1260271072387695
    3. ' ]' → logprob: -8.50102710723877
    4. '=' → logprob: -11.00102710723877
    5. ' =' → logprob: -12.87602710723877
    6. ')' → logprob: -16.251028060913086
    7. '=False' → logprob: -16.376028060913086
    8. ']
' → logprob: -16.751028060913086
    9. 'False' → logprob: -17.251028060913086
    10. ' ' → logprob: -17.626028060913086

Token 248: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07932154089212418
    2. ' =' → logprob: -2.5793216228485107
    3. ']' → logprob: -8.45432186126709
    4. '=False' → logprob: -8.70432186126709
    5. ']=' → logprob: -9.95432186126709
    6. 'False' → logprob: -12.57932186126709
    7. '=True' → logprob: -14.20432186126709
    8. ')' → logprob: -14.57932186126709
    9. ' False' → logprob: -15.07932186126709
    10. ' ]' → logprob: -15.70432186126709

Token 249: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0002613358374219388
    2. ' False' → logprob: -8.250261306762695
    3. '(False' → logprob: -18.250261306762695
    4. '=False' → logprob: -19.250261306762695
    5. '.False' → logprob: -21.500261306762695
    6. 'F' → logprob: -21.750261306762695
    7. 'false' → logprob: -21.875261306762695
    8. '   ' → logprob: -22.375261306762695
    9. 'Fal' → logprob: -23.000261306762695
    10. '_false' → logprob: -23.125261306762695

Token 250: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1455485224723816
    2. '
' → logprob: -2.0205485820770264
    3. 'return' → logprob: -6.770548343658447
    4. '        
' → logprob: -7.145548343658447
    5. '    
' → logprob: -7.520548343658447
    6. ' return' → logprob: -9.145548820495605
    7. '<|end|>' → logprob: -9.145548820495605
    8. '  
' → logprob: -9.395548820495605
    9. ' 
' → logprob: -10.895548820495605
    10. '   ' → logprob: -11.520548820495605

Token 251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014013137842994183
    2. ' return' → logprob: -10.000140190124512
    3. 'return' → logprob: -10.250140190124512
    4. '               ' → logprob: -11.250140190124512
    5. '        
' → logprob: -11.500140190124512
    6. '           ' → logprob: -12.125140190124512
    7. '   ' → logprob: -12.375140190124512
    8. '	' → logprob: -12.375140190124512
    9. '    
' → logprob: -12.500140190124512
    10. '
' → logprob: -12.500140190124512

Token 252: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028775110840797424
    2. ' return' → logprob: -6.252877712249756
    3. 'return' (adapté à ' return') → logprob: -7.002877712249756
    4. '   ' → logprob: -10.502877235412598
    5. '	return' → logprob: -11.752877235412598
    6. ' ' → logprob: -13.502877235412598
    7. '	' → logprob: -13.627877235412598
    8. '```' → logprob: -14.877877235412598
    9. ':return' → logprob: -15.002877235412598
    10. '        
' → logprob: -15.627877235412598

Token 253: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12692853808403015
    2. ' sieve' → logprob: -2.1269285678863525
    3. '[s' → logprob: -15.376928329467773
    4. 'sie' → logprob: -15.501928329467773
    5. 'se' → logprob: -17.376928329467773
    6. '	s' → logprob: -17.876928329467773
    7. '(s' → logprob: -18.626928329467773
    8. ' ' → logprob: -18.751928329467773
    9. '[' → logprob: -19.376928329467773
    10. 'self' → logprob: -19.376928329467773

Token 254: '
    
' (ID: 15698)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.7137925028800964
    2. '<|end|>' → logprob: -1.0887925624847412
    3. '   ' → logprob: -2.463792562484741
    4. '
' → logprob: -2.463792562484741
    5. '<|end|>' → logprob: -6.213792324066162
    6. '  
' → logprob: -7.213792324066162
    7. '        
' → logprob: -8.96379280090332
    8. ' 
' → logprob: -9.08879280090332
    9. '

' → logprob: -9.83879280090332
    10. '```' → logprob: -9.96379280090332

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6661747097969055
    2. 'def' → logprob: -1.0411746501922607
    3. '    
' → logprob: -2.0411746501922607
    4. '<|end|>' → logprob: -6.79117488861084
    5. ' def' → logprob: -6.91617488861084
    6. '
' → logprob: -7.66617488861084
    7. '  
' → logprob: -8.16617488861084
    8. '        
' → logprob: -8.79117488861084
    9. ' ' → logprob: -9.04117488861084
    10. '   
' → logprob: -9.41617488861084

Token 256: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.2948405128554441e-05
    2. ' def' → logprob: -11.37501335144043
    3. '    
' → logprob: -14.25001335144043
    4. '   ' → logprob: -14.75001335144043
    5. '
' → logprob: -15.00001335144043
    6. '        
' → logprob: -18.12501335144043
    7. 'de' → logprob: -18.25001335144043
    8. ' ' → logprob: -18.37501335144043
    9. '```' → logprob: -18.87501335144043
    10. '  
' → logprob: -19.00001335144043

Token 257: ' get' (ID: 717)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.14299623668193817
    2. 'is' → logprob: -2.017996311187744
    3. '__' → logprob: -8.767995834350586
    4. ' __' → logprob: -8.892995834350586
    5. ' ' → logprob: -10.642995834350586
    6. '  ' → logprob: -13.642995834350586
    7. '   ' → logprob: -13.767995834350586
    8. '	is' → logprob: -14.142995834350586
    9. ' get' → logprob: -15.392995834350586
    10. 'get' → logprob: -15.642995834350586

Token 258: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -0.002031180774793029
    2. '_next' → logprob: -6.627031326293945
    3. '_prime' → logprob: -7.627031326293945
    4. 'Pr' → logprob: -9.502031326293945
    5. 'pr' → logprob: -10.127031326293945
    6. ' primes' → logprob: -10.252031326293945
    7. '_max' → logprob: -10.627031326293945
    8. '_limit' → logprob: -10.877031326293945
    9. '_' → logprob: -12.252031326293945
    10. 's' → logprob: -12.377031326293945

Token 259: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.14436259865760803
    2. 'ime' → logprob: -2.019362688064575
    3. 'im' → logprob: -7.644362449645996
    4. '

' → logprob: -9.144362449645996
    5. '[' → logprob: -9.269362449645996
    6. '#' → logprob: -9.831862449645996
    7. '_' → logprob: -9.956862449645996
    8. 'omes' → logprob: -9.956862449645996
    9. '```' → logprob: -10.144362449645996
    10. '{' → logprob: -10.206862449645996

Token 260: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.7954958821064793e-05
    2. '(' → logprob: -11.125018119812012
    3. 'self' → logprob: -13.250018119812012
    4. ' (' → logprob: -14.000018119812012
    5. '(s' → logprob: -15.875018119812012
    6. '(
' → logprob: -16.250017166137695
    7. 's' → logprob: -16.375017166137695
    8. 'from' → logprob: -16.500017166137695
    9. '(sel' → logprob: -17.000017166137695
    10. 'up' → logprob: -18.000017166137695

Token 261: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29370546340942383
    2. '):' → logprob: -2.043705463409424
    3. ',' → logprob: -2.168705463409424
    4. 'self' → logprob: -5.043705463409424
    5. '):
' → logprob: -5.793705463409424
    6. '(self' → logprob: -6.918705463409424
    7. ' self' → logprob: -10.543704986572266
    8. '):
' → logprob: -10.668704986572266
    9. ',self' → logprob: -10.793704986572266
    10. ' )' → logprob: -11.293704986572266

Token 262: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.1782583391759545e-05
    2. '(' → logprob: -11.000031471252441
    3. 'self' → logprob: -11.500031471252441
    4. ' (' → logprob: -12.625031471252441
    5. '()' → logprob: -15.000031471252441
    6. '(s' → logprob: -15.375031471252441
    7. '(
' → logprob: -15.500031471252441
    8. '(se' → logprob: -15.500031471252441
    9. 's' → logprob: -15.625031471252441
    10. '(start' → logprob: -16.250032424926758

Token 263: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.224192813038826
    2. 'list' → logprob: -2.0991928577423096
    3. 'List' → logprob: -2.7241928577423096
    4. '[' → logprob: -5.4741926193237305
    5. '[int' → logprob: -6.2241926193237305
    6. 'Tuple' → logprob: -6.3491926193237305
    7. 'range' → logprob: -6.8491926193237305
    8. '[List' → logprob: -6.9741926193237305
    9. '[list' → logprob: -7.0991926193237305
    10. '[i' → logprob: -7.2241926193237305

Token 264: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.00012284684635233134
    2. '<int' → logprob: -9.250123023986816
    3. '(int' → logprob: -11.250123023986816
    4. 'int' → logprob: -11.375123023986816
    5. '[' → logprob: -13.625123023986816
    6. ':' → logprob: -14.375123023986816
    7. '[Int' → logprob: -15.875123023986816
    8. ':int' → logprob: -16.1251220703125
    9. '```' → logprob: -16.3751220703125
    10. ':
' → logprob: -16.3751220703125

Token 265: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04949529096484184
    2. '):
' → logprob: -3.049495220184326
    3. ':' → logprob: -7.549495220184326
    4. ']:' → logprob: -8.674495697021484
    5. '):
' → logprob: -9.174495697021484
    6. ')' → logprob: -9.799495697021484
    7. ' ):' → logprob: -11.424495697021484
    8. ':
' → logprob: -11.674495697021484
    9. ',' → logprob: -11.924495697021484
    10. '   ' → logprob: -12.424495697021484

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025838980451226234
    2. ' for' → logprob: -3.77583909034729
    3. ':' → logprob: -7.150838851928711
    4. '   ' → logprob: -7.400838851928711
    5. 'for' → logprob: -7.525838851928711
    6. '    ' → logprob: -8.775838851928711
    7. ':
' → logprob: -9.275838851928711
    8. '        
' → logprob: -9.275838851928711
    9. ' 
' → logprob: -9.775838851928711
    10. ' ' → logprob: -9.775838851928711

Token 267: ' return' (ID: 622)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0339689664542675
    2. ' for' → logprob: -3.533968925476074
    3. '       ' → logprob: -5.533968925476074
    4. 'return' (adapté à ' return') → logprob: -8.408968925476074
    5. '   ' → logprob: -10.783968925476074
    6. 'yield' → logprob: -11.408968925476074
    7. '	for' → logprob: -13.033968925476074
    8. 'i' → logprob: -13.658968925476074
    9. ' return' → logprob: -14.408968925476074
    10. ' ' → logprob: -15.158968925476074

Token 268: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00025311444187536836
    2. '(' → logprob: -9.125252723693848
    3. ' (' → logprob: -9.125252723693848
    4. '(x' → logprob: -10.625252723693848
    5. '(n' → logprob: -12.750252723693848
    6. '(k' → logprob: -13.000252723693848
    7. '(
' → logprob: -13.250252723693848
    8. 'i' → logprob: -13.875252723693848
    9. '(j' → logprob: -13.875252723693848
    10. '(idx' → logprob: -14.125252723693848

Token 269: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2948405128554441e-05
    2. 'idx' → logprob: -11.62501335144043
    3. ' i' → logprob: -13.50001335144043
    4. 'x' → logprob: -13.50001335144043
    5. 'num' → logprob: -14.25001335144043
    6. 'index' → logprob: -15.00001335144043
    7. '(i' → logprob: -16.87501335144043
    8. 'p' → logprob: -17.00001335144043
    9. 'n' → logprob: -18.37501335144043
    10. '	i' → logprob: -18.62501335144043

Token 270: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.018158959224820137
    2. 'for' → logprob: -4.018158912658691
    3. ' ' → logprob: -11.768158912658691
    4. '	for' → logprob: -14.393158912658691
    5. '
' → logprob: -14.518158912658691
    6. ' 
' → logprob: -16.393159866333008
    7. '   ' → logprob: -16.518159866333008
    8. '```' → logprob: -17.393159866333008
    9. '

' → logprob: -17.768159866333008
    10. '+' → logprob: -18.018159866333008

Token 271: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07891920208930969
    2. ' i' → logprob: -2.5789191722869873
    3. ',' → logprob: -10.828919410705566
    4. '	i' → logprob: -12.078919410705566
    5. 'range' → logprob: -13.328919410705566
    6. ',i' → logprob: -13.828919410705566
    7. ' in' → logprob: -15.078919410705566
    8. ' range' → logprob: -15.203919410705566
    9. 'in' → logprob: -15.328919410705566
    10. ' ' → logprob: -16.32891845703125

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09805278480052948
    2. ' in' → logprob: -2.598052740097046
    3. 'in' → logprob: -3.973052740097046
    4. 'is' → logprob: -9.348052978515625
    5. ' ,' → logprob: -10.598052978515625
    6. 'if' → logprob: -11.223052978515625
    7. 'i' → logprob: -11.348052978515625
    8. 'range' → logprob: -11.473052978515625
    9. ',i' → logprob: -12.223052978515625
    10. ',in' → logprob: -13.223052978515625

Token 273: ' prime' (ID: 9197)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.7015769481658936
    2. ' is' → logprob: -0.7015769481658936
    3. 'prime' → logprob: -4.951577186584473
    4. ' prime' → logprob: -6.701577186584473
    5. 'val' → logprob: -10.201577186584473
    6. ' val' → logprob: -10.576577186584473
    7. 'v' → logprob: -11.951577186584473
    8. '_is' → logprob: -12.826577186584473
    9. 'flag' → logprob: -12.826577186584473
    10. 'value' → logprob: -13.076577186584473

Token 274: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5759738087654114
    2. 'in' → logprob: -0.8259738087654114
    3. ',' → logprob: -10.450973510742188
    4. ' ' → logprob: -12.575973510742188
    5. '	in' → logprob: -14.575973510742188
    6. ' i' → logprob: -15.575973510742188
    7. 'In' → logprob: -15.700973510742188
    8. ' ' → logprob: -15.825973510742188
    9. 'is' → logprob: -15.825973510742188
    10. 'import' → logprob: -16.075973510742188

Token 275: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.07889099419116974
    2. ' enumerate' → logprob: -2.5788910388946533
    3. 'en' → logprob: -13.953890800476074
    4. 'enum' → logprob: -15.578890800476074
    5. '```' → logprob: -15.953890800476074
    6. ' in' → logprob: -16.82889175415039
    7. 'in' → logprob: -16.95389175415039
    8. 'enqueue' → logprob: -17.70389175415039
    9. 'Enumer' → logprob: -18.45389175415039
    10. 'import' → logprob: -18.45389175415039

Token 276: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.625001907348633
    3. 'self' → logprob: -14.125001907348633
    4. '(s' → logprob: -17.750001907348633
    5. ' (' → logprob: -18.000001907348633
    6. '(
' → logprob: -18.625001907348633
    7. ' self' → logprob: -18.750001907348633
    8. '[self' → logprob: -19.875001907348633
    9. '=self' → logprob: -20.000001907348633
    10. ')' → logprob: -20.625001907348633

Token 277: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -7.886803359724581e-05
    2. '.s' → logprob: -10.375079154968262
    3. '.' → logprob: -10.500079154968262
    4. '_s' → logprob: -11.375079154968262
    5. ' .' → logprob: -12.125079154968262
    6. 'self' → logprob: -14.125079154968262
    7. '       ' → logprob: -14.625079154968262
    8. '   ' → logprob: -14.750079154968262
    9. '.
' → logprob: -15.125079154968262
    10. 's' → logprob: -15.125079154968262

Token 278: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.451116051815916e-05
    2. '_s' → logprob: -10.875024795532227
    3. 'build' → logprob: -13.250024795532227
    4. ' sieve' → logprob: -14.375024795532227
    5. ')' → logprob: -14.625024795532227
    6. '[s' → logprob: -15.000024795532227
    7. ' ' → logprob: -15.250024795532227
    8. 'self' → logprob: -15.250024795532227
    9. '   ' → logprob: -15.375024795532227
    10. '       ' → logprob: -15.750024795532227

Token 279: 'ieve' (ID: 3703)
  Prédit: 'ive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -0.5828115940093994
    2. 've' → logprob: -0.8328115940093994
    3. 'eve' → logprob: -5.70781135559082
    4. 'ieve' → logprob: -6.70781135559082
    5. 'e' → logprob: -6.83281135559082
    6. '[' → logprob: -7.95781135559082
    7. 'if' → logprob: -8.20781135559082
    8. 's' → logprob: -8.70781135559082
    9. 'uve' → logprob: -8.95781135559082
    10. 't' → logprob: -9.45781135559082

Token 280: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024729516357183456
    2. 'if' → logprob: -3.7747294902801514
    3. ' if' → logprob: -6.5247297286987305
    4. ' )' → logprob: -11.39972972869873
    5. '           ' → logprob: -14.27472972869873
    6. '   ' → logprob: -14.39972972869873
    7. ')
' → logprob: -14.52472972869873
    8. '()' → logprob: -14.52472972869873
    9. '       ' → logprob: -14.52472972869873
    10. '        ' → logprob: -14.52472972869873

Token 281: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07892438024282455
    2. 'if' → logprob: -2.5789244174957275
    3. '       ' → logprob: -11.328924179077148
    4. '           ' → logprob: -11.703924179077148
    5. '        ' → logprob: -11.953924179077148
    6. '          ' → logprob: -13.203924179077148
    7. '   ' → logprob: -13.328924179077148
    8. '    ' → logprob: -14.078924179077148
    9. ',' → logprob: -14.078924179077148
    10. '            ' → logprob: -14.328924179077148

Token 282: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.014173386618494987
    2. ' prime' → logprob: -4.26417350769043
    3. 'pr' → logprob: -12.01417350769043
    4. '   ' → logprob: -13.26417350769043
    5. 'prim' → logprob: -14.13917350769043
    6. ' ' → logprob: -14.26417350769043
    7. '_prime' → logprob: -15.88917350769043
    8. 'primer' → logprob: -16.26417350769043
    9. '  ' → logprob: -16.26417350769043
    10. '
' → logprob: -16.51417350769043

Token 283: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003874166286550462
    2. ' )' → logprob: -7.875387191772461
    3. ' and' → logprob: -12.375387191772461
    4. ' if' → logprob: -13.375387191772461
    5. 'if' → logprob: -14.375387191772461
    6. 'and' → logprob: -14.625387191772461
    7. ')
' → logprob: -15.375387191772461
    8. ' ' → logprob: -16.12538719177246
    9. ')

' → logprob: -16.62538719177246
    10. '}' → logprob: -17.75038719177246

Token 284: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 285: ' Factor' (ID: 63743)
  Prédit: 'Prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Prime' → logprob: -0.9748003482818604
    2. 'Gold' → logprob: -1.0998003482818604
    3. ' Gold' → logprob: -1.8498003482818604
    4. ' Prime' → logprob: -2.7248003482818604
    5. 'Twin' → logprob: -4.224800109863281
    6. ' Twin' → logprob: -4.349800109863281
    7. 'Solution' → logprob: -4.724800109863281
    8. 'Palindrome' → logprob: -5.599800109863281
    9. ' Solution' → logprob: -6.224800109863281
    10. 'Number' → logprob: -6.474800109863281

Token 286: 'ization' (ID: 2860)
  Prédit: 'izer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -0.08017659187316895
    2. 'ization' → logprob: -2.580176591873169
    3. 'Counter' → logprob: -7.08017635345459
    4. 'iz' → logprob: -8.83017635345459
    5. 'ial' → logprob: -9.70517635345459
    6. 'Analyzer' → logprob: -9.83017635345459
    7. 'Iterator' → logprob: -10.20517635345459
    8. 'Generator' → logprob: -10.58017635345459
    9. '```' → logprob: -10.58017635345459
    10. 'er' → logprob: -10.83017635345459

Token 287: 'Engine' (ID: 7286)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25225502252578735
    2. ':
' → logprob: -1.5022549629211426
    3. '(' → logprob: -9.1272554397583
    4. 'Processor' → logprob: -9.6272554397583
    5. 'Helper' → logprob: -9.6272554397583
    6. 'Handler' → logprob: -11.5022554397583
    7. 'Util' → logprob: -11.7522554397583
    8. '():' → logprob: -11.7522554397583
    9. 'Solver' → logprob: -11.7522554397583
    10. 'Analyzer' → logprob: -12.1272554397583

Token 288: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01816597953438759
    2. ':
' → logprob: -4.0181660652160645
    3. ':def' → logprob: -12.018165588378906
    4. '(' → logprob: -12.643165588378906
    5. '(object' → logprob: -13.268165588378906
    6. ':

' → logprob: -13.643165588378906
    7. '   ' → logprob: -13.768165588378906
    8. ' :' → logprob: -13.893165588378906
    9. '():' → logprob: -14.893165588378906
    10. 'def' → logprob: -15.268165588378906

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020589066669344902
    2. ' def' → logprob: -3.8955891132354736
    3. 'def' → logprob: -10.020588874816895
    4. '	def' → logprob: -14.270588874816895
    5. '    
' → logprob: -14.520588874816895
    6. '(' → logprob: -14.895588874816895
    7. ':' → logprob: -15.645588874816895
    8. '(def' → logprob: -15.770588874816895
    9. '   ' → logprob: -15.770588874816895
    10. '
' → logprob: -16.02058982849121

Token 290: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.056796420365571976
    2. 'def' (adapté à ' def') → logprob: -3.0567963123321533
    3. '   ' → logprob: -4.806796550750732
    4. ' ' → logprob: -13.931796073913574
    5. '	def' → logprob: -15.181796073913574
    6. '  ' → logprob: -16.68179702758789
    7. 'de' → logprob: -16.80679702758789
    8. 'import' → logprob: -17.18179702758789
    9. ' de' → logprob: -17.80679702758789
    10. '    ' → logprob: -17.80679702758789

Token 291: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.01872878707945347
    2. ' def' → logprob: -4.018728733062744
    3. '__' → logprob: -7.893728733062744
    4. ' init' → logprob: -9.518729209899902
    5. 'def' → logprob: -9.643729209899902
    6. 'init' → logprob: -10.143729209899902
    7. '_init' → logprob: -10.893729209899902
    8. ' ' → logprob: -12.518729209899902
    9. ' _' → logprob: -12.893729209899902
    10. ' ' → logprob: -13.393729209899902

Token 292: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.8889261304575484e-06
    2. '_init' → logprob: -12.625003814697266
    3. ' init' → logprob: -15.375003814697266
    4. 'def' → logprob: -15.875003814697266
    5. '(init' → logprob: -17.125003814697266
    6. 'class' → logprob: -17.875003814697266
    7. '.init' → logprob: -18.250003814697266
    8. '```' → logprob: -18.375003814697266
    9. 'int' → logprob: -18.500003814697266
    10. 'in' → logprob: -18.875003814697266

Token 293: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11826343834400177
    2. '__(' → logprob: -2.2432634830474854
    3. ' (' → logprob: -5.618263244628906
    4. '(' → logprob: -6.743263244628906
    5. 'self' → logprob: -7.993263244628906
    6. '_(' → logprob: -8.868263244628906
    7. '__(
' → logprob: -10.118263244628906
    8. ',' → logprob: -10.243263244628906
    9. '__' → logprob: -11.243263244628906
    10. ' ' → logprob: -11.618263244628906

Token 294: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010950922733172774
    2. ' self' → logprob: -6.876095294952393
    3. ',' → logprob: -10.251094818115234
    4. '(self' → logprob: -10.626094818115234
    5. ',self' → logprob: -14.001094818115234
    6. '   ' → logprob: -14.376094818115234
    7. ')' → logprob: -14.626094818115234
    8. '
' → logprob: -14.876094818115234
    9. '       ' → logprob: -16.126094818115234
    10. '	self' → logprob: -16.626094818115234

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003532198315951973
    2. 'self' → logprob: -8.00035285949707
    3. ' ,' → logprob: -11.25035285949707
    4. '(self' → logprob: -13.00035285949707
    5. ',self' → logprob: -14.12535285949707
    6. ',
' → logprob: -14.12535285949707
    7. ' self' → logprob: -14.75035285949707
    8. ')' → logprob: -15.75035285949707
    9. '<|end|>' → logprob: -16.25035285949707
    10. ' (' → logprob: -16.37535285949707

Token 296: ' prime' (ID: 9197)
  Prédit: ' limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -1.3656644821166992
    2. ' sieve' → logprob: -1.3656644821166992
    3. 'limit' → logprob: -1.6156644821166992
    4. ' primes' → logprob: -1.9906644821166992
    5. ' max' → logprob: -3.240664482116699
    6. 'max' → logprob: -3.240664482116699
    7. ' prime' → logprob: -3.740664482116699
    8. 'pr' → logprob: -3.990664482116699
    9. 'prime' → logprob: -3.990664482116699
    10. 's' → logprob: -4.240664482116699

Token 297: '_limit' (ID: 34361)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.062159039080142975
    2. '_s' → logprob: -2.8121590614318848
    3. 'S' → logprob: -9.312158584594727
    4. '_list' → logprob: -9.937158584594727
    5. '_limit' → logprob: -11.562158584594727
    6. ' sieve' → logprob: -11.937158584594727
    7. '_set' → logprob: -12.312158584594727
    8. 'es' → logprob: -12.562158584594727
    9. ':' → logprob: -12.562158584594727
    10. '_pr' → logprob: -12.687158584594727

Token 298: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002092326758429408
    2. '):' → logprob: -6.752092361450195
    3. ':int' → logprob: -7.127092361450195
    4. '=' → logprob: -9.252092361450195
    5. '):
' → logprob: -11.127092361450195
    6. ' :' → logprob: -12.002092361450195
    7. '=int' → logprob: -14.252092361450195
    8. 'int' → logprob: -14.877092361450195
    9. ' ):' → logprob: -15.127092361450195
    10. ' =' → logprob: -15.877092361450195

Token 299: ' int' (ID: 677)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5289517045021057
    2. '10' → logprob: -1.278951644897461
    3. 'int' → logprob: -2.528951644897461
    4. ' ' → logprob: -3.278951644897461
    5. ' int' → logprob: -5.278951644897461
    6. '500' → logprob: -5.528951644897461
    7. ',' → logprob: -6.653951644897461
    8. '0' → logprob: -7.028951644897461
    9. 'self' → logprob: -7.528951644897461
    10. 'math' → logprob: -7.528951644897461

Token 300: ' =' (ID: 314)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20185630023479462
    2. '):
' → logprob: -1.701856255531311
    3. ',' → logprob: -8.45185661315918
    4. '):
' → logprob: -8.70185661315918
    5. ':' → logprob: -10.45185661315918
    6. '   ' → logprob: -10.82685661315918
    7. '       ' → logprob: -12.07685661315918
    8. ')' → logprob: -12.45185661315918
    9. ' ):' → logprob: -12.70185661315918
    10. ' ):
' → logprob: -14.20185661315918

Token 301: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.07956862449645996
    2. '10' → logprob: -2.57956862449646
    3. '500' → logprob: -7.579568862915039
    4. ' ' → logprob: -9.704568862915039
    5. '316' → logprob: -9.704568862915039
    6. '320' → logprob: -10.704568862915039
    7. '200' → logprob: -11.954568862915039
    8. 'int' → logprob: -12.329568862915039
    9. '300' → logprob: -12.454568862915039
    10. '2' → logprob: -13.204568862915039

Token 302: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.14538928866386414
    2. '10' → logprob: -2.0203893184661865
    3. '500' → logprob: -6.270389080047607
    4. '316' → logprob: -7.520389080047607
    5. '320' → logprob: -8.645389556884766
    6. '200' → logprob: -10.270389556884766
    7. '400' → logprob: -11.145389556884766
    8. '300' → logprob: -11.395389556884766
    9. ' ' → logprob: -11.895389556884766
    10. '1' → logprob: -12.145389556884766

Token 303: '**' (ID: 410)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.04635000228881836
    2. '7' → logprob: -3.2963500022888184
    3. '**' → logprob: -4.796350002288818
    4. '_' → logprob: -11.796350479125977
    5. '8' → logprob: -12.921350479125977
    6. '000' → logprob: -13.671350479125977
    7. '5' → logprob: -13.921350479125977
    8. '06' → logprob: -13.921350479125977
    9. ' **' → logprob: -14.046350479125977
    10. '07' → logprob: -14.671350479125977

Token 304: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.04320494085550308
    2. '7' → logprob: -3.1682050228118896
    3. '5' → logprob: -8.543205261230469
    4. '8' → logprob: -11.668205261230469
    5. '```' → logprob: -13.793205261230469
    6. '9' → logprob: -14.918205261230469
    7. '}' → logprob: -15.730705261230469
    8. '``' → logprob: -15.855705261230469
    9. '**' → logprob: -16.04320526123047
    10. '

' → logprob: -16.23070526123047

Token 305: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12705515325069427
    2. '):
' → logprob: -2.1270551681518555
    3. ')' → logprob: -9.377055168151855
    4. '):
' → logprob: -10.627055168151855
    5. ',' → logprob: -11.502055168151855
    6. ':' → logprob: -12.877055168151855
    7. '   ' → logprob: -13.002055168151855
    8. ' ):' → logprob: -13.127055168151855
    9. '       ' → logprob: -14.502055168151855
    10. ' ):
' → logprob: -15.002055168151855

Token 306: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.983476436696947e-05
    2. ':' → logprob: -10.375089645385742
    3. ',' → logprob: -10.750089645385742
    4. ' self' → logprob: -11.000089645385742
    5. 'self' → logprob: -11.625089645385742
    6. '   ' → logprob: -12.250089645385742
    7. '):
' → logprob: -12.500089645385742
    8. ':
' → logprob: -14.375089645385742
    9. '):' → logprob: -14.625089645385742
    10. '      ' → logprob: -14.625089645385742

Token 307: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.21573111414909363
    2. ' self' → logprob: -2.215731143951416
    3. '       ' → logprob: -2.465731143951416
    4. '   ' → logprob: -10.590730667114258
    5. '	self' → logprob: -13.965730667114258
    6. 'super' → logprob: -14.590730667114258
    7. ' ' → logprob: -14.715730667114258
    8. '      ' → logprob: -16.215730667114258
    9. '(self' → logprob: -16.340730667114258
    10. 'def' → logprob: -16.465730667114258

Token 308: '.pr' (ID: 27292)
  Prédit: '.pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pr' → logprob: -0.04954610764980316
    2. '.s' → logprob: -3.049546003341675
    3. '.' → logprob: -7.049546241760254
    4. ' .' → logprob: -10.549546241760254
    5. '.limit' → logprob: -10.799546241760254
    6. 'prime' → logprob: -11.424546241760254
    7. '._' → logprob: -11.674546241760254
    8. 'pr' → logprob: -12.049546241760254
    9. '.p' → logprob: -12.174546241760254
    10. 's' → logprob: -12.799546241760254

Token 309: 'ime' (ID: 642)
  Prédit: 'ime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -4.3226136767771095e-05
    2. 'imes' → logprob: -11.000042915344238
    3. '   ' → logprob: -11.250042915344238
    4. 'me' → logprob: -12.125042915344238
    5. 'im' → logprob: -13.250042915344238
    6. 'e' → logprob: -14.125042915344238
    7. 'i' → logprob: -14.375042915344238
    8. 'ine' → logprob: -14.750042915344238
    9. ' ime' → logprob: -14.750042915344238
    10. 'prime' → logprob: -14.750042915344238

Token 310: '_s' (ID: 1278)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.38416576385498047
    2. 's' → logprob: -1.6341657638549805
    3. '_s' → logprob: -2.1341657638549805
    4. 'limit' → logprob: -5.3841657638549805
    5. 'S' → logprob: -7.8841657638549805
    6. 'Limit' → logprob: -8.63416576385498
    7. '_list' → logprob: -8.75916576385498
    8. '_limits' → logprob: -9.25916576385498
    9. 'es' → logprob: -9.50916576385498
    10. '_generator' → logprob: -11.13416576385498

Token 311: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.00035691517405211926
    2. 'eve' → logprob: -9.500356674194336
    3. '_' → logprob: -9.875356674194336
    4. 'ieves' → logprob: -10.000356674194336
    5. 'iev' → logprob: -10.625356674194336
    6. 'IEVE' → logprob: -11.125356674194336
    7. '   ' → logprob: -11.125356674194336
    8. '``' → logprob: -11.375356674194336
    9. '```' → logprob: -11.500356674194336
    10. 'ive' → logprob: -11.500356674194336

Token 312: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192928314208984
    2. '=' → logprob: -1.5019292831420898
    3. ' ' → logprob: -16.001930236816406
    4. ':' → logprob: -17.001930236816406
    5. ' =
' → logprob: -17.501930236816406
    6. '  ' → logprob: -18.501930236816406
    7. '=
' → logprob: -19.001930236816406
    8. '=

' → logprob: -19.126930236816406
    9. '   ' → logprob: -19.251930236816406
    10. '=None' → logprob: -19.626930236816406

Token 313: ' Prime' (ID: 20134)
  Prédit: 'Prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Prime' → logprob: -0.20141343772411346
    2. ' Prime' → logprob: -1.7014133930206299
    3. ' prime' → logprob: -17.076414108276367
    4. 'prime' → logprob: -18.201414108276367
    5. '_prime' → logprob: -18.826414108276367
    6. 'Prim' → logprob: -20.576414108276367
    7. 'Pr' → logprob: -20.951414108276367
    8. 'Primary' → logprob: -21.701414108276367
    9. 'Primer' → logprob: -21.826414108276367
    10. 'Primitive' → logprob: -21.951414108276367

Token 314: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -5.512236498361744e-07
    2. ' S' → logprob: -15.000000953674316
    3. 's' → logprob: -16.0
    4. 'Prime' → logprob: -17.75
    5. 'Sie' → logprob: -18.125
    6. '
' → logprob: -18.125
    7. '	S' → logprob: -18.375
    8. '_S' → logprob: -18.5
    9. '```' → logprob: -18.5625
    10. ' sieve' → logprob: -18.625

Token 315: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.000399091251892969
    2. 'eve' → logprob: -8.375398635864258
    3. 'ive' → logprob: -9.000398635864258
    4. 'S' → logprob: -11.500398635864258
    5. 'e' → logprob: -12.000398635864258
    6. 's' → logprob: -12.125398635864258
    7. 'Prime' → logprob: -12.875398635864258
    8. 't' → logprob: -13.125398635864258
    9. 'ieves' → logprob: -13.125398635864258
    10. 'erve' → logprob: -13.125398635864258

Token 316: '(pr' (ID: 38401)
  Prédit: '(pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.375001907348633
    3. 'prime' → logprob: -15.875001907348633
    4. '(
' → logprob: -16.750001907348633
    5. '(p' → logprob: -17.250001907348633
    6. '(pre' → logprob: -19.000001907348633
    7. '_prime' → logprob: -19.125001907348633
    8. ' prime' → logprob: -20.125001907348633
    9. '(pi' → logprob: -20.125001907348633
    10. '(primary' → logprob: -20.500001907348633

Token 317: 'ime' (ID: 642)
  Prédit: 'ime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.00012821101699955761
    2. 'e' → logprob: -9.625127792358398
    3. 'me' → logprob: -11.000127792358398
    4. '   ' → logprob: -11.625127792358398
    5. 'ine' → logprob: -11.875127792358398
    6. '```' → logprob: -12.125127792358398
    7. 'im' → logprob: -12.625127792358398
    8. '
' → logprob: -13.000127792358398
    9. 'prime' → logprob: -13.562627792358398
    10. 'i' → logprob: -13.812627792358398

Token 318: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -2.117345684382599e-05
    2. 'limit' → logprob: -10.875020980834961
    3. '_' → logprob: -14.500020980834961
    4. '_l' → logprob: -14.750020980834961
    5. '_lim' → logprob: -15.250020980834961
    6. '_LIMIT' → logprob: -15.500020980834961
    7. '_limits' → logprob: -15.750020980834961
    8. '
' → logprob: -15.875020980834961
    9. 'Limit' → logprob: -16.25002098083496
    10. '(limit' → logprob: -16.50002098083496

Token 319: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4881879400927573e-05
    2. ')
' → logprob: -10.375035285949707
    3. '       ' → logprob: -13.000035285949707
    4. ' )' → logprob: -14.125035285949707
    5. ')

' → logprob: -15.375035285949707
    6. '<|end|>' → logprob: -15.875035285949707
    7. '   ' → logprob: -16.12503433227539
    8. ').' → logprob: -16.25003433227539
    9. '),' → logprob: -17.37503433227539
    10. ')
' → logprob: -17.50003433227539

Token 320: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43533384799957275
    2. '
' → logprob: -1.8103338479995728
    3. '    
' → logprob: -2.435333728790283
    4. '<|end|>' → logprob: -2.435333728790283
    5. 'def' → logprob: -4.685333728790283
    6. '       ' → logprob: -6.185333728790283
    7. ' def' → logprob: -6.560333728790283
    8. '<|end|>' → logprob: -7.935333728790283
    9. '  
' → logprob: -8.060334205627441
    10. '        
' → logprob: -8.185334205627441

Token 321: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0003981376066803932
    2. ' self' → logprob: -8.750397682189941
    3. '       ' → logprob: -9.125397682189941
    4. 'def' → logprob: -9.125397682189941
    5. 'from' → logprob: -12.500397682189941
    6. '        

' → logprob: -12.500397682189941
    7. '
' → logprob: -12.625397682189941
    8. '   ' → logprob: -13.000397682189941
    9. '        
' → logprob: -13.750397682189941
    10. '	self' → logprob: -14.000397682189941

Token 322: '.pr' (ID: 27292)
  Prédit: '.pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pr' → logprob: -0.39015722274780273
    2. '._' → logprob: -1.1401572227478027
    3. 'pr' → logprob: -6.640157222747803
    4. '_pr' → logprob: -7.140157222747803
    5. '.cache' → logprob: -7.390157222747803
    6. ' .' → logprob: -8.515157699584961
    7. '_cache' → logprob: -9.265157699584961
    8. '.' → logprob: -10.140157699584961
    9. '.f' → logprob: -10.390157699584961
    10. '.cached' → logprob: -10.515157699584961

Token 323: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.6344120502471924
    2. 'ime' → logprob: -0.7594120502471924
    3. 'im' → logprob: -7.009411811828613
    4. 'e' → logprob: -8.384411811828613
    5. 'ef' → logprob: -9.134411811828613
    6. 'me' → logprob: -9.571911811828613
    7. 'es' → logprob: -10.134411811828613
    8. 'imed' → logprob: -10.696911811828613
    9. '   ' → logprob: -11.009411811828613
    10. 'omes' → logprob: -11.071911811828613

Token 324: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009774032980203629
    2. '=' → logprob: -4.634774208068848
    3. ':' → logprob: -11.134774208068848
    4. ',' → logprob: -13.134774208068848
    5. ' ' → logprob: -14.634774208068848
    6. '=list' → logprob: -15.009774208068848
    7. '_iter' → logprob: -15.634774208068848
    8. '_list' → logprob: -16.13477325439453
    9. 'list' → logprob: -16.38477325439453
    10. ')' → logprob: -16.75977325439453

Token 325: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -7.553032628493384e-05
    2. ' list' → logprob: -9.500075340270996
    3. 'tuple' → logprob: -14.375075340270996
    4. 'self' → logprob: -16.875076293945312
    5. 'set' → logprob: -18.250076293945312
    6. '   ' → logprob: -18.875076293945312
    7. 'sorted' → logprob: -19.250076293945312
    8. '[list' → logprob: -19.375076293945312
    9. '[' → logprob: -19.625076293945312
    10. '[]' → logprob: -19.875076293945312

Token 326: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004360334132798016
    2. '(' → logprob: -7.750435829162598
    3. 'self' → logprob: -12.375435829162598
    4. '(
' → logprob: -13.750435829162598
    5. '()' → logprob: -17.750436782836914
    6. '(

' → logprob: -18.375436782836914
    7. '[self' → logprob: -18.500436782836914
    8. '(pr' → logprob: -18.625436782836914
    9. ' (' → logprob: -18.750436782836914
    10. ' self' → logprob: -19.125436782836914

Token 327: '.pr' (ID: 27292)
  Prédit: '.pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pr' → logprob: -0.0002625278721097857
    2. 'prime' → logprob: -8.625262260437012
    3. '.' → logprob: -9.750262260437012
    4. ' .' → logprob: -11.000262260437012
    5. '_prime' → logprob: -12.875262260437012
    6. ').' → logprob: -14.250262260437012
    7. '.p' → logprob: -14.375262260437012
    8. 's' → logprob: -14.375262260437012
    9. '.
' → logprob: -14.750262260437012
    10. '.s' → logprob: -14.875262260437012

Token 328: 'ime' (ID: 642)
  Prédit: 'ime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.000377049611415714
    2. 'imes' → logprob: -8.87537670135498
    3. 'prime' → logprob: -9.00037670135498
    4. '   ' → logprob: -11.06287670135498
    5. '
' → logprob: -11.81287670135498
    6. 'име' → logprob: -12.00037670135498
    7. 'me' → logprob: -12.25037670135498
    8. 'ine' → logprob: -12.31287670135498
    9. '_' → logprob: -12.31287670135498
    10. '...' → logprob: -12.31287670135498

Token 329: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0011827271664515138
    2. 's' → logprob: -6.751182556152344
    3. 'S' → logprob: -12.001182556152344
    4. '_' → logprob: -13.626182556152344
    5. ')' → logprob: -13.751182556152344
    6. ' sieve' → logprob: -13.751182556152344
    7. 'e' → logprob: -15.376182556152344
    8. '
' → logprob: -15.376182556152344
    9. '   ' → logprob: -15.438682556152344
    10. 'get' → logprob: -15.938682556152344

Token 330: 'ieve' (ID: 3703)
  Prédit: 'ieve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieve' → logprob: -0.6913274526596069
    2. 'ive' → logprob: -0.9413274526596069
    3. 'eve' → logprob: -2.6913275718688965
    4. 've' → logprob: -3.5663275718688965
    5. 'e' → logprob: -4.8163275718688965
    6. 's' → logprob: -5.9413275718688965
    7. ' sieve' → logprob: -8.191327095031738
    8. '```' → logprob: -8.816327095031738
    9. '_' → logprob: -9.066327095031738
    10. '   ' → logprob: -9.066327095031738

Token 331: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -2.696889623621246e-06
    2. '.' → logprob: -13.62500286102295
    3. ' .' → logprob: -13.75000286102295
    4. 'get' → logprob: -15.12500286102295
    5. ').' → logprob: -17.125001907348633
    6. '().' → logprob: -20.250001907348633
    7. '`.' → logprob: -20.375001907348633
    8. '
' → logprob: -20.875001907348633
    9. '   ' → logprob: -21.000001907348633
    10. '.
' → logprob: -21.125001907348633

Token 332: '_pr' (ID: 18177)
  Prédit: '_pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pr' → logprob: -6.869017852295656e-06
    2. 'pr' → logprob: -13.000006675720215
    3. 's' → logprob: -13.250006675720215
    4. '_' → logprob: -13.250006675720215
    5. ')_' → logprob: -15.375006675720215
    6. '(_' → logprob: -15.500006675720215
    7. ')' → logprob: -16.12500762939453
    8. ' _' → logprob: -16.25000762939453
    9. '```' → logprob: -16.87500762939453
    10. '"_' → logprob: -17.25000762939453

Token 333: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.0002582402084954083
    2. 'mes' → logprob: -9.625258445739746
    3. 'es' → logprob: -10.875258445739746
    4. 'ime' → logprob: -10.875258445739746
    5. 'omes' → logprob: -11.312758445739746
    6. 'r' → logprob: -11.375258445739746
    7. '```' → logprob: -11.500258445739746
    8. '
' → logprob: -11.812758445739746
    9. '   ' → logprob: -11.937758445739746
    10. 'ines' → logprob: -12.000258445739746

Token 334: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.001974192215129733
    2. '()' → logprob: -6.251974105834961
    3. ')' → logprob: -10.251974105834961
    4. ' ())' → logprob: -11.626974105834961
    5. '())
' → logprob: -14.001974105834961
    6. '();)' → logprob: -15.501974105834961
    7. '()
' → logprob: -16.00197410583496
    8. '());' → logprob: -16.75197410583496
    9. '()))' → logprob: -16.75197410583496
    10. '()]' → logprob: -17.37697410583496

Token 335: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40899696946144104
    2. '    
' → logprob: -1.4089969396591187
    3. '   ' → logprob: -2.408997058868408
    4. '<|end|>' → logprob: -7.908997058868408
    5. 'def' → logprob: -8.03399658203125
    6. '  
' → logprob: -8.53399658203125
    7. '        
' → logprob: -8.78399658203125
    8. '   
' → logprob: -9.28399658203125
    9. '```' → logprob: -9.78399658203125
    10. ' 
' → logprob: -9.78399658203125

Token 336: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02723679505288601
    2. 'def' → logprob: -4.0272369384765625
    3. '
' → logprob: -5.0272369384765625
    4. ' def' → logprob: -6.0272369384765625
    5. '    
' → logprob: -9.527236938476562
    6. '

' → logprob: -13.902236938476562
    7. '        
' → logprob: -14.027236938476562
    8. ' ' → logprob: -14.402236938476562
    9. '	def' → logprob: -14.652236938476562
    10. ' 
' → logprob: -15.027236938476562

Token 337: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.56102097814437e-05
    2. ' def' → logprob: -10.000045776367188
    3. 'from' → logprob: -15.625045776367188
    4. '   ' → logprob: -17.375045776367188
    5. 'import' → logprob: -20.750045776367188
    6. 'class' → logprob: -21.250045776367188
    7. '	def' → logprob: -21.250045776367188
    8. ' ' → logprob: -21.875045776367188
    9. '
' → logprob: -21.875045776367188
    10. 'de' → logprob: -22.250045776367188

Token 338: ' factor' (ID: 12332)
  Prédit: ' factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factor' → logprob: -0.4655609726905823
    2. 'factor' → logprob: -1.0905609130859375
    3. ' prime' → logprob: -3.5905609130859375
    4. 'prime' → logprob: -4.8405609130859375
    5. ' get' → logprob: -8.090560913085938
    6. '_factor' → logprob: -8.215560913085938
    7. 'get' → logprob: -10.715560913085938
    8. ' find' → logprob: -10.965560913085938
    9. ' trial' → logprob: -11.340560913085938
    10. ' factorial' → logprob: -11.590560913085938

Token 339: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.07562357932329178
    2. '(self' → logprob: -2.7006235122680664
    3. '(' → logprob: -6.075623512268066
    4. '_' → logprob: -6.700623512268066
    5. '(
' → logprob: -7.325623512268066
    6. 'ialize' → logprob: -7.575623512268066
    7. '(int' → logprob: -8.325623512268066
    8. '   ' → logprob: -9.200623512268066
    9. '```' → logprob: -9.575623512268066
    10. 'def' → logprob: -9.700623512268066

Token 340: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00026407750556245446
    2. '(' → logprob: -8.250264167785645
    3. '(
' → logprob: -13.000264167785645
    4. 'self' → logprob: -15.000264167785645
    5. ' (' → logprob: -15.125264167785645
    6. '(s' → logprob: -17.375263214111328
    7. '(sel' → logprob: -18.125263214111328
    8. ' self' → logprob: -19.125263214111328
    9. '(Self' → logprob: -19.250263214111328
    10. '(

' → logprob: -19.375263214111328

Token 341: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005348193924874067
    2. ' (' → logprob: -5.630348205566406
    3. '(' → logprob: -6.630348205566406
    4. 'self' → logprob: -8.255348205566406
    5. ',' → logprob: -9.630348205566406
    6. ')' → logprob: -9.880348205566406
    7. ' self' → logprob: -10.380348205566406
    8. '(
' → logprob: -11.880348205566406
    9. ')(' → logprob: -12.130348205566406
    10. '(n' → logprob: -13.005348205566406

Token 342: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.499394029378891
    2. ' n' → logprob: -0.9993940591812134
    3. 'number' → logprob: -4.374393939971924
    4. ' number' → logprob: -4.999393939971924
    5. 'self' → logprob: -5.499393939971924
    6. ' self' → logprob: -7.124393939971924
    7. 'num' → logprob: -7.374393939971924
    8. ' num' → logprob: -9.749394416809082
    9. 'value' → logprob: -10.374394416809082
    10. ' value' → logprob: -10.874394416809082

Token 343: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006274536717683077
    2. '):' → logprob: -5.131274700164795
    3. ')' → logprob: -8.506274223327637
    4. ' ):' → logprob: -10.006274223327637
    5. ' :' → logprob: -10.131274223327637
    6. ':int' → logprob: -10.381274223327637
    7. '):
' → logprob: -10.631274223327637
    8. ' )' → logprob: -13.256274223327637
    9. '   ' → logprob: -15.006274223327637
    10. ' ' → logprob: -15.006274223327637

Token 344: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10024570673704147
    2. ' int' → logprob: -2.350245714187622
    3. ')' → logprob: -10.225245475769043
    4. ' )' → logprob: -13.725245475769043
    5. ':int' → logprob: -14.850245475769043
    6. '(int' → logprob: -14.975245475769043
    7. ' ' → logprob: -14.975245475769043
    8. '   ' → logprob: -15.350245475769043
    9. '[int' → logprob: -16.72524642944336
    10. '<int' → logprob: -16.97524642944336

Token 345: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.2576454335358e-05
    2. '):' → logprob: -9.625092506408691
    3. ' )' → logprob: -10.625092506408691
    4. ':' → logprob: -13.500092506408691
    5. '):
' → logprob: -14.500092506408691
    6. '   ' → logprob: -15.875092506408691
    7. '):
' → logprob: -17.000093460083008
    8. ')->' → logprob: -17.000093460083008
    9. ' ):' → logprob: -18.125093460083008
    10. '`)' → logprob: -18.500093460083008

Token 346: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037580362986773252
    2. ' ->' → logprob: -6.378757953643799
    3. '->' → logprob: -6.503757953643799
    4. '(' → logprob: -8.128758430480957
    5. ' :' → logprob: -9.003758430480957
    6. ':
' → logprob: -10.128758430480957
    7. ')' → logprob: -10.128758430480957
    8. '():' → logprob: -11.128758430480957
    9. '   ' → logprob: -11.503758430480957
    10. ':int' → logprob: -11.878758430480957

Token 347: ' Dict' (ID: 55179)
  Prédit: ' Dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Dict' → logprob: -0.5247061252593994
    2. 'Dict' → logprob: -0.8997061252593994
    3. ' Iterator' → logprob: -7.64970588684082
    4. 'List' → logprob: -8.27470588684082
    5. 'Iterator' → logprob: -8.52470588684082
    6. ' list' → logprob: -8.77470588684082
    7. ' Tuple' → logprob: -8.89970588684082
    8. ' dict' → logprob: -9.27470588684082
    9. 'Tuple' → logprob: -9.52470588684082
    10. 'dict' → logprob: -9.64970588684082

Token 348: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -8.537868779967539e-06
    2. 'int' → logprob: -11.750008583068848
    3. '[' → logprob: -15.375008583068848
    4. '<int' → logprob: -15.750008583068848
    5. '[in' → logprob: -16.37500762939453
    6. '[i' → logprob: -17.37500762939453
    7. '[str' → logprob: -17.62500762939453
    8. '[
' → logprob: -18.12500762939453
    9. '[Int' → logprob: -18.37500762939453
    10. '(int' → logprob: -18.50000762939453

Token 349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002843983471393585
    2. ',int' → logprob: -5.877843856811523
    3. ' ,' → logprob: -10.502843856811523
    4. 'int' → logprob: -11.502843856811523
    5. ',
' → logprob: -14.127843856811523
    6. '[int' → logprob: -15.127843856811523
    7. ']int' → logprob: -15.502843856811523
    8. '   ' → logprob: -16.252843856811523
    9. ':int' → logprob: -16.252843856811523
    10. ' int' → logprob: -17.502843856811523

Token 350: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.796184723294573e-06
    2. ' int' → logprob: -12.250005722045898
    3. '[int' → logprob: -14.875005722045898
    4. '   ' → logprob: -15.250005722045898
    5. '```' → logprob: -16.1250057220459
    6. '	int' → logprob: -16.2500057220459
    7. ']int' → logprob: -16.5000057220459
    8. '...' → logprob: -16.8750057220459
    9. ':int' → logprob: -17.5000057220459
    10. '(int' → logprob: -17.8750057220459

Token 351: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0022919215261936188
    2. ']:
' → logprob: -6.127292156219482
    3. ']' → logprob: -9.627291679382324
    4. '):' → logprob: -10.752291679382324
    5. ']:
' → logprob: -11.127291679382324
    6. ':' → logprob: -12.627291679382324
    7. ']:

' → logprob: -14.502291679382324
    8. '):
' → logprob: -15.252291679382324
    9. '}:' → logprob: -15.627291679382324
    10. '>:' → logprob: -15.752291679382324

Token 352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00025073037249967456
    2. ' factors' → logprob: -9.000250816345215
    3. 'factor' → logprob: -9.375250816345215
    4. '   ' → logprob: -10.875250816345215
    5. 'f' → logprob: -12.125250816345215
    6. ' factor' → logprob: -12.375250816345215
    7. 'fact' → logprob: -12.500250816345215
    8. '```' → logprob: -12.500250816345215
    9. 'result' → logprob: -13.125250816345215
    10. '      ' → logprob: -14.375250816345215

Token 353: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.08062241971492767
    2. '       ' → logprob: -2.580622434616089
    3. ' factors' → logprob: -6.45562219619751
    4. 'result' → logprob: -9.205622673034668
    5. 'factor' → logprob: -10.080622673034668
    6. 'fact' → logprob: -12.580622673034668
    7. 'prime' → logprob: -12.830622673034668
    8. 'facts' → logprob: -12.955622673034668
    9. '   ' → logprob: -13.080622673034668
    10. 'n' → logprob: -13.330622673034668

Token 354: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519320547580719
    2. '=' → logprob: -1.5019320249557495
    3. '={}' → logprob: -13.501932144165039
    4. '   ' → logprob: -14.001932144165039
    5. ' ' → logprob: -15.251932144165039
    6. ')' → logprob: -15.751932144165039
    7. '[' → logprob: -16.12693214416504
    8. ':' → logprob: -16.50193214416504
    9. ',' → logprob: -16.87693214416504
    10. ']' → logprob: -17.25193214416504

Token 355: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -1.3425219549390022e-05
    2. '{}
' → logprob: -11.25001335144043
    3. ' {}' → logprob: -15.50001335144043
    4. 'dict' → logprob: -16.00001335144043
    5. '{}

' → logprob: -17.12501335144043
    6. '{' → logprob: -18.75001335144043
    7. '{})' → logprob: -19.62501335144043
    8. '{}\' → logprob: -20.00001335144043
    9. '={}' → logprob: -20.62501335144043
    10. 'default' → logprob: -21.25001335144043

Token 356: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017913209740072489
    2. '        
' → logprob: -7.376791477203369
    3. ' i' → logprob: -8.501791000366211
    4. 'n' → logprob: -8.626791000366211
    5. '   ' → logprob: -8.626791000366211
    6. '        ' → logprob: -8.626791000366211
    7. ' n' → logprob: -9.626791000366211
    8. ' ' → logprob: -9.876791000366211
    9. 'i' → logprob: -9.876791000366211
    10. '    ' → logprob: -10.251791000366211

Token 357: ' remaining' (ID: 15448)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.7443792819976807
    2. 'num' → logprob: -0.9943792819976807
    3. '       ' → logprob: -2.9943792819976807
    4. ' temp' → logprob: -3.6193792819976807
    5. ' remainder' → logprob: -3.7443792819976807
    6. 'for' → logprob: -3.8693792819976807
    7. ' for' → logprob: -4.619379043579102
    8. 'remaining' (adapté à ' remaining') → logprob: -4.869379043579102
    9. ' num' → logprob: -5.369379043579102
    10. 'x' → logprob: -5.619379043579102

Token 358: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008627933450043201
    2. '=' → logprob: -4.758627891540527
    3. '=n' → logprob: -11.508627891540527
    4. ' ' → logprob: -14.008627891540527
    5. '   ' → logprob: -14.258627891540527
    6. ',' → logprob: -14.258627891540527
    7. '        ' → logprob: -15.258627891540527
    8. '    ' → logprob: -15.633627891540527
    9. '       ' → logprob: -15.758627891540527
    10. ':' → logprob: -15.883627891540527

Token 359: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20141470432281494
    2. ' n' → logprob: -1.701414704322815
    3. '	n' → logprob: -13.826415061950684
    4. '       ' → logprob: -16.076414108276367
    5. '$n' → logprob: -16.701414108276367
    6. '_n' → logprob: -16.826414108276367
    7. ' ' → logprob: -17.326414108276367
    8. '```' → logprob: -17.701414108276367
    9. '
' → logprob: -17.826414108276367
    10. '=n' → logprob: -18.451414108276367

Token 360: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08551362156867981
    2. '       ' → logprob: -2.5855135917663574
    3. '        
' → logprob: -5.460513591766357
    4. ' 
' → logprob: -7.335513591766357
    5. '
' → logprob: -7.960513591766357
    6. '  
' → logprob: -8.210514068603516
    7. 'while' → logprob: -8.210514068603516
    8. '<|end|>' → logprob: -8.210514068603516
    9. '    
' → logprob: -9.085514068603516
    10. '        ' → logprob: -9.210514068603516

Token 361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03595916926860809
    2. ' for' → logprob: -3.910959243774414
    3. '
' → logprob: -4.410959243774414
    4. '        
' → logprob: -6.410959243774414
    5. 'for' → logprob: -7.410959243774414
    6. ',' → logprob: -8.535959243774414
    7. ' 
' → logprob: -9.035959243774414
    8. '<|end|>' → logprob: -9.035959243774414
    9. '   ' → logprob: -9.410959243774414
    10. ':' → logprob: -9.410959243774414

Token 362: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3870117664337158
    2. ' for' → logprob: -1.1370117664337158
    3. '       ' → logprob: -8.887011528015137
    4. '	for' → logprob: -13.137011528015137
    5. '        
' → logprob: -15.637011528015137
    6. '   ' → logprob: -15.762011528015137
    7. ' ' → logprob: -15.887011528015137
    8. '
' → logprob: -16.762012481689453
    9. '        ' → logprob: -17.012012481689453
    10. 'import' → logprob: -17.637012481689453

Token 363: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1002788096666336
    2. 'prime' → logprob: -2.350278854370117
    3. ' prime' → logprob: -9.850278854370117
    4. ' p' → logprob: -10.850278854370117
    5. '   ' → logprob: -17.475278854370117
    6. '_prime' → logprob: -18.475278854370117
    7. 'Prime' → logprob: -18.600278854370117
    8. 'pr' → logprob: -18.850278854370117
    9. '```' → logprob: -18.850278854370117
    10. 'prim' → logprob: -19.600278854370117

Token 364: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024802929256111383
    2. 'in' → logprob: -6.002480506896973
    3. ' ' → logprob: -12.502480506896973
    4. '	in' → logprob: -15.627480506896973
    5. ' i' → logprob: -15.877480506896973
    6. '  ' → logprob: -16.002479553222656
    7. '   ' → logprob: -16.627479553222656
    8. 'p' → logprob: -16.752479553222656
    9. 'i' → logprob: -16.752479553222656
    10. '_in' → logprob: -16.752479553222656

Token 365: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014164221473038197
    2. ' self' → logprob: -4.264164447784424
    3. '(self' → logprob: -14.889163970947266
    4. '[self' → logprob: -15.014163970947266
    5. '	self' → logprob: -16.889163970947266
    6. 's' → logprob: -18.264163970947266
    7. ':self' → logprob: -18.639163970947266
    8. ' ' → logprob: -19.139163970947266
    9. '=self' → logprob: -19.389163970947266
    10. 'this' → logprob: -19.389163970947266

Token 366: '.pr' (ID: 27292)
  Prédit: '.pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pr' → logprob: -2.45848218582978e-06
    2. 'pr' → logprob: -13.37500286102295
    3. '	pr' → logprob: -14.50000286102295
    4. '.' → logprob: -16.125001907348633
    5. '.p' → logprob: -16.750001907348633
    6. 's' → logprob: -17.375001907348633
    7. 'r' → logprob: -17.500001907348633
    8. '.Pr' → logprob: -17.750001907348633
    9. ' .' → logprob: -18.250001907348633
    10. '_pr' → logprob: -18.375001907348633

Token 367: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.0031450390815734863
    2. 'mes' → logprob: -6.003145217895508
    3. 's' → logprob: -8.128145217895508
    4. 'es' → logprob: -8.753145217895508
    5. 'im' → logprob: -10.378145217895508
    6. 'self' → logprob: -10.628145217895508
    7. 'ime' → logprob: -11.003145217895508
    8. '#' → logprob: -11.128145217895508
    9. '[' → logprob: -11.128145217895508
    10. '   ' → logprob: -11.253145217895508

Token 368: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001565449871122837
    2. ':
' → logprob: -6.501565456390381
    3. ' :' → logprob: -9.751564979553223
    4. '<|end|>' → logprob: -14.001564979553223
    5. '):' → logprob: -14.126564979553223
    6. ':**' → logprob: -14.376564979553223
    7. ' if' → logprob: -14.626564979553223
    8. ',' → logprob: -14.626564979553223
    9. ' :
' → logprob: -14.876564979553223
    10. ':

' → logprob: -15.001564979553223

Token 369: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17790015041828156
    2. ':' → logprob: -2.4279000759124756
    3. ' if' → logprob: -3.1779000759124756
    4. ' and' → logprob: -4.177900314331055
    5. '       ' → logprob: -4.302900314331055
    6. '        ' → logprob: -6.927900314331055
    7. ':
' → logprob: -7.302900314331055
    8. '<|end|>' → logprob: -7.302900314331055
    9. '   ' → logprob: -7.927900314331055
    10. '            ' → logprob: -8.052900314331055

Token 370: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07891909033060074
    2. '           ' → logprob: -3.2039191722869873
    3. 'if' (adapté à ' if') → logprob: -3.9539191722869873
    4. '            ' → logprob: -5.078918933868408
    5. ' while' → logprob: -5.453918933868408
    6. ' ' → logprob: -6.078918933868408
    7. '               ' → logprob: -6.078918933868408
    8. ':' → logprob: -8.078919410705566
    9. 'while' → logprob: -8.453919410705566
    10. ' 
' → logprob: -8.953919410705566

Token 371: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0031802060548216105
    2. ' p' → logprob: -5.753180027008057
    3. '	p' → logprob: -14.003180503845215
    4. '<p' → logprob: -14.378180503845215
    5. '   ' → logprob: -14.628180503845215
    6. '*p' → logprob: -14.878180503845215
    7. '(p' → logprob: -16.5031795501709
    8. ' ' → logprob: -16.8781795501709
    9. ' ' → logprob: -17.1281795501709
    10. ')p' → logprob: -17.1281795501709

Token 372: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07928818464279175
    2. '*p' → logprob: -2.5792882442474365
    3. '*' → logprob: -7.829288005828857
    4. 'p' → logprob: -15.704288482666016
    5. '>' → logprob: -16.454288482666016
    6. ' >' → logprob: -16.704288482666016
    7. '*q' → logprob: -17.204288482666016
    8. '**' → logprob: -18.704288482666016
    9. ' ' → logprob: -18.954288482666016
    10. '*s' → logprob: -19.204288482666016

Token 373: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.787507714354433e-05
    2. ' p' → logprob: -10.00004768371582
    3. '*p' → logprob: -13.37504768371582
    4. '   ' → logprob: -15.37504768371582
    5. '>' → logprob: -15.62504768371582
    6. ' ' → logprob: -16.25004768371582
    7. '	p' → logprob: -17.06254768371582
    8. '
' → logprob: -17.37504768371582
    9. ''p' → logprob: -17.50004768371582
    10. '  ' → logprob: -17.56254768371582

Token 374: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.34856152534484863
    2. ' >' → logprob: -1.2235615253448486
    3. '<|end|>' → logprob: -9.59856128692627
    4. '<|end|>' → logprob: -10.59856128692627
    5. '()>' → logprob: -11.84856128692627
    6. ' ' → logprob: -12.97356128692627
    7. '">' → logprob: -13.09856128692627
    8. ')>' → logprob: -13.22356128692627
    9. '>end' → logprob: -13.47356128692627
    10. ')' → logprob: -13.84856128692627

Token 375: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.03364869952201843
    2. ' remaining' → logprob: -3.408648729324341
    3. 'n' → logprob: -13.533648490905762
    4. ' ' → logprob: -15.408648490905762
    5. 'rem' → logprob: -15.408648490905762
    6. 'remain' → logprob: -15.408648490905762
    7. '.remaining' → logprob: -15.408648490905762
    8. 'Remaining' → logprob: -15.783648490905762
    9. ' ' → logprob: -15.783648490905762
    10. '_remaining' → logprob: -15.783648490905762

Token 376: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024302836507558823
    2. ' or' → logprob: -3.7743027210235596
    3. ':
' → logprob: -6.899302959442139
    4. 'or' → logprob: -11.02430248260498
    5. ':return' → logprob: -11.02430248260498
    6. ' :' → logprob: -11.39930248260498
    7. ' and' → logprob: -13.02430248260498
    8. ' ' → logprob: -14.52430248260498
    9. '):' → logprob: -14.77430248260498
    10. ')' → logprob: -14.77430248260498

Token 377: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001278534036828205
    2. ':' → logprob: -9.625127792358398
    3. '           ' → logprob: -10.250127792358398
    4. '                ' → logprob: -11.500127792358398
    5. ':
' → logprob: -12.000127792358398
    6. '                   ' → logprob: -12.875127792358398
    7. '              ' → logprob: -13.250127792358398
    8. '                
' → logprob: -13.625127792358398
    9. ' ' → logprob: -13.750127792358398
    10. '       ' → logprob: -14.250127792358398

Token 378: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5405507683753967
    2. ' break' → logprob: -0.9155507683753967
    3. '           ' → logprob: -4.540550708770752
    4. 'break' (adapté à ' break') → logprob: -5.540550708770752
    5. '                ' → logprob: -6.790550708770752
    6. '            ' → logprob: -7.415550708770752
    7. ' ' → logprob: -7.915550708770752
    8. '                   ' → logprob: -8.16555118560791
    9. ' ' → logprob: -9.79055118560791
    10. ' 
' → logprob: -9.91555118560791

Token 379: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1822768598794937
    2. '<|end|>' → logprob: -2.307276964187622
    3. '       ' → logprob: -3.932276964187622
    4. ' 
' → logprob: -4.182276725769043
    5. '            
' → logprob: -5.057276725769043
    6. '
' → logprob: -5.432276725769043
    7. ',' → logprob: -5.557276725769043
    8. '<|end|>' → logprob: -5.807276725769043
    9. ')' → logprob: -5.932276725769043
    10. '               ' → logprob: -6.182276725769043

Token 380: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 381: ' count' (ID: 3605)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5399553775787354
    2. ' while' → logprob: -0.9149553775787354
    3. '       ' → logprob: -4.664955139160156
    4. 'if' → logprob: -5.789955139160156
    5. '           ' → logprob: -5.914955139160156
    6. ' if' → logprob: -6.539955139160156
    7. '        ' → logprob: -10.289955139160156
    8. '        
' → logprob: -11.164955139160156
    9. '            
' → logprob: -12.164955139160156
    10. '	while' → logprob: -12.289955139160156

Token 382: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021023452281952
    2. ' =' → logprob: -2.350210189819336
    3. ' +=' → logprob: -13.600210189819336
    4. '+=' → logprob: -13.725210189819336
    5. ' ' → logprob: -13.850210189819336
    6. ':' → logprob: -16.850210189819336
    7. ')' → logprob: -16.975210189819336
    8. '   ' → logprob: -17.975210189819336
    9. '.=' → logprob: -18.225210189819336
    10. '  ' → logprob: -18.350210189819336

Token 383: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020542005077004433
    2. ' ' → logprob: -3.8955419063568115
    3. ' ' → logprob: -16.14554214477539
    4. '1' → logprob: -17.52054214477539
    5. '   ' → logprob: -18.64554214477539
    6. '۰' → logprob: -18.83304214477539
    7. '```' → logprob: -19.45804214477539
    8. '  ' → logprob: -20.45804214477539
    9. '`' → logprob: -20.58304214477539
    10. ')' → logprob: -20.64554214477539

Token 384: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. 'remaining' → logprob: -19.5000057220459
    4. '۰' → logprob: -20.1250057220459
    5. '```' → logprob: -21.1875057220459
    6. '   ' → logprob: -21.3125057220459
    7. 'zero' → logprob: -21.9375057220459
    8. '1' → logprob: -22.1875057220459
    9. '０' → logprob: -22.4375057220459
    10. ' ' → logprob: -22.5000057220459

Token 385: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09797313064336777
    2. '<|end|>' → logprob: -2.472973108291626
    3. '               ' → logprob: -6.472973346710205
    4. '       ' → logprob: -6.472973346710205
    5. '            
' → logprob: -6.597973346710205
    6. ' ' → logprob: -6.847973346710205
    7. '<|end|>' → logprob: -6.972973346710205
    8. ' 
' → logprob: -7.222973346710205
    9. '            ' → logprob: -7.472973346710205
    10. '
' → logprob: -8.222972869873047

Token 386: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020750917494297028
    2. '<|end|>' → logprob: -4.645750999450684
    3. ' ' → logprob: -6.145750999450684
    4. '               ' → logprob: -6.270750999450684
    5. ' while' → logprob: -6.520750999450684
    6. '            ' → logprob: -6.520750999450684
    7. '            
' → logprob: -7.020750999450684
    8. '       ' → logprob: -7.270750999450684
    9. ' 
' → logprob: -7.270750999450684
    10. ':' → logprob: -7.770750999450684

Token 387: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.03980357572436333
    2. 'while' (adapté à ' while') → logprob: -3.4148035049438477
    3. ' ' → logprob: -5.664803504943848
    4. '           ' → logprob: -6.289803504943848
    5. '<|end|>' → logprob: -7.789803504943848
    6. '            ' → logprob: -8.414803504943848
    7. ' 
' → logprob: -9.039803504943848
    8. '               ' → logprob: -11.039803504943848
    9. '	while' → logprob: -11.664803504943848
    10. '<|end|>' → logprob: -11.789803504943848

Token 388: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.07889000326395035
    2. ' remaining' → logprob: -2.578890085220337
    3. '.remaining' → logprob: -15.703889846801758
    4. '_remaining' → logprob: -17.078889846801758
    5. 'rem' → logprob: -17.453889846801758
    6. 'remain' → logprob: -17.703889846801758
    7. ' ' → logprob: -17.828889846801758
    8. 'Remaining' → logprob: -17.953889846801758
    9. ' remainder' → logprob: -17.953889846801758
    10. '   ' → logprob: -18.953889846801758

Token 389: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.20143993198871613
    2. ' %' → logprob: -1.7014399766921997
    3. '%i' → logprob: -11.07643985748291
    4. '%d' → logprob: -12.57643985748291
    5. '%s' → logprob: -12.70143985748291
    6. '%e' → logprob: -13.20143985748291
    7. ' ' → logprob: -14.07643985748291
    8. ' ' → logprob: -14.20143985748291
    9. '%x' → logprob: -14.57643985748291
    10. '%b' → logprob: -15.20143985748291

Token 390: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005233882926404476
    2. ' p' → logprob: -5.2552337646484375
    3. '(p' → logprob: -17.505233764648438
    4. '<|end|>' → logprob: -17.630233764648438
    5. ' ' → logprob: -18.380233764648438
    6. '<p' → logprob: -18.505233764648438
    7. '[p' → logprob: -18.880233764648438
    8. '	p' → logprob: -18.880233764648438
    9. 's' → logprob: -19.255233764648438
    10. '_p' → logprob: -19.630233764648438

Token 391: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3870309293270111
    2. ' ==' → logprob: -1.1370309591293335
    3. '=' → logprob: -8.887030601501465
    4. '===' → logprob: -11.137030601501465
    5. ')==' → logprob: -12.512030601501465
    6. '==
' → logprob: -13.887030601501465
    7. ']==' → logprob: -14.262030601501465
    8. ' ' → logprob: -14.387030601501465
    9. '0' → logprob: -14.887030601501465
    10. ' =' → logprob: -15.012030601501465

Token 392: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009114635176956654
    2. ' ' → logprob: -7.000911235809326
    3. '   ' → logprob: -20.625911712646484
    4. 'p' → logprob: -20.750911712646484
    5. '۰' → logprob: -21.500911712646484
    6. '  ' → logprob: -21.500911712646484
    7. ' p' → logprob: -22.375911712646484
    8. '00' → logprob: -22.500911712646484
    9. '=' → logprob: -22.625911712646484
    10. ' ' → logprob: -22.875911712646484

Token 393: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. 'p' → logprob: -17.750017166137695
    4. '۰' → logprob: -20.375017166137695
    5. ' p' → logprob: -20.375017166137695
    6. '   ' → logprob: -20.625017166137695
    7. '  ' → logprob: -21.625017166137695
    8. '=' → logprob: -22.125017166137695
    9. '
' → logprob: -22.625017166137695
    10. 'o' → logprob: -22.687517166137695

Token 394: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2272915095090866
    2. ':
' → logprob: -1.602291464805603
    3. ' and' → logprob: -6.727291584014893
    4. '               ' → logprob: -8.602291107177734
    5. '):
' → logprob: -8.852291107177734
    6. 'and' → logprob: -8.852291107177734
    7. '           ' → logprob: -8.977291107177734
    8. '):' → logprob: -10.852291107177734
    9. ')' → logprob: -11.102291107177734
    10. ',' → logprob: -11.227291107177734

Token 395: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00012916464766021818
    2. '                ' → logprob: -10.375128746032715
    3. ' count' → logprob: -10.375128746032715
    4. '           ' → logprob: -11.250128746032715
    5. 'count' → logprob: -11.250128746032715
    6. ' ' → logprob: -11.750128746032715
    7. '                   ' → logprob: -11.875128746032715
    8. '                
' → logprob: -12.125128746032715
    9. '(count' → logprob: -12.375128746032715
    10. '              ' → logprob: -12.625128746032715

Token 396: ' remaining' (ID: 15448)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3342406153678894
    2. ' count' → logprob: -1.3342406749725342
    3. '               ' → logprob: -3.959240674972534
    4. '                   ' → logprob: -7.084240436553955
    5. '                ' → logprob: -7.209240436553955
    6. '[count' → logprob: -10.334240913391113
    7. ' 
' → logprob: -10.584240913391113
    8. ' ' → logprob: -11.209240913391113
    9. '_count' → logprob: -12.584240913391113
    10. '                    ' → logprob: -12.584240913391113

Token 397: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.4304577112197876
    2. ' //' → logprob: -1.0554577112197876
    3. '//' → logprob: -6.430457592010498
    4. '=' → logprob: -9.430458068847656
    5. ' /=' → logprob: -10.055458068847656
    6. '/=' → logprob: -12.180458068847656
    7. ' ' → logprob: -12.805458068847656
    8. '```' → logprob: -12.930458068847656
    9. ' =' → logprob: -13.055458068847656
    10. '   ' → logprob: -13.305458068847656

Token 398: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00013798571308143437
    2. '=p' → logprob: -9.000138282775879
    3. '=
' → logprob: -11.750138282775879
    4. '=_' → logprob: -13.250138282775879
    5. '=}' → logprob: -13.250138282775879
    6. '=

' → logprob: -14.375138282775879
    7. '=end' → logprob: -15.000138282775879
    8. '=int' → logprob: -15.250138282775879
    9. '_=' → logprob: -15.750138282775879
    10. '=.' → logprob: -16.000137329101562

Token 399: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005233763717114925
    2. ' p' → logprob: -5.2552337646484375
    3. '	p' → logprob: -19.255233764648438
    4. '10' → logprob: -19.505233764648438
    5. '<p' → logprob: -19.630233764648438
    6. '
' → logprob: -20.380233764648438
    7. ' ' → logprob: -20.380233764648438
    8. '```' → logprob: -20.380233764648438
    9. '   ' → logprob: -21.255233764648438
    10. '           ' → logprob: -21.380233764648438

Token 400: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1908866912126541
    2. 'count' → logprob: -2.4408867359161377
    3. '
' → logprob: -4.190886497497559
    4. '                   ' → logprob: -4.190886497497559
    5. '                ' → logprob: -4.315886497497559
    6. ',' → logprob: -4.315886497497559
    7. '           ' → logprob: -4.690886497497559
    8. '1' → logprob: -4.690886497497559
    9. ' count' → logprob: -5.940886497497559
    10. '=' → logprob: -6.065886497497559

Token 401: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21235407888889313
    2. 'count' → logprob: -1.712354063987732
    3. ' count' → logprob: -4.5873541831970215
    4. '1' → logprob: -8.212353706359863
    5. '           ' → logprob: -8.837353706359863
    6. '                   ' → logprob: -8.837353706359863
    7. ',count' → logprob: -10.462353706359863
    8. '                ' → logprob: -10.587353706359863
    9. '
' → logprob: -11.087353706359863
    10. ',' → logprob: -11.212353706359863

Token 402: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.061967797577381134
    2. ' count' → logprob: -2.8119678497314453
    3. '
' → logprob: -16.686967849731445
    4. '               ' → logprob: -17.561967849731445
    5. '	count' → logprob: -17.561967849731445
    6. '1' → logprob: -18.186967849731445
    7. '           ' → logprob: -18.561967849731445
    8. '                   ' → logprob: -18.936967849731445
    9. '[count' → logprob: -19.311967849731445
    10. '   ' → logprob: -19.561967849731445

Token 403: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4740854501724243
    2. ' +=' → logprob: -0.9740854501724243
    3. '=' → logprob: -12.224085807800293
    4. ']+=' → logprob: -12.974085807800293
    5. '+' → logprob: -13.849085807800293
    6. '```' → logprob: -17.099084854125977
    7. '[' → logprob: -17.474084854125977
    8. '            ' → logprob: -17.474084854125977
    9. '+="' → logprob: -17.724084854125977
    10. ' =' → logprob: -17.849084854125977

Token 404: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '```' → logprob: -18.87520408630371
    4. '   ' → logprob: -19.43770408630371
    5. ' ' → logprob: -19.81270408630371
    6. '۱' → logprob: -20.00020408630371
    7. '
' → logprob: -20.75020408630371
    8. '１' → logprob: -20.87520408630371
    9. '১' → logprob: -21.37520408630371
    10. '`' → logprob: -21.56270408630371

Token 405: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -19.4375
    4. '
' → logprob: -19.75
    5. '   ' → logprob: -19.8125
    6. '۱' → logprob: -19.875
    7. '১' → logprob: -20.625
    8. '१' → logprob: -20.75
    9. '<|end|>' → logprob: -21.1875
    10. '１' → logprob: -21.4375

Token 406: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026534704491496086
    2. '
' → logprob: -3.6515347957611084
    3. '    
' → logprob: -10.026535034179688
    4. '<|end|>' → logprob: -10.026535034179688
    5. '               ' → logprob: -10.151535034179688
    6. '            
' → logprob: -10.526535034179688
    7. '       ' → logprob: -10.651535034179688
    8. ' 
' → logprob: -10.651535034179688
    9. '  
' → logprob: -11.401535034179688
    10. ',' → logprob: -12.526535034179688

Token 407: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.4894986785948277e-05
    2. '            
' → logprob: -11.250044822692871
    3. '
' → logprob: -11.625044822692871
    4. '       ' → logprob: -11.750044822692871
    5. ' 
' → logprob: -12.375044822692871
    6. '               ' → logprob: -12.375044822692871
    7. '    
' → logprob: -13.500044822692871
    8. ',' → logprob: -13.875044822692871
    9. '<|end|>' → logprob: -14.125044822692871
    10. '        
' → logprob: -14.625044822692871

Token 408: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05992979556322098
    2. ' if' → logprob: -3.184929847717285
    3. 'if' (adapté à ' if') → logprob: -4.184929847717285
    4. '       ' → logprob: -6.559929847717285
    5. '   ' → logprob: -9.309929847717285
    6. ' ' → logprob: -10.559929847717285
    7. '
' → logprob: -10.684929847717285
    8. '         ' → logprob: -13.434929847717285
    9. '          ' → logprob: -13.434929847717285
    10. '  ' → logprob: -14.059929847717285

Token 409: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.6326268911361694
    2. 'count' → logprob: -0.7576268911361694
    3. '	count' → logprob: -11.3826265335083
    4. ' ' → logprob: -12.1326265335083
    5. '(count' → logprob: -12.2576265335083
    6. '   ' → logprob: -13.6326265335083
    7. 'p' → logprob: -13.8826265335083
    8. '[count' → logprob: -14.2576265335083
    9. ' p' → logprob: -14.5076265335083
    10. 'c' → logprob: -14.5076265335083

Token 410: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.252008855342865
    2. '>' → logprob: -1.5020089149475098
    3. ':' → logprob: -9.502008438110352
    4. ')>' → logprob: -13.377008438110352
    5. '<|end|>' → logprob: -13.627008438110352
    6. ' ' → logprob: -14.752008438110352
    7. '&gt' → logprob: -15.002008438110352
    8. '>:' → logprob: -15.252008438110352
    9. '">' → logprob: -15.377008438110352
    10. ')' → logprob: -15.752008438110352

Token 411: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023245595395565033
    2. ' ' → logprob: -3.7732455730438232
    3. '=' → logprob: -17.273244857788086
    4. '```' → logprob: -17.398244857788086
    5. '<|end|>' → logprob: -18.273244857788086
    6. '۰' → logprob: -18.273244857788086
    7. ' ' → logprob: -18.585744857788086
    8. '>' → logprob: -18.835744857788086
    9. '   ' → logprob: -19.023244857788086
    10. '
' → logprob: -19.148244857788086

Token 412: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '<|end|>' → logprob: -16.75020408630371
    4. '۰' → logprob: -18.25020408630371
    5. '=' → logprob: -19.87520408630371
    6. 'zero' → logprob: -20.62520408630371
    7. '```' → logprob: -20.62520408630371
    8. '٠' → logprob: -20.87520408630371
    9. '   ' → logprob: -21.18770408630371
    10. ')' → logprob: -21.50020408630371

Token 413: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6939700841903687
    2. ':
' → logprob: -0.6939700841903687
    3. '           ' → logprob: -7.568970203399658
    4. '               ' → logprob: -8.5689697265625
    5. '):
' → logprob: -10.0689697265625
    6. '       ' → logprob: -10.5689697265625
    7. ',' → logprob: -10.5689697265625
    8. ':

' → logprob: -11.5689697265625
    9. ':
' → logprob: -12.4439697265625
    10. ' :
' → logprob: -12.5689697265625

Token 414: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03732604533433914
    2. '           ' → logprob: -3.7873260974884033
    3. ' factors' → logprob: -4.287325859069824
    4. '       ' → logprob: -8.662325859069824
    5. 'f' → logprob: -10.662325859069824
    6. '```' → logprob: -11.662325859069824
    7. '   ' → logprob: -12.037325859069824
    8. 'Factors' → logprob: -12.287325859069824
    9. '                   ' → logprob: -12.412325859069824
    10. '<|end|>' → logprob: -12.787325859069824

Token 415: ' factors' (ID: 11652)
  Prédit: ' factors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.10263669490814209
    2. 'f' → logprob: -2.4776368141174316
    3. '           ' → logprob: -4.352636814117432
    4. '               ' → logprob: -7.477636814117432
    5. '       ' → logprob: -9.852636337280273
    6. ' f' → logprob: -10.227636337280273
    7. '	f' → logprob: -10.977636337280273
    8. 'fac' → logprob: -11.477636337280273
    9. 'factor' → logprob: -11.602636337280273
    10. '```' → logprob: -11.852636337280273

Token 416: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.250001907348633
    3. ' [' → logprob: -15.250001907348633
    4. 'p' → logprob: -15.500001907348633
    5. '\[' → logprob: -17.375001907348633
    6. '```' → logprob: -18.125001907348633
    7. '[f' → logprob: -18.625001907348633
    8. '[c' → logprob: -19.125001907348633
    9. '[
' → logprob: -19.500001907348633
    10. '

' → logprob: -19.500001907348633

Token 417: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012099954765290022
    2. ']=' → logprob: -7.0012102127075195
    3. ' ]' → logprob: -8.12621021270752
    4. '=' → logprob: -13.50121021270752
    5. ' =' → logprob: -14.37621021270752
    6. ']+=' → logprob: -15.25121021270752
    7. ')' → logprob: -15.62621021270752
    8. '']' → logprob: -16.001209259033203
    9. '           ' → logprob: -17.001209259033203
    10. '"]' → logprob: -17.376209259033203

Token 418: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474568247795105
    2. '=' → logprob: -0.974568247795105
    3. ']' → logprob: -7.8495683670043945
    4. ']=' → logprob: -9.224568367004395
    5. '[' → logprob: -13.599568367004395
    6. ')' → logprob: -14.474568367004395
    7. ' ]' → logprob: -15.349568367004395
    8. ')=' → logprob: -15.599568367004395
    9. '=count' → logprob: -15.599568367004395
    10. ' ' → logprob: -16.349567413330078

Token 419: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.07888989895582199
    2. ' count' → logprob: -2.578889846801758
    3. '	count' → logprob: -16.453889846801758
    4. '(count' → logprob: -17.578889846801758
    5. '[count' → logprob: -18.203889846801758
    6. 'counts' → logprob: -18.328889846801758
    7. '=count' → logprob: -18.453889846801758
    8. 'c' → logprob: -18.703889846801758
    9. '$count' → logprob: -18.703889846801758
    10. '<count' → logprob: -19.453889846801758

Token 420: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013013158924877644
    2. '
' → logprob: -4.3880133628845215
    3. '        
' → logprob: -8.513012886047363
    4. '           ' → logprob: -8.888012886047363
    5. '<|end|>' → logprob: -9.138012886047363
    6. ',' → logprob: -10.638012886047363
    7. '    
' → logprob: -11.263012886047363
    8. '  
' → logprob: -12.638012886047363
    9. ',
' → logprob: -12.763012886047363
    10. ' if' → logprob: -12.888012886047363

Token 421: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00032402228680439293
    2. '
' → logprob: -8.250324249267578
    3. '           ' → logprob: -10.000324249267578
    4. ' if' → logprob: -11.250324249267578
    5. '        
' → logprob: -13.125324249267578
    6. '   ' → logprob: -14.500324249267578
    7. 'if' → logprob: -14.875324249267578
    8. '      ' → logprob: -15.125324249267578
    9. ',' → logprob: -15.250324249267578
    10. '<|end|>' → logprob: -15.375324249267578

Token 422: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13454031944274902
    2. ' if' → logprob: -2.134540319442749
    3. '       ' → logprob: -4.884540557861328
    4. '   ' → logprob: -11.009540557861328
    5. '
' → logprob: -12.759540557861328
    6. 'return' → logprob: -14.759540557861328
    7. ' ' → logprob: -14.759540557861328
    8. '	if' → logprob: -15.384540557861328
    9. '```' → logprob: -15.884540557861328
    10. 'If' → logprob: -16.134540557861328

Token 423: ' remaining' (ID: 15448)
  Prédit: ' remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remaining' → logprob: -0.5759406089782715
    2. 'remaining' → logprob: -0.8259406089782715
    3. ' ' → logprob: -14.95094108581543
    4. 'Remaining' → logprob: -15.20094108581543
    5. '.remaining' → logprob: -15.20094108581543
    6. '_remaining' → logprob: -15.45094108581543
    7. '   ' → logprob: -16.57594108581543
    8. ' ' → logprob: -18.57594108581543
    9. 'rem' → logprob: -18.70094108581543
    10. '1' → logprob: -18.95094108581543

Token 424: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5759998559951782
    2. ' >' → logprob: -0.8259998559951782
    3. ' !=' → logprob: -9.951000213623047
    4. '!=' → logprob: -11.451000213623047
    5. ' not' → logprob: -14.201000213623047
    6. ' ' → logprob: -14.701000213623047
    7. ' ' → logprob: -14.826000213623047
    8. '&gt' → logprob: -15.451000213623047
    9. '">' → logprob: -16.201000213623047
    10. ')>' → logprob: -16.326000213623047

Token 425: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -18.250059127807617
    4. '```' → logprob: -18.750059127807617
    5. '１' → logprob: -20.000059127807617
    6. '
' → logprob: -21.125059127807617
    7. '۱' → logprob: -21.250059127807617
    8. '  ' → logprob: -21.250059127807617
    9. '

' → logprob: -21.562559127807617
    10. ' ' → logprob: -21.625059127807617

Token 426: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -17.125009536743164
    4. '   ' → logprob: -17.250009536743164
    5. '１' → logprob: -18.125009536743164
    6. '
' → logprob: -18.437509536743164
    7. '

' → logprob: -18.937509536743164
    8. 'prime' → logprob: -19.062509536743164
    9. '`' → logprob: -19.375009536743164
    10. '۱' → logprob: -19.500009536743164

Token 427: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47408637404441833
    2. ':
' → logprob: -0.9740864038467407
    3. ':
' → logprob: -11.97408676147461
    4. ':

' → logprob: -13.59908676147461
    5. '):
' → logprob: -14.47408676147461
    6. '           ' → logprob: -14.97408676147461
    7. '       ' → logprob: -15.22408676147461
    8. ',' → logprob: -15.47408676147461
    9. ':return' → logprob: -16.09908676147461
    10. ' and' → logprob: -16.47408676147461

Token 428: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026603161823004484
    2. 'f' → logprob: -6.377660274505615
    3. ' factors' → logprob: -7.002660274505615
    4. '       ' → logprob: -10.502660751342773
    5. '               ' → logprob: -11.877660751342773
    6. 'fact' → logprob: -12.377660751342773
    7. '
' → logprob: -13.002660751342773
    8. 'factor' → logprob: -13.252660751342773
    9. '```' → logprob: -13.627660751342773
    10. '   ' → logprob: -14.002660751342773

Token 429: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.014173032715916634
    2. ' factors' → logprob: -4.2641730308532715
    3. '           ' → logprob: -11.88917350769043
    4. '       ' → logprob: -14.01417350769043
    5. 'factor' → logprob: -14.01417350769043
    6. '               ' → logprob: -15.13917350769043
    7. 'facts' → logprob: -15.38917350769043
    8. ' f' → logprob: -16.01417350769043
    9. 'Factors' → logprob: -16.26417350769043
    10. 'fact' → logprob: -16.26417350769043

Token 430: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. 'remaining' → logprob: -18.25
    3. ' [' → logprob: -18.375
    4. '```' → logprob: -19.375
    5. '[
' → logprob: -19.625
    6. '[random' → logprob: -20.125
    7. '[int' → logprob: -20.125
    8. '\[' → logprob: -20.25
    9. '[self' → logprob: -20.5
    10. '.setdefault' → logprob: -21.125

Token 431: 'remaining' (ID: 83570)
  Prédit: 'remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.00012368128227535635
    2. ' remaining' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.000123977661133
    4. '
' → logprob: -17.250123977661133
    5. 'remain' → logprob: -17.500123977661133
    6. ' ' → logprob: -18.375123977661133
    7. '.remaining' → logprob: -18.625123977661133
    8. '```' → logprob: -18.750123977661133
    9. '`' → logprob: -19.125123977661133
    10. '           ' → logprob: -19.375123977661133

Token 432: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00031413204851560295
    2. ']=' → logprob: -8.250313758850098
    3. ' ]' → logprob: -9.875313758850098
    4. '=' → logprob: -14.000313758850098
    5. ']+=' → logprob: -14.375313758850098
    6. ')' → logprob: -17.000314712524414
    7. '[' → logprob: -17.250314712524414
    8. ',' → logprob: -17.500314712524414
    9. '}' → logprob: -17.625314712524414
    10. ' =' → logprob: -18.000314712524414

Token 433: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0025051478296518326
    2. ' =' → logprob: -6.002505302429199
    3. ']' → logprob: -10.7525053024292
    4. ']=' → logprob: -11.7525053024292
    5. '[' → logprob: -15.6275053024292
    6. '=

' → logprob: -17.377504348754883
    7. ')=' → logprob: -18.627504348754883
    8. ')' → logprob: -18.627504348754883
    9. '```' → logprob: -18.877504348754883
    10. '=True' → logprob: -18.877504348754883

Token 434: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007076105568557978
    2. 'f' → logprob: -5.007076263427734
    3. ' ' → logprob: -8.007076263427734
    4. ' factors' → logprob: -10.632076263427734
    5. 'fact' → logprob: -13.757076263427734
    6. 'factor' → logprob: -14.257076263427734
    7. '```' → logprob: -14.632076263427734
    8. '   ' → logprob: -14.882076263427734
    9. 'facts' → logprob: -15.819576263427734
    10. ' f' → logprob: -15.882076263427734

Token 435: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020571202039718628
    2. 'f' → logprob: -3.895571231842041
    3. ' ' → logprob: -11.395570755004883
    4. ' factors' → logprob: -11.395570755004883
    5. 'fact' → logprob: -12.895570755004883
    6. 'factor' → logprob: -13.395570755004883
    7. '```' → logprob: -13.895570755004883
    8. 'facts' → logprob: -14.520570755004883
    9. '	f' → logprob: -15.770570755004883
    10. '   ' → logprob: -15.895570755004883

Token 436: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04977297782897949
    2. 'return' → logprob: -3.6747729778289795
    3. '
' → logprob: -3.7997729778289795
    4. ' return' → logprob: -7.174773216247559
    5. '   ' → logprob: -11.424773216247559
    6. '<|end|>' → logprob: -11.549773216247559
    7. '    
' → logprob: -11.799773216247559
    8. '        
' → logprob: -11.799773216247559
    9. '```' → logprob: -12.049773216247559
    10. '	return' → logprob: -12.549773216247559

Token 437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035772647242993116
    2. 'return' → logprob: -6.12857723236084
    3. ' return' → logprob: -7.00357723236084
    4. '
' → logprob: -7.75357723236084
    5. '   ' → logprob: -10.25357723236084
    6. '<|end|>' → logprob: -12.50357723236084
    7. '	return' → logprob: -12.75357723236084
    8. '           ' → logprob: -13.00357723236084
    9. '        
' → logprob: -13.25357723236084
    10. '	' → logprob: -13.75357723236084

Token 438: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5131285190582275
    2. '       ' → logprob: -1.0131285190582275
    3. ' return' → logprob: -3.2631285190582275
    4. '   ' → logprob: -11.138128280639648
    5. '
' → logprob: -11.513128280639648
    6. '	return' → logprob: -12.388128280639648
    7. ' ' → logprob: -14.388128280639648
    8. '{return' → logprob: -15.138128280639648
    9. '           ' → logprob: -15.638128280639648
    10. '      ' → logprob: -16.13812828063965

Token 439: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2519320547580719
    2. ' factors' → logprob: -1.5019320249557495
    3. 'factor' → logprob: -13.501932144165039
    4. ' f' → logprob: -14.501932144165039
    5. 'fac' → logprob: -14.626932144165039
    6. 'Factors' → logprob: -15.251932144165039
    7. 'facts' → logprob: -16.25193214416504
    8. '	f' → logprob: -16.37693214416504
    9. ' factores' → logprob: -16.50193214416504
    10. 'fact' → logprob: -17.12693214416504

Token 440: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5164114236831665
    2. '<|end|>' → logprob: -1.5164114236831665
    3. 'class' → logprob: -2.641411304473877
    4. '   ' → logprob: -2.766411304473877
    5. 'def' → logprob: -3.641411304473877
    6. '    
' → logprob: -4.266411304473877
    7. '<|end|>' → logprob: -6.016411304473877
    8. '  
' → logprob: -6.016411304473877
    9. ' 
' → logprob: -6.516411304473877
    10. ' ' → logprob: -7.391411304473877

Token 441: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.05005105212330818
    2. 'def' → logprob: -3.050050973892212
    3. '<|end|>' → logprob: -6.550051212310791
    4. '#' → logprob: -11.675050735473633
    5. '<|end|>' → logprob: -11.800050735473633
    6. ' class' → logprob: -12.050050735473633
    7. 'if' → logprob: -12.925050735473633
    8. '
' → logprob: -13.175050735473633
    9. 'import' → logprob: -13.175050735473633
    10. 'from' → logprob: -13.425050735473633

Token 442: ' Pair' (ID: 41250)
  Prédit: ' Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Number' → logprob: -1.918715476989746
    2. 'Number' → logprob: -2.168715476989746
    3. 'Prime' → logprob: -2.168715476989746
    4. 'Solution' → logprob: -2.168715476989746
    5. 'Exponent' → logprob: -2.293715476989746
    6. 'Power' → logprob: -2.793715476989746
    7. ' Power' → logprob: -3.543715476989746
    8. ' Solution' → logprob: -3.543715476989746
    9. ' Prime' → logprob: -3.668715476989746
    10. ' Div' → logprob: -3.918715476989746

Token 443: 'Counter' (ID: 16263)
  Prédit: 'Factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factor' → logprob: -0.3982570767402649
    2. 'Factors' → logprob: -2.64825701713562
    3. 'Counter' → logprob: -3.14825701713562
    4. ':' → logprob: -3.14825701713562
    5. 'Processor' → logprob: -3.27325701713562
    6. 'Product' → logprob: -3.27325701713562
    7. 'Sum' → logprob: -3.52325701713562
    8. 'Finder' → logprob: -4.523257255554199
    9. 'Generator' → logprob: -4.523257255554199
    10. 'wise' → logprob: -4.648257255554199

Token 444: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014167269691824913
    2. ':
' → logprob: -4.264167308807373
    3. ':

' → logprob: -13.639166831970215
    4. ':def' → logprob: -14.014166831970215
    5. '(' → logprob: -14.889166831970215
    6. '<|end|>' → logprob: -15.139166831970215
    7. ':
' → logprob: -15.264166831970215
    8. '(P' → logprob: -15.264166831970215
    9. ' :' → logprob: -16.01416778564453
    10. 'def' → logprob: -16.26416778564453

Token 445: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04910402372479439
    2. ' def' → logprob: -3.0491039752960205
    3. 'def' → logprob: -7.7991042137146
    4. ':
' → logprob: -9.799103736877441
    5. ':' → logprob: -10.299103736877441
    6. '```' → logprob: -12.174103736877441
    7. '    
' → logprob: -12.549103736877441
    8. '	def' → logprob: -13.674103736877441
    9. '   ' → logprob: -13.674103736877441
    10. 'class' → logprob: -13.924103736877441

Token 446: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7216749787330627
    2. 'def' (adapté à ' def') → logprob: -0.8466749787330627
    3. '   ' → logprob: -2.471674919128418
    4. ':' → logprob: -8.096674919128418
    5. '@' → logprob: -8.596674919128418
    6. ':
' → logprob: -8.846674919128418
    7. ' @' → logprob: -9.596674919128418
    8. ':def' → logprob: -10.596674919128418
    9. 'class' → logprob: -10.971674919128418
    10. 'staticmethod' → logprob: -11.221674919128418

Token 447: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.004299322608858347
    2. ' def' → logprob: -5.754299163818359
    3. '__' → logprob: -6.879299163818359
    4. 'def' → logprob: -9.62929916381836
    5. ' ' → logprob: -11.00429916381836
    6. '   ' → logprob: -12.25429916381836
    7. '_' → logprob: -14.00429916381836
    8. ' _' → logprob: -14.00429916381836
    9. '```' → logprob: -14.12929916381836
    10. '  ' → logprob: -14.37929916381836

Token 448: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.7133641196996905e-05
    2. '__' → logprob: -10.62502670288086
    3. '_init' → logprob: -14.25002670288086
    4. ' init' → logprob: -14.25002670288086
    5. 'int' → logprob: -14.87502670288086
    6. 'def' → logprob: -15.00002670288086
    7. ' __' → logprob: -15.25002670288086
    8. '```' → logprob: -15.75002670288086
    9. '(init' → logprob: -15.75002670288086
    10. 'iter' → logprob: -16.37502670288086

Token 449: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.117147296667099
    2. '(' → logprob: -2.617147207260132
    3. '(self' → logprob: -3.867147207260132
    4. ' (' → logprob: -4.242147445678711
    5. '__' → logprob: -6.742147445678711
    6. '__(
' → logprob: -6.992147445678711
    7. '_(' → logprob: -9.742147445678711
    8. '(
' → logprob: -11.117147445678711
    9. ')(' → logprob: -11.617147445678711
    10. ',' → logprob: -11.617147445678711

Token 450: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009533069096505642
    2. ')' → logprob: -5.134532928466797
    3. '):
' → logprob: -5.884532928466797
    4. '):' → logprob: -7.759532928466797
    5. '   ' → logprob: -8.759532928466797
    6. '
' → logprob: -9.384532928466797
    7. ' self' → logprob: -9.634532928466797
    8. '):

' → logprob: -10.509532928466797
    9. '       ' → logprob: -11.009532928466797
    10. '(self' → logprob: -11.134532928466797

Token 451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002477081725373864
    2. '):' → logprob: -6.252477169036865
    3. '):
' → logprob: -7.752477169036865
    4. 'self' → logprob: -9.752476692199707
    5. ' ,' → logprob: -10.127476692199707
    6. '   ' → logprob: -12.002476692199707
    7. ',
' → logprob: -12.127476692199707
    8. ' ):' → logprob: -13.377476692199707
    9. ' (' → logprob: -13.752476692199707
    10. ':' → logprob: -13.877476692199707

Token 452: ' factor' (ID: 12332)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.20406608283519745
    2. 'f' → logprob: -2.329066038131714
    3. ' factor' → logprob: -3.079066038131714
    4. '):' → logprob: -4.954066276550293
    5. ' factors' → logprob: -5.079066276550293
    6. 'max' → logprob: -5.204066276550293
    7. ')' → logprob: -5.579066276550293
    8. 'n' → logprob: -5.704066276550293
    9. ' max' → logprob: -6.329066276550293
    10. 'limit' → logprob: -6.329066276550293

Token 453: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.45492643117904663
    2. 'ize' → logprob: -1.4549264907836914
    3. 's' → logprob: -2.9549264907836914
    4. '_factor' → logprob: -3.8299264907836914
    5. '_counts' → logprob: -4.204926490783691
    6. '_f' → logprob: -4.704926490783691
    7. '_limit' → logprob: -5.079926490783691
    8. '_count' → logprob: -5.204926490783691
    9. 'izer' → logprob: -5.704926490783691
    10. '_engine' → logprob: -5.829926490783691

Token 454: '_engine' (ID: 57393)
  Prédit: 'Engine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Engine' → logprob: -0.43013253808021545
    2. '_engine' → logprob: -1.055132508277893
    3. 'engine' → logprob: -7.3051323890686035
    4. ':' → logprob: -7.6801323890686035
    5. ' Engine' → logprob: -10.180132865905762
    6. '   ' → logprob: -10.305132865905762
    7. ',' → logprob: -10.430132865905762
    8. '):
' → logprob: -10.430132865905762
    9. ')' → logprob: -10.680132865905762
    10. '):' → logprob: -10.805132865905762

Token 455: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06360478699207306
    2. ':' → logprob: -2.8136048316955566
    3. '):
' → logprob: -6.688604831695557
    4. ',' → logprob: -8.063604354858398
    5. ' ):' → logprob: -10.063604354858398
    6. ')' → logprob: -10.938604354858398
    7. '   ' → logprob: -12.563604354858398
    8. '}:' → logprob: -12.938604354858398
    9. ' :' → logprob: -13.188604354858398
    10. ' ' → logprob: -13.438604354858398

Token 456: ' Factor' (ID: 63743)
  Prédit: 'Factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factor' → logprob: -0.4741138815879822
    2. ' Factor' → logprob: -0.9741138815879822
    3. ' ' → logprob: -11.474113464355469
    4. ')' → logprob: -11.599113464355469
    5. '_factor' → logprob: -11.849113464355469
    6. ' factor' → logprob: -12.099113464355469
    7. '   ' → logprob: -13.974113464355469
    8. 'Factory' → logprob: -14.474113464355469
    9. 'factor' → logprob: -14.599113464355469
    10. ' ' → logprob: -14.724113464355469

Token 457: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -4.723352049040841e-06
    2. 'ation' → logprob: -12.375004768371582
    3. 'Factor' → logprob: -15.000004768371582
    4. 'iz' → logprob: -17.875003814697266
    5. 'a' → logprob: -18.250003814697266
    6. 'az' → logprob: -18.500003814697266
    7. 'z' → logprob: -18.500003814697266
    8. 'iation' → logprob: -18.875003814697266
    9. 'Engine' → logprob: -19.250003814697266
    10. '```' → logprob: -19.250003814697266

Token 458: 'Engine' (ID: 7286)
  Prédit: 'Engine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Engine' → logprob: -1.8550976164988242e-05
    2. 'engine' → logprob: -12.375018119812012
    3. ' Engine' → logprob: -12.875018119812012
    4. 'ngine' → logprob: -13.250018119812012
    5. '_engine' → logprob: -13.625018119812012
    6. ',' → logprob: -13.625018119812012
    7. ')' → logprob: -13.625018119812012
    8. 'Eng' → logprob: -13.750018119812012
    9. '):
' → logprob: -13.875018119812012
    10. '   ' → logprob: -14.125018119812012

Token 459: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3910203278064728
    2. '):
' → logprob: -1.1410202980041504
    3. ',' → logprob: -5.51602029800415
    4. ')' → logprob: -10.391020774841309
    5. '   ' → logprob: -10.391020774841309
    6. '):
' → logprob: -10.391020774841309
    7. '       ' → logprob: -11.016020774841309
    8. ' ):' → logprob: -12.641020774841309
    9. ':' → logprob: -12.766020774841309
    10. '):

' → logprob: -13.766020774841309

Token 460: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017624642350710928
    2. 'self' → logprob: -9.250176429748535
    3. ' self' → logprob: -10.500176429748535
    4. ',' → logprob: -10.750176429748535
    5. '   ' → logprob: -11.000176429748535
    6. 'def' → logprob: -11.750176429748535
    7. '
' → logprob: -13.375176429748535
    8. '<|end|>' → logprob: -13.875176429748535
    9. '      ' → logprob: -14.625176429748535
    10. ':' → logprob: -14.625176429748535

Token 461: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.003098808228969574
    2. ' self' → logprob: -6.253098964691162
    3. '       ' → logprob: -6.753098964691162
    4. '   ' → logprob: -13.628098487854004
    5. '
' → logprob: -14.503098487854004
    6. 'def' → logprob: -15.128098487854004
    7. '	self' → logprob: -15.378098487854004
    8. '(self' → logprob: -17.50309944152832
    9. 'import' → logprob: -17.75309944152832
    10. 'class' → logprob: -18.37809944152832

Token 462: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -0.0008414304465986788
    2. '.fac' → logprob: -8.25084114074707
    3. '.engine' → logprob: -8.37584114074707
    4. '.fact' → logprob: -8.50084114074707
    5. '.f' → logprob: -9.62584114074707
    6. '.' → logprob: -9.75084114074707
    7. ' .' → logprob: -11.37584114074707
    8. '.factory' → logprob: -12.62584114074707
    9. 'factor' → logprob: -12.75084114074707
    10. '.def' → logprob: -13.87584114074707

Token 463: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -1.7432603272027336e-06
    2. 'ation' → logprob: -14.000001907348633
    3. 'ize' → logprob: -14.250001907348633
    4. '   ' → logprob: -16.125001907348633
    5. '       ' → logprob: -18.250001907348633
    6. 'iation' → logprob: -18.375001907348633
    7. '_' → logprob: -18.500001907348633
    8. 'iz' → logprob: -18.625001907348633
    9. '_factor' → logprob: -19.000001907348633
    10. '           ' → logprob: -19.375001907348633

Token 464: '_engine' (ID: 57393)
  Prédit: '_engine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_engine' → logprob: -9.829823102336377e-05
    2. 'engine' → logprob: -9.37509822845459
    3. '_' → logprob: -12.50009822845459
    4. '_eng' → logprob: -12.62509822845459
    5. 'Engine' → logprob: -13.62509822845459
    6. ' =' → logprob: -13.75009822845459
    7. 'ngine' → logprob: -13.75009822845459
    8. '=' → logprob: -14.12509822845459
    9. '_ENGINE' → logprob: -15.00009822845459
    10. '   ' → logprob: -15.12509822845459

Token 465: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05489165335893631
    2. '=' → logprob: -2.929891586303711
    3. ' ' → logprob: -11.929891586303711
    4. ')' → logprob: -14.054891586303711
    5. ' =
' → logprob: -14.679891586303711
    6. '.' → logprob: -14.679891586303711
    7. '   ' → logprob: -15.179891586303711
    8. '  ' → logprob: -15.429891586303711
    9. ',' → logprob: -15.554891586303711
    10. ':' → logprob: -15.554891586303711

Token 466: ' factor' (ID: 12332)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.014164448715746403
    2. ' factor' → logprob: -4.264164447784424
    3. 'fact' → logprob: -14.264164924621582
    4. '_factor' → logprob: -16.639163970947266
    5. '.factor' → logprob: -17.264163970947266
    6. 'Factor' → logprob: -17.514163970947266
    7. 'f' → logprob: -17.639163970947266
    8. ' ' → logprob: -17.889163970947266
    9. 'fa' → logprob: -18.014163970947266
    10. ' ' → logprob: -18.264163970947266

Token 467: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.038308046758174896
    2. 'ation' → logprob: -3.2883081436157227
    3. '_engine' → logprob: -8.663308143615723
    4. 'engine' → logprob: -10.538308143615723
    5. '_' → logprob: -11.288308143615723
    6. 'z' → logprob: -11.788308143615723
    7. 'ion' → logprob: -11.788308143615723
    8. 'a' → logprob: -11.788308143615723
    9. 'e' → logprob: -12.413308143615723
    10. 'al' → logprob: -12.538308143615723

Token 468: '_engine' (ID: 57393)
  Prédit: '_engine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_engine' → logprob: -0.00463945372030139
    2. 'engine' → logprob: -5.379639625549316
    3. 'ngine' → logprob: -11.879639625549316
    4. 'Engine' → logprob: -12.504639625549316
    5. '_eng' → logprob: -12.629639625549316
    6. '_ENGINE' → logprob: -14.129639625549316
    7. ' engine' → logprob: -14.504639625549316
    8. '_' → logprob: -14.504639625549316
    9. '.engine' → logprob: -14.504639625549316
    10. '-engine' → logprob: -14.504639625549316

Token 469: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7130782604217529
    2. '    
' → logprob: -0.7130782604217529
    3. '   ' → logprob: -3.963078260421753
    4. '        
' → logprob: -8.338078498840332
    5. '   
' → logprob: -9.088078498840332
    6. '

' → logprob: -9.338078498840332
    7. 'def' → logprob: -9.588078498840332
    8. '  
' → logprob: -9.588078498840332
    9. '<|end|>' → logprob: -9.963078498840332
    10. '
    
' → logprob: -10.338078498840332

Token 470: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08027923852205276
    2. '   ' → logprob: -2.5802793502807617
    3. ' def' → logprob: -6.580279350280762
    4. ' ' → logprob: -14.330279350280762
    5. '
' → logprob: -15.455279350280762
    6. '	def' → logprob: -15.580279350280762
    7. '```' → logprob: -17.330278396606445
    8. 'async' → logprob: -17.580278396606445
    9. '  ' → logprob: -17.830278396606445
    10. 'de' → logprob: -18.330278396606445

Token 471: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.15310683415737e-05
    2. ' def' → logprob: -10.750021934509277
    3. '   ' → logprob: -19.50002098083496
    4. 'de' → logprob: -20.25002098083496
    5. 'from' → logprob: -21.12502098083496
    6. 'd' → logprob: -22.00002098083496
    7. 'class' → logprob: -22.00002098083496
    8. ' ' → logprob: -22.25002098083496
    9. '
' → logprob: -23.12502098083496
    10. '	def' → logprob: -23.62502098083496

Token 472: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.029185881838202477
    2. 'count' → logprob: -3.7791857719421387
    3. ' def' → logprob: -5.154185771942139
    4. 'def' → logprob: -8.904186248779297
    5. ' compute' → logprob: -12.404186248779297
    6. ' calculate' → logprob: -12.779186248779297
    7. ' pair' → logprob: -13.279186248779297
    8. ' get' → logprob: -14.279186248779297
    9. ' counts' → logprob: -14.529186248779297
    10. 'calculate' → logprob: -15.029186248779297

Token 473: '_l' (ID: 1478)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.0010575797641649842
    2. '(self' → logprob: -7.6260576248168945
    3. '_' → logprob: -7.7510576248168945
    4. '_pair' → logprob: -9.626057624816895
    5. '_unique' → logprob: -10.376057624816895
    6. '_div' → logprob: -11.251057624816895
    7. '_self' → logprob: -12.001057624816895
    8. '_f' → logprob: -12.876057624816895
    9. '_valid' → logprob: -13.251057624816895
    10. '_trip' → logprob: -13.251057624816895

Token 474: 'cm' (ID: 7871)
  Prédit: 'eft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eft' → logprob: -1.67424476146698
    2. 'ess' → logprob: -1.92424476146698
    3. 'arge' → logprob: -2.0492448806762695
    4. 'ong' → logprob: -2.7992448806762695
    5. 'ines' → logprob: -3.0492448806762695
    6. 'inear' → logprob: -3.0492448806762695
    7. 'arger' → logprob: -3.1742448806762695
    8. 'e' → logprob: -3.4242448806762695
    9. 'ine' → logprob: -3.6742448806762695
    10. 'og' → logprob: -3.6742448806762695

Token 475: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.00027432903880253434
    2. '(self' → logprob: -8.500274658203125
    3. '(_' → logprob: -11.750274658203125
    4. '_' → logprob: -11.875274658203125
    5. '_div' → logprob: -11.875274658203125
    6. '_parts' → logprob: -12.125274658203125
    7. '_f' → logprob: -12.250274658203125
    8. '(' → logprob: -12.500274658203125
    9. 'pairs' → logprob: -12.500274658203125
    10. '_pair' → logprob: -12.625274658203125

Token 476: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011751054553315043
    2. '(' → logprob: -6.7511749267578125
    3. ' (' → logprob: -12.376174926757812
    4. '(s' → logprob: -14.876174926757812
    5. '(
' → logprob: -15.251174926757812
    6. '(sel' → logprob: -17.251174926757812
    7. '(Self' → logprob: -18.126174926757812
    8. 'self' → logprob: -18.126174926757812
    9. '(this' → logprob: -18.251174926757812
    10. '(

' → logprob: -18.376174926757812

Token 477: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001382497837767005
    2. 'self' → logprob: -6.751382350921631
    3. '(self' → logprob: -8.751382827758789
    4. ' ,' → logprob: -10.376382827758789
    5. ')' → logprob: -11.626382827758789
    6. '):' → logprob: -12.501382827758789
    7. ',self' → logprob: -12.626382827758789
    8. ',n' → logprob: -13.376382827758789
    9. '   ' → logprob: -13.876382827758789
    10. '       ' → logprob: -14.001382827758789

Token 478: ' L' (ID: 451)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10253804177045822
    2. 'n' → logprob: -2.8525381088256836
    3. ' self' → logprob: -3.3525381088256836
    4. ' n' → logprob: -5.602538108825684
    5. '   ' → logprob: -7.852538108825684
    6. '       ' → logprob: -8.227538108825684
    7. '(self' → logprob: -9.852538108825684
    8. 'x' → logprob: -9.852538108825684
    9. 'numbers' → logprob: -9.852538108825684
    10. ')' → logprob: -10.227538108825684

Token 479: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.395747572183609
    2. ',' → logprob: -1.1457475423812866
    3. '):' → logprob: -5.770747661590576
    4. ':int' → logprob: -5.770747661590576
    5. '   ' → logprob: -7.395747661590576
    6. ')' → logprob: -7.645747661590576
    7. '       ' → logprob: -7.770747661590576
    8. ' ,' → logprob: -8.520747184753418
    9. '):
' → logprob: -8.770747184753418
    10. ',n' → logprob: -9.020747184753418

Token 480: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002152523025870323
    2. ' int' → logprob: -7.127152442932129
    3. '[int' → logprob: -7.377152442932129
    4. ')' → logprob: -7.627152442932129
    5. 'List' → logprob: -9.877152442932129
    6. ',' → logprob: -10.377152442932129
    7. 'Tuple' → logprob: -10.627152442932129
    8. '   ' → logprob: -10.627152442932129
    9. ':int' → logprob: -10.752152442932129
    10. ':' → logprob: -11.002152442932129

Token 481: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004266558215022087
    2. ')' → logprob: -5.504266738891602
    3. '   ' → logprob: -9.754266738891602
    4. ' ,' → logprob: -10.004266738891602
    5. '):' → logprob: -10.504266738891602
    6. '       ' → logprob: -10.629266738891602
    7. ':' → logprob: -11.504266738891602
    8. ',
' → logprob: -11.879266738891602
    9. ',int' → logprob: -12.254266738891602
    10. ',)' → logprob: -13.129266738891602

Token 482: ' ->' (ID: 2747)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6864674687385559
    2. ':' → logprob: -1.5614674091339111
    3. ' ->' → logprob: -1.9364674091339111
    4. ')' → logprob: -2.686467409133911
    5. '->' → logprob: -2.811467409133911
    6. ')->' → logprob: -4.56146764755249
    7. '       ' → logprob: -6.31146764755249
    8. '):' → logprob: -6.43646764755249
    9. '   ' → logprob: -8.686467170715332
    10. ' :' → logprob: -9.686467170715332

Token 483: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001552665780764073
    2. ' int' → logprob: -9.125155448913574
    3. 'Tuple' → logprob: -10.375155448913574
    4. 'Dict' → logprob: -12.500155448913574
    5. '[int' → logprob: -12.500155448913574
    6. 'List' → logprob: -12.750155448913574
    7. '(int' → logprob: -13.375155448913574
    8. 'tuple' → logprob: -14.250155448913574
    9. 'str' → logprob: -14.500155448913574
    10. 'Iterator' → logprob: -15.125155448913574

Token 484: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5135940313339233
    2. '       ' → logprob: -1.0135940313339233
    3. '(self' → logprob: -3.388594150543213
    4. ':
' → logprob: -6.013594150543213
    5. '):' → logprob: -6.888594150543213
    6. '   ' → logprob: -7.138594150543213
    7. '(' → logprob: -8.138593673706055
    8. ',' → logprob: -9.138593673706055
    9. ')' → logprob: -9.138593673706055
    10. '):
' → logprob: -9.513593673706055

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010247035970678553
    2. '   ' → logprob: -10.750102043151855
    3. 'result' → logprob: -10.875102043151855
    4. 'n' → logprob: -11.000102043151855
    5. 'count' → logprob: -11.750102043151855
    6. 'total' → logprob: -12.250102043151855
    7. 'pairs' → logprob: -12.375102043151855
    8. '        
' → logprob: -12.625102043151855
    9. '      ' → logprob: -12.625102043151855
    10. 'return' → logprob: -12.625102043151855

Token 486: ' #' (ID: 1069)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.011272282339632511
    2. 'if' → logprob: -4.886272430419922
    3. '       ' → logprob: -6.386272430419922
    4. 'factor' → logprob: -7.011272430419922
    5. ' factors' → logprob: -7.136272430419922
    6. 'facts' → logprob: -9.511272430419922
    7. 'fact' → logprob: -9.636272430419922
    8. 'n' → logprob: -10.011272430419922
    9. 'from' → logprob: -10.636272430419922
    10. ' if' → logprob: -11.136272430419922

Token 487: ' Number' (ID: 9184)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.03403337672352791
    2. 'if' → logprob: -4.284033298492432
    3. 'factor' → logprob: -4.284033298492432
    4. 'from' → logprob: -6.034033298492432
    5. '#' → logprob: -6.909033298492432
    6. ' factors' → logprob: -7.409033298492432
    7. 'total' → logprob: -8.40903377532959
    8. 'def' → logprob: -8.53403377532959
    9. 'n' → logprob: -8.53403377532959
    10. 'max' → logprob: -8.65903377532959

Token 488: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6629905700683594
    2. 'of' → logprob: -1.0379905700683594
    3. '_of' → logprob: -2.7879905700683594
    4. ' of' → logprob: -3.4129905700683594
    5. '   ' → logprob: -5.037990570068359
    6. 'tokens' → logprob: -5.162990570068359
    7. '=' → logprob: -5.412990570068359
    8. 'Of' → logprob: -5.412990570068359
    9. 'total' → logprob: -6.287990570068359
    10. 'ed' → logprob: -6.412990570068359

Token 489: ' pairs' (ID: 24702)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0910763069987297
    2. 'pairs' → logprob: -2.966076374053955
    3. 'f' → logprob: -4.341076374053955
    4. 'result' → logprob: -4.466076374053955
    5. 'distinct' → logprob: -6.091076374053955
    6. 'total' → logprob: -6.091076374053955
    7. 'prime' → logprob: -6.591076374053955
    8. 'count' → logprob: -7.216076374053955
    9. 'res' → logprob: -7.216076374053955
    10. ' divis' → logprob: -7.466076374053955

Token 490: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04174859821796417
    2. '=' → logprob: -3.791748523712158
    3. '<|end|>' → logprob: -4.916748523712158
    4. ' ' → logprob: -5.291748523712158
    5. ':' → logprob: -6.041748523712158
    6. '       ' → logprob: -6.916748523712158
    7. '(' → logprob: -8.041749000549316
    8. ' (' → logprob: -8.041749000549316
    9. '<|end|>' → logprob: -8.041749000549316
    10. 'import' → logprob: -8.416749000549316

Token 491: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07026873528957367
    2. 'i' → logprob: -3.0702686309814453
    3. 'x' → logprob: -4.695268630981445
    4. ')' → logprob: -5.320268630981445
    5. '(a' → logprob: -5.820268630981445
    6. 'n' → logprob: -6.695268630981445
    7. 'd' → logprob: -7.445268630981445
    8. ' a' → logprob: -7.570268630981445
    9. '(i' → logprob: -8.320268630981445
    10. 'l' → logprob: -8.320268630981445

Token 492: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005138330743648112
    2. ',b' → logprob: -8.250514030456543
    3. '=' → logprob: -9.250514030456543
    4. ')' → logprob: -9.250514030456543
    5. ' ,' → logprob: -11.125514030456543
    6. 'import' → logprob: -11.500514030456543
    7. 'b' → logprob: -12.000514030456543
    8. '<|end|>' → logprob: -12.125514030456543
    9. 'def' → logprob: -12.375514030456543
    10. ',d' → logprob: -12.625514030456543

Token 493: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001368453842587769
    2. ',' → logprob: -6.876368522644043
    3. '):' → logprob: -8.626368522644043
    4. ')=' → logprob: -10.126368522644043
    5. '   ' → logprob: -10.376368522644043
    6. ' )' → logprob: -10.376368522644043
    7. ')
' → logprob: -11.126368522644043
    8. '       ' → logprob: -11.251368522644043
    9. ':' → logprob: -11.501368522644043
    10. '):
' → logprob: -12.126368522644043

Token 494: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015601993538439274
    2. '=' → logprob: -4.890602111816406
    3. ',' → logprob: -6.015602111816406
    4. ' with' → logprob: -6.140602111816406
    5. '<|end|>' → logprob: -6.890602111816406
    6. ' that' → logprob: -7.265602111816406
    7. 'with' → logprob: -8.015602111816406
    8. ' ' → logprob: -8.015602111816406
    9. '       ' → logprob: -8.140602111816406
    10. ':' → logprob: -8.765602111816406

Token 495: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4139114022254944
    2. '1' → logprob: -1.4139113426208496
    3. 'l' → logprob: -2.5389113426208496
    4. 'math' → logprob: -4.66391134262085
    5. 'max' → logprob: -5.16391134262085
    6. '(' → logprob: -7.91391134262085
    7. ' ' → logprob: -8.288911819458008
    8. 'LC' → logprob: -8.413911819458008
    9. 'import' → logprob: -8.538911819458008
    10. '(a' → logprob: -8.538911819458008

Token 496: ' <=' (ID: 5017)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5292778015136719
    2. '<=' → logprob: -1.9042778015136719
    3. ',b' → logprob: -2.029277801513672
    4. ' <=' → logprob: -2.904277801513672
    5. '=' → logprob: -4.029277801513672
    6. ' ,' → logprob: -4.154277801513672
    7. ' *' → logprob: -4.529277801513672
    8. '*' → logprob: -4.904277801513672
    9. '```' → logprob: -5.779277801513672
    10. 'from' → logprob: -5.904277801513672

Token 497: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04865197464823723
    2. 'L' → logprob: -3.798651933670044
    3. ' b' → logprob: -3.798651933670044
    4. ' L' → logprob: -5.923652172088623
    5. ' ' → logprob: -11.798651695251465
    6. ' ' → logprob: -13.798651695251465
    7. 'a' → logprob: -14.798651695251465
    8. '	b' → logprob: -14.923651695251465
    9. '   ' → logprob: -15.798651695251465
    10. ',' → logprob: -16.04865264892578

Token 498: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.32403066754341125
    2. ',' → logprob: -1.6990306377410889
    3. '       ' → logprob: -3.199030637741089
    4. ' that' → logprob: -3.324030637741089
    5. ' ,' → logprob: -4.824030876159668
    6. ' is' → logprob: -6.074030876159668
    7. 'and' → logprob: -6.199030876159668
    8. ' =' → logprob: -7.324030876159668
    9. ' if' → logprob: -7.324030876159668
    10. ' ' → logprob: -7.949030876159668

Token 499: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005782547406852245
    2. 'L' → logprob: -6.130782604217529
    3. 'math' → logprob: -6.255782604217529
    4. '(a' → logprob: -7.880782604217529
    5. ' a' → logprob: -8.130782127380371
    6. 'self' → logprob: -8.130782127380371
    7. '(' → logprob: -8.505782127380371
    8. ' (' → logprob: -9.505782127380371
    9. 'import' → logprob: -9.505782127380371
    10. ' L' → logprob: -9.755782127380371

Token 500: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.5281884670257568
    2. 'c' → logprob: -0.9031884670257568
    3. '=' → logprob: -6.653188705444336
    4. 'cms' → logprob: -6.778188705444336
    5. 'e' → logprob: -7.528188705444336
    6. '   ' → logprob: -7.528188705444336
    7. ' =' → logprob: -7.653188705444336
    8. '_c' → logprob: -8.153188705444336
    9. ',' → logprob: -8.778188705444336
    10. 'm' → logprob: -9.278188705444336

Token 501: '(a' (ID: 6271)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.15477880835533142
    2. '==' → logprob: -2.5297787189483643
    3. '(a' → logprob: -3.2797787189483643
    4. ' =' → logprob: -4.529778957366943
    5. '(L' → logprob: -5.279778957366943
    6. '=' → logprob: -5.404778957366943
    7. '(' → logprob: -6.154778957366943
    8. '```' → logprob: -7.154778957366943
    9. ')' → logprob: -7.779778957366943
    10. ' (' → logprob: -8.029778480529785

Token 502: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024556336924433708
    2. ')' → logprob: -4.5245561599731445
    3. ' ,' → logprob: -5.3995561599731445
    4. '==' → logprob: -5.8995561599731445
    5. ',
' → logprob: -6.5245561599731445
    6. ' ==' → logprob: -6.6495561599731445
    7. ')==' → logprob: -6.8995561599731445
    8. '```' → logprob: -7.0245561599731445
    9. '=' → logprob: -7.5245561599731445
    10. ',

' → logprob: -8.899556159973145

Token 503: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003261249978095293
    2. ')==' → logprob: -6.253261089324951
    3. '==' → logprob: -7.253261089324951
    4. ' ==' → logprob: -8.37826156616211
    5. ' )' → logprob: -8.62826156616211
    6. '=' → logprob: -8.75326156616211
    7. ')=' → logprob: -11.37826156616211
    8. ',' → logprob: -11.87826156616211
    9. ' =' → logprob: -12.00326156616211
    10. '[' → logprob: -12.00326156616211

Token 504: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.029835306107997894
    2. '==' → logprob: -3.5298352241516113
    3. '=' → logprob: -10.15483570098877
    4. ' =' → logprob: -10.27983570098877
    5. ' ' → logprob: -11.90483570098877
    6. ' <=' → logprob: -13.52983570098877
    7. ')' → logprob: -14.02983570098877
    8. ')==' → logprob: -14.27983570098877
    9. ' ==
' → logprob: -14.40483570098877
    10. '```' → logprob: -14.65483570098877

Token 505: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.25192946195602417
    2. 'L' → logprob: -1.501929521560669
    3. ' ' → logprob: -16.126930236816406
    4. ')' → logprob: -16.376930236816406
    5. ' ' → logprob: -16.501930236816406
    6. '```' → logprob: -17.001930236816406
    7. '`' → logprob: -17.251930236816406
    8. '	L' → logprob: -17.501930236816406
    9. '    ' → logprob: -17.751930236816406
    10. ',' → logprob: -18.001930236816406

Token 506: ' equals' (ID: 29702)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37101322412490845
    2. '
' → logprob: -1.2460131645202637
    3. '        
' → logprob: -4.246013164520264
    4. ':' → logprob: -6.246013164520264
    5. '
' → logprob: -6.621013164520264
    6. ',' → logprob: -6.621013164520264
    7. '  
' → logprob: -7.746013164520264
    8. '    
' → logprob: -7.746013164520264
    9. '
        
' → logprob: -8.121013641357422
    10. '<|end|>' → logprob: -8.371013641357422

Token 507: '
' (ID: 198)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28432056307792664
    2. '       ' → logprob: -2.284320592880249
    3. 'prod' → logprob: -2.784320592880249
    4. 'sum' → logprob: -3.909320592880249
    5. 'math' → logprob: -4.03432035446167
    6. 'def' → logprob: -4.28432035446167
    7. '(' → logprob: -4.53432035446167
    8. '2' → logprob: -5.28432035446167
    9. 'product' → logprob: -5.40932035446167
    10. 'pow' → logprob: -5.65932035446167

Token 508: '       ' (ID: 309)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1469297856092453
    2. '       ' → logprob: -2.2719297409057617
    3. 'sum' → logprob: -4.521929740905762
    4. '(' → logprob: -5.021929740905762
    5. '0' → logprob: -5.771929740905762
    6. '2' → logprob: -6.021929740905762
    7. 'def' → logprob: -6.146929740905762
    8. 'd' → logprob: -6.646929740905762
    9. 'pow' → logprob: -6.896929740905762
    10. '   ' → logprob: -7.021929740905762

Token 509: ' #' (ID: 1069)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20979423820972443
    2. '       ' → logprob: -2.584794282913208
    3. '2' → logprob: -3.209794282913208
    4. 'prod' → logprob: -3.334794282913208
    5. '   ' → logprob: -4.584794044494629
    6. '(' → logprob: -4.959794044494629
    7. ' ' → logprob: -5.459794044494629
    8. 'sum' → logprob: -5.959794044494629
    9. 'def' → logprob: -6.084794044494629
    10. 'import' → logprob: -6.459794044494629

Token 510: ' product' (ID: 1888)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02991791069507599
    2. '2' → logprob: -4.4049177169799805
    3. 'prod' → logprob: -4.4049177169799805
    4. '(' → logprob: -6.2799177169799805
    5. 'pow' → logprob: -7.2799177169799805
    6. 'math' → logprob: -7.4049177169799805
    7. '   ' → logprob: -7.4049177169799805
    8. '       ' → logprob: -7.7799177169799805
    9. 'def' → logprob: -8.52991771697998
    10. ' ' → logprob: -8.65491771697998

Token 511: ' over' (ID: 1072)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16008944809436798
    2. 'of' → logprob: -3.0350894927978516
    3. ' of' → logprob: -3.1600894927978516
    4. '([' → logprob: -4.410089492797852
    5. '((' → logprob: -4.785089492797852
    6. ' (' → logprob: -4.785089492797852
    7. '(
' → logprob: -4.910089492797852
    8. '([(' → logprob: -5.035089492797852
    9. '_of' → logprob: -5.785089492797852
    10. '(i' → logprob: -6.035089492797852

Token 512: ' primes' (ID: 104042)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.183892846107483
    2. 'p' → logprob: -1.808892846107483
    3. '(' → logprob: -2.0588927268981934
    4. 'prime' → logprob: -2.0588927268981934
    5. ' (' → logprob: -2.3088927268981934
    6. '(pr' → logprob: -2.8088927268981934
    7. ' p' → logprob: -3.4338927268981934
    8. 'all' → logprob: -3.6838927268981934
    9. 'pr' → logprob: -4.058892726898193
    10. 'f' → logprob: -4.183892726898193

Token 513: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.20888987183570862
    2. 'of' → logprob: -2.958889961242676
    3. '   ' → logprob: -3.083889961242676
    4. ',' → logprob: -3.583889961242676
    5. '       ' → logprob: -4.208889961242676
    6. '(p' → logprob: -4.333889961242676
    7. '(' → logprob: -4.958889961242676
    8. '[' → logprob: -5.583889961242676
    9. ' (' → logprob: -5.833889961242676
    10. '[p' → logprob: -6.083889961242676

Token 514: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.6254501938819885
    2. ' (' → logprob: -1.2504501342773438
    3. '(i' → logprob: -1.8754501342773438
    4. '(count' → logprob: -4.125450134277344
    5. '(pr' → logprob: -5.500450134277344
    6. '((' → logprob: -7.125450134277344
    7. '(f' → logprob: -7.250450134277344
    8. '(' → logprob: -7.750450134277344
    9. '(e' → logprob: -8.125450134277344
    10. '(n' → logprob: -8.250450134277344

Token 515: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017033470794558525
    2. '2' → logprob: -4.142033576965332
    3. ' (' → logprob: -8.142033576965332
    4. '(f' → logprob: -8.267033576965332
    5. '(self' → logprob: -8.767033576965332
    6. '((' → logprob: -9.142033576965332
    7. 'f' → logprob: -10.267033576965332
    8. '(lambda' → logprob: -10.392033576965332
    9. 'factor' → logprob: -10.642033576965332
    10. '(count' → logprob: -10.892033576965332

Token 516: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3176303803920746
    2. ' *' → logprob: -1.567630410194397
    3. '*f' → logprob: -3.4426302909851074
    4. '*c' → logprob: -4.192630290985107
    5. '*v' → logprob: -4.442630290985107
    6. '*self' → logprob: -5.567630290985107
    7. '*k' → logprob: -7.692630290985107
    8. '*s' → logprob: -10.067630767822266
    9. '*m' → logprob: -10.067630767822266
    10. '*(' → logprob: -10.192630767822266

Token 517: 'ex' (ID: 490)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6397138237953186
    2. 'count' → logprob: -2.014713764190674
    3. 'f' → logprob: -2.264713764190674
    4. 'ex' → logprob: -2.389713764190674
    5. 'e' → logprob: -2.389713764190674
    6. 'exp' → logprob: -3.389713764190674
    7. 'c' → logprob: -4.514713764190674
    8. 'factor' → logprob: -5.764713764190674
    9. 'cnt' → logprob: -7.139713764190674
    10. 'v' → logprob: -7.514713764190674

Token 518: 'ponent' (ID: 1758)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3233363926410675
    2. 'ponent' → logprob: -1.3233363628387451
    3. 'ponents' → logprob: -4.948336601257324
    4. 'ps' → logprob: -6.573336601257324
    5. 'po' → logprob: -7.573336601257324
    6. '+' → logprob: -7.823336601257324
    7. '[' → logprob: -9.198336601257324
    8. '(p' → logprob: -9.323336601257324
    9. '[p' → logprob: -9.573336601257324
    10. 'pf' → logprob: -9.698336601257324

Token 519: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12737667560577393
    2. '+' → logprob: -2.1273765563964844
    3. 's' → logprob: -8.252376556396484
    4. ' ' → logprob: -9.752376556396484
    5. '   ' → logprob: -10.127376556396484
    6. ')' → logprob: -10.377376556396484
    7. 'f' → logprob: -11.252376556396484
    8. '[' → logprob: -12.002376556396484
    9. ')+' → logprob: -12.127376556396484
    10. 'n' → logprob: -12.252376556396484

Token 520: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000627610192168504
    2. ' ' → logprob: -7.375627517700195
    3. '```' → logprob: -15.375627517700195
    4. '2' → logprob: -15.625627517700195
    5. ' ' → logprob: -16.000627517700195
    6. '
' → logprob: -16.063127517700195
    7. '+' → logprob: -16.375627517700195
    8. ')' → logprob: -16.500627517700195
    9. '

' → logprob: -16.750627517700195
    10. '   ' → logprob: -16.813127517700195

Token 521: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5954712075181305e-05
    2. ' ' → logprob: -10.250036239624023
    3. '2' → logprob: -16.000036239624023
    4. '
' → logprob: -16.500036239624023
    5. '```' → logprob: -16.562536239624023
    6. '+' → logprob: -16.687536239624023
    7. '   ' → logprob: -17.125036239624023
    8. '

' → logprob: -17.187536239624023
    9. '0' → logprob: -17.500036239624023
    10. ' ' → logprob: -17.687536239624023

Token 522: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00433636037632823
    2. '       ' → logprob: -6.004336357116699
    3. ' )' → logprob: -6.504336357116699
    4. ')
' → logprob: -8.7543363571167
    5. 'def' → logprob: -10.0043363571167
    6. ').' → logprob: -10.0043363571167
    7. ')**' → logprob: -11.0043363571167
    8. '),' → logprob: -11.3793363571167
    9. '):' → logprob: -11.8793363571167
    10. '   ' → logprob: -11.8793363571167

Token 523: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09227122366428375
    2. 'from' → logprob: -2.717271327972412
    3. ' from' → logprob: -5.217271327972412
    4. 'import' → logprob: -5.967271327972412
    5. '
' → logprob: -6.092271327972412
    6. ',' → logprob: -6.092271327972412
    7. 'def' → logprob: -6.467271327972412
    8. '   ' → logprob: -6.592271327972412
    9. 'result' → logprob: -6.967271327972412
    10. '        
' → logprob: -7.092271327972412

Token 524: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25537219643592834
    2. ' ' → logprob: -1.505372166633606
    3. '
' → logprob: -6.130372047424316
    4. '0' → logprob: -7.380372047424316
    5. ' (' → logprob: -8.880372047424316
    6. 'self' → logprob: -9.755372047424316
    7. ')' → logprob: -9.880372047424316
    8. '       ' → logprob: -10.005372047424316
    9. '```' → logprob: -10.005372047424316
    10. ' -' → logprob: -10.505372047424316

Token 525: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10416576266288757
    2. ' ' → logprob: -2.35416579246521
    3. '0' → logprob: -5.854165554046631
    4. '
' → logprob: -7.854165554046631
    5. ' (' → logprob: -8.479166030883789
    6. '(' → logprob: -9.604166030883789
    7. 'self' → logprob: -9.604166030883789
    8. '2' → logprob: -9.854166030883789
    9. 'sum' → logprob: -10.229166030883789
    10. '       ' → logprob: -10.854166030883789

Token 526: ' divided' (ID: 28261)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8164761066436768
    2. ' -' → logprob: -1.3164761066436768
    3. '<|end|>' → logprob: -2.4414761066436768
    4. '
' → logprob: -2.8164761066436768
    5. '       ' → logprob: -2.9414761066436768
    6. ' ' → logprob: -3.6914761066436768
    7. '   ' → logprob: -4.316475868225098
    8. '-' → logprob: -4.441475868225098
    9. '  ' → logprob: -4.691475868225098
    10. ' )' → logprob: -4.816475868225098

Token 527: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.1434108018875122
    2. 'by' → logprob: -2.0184106826782227
    3. '2' → logprob: -8.518410682678223
    4. '       ' → logprob: -8.893410682678223
    5. ')' → logprob: -8.893410682678223
    6. '   ' → logprob: -9.393410682678223
    7. '```' → logprob: -9.643410682678223
    8. ' ' → logprob: -10.018410682678223
    9. 'div' → logprob: -11.018410682678223
    10. ',' → logprob: -12.018410682678223

Token 528: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008619185537099838
    2. ' ' → logprob: -4.75861930847168
    3. ' ' → logprob: -13.38361930847168
    4. '```' → logprob: -14.13361930847168
    5. '   ' → logprob: -14.25861930847168
    6. '
' → logprob: -14.63361930847168
    7. '1' → logprob: -15.00861930847168
    8. '3' → logprob: -15.88361930847168
    9. '       ' → logprob: -16.13361930847168
    10. '<|end|>' → logprob: -16.75861930847168

Token 529: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -17.125015258789062
    4. '   ' → logprob: -18.125015258789062
    5. '２' → logprob: -18.250015258789062
    6. '۲' → logprob: -18.687515258789062
    7. ' ' → logprob: -18.687515258789062
    8. 'to' → logprob: -18.750015258789062
    9. '1' → logprob: -18.875015258789062
    10. ',' → logprob: -18.937515258789062

Token 530: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006481591612100601
    2. '
' → logprob: -5.256481647491455
    3. ',' → logprob: -8.506481170654297
    4. ':' → logprob: -8.756481170654297
    5. '        
' → logprob: -9.006481170654297
    6. '<|end|>' → logprob: -9.006481170654297
    7. 'def' → logprob: -9.631481170654297
    8. '   ' → logprob: -9.631481170654297
    9. '<|end|>' → logprob: -9.881481170654297
    10. 'return' → logprob: -10.006481170654297

Token 531: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002453183988109231
    2. ')' → logprob: -7.377453327178955
    3. ':' → logprob: -7.377453327178955
    4. '   ' → logprob: -8.502452850341797
    5. '<|end|>' → logprob: -8.627452850341797
    6. ',' → logprob: -8.752452850341797
    7. '        
' → logprob: -8.877452850341797
    8. '{' → logprob: -9.127452850341797
    9. '*' → logprob: -9.877452850341797
    10. '):' → logprob: -9.877452850341797

Token 532: ' factor' (ID: 12332)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007853499613702297
    2. 'ex' → logprob: -5.5078535079956055
    3. 'factor' (adapté à ' factor') → logprob: -6.1328535079956055
    4. 'count' → logprob: -7.8828535079956055
    5. 'n' → logprob: -8.257853507995605
    6. 'f' → logprob: -8.382853507995605
    7. '```' → logprob: -9.257853507995605
    8. 'multip' → logprob: -9.382853507995605
    9. 'return' → logprob: -9.507853507995605
    10. 'result' → logprob: -9.632853507995605

Token 533: 'ization' (ID: 2860)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6245293617248535
    2. 's' → logprob: -0.9995293617248535
    3. '_f' → logprob: -2.9995293617248535
    4. 'ization' → logprob: -3.4995293617248535
    5. '       ' → logprob: -4.6245293617248535
    6. '=' → logprob: -5.4995293617248535
    7. '=f' → logprob: -6.4995293617248535
    8. 'ex' → logprob: -7.6245293617248535
    9. ' =' → logprob: -8.499528884887695
    10. '   ' → logprob: -9.124528884887695

Token 534: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16172456741333008
    2. '=' → logprob: -1.91172456741333
    3. 's' → logprob: -6.66172456741333
    4. '_engine' → logprob: -8.911724090576172
    5. '_' → logprob: -10.661724090576172
    6. '_f' → logprob: -11.036724090576172
    7. '   ' → logprob: -11.161724090576172
    8. 'f' → logprob: -11.411724090576172
    9. '=f' → logprob: -12.536724090576172
    10. 'engine' → logprob: -12.661724090576172

Token 535: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004084097687155008
    2. ' self' → logprob: -5.50408411026001
    3. '       ' → logprob: -12.254083633422852
    4. '	self' → logprob: -14.879083633422852
    5. '(self' → logprob: -15.254083633422852
    6. '[self' → logprob: -16.00408363342285
    7. '   ' → logprob: -16.12908363342285
    8. '=self' → logprob: -16.37908363342285
    9. '           ' → logprob: -17.62908363342285
    10. '```' → logprob: -19.75408363342285

Token 536: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -0.0004959598300047219
    2. 'factor' → logprob: -7.625495910644531
    3. '.' → logprob: -12.750495910644531
    4. '.fact' → logprob: -13.125495910644531
    5. '.fac' → logprob: -13.375495910644531
    6. ' .' → logprob: -14.875495910644531
    7. '_factor' → logprob: -15.375495910644531
    8. '..' → logprob: -15.875495910644531
    9. ' factor' → logprob: -16.12549591064453
    10. 'Factor' → logprob: -16.25049591064453

Token 537: 'ization' (ID: 2860)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.001034714630804956
    2. 'ization' → logprob: -7.501034736633301
    3. 'ate' → logprob: -9.1260347366333
    4. 'factor' → logprob: -9.1260347366333
    5. 'al' → logprob: -9.3760347366333
    6. 'e' → logprob: -10.2510347366333
    7. ' ' → logprob: -11.1260347366333
    8. 'ze' → logprob: -11.1260347366333
    9. 'alyze' → logprob: -11.2510347366333
    10. '_' → logprob: -11.3760347366333

Token 538: '_engine' (ID: 57393)
  Prédit: '_engine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_engine' → logprob: -0.0021253994200378656
    2. 'Engine' → logprob: -6.502125263214111
    3. 'engine' → logprob: -7.627125263214111
    4. 'factor' → logprob: -9.75212574005127
    5. ' Engine' → logprob: -10.00212574005127
    6. '_factor' → logprob: -12.00212574005127
    7. '_ENGINE' → logprob: -12.12712574005127
    8. 'ngine' → logprob: -12.25212574005127
    9. '.Engine' → logprob: -12.62712574005127
    10. '_eng' → logprob: -13.12712574005127

Token 539: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -0.00014799882774241269
    2. 'factor' → logprob: -9.000147819519043
    3. '.' → logprob: -10.875147819519043
    4. ' .' → logprob: -12.250147819519043
    5. '.fac' → logprob: -15.000147819519043
    6. '.fact' → logprob: -15.125147819519043
    7. '_factor' → logprob: -16.12514877319336
    8. '   ' → logprob: -17.00014877319336
    9. ' factor' → logprob: -17.12514877319336
    10. '.
' → logprob: -17.50014877319336

Token 540: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -6.539801688631997e-05
    2. 'ialize' → logprob: -10.875065803527832
    3. ' ' → logprob: -11.625065803527832
    4. '   ' → logprob: -11.750065803527832
    5. '```' → logprob: -12.125065803527832
    6. '{' → logprob: -12.500065803527832
    7. '
' → logprob: -13.000065803527832
    8. 'factor' → logprob: -13.125065803527832
    9. '       ' → logprob: -13.250065803527832
    10. 'ization' → logprob: -13.375065803527832

Token 541: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -5.080963092041202e-06
    2. '(' → logprob: -12.375004768371582
    3. '(
' → logprob: -14.250004768371582
    4. 'L' → logprob: -16.1250057220459
    5. ' (' → logprob: -18.0000057220459
    6. '(I' → logprob: -19.7500057220459
    7. '(l' → logprob: -20.3750057220459
    8. '(

' → logprob: -20.3750057220459
    9. '(
' → logprob: -21.0000057220459
    10. ' L' → logprob: -21.0000057220459

Token 542: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006818973924964666
    2. ')
' → logprob: -5.006818771362305
    3. '       ' → logprob: -9.256818771362305
    4. ')
' → logprob: -12.006818771362305
    5. ' )' → logprob: -14.256818771362305
    6. ')

' → logprob: -14.381818771362305
    7. '   ' → logprob: -14.756818771362305
    8. ')`' → logprob: -15.881818771362305
    9. ')return' → logprob: -16.756818771362305
    10. '),' → logprob: -17.006818771362305

Token 543: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.478889215737581e-05
    2. 'result' → logprob: -10.375054359436035
    3. 'count' → logprob: -11.625054359436035
    4. '        
' → logprob: -12.125054359436035
    5. 'return' → logprob: -13.250054359436035
    6. 'total' → logprob: -13.625054359436035
    7. 'n' → logprob: -13.750054359436035
    8. 'num' → logprob: -13.750054359436035
    9. '   ' → logprob: -13.750054359436035
    10. '```' → logprob: -14.250054359436035

Token 544: ' product' (ID: 1888)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6682729721069336
    2. 'count' → logprob: -1.4182729721069336
    3. '       ' → logprob: -2.9182729721069336
    4. 'pairs' → logprob: -2.9182729721069336
    5. 'total' → logprob: -3.1682729721069336
    6. 'product' (adapté à ' product') → logprob: -3.4182729721069336
    7. 'res' → logprob: -3.5432729721069336
    8. 'div' → logprob: -4.418272972106934
    9. 'prod' → logprob: -4.918272972106934
    10. 'ans' → logprob: -5.418272972106934

Token 545: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687145709991455
    2. '=' → logprob: -1.1368714570999146
    3. ',' → logprob: -15.636871337890625
    4. ' ' → logprob: -15.886871337890625
    5. ' *=' → logprob: -16.511871337890625
    6. 's' → logprob: -16.761871337890625
    7. '   ' → logprob: -17.261871337890625
    8. '  ' → logprob: -17.511871337890625
    9. ':' → logprob: -17.761871337890625
    10. '*=' → logprob: -18.261871337890625

Token 546: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -14.875006675720215
    4. '```' → logprob: -18.0000057220459
    5. '  ' → logprob: -18.5000057220459
    6. '=' → logprob: -18.5000057220459
    7. '2' → logprob: -18.8125057220459
    8. '(' → logprob: -19.5000057220459
    9. '       ' → logprob: -19.9375057220459
    10. 'product' → logprob: -20.0000057220459

Token 547: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.375005722045898
    3. '   ' → logprob: -13.875005722045898
    4. '(' → logprob: -16.8750057220459
    5. '```' → logprob: -16.9375057220459
    6. '2' → logprob: -17.0625057220459
    7. '  ' → logprob: -17.1875057220459
    8. 'product' → logprob: -18.0000057220459
    9. '       ' → logprob: -18.2500057220459
    10. '=' → logprob: -18.3750057220459

Token 548: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07329978793859482
    2. '<|end|>' → logprob: -2.6982998847961426
    3. ' 
' → logprob: -6.823299884796143
    4. ' for' → logprob: -7.448299884796143
    5. '<|end|>' → logprob: -7.948299884796143
    6. '    
' → logprob: -8.198299407958984
    7. '
' → logprob: -8.198299407958984
    8. 'for' → logprob: -8.323299407958984
    9. '  
' → logprob: -8.698299407958984
    10. ' ' → logprob: -9.198299407958984

Token 549: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 550: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.281747430562973
    2. ' for' → logprob: -1.5317474603652954
    3. '       ' → logprob: -3.531747341156006
    4. '	for' → logprob: -9.781747817993164
    5. ' ' → logprob: -11.031747817993164
    6. '   ' → logprob: -11.406747817993164
    7. '	' → logprob: -11.656747817993164
    8. '
' → logprob: -11.906747817993164
    9. '        
' → logprob: -12.156747817993164
    10. '        ' → logprob: -12.281747817993164

Token 551: ' exp' (ID: 2794)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.5825034976005554
    2. 'exp' → logprob: -0.8325034976005554
    3. 'e' → logprob: -5.332503318786621
    4. '_,' → logprob: -7.332503318786621
    5. 'expo' → logprob: -7.582503318786621
    6. 'p' → logprob: -8.207503318786621
    7. ' exponent' → logprob: -9.457503318786621
    8. 'prime' → logprob: -9.457503318786621
    9. ' exp' → logprob: -9.707503318786621
    10. 'count' → logprob: -10.457503318786621

Token 552: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002998143434524536
    2. 'in' → logprob: -6.002998352050781
    3. ',' → logprob: -7.752998352050781
    4. 'o' → logprob: -10.002998352050781
    5. ' ' → logprob: -11.377998352050781
    6. 'exp' → logprob: -11.877998352050781
    7. 'on' → logprob: -11.877998352050781
    8. 'onent' → logprob: -12.627998352050781
    9. 'ponent' → logprob: -13.252998352050781
    10. '_in' → logprob: -13.377998352050781

Token 553: ' factor' (ID: 12332)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.00014001218369230628
    2. ' factor' → logprob: -8.875140190124512
    3. 'f' → logprob: -16.625139236450195
    4. ' ' → logprob: -16.875139236450195
    5. '.factor' → logprob: -17.375139236450195
    6. '   ' → logprob: -17.500139236450195
    7. 'fact' → logprob: -17.750139236450195
    8. '_factor' → logprob: -18.375139236450195
    9. '[' → logprob: -19.125139236450195
    10. 'range' → logprob: -19.625139236450195

Token 554: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -1.1554993391036987
    2. 'actor' → logprob: -1.1554993391036987
    3. 'factor' → logprob: -1.1554993391036987
    4. 'ation' → logprob: -3.5304994583129883
    5. 's' → logprob: -4.280499458312988
    6. 'or' → logprob: -6.280499458312988
    7. 'ator' → logprob: -6.405499458312988
    8. 'oration' → logprob: -6.530499458312988
    9. 'action' → logprob: -6.655499458312988
    10. 'iation' → logprob: -7.155499458312988

Token 555: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -9.73446003627032e-05
    2. '.' → logprob: -9.250097274780273
    3. 'values' → logprob: -14.125097274780273
    4. '.value' → logprob: -14.875097274780273
    5. ' .' → logprob: -15.625097274780273
    6. '   ' → logprob: -18.625097274780273
    7. '.items' → logprob: -18.625097274780273
    8. '.Values' → logprob: -19.000097274780273
    9. ' values' → logprob: -20.750097274780273
    10. '       ' → logprob: -21.250097274780273

Token 556: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.05907122418284416
    2. ':' → logprob: -3.5590713024139404
    3. '():
' → logprob: -3.5590713024139404
    4. '):' → logprob: -8.43407154083252
    5. '()' → logprob: -9.30907154083252
    6. ':
' → logprob: -9.43407154083252
    7. '():
' → logprob: -10.43407154083252
    8. '):
' → logprob: -12.18407154083252
    9. ' :' → logprob: -13.30907154083252
    10. '():

' → logprob: -13.55907154083252

Token 557: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001616034540347755
    2. 'product' → logprob: -7.12661600112915
    3. '       ' → logprob: -8.376616477966309
    4. ' product' → logprob: -8.626616477966309
    5. '   ' → logprob: -8.751616477966309
    6. '          ' → logprob: -9.876616477966309
    7. ',' → logprob: -10.126616477966309
    8. '	       ' → logprob: -10.376616477966309
    9. '<|end|>' → logprob: -10.626616477966309
    10. '	product' → logprob: -10.751616477966309

Token 558: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' (adapté à ' product') → logprob: -0.026685265824198723
    2. ' product' → logprob: -4.0266852378845215
    3. '           ' → logprob: -5.0266852378845215
    4. '       ' → logprob: -6.2766852378845215
    5. '               ' → logprob: -10.27668571472168
    6. '	product' → logprob: -11.27668571472168
    7. '   ' → logprob: -11.65168571472168
    8. '.product' → logprob: -13.90168571472168
    9. '(product' → logprob: -14.65168571472168
    10. '$product' → logprob: -14.77668571472168

Token 559: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.0025235803332179785
    2. '*' → logprob: -6.127523422241211
    3. ' *=' → logprob: -8.002523422241211
    4. '=' → logprob: -13.377523422241211
    5. '   ' → logprob: -13.752523422241211
    6. '```' → logprob: -14.252523422241211
    7. '\' → logprob: -15.002523422241211
    8. '  ' → logprob: -16.50252342224121
    9. ' ' → logprob: -16.75252342224121
    10. '	' → logprob: -17.62752342224121

Token 560: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02381277084350586
    2. '2' → logprob: -3.773812770843506
    3. ' (' → logprob: -7.523812770843506
    4. ' ' → logprob: -10.898813247680664
    5. '((' → logprob: -12.273813247680664
    6. '   ' → logprob: -14.148813247680664
    7. '{' → logprob: -14.148813247680664
    8. '(
' → logprob: -14.398813247680664
    9. '1' → logprob: -14.648813247680664
    10. '  ' → logprob: -14.773813247680664

Token 561: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002269562566652894
    2. '(' → logprob: -6.127269744873047
    3. ' ' → logprob: -9.502269744873047
    4. 'exp' → logprob: -13.002269744873047
    5. '   ' → logprob: -13.127269744873047
    6. ' (' → logprob: -13.127269744873047
    7. '1' → logprob: -14.127269744873047
    8. '[' → logprob: -14.252269744873047
    9. '```' → logprob: -14.752269744873047
    10. '  ' → logprob: -15.377269744873047

Token 562: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.023245595395565033
    2. ' *' → logprob: -3.7732455730438232
    3. ' ' → logprob: -17.398244857788086
    4. '*object' → logprob: -17.648244857788086
    5. '**' → logprob: -17.773244857788086
    6. '*out' → logprob: -18.648244857788086
    7. '   ' → logprob: -18.773244857788086
    8. '*
' → logprob: -19.148244857788086
    9. '```' → logprob: -19.273244857788086
    10. ' ' → logprob: -19.398244857788086

Token 563: ' exp' (ID: 2794)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -1.5048530030981055e-06
    2. ' exp' → logprob: -13.500001907348633
    3. '	exp' → logprob: -18.125001907348633
    4. '   ' → logprob: -18.750001907348633
    5. '(exp' → logprob: -19.000001907348633
    6. ''exp' → logprob: -19.375001907348633
    7. '```' → logprob: -19.750001907348633
    8. 'ex' → logprob: -20.625001907348633
    9. 'e' → logprob: -20.875001907348633
    10. ' ' → logprob: -21.250001907348633

Token 564: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04858873412013054
    2. ' +' → logprob: -3.048588752746582
    3. ')+' → logprob: -14.173588752746582
    4. ')' → logprob: -15.048588752746582
    5. '```' → logprob: -16.673587799072266
    6. ' ' → logprob: -16.798587799072266
    7. '++' → logprob: -16.798587799072266
    8. 's' → logprob: -16.923587799072266
    9. '
' → logprob: -17.423587799072266
    10. '1' → logprob: -17.548587799072266

Token 565: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.64708495605737e-05
    2. ' ' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.125066757202148
    4. '```' → logprob: -17.18756675720215
    5. '  ' → logprob: -17.37506675720215
    6. '
' → logprob: -17.37506675720215
    7. ')' → logprob: -17.93756675720215
    8. '۱' → logprob: -18.68756675720215
    9. '

' → logprob: -18.87506675720215
    10. '2' → logprob: -19.06256675720215

Token 566: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '
' → logprob: -18.000001907348633
    4. '   ' → logprob: -18.250001907348633
    5. '```' → logprob: -18.250001907348633
    6. ')' → logprob: -18.750001907348633
    7. '

' → logprob: -19.875001907348633
    8. '2' → logprob: -20.000001907348633
    9. '۱' → logprob: -20.000001907348633
    10. '<|end|>' → logprob: -20.750001907348633

Token 567: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002170839812606573
    2. ' )' → logprob: -6.252171039581299
    3. '+' → logprob: -8.87717056274414
    4. ')
' → logprob: -10.00217056274414
    5. ' +' → logprob: -10.00217056274414
    6. ' ' → logprob: -12.37717056274414
    7. '+)' → logprob: -13.12717056274414
    8. '<|end|>' → logprob: -13.25217056274414
    9. ' )
' → logprob: -14.12717056274414
    10. ')+' → logprob: -14.50217056274414

Token 568: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06712787598371506
    2. '
' → logprob: -2.8171279430389404
    3. ' return' → logprob: -6.442127704620361
    4. 'return' → logprob: -6.567127704620361
    5. '        
' → logprob: -6.817127704620361
    6. '    
' → logprob: -7.817127704620361
    7. '  
' → logprob: -8.19212818145752
    8. ' 
' → logprob: -9.56712818145752
    9. '<|end|>' → logprob: -9.56712818145752
    10. '	return' → logprob: -10.19212818145752

Token 569: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28052759170532227
    2. 'return' (adapté à ' return') → logprob: -2.0305275917053223
    3. ' return' → logprob: -2.2805275917053223
    4. '
' → logprob: -4.530527591705322
    5. '        
' → logprob: -8.530527114868164
    6. '   ' → logprob: -10.530527114868164
    7. ' 
' → logprob: -10.905527114868164
    8. ',' → logprob: -11.280527114868164
    9. '
' → logprob: -11.405527114868164
    10. ' ' → logprob: -11.530527114868164

Token 570: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.20143429934978485
    2. '(product' → logprob: -1.7014342546463013
    3. ' product' → logprob: -11.201434135437012
    4. 'product' → logprob: -12.701434135437012
    5. '   ' → logprob: -13.451434135437012
    6. '(' → logprob: -14.076434135437012
    7. '(prod' → logprob: -14.201434135437012
    8. '(products' → logprob: -14.451434135437012
    9. '       ' → logprob: -15.076434135437012
    10. '(Product' → logprob: -15.701434135437012

Token 571: 'product' (ID: 5260)
  Prédit: 'product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -1.0280383548888494e-06
    2. ' product' → logprob: -14.000000953674316
    3. '(product' → logprob: -15.875000953674316
    4. 'prod' → logprob: -18.250001907348633
    5. 'Product' → logprob: -19.750001907348633
    6. '$product' → logprob: -20.000001907348633
    7. '	product' → logprob: -20.625001907348633
    8. '1' → logprob: -20.875001907348633
    9. '_product' → logprob: -21.500001907348633
    10. '
' → logprob: -21.750001907348633

Token 572: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740790128707886
    2. '+' → logprob: -0.9740790128707886
    3. '
' → logprob: -14.224079132080078
    4. ' ' → logprob: -14.224079132080078
    5. '```' → logprob: -15.099079132080078
    6. '+
' → logprob: -16.099079132080078
    7. ' plus' → logprob: -16.224079132080078
    8. '＋' → logprob: -16.474079132080078
    9. ' +
' → logprob: -16.849079132080078
    10. '   ' → logprob: -17.724079132080078

Token 573: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014163863845169544
    2. ' ' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.639163970947266
    4. '
' → logprob: -16.639163970947266
    5. '0' → logprob: -16.764163970947266
    6. '  ' → logprob: -16.889163970947266
    7. '    ' → logprob: -17.639163970947266
    8. '```' → logprob: -17.639163970947266
    9. '     ' → logprob: -18.014163970947266
    10. ' ' → logprob: -18.389163970947266

Token 574: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.875001907348633
    4. '0' → logprob: -19.250001907348633
    5. '```' → logprob: -19.750001907348633
    6. '  ' → logprob: -19.875001907348633
    7. '
' → logprob: -20.250001907348633
    8. '    ' → logprob: -21.125001907348633
    9. '2' → logprob: -21.125001907348633
    10. '     ' → logprob: -21.375001907348633

Token 575: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001954087056219578
    2. ')//' → logprob: -6.251954078674316
    3. ' )' → logprob: -10.751954078674316
    4. '//' → logprob: -12.626954078674316
    5. '   ' → logprob: -14.751954078674316
    6. ')>>' → logprob: -15.626954078674316
    7. ' //' → logprob: -15.751954078674316
    8. ')
' → logprob: -17.126955032348633
    9. '```' → logprob: -17.501955032348633
    10. ' ' → logprob: -18.001955032348633

Token 576: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.005522481165826321
    2. '//' → logprob: -5.25552225112915
    3. '   ' → logprob: -9.755522727966309
    4. ' ' → logprob: -9.880522727966309
    5. ' ' → logprob: -10.005522727966309
    6. '       ' → logprob: -10.380522727966309
    7. '```' → logprob: -10.755522727966309
    8. '
' → logprob: -10.755522727966309
    9. '>>' → logprob: -11.380522727966309
    10. ' >>' → logprob: -11.505522727966309

Token 577: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -19.00000762939453
    4. '۲' → logprob: -19.75000762939453
    5. '```' → logprob: -20.00000762939453
    6. '  ' → logprob: -20.37500762939453
    7. '２' → logprob: -20.37500762939453
    8. '
' → logprob: -20.50000762939453
    9. '٢' → logprob: -22.00000762939453
    10. '२' → logprob: -22.06250762939453

Token 578: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '۲' → logprob: -21.0
    4. '２' → logprob: -21.125
    5. '```' → logprob: -21.875
    6. '   ' → logprob: -22.25
    7. '२' → logprob: -22.875
    8. '22' → logprob: -22.875
    9. '212' → logprob: -23.25
    10. '٢' → logprob: -23.4375

Token 579: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011475946754217148
    2. 'if' → logprob: -4.636476039886475
    3. 'import' → logprob: -6.386476039886475
    4. '```' → logprob: -11.261475563049316
    5. '<|end|>' → logprob: -11.636475563049316
    6. '#' → logprob: -11.886475563049316
    7. ' if' → logprob: -12.636475563049316
    8. 'from' → logprob: -14.011475563049316
    9. ' def' → logprob: -14.386475563049316
    10. '#!/' → logprob: -15.386475563049316

Token 580: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2017873227596283
    2. 'if' → logprob: -1.7017873525619507
    3. 'import' → logprob: -8.951786994934082
    4. '#' → logprob: -9.076786994934082
    5. '```' → logprob: -9.576786994934082
    6. '<|end|>' → logprob: -10.076786994934082
    7. ' if' → logprob: -11.326786994934082
    8. 'class' → logprob: -12.201786994934082
    9. ' def' → logprob: -14.701786994934082
    10. '
' → logprob: -15.076786994934082

Token 581: ' Solver' (ID: 141655)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.6284604668617249
    2. 'Main' → logprob: -1.00346040725708
    3. 'Solver' → logprob: -3.00346040725708
    4. 'main' → logprob: -3.87846040725708
    5. 'Runner' → logprob: -4.50346040725708
    6. ' Solution' → logprob: -4.75346040725708
    7. ' Solver' → logprob: -5.87846040725708
    8. ' main' → logprob: -6.12846040725708
    9. ' Main' → logprob: -6.50346040725708
    10. 'Application' → logprob: -7.12846040725708

Token 582: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023255610838532448
    2. ':
' → logprob: -3.7732555866241455
    3. ':

' → logprob: -12.648255348205566
    4. '<|end|>' → logprob: -13.273255348205566
    5. ':def' → logprob: -13.523255348205566
    6. '(object' → logprob: -14.398255348205566
    7. '():' → logprob: -14.773255348205566
    8. '):' → logprob: -14.773255348205566
    9. '():
' → logprob: -14.898255348205566
    10. ':
' → logprob: -15.273255348205566

Token 583: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013216708786785603
    2. ' def' → logprob: -4.513216495513916
    3. ':
' → logprob: -6.763216495513916
    4. ':' → logprob: -7.638216495513916
    5. 'def' → logprob: -7.638216495513916
    6. '	def' → logprob: -10.513216972351074
    7. ':def' → logprob: -11.388216972351074
    8. '):
' → logprob: -13.013216972351074
    9. ',' → logprob: -13.888216972351074
    10. 'class' → logprob: -14.013216972351074

Token 584: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.12974762916564941
    2. ' def' → logprob: -2.1297476291656494
    3. '   ' → logprob: -5.87974739074707
    4. 'import' → logprob: -12.50474739074707
    5. ':' → logprob: -12.62974739074707
    6. 'class' → logprob: -12.75474739074707
    7. ':
' → logprob: -12.87974739074707
    8. '	def' → logprob: -13.00474739074707
    9. ':def' → logprob: -13.12974739074707
    10. '__' → logprob: -13.62974739074707

Token 585: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.6103488802909851
    2. ' __' → logprob: -1.4853489398956299
    3. '__' → logprob: -1.6103489398956299
    4. ' def' → logprob: -4.110348701477051
    5. 'def' → logprob: -4.610348701477051
    6. ' init' → logprob: -5.860348701477051
    7. '_init' → logprob: -7.360348701477051
    8. 'staticmethod' → logprob: -8.23534870147705
    9. '___' → logprob: -8.98534870147705
    10. '```' → logprob: -9.23534870147705

Token 586: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'def' → logprob: -16.5
    3. ' init' → logprob: -17.0
    4. '(init' → logprob: -17.625
    5. '```' → logprob: -17.875
    6. '_init' → logprob: -18.125
    7. '   ' → logprob: -18.75
    8. '
' → logprob: -18.875
    9. 'call' → logprob: -19.375
    10. 'name' → logprob: -19.375

Token 587: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0021465737372636795
    2. '__' → logprob: -6.3771467208862305
    3. '__(
' → logprob: -7.7521467208862305
    4. '_(' → logprob: -12.25214672088623
    5. '(self' → logprob: -12.62714672088623
    6. '__((' → logprob: -13.00214672088623
    7. '(' → logprob: -13.12714672088623
    8. '_' → logprob: -14.00214672088623
    9. '__('' → logprob: -14.75214672088623
    10. '__("' → logprob: -15.12714672088623

Token 588: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.2994620242971e-06
    2. ' self' → logprob: -12.750008583068848
    3. '(self' → logprob: -13.250008583068848
    4. '):
' → logprob: -13.375008583068848
    5. ')' → logprob: -13.625008583068848
    6. '       ' → logprob: -15.000008583068848
    7. 'Self' → logprob: -15.375008583068848
    8. '
' → logprob: -16.25000762939453
    9. 'Input' → logprob: -17.37500762939453
    10. '	self' → logprob: -17.75000762939453

Token 589: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.656383680412546e-05
    2. 'self' → logprob: -10.750046730041504
    3. '):' → logprob: -10.875046730041504
    4. ' ,' → logprob: -12.750046730041504
    5. '):
' → logprob: -13.875046730041504
    6. ',self' → logprob: -14.000046730041504
    7. '   ' → logprob: -14.375046730041504
    8. ',
' → logprob: -14.625046730041504
    9. '(self' → logprob: -15.500046730041504
    10. '       ' → logprob: -15.875046730041504

Token 590: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008734769187867641
    2. 'factor' → logprob: -5.008734703063965
    3. 'output' → logprob: -6.883734703063965
    4. 'source' → logprob: -7.633734703063965
    5. ' input' → logprob: -7.883734703063965
    6. ')' → logprob: -9.758734703063965
    7. '):
' → logprob: -10.383734703063965
    8. '):' → logprob: -11.883734703063965
    9. 'self' → logprob: -12.258734703063965
    10. ' factor' → logprob: -12.383734703063965

Token 591: '_source' (ID: 23344)
  Prédit: '_handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -0.00040338258258998394
    2. '_source' → logprob: -8.25040340423584
    3. 'handler' → logprob: -9.50040340423584
    4. '):' → logprob: -11.00040340423584
    5. 'Handler' → logprob: -11.12540340423584
    6. 'source' → logprob: -11.75040340423584
    7. ',' → logprob: -11.75040340423584
    8. ':' → logprob: -11.87540340423584
    9. '_iterator' → logprob: -12.87540340423584
    10. '_reader' → logprob: -12.87540340423584

Token 592: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10818202793598175
    2. '):' → logprob: -2.358181953430176
    3. '):
' → logprob: -4.858181953430176
    4. ')' → logprob: -9.733181953430176
    5. ',' → logprob: -9.733181953430176
    6. ' :' → logprob: -10.608181953430176
    7. ' ):' → logprob: -10.733181953430176
    8. '):
' → logprob: -12.108181953430176
    9. '):

' → logprob: -12.858181953430176
    10. '   ' → logprob: -13.358181953430176

Token 593: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.0013858318561688066
    2. 'sys' → logprob: -6.876385688781738
    3. ' Iterator' → logprob: -8.501385688781738
    4. 'Input' → logprob: -9.751385688781738
    5. 'Iterable' → logprob: -9.876385688781738
    6. 'iter' → logprob: -10.751385688781738
    7. '	Iterator' → logprob: -12.251385688781738
    8. 'Iter' → logprob: -12.501385688781738
    9. 'iterator' → logprob: -12.751385688781738
    10. '_iterator' → logprob: -13.001385688781738

Token 594: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.0001234428636962548
    2. '[int' → logprob: -9.000123023986816
    3. 'str' → logprob: -17.750123977661133
    4. '[' → logprob: -18.875123977661133
    5. ')' → logprob: -20.000123977661133
    6. '):' → logprob: -20.500123977661133
    7. '[s' → logprob: -20.875123977661133
    8. '[
' → logprob: -21.250123977661133
    9. '```' → logprob: -21.250123977661133
    10. '):
' → logprob: -21.375123977661133

Token 595: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05516942963004112
    2. '):
' → logprob: -2.9301693439483643
    3. '):
' → logprob: -9.055169105529785
    4. ')' → logprob: -9.555169105529785
    5. ',' → logprob: -9.680169105529785
    6. ']):' → logprob: -11.055169105529785
    7. ' ):' → logprob: -11.805169105529785
    8. ' ' → logprob: -13.055169105529785
    9. '   ' → logprob: -13.055169105529785
    10. ']):
' → logprob: -13.055169105529785

Token 596: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002917254460044205
    2. 'def' → logprob: -8.75029182434082
    3. 'self' → logprob: -9.25029182434082
    4. ' self' → logprob: -10.75029182434082
    5. '   ' → logprob: -12.25029182434082
    6. ' def' → logprob: -12.62529182434082
    7. ',' → logprob: -13.37529182434082
    8. '```' → logprob: -13.37529182434082
    9. '<|end|>' → logprob: -13.50029182434082
    10. ':' → logprob: -13.62529182434082

Token 597: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0002559753193054348
    2. '       ' → logprob: -8.500255584716797
    3. ' self' → logprob: -9.875255584716797
    4. 'def' → logprob: -14.625255584716797
    5. 'input' → logprob: -15.250255584716797
    6. '   ' → logprob: -16.125255584716797
    7. 'output' → logprob: -16.375255584716797
    8. '        
' → logprob: -18.000255584716797
    9. '
' → logprob: -18.375255584716797
    10. 'super' → logprob: -18.500255584716797

Token 598: '.input' (ID: 18322)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.026495246216654778
    2. '.input' → logprob: -3.6514952182769775
    3. ' input' → logprob: -8.776494979858398
    4. '_input' → logprob: -10.651494979858398
    5. 'Input' → logprob: -12.401494979858398
    6. 'factor' → logprob: -12.651494979858398
    7. 'handler' → logprob: -12.901494979858398
    8. '   ' → logprob: -13.526494979858398
    9. 'import' → logprob: -13.526494979858398
    10. '=input' → logprob: -13.901494979858398

Token 599: '_handler' (ID: 23758)
  Prédit: '_source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_source' → logprob: -0.003316384507343173
    2. '_handler' → logprob: -5.878316402435303
    3. 'source' → logprob: -7.878316402435303
    4. ' =' → logprob: -9.378315925598145
    5. '=' → logprob: -10.753315925598145
    6. '_lines' → logprob: -11.003315925598145
    7. '_iterator' → logprob: -12.878315925598145
    8. '_reader' → logprob: -13.503315925598145
    9. '_handle' → logprob: -13.628315925598145
    10. 'Source' → logprob: -13.878315925598145

Token 600: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759419798851013
    2. ' =' → logprob: -0.8259419798851013
    3. ' ' → logprob: -14.200942039489746
    4. '   ' → logprob: -14.700942039489746
    5. '        ' → logprob: -14.950942039489746
    6. 'import' → logprob: -15.200942039489746
    7. '    ' → logprob: -15.200942039489746
    8. '=self' → logprob: -15.575942039489746
    9. ',' → logprob: -15.825942039489746
    10. '       ' → logprob: -16.45094108581543

Token 601: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -4.5491004129871726e-05
    2. ' Input' → logprob: -10.000045776367188
    3. 'input' → logprob: -20.125045776367188
    4. '	Input' → logprob: -21.250045776367188
    5. '_input' → logprob: -22.375045776367188
    6. ' input' → logprob: -24.000045776367188
    7. '<Input' → logprob: -24.125045776367188
    8. '_Input' → logprob: -24.625045776367188
    9. '   ' → logprob: -24.750045776367188
    10. 'INPUT' → logprob: -25.250045776367188

Token 602: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -5.512236498361744e-07
    2. '_Handler' → logprob: -16.125
    3. 'handler' → logprob: -16.25
    4. 'Iterator' → logprob: -16.625
    5. '_handler' → logprob: -17.0
    6. 'Hand' → logprob: -17.125
    7. 'Handle' → logprob: -18.25
    8. 'Source' → logprob: -18.375
    9. 'Handlers' → logprob: -18.625
    10. 'Input' → logprob: -18.75

Token 603: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -8.180258191714529e-06
    2. '(' → logprob: -11.875008583068848
    3. '(
' → logprob: -14.750008583068848
    4. '(source' → logprob: -15.250008583068848
    5. ' (' → logprob: -15.500008583068848
    6. '(in' → logprob: -15.750008583068848
    7. 'input' → logprob: -16.37500762939453
    8. '(self' → logprob: -17.75000762939453
    9. '(inp' → logprob: -17.87500762939453
    10. ',input' → logprob: -18.00000762939453

Token 604: '_source' (ID: 23344)
  Prédit: '_source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_source' → logprob: -4.36574100604048e-06
    2. 'source' → logprob: -12.625004768371582
    3. '=' → logprob: -15.625004768371582
    4. '(source' → logprob: -15.625004768371582
    5. '_s' → logprob: -15.750004768371582
    6. '_' → logprob: -16.125003814697266
    7. ')' → logprob: -16.125003814697266
    8. '_handler' → logprob: -17.000003814697266
    9. 's' → logprob: -17.250003814697266
    10. '_
' → logprob: -17.250003814697266

Token 605: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1603565514087677
    2. ')' → logprob: -1.9103565216064453
    3. '       ' → logprob: -9.160356521606445
    4. '   ' → logprob: -10.910356521606445
    5. ' )
' → logprob: -12.160356521606445
    6. ')
' → logprob: -12.910356521606445
    7. '
' → logprob: -14.910356521606445
    8. ')

' → logprob: -15.035356521606445
    9. ' ' → logprob: -15.535356521606445
    10. ',' → logprob: -16.160356521606445

Token 606: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051391102373600006
    2. 'self' → logprob: -3.051391124725342
    3. ' self' → logprob: -5.926391124725342
    4. '
' → logprob: -9.551390647888184
    5. '   ' → logprob: -10.551390647888184
    6. '<|end|>' → logprob: -10.801390647888184
    7. 'def' → logprob: -12.551390647888184
    8. '        
' → logprob: -13.301390647888184
    9. '        ' → logprob: -13.926390647888184
    10. '           ' → logprob: -13.926390647888184

Token 607: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0005673298146575689
    2. '       ' → logprob: -7.500567436218262
    3. ' self' → logprob: -11.625567436218262
    4. 'output' → logprob: -12.375567436218262
    5. '   ' → logprob: -14.625567436218262
    6. '
' → logprob: -14.875567436218262
    7. 'def' → logprob: -15.875567436218262
    8. '           ' → logprob: -16.625566482543945
    9. '```' → logprob: -17.000566482543945
    10. 'from' → logprob: -17.125566482543945

Token 608: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -0.002541417023167014
    2. '.factor' → logprob: -6.002541542053223
    3. 'output' → logprob: -9.877541542053223
    4. '.' → logprob: -11.752541542053223
    5. '._' → logprob: -13.502541542053223
    6. 'factor' → logprob: -13.627541542053223
    7. ' .' → logprob: -13.752541542053223
    8. '.input' → logprob: -14.252541542053223
    9. '.fact' → logprob: -14.502541542053223
    10. '.p' → logprob: -14.752541542053223

Token 609: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -1.4140441635390744e-05
    2. 'Handler' → logprob: -11.750014305114746
    3. '_handle' → logprob: -12.250014305114746
    4. 'handler' → logprob: -14.375014305114746
    5. '_writer' → logprob: -15.875014305114746
    6. '_' → logprob: -16.37501335144043
    7. '_handlers' → logprob: -16.50001335144043
    8. 's' → logprob: -16.62501335144043
    9. '_Handler' → logprob: -16.87501335144043
    10. '_HANDLER' → logprob: -17.25001335144043

Token 610: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602245420217514
    2. '=' → logprob: -1.9102245569229126
    3. ' ' → logprob: -16.28522491455078
    4. ' =
' → logprob: -16.28522491455078
    5. '   ' → logprob: -16.78522491455078
    6. ',' → logprob: -17.03522491455078
    7. ')' → logprob: -17.16022491455078
    8. 'import' → logprob: -17.53522491455078
    9. '<|end|>' → logprob: -18.53522491455078
    10. '=
' → logprob: -18.66022491455078

Token 611: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -2.7610454708337784e-05
    2. ' Output' → logprob: -10.500027656555176
    3. '	Output' → logprob: -20.62502670288086
    4. 'Input' → logprob: -22.12502670288086
    5. '(Output' → logprob: -22.25002670288086
    6. 'output' → logprob: -22.87502670288086
    7. 'Out' → logprob: -23.75002670288086
    8. '_output' → logprob: -24.50002670288086
    9. '_Output' → logprob: -24.50002670288086
    10. '   ' → logprob: -24.62502670288086

Token 612: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: 0.0
    2. '_Handler' → logprob: -18.25
    3. 'handler' → logprob: -18.75
    4. 'Handle' → logprob: -19.625
    5. 'Output' → logprob: -19.75
    6. '_handler' → logprob: -19.875
    7. ' Handler' → logprob: -20.625
    8. '_HANDLER' → logprob: -20.875
    9. 'Hand' → logprob: -21.375
    10. 'Handlers' → logprob: -22.375

Token 613: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.309382373117842e-05
    2. '
' → logprob: -10.625033378601074
    3. ',' → logprob: -12.125033378601074
    4. 'self' → logprob: -12.875033378601074
    5. ' self' → logprob: -15.625033378601074
    6. '<|end|>' → logprob: -15.625033378601074
    7. ',
' → logprob: -15.750033378601074
    8. '   ' → logprob: -16.375032424926758
    9. '        
' → logprob: -16.750032424926758
    10. 'from' → logprob: -17.375032424926758

Token 614: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016878528520464897
    2. 'self' → logprob: -4.141878604888916
    3. ' self' → logprob: -7.766878604888916
    4. '   ' → logprob: -8.016878128051758
    5. '
' → logprob: -9.641878128051758
    6. 'def' → logprob: -11.641878128051758
    7. 'from' → logprob: -12.766878128051758
    8. '```' → logprob: -12.766878128051758
    9. '	self' → logprob: -13.266878128051758
    10. '<|end|>' → logprob: -13.391878128051758

Token 615: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0022140119690448046
    2. '       ' → logprob: -6.502213954925537
    3. ' self' → logprob: -7.252213954925537
    4. '
' → logprob: -13.127214431762695
    5. '   ' → logprob: -14.377214431762695
    6. 'from' → logprob: -15.877214431762695
    7. 'def' → logprob: -16.627214431762695
    8. '        
' → logprob: -16.877214431762695
    9. '	self' → logprob: -18.127214431762695
    10. '```' → logprob: -18.252214431762695

Token 616: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -0.00012296605564188212
    2. 'factor' → logprob: -10.000123023986816
    3. '.fac' → logprob: -10.000123023986816
    4. '.fact' → logprob: -10.500123023986816
    5. '.factory' → logprob: -13.625123023986816
    6. '.' → logprob: -14.000123023986816
    7. '.engine' → logprob: -14.250123023986816
    8. ' .' → logprob: -14.500123023986816
    9. '.p' → logprob: -15.000123023986816
    10. '_factor' → logprob: -15.375123023986816

Token 617: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: 0.0
    2. 'ation' → logprob: -18.625
    3. 'iation' → logprob: -21.0
    4. 'ize' → logprob: -21.125
    5. 'IZATION' → logprob: -21.25
    6. '   ' → logprob: -22.0
    7. '_factor' → logprob: -23.25
    8. 'factor' → logprob: -23.625
    9. '       ' → logprob: -24.0
    10. 'izat' → logprob: -24.0

Token 618: '_engine' (ID: 57393)
  Prédit: '_engine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_engine' → logprob: -0.0003529814421199262
    2. 'engine' → logprob: -8.00035285949707
    3. 'Engine' → logprob: -11.00035285949707
    4. '=' → logprob: -15.12535285949707
    5. 'ngine' → logprob: -15.50035285949707
    6. '_ENGINE' → logprob: -15.87535285949707
    7. '	engine' → logprob: -16.12535285949707
    8. ' =' → logprob: -16.37535285949707
    9. '   ' → logprob: -17.75035285949707
    10. '_eng' → logprob: -18.00035285949707

Token 619: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022463142871857
    2. ' =' → logprob: -1.9102246761322021
    3. ',' → logprob: -15.285224914550781
    4. '=
' → logprob: -16.41022491455078
    5. ')' → logprob: -17.16022491455078
    6. ' =
' → logprob: -17.53522491455078
    7. ':' → logprob: -17.66022491455078
    8. '=None' → logprob: -17.91022491455078
    9. ' ' → logprob: -18.03522491455078
    10. '   ' → logprob: -18.03522491455078

Token 620: ' Factor' (ID: 63743)
  Prédit: 'Factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Factor' → logprob: -0.006716555915772915
    2. ' Factor' → logprob: -5.006716728210449
    3. 'Fact' → logprob: -14.63171672821045
    4. 'Factory' → logprob: -14.63171672821045
    5. '   ' → logprob: -15.38171672821045
    6. ' ' → logprob: -18.006715774536133
    7. 'factor' → logprob: -18.131715774536133
    8. '_factor' → logprob: -19.006715774536133
    9. 'Feature' → logprob: -19.381715774536133
    10. '    ' → logprob: -19.381715774536133

Token 621: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -3.7697225252486533e-06
    2. 'ation' → logprob: -12.500003814697266
    3. 'oration' → logprob: -19.125003814697266
    4. '```' → logprob: -19.375003814697266
    5. 'iation' → logprob: -19.375003814697266
    6. 'az' → logprob: -19.750003814697266
    7. 'or' → logprob: -19.875003814697266
    8. 'Factor' → logprob: -20.125003814697266
    9. 'a' → logprob: -20.250003814697266
    10. 'o' → logprob: -20.625003814697266

Token 622: 'Engine' (ID: 7286)
  Prédit: 'Engine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Engine' → logprob: -6.704273118884885e-07
    2. 'Factory' → logprob: -16.25
    3. ' Engine' → logprob: -16.25
    4. 'Eng' → logprob: -16.375
    5. 'Factor' → logprob: -16.875
    6. 'engine' → logprob: -17.0
    7. 'Engineer' → logprob: -17.0
    8. 'ngine' → logprob: -17.125
    9. '_engine' → logprob: -17.5
    10. 'Engineering' → logprob: -18.125

Token 623: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.93965083360672
    2. '()' → logprob: -1.1896507740020752
    3. '()
' → logprob: -1.1896507740020752
    4. '()

' → logprob: -7.814651012420654
    5. '(P' → logprob: -9.939650535583496
    6. '()
' → logprob: -10.564650535583496
    7. '(max' → logprob: -10.564650535583496
    8. '(
' → logprob: -10.689650535583496
    9. '(len' → logprob: -11.189650535583496
    10. '(int' → logprob: -12.064650535583496

Token 624: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15196593105793
    2. 'self' → logprob: -2.526965856552124
    3. '   ' → logprob: -2.901965856552124
    4. ' self' → logprob: -5.151966094970703
    5. '
' → logprob: -8.401966094970703
    6. 'def' → logprob: -9.151966094970703
    7. ' ' → logprob: -11.151966094970703
    8. '	self' → logprob: -12.026966094970703
    9. '```' → logprob: -12.151966094970703
    10. 'from' → logprob: -12.401966094970703

Token 625: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0007843759376555681
    2. '       ' → logprob: -7.500784397125244
    3. ' self' → logprob: -8.375783920288086
    4. '
' → logprob: -14.750783920288086
    5. '   ' → logprob: -14.750783920288086
    6. '        
' → logprob: -16.500783920288086
    7. '	self' → logprob: -16.750783920288086
    8. '(self' → logprob: -17.000783920288086
    9. 'from' → logprob: -17.875783920288086
    10. 'def' → logprob: -18.375783920288086

Token 626: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.003139212727546692
    2. 'pair' → logprob: -6.128139019012451
    3. '.counter' → logprob: -7.378139019012451
    4. '.' → logprob: -8.75313949584961
    5. ' .' → logprob: -9.37813949584961
    6. ' pair' → logprob: -10.37813949584961
    7. 'p' → logprob: -11.12813949584961
    8. '.Pair' → logprob: -11.50313949584961
    9. '_pair' → logprob: -12.37813949584961
    10. 'counter' → logprob: -12.37813949584961

Token 627: 'air' (ID: 1517)
  Prédit: 'air'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'air' → logprob: -9.372294698550832e-06
    2. 'a' → logprob: -12.000009536743164
    3. 'pair' → logprob: -13.250009536743164
    4. 'ar' → logprob: -14.875009536743164
    5. 'airo' → logprob: -15.375009536743164
    6. 'aire' → logprob: -15.500009536743164
    7. 'ai' → logprob: -15.750009536743164
    8. 'airt' → logprob: -16.125009536743164
    9. 'Air' → logprob: -16.500009536743164
    10. 'airs' → logprob: -16.625009536743164

Token 628: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -0.10100028663873672
    2. 'counter' → logprob: -2.3510003089904785
    3. 'Counter' → logprob: -7.8510003089904785
    4. '_count' → logprob: -8.22599983215332
    5. 'count' → logprob: -8.97599983215332
    6. '_c' → logprob: -13.10099983215332
    7. ' counter' → logprob: -13.22599983215332
    8. 'er' → logprob: -13.47599983215332
    9. 'ounter' → logprob: -13.47599983215332
    10. '=' → logprob: -14.35099983215332

Token 629: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931471824645996
    2. ' =' → logprob: -0.6931471824645996
    3. ' ' → logprob: -16.443147659301758
    4. ' =
' → logprob: -17.443147659301758
    5. 's' → logprob: -17.818147659301758
    6. ')' → logprob: -18.193147659301758
    7. ':' → logprob: -18.193147659301758
    8. '=
' → logprob: -18.443147659301758
    9. '   ' → logprob: -18.568147659301758
    10. ',' → logprob: -18.693147659301758

Token 630: ' Pair' (ID: 41250)
  Prédit: 'Pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pair' → logprob: -0.6931471824645996
    2. ' Pair' → logprob: -0.6931471824645996
    3. ' pair' → logprob: -17.943147659301758
    4. '       ' → logprob: -18.318147659301758
    5. '(P' → logprob: -18.818147659301758
    6. '<Pair' → logprob: -19.068147659301758
    7. '_pair' → logprob: -19.193147659301758
    8. '.Pair' → logprob: -20.568147659301758
    9. 'Pairs' → logprob: -20.693147659301758
    10. 'pair' → logprob: -21.068147659301758

Token 631: 'Counter' (ID: 16263)
  Prédit: 'Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -1.9361264946837764e-07
    2. ' Counter' → logprob: -16.125
    3. 'Count' → logprob: -17.0
    4. 'ounter' → logprob: -17.5
    5. 'counter' → logprob: -17.5
    6. '_counter' → logprob: -19.125
    7. 'Coun' → logprob: -19.375
    8. 'C' → logprob: -20.5
    9. '.Counter' → logprob: -20.5
    10. 'Cou' → logprob: -20.75

Token 632: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.481510692741722e-05
    2. '(' → logprob: -10.12507438659668
    3. '(
' → logprob: -10.37507438659668
    4. 'self' → logprob: -13.00007438659668
    5. '       ' → logprob: -13.62507438659668
    6. ' (' → logprob: -18.62507438659668
    7. '        
' → logprob: -18.75007438659668
    8. '
' → logprob: -19.00007438659668
    9. ' self' → logprob: -19.12507438659668
    10. '(this' → logprob: -19.37507438659668

Token 633: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -9.491498531133402e-06
    2. 'factor' → logprob: -11.875009536743164
    3. '.' → logprob: -13.875009536743164
    4. ' .' → logprob: -14.500009536743164
    5. '.fac' → logprob: -14.500009536743164
    6. '.fact' → logprob: -14.500009536743164
    7. '.factory' → logprob: -17.500009536743164
    8. ').' → logprob: -18.375009536743164
    9. '   ' → logprob: -19.125009536743164
    10. '.
' → logprob: -19.375009536743164

Token 634: 'ization' (ID: 2860)
  Prédit: 'ization'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: 0.0
    2. 'ation' → logprob: -17.125
    3. '```' → logprob: -19.625
    4. 'iation' → logprob: -19.75
    5. 'ize' → logprob: -20.125
    6. 'or' → logprob: -20.375
    7. 'iz' → logprob: -20.5
    8. '_' → logprob: -20.5
    9. '_factor' → logprob: -20.75
    10. 'IZATION' → logprob: -20.875

Token 635: '_engine' (ID: 57393)
  Prédit: '_engine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_engine' → logprob: -0.0004343645414337516
    2. 'engine' → logprob: -7.750434398651123
    3. 'Engine' → logprob: -13.500433921813965
    4. '_factor' → logprob: -14.000433921813965
    5. 'factor' → logprob: -14.250433921813965
    6. 'ngine' → logprob: -15.375433921813965
    7. '_factory' → logprob: -15.625433921813965
    8. '_ENGINE' → logprob: -15.750433921813965
    9. '-engine' → logprob: -16.37543487548828
    10. '.engine' → logprob: -16.50043487548828

Token 636: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.014684110297821e-06
    2. '   ' → logprob: -12.250008583068848
    3. ' )' → logprob: -13.000008583068848
    4. ')
' → logprob: -13.375008583068848
    5. '       ' → logprob: -15.875008583068848
    6. ' ' → logprob: -16.500009536743164
    7. '}' → logprob: -17.500009536743164
    8. ')

' → logprob: -17.625009536743164
    9. '	' → logprob: -18.000009536743164
    10. ')}' → logprob: -18.750009536743164

Token 637: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19580256938934326
    2. '
' → logprob: -1.9458025693893433
    3. 'def' → logprob: -3.445802688598633
    4. '    
' → logprob: -5.820802688598633
    5. ' def' → logprob: -9.820802688598633
    6. '```' → logprob: -10.695802688598633
    7. '        
' → logprob: -10.820802688598633
    8. '  
' → logprob: -12.570802688598633
    9. '

' → logprob: -13.070802688598633
    10. '   
' → logprob: -13.195802688598633

Token 638: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10031849145889282
    2. '   ' → logprob: -2.350318431854248
    3. ' def' → logprob: -9.100318908691406
    4. '	def' → logprob: -15.975318908691406
    5. '
' → logprob: -18.100318908691406
    6. ' ' → logprob: -18.725318908691406
    7. '  ' → logprob: -19.350318908691406
    8. '    
' → logprob: -19.725318908691406
    9. '```' → logprob: -20.100318908691406
    10. '_def' → logprob: -21.100318908691406

Token 639: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.1472419600977446e-06
    2. ' def' → logprob: -13.750000953674316
    3. '   ' → logprob: -21.625001907348633
    4. '	def' → logprob: -24.125001907348633
    5. 'de' → logprob: -25.375001907348633
    6. 'd' → logprob: -25.875001907348633
    7. '
' → logprob: -26.875001907348633
    8. '    
' → logprob: -27.375001907348633
    9. ' ' → logprob: -27.500001907348633
    10. ':def' → logprob: -28.250001907348633

Token 640: ' run' (ID: 2461)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.1396837830543518
    2. 'run' → logprob: -2.389683723449707
    3. ' solve' → logprob: -3.639683723449707
    4. ' run' → logprob: -4.389683723449707
    5. 'process' → logprob: -10.139683723449707
    6. ' process' → logprob: -12.639683723449707
    7. '.solve' → logprob: -16.389684677124023
    8. 'execute' → logprob: -17.514684677124023
    9. 'read' → logprob: -17.514684677124023
    10. 'def' → logprob: -18.389684677124023

Token 641: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0032345133367925882
    2. '(' → logprob: -5.753234386444092
    3. '()' → logprob: -10.00323486328125
    4. '(
' → logprob: -12.00323486328125
    5. 'self' → logprob: -13.25323486328125
    6. '():' → logprob: -13.37823486328125
    7. ' (' → logprob: -13.62823486328125
    8. '():
' → logprob: -15.00323486328125
    9. '(s' → logprob: -15.50323486328125
    10. '(sel' → logprob: -16.12823486328125

Token 642: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3902477025985718
    2. '):' → logprob: -1.1402477025985718
    3. 'self' → logprob: -6.015247821807861
    4. ')' → logprob: -7.515247821807861
    5. '):
' → logprob: -8.390247344970703
    6. ',' → logprob: -9.140247344970703
    7. '(self' → logprob: -11.015247344970703
    8. '   ' → logprob: -11.640247344970703
    9. '):

' → logprob: -11.890247344970703
    10. '       ' → logprob: -12.140247344970703

Token 643: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017755765293259174
    2. ' for' → logprob: -8.750177383422852
    3. 'for' → logprob: -11.250177383422852
    4. '   ' → logprob: -12.500177383422852
    5. '```' → logprob: -13.625177383422852
    6. '	' → logprob: -14.625177383422852
    7. '    ' → logprob: -15.625177383422852
    8. '      ' → logprob: -16.12517738342285
    9. ' ' → logprob: -16.25017738342285
    10. '           ' → logprob: -16.75017738342285

Token 644: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008631468750536442
    2. ' for' → logprob: -5.008631706237793
    3. '       ' → logprob: -6.258631706237793
    4. '   ' → logprob: -15.383631706237793
    5. '	for' → logprob: -16.633630752563477
    6. '```' → logprob: -17.133630752563477
    7. ' ' → logprob: -18.883630752563477
    8. '      ' → logprob: -21.258630752563477
    9. 'import' → logprob: -21.508630752563477
    10. '_for' → logprob: -21.508630752563477

Token 645: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00995287299156189
    2. 'value' → logprob: -5.009953022003174
    3. 'number' → logprob: -6.134953022003174
    4. 'n' → logprob: -7.259953022003174
    5. 'num' → logprob: -8.509952545166016
    6. 'l' → logprob: -9.259952545166016
    7. ' L' → logprob: -10.509952545166016
    8. 'val' → logprob: -11.134952545166016
    9. 'length' → logprob: -11.509952545166016
    10. 'N' → logprob: -11.884952545166016

Token 646: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003602094016969204
    2. 'in' → logprob: -5.628602027893066
    3. ' ' → logprob: -13.253602027893066
    4. '	in' → logprob: -16.503602981567383
    5. 'value' → logprob: -16.628602981567383
    6. '   ' → logprob: -17.128602981567383
    7. '_in' → logprob: -17.628602981567383
    8. '  ' → logprob: -17.878602981567383
    9. ',' → logprob: -18.003602981567383
    10. 'inthe' → logprob: -18.503602981567383

Token 647: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.941850526549388e-06
    2. ' self' → logprob: -11.750007629394531
    3. '(self' → logprob: -18.00000762939453
    4. '	self' → logprob: -20.37500762939453
    5. '   ' → logprob: -21.00000762939453
    6. '`' → logprob: -21.50000762939453
    7. 'iter' → logprob: -21.87500762939453
    8. 'this' → logprob: -22.37500762939453
    9. '
' → logprob: -22.50000762939453
    10. '=self' → logprob: -22.75000762939453

Token 648: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.014167623594403267
    2. 'input' → logprob: -4.264167785644531
    3. ' input' → logprob: -13.639167785644531
    4. '_input' → logprob: -14.139167785644531
    5. 'put' → logprob: -14.264167785644531
    6. 'Input' → logprob: -14.764167785644531
    7. '.' → logprob: -15.264167785644531
    8. '	input' → logprob: -15.264167785644531
    9. '=input' → logprob: -15.514167785644531
    10. '<input' → logprob: -15.514167785644531

Token 649: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -2.935296834039036e-06
    2. 'handler' → logprob: -12.87500286102295
    3. '   ' → logprob: -16.750003814697266
    4. 's' → logprob: -17.000003814697266
    5. 'Handler' → logprob: -17.000003814697266
    6. '_hand' → logprob: -17.125003814697266
    7. '       ' → logprob: -17.375003814697266
    8. '           ' → logprob: -17.500003814697266
    9. '_handle' → logprob: -17.875003814697266
    10. '
' → logprob: -18.625003814697266

Token 650: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00977462437003851
    2. ':
' → logprob: -4.634774684906006
    3. ' :' → logprob: -11.634774208068848
    4. ':
' → logprob: -12.384774208068848
    5. '):' → logprob: -13.009774208068848
    6. ':

' → logprob: -13.384774208068848
    7. '):
' → logprob: -14.259774208068848
    8. ' :
' → logprob: -15.259774208068848
    9. '():
' → logprob: -15.509774208068848
    10. '.' → logprob: -15.759774208068848

Token 651: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.302704761968926e-05
    2. 'self' → logprob: -9.625073432922363
    3. 'result' → logprob: -12.500073432922363
    4. ' self' → logprob: -14.000073432922363
    5. '```' → logprob: -14.000073432922363
    6. '          ' → logprob: -15.125073432922363
    7. '            
' → logprob: -15.375073432922363
    8. 'output' → logprob: -15.875073432922363
    9. ',' → logprob: -15.875073432922363
    10. '       ' → logprob: -16.000072479248047

Token 652: ' result' (ID: 1534)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4810978174209595
    2. 'result' (adapté à ' result') → logprob: -0.9810978174209595
    3. ' result' → logprob: -5.73109769821167
    4. ' count' → logprob: -6.10609769821167
    5. '               ' → logprob: -6.98109769821167
    6. 'res' → logprob: -8.106098175048828
    7. 'self' → logprob: -8.981098175048828
    8. '           ' → logprob: -9.606098175048828
    9. 'answer' → logprob: -10.356098175048828
    10. 'pairs' → logprob: -10.481098175048828

Token 653: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007607220206409693
    2. '=' → logprob: -4.8826069831848145
    3. '=self' → logprob: -14.882607460021973
    4. '           ' → logprob: -15.757607460021973
    5. '       ' → logprob: -16.007606506347656
    6. ' =
' → logprob: -16.257606506347656
    7. '   ' → logprob: -16.257606506347656
    8. '        ' → logprob: -16.507606506347656
    9. '    ' → logprob: -17.007606506347656
    10. ':' → logprob: -17.132606506347656

Token 654: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004078401252627373
    2. ' self' → logprob: -5.504078388214111
    3. '(self' → logprob: -18.004077911376953
    4. '=self' → logprob: -18.504077911376953
    5. '	self' → logprob: -18.754077911376953
    6. '[self' → logprob: -19.754077911376953
    7. '`' → logprob: -21.129077911376953
    8. 'Self' → logprob: -21.629077911376953
    9. '       ' → logprob: -22.004077911376953
    10. '
' → logprob: -22.004077911376953

Token 655: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -4.60414821645827e-06
    2. 'pair' → logprob: -12.875004768371582
    3. '.' → logprob: -13.500004768371582
    4. '.output' → logprob: -15.125004768371582
    5. ' .' → logprob: -16.125003814697266
    6. 'p' → logprob: -16.125003814697266
    7. 'output' → logprob: -16.375003814697266
    8. '           ' → logprob: -17.500003814697266
    9. '   ' → logprob: -17.625003814697266
    10. ' pair' → logprob: -18.000003814697266

Token 656: 'air' (ID: 1517)
  Prédit: 'air'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'air' → logprob: -2.339278580620885e-06
    2. 'self' → logprob: -14.125001907348633
    3. 'a' → logprob: -14.500001907348633
    4. 'pair' → logprob: -14.625001907348633
    5. 'ai' → logprob: -16.000001907348633
    6. 'ar' → logprob: -16.125001907348633
    7. '   ' → logprob: -16.375001907348633
    8. 'r' → logprob: -16.625001907348633
    9. 'airs' → logprob: -17.250001907348633
    10. 'AIR' → logprob: -17.500001907348633

Token 657: '_counter' (ID: 35419)
  Prédit: '_counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counter' → logprob: -2.2246291337069124e-05
    2. 'counter' → logprob: -10.750021934509277
    3. '_count' → logprob: -14.250021934509277
    4. 'Counter' → logprob: -17.375022888183594
    5. 'ounter' → logprob: -17.750022888183594
    6. 'er' → logprob: -18.750022888183594
    7. '   ' → logprob: -18.875022888183594
    8. 'count' → logprob: -18.875022888183594
    9. ' counter' → logprob: -19.000022888183594
    10. '_COUNTER' → logprob: -19.625022888183594

Token 658: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -1.759734732331708e-05
    2. 'count' → logprob: -11.000017166137695
    3. '.' → logprob: -14.125017166137695
    4. ' .' → logprob: -16.500017166137695
    5. '	count' → logprob: -17.625017166137695
    6. ' count' → logprob: -18.000017166137695
    7. '_count' → logprob: -18.125017166137695
    8. '<count' → logprob: -19.250017166137695
    9. '$count' → logprob: -19.375017166137695
    10. '.Count' → logprob: -19.625017166137695

Token 659: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -15.75
    3. '```' → logprob: -18.25
    4. '_
' → logprob: -19.125
    5. '_L' → logprob: -19.5
    6. '(' → logprob: -19.5
    7. '
' → logprob: -20.375
    8. ' _' → logprob: -20.375
    9. '(_' → logprob: -20.625
    10. '_pairs' → logprob: -20.75

Token 660: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.00017076305812224746
    2. 'cms' → logprob: -8.750170707702637
    3. 'c' → logprob: -12.500170707702637
    4. '_c' → logprob: -13.000170707702637
    5. '_cm' → logprob: -13.125170707702637
    6. '_l' → logprob: -14.000170707702637
    7. 'cmb' → logprob: -14.000170707702637
    8. 'cd' → logprob: -14.750170707702637
    9. 'CM' → logprob: -14.750170707702637
    10. '_' → logprob: -14.750170707702637

Token 661: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -1.7432603272027336e-06
    2. '_l' → logprob: -14.375001907348633
    3. '```' → logprob: -14.750001907348633
    4. '_counts' → logprob: -15.750001907348633
    5. '_pair' → logprob: -16.250001907348633
    6. '_' → logprob: -16.375001907348633
    7. '
' → logprob: -16.875001907348633
    8. '_parts' → logprob: -16.875001907348633
    9. ')_' → logprob: -17.000001907348633
    10. ' _' → logprob: -17.000001907348633

Token 662: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.14740753173828125
    2. '           ' → logprob: -2.5224075317382812
    3. '(result' → logprob: -3.5224075317382812
    4. 'result' → logprob: -3.6474075317382812
    5. '(' → logprob: -7.022407531738281
    6. ' result' → logprob: -8.647407531738281
    7. '            
' → logprob: -9.897407531738281
    8. '(
' → logprob: -10.647407531738281
    9. ' (' → logprob: -11.272407531738281
    10. '            ' → logprob: -11.522407531738281

Token 663: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5241237282752991
    2. ')' → logprob: -1.0241236686706543
    3. '           ' → logprob: -3.0241236686706543
    4. ')
' → logprob: -8.524124145507812
    5. ')

' → logprob: -12.649124145507812
    6. '       ' → logprob: -12.649124145507812
    7. '               ' → logprob: -12.899124145507812
    8. ')`
' → logprob: -13.899124145507812
    9. ' )
' → logprob: -13.899124145507812
    10. '   ' → logprob: -14.274124145507812

Token 664: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.688212614681106e-05
    2. 'self' → logprob: -11.000017166137695
    3. '       ' → logprob: -15.625017166137695
    4. ' self' → logprob: -17.250017166137695
    5. '		' → logprob: -17.375017166137695
    6. '   ' → logprob: -18.125017166137695
    7. '          ' → logprob: -18.375017166137695
    8. '```' → logprob: -19.000017166137695
    9. '               ' → logprob: -19.375017166137695
    10. '[self' → logprob: -20.375017166137695

Token 665: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -7.302704761968926e-05
    2. '           ' → logprob: -10.000073432922363
    3. ' self' → logprob: -10.500073432922363
    4. '       ' → logprob: -19.250072479248047
    5. '	self' → logprob: -19.375072479248047
    6. '               ' → logprob: -19.500072479248047
    7. '   ' → logprob: -20.875072479248047
    8. '```' → logprob: -21.125072479248047
    9. '[self' → logprob: -21.500072479248047
    10. '
' → logprob: -21.625072479248047

Token 666: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -2.093505099765025e-05
    2. 'output' → logprob: -10.875020980834961
    3. '.input' → logprob: -13.875020980834961
    4. '.' → logprob: -14.000020980834961
    5. '$output' → logprob: -17.87502098083496
    6. '.stdout' → logprob: -18.00002098083496
    7. '	output' → logprob: -18.00002098083496
    8. '.out' → logprob: -18.50002098083496
    9. '.outputs' → logprob: -18.62502098083496
    10. ' .' → logprob: -18.87502098083496

Token 667: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -1.0280383548888494e-06
    2. '_handle' → logprob: -14.250000953674316
    3. 'handler' → logprob: -15.500000953674316
    4. '_hand' → logprob: -16.250001907348633
    5. '_' → logprob: -18.375001907348633
    6. '_writer' → logprob: -18.500001907348633
    7. '_controller' → logprob: -18.750001907348633
    8. '_helper' → logprob: -18.875001907348633
    9. 'Handler' → logprob: -18.875001907348633
    10. '_h' → logprob: -19.125001907348633

Token 668: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.8074162653647363e-05
    2. '.' → logprob: -11.000018119812012
    3. '._' → logprob: -14.250018119812012
    4. ' .' → logprob: -15.125018119812012
    5. 'add' → logprob: -15.625018119812012
    6. '.append' → logprob: -15.750018119812012
    7. '_add' → logprob: -18.000017166137695
    8. '
' → logprob: -18.625017166137695
    9. '```' → logprob: -18.625017166137695
    10. '.write' → logprob: -18.750017166137695

Token 669: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -2.339278580620885e-06
    2. 'result' → logprob: -13.000001907348633
    3. '_' → logprob: -17.875001907348633
    4. '_res' → logprob: -18.750001907348633
    5. '```' → logprob: -20.000001907348633
    6. '_RESULT' → logprob: -20.375001907348633
    7. ' result' → logprob: -20.625001907348633
    8. ' _' → logprob: -20.750001907348633
    9. 's' → logprob: -20.875001907348633
    10. '_results' → logprob: -20.875001907348633

Token 670: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0003404687449801713
    2. '(' → logprob: -8.000340461730957
    3. 'result' → logprob: -12.375340461730957
    4. '(
' → logprob: -14.250340461730957
    5. ' result' → logprob: -17.875341415405273
    6. '=result' → logprob: -18.000341415405273
    7. ' (' → logprob: -18.125341415405273
    8. '(results' → logprob: -19.125341415405273
    9. '```' → logprob: -19.250341415405273
    10. '[result' → logprob: -19.250341415405273

Token 671: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03525950387120247
    2. '<|end|>' → logprob: -3.535259485244751
    3. '
' → logprob: -6.28525972366333
    4. ')
' → logprob: -6.41025972366333
    5. '()' → logprob: -6.78525972366333
    6. '       ' → logprob: -7.91025972366333
    7. '           ' → logprob: -8.660259246826172
    8. '<|end|>' → logprob: -9.160259246826172
    9. '())' → logprob: -9.410259246826172
    10. '()
' → logprob: -10.035259246826172

Token 672: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022451069205999374
    2. '
' → logprob: -3.897451162338257
    3. 'self' → logprob: -6.522450923919678
    4. '   ' → logprob: -8.397451400756836
    5. ' self' → logprob: -8.772451400756836
    6. '        
' → logprob: -10.647451400756836
    7. '<|end|>' → logprob: -11.022451400756836
    8. '```' → logprob: -12.147451400756836
    9. '    
' → logprob: -12.897451400756836
    10. '           ' → logprob: -13.647451400756836

Token 673: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00442074378952384
    2. ' self' → logprob: -6.004420757293701
    3. '       ' → logprob: -6.254420757293701
    4. '
' → logprob: -11.004420280456543
    5. '	self' → logprob: -13.004420280456543
    6. '   ' → logprob: -13.754420280456543
    7. '```' → logprob: -14.379420280456543
    8. '        
' → logprob: -15.504420280456543
    9. '[self' → logprob: -15.504420280456543
    10. '(self' → logprob: -15.629420280456543

Token 674: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -2.9875325708417222e-05
    2. '.' → logprob: -10.750029563903809
    3. 'output' → logprob: -11.875029563903809
    4. '.input' → logprob: -14.250029563903809
    5. ' .' → logprob: -15.000029563903809
    6. '.outputs' → logprob: -15.625029563903809
    7. '.out' → logprob: -16.125030517578125
    8. '._' → logprob: -17.000030517578125
    9. '.user' → logprob: -17.500030517578125
    10. '_output' → logprob: -17.625030517578125

Token 675: '_handler' (ID: 23758)
  Prédit: '_handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_handler' → logprob: -6.704273118884885e-07
    2. '_handle' → logprob: -14.875000953674316
    3. 'handler' → logprob: -15.750000953674316
    4. '_hand' → logprob: -15.750000953674316
    5. 'Handler' → logprob: -18.375
    6. '_' → logprob: -18.875
    7. '_Handler' → logprob: -19.5
    8. '_HANDLER' → logprob: -19.5
    9. 'andler' → logprob: -21.125
    10. ' handler' → logprob: -21.375

Token 676: '.flush' (ID: 42867)
  Prédit: '.flush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.flush' → logprob: -6.182190554682165e-05
    2. '.' → logprob: -9.750061988830566
    3. '.fl' → logprob: -12.750061988830566
    4. ' .' → logprob: -15.125061988830566
    5. '.flip' → logprob: -15.625061988830566
    6. '.flash' → logprob: -17.50006103515625
    7. '.Flush' → logprob: -17.87506103515625
    8. '.
' → logprob: -18.37506103515625
    9. '.fill' → logprob: -18.87506103515625
    10. '.finish' → logprob: -19.87506103515625

Token 677: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 678: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0006320207612589002
    2. '#' → logprob: -8.625632286071777
    3. ' if' → logprob: -8.625632286071777
    4. 'def' → logprob: -9.000632286071777
    5. '<|end|>' → logprob: -9.500632286071777
    6. '```' → logprob: -9.750632286071777
    7. 'import' → logprob: -11.125632286071777
    8. '
' → logprob: -14.625632286071777
    9. 'If' → logprob: -15.000632286071777
    10. '#if' → logprob: -15.250632286071777

Token 679: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.004078878089785576
    2. '__' → logprob: -5.5040788650512695
    3. 'name' → logprob: -16.254079818725586
    4. '_' → logprob: -16.254079818725586
    5. '_name' → logprob: -16.504079818725586
    6. ' ' → logprob: -17.129079818725586
    7. ' ' → logprob: -17.879079818725586
    8. ' "__' → logprob: -18.004079818725586
    9. '___' → logprob: -18.754079818725586
    10. ' '__' → logprob: -18.879079818725586

Token 680: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4466266632080078
    2. ' __' → logprob: -1.0716266632080078
    3. '.__' → logprob: -4.946626663208008
    4. ' .' → logprob: -5.571626663208008
    5. '.' → logprob: -6.321626663208008
    6. ' ==' → logprob: -7.071626663208008
    7. '__.__' → logprob: -7.071626663208008
    8. '.py' → logprob: -7.321626663208008
    9. 'name' → logprob: -7.696626663208008
    10. '__.' → logprob: -7.946626663208008

Token 681: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.3902033970225602e-05
    2. '==' → logprob: -11.500014305114746
    3. '__.__' → logprob: -13.000014305114746
    4. ' ==' → logprob: -14.125014305114746
    5. '=="' → logprob: -14.625014305114746
    6. '__.' → logprob: -16.25001335144043
    7. '__
' → logprob: -17.12501335144043
    8. '____' → logprob: -17.25001335144043
    9. '=='' → logprob: -17.37501335144043
    10. '___' → logprob: -17.37501335144043

Token 682: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10904012620449066
    2. ' ==' → logprob: -2.6090400218963623
    3. '==' → logprob: -4.109040260314941
    4. '=="' → logprob: -4.359040260314941
    5. '=='' → logprob: -8.734040260314941
    6. '__.__' → logprob: -9.109040260314941
    7. '_' → logprob: -9.234040260314941
    8. '"' → logprob: -10.109040260314941
    9. '.__' → logprob: -10.859040260314941
    10. '___' → logprob: -10.859040260314941

Token 683: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10023244470357895
    2. ''' → logprob: -2.3502323627471924
    3. ' "__' → logprob: -10.850232124328613
    4. '__' → logprob: -12.600232124328613
    5. ' '__' → logprob: -13.600232124328613
    6. ''"' → logprob: -14.850232124328613
    7. '"user' → logprob: -14.850232124328613
    8. '"class' → logprob: -15.850232124328613
    9. '"name' → logprob: -15.975232124328613
    10. ''s' → logprob: -16.22523307800293

Token 684: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.3464544432936236e-05
    2. '__' → logprob: -10.125043869018555
    3. '_main' → logprob: -13.000043869018555
    4. 'name' → logprob: -14.125043869018555
    5. ' main' → logprob: -16.375043869018555
    6. 'built' → logprob: -16.500043869018555
    7. 'ma' → logprob: -17.375043869018555
    8. '"' → logprob: -17.625043869018555
    9. '__":
' → logprob: -18.125043869018555
    10. '_MAIN' → logprob: -18.375043869018555

Token 685: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.011187048628926277
    2. '__' → logprob: -4.5111870765686035
    3. '__':
' → logprob: -9.011186599731445
    4. '__.' → logprob: -11.261186599731445
    5. '__:' → logprob: -13.136186599731445
    6. '__.__' → logprob: -13.636186599731445
    7. '.' → logprob: -14.886186599731445
    8. '__["' → logprob: -15.261186599731445
    9. '__
' → logprob: -15.636186599731445
    10. '.__' → logprob: -16.011186599731445

Token 686: '   ' (ID: 271)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6362573504447937
    2. '   ' → logprob: -0.8862573504447937
    3. ' import' → logprob: -3.2612574100494385
    4. ' lines' → logprob: -5.136257171630859
    5. 'input' → logprob: -5.386257171630859
    6. ' for' → logprob: -5.886257171630859
    7. ' main' → logprob: -6.011257171630859
    8. 'import' → logprob: -6.386257171630859
    9. '	input' → logprob: -7.761257171630859
    10. '```' → logprob: -7.886257171630859

Token 687: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.04063194990158081
    2. 'import' → logprob: -3.2906320095062256
    3. 'input' → logprob: -6.7906317710876465
    4. 'Solver' → logprob: -7.1656317710876465
    5. 'sol' → logprob: -8.165632247924805
    6. ' solver' → logprob: -8.290632247924805
    7. 's' → logprob: -9.290632247924805
    8. 'sys' → logprob: -11.040632247924805
    9. ' import' → logprob: -11.290632247924805
    10. '   ' → logprob: -11.540632247924805

Token 688: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25413569808006287
    2. '.run' → logprob: -1.7541357278823853
    3. '.' → logprob: -3.3791356086730957
    4. '=' → logprob: -4.754135608673096
    5. '().' → logprob: -5.254135608673096
    6. '()' → logprob: -6.004135608673096
    7. ' .' → logprob: -7.129135608673096
    8. '(' → logprob: -9.254136085510254
    9. '.solve' → logprob: -11.129136085510254
    10. ' ' → logprob: -11.254136085510254

Token 689: ' Solver' (ID: 141655)
  Prédit: 'Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.003179855877533555
    2. ' Solver' → logprob: -5.753180027008057
    3. 'Sol' → logprob: -13.378179550170898
    4. 'Solution' → logprob: -15.378179550170898
    5. 'solver' → logprob: -16.1281795501709
    6. ' solver' → logprob: -16.3781795501709
    7. 'Solve' → logprob: -16.8781795501709
    8. 'Solved' → logprob: -17.3781795501709
    9. '	S' → logprob: -17.6281795501709
    10. 'S' → logprob: -18.2531795501709

Token 690: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.00033593899570405483
    2. '(iter' → logprob: -8.000335693359375
    3. 'sys' → logprob: -14.625335693359375
    4. '(' → logprob: -17.125335693359375
    5. '((' → logprob: -18.000335693359375
    6. '(s' → logprob: -18.875335693359375
    7. '(Sys' → logprob: -19.125335693359375
    8. ' sys' → logprob: -19.375335693359375
    9. '=sys' → logprob: -19.625335693359375
    10. '(map' → logprob: -19.625335693359375

Token 691: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0007634070352651179
    2. '.argv' → logprob: -7.250763416290283
    3. '.' → logprob: -9.875762939453125
    4. '.stdout' → logprob: -13.375762939453125
    5. '.std' → logprob: -15.000762939453125
    6. '.__' → logprob: -16.875762939453125
    7. ' .' → logprob: -17.250762939453125
    8. '.stderr' → logprob: -17.500762939453125
    9. '.st' → logprob: -17.625762939453125
    10. '._' → logprob: -18.625762939453125

Token 692: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005698331515304744
    2. '.readline' → logprob: -8.125570297241211
    3. ')
' → logprob: -8.375570297241211
    4. '.readlines' → logprob: -10.750570297241211
    5. ' )' → logprob: -11.500570297241211
    6. '.buffer' → logprob: -12.750570297241211
    7. '.' → logprob: -12.875570297241211
    8. '))' → logprob: -13.000570297241211
    9. '.)' → logprob: -14.000570297241211
    10. ')
' → logprob: -14.375570297241211

Token 693: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47417065501213074
    2. 'solver' → logprob: -0.9741706848144531
    3. ' solver' → logprob: -9.599170684814453
    4. '	s' → logprob: -11.724170684814453
    5. '_solver' → logprob: -12.349170684814453
    6. '```' → logprob: -12.349170684814453
    7. 'sol' → logprob: -12.724170684814453
    8. '    
' → logprob: -13.099170684814453
    9. '
' → logprob: -13.474170684814453
    10. '  ' → logprob: -13.599170684814453

Token 694: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -3.128163257315464e-07
    2. ' solver' → logprob: -15.5
    3. '   ' → logprob: -18.625
    4. 'solve' → logprob: -19.5
    5. 'sol' → logprob: -19.875
    6. 's' → logprob: -21.375
    7. 'solution' → logprob: -21.75
    8. 'scheduler' → logprob: -21.875
    9. 'resolver' → logprob: -22.0
    10. '_solver' → logprob: -23.0

Token 695: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -2.165027217415627e-05
    2. '.' → logprob: -10.750021934509277
    3. ' .' → logprob: -16.37502098083496
    4. '.
' → logprob: -17.50002098083496
    5. '.solve' → logprob: -19.12502098083496
    6. 'run' → logprob: -19.37502098083496
    7. '().' → logprob: -19.50002098083496
    8. '
' → logprob: -19.50002098083496
    9. '   ' → logprob: -19.87502098083496
    10. '.start' → logprob: -20.00002098083496

Token 696: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 694
Tokens correctement prédits (1ère position, stricte): 351
Tokens correctement prédits (1ère position, avec adaptation): 384
Tokens correctement prédits (top 10): 639
Précision stricte (1ère position): 50.58%
Précision adaptée (1ère position): 55.33%
Précision (top 10): 92.07%
================================================================================
