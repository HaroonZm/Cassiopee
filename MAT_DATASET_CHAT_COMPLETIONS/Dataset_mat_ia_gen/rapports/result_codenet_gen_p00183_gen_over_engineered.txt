================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:02:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import List, Optional


class Stone:
    BLACK = 'b'
    WHITE = 'w'
    EMPTY = '+'


class Board:
    SIZE = 3

    def __init__(self, rows: List[str]) -> None:
        if len(rows) != self.SIZE or any(len(row) != self.SIZE for row in rows):
            raise ValueError("Board rows must be 3 strings of length 3.")
        self.grid: List[List[str]] = [list(row) for row in rows]

    def get_cell(self, row: int, col: int) -> str:
        return self.grid[row][col]

    def lines(self) -> List[List[str]]:
        # Returns all lines to check: rows, columns, diagonals
        lines = []
        # Rows
        for r in range(self.SIZE):
            lines.append([self.grid[r][c] for c in range(self.SIZE)])
        # Columns
        for c in range(self.SIZE):
            lines.append([self.grid[r][c] for r in range(self.SIZE)])
        # Diagonals
        lines.append([self.grid[i][i] for i in range(self.SIZE)])
        lines.append([self.grid[i][self.SIZE - 1 - i] for i in range(self.SIZE)])
        return lines


class WinConditionChecker(ABC):
    @abstractmethod
    def check(self, board: Board) -> Optional[str]:
        pass


class TicTacToeWinnerChecker(WinConditionChecker):
    def __init__(self, stone_to_check: str) -> None:
        self.stone = stone_to_check

    def check(self, board: Board) -> Optional[str]:
        # Check if this stone has a winning line
        for line in board.lines():
            if all(cell == self.stone for cell in line):
                return self.stone
        return None


class GameResultResolver:
    def __init__(self, board: Board) -> None:
        self.board = board
        self.checkers = [
            TicTacToeWinnerChecker(Stone.BLACK),
            TicTacToeWinnerChecker(Stone.WHITE),
        ]

    def resolve_winner(self) -> str:
        winner = None
        for checker in self.checkers:
            res = checker.check(self.board)
            if res:
                if winner is not None:
                    # According to the problem statement, cannot both win simultaneously.
                    raise RuntimeError("Invalid board: multiple winners detected.")
                winner = res
        if winner is None:
            return "NA"
        return winner


class InputProcessor:
    def __init__(self) -> None:
        self.datasets: List[Board] = []

    def read_boards(self) -> None:
        while True:
            rows = []
            for _ in range(Board.SIZE):
                line = input()
                if line == '0' and len(rows) == 0:
                    return
                rows.append(line)
            # Validate and add the board
            self.datasets.append(Board(rows))


class OutputProcessor:
    @staticmethod
    def print_results(results: List[str]) -> None:
        for result in results:
            print(result)


def main() -> None:
    input_processor = InputProcessor()
    input_processor.read_boards()

    results: List[str] = []
    for board in input_processor.datasets:
        resolver = GameResultResolver(board)
        results.append(resolver.resolve_winner())

    OutputProcessor.print_results(results)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.42944446206092834
    2. 'ABC' → logprob: -1.054444432258606
    3. 'AB' → logprob: -7.804444313049316
    4. ' A' → logprob: -9.179444313049316
    5. 'ABCDE' → logprob: -9.429444313049316
    6. 'import' → logprob: -9.929444313049316
    7. 'abstract' → logprob: -10.554444313049316
    8. 'A' → logprob: -10.679444313049316
    9. 'abc' → logprob: -10.929444313049316
    10. 'ABS' → logprob: -12.054444313049316

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.44743484258651733
    2. ',' → logprob: -1.072434902191162
    3. 'import' → logprob: -4.822434902191162
    4. '<|end|>' → logprob: -5.822434902191162
    5. ':' → logprob: -6.072434902191162
    6. '```' → logprob: -6.322434902191162
    7. ' ,' → logprob: -7.197434902191162
    8. ' .' → logprob: -7.697434902191162
    9. ' import' → logprob: -8.322434425354004
    10. '.I' → logprob: -8.572434425354004

Token 5: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.21897414326667786
    2. ' abstract' → logprob: -1.7189741134643555
    3. 'Abstract' → logprob: -4.0939741134643555
    4. '```' → logprob: -8.468974113464355
    5. ' ' → logprob: -8.718974113464355
    6. 'Meta' → logprob: -9.218974113464355
    7. '.abstract' → logprob: -9.343974113464355
    8. ' A' → logprob: -10.468974113464355
    9. ' Abstract' → logprob: -11.343974113464355
    10. '`' → logprob: -11.343974113464355

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0005600620643235743
    2. 'm' → logprob: -8.00055980682373
    3. 'classmethod' → logprob: -8.62555980682373
    4. 'meth' → logprob: -11.00055980682373
    5. 'staticmethod' → logprob: -11.50055980682373
    6. '_method' → logprob: -11.75055980682373
    7. 'abstract' → logprob: -12.75055980682373
    8. '```' → logprob: -13.50055980682373
    9. 'met' → logprob: -13.62555980682373
    10. 'ethod' → logprob: -14.12555980682373

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19047626852989197
    2. '```' → logprob: -2.315476179122925
    3. 'class' → logprob: -3.440476179122925
    4. '

' → logprob: -4.315476417541504
    5. '' → logprob: -4.565476417541504
    6. '
' → logprob: -5.065476417541504
    7. '\n' → logprob: -5.315476417541504
    8. '``' → logprob: -6.440476417541504
    9. '\' → logprob: -6.690476417541504
    10. ' 

' → logprob: -7.190476417541504

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1726326197385788
    2. '

' → logprob: -2.1726326942443848
    3. '```' → logprob: -3.5476326942443848
    4. 'class' → logprob: -4.422632694244385
    5. '' → logprob: -7.047632694244385
    6. '
' → logprob: -7.047632694244385
    7. '\n' → logprob: -7.672632694244385
    8. '``' → logprob: -7.672632694244385
    9. ' 

' → logprob: -8.297632217407227
    10. '
 
' → logprob: -8.672632217407227

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.02580157481133938
    2. ' collections' → logprob: -4.025801658630371
    3. ' dat' → logprob: -5.525801658630371
    4. 'typing' → logprob: -6.525801658630371
    5. ' io' → logprob: -7.650801658630371
    6. ' abc' → logprob: -8.025801658630371
    7. ' os' → logprob: -8.275801658630371
    8. ' sys' → logprob: -8.400801658630371
    9. 'collections' → logprob: -8.650801658630371
    10. ' math' → logprob: -8.775801658630371

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06249941512942314
    2. 'import' → logprob: -2.812499523162842
    3. '.' → logprob: -9.062499046325684
    4. '```' → logprob: -9.187499046325684
    5. '<|end|>' → logprob: -9.562499046325684
    6. ' ' → logprob: -9.812499046325684
    7. '_import' → logprob: -10.062499046325684
    8. ' as' → logprob: -10.437499046325684
    9. '.import' → logprob: -10.687499046325684
    10. '	import' → logprob: -10.937499046325684

Token 11: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.7048139572143555
    2. 'Any' → logprob: -0.8298139572143555
    3. ' List' → logprob: -4.0798139572143555
    4. ' Protocol' → logprob: -4.3298139572143555
    5. ' Union' → logprob: -4.5798139572143555
    6. ' Callable' → logprob: -4.8298139572143555
    7. 'Protocol' → logprob: -5.0798139572143555
    8. 'List' → logprob: -5.2048139572143555
    9. 'Union' → logprob: -5.5798139572143555
    10. 'Callable' → logprob: -6.2048139572143555

Token 12: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4726979434490204
    2. '
' → logprob: -1.2226979732513428
    3. '```' → logprob: -2.8476979732513428
    4. 'class' → logprob: -3.9726979732513428
    5. '``' → logprob: -6.347697734832764
    6. '\n' → logprob: -6.722697734832764
    7. '<|end|>' → logprob: -6.972697734832764
    8. '


' → logprob: -7.597697734832764
    9. ' class' → logprob: -8.222698211669922
    10. '
' → logprob: -8.472698211669922

Token 13: ' Optional' (ID: 19351)
  Prédit: ' Optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -1.4373971223831177
    2. 'Optional' → logprob: -1.5623971223831177
    3. ' Union' → logprob: -1.6873971223831177
    4. 'Any' → logprob: -1.6873971223831177
    5. ' Any' → logprob: -2.437397003173828
    6. 'Union' → logprob: -3.312397003173828
    7. ' Callable' → logprob: -3.437397003173828
    8. 'Callable' → logprob: -4.812397003173828
    9. 'Tuple' → logprob: -5.062397003173828
    10. 'Iterable' → logprob: -5.437397003173828

Token 14: '


' (ID: 2499)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.792864203453064
    2. '
' → logprob: -1.042864203453064
    3. 'class' → logprob: -1.667864203453064
    4. '```' → logprob: -5.2928643226623535
    5. '\n' → logprob: -7.6678643226623535
    6. '


' → logprob: -7.7928643226623535
    7. '
' → logprob: -9.167863845825195
    8. '``' → logprob: -9.292863845825195
    9. ' class' → logprob: -9.417863845825195
    10. '<class' → logprob: -9.917863845825195

Token 15: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -5.1928003813372925e-05
    2. '
' → logprob: -10.000051498413086
    3. 'clas' → logprob: -13.375051498413086
    4. '```' → logprob: -13.750051498413086
    5. 'c' → logprob: -13.875051498413086
    6. ' class' → logprob: -14.125051498413086
    7. '"class' → logprob: -14.250051498413086
    8. 'cla' → logprob: -14.875051498413086
    9. 'cl' → logprob: -15.125051498413086
    10. '<class' → logprob: -15.125051498413086

Token 16: ' Stone' (ID: 22850)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17260704934597015
    2. ' Abstract' → logprob: -2.797606945037842
    3. ' Base' → logprob: -3.547606945037842
    4. ' Space' → logprob: -4.297606945037842
    5. ' My' → logprob: -4.547606945037842
    6. ' Shape' → logprob: -5.297606945037842
    7. ' ABC' → logprob: -5.422606945037842
    8. ' Serializer' → logprob: -5.672606945037842
    9. ' Basic' → logprob: -5.797606945037842
    10. ' Task' → logprob: -5.922606945037842

Token 17: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04959897696971893
    2. ':' → logprob: -3.0495989322662354
    3. '(Abstract' → logprob: -7.4245991706848145
    4. '():' → logprob: -8.299598693847656
    5. '):' → logprob: -9.674598693847656
    6. ':
' → logprob: -10.674598693847656
    7. '(
' → logprob: -11.799598693847656
    8. 's' → logprob: -11.799598693847656
    9. 'Type' → logprob: -11.924598693847656
    10. 'Base' → logprob: -12.424598693847656

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042775120586156845
    2. '    ' → logprob: -4.6677751541137695
    3. ' ' → logprob: -4.7927751541137695
    4. ':' → logprob: -4.7927751541137695
    5. '<|end|>' → logprob: -4.7927751541137695
    6. '```' → logprob: -5.5427751541137695
    7. '    
' → logprob: -7.0427751541137695
    8. '  ' → logprob: -7.0427751541137695
    9. '(' → logprob: -7.5427751541137695
    10. ' 
' → logprob: -8.29277515411377

Token 19: ' BLACK' (ID: 71730)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011540289968252182
    2. 'def' → logprob: -6.011540412902832
    3. ' def' → logprob: -6.136540412902832
    4. '    ' → logprob: -6.261540412902832
    5. ' pass' → logprob: -6.261540412902832
    6. '```' → logprob: -6.886540412902832
    7. 'class' → logprob: -7.261540412902832
    8. ':' → logprob: -8.011540412902832
    9. 'pass' → logprob: -8.136540412902832
    10. ' ' → logprob: -8.136540412902832

Token 20: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1287718564271927
    2. ' =' → logprob: -2.1287717819213867
    3. ',' → logprob: -7.003771781921387
    4. ':' → logprob: -7.378771781921387
    5. '.' → logprob: -8.878771781921387
    6. '_' → logprob: -9.253771781921387
    7. '   ' → logprob: -10.753771781921387
    8. '(' → logprob: -10.753771781921387
    9. ')' → logprob: -11.378771781921387
    10. ' ' → logprob: -12.253771781921387

Token 21: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8412472605705261
    2. '"' → logprob: -1.966247320175171
    3. ' ' → logprob: -1.966247320175171
    4. '1' → logprob: -2.341247320175171
    5. ' '' → logprob: -2.591247320175171
    6. ' "' → logprob: -2.841247320175171
    7. '0' → logprob: -2.841247320175171
    8. '   ' → logprob: -7.466247081756592
    9. ''b' → logprob: -8.84124755859375
    10. '2' → logprob: -8.96624755859375

Token 22: 'b' (ID: 65)
  Prédit: 'black'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'black' → logprob: -0.06315868347883224
    2. 'B' → logprob: -3.0631587505340576
    3. 'b' → logprob: -4.8131585121154785
    4. 'BLACK' → logprob: -5.3131585121154785
    5. 'Black' → logprob: -7.4381585121154785
    6. '●' → logprob: -7.5631585121154785
    7. ' black' → logprob: -9.063158988952637
    8. '_black' → logprob: -10.188158988952637
    9. '\xe2\x9a' → logprob: -10.688158988952637
    10. '#' → logprob: -10.688158988952637

Token 23: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.014578535221517086
    2. 'lack' → logprob: -4.889578342437744
    3. 'l' → logprob: -5.264578342437744
    4. ''l' → logprob: -6.389578342437744
    5. ''''' → logprob: -10.514578819274902
    6. ''}' → logprob: -11.139578819274902
    7. '')' → logprob: -11.389578819274902
    8. 'k' → logprob: -11.514578819274902
    9. 'b' → logprob: -11.639578819274902
    10. '```' → logprob: -12.014578819274902

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005825583357363939
    2. ' ' → logprob: -5.755825519561768
    3. 'WHITE' → logprob: -6.380825519561768
    4. '  ' → logprob: -8.255825996398926
    5. ' WHITE' → logprob: -8.380825996398926
    6. '    
' → logprob: -8.755825996398926
    7. ''' → logprob: -9.130825996398926
    8. '```' → logprob: -10.130825996398926
    9. ')' → logprob: -10.880825996398926
    10. '    ' → logprob: -11.130825996398926

Token 25: ' WHITE' (ID: 94026)
  Prédit: 'WHITE'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WHITE' (adapté à ' WHITE') → logprob: -0.007321697659790516
    2. ' WHITE' → logprob: -5.132321834564209
    3. '   ' → logprob: -7.132321834564209
    4. ' ' → logprob: -8.00732135772705
    5. 'white' → logprob: -9.13232135772705
    6. '.WHITE' → logprob: -10.00732135772705
    7. 'W' → logprob: -10.88232135772705
    8. ''' → logprob: -10.88232135772705
    9. ' white' → logprob: -11.13232135772705
    10. '  ' → logprob: -11.25732135772705

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05491511523723602
    2. '=' → logprob: -2.929915189743042
    3. '='' → logprob: -11.304915428161621
    4. ' ='' → logprob: -11.554915428161621
    5. '<|end|>' → logprob: -12.304915428161621
    6. '   ' → logprob: -12.679915428161621
    7. ' ' → logprob: -13.304915428161621
    8. '<|end|>' → logprob: -15.054915428161621
    9. ''' → logprob: -15.179915428161621
    10. ')' → logprob: -15.179915428161621

Token 27: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0005008471780456603
    2. ' '' → logprob: -7.625500679016113
    3. ''w' → logprob: -11.500500679016113
    4. '"' → logprob: -13.125500679016113
    5. ' ' → logprob: -16.12550163269043
    6. ''b' → logprob: -16.37550163269043
    7. ' ' → logprob: -16.37550163269043
    8. ''s' → logprob: -16.50050163269043
    9. '`' → logprob: -16.62550163269043
    10. ''a' → logprob: -17.12550163269043

Token 28: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.003219184000045061
    2. ''w' → logprob: -5.753219127655029
    3. ''' → logprob: -10.378219604492188
    4. ' w' → logprob: -11.503219604492188
    5. ''s' → logprob: -16.878219604492188
    6. '	w' → logprob: -16.878219604492188
    7. '_w' → logprob: -17.378219604492188
    8. ' '' → logprob: -17.628219604492188
    9. 'b' → logprob: -17.753219604492188
    10. 'ｗ' → logprob: -17.878219604492188

Token 29: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -2.999452772201039e-05
    2. ''
' → logprob: -10.500029563903809
    3. '"' → logprob: -13.875029563903809
    4. ' '' → logprob: -14.500029563903809
    5. ''

' → logprob: -15.000029563903809
    6. ''
' → logprob: -15.000029563903809
    7. ''s' → logprob: -16.125030517578125
    8. ''''' → logprob: -16.625030517578125
    9. '```' → logprob: -17.125030517578125
    10. ''b' → logprob: -18.125030517578125

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5749857425689697
    2. '
' → logprob: -1.0749857425689697
    3. ' ' → logprob: -3.6999857425689697
    4. '<|end|>' → logprob: -4.074985504150391
    5. '```' → logprob: -4.074985504150391
    6. 'class' → logprob: -4.324985504150391
    7. '    
' → logprob: -5.199985504150391
    8. '

' → logprob: -5.449985504150391
    9. '  ' → logprob: -5.949985504150391
    10. '\n' → logprob: -6.199985504150391

Token 31: ' EMPTY' (ID: 87443)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40126267075538635
    2. '   ' → logprob: -2.1512627601623535
    3. 'EMPTY' (adapté à ' EMPTY') → logprob: -2.4012627601623535
    4. ' ' → logprob: -3.7762627601623535
    5. '    
' → logprob: -3.9012627601623535
    6. ' def' → logprob: -4.0262627601623535
    7. 'color' → logprob: -4.4012627601623535
    8. '```' → logprob: -4.6512627601623535
    9. ' EMPTY' → logprob: -5.1512627601623535
    10. '@' → logprob: -5.4012627601623535

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34855902194976807
    2. '=' → logprob: -1.223559021949768
    3. ' ' → logprob: -10.098559379577637
    4. ':' → logprob: -10.348559379577637
    5. ',' → logprob: -10.848559379577637
    6. ')' → logprob: -11.848559379577637
    7. '<|end|>' → logprob: -12.223559379577637
    8. '   ' → logprob: -12.723559379577637
    9. '  ' → logprob: -12.973559379577637
    10. '='' → logprob: -13.473559379577637

Token 33: ' '+'' (ID: 137356)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.006128694862127304
    2. ''.' → logprob: -5.256128787994385
    3. ' '' → logprob: -7.381128787994385
    4. 'None' → logprob: -8.631128311157227
    5. ' ' → logprob: -10.506128311157227
    6. '"' → logprob: -11.006128311157227
    7. ''-' → logprob: -11.506128311157227
    8. ' None' → logprob: -11.631128311157227
    9. ''e' → logprob: -12.381128311157227
    10. '  ' → logprob: -12.506128311157227

Token 34: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6965916156768799
    2. '

' → logprob: -0.8215916156768799
    3. 'class' → logprob: -3.07159161567688
    4. '<|end|>' → logprob: -5.196591377258301
    5. '


' → logprob: -5.446591377258301
    6. '   ' → logprob: -6.696591377258301
    7. '
    
' → logprob: -6.696591377258301
    8. '```' → logprob: -6.821591377258301
    9. '<|end|>' → logprob: -6.821591377258301
    10. ' class' → logprob: -8.8215913772583

Token 35: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0019494639709591866
    2. '
' → logprob: -6.376949310302734
    3. '

' → logprob: -8.501949310302734
    4. '


' → logprob: -10.501949310302734
    5. ' class' → logprob: -11.501949310302734
    6. '
    
' → logprob: -13.626949310302734
    7. '
' → logprob: -14.001949310302734
    8. '  
' → logprob: -14.126949310302734
    9. '```' → logprob: -14.626949310302734
    10. '



' → logprob: -14.876949310302734

Token 36: ' Board' (ID: 10837)
  Prédit: ' Board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Board' → logprob: -0.5266557931900024
    2. ' Player' → logprob: -1.2766557931900024
    3. ' Point' → logprob: -3.401655673980713
    4. 'Board' → logprob: -3.526655673980713
    5. 'Player' → logprob: -3.776655673980713
    6. ' Go' → logprob: -4.276655673980713
    7. ' Game' → logprob: -4.526655673980713
    8. ' Position' → logprob: -5.276655673980713
    9. ' Stone' → logprob: -6.276655673980713
    10. 'Point' → logprob: -6.401655673980713

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0034754592925310135
    2. '(' → logprob: -5.753475666046143
    3. ':
' → logprob: -8.878475189208984
    4. ' :' → logprob: -9.878475189208984
    5. '(Abstract' → logprob: -10.128475189208984
    6. '<|end|>' → logprob: -10.628475189208984
    7. '():' → logprob: -11.128475189208984
    8. '):' → logprob: -11.253475189208984
    9. '(object' → logprob: -12.253475189208984
    10. ':

' → logprob: -13.378475189208984

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19308504462242126
    2. ' ' → logprob: -2.318084955215454
    3. '    ' → logprob: -3.193084955215454
    4. ' def' → logprob: -3.818084955215454
    5. '  ' → logprob: -5.318085193634033
    6. '    
' → logprob: -5.943085193634033
    7. 'def' → logprob: -6.068085193634033
    8. '<|end|>' → logprob: -6.818085193634033
    9. ':' → logprob: -7.193085193634033
    10. ' (' → logprob: -7.318085193634033

Token 39: ' SIZE' (ID: 51412)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6882397532463074
    2. ' def' → logprob: -0.8132397532463074
    3. '   ' → logprob: -3.063239812850952
    4. '    ' → logprob: -4.938239574432373
    5. '```' → logprob: -9.063240051269531
    6. 'de' → logprob: -10.438240051269531
    7. 'class' → logprob: -11.188240051269531
    8. ' ' → logprob: -11.563240051269531
    9. ' (' → logprob: -12.313240051269531
    10. '_' → logprob: -12.438240051269531

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002499205991625786
    2. '=' → logprob: -6.002499103546143
    3. '   ' → logprob: -11.5024995803833
    4. ' ' → logprob: -11.6274995803833
    5. '  ' → logprob: -13.0024995803833
    6. '<|end|>' → logprob: -14.5024995803833
    7. '_' → logprob: -14.8774995803833
    8. ')' → logprob: -14.8774995803833
    9. ' =)' → logprob: -14.8774995803833
    10. ':' → logprob: -15.3774995803833

Token 41: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31624889373779297
    2. '19' → logprob: -1.316248893737793
    3. '9' → logprob: -5.816248893737793
    4. '  ' → logprob: -13.441248893737793
    5. '15' → logprob: -14.566248893737793
    6. '5' → logprob: -14.691248893737793
    7. '   ' → logprob: -14.941248893737793
    8. ' ' → logprob: -15.753748893737793
    9. '361' → logprob: -15.878748893737793
    10. '```' → logprob: -15.941248893737793

Token 42: '3' (ID: 18)
  Prédit: '19'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '19' → logprob: -0.08911154419183731
    2. '9' → logprob: -2.464111566543579
    3. ' ' → logprob: -9.839111328125
    4. '15' → logprob: -10.214111328125
    5. '5' → logprob: -10.464111328125
    6. '13' → logprob: -10.589111328125
    7. '8' → logprob: -11.589111328125
    8. '7' → logprob: -12.464111328125
    9. '10' → logprob: -12.589111328125
    10. '18' → logprob: -12.964111328125

Token 43: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6296117901802063
    2. '<|end|>' → logprob: -1.3796117305755615
    3. '

' → logprob: -1.7546117305755615
    4. 'def' → logprob: -4.504611968994141
    5. '<|end|>' → logprob: -4.754611968994141
    6. '```' → logprob: -5.504611968994141
    7. '   ' → logprob: -5.754611968994141
    8. '
    
' → logprob: -6.004611968994141
    9. ' def' → logprob: -6.004611968994141
    10. ' 

' → logprob: -6.254611968994141

Token 44: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2834938168525696
    2. '   ' → logprob: -1.7834937572479248
    3. ' def' → logprob: -3.658493757247925
    4. ' :' → logprob: -3.783493757247925
    5. 'def' → logprob: -4.158493995666504
    6. '    
' → logprob: -5.908493995666504
    7. ':
' → logprob: -6.408493995666504
    8. '
' → logprob: -6.533493995666504
    9. '```' → logprob: -6.533493995666504
    10. ' 
' → logprob: -6.658493995666504

Token 45: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0019449377432465553
    2. ' def' → logprob: -6.2519450187683105
    3. 'de' → logprob: -11.626944541931152
    4. '   ' → logprob: -12.501944541931152
    5. ' ' → logprob: -14.001944541931152
    6. 'board' → logprob: -14.251944541931152
    7. 'd' → logprob: -14.376944541931152
    8. '```' → logprob: -14.501944541931152
    9. ' de' → logprob: -15.001944541931152
    10. 'grid' → logprob: -16.00194549560547

Token 46: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.008517412468791008
    2. ' def' → logprob: -5.258517265319824
    3. ' ' → logprob: -6.258517265319824
    4. ' init' → logprob: -7.633517265319824
    5. '__' → logprob: -8.258517265319824
    6. 'itialize' → logprob: -8.383517265319824
    7. ' _' → logprob: -8.633517265319824
    8. '_init' → logprob: -9.383517265319824
    9. '_' → logprob: -10.508517265319824
    10. ' ' → logprob: -10.883517265319824

Token 47: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.7385154428193346e-05
    2. 'ini' → logprob: -10.62503719329834
    3. 'in' → logprob: -11.37503719329834
    4. 'i' → logprob: -13.75003719329834
    5. 'nit' → logprob: -16.000038146972656
    6. 'innit' → logprob: -16.000038146972656
    7. 'inite' → logprob: -16.250038146972656
    8. 'int' → logprob: -16.875038146972656
    9. 'getitem' → logprob: -17.250038146972656
    10. 'call' → logprob: -17.375038146972656

Token 48: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.07965504378080368
    2. '__' → logprob: -2.5796549320220947
    3. '__(
' → logprob: -7.704655170440674
    4. '(' → logprob: -8.829654693603516
    5. '__((' → logprob: -9.954654693603516
    6. '__(*' → logprob: -10.204654693603516
    7. '(self' → logprob: -10.329654693603516
    8. '__('' → logprob: -10.329654693603516
    9. '___' → logprob: -12.829654693603516
    10. '__("' → logprob: -12.954654693603516

Token 49: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004108924185857177
    2. ' self' → logprob: -8.000411033630371
    3. ')' → logprob: -9.500411033630371
    4. ' ' → logprob: -15.500411033630371
    5. '(self' → logprob: -15.750411033630371
    6. ' )' → logprob: -16.000410079956055
    7. '
' → logprob: -17.250410079956055
    8. '):
' → logprob: -17.250410079956055
    9. '),' → logprob: -17.375410079956055
    10. '0' → logprob: -17.625410079956055

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02466624788939953
    2. ' ,' → logprob: -4.1496663093566895
    3. '):' → logprob: -5.5246663093566895
    4. ')' → logprob: -6.1496663093566895
    5. 'self' → logprob: -6.1496663093566895
    6. ' ):' → logprob: -8.899665832519531
    7. ' ' → logprob: -9.274665832519531
    8. ' )' → logprob: -9.774665832519531
    9. ' self' → logprob: -11.149665832519531
    10. '  ' → logprob: -12.024665832519531

Token 51: ' rows' (ID: 13585)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1019705533981323
    2. ' board' → logprob: -1.6019705533981323
    3. ' self' → logprob: -1.8519705533981323
    4. '):' → logprob: -2.101970672607422
    5. ' stones' → logprob: -2.476970672607422
    6. ' size' → logprob: -3.476970672607422
    7. 'board' → logprob: -4.476970672607422
    8. 'size' → logprob: -4.601970672607422
    9. ' ):' → logprob: -4.726970672607422
    10. ' ' → logprob: -4.726970672607422

Token 52: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007391115068458021
    2. '=None' → logprob: -8.250739097595215
    3. '):' → logprob: -8.375739097595215
    4. '=' → logprob: -8.750739097595215
    5. ')' → logprob: -9.500739097595215
    6. ' :' → logprob: -11.875739097595215
    7. '=[]' → logprob: -12.250739097595215
    8. ' ):' → logprob: -14.375739097595215
    9. ',' → logprob: -14.500739097595215
    10. ' )' → logprob: -15.125739097595215

Token 53: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.08964940160512924
    2. 'int' → logprob: -3.0896494388580322
    3. 'Optional' → logprob: -3.8396494388580322
    4. ' List' → logprob: -4.089649200439453
    5. ' int' → logprob: -6.714649200439453
    6. ' Optional' → logprob: -7.339649200439453
    7. '   ' → logprob: -10.339649200439453
    8. ' ' → logprob: -10.589649200439453
    9. 'list' → logprob: -10.589649200439453
    10. ')' → logprob: -11.464649200439453

Token 54: '[str' (ID: 33439)
  Prédit: '[List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.00017553119687363505
    2. '[str' → logprob: -8.750175476074219
    3. '[' → logprob: -11.250175476074219
    4. '[int' → logprob: -12.500175476074219
    5. ')' → logprob: -15.500175476074219
    6. 'List' → logprob: -16.37517547607422
    7. '<List' → logprob: -17.87517547607422
    8. '(List' → logprob: -18.12517547607422
    9. ' List' → logprob: -18.25017547607422
    10. '	List' → logprob: -19.37517547607422

Token 55: '])' (ID: 4636)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.10152814537286758
    2. '])' → logprob: -2.6015281677246094
    3. ']' → logprob: -3.9765281677246094
    4. '):' → logprob: -6.476528167724609
    5. ']:' → logprob: -6.476528167724609
    6. ')' → logprob: -7.976528167724609
    7. ']):
' → logprob: -8.97652816772461
    8. ' ]' → logprob: -10.35152816772461
    9. ' ])' → logprob: -11.47652816772461
    10. '[str' → logprob: -11.60152816772461

Token 56: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012723304331302643
    2. '):' → logprob: -4.387723445892334
    3. ')' → logprob: -9.262722969055176
    4. ' :' → logprob: -10.262722969055176
    5. ':
' → logprob: -10.262722969055176
    6. '       ' → logprob: -11.387722969055176
    7. '->' → logprob: -11.762722969055176
    8. ' ->' → logprob: -12.012722969055176
    9. '():' → logprob: -12.262722969055176
    10. '):
' → logprob: -12.637722969055176

Token 57: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.023247575387358665
    2. 'None' → logprob: -3.773247480392456
    3. ' ' → logprob: -13.273247718811035
    4. '   ' → logprob: -15.898247718811035
    5. ' ' → logprob: -16.02324676513672
    6. '  ' → logprob: -17.52324676513672
    7. ' none' → logprob: -17.52324676513672
    8. 'none' → logprob: -18.64824676513672
    9. ' int' → logprob: -19.02324676513672
    10. '_None' → logprob: -19.02324676513672

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00043615259346552193
    2. ':
' → logprob: -8.000435829162598
    3. '):' → logprob: -9.250435829162598
    4. '<|end|>' → logprob: -13.875435829162598
    5. '       ' → logprob: -14.500435829162598
    6. ':return' → logprob: -14.625435829162598
    7. ':**' → logprob: -14.625435829162598
    8. ':def' → logprob: -15.000435829162598
    9. '():' → logprob: -15.000435829162598
    10. '):
' → logprob: -15.000435829162598

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024263552040793002
    2. 'self' → logprob: -8.750242233276367
    3. ' self' → logprob: -10.750242233276367
    4. '   ' → logprob: -11.000242233276367
    5. '      ' → logprob: -11.125242233276367
    6. '    ' → logprob: -11.875242233276367
    7. '    ' → logprob: -12.250242233276367
    8. '        ' → logprob: -12.250242233276367
    9. ' ' → logprob: -12.750242233276367
    10. '     ' → logprob: -12.875242233276367

Token 60: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1458706259727478
    2. ' self' → logprob: -2.3958706855773926
    3. 'self' → logprob: -3.1458706855773926
    4. ' ' → logprob: -7.270870685577393
    5. '        ' → logprob: -7.895870685577393
    6. '   ' → logprob: -8.520870208740234
    7. ' super' → logprob: -9.020870208740234
    8. '      ' → logprob: -9.770870208740234
    9. 'super' → logprob: -10.020870208740234
    10. '     ' → logprob: -10.270870208740234

Token 61: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0030010004993528128
    2. 'len' → logprob: -6.2530012130737305
    3. ' not' → logprob: -7.2530012130737305
    4. ' any' → logprob: -8.25300121307373
    5. ' rows' → logprob: -9.37800121307373
    6. ' all' → logprob: -11.25300121307373
    7. 'rows' → logprob: -13.37800121307373
    8. 'not' → logprob: -13.62800121307373
    9. '(len' → logprob: -13.62800121307373
    10. '	len' → logprob: -14.37800121307373

Token 62: '(rows' (ID: 69648)
  Prédit: '(rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rows' → logprob: -9.841743303695694e-05
    2. '(' → logprob: -9.25009822845459
    3. 'rows' → logprob: -13.50009822845459
    4. ' rows' → logprob: -14.25009822845459
    5. '(row' → logprob: -15.62509822845459
    6. '	rows' → logprob: -17.500099182128906
    7. '(
' → logprob: -18.625099182128906
    8. ' (' → logprob: -18.875099182128906
    9. '(lines' → logprob: -19.875099182128906
    10. '(columns' → logprob: -19.875099182128906

Token 63: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007961660739965737
    2. ' )' → logprob: -7.375796318054199
    3. ')!=' → logprob: -8.8757963180542
    4. ' !=' → logprob: -10.6257963180542
    5. '!=' → logprob: -12.7507963180542
    6. '`)' → logprob: -13.8757963180542
    7. '```' → logprob: -14.2507963180542
    8. '）' → logprob: -14.8757963180542
    9. '[' → logprob: -15.7507963180542
    10. ' ' → logprob: -16.500795364379883

Token 64: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.005449682008475065
    2. '!=' → logprob: -5.2554497718811035
    3. ')' → logprob: -9.005449295043945
    4. ' ' → logprob: -9.880449295043945
    5. ')!=' → logprob: -11.130449295043945
    6. ' not' → logprob: -11.630449295043945
    7. ' <' → logprob: -12.630449295043945
    8. ' ==' → logprob: -12.630449295043945
    9. '()!=' → logprob: -12.755449295043945
    10. ' )' → logprob: -13.005449295043945

Token 65: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.05493058264255524
    2. 'self' → logprob: -3.3049306869506836
    3. ' Board' → logprob: -4.179930686950684
    4. 'Board' → logprob: -6.554930686950684
    5. '3' → logprob: -11.804930686950684
    6. ' board' → logprob: -12.054930686950684
    7. ' ' → logprob: -12.304930686950684
    8. ' ' → logprob: -12.804930686950684
    9. '	self' → logprob: -14.304930686950684
    10. '(Board' → logprob: -14.554930686950684

Token 66: '.SIZE' (ID: 163232)
  Prédit: '.SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.SIZE' → logprob: -0.03055228292942047
    2. '.' → logprob: -3.530552387237549
    3. '.S' → logprob: -7.155552387237549
    4. ' .' → logprob: -11.03055191040039
    5. 'SIZE' → logprob: -13.65555191040039
    6. '.size' → logprob: -14.40555191040039
    7. '.__' → logprob: -14.65555191040039
    8. '.Size' → logprob: -14.65555191040039
    9. '.<' → logprob: -15.28055191040039
    10. '.

' → logprob: -15.28055191040039

Token 67: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3154776096343994
    2. ' or' → logprob: -1.3154776096343994
    3. ' :' → logprob: -6.44047737121582
    4. '):' → logprob: -8.06547737121582
    5. 'or' → logprob: -8.81547737121582
    6. ':
' → logprob: -9.44047737121582
    7. ' ):' → logprob: -10.44047737121582
    8. ')' → logprob: -11.44047737121582
    9. ':return' → logprob: -11.56547737121582
    10. ' and' → logprob: -11.81547737121582

Token 68: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.12845981121063232
    2. 'any' → logprob: -2.128459930419922
    3. 'len' → logprob: -6.878459930419922
    4. ' len' → logprob: -7.753459930419922
    5. '       ' → logprob: -10.503459930419922
    6. ' not' → logprob: -10.753459930419922
    7. 'not' → logprob: -12.003459930419922
    8. '(any' → logprob: -12.503459930419922
    9. '           ' → logprob: -12.753459930419922
    10. '   ' → logprob: -12.878459930419922

Token 69: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.006739169359207153
    2. 'len' → logprob: -5.256739139556885
    3. ' len' → logprob: -6.506739139556885
    4. '           ' → logprob: -12.631739616394043
    5. '(' → logprob: -12.756739616394043
    6. ' (' → logprob: -13.256739616394043
    7. '	len' → logprob: -14.006739616394043
    8. '   ' → logprob: -14.131739616394043
    9. '(not' → logprob: -14.506739616394043
    10. '       ' → logprob: -15.006739616394043

Token 70: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -5.383526149671525e-05
    2. '(' → logprob: -10.500053405761719
    3. 'row' → logprob: -11.125053405761719
    4. '(r' → logprob: -11.500053405761719
    5. ' row' → logprob: -14.500053405761719
    6. '(rows' → logprob: -14.625053405761719
    7. '(line' → logprob: -15.250053405761719
    8. '```' → logprob: -17.12505340576172
    9. '	row' → logprob: -17.25005340576172
    10. ' (' → logprob: -17.87505340576172

Token 71: ')' (ID: 8)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.419655978679657
    2. '!=' → logprob: -1.1696560382843018
    3. ')' → logprob: -4.294655799865723
    4. '()!=' → logprob: -4.419655799865723
    5. ')!=' → logprob: -5.669655799865723
    6. '()' → logprob: -5.794655799865723
    7. ']!=' → logprob: -11.169655799865723
    8. ' not' → logprob: -11.294655799865723
    9. '!==' → logprob: -11.419655799865723
    10. '```' → logprob: -11.544655799865723

Token 72: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5535470843315125
    2. ' !=' → logprob: -0.9285470843315125
    3. '()!=' → logprob: -3.6785471439361572
    4. ')!=' → logprob: -5.553546905517578
    5. ')' → logprob: -7.803546905517578
    6. '()' → logprob: -8.428546905517578
    7. ' not' → logprob: -9.178546905517578
    8. ']!=' → logprob: -10.428546905517578
    9. '<>' → logprob: -10.803546905517578
    10. '!==' → logprob: -10.803546905517578

Token 73: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31326648592948914
    2. ' self' → logprob: -1.3132665157318115
    3. '3' → logprob: -12.81326675415039
    4. ' ' → logprob: -13.93826675415039
    5. '(self' → logprob: -14.93826675415039
    6. '=self' → logprob: -15.43826675415039
    7. '	self' → logprob: -15.68826675415039
    8. '   ' → logprob: -16.68826675415039
    9. 'Self' → logprob: -16.68826675415039
    10. '[self' → logprob: -16.81326675415039

Token 74: '.SIZE' (ID: 163232)
  Prédit: '.SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.SIZE' → logprob: -0.003116991138085723
    2. 'SIZE' → logprob: -5.878117084503174
    3. '.' → logprob: -8.753116607666016
    4. '_SIZE' → logprob: -9.378116607666016
    5. '.S' → logprob: -10.378116607666016
    6. '.size' → logprob: -11.628116607666016
    7. ')' → logprob: -11.753116607666016
    8. '```' → logprob: -12.378116607666016
    9. '   ' → logprob: -12.503116607666016
    10. ' .' → logprob: -12.878116607666016

Token 75: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.006917484104633331
    2. 'for' → logprob: -5.631917476654053
    3. ')' → logprob: -5.881917476654053
    4. ' ' → logprob: -7.756917476654053
    5. ' or' → logprob: -10.256917953491211
    6. '   ' → logprob: -11.006917953491211
    7. '    ' → logprob: -11.381917953491211
    8. '       ' → logprob: -12.131917953491211
    9. '	for' → logprob: -12.256917953491211
    10. '           ' → logprob: -12.506917953491211

Token 76: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.00029244067263789475
    2. 'row' → logprob: -8.375292778015137
    3. ' rows' → logprob: -9.750292778015137
    4. ' ' → logprob: -13.500292778015137
    5. '	row' → logprob: -13.625292778015137
    6. '(row' → logprob: -15.125292778015137
    7. '<|end|>' → logprob: -15.125292778015137
    8. 'rows' → logprob: -15.750292778015137
    9. ',row' → logprob: -16.00029182434082
    10. ' rowspan' → logprob: -16.37529182434082

Token 77: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019134038593620062
    2. 'in' → logprob: -6.501913547515869
    3. ' ' → logprob: -7.876913547515869
    4. 'row' → logprob: -11.626913070678711
    5. ')' → logprob: -11.751913070678711
    6. 'rows' → logprob: -12.251913070678711
    7. '  ' → logprob: -12.751913070678711
    8. ' row' → logprob: -13.001913070678711
    9. ' i' → logprob: -13.501913070678711
    10. ' rows' → logprob: -13.876913070678711

Token 78: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.6328533887863159
    2. ' rows' → logprob: -0.7578533887863159
    3. 'row' → logprob: -9.132853507995605
    4. ' row' → logprob: -9.632853507995605
    5. ' ' → logprob: -9.757853507995605
    6. '	rows' → logprob: -11.632853507995605
    7. 'r' → logprob: -12.507853507995605
    8. '(rows' → logprob: -13.257853507995605
    9. ')' → logprob: -13.507853507995605
    10. ' ' → logprob: -14.132853507995605

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007053506560623646
    2. '):
' → logprob: -5.007053375244141
    3. ' ):' → logprob: -8.38205337524414
    4. ')' → logprob: -9.75705337524414
    5. ':' → logprob: -10.00705337524414
    6. ' ):
' → logprob: -13.00705337524414
    7. '   ' → logprob: -13.38205337524414
    8. '       ' → logprob: -14.13205337524414
    9. '):
' → logprob: -14.75705337524414
    10. '):

' → logprob: -15.13205337524414

Token 80: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.032581135630607605
    2. '           ' → logprob: -3.657581090927124
    3. ':
' → logprob: -5.282581329345703
    4. '):' → logprob: -7.532581329345703
    5. ' raise' → logprob: -8.532581329345703
    6. ' :' → logprob: -8.907581329345703
    7. '       ' → logprob: -9.282581329345703
    8. ',' → logprob: -10.032581329345703
    9. ')' → logprob: -10.157581329345703
    10. 'raise' → logprob: -10.532581329345703

Token 81: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.07680118829011917
    2. '           ' → logprob: -3.201801300048828
    3. 'raise' (adapté à ' raise') → logprob: -4.076801300048828
    4. '
' → logprob: -4.701801300048828
    5. '            ' → logprob: -5.451801300048828
    6. ' 
' → logprob: -6.951801300048828
    7. ' ' → logprob: -7.451801300048828
    8. '               ' → logprob: -7.701801300048828
    9. '	raise' → logprob: -8.326801300048828
    10. '            
' → logprob: -8.701801300048828

Token 82: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -5.621933451038785e-05
    2. ' ' → logprob: -10.125056266784668
    3. 'Value' → logprob: -11.375056266784668
    4. ' Val' → logprob: -12.625056266784668
    5. ' ' → logprob: -14.375056266784668
    6. '	Value' → logprob: -14.625056266784668
    7. ' value' → logprob: -16.12505531311035
    8. ' Va' → logprob: -16.25005531311035
    9. ' Runtime' → logprob: -17.75005531311035
    10. '_Value' → logprob: -18.00005531311035

Token 83: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.12696266174316406
    2. 'rror' → logprob: -2.126962661743164
    3. 'ror' → logprob: -10.876962661743164
    4. 'r' → logprob: -11.126962661743164
    5. 'n' → logprob: -15.626962661743164
    6. 'ption' → logprob: -16.001962661743164
    7. 'Value' → logprob: -16.001962661743164
    8. 'rr' → logprob: -16.251962661743164
    9. ' Error' → logprob: -16.251962661743164
    10. '	Error' → logprob: -16.376962661743164

Token 84: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.06315017491579056
    2. '(' → logprob: -2.81315016746521
    3. '(
' → logprob: -7.063150405883789
    4. '('' → logprob: -8.063150405883789
    5. '(f' → logprob: -12.313150405883789
    6. '(

' → logprob: -12.688150405883789
    7. '()' → logprob: -13.438150405883789
    8. '("'' → logprob: -14.563150405883789
    9. '"' → logprob: -14.938150405883789
    10. '(
' → logprob: -15.063150405883789

Token 85: 'Board' (ID: 14558)
  Prédit: 'Board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Board' → logprob: -0.37483444809913635
    2. 'Invalid' → logprob: -1.249834418296814
    3. ' Board' → logprob: -4.2498345375061035
    4. 'All' → logprob: -5.6248345375061035
    5. 'Rows' → logprob: -6.4998345375061035
    6. 'Incorrect' → logprob: -6.7498345375061035
    7. 'The' → logprob: -6.8748345375061035
    8. '"' → logprob: -7.2498345375061035
    9. 'Each' → logprob: -7.3748345375061035
    10. ' Invalid' → logprob: -7.3748345375061035

Token 86: ' rows' (ID: 13585)
  Prédit: ' size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.1097085252404213
    2. ' rows' → logprob: -3.109708547592163
    3. ' must' → logprob: -3.109708547592163
    4. ' dimensions' → logprob: -4.359708309173584
    5. ' ' → logprob: -6.609708309173584
    6. 'size' → logprob: -8.484708786010742
    7. ' dimension' → logprob: -9.359708786010742
    8. ' sizes' → logprob: -9.359708786010742
    9. ' row' → logprob: -9.984708786010742
    10. ' should' → logprob: -10.484708786010742

Token 87: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.002028327202424407
    2. ' should' → logprob: -6.627028465270996
    3. 'must' → logprob: -8.377028465270996
    4. ' ' → logprob: -8.627028465270996
    5. ' length' → logprob: -9.377028465270996
    6. ' size' → logprob: -9.502028465270996
    7. ' and' → logprob: -9.877028465270996
    8. ' have' → logprob: -10.002028465270996
    9. '   ' → logprob: -11.877028465270996
    10. ' dimensions' → logprob: -12.002028465270996

Token 88: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.2281222939491272
    2. ' have' → logprob: -1.6031222343444824
    3. 'have' → logprob: -6.353122234344482
    4. ' ' → logprob: -8.10312271118164
    5. ' each' → logprob: -8.10312271118164
    6. ' contain' → logprob: -8.97812271118164
    7. ' all' → logprob: -9.60312271118164
    8. 'each' → logprob: -9.72812271118164
    9. '<|end|>' → logprob: -9.72812271118164
    10. 'be' → logprob: -11.10312271118164

Token 89: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9759406447410583
    2. ' of' → logprob: -1.1009407043457031
    3. ' a' → logprob: -1.7259407043457031
    4. ' exactly' → logprob: -2.475940704345703
    5. '3' → logprob: -3.725940704345703
    6. 'of' → logprob: -6.725940704345703
    7. ' three' → logprob: -7.225940704345703
    8. 'a' → logprob: -7.350940704345703
    9. ' lists' → logprob: -7.600940704345703
    10. ' square' → logprob: -8.100940704345703

Token 90: '3' (ID: 18)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6479790210723877
    2. 'of' → logprob: -1.7729790210723877
    3. '3' → logprob: -1.8979790210723877
    4. ' of' → logprob: -2.8979790210723877
    5. 'square' → logprob: -3.1479790210723877
    6. ' a' → logprob: -3.8979790210723877
    7. 'exact' → logprob: -4.022978782653809
    8. ' exactly' → logprob: -5.022978782653809
    9. ' ' → logprob: -5.147978782653809
    10. ' square' → logprob: -5.522978782653809

Token 91: ' strings' (ID: 18279)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5760836005210876
    2. ' x' → logprob: -0.8260836005210876
    3. ' by' → logprob: -9.826083183288574
    4. ' ' → logprob: -10.451083183288574
    5. ')x' → logprob: -11.076083183288574
    6. ' rows' → logprob: -11.326083183288574
    7. ' characters' → logprob: -11.701083183288574
    8. ' and' → logprob: -12.076083183288574
    9. '"x' → logprob: -12.326083183288574
    10. ')' → logprob: -12.451083183288574

Token 92: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.06622722744941711
    2. ' each' → logprob: -3.0662271976470947
    3. ' long' → logprob: -4.316227436065674
    4. ',' → logprob: -5.691227436065674
    5. ' with' → logprob: -7.941227436065674
    6. 'each' → logprob: -8.566226959228516
    7. 'long' → logprob: -9.191226959228516
    8. ' ' → logprob: -10.066226959228516
    9. 'of' → logprob: -10.316226959228516
    10. ')' → logprob: -11.566226959228516

Token 93: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.003544239792972803
    2. 'length' → logprob: -5.753544330596924
    3. ' ' → logprob: -8.253543853759766
    4. ' exactly' → logprob: -9.878543853759766
    5. ' lenght' → logprob: -10.753543853759766
    6. ' size' → logprob: -11.128543853759766
    7. ' equal' → logprob: -11.503543853759766
    8. ' exact' → logprob: -13.003543853759766
    9. ' len' → logprob: -13.503543853759766
    10. '3' → logprob: -13.503543853759766

Token 94: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006771856918931007
    2. '3' → logprob: -5.006772041320801
    3. ' '' → logprob: -10.0067720413208
    4. '  ' → logprob: -12.0067720413208
    5. ' ' → logprob: -12.6317720413208
    6. ' `' → logprob: -14.3817720413208
    7. ''' → logprob: -14.6317720413208
    8. ' "' → logprob: -15.5067720413208
    9. '33' → logprob: -15.7567720413208
    10. '```' → logprob: -16.131771087646484

Token 95: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0004353181866463274
    2. ' ' → logprob: -7.7504353523254395
    3. ''' → logprob: -12.750434875488281
    4. '```' → logprob: -14.500434875488281
    5. '"' → logprob: -14.875434875488281
    6. '`' → logprob: -15.750434875488281
    7. '' → logprob: -16.00043487548828
    8. '  ' → logprob: -16.81293487548828
    9. 'self' → logprob: -16.87543487548828
    10. '   ' → logprob: -17.00043487548828

Token 96: '.")
' (ID: 27834)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.06453057378530502
    2. '.")' → logprob: -2.814530611038208
    3. '")
' → logprob: -6.189530372619629
    4. '.")
' → logprob: -7.939530372619629
    5. '"' → logprob: -10.189530372619629
    6. ')")' → logprob: -10.689530372619629
    7. '!")' → logprob: -10.814530372619629
    8. '")
' → logprob: -10.814530372619629
    9. '.")
' → logprob: -11.564530372619629
    10. ' ")' → logprob: -11.939530372619629

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01907293312251568
    2. '
' → logprob: -4.019073009490967
    3. '        
' → logprob: -7.269073009490967
    4. '<|end|>' → logprob: -9.019072532653809
    5. ' self' → logprob: -10.644072532653809
    6. '  
' → logprob: -11.644072532653809
    7. 'self' → logprob: -11.644072532653809
    8. '    
' → logprob: -11.644072532653809
    9. ' ' → logprob: -11.769072532653809
    10. '   ' → logprob: -11.769072532653809

Token 98: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06330204010009766
    2. ' self' → logprob: -2.9383020401000977
    3. 'self' (adapté à ' self') → logprob: -4.938302040100098
    4. '   ' → logprob: -7.438302040100098
    5. '
' → logprob: -7.813302040100098
    6. ' ' → logprob: -9.313302040100098
    7. '      ' → logprob: -10.188302040100098
    8. '    ' → logprob: -10.563302040100098
    9. '     ' → logprob: -11.438302040100098
    10. '        
' → logprob: -11.813302040100098

Token 99: '.grid' (ID: 19269)
  Prédit: '.rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.rows' → logprob: -0.0042243050411343575
    2. '.' → logprob: -6.1292243003845215
    3. '._' → logprob: -7.1292243003845215
    4. ' .' → logprob: -7.5042243003845215
    5. '.board' → logprob: -8.62922477722168
    6. 'rows' → logprob: -8.62922477722168
    7. '.columns' → logprob: -9.87922477722168
    8. '.Rows' → logprob: -10.25422477722168
    9. '.lines' → logprob: -10.25422477722168
    10. '_rows' → logprob: -10.87922477722168

Token 100: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03368477523326874
    2. '=' → logprob: -3.408684730529785
    3. ' ' → logprob: -10.533684730529785
    4. ' =[' → logprob: -11.408684730529785
    5. ':' → logprob: -14.533684730529785
    6. '[:]' → logprob: -15.533684730529785
    7. '[' → logprob: -15.658684730529785
    8. '=[' → logprob: -15.658684730529785
    9. '  ' → logprob: -15.908684730529785
    10. ' =
' → logprob: -16.6586856842041

Token 101: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.12763071060180664
    2. ' List' → logprob: -2.1276307106018066
    3. '[List' → logprob: -7.377630710601807
    4. ' ' → logprob: -10.252630233764648
    5. '   ' → logprob: -10.377630233764648
    6. '  ' → logprob: -12.627630233764648
    7. 'list' → logprob: -13.127630233764648
    8. '    ' → logprob: -13.627630233764648
    9. '	List' → logprob: -13.877630233764648
    10. '       ' → logprob: -14.127630233764648

Token 102: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.1615087389945984
    2. '[str' → logprob: -1.9115087985992432
    3. '[' → logprob: -6.661508560180664
    4. '[int' → logprob: -12.911508560180664
    5. '[
' → logprob: -13.661508560180664
    6. ']' → logprob: -15.661508560180664
    7. 'List' → logprob: -15.661508560180664
    8. '[[' → logprob: -16.036508560180664
    9. '<List' → logprob: -16.411508560180664
    10. '[String' → logprob: -16.411508560180664

Token 103: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -9.996708104154095e-05
    2. '[' → logprob: -9.250100135803223
    3. '[int' → logprob: -12.625100135803223
    4. 'str' → logprob: -15.250100135803223
    5. '[
' → logprob: -15.500100135803223
    6. ']' → logprob: -16.750099182128906
    7. ' [' → logprob: -16.875099182128906
    8. '   ' → logprob: -17.750099182128906
    9. '```' → logprob: -18.500099182128906
    10. ' ' → logprob: -18.500099182128906

Token 104: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -2.141186450899113e-05
    2. ']]=' → logprob: -11.125020980834961
    3. ' ]]' → logprob: -12.625020980834961
    4. ']' → logprob: -13.500020980834961
    5. '']]' → logprob: -14.500020980834961
    6. '"]]' → logprob: -15.000020980834961
    7. ']]]' → logprob: -15.000020980834961
    8. ')]' → logprob: -16.00002098083496
    9. '       ' → logprob: -16.12502098083496
    10. '[' → logprob: -16.12502098083496

Token 105: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687315583229065
    2. ' =' → logprob: -1.1368731260299683
    3. ' =[' → logprob: -14.261873245239258
    4. '=[' → logprob: -14.511873245239258
    5. '[' → logprob: -15.261873245239258
    6. '=[]' → logprob: -15.636873245239258
    7. ' ' → logprob: -15.886873245239258
    8. '=[[' → logprob: -16.261873245239258
    9. '=create' → logprob: -17.011873245239258
    10. '＝' → logprob: -17.011873245239258

Token 106: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.07530632615089417
    2. '[' → logprob: -3.3253064155578613
    3. '[row' → logprob: -3.3253064155578613
    4. '[array' → logprob: -9.200305938720703
    5. '[list' → logprob: -9.200305938720703
    6. '[str' → logprob: -9.325305938720703
    7. '[List' → logprob: -9.825305938720703
    8. '[r' → logprob: -10.325305938720703
    9. '[result' → logprob: -10.450305938720703
    10. '[line' → logprob: -10.700305938720703

Token 107: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0006927779759280384
    2. '[list' → logprob: -7.750692844390869
    3. ' list' → logprob: -8.250692367553711
    4. '   ' → logprob: -14.250692367553711
    5. '[' → logprob: -16.37569236755371
    6. '(list' → logprob: -16.50069236755371
    7. '       ' → logprob: -17.75069236755371
    8. '=list' → logprob: -18.37569236755371
    9. '	list' → logprob: -18.50069236755371
    10. ' ' → logprob: -19.00069236755371

Token 108: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.00026526954025030136
    2. 'row' → logprob: -8.250265121459961
    3. '(' → logprob: -12.750265121459961
    4. ' row' → logprob: -14.125265121459961
    5. '(rows' → logprob: -15.750265121459961
    6. '(r' → logprob: -16.25026512145996
    7. '	row' → logprob: -17.25026512145996
    8. '(line' → logprob: -18.12526512145996
    9. ')' → logprob: -18.25026512145996
    10. ' (' → logprob: -18.62526512145996

Token 109: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2521647810935974
    2. '(row' → logprob: -1.5021648406982422
    3. 'row' → logprob: -9.002164840698242
    4. ' )' → logprob: -9.752164840698242
    5. '())' → logprob: -10.627164840698242
    6. ' row' → logprob: -12.127164840698242
    7. '   ' → logprob: -12.252164840698242
    8. '(' → logprob: -12.377164840698242
    9. ')]' → logprob: -12.502164840698242
    10. ' ' → logprob: -13.502164840698242

Token 110: ' for' (ID: 395)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.10300379991531372
    2. ' for' → logprob: -2.478003740310669
    3. 'for' → logprob: -4.353003978729248
    4. ')' → logprob: -7.478003978729248
    5. 'row' → logprob: -8.10300350189209
    6. '(' → logprob: -9.22800350189209
    7. ' ' → logprob: -9.97800350189209
    8. '[:]' → logprob: -10.47800350189209
    9. ']' → logprob: -10.85300350189209
    10. ' row' → logprob: -11.22800350189209

Token 111: ' row' (ID: 5225)
  Prédit: ' rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.05666903033852577
    2. 'rows' → logprob: -3.306668996810913
    3. ' row' → logprob: -4.056669235229492
    4. 'row' → logprob: -6.806669235229492
    5. '	rows' → logprob: -10.431669235229492
    6. '(rows' → logprob: -11.806669235229492
    7. ' ' → logprob: -13.056669235229492
    8. '	row' → logprob: -13.681669235229492
    9. '_rows' → logprob: -14.306669235229492
    10. 'r' → logprob: -15.181669235229492

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16092239320278168
    2. 'in' → logprob: -1.9109224081039429
    3. 'rows' → logprob: -7.285922527313232
    4. 'row' → logprob: -12.410922050476074
    5. ' rows' → logprob: -12.535922050476074
    6. ' ' → logprob: -13.910922050476074
    7. 's' → logprob: -13.910922050476074
    8. 'import' → logprob: -14.535922050476074
    9. '(rows' → logprob: -14.660922050476074
    10. '    ' → logprob: -14.910922050476074

Token 113: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.009757505729794502
    2. ' rows' → logprob: -4.6347575187683105
    3. '	rows' → logprob: -14.009757041931152
    4. '(rows' → logprob: -15.134757041931152
    5. 'row' → logprob: -15.259757041931152
    6. ' ' → logprob: -16.50975799560547
    7. '   ' → logprob: -16.88475799560547
    8. '```' → logprob: -17.25975799560547
    9. '.rows' → logprob: -18.13475799560547
    10. 'r' → logprob: -18.38475799560547

Token 114: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00014191943046171218
    2. ' ]' → logprob: -9.125142097473145
    3. ']
' → logprob: -11.125142097473145
    4. '<|end|>' → logprob: -11.375142097473145
    5. '   ' → logprob: -13.250142097473145
    6. ')' → logprob: -13.250142097473145
    7. '       ' → logprob: -14.000142097473145
    8. ' ' → logprob: -14.250142097473145
    9. '<|end|>' → logprob: -14.750142097473145
    10. '}' → logprob: -15.000142097473145

Token 115: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17966513335704803
    2. '   ' → logprob: -1.9296650886535645
    3. '<|end|>' → logprob: -4.4296650886535645
    4. '    
' → logprob: -5.6796650886535645
    5. ' 
' → logprob: -6.5546650886535645
    6. '

' → logprob: -6.6796650886535645
    7. '  
' → logprob: -8.054665565490723
    8. '```' → logprob: -8.304665565490723
    9. '<|end|>' → logprob: -8.304665565490723
    10. ' ' → logprob: -9.179665565490723

Token 116: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30110231041908264
    2. 'def' (adapté à ' def') → logprob: -2.67610239982605
    3. ' ' → logprob: -2.80110239982605
    4. '    
' → logprob: -3.05110239982605
    5. ' 
' → logprob: -3.42610239982605
    6. ' def' → logprob: -3.92610239982605
    7. '
' → logprob: -4.426102161407471
    8. '<|end|>' → logprob: -4.801102161407471
    9. '  
' → logprob: -6.301102161407471
    10. '    ' → logprob: -6.301102161407471

Token 117: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.04927822947502136
    2. '_get' → logprob: -4.299278259277344
    3. ' def' → logprob: -4.424278259277344
    4. ' ' → logprob: -4.549278259277344
    5. '_cell' → logprob: -5.549278259277344
    6. 'get' → logprob: -6.299278259277344
    7. '_' → logprob: -6.299278259277344
    8. ' is' → logprob: -6.674278259277344
    9. ' at' → logprob: -7.049278259277344
    10. 'def' → logprob: -7.924278259277344

Token 118: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.3948507606983185
    2. '_st' → logprob: -1.769850730895996
    3. '_' → logprob: -2.269850730895996
    4. '_token' → logprob: -3.894850730895996
    5. '_row' → logprob: -5.269850730895996
    6. '_piece' → logprob: -5.394850730895996
    7. '_at' → logprob: -5.894850730895996
    8. '_value' → logprob: -5.894850730895996
    9. '_square' → logprob: -5.894850730895996
    10. '_state' → logprob: -6.144850730895996

Token 119: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.029901249334216118
    2. '(' → logprob: -3.5299012660980225
    3. ' (' → logprob: -8.904901504516602
    4. '(
' → logprob: -11.904901504516602
    5. '(s' → logprob: -12.904901504516602
    6. ' ' → logprob: -13.029901504516602
    7. 'self' → logprob: -13.279901504516602
    8. '(row' → logprob: -14.779901504516602
    9. '(sel' → logprob: -14.904901504516602
    10. '   ' → logprob: -15.279901504516602

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022879932075738907
    2. 'self' → logprob: -4.0228800773620605
    3. 'x' → logprob: -6.5228800773620605
    4. ' ,' → logprob: -6.6478800773620605
    5. 'row' → logprob: -7.3978800773620605
    6. ' ' → logprob: -8.022879600524902
    7. ')' → logprob: -8.272879600524902
    8. ',row' → logprob: -8.397879600524902
    9. '(self' → logprob: -9.022879600524902
    10. '   ' → logprob: -9.397879600524902

Token 121: ' row' (ID: 5225)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1288686990737915
    2. ' self' → logprob: -2.128868579864502
    3. 'row' → logprob: -6.753868579864502
    4. ' row' → logprob: -7.378868579864502
    5. 'x' → logprob: -9.25386905670166
    6. ' ' → logprob: -10.50386905670166
    7. '   ' → logprob: -11.75386905670166
    8. ' x' → logprob: -11.87886905670166
    9. 'r' → logprob: -12.62886905670166
    10. '       ' → logprob: -13.12886905670166

Token 122: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001204519416205585
    2. ' ,' → logprob: -7.001204490661621
    3. ':' → logprob: -8.501204490661621
    4. ',row' → logprob: -9.626204490661621
    5. ':int' → logprob: -11.251204490661621
    6. '][' → logprob: -12.626204490661621
    7. ')' → logprob: -13.626204490661621
    8. '[row' → logprob: -13.876204490661621
    9. ',int' → logprob: -14.001204490661621
    10. ' ' → logprob: -14.126204490661621

Token 123: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07890818268060684
    2. ' int' → logprob: -2.5789082050323486
    3. ')' → logprob: -12.20390796661377
    4. ':int' → logprob: -12.45390796661377
    5. ' ' → logprob: -12.70390796661377
    6. '   ' → logprob: -13.32890796661377
    7. '0' → logprob: -13.45390796661377
    8. ',' → logprob: -13.45390796661377
    9. '[int' → logprob: -15.32890796661377
    10. ',int' → logprob: -15.45390796661377

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.960946772480384e-05
    2. ' ,' → logprob: -9.250099182128906
    3. ',row' → logprob: -13.000099182128906
    4. ')' → logprob: -14.125099182128906
    5. ',int' → logprob: -15.125099182128906
    6. ' ' → logprob: -16.500099182128906
    7. '   ' → logprob: -17.000099182128906
    8. ',column' → logprob: -17.250099182128906
    9. ':' → logprob: -17.250099182128906
    10. ',index' → logprob: -18.125099182128906

Token 125: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.10046879202127457
    2. 'col' → logprob: -2.350468873977661
    3. ' column' → logprob: -8.600468635559082
    4. 'column' → logprob: -9.475468635559082
    5. ' ' → logprob: -14.225468635559082
    6. 'colm' → logprob: -15.850468635559082
    7. '	col' → logprob: -15.850468635559082
    8. '   ' → logprob: -16.1004695892334
    9. '_col' → logprob: -16.1004695892334
    10. ')' → logprob: -16.3504695892334

Token 126: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08934684097766876
    2. '):' → logprob: -2.7143468856811523
    3. ':' → logprob: -3.9643468856811523
    4. ':int' → logprob: -8.964346885681152
    5. '):
' → logprob: -9.589346885681152
    6. ' )' → logprob: -10.464346885681152
    7. ' ):' → logprob: -12.089346885681152
    8. '   ' → logprob: -12.589346885681152
    9. 'int' → logprob: -13.089346885681152
    10. ' ' → logprob: -13.464346885681152

Token 127: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6043618321418762
    2. ' int' → logprob: -0.8543618321418762
    3. ')' → logprob: -3.8543617725372314
    4. ':int' → logprob: -5.2293620109558105
    5. ' )' → logprob: -6.6043620109558105
    6. ':' → logprob: -10.354361534118652
    7. 'nt' → logprob: -10.354361534118652
    8. ' ' → logprob: -10.729361534118652
    9. '[int' → logprob: -11.604361534118652
    10. '=int' → logprob: -11.979361534118652

Token 128: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00045474470243789256
    2. '):' → logprob: -7.750454902648926
    3. ' )' → logprob: -10.750454902648926
    4. '):
' → logprob: -13.750454902648926
    5. ')->' → logprob: -14.375454902648926
    6. '   ' → logprob: -15.625454902648926
    7. ':' → logprob: -15.875454902648926
    8. ' ' → logprob: -16.12545394897461
    9. ')
' → logprob: -16.25045394897461
    10. '`)' → logprob: -16.25045394897461

Token 129: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.47911107540130615
    2. ')' → logprob: -1.1041110754013062
    3. '->' → logprob: -3.1041111946105957
    4. ':' → logprob: -5.604111194610596
    5. ')->' → logprob: -7.604111194610596
    6. ' )' → logprob: -10.354110717773438
    7. ']' → logprob: -10.604110717773438
    8. '-' → logprob: -10.979110717773438
    9. ' ' → logprob: -11.104110717773438
    10. ' )->' → logprob: -11.979110717773438

Token 130: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.021585654467344284
    2. 'str' → logprob: -4.271585464477539
    3. ' self' → logprob: -5.146585464477539
    4. 'self' → logprob: -6.771585464477539
    5. ' Optional' → logprob: -8.646585464477539
    6. ' '' → logprob: -8.646585464477539
    7. 'Optional' → logprob: -10.396585464477539
    8. '[str' → logprob: -11.021585464477539
    9. ''' → logprob: -11.771585464477539
    10. ' ' → logprob: -12.021585464477539

Token 131: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02143934555351734
    2. '):' → logprob: -3.89643931388855
    3. ':return' → logprob: -8.521439552307129
    4. '<|end|>' → logprob: -8.771439552307129
    5. ']:' → logprob: -8.896439552307129
    6. ')' → logprob: -8.896439552307129
    7. ':
' → logprob: -9.146439552307129
    8. '):
' → logprob: -9.771439552307129
    9. ' :' → logprob: -10.271439552307129
    10. '():' → logprob: -10.896439552307129

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005135946557857096
    2. '
' → logprob: -8.875514030456543
    3. ' return' → logprob: -8.875514030456543
    4. '   ' → logprob: -9.250514030456543
    5. '        
' → logprob: -10.125514030456543
    6. ':' → logprob: -11.000514030456543
    7. ' 
' → logprob: -11.375514030456543
    8. 'return' → logprob: -11.375514030456543
    9. '    
' → logprob: -11.625514030456543
    10. '    ' → logprob: -11.750514030456543

Token 133: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.37154054641723633
    2. ' return' → logprob: -1.3715405464172363
    3. '       ' → logprob: -2.8715405464172363
    4. '	return' → logprob: -14.121540069580078
    5. '   ' → logprob: -15.246540069580078
    6. ' ' → logprob: -16.121540069580078
    7. '
' → logprob: -16.121540069580078
    8. ' ' → logprob: -16.496540069580078
    9. '        
' → logprob: -16.996540069580078
    10. ':return' → logprob: -16.996540069580078

Token 134: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931473612785339
    2. 'self' → logprob: -0.6931473612785339
    3. '	self' → logprob: -17.068147659301758
    4. '(self' → logprob: -17.568147659301758
    5. ' ' → logprob: -18.193147659301758
    6. '       ' → logprob: -18.443147659301758
    7. ' ' → logprob: -18.943147659301758
    8. '[self' → logprob: -19.568147659301758
    9. 'Self' → logprob: -20.068147659301758
    10. '_self' → logprob: -20.568147659301758

Token 135: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.13674260675907135
    2. '.' → logprob: -2.13674259185791
    3. ' .' → logprob: -4.63674259185791
    4. '.board' → logprob: -10.76174259185791
    5. '.g' → logprob: -11.01174259185791
    6. '.s' → logprob: -11.51174259185791
    7. '.space' → logprob: -12.26174259185791
    8. '.cell' → logprob: -12.63674259185791
    9. '.self' → logprob: -13.26174259185791
    10. '.st' → logprob: -13.26174259185791

Token 136: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -7.3458322731312364e-06
    2. '[' → logprob: -11.875007629394531
    3. ' [' → logprob: -15.375007629394531
    4. '[col' → logprob: -17.87500762939453
    5. '   ' → logprob: -18.12500762939453
    6. '[r' → logprob: -18.62500762939453
    7. '[line' → logprob: -19.37500762939453
    8. '```' → logprob: -19.62500762939453
    9. '\[' → logprob: -20.12500762939453
    10. '[
' → logprob: -20.37500762939453

Token 137: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00040123690268956125
    2. ']' → logprob: -8.125401496887207
    3. ' ][' → logprob: -9.375401496887207
    4. '[col' → logprob: -10.875401496887207
    5. '[' → logprob: -13.750401496887207
    6. ' ' → logprob: -16.62540054321289
    7. '   ' → logprob: -16.75040054321289
    8. '"][' → logprob: -16.75040054321289
    9. ' ]' → logprob: -17.00040054321289
    10. '][]' → logprob: -17.25040054321289

Token 138: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.0005530327325686812
    2. ' col' → logprob: -7.500553131103516
    3. 'colm' → logprob: -18.250553131103516
    4. '	col' → logprob: -18.500553131103516
    5. '[col' → logprob: -18.750553131103516
    6. ' ' → logprob: -18.750553131103516
    7. 'coln' → logprob: -19.125553131103516
    8. 'coll' → logprob: -19.375553131103516
    9. '   ' → logprob: -19.625553131103516
    10. 'co' → logprob: -19.750553131103516

Token 139: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10115618258714676
    2. ')' → logprob: -2.351156234741211
    3. '}' → logprob: -7.226156234741211
    4. ' ]' → logprob: -8.851156234741211
    5. '<|end|>' → logprob: -9.726156234741211
    6. ' )' → logprob: -11.851156234741211
    7. ']
' → logprob: -13.101156234741211
    8. ' ' → logprob: -13.226156234741211
    9. '']' → logprob: -13.351156234741211
    10. ' }' → logprob: -13.476156234741211

Token 140: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 141: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00032163821742869914
    2. ' def' → logprob: -8.250321388244629
    3. '   ' → logprob: -9.875321388244629
    4. ' ' → logprob: -12.500321388244629
    5. '    
' → logprob: -13.625321388244629
    6. 'class' → logprob: -14.375321388244629
    7. ')' → logprob: -14.375321388244629
    8. '  ' → logprob: -14.500321388244629
    9. '@' → logprob: -14.750321388244629
    10. ' 
' → logprob: -14.750321388244629

Token 142: ' lines' (ID: 8698)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.05265123397111893
    2. ' is' → logprob: -3.6776511669158936
    3. 'set' → logprob: -3.9276511669158936
    4. '__' → logprob: -6.427651405334473
    5. 'is' → logprob: -6.802651405334473
    6. ' ' → logprob: -6.927651405334473
    7. ' has' → logprob: -7.427651405334473
    8. '_set' → logprob: -7.552651405334473
    9. ' check' → logprob: -7.677651405334473
    10. ' get' → logprob: -8.177651405334473

Token 143: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0032048076391220093
    2. '(' → logprob: -5.753204822540283
    3. 's' → logprob: -11.753204345703125
    4. ' (' → logprob: -12.128204345703125
    5. '_' → logprob: -12.753204345703125
    6. '(
' → logprob: -12.878204345703125
    7. '(s' → logprob: -13.003204345703125
    8. 'self' → logprob: -13.253204345703125
    9. '   ' → logprob: -14.003204345703125
    10. '_(' → logprob: -14.003204345703125

Token 144: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.47830864787101746
    2. ')' → logprob: -0.9783086776733398
    3. 'self' → logprob: -6.47830867767334
    4. '):
' → logprob: -6.85330867767334
    5. '):' → logprob: -7.10330867767334
    6. '(' → logprob: -8.35330867767334
    7. '   ' → logprob: -8.97830867767334
    8. '()' → logprob: -8.97830867767334
    9. ' )' → logprob: -9.72830867767334
    10. ' ' → logprob: -10.10330867767334

Token 145: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011395039036870003
    2. '(' → logprob: -6.8761396408081055
    3. 'self' → logprob: -9.876139640808105
    4. ')' → logprob: -10.876139640808105
    5. ' (' → logprob: -11.876139640808105
    6. '(
' → logprob: -12.126139640808105
    7. ' ->' → logprob: -12.126139640808105
    8. '   ' → logprob: -12.251139640808105
    9. '->' → logprob: -12.751139640808105
    10. ':' → logprob: -12.876139640808105

Token 146: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.07916902750730515
    2. ' List' → logprob: -2.5791690349578857
    3. '   ' → logprob: -8.704169273376465
    4. '[List' → logprob: -9.204169273376465
    5. 'list' → logprob: -12.579169273376465
    6. ' ' → logprob: -12.954169273376465
    7. ' list' → logprob: -13.579169273376465
    8. 'Generator' → logprob: -13.829169273376465
    9. 'Iterator' → logprob: -14.079169273376465
    10. '       ' → logprob: -14.329169273376465

Token 147: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.005954633932560682
    2. '[str' → logprob: -5.255954742431641
    3. '[' → logprob: -7.255954742431641
    4. '[
' → logprob: -11.50595474243164
    5. '[list' → logprob: -13.63095474243164
    6. ' [' → logprob: -13.63095474243164
    7. '[[' → logprob: -13.88095474243164
    8. '```' → logprob: -15.25595474243164
    9. '<List' → logprob: -15.50595474243164
    10. '   ' → logprob: -15.63095474243164

Token 148: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.1398757123970427e-05
    2. '[int' → logprob: -11.625011444091797
    3. 'str' → logprob: -14.125011444091797
    4. '[List' → logprob: -14.125011444091797
    5. '[' → logprob: -14.250011444091797
    6. ' [' → logprob: -15.750011444091797
    7. '   ' → logprob: -16.125011444091797
    8. ']' → logprob: -16.625011444091797
    9. ']:' → logprob: -17.375011444091797
    10. '[
' → logprob: -17.750011444091797

Token 149: ']]:
' (ID: 183340)
  Prédit: ']]:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]:
' → logprob: -0.10031697154045105
    2. ']]' → logprob: -2.3503170013427734
    3. ']:' → logprob: -10.600317001342773
    4. '>' → logprob: -10.850317001342773
    5. ']' → logprob: -10.850317001342773
    6. ']:
' → logprob: -11.100317001342773
    7. '   ' → logprob: -11.225317001342773
    8. '       ' → logprob: -11.350317001342773
    9. ' ]' → logprob: -12.725317001342773
    10. ' ' → logprob: -14.475317001342773

Token 150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00045307583059184253
    2. '
' → logprob: -9.000452995300293
    3. ' lines' → logprob: -9.500452995300293
    4. ':
' → logprob: -10.000452995300293
    5. 'return' → logprob: -10.125452995300293
    6. '   ' → logprob: -10.125452995300293
    7. 'result' → logprob: -10.250452995300293
    8. ':' → logprob: -10.625452995300293
    9. 'rows' → logprob: -10.625452995300293
    10. '        
' → logprob: -12.500452995300293

Token 151: ' #' (ID: 1069)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.31383559107780457
    2. 'lines' → logprob: -1.563835620880127
    3. 'rows' → logprob: -3.563835620880127
    4. '       ' → logprob: -3.688835620880127
    5. ' rows' → logprob: -5.188835620880127
    6. 'return' → logprob: -8.188835144042969
    7. ' return' → logprob: -8.313835144042969
    8. 'result' → logprob: -8.563835144042969
    9. ' result' → logprob: -8.813835144042969
    10. '   ' → logprob: -9.813835144042969

Token 152: ' Returns' (ID: 9609)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.35652491450309753
    2. ' lines' → logprob: -1.48152494430542
    3. 'rows' → logprob: -2.73152494430542
    4. ' rows' → logprob: -5.10652494430542
    5. '       ' → logprob: -7.35652494430542
    6. '   ' → logprob: -8.356524467468262
    7. 'result' → logprob: -8.856524467468262
    8. 'return' → logprob: -9.106524467468262
    9. ' result' → logprob: -9.106524467468262
    10. ' return' → logprob: -9.981524467468262

Token 153: ' all' (ID: 722)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5406295657157898
    2. 'self' → logprob: -1.2906296253204346
    3. '[
' → logprob: -2.6656296253204346
    4. '[self' → logprob: -3.2906296253204346
    5. ' [' → logprob: -4.2906293869018555
    6. ' [
' → logprob: -4.5406293869018555
    7. '[' → logprob: -5.2906293869018555
    8. ' all' → logprob: -5.9156293869018555
    9. '[]' → logprob: -6.5406293869018555
    10. '   ' → logprob: -6.9156293869018555

Token 154: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.46551722288131714
    2. 'rows' → logprob: -1.715517282485962
    3. 'lines' → logprob: -2.465517282485962
    4. ' rows' → logprob: -2.715517282485962
    5. ' possible' → logprob: -3.840517282485962
    6. 'possible' → logprob: -4.590517044067383
    7. ' the' → logprob: -5.090517044067383
    8. 'the' → logprob: -6.215517044067383
    9. '   ' → logprob: -7.465517044067383
    10. ' winning' → logprob: -8.340517044067383

Token 155: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22601503133773804
    2. ' (' → logprob: -2.226015090942383
    3. ':' → logprob: -3.101015090942383
    4. ' in' → logprob: -3.851015090942383
    5. ' that' → logprob: -5.351015090942383
    6. ' of' → logprob: -5.351015090942383
    7. '(lines' → logprob: -5.851015090942383
    8. '   ' → logprob: -5.976015090942383
    9. ' lines' → logprob: -5.976015090942383
    10. ' to' → logprob: -6.226015090942383

Token 156: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.5293368101119995
    2. 'check' → logprob: -1.0293368101119995
    3. ' test' → logprob: -4.154336929321289
    4. ' evaluate' → logprob: -4.404336929321289
    5. 'evaluate' → logprob: -5.154336929321289
    6. ' consider' → logprob: -5.404336929321289
    7. 'test' → logprob: -5.529336929321289
    8. ' be' → logprob: -5.779336929321289
    9. ' win' → logprob: -6.029336929321289
    10. 'win' → logprob: -6.529336929321289

Token 157: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0264830589294434
    2. ':' → logprob: -1.1514830589294434
    3. ' (' → logprob: -1.7764830589294434
    4. ' for' → logprob: -3.1514830589294434
    5. ' in' → logprob: -3.5264830589294434
    6. ',' → logprob: -4.026483058929443
    7. '
' → logprob: -4.276483058929443
    8. 'rows' → logprob: -4.526483058929443
    9. '[
' → logprob: -5.276483058929443
    10. ':
' → logprob: -5.401483058929443

Token 158: ' rows' (ID: 13585)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.8969314098358154
    2. '       ' → logprob: -1.2719314098358154
    3. 'self' → logprob: -1.3969314098358154
    4. '[
' → logprob: -3.6469314098358154
    5. '[self' → logprob: -4.0219316482543945
    6. ' [
' → logprob: -4.7719316482543945
    7. ' [' → logprob: -4.8969316482543945
    8. '[' → logprob: -6.2719316482543945
    9. '[]' → logprob: -7.3969316482543945
    10. '   ' → logprob: -7.5219316482543945

Token 159: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.22997082769870758
    2. '+' → logprob: -1.7299708127975464
    3. ',' → logprob: -3.604970932006836
    4. '       ' → logprob: -7.229970932006836
    5. ' +
' → logprob: -9.604970932006836
    6. '+
' → logprob: -10.104970932006836
    7. ' ,' → logprob: -10.479970932006836
    8. '+self' → logprob: -10.604970932006836
    9. '()' → logprob: -11.729970932006836
    10. '()+' → logprob: -11.979970932006836

Token 160: ' columns' (ID: 15697)
  Prédit: ' columns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' columns' → logprob: -0.3677568733692169
    2. ' cols' → logprob: -2.1177568435668945
    3. 'cols' → logprob: -2.3677568435668945
    4. 'columns' → logprob: -2.3677568435668945
    5. ',' → logprob: -12.242756843566895
    6. ' [' → logprob: -12.242756843566895
    7. 'col' → logprob: -12.242756843566895
    8. ' col' → logprob: -12.742756843566895
    9. 'rows' → logprob: -12.867756843566895
    10. '_cols' → logprob: -12.992756843566895

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02165413647890091
    2. '       ' → logprob: -4.52165412902832
    3. ' +' → logprob: -5.02165412902832
    4. ' ,' → logprob: -6.27165412902832
    5. '+' → logprob: -6.77165412902832
    6. ' and' → logprob: -7.89665412902832
    7. ',
' → logprob: -8.02165412902832
    8. '   ' → logprob: -10.14665412902832
    9. '=' → logprob: -10.39665412902832
    10. '
' → logprob: -10.64665412902832

Token 162: ' diagon' (ID: 146014)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8155770301818848
    2. 'and' → logprob: -0.8155770301818848
    3. 'di' → logprob: -2.5655770301818848
    4. ' diagon' → logprob: -3.3155770301818848
    5. '[' → logprob: -7.190577030181885
    6. '       ' → logprob: -7.315577030181885
    7. '   ' → logprob: -8.815576553344727
    8. ' [' → logprob: -9.315576553344727
    9. 'diag' → logprob: -9.440576553344727
    10. '#' → logprob: -9.690576553344727

Token 163: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.005707407835870981
    2. 'al' → logprob: -5.255707263946533
    3. '```' → logprob: -8.630707740783691
    4. '#' → logprob: -9.505707740783691
    5. ' als' → logprob: -10.443207740783691
    6. '   ' → logprob: -11.255707740783691
    7. '``' → logprob: -11.318207740783691
    8. 'ales' → logprob: -11.568207740783691
    9. 'a' → logprob: -11.630707740783691
    10. 'ais' → logprob: -11.755707740783691

Token 164: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09662775695323944
    2. '
' → logprob: -2.596627712249756
    3. 'rows' → logprob: -5.096627712249756
    4. ' lines' → logprob: -5.096627712249756
    5. 'return' → logprob: -6.471627712249756
    6. '        
' → logprob: -7.346627712249756
    7. 'result' → logprob: -7.721627712249756
    8. '(lines' → logprob: -7.721627712249756
    9. 'lines' → logprob: -7.971627712249756
    10. ':
' → logprob: -8.096628189086914

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006921391934156418
    2. '
' → logprob: -5.006921291351318
    3. ':' → logprob: -10.006921768188477
    4. '        
' → logprob: -10.756921768188477
    5. ':
' → logprob: -10.881921768188477
    6. 'result' → logprob: -11.006921768188477
    7. ' lines' → logprob: -11.006921768188477
    8. '   ' → logprob: -11.006921768188477
    9. '```' → logprob: -11.506921768188477
    10. ',' → logprob: -11.631921768188477

Token 166: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.6626985669136047
    2. 'lines' (adapté à ' lines') → logprob: -0.9126985669136047
    3. '       ' → logprob: -2.66269850730896
    4. 'rows' → logprob: -4.412698745727539
    5. ' rows' → logprob: -7.412698745727539
    6. 'result' → logprob: -8.537698745727539
    7. ' result' → logprob: -8.787698745727539
    8. 'return' → logprob: -9.787698745727539
    9. '	lines' → logprob: -9.787698745727539
    10. '   ' → logprob: -10.412698745727539

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001156889251433313
    2. '=' → logprob: -6.876156806945801
    3. ' ' → logprob: -9.2511568069458
    4. ':' → logprob: -11.0011568069458
    5. '()' → logprob: -12.0011568069458
    6. '=[]' → logprob: -13.5011568069458
    7. '[]' → logprob: -14.3761568069458
    8. ' =
' → logprob: -14.5011568069458
    9. '=[]
' → logprob: -14.6261568069458
    10. '   ' → logprob: -14.7511568069458

Token 168: ' []
' (ID: 8911)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.1142912358045578
    2. 'self' → logprob: -2.739291191101074
    3. ' self' → logprob: -3.614291191101074
    4. ' [' → logprob: -4.739291191101074
    5. '[]
' → logprob: -5.864291191101074
    6. '[]' → logprob: -5.989291191101074
    7. '[' → logprob: -6.489291191101074
    8. '[]

' → logprob: -7.989291191101074
    9. '[
' → logprob: -8.239291191101074
    10. ' ' → logprob: -9.364291191101074

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051975030452013016
    2. '
' → logprob: -3.0519750118255615
    3. ' lines' → logprob: -6.426975250244141
    4. ' for' → logprob: -7.426975250244141
    5. 'for' → logprob: -7.426975250244141
    6. '        
' → logprob: -8.42697525024414
    7. '(lines' → logprob: -9.30197525024414
    8. 'lines' → logprob: -9.80197525024414
    9. '        ' → logprob: -10.30197525024414
    10. '
' → logprob: -10.55197525024414

Token 170: ' #' (ID: 1069)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -1.00715970993042
    2. 'lines' → logprob: -1.00715970993042
    3. '       ' → logprob: -1.38215970993042
    4. '#' (adapté à ' #') → logprob: -4.75715970993042
    5. 'for' → logprob: -5.38215970993042
    6. '
' → logprob: -5.75715970993042
    7. ' for' → logprob: -6.50715970993042
    8. '   ' → logprob: -8.257160186767578
    9. '	lines' → logprob: -9.007160186767578
    10. '(lines' → logprob: -9.382160186767578

Token 171: ' Rows' (ID: 153767)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.6723377108573914
    2. ' lines' → logprob: -0.9223377108573914
    3. '#' → logprob: -2.797337770462036
    4. 'for' → logprob: -3.797337770462036
    5. '       ' → logprob: -5.547337532043457
    6. ' for' → logprob: -5.797337532043457
    7. ' #' → logprob: -7.172337532043457
    8. 'rows' → logprob: -7.797337532043457
    9. '   ' → logprob: -8.672337532043457
    10. '
' → logprob: -10.172337532043457

Token 172: '
' (ID: 198)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.13499589264392853
    2. '
' → logprob: -2.259995937347412
    3. '       ' → logprob: -4.634995937347412
    4. ' +=' → logprob: -5.134995937347412
    5. '.append' → logprob: -5.884995937347412
    6. 'for' → logprob: -7.134995937347412
    7. ' =' → logprob: -7.259995937347412
    8. ' for' → logprob: -7.259995937347412
    9. ' +' → logprob: -7.884995937347412
    10. ' lines' → logprob: -8.384995460510254

Token 173: '       ' (ID: 309)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.9913374185562134
    2. '
' → logprob: -1.3663374185562134
    3. ' lines' → logprob: -1.7413374185562134
    4. '       ' → logprob: -1.9913374185562134
    5. 'for' → logprob: -3.616337299346924
    6. ' for' → logprob: -4.491337299346924
    7. 'lines' → logprob: -4.866337299346924
    8. '.append' → logprob: -5.491337299346924
    9. '(lines' → logprob: -5.491337299346924
    10. '   ' → logprob: -5.991337299346924

Token 174: ' for' (ID: 395)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.48172783851623535
    2. 'lines' → logprob: -0.9817278385162354
    3. 'for' (adapté à ' for') → logprob: -5.606727600097656
    4. '       ' → logprob: -5.856727600097656
    5. ' for' → logprob: -7.106727600097656
    6. '
' → logprob: -8.731727600097656
    7. '(lines' → logprob: -10.981727600097656
    8. 'self' → logprob: -10.981727600097656
    9. '	lines' → logprob: -10.981727600097656
    10. '.lines' → logprob: -11.606727600097656

Token 175: ' r' (ID: 428)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.1327301561832428
    2. 'row' → logprob: -2.13273024559021
    3. ' i' → logprob: -6.007730007171631
    4. 'r' → logprob: -6.632730007171631
    5. ' r' → logprob: -7.382730007171631
    6. 'i' → logprob: -7.632730007171631
    7. ' self' → logprob: -8.132730484008789
    8. 'self' → logprob: -8.507730484008789
    9. ' range' → logprob: -8.757730484008789
    10. '   ' → logprob: -9.007730484008789

Token 176: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002252910751849413
    2. ' ' → logprob: -6.87725305557251
    3. 'in' → logprob: -7.00225305557251
    4. 'ange' → logprob: -8.252252578735352
    5. '   ' → logprob: -10.502252578735352
    6. 'ow' → logprob: -11.752252578735352
    7. '  ' → logprob: -12.002252578735352
    8. 'n' → logprob: -13.377252578735352
    9. '    ' → logprob: -13.752252578735352
    10. 'range' → logprob: -13.752252578735352

Token 177: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06196846812963486
    2. ' range' → logprob: -2.8119685649871826
    3. 'self' → logprob: -15.061968803405762
    4. '   ' → logprob: -15.561968803405762
    5. ' ' → logprob: -15.686968803405762
    6. '	range' → logprob: -16.436967849731445
    7. '  ' → logprob: -16.561967849731445
    8. '(range' → logprob: -18.311967849731445
    9. 'rang' → logprob: -18.311967849731445
    10. '    ' → logprob: -18.686967849731445

Token 178: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011844364780699834
    2. '(' → logprob: -9.250118255615234
    3. '(Board' → logprob: -10.750118255615234
    4. '(
' → logprob: -14.500118255615234
    5. 'self' → logprob: -15.375118255615234
    6. '(s' → logprob: -16.625118255615234
    7. '(sel' → logprob: -18.625118255615234
    8. ' self' → logprob: -18.750118255615234
    9. '(board' → logprob: -19.000118255615234
    10. '(len' → logprob: -19.000118255615234

Token 179: '.SIZE' (ID: 163232)
  Prédit: '.SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.SIZE' → logprob: -0.002081143669784069
    2. '.' → logprob: -6.377080917358398
    3. 'SIZE' → logprob: -8.252080917358398
    4. '.S' → logprob: -9.377080917358398
    5. '   ' → logprob: -10.877080917358398
    6. ' .' → logprob: -11.877080917358398
    7. '.
' → logprob: -13.002080917358398
    8. '
' → logprob: -13.377080917358398
    9. ' SIZE' → logprob: -13.627080917358398
    10. '_SIZE' → logprob: -14.002080917358398

Token 180: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5766801834106445
    2. '):
' → logprob: -0.8266801834106445
    3. ' ):' → logprob: -7.9516801834106445
    4. ')' → logprob: -8.576680183410645
    5. ' ):
' → logprob: -8.701680183410645
    6. '):
' → logprob: -10.576680183410645
    7. ':' → logprob: -12.326680183410645
    8. '   ' → logprob: -13.576680183410645
    9. '):

' → logprob: -14.076680183410645
    10. ' ' → logprob: -14.451680183410645

Token 181: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5611251592636108
    2. '           ' → logprob: -1.5611251592636108
    3. '       ' → logprob: -1.8111251592636108
    4. ':
' → logprob: -3.0611252784729004
    5. ' lines' → logprob: -5.8111252784729
    6. '):' → logprob: -6.5611252784729
    7. '   ' → logprob: -6.6861252784729
    8. '):
' → logprob: -6.8111252784729
    9. '(lines' → logprob: -6.9361252784729
    10. ' :' → logprob: -7.6861252784729

Token 182: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.20211286842823029
    2. 'lines' (adapté à ' lines') → logprob: -1.7021129131317139
    3. '           ' → logprob: -7.827112674713135
    4. '       ' → logprob: -8.702113151550293
    5. '   ' → logprob: -9.827113151550293
    6. '	lines' → logprob: -10.077113151550293
    7. '(lines' → logprob: -10.702113151550293
    8. '
' → logprob: -12.202113151550293
    9. '.lines' → logprob: -12.702113151550293
    10. '_lines' → logprob: -13.202113151550293

Token 183: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0015205761883407831
    2. '.' → logprob: -6.50152063369751
    3. ' .' → logprob: -11.501520156860352
    4. 'append' → logprob: -11.876520156860352
    5. '.Append' → logprob: -14.876520156860352
    6. ').' → logprob: -15.001520156860352
    7. '.app' → logprob: -15.626520156860352
    8. ' append' → logprob: -15.876520156860352
    9. '.ap' → logprob: -16.50152015686035
    10. '_append' → logprob: -17.37652015686035

Token 184: '([' (ID: 5194)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.625004768371582
    3. '(list' → logprob: -13.875004768371582
    4. 'self' → logprob: -14.500004768371582
    5. '([' → logprob: -15.000004768371582
    6. ' (' → logprob: -16.7500057220459
    7. ' self' → logprob: -18.1250057220459
    8. '(
' → logprob: -18.3750057220459
    9. '[self' → logprob: -18.3750057220459
    10. '(this' → logprob: -19.0000057220459

Token 185: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001870902779046446
    2. ' self' → logprob: -8.625186920166016
    3. 'cell' → logprob: -13.250186920166016
    4. '   ' → logprob: -14.000186920166016
    5. ')' → logprob: -14.125186920166016
    6. 's' → logprob: -14.375186920166016
    7. ' ' → logprob: -14.500186920166016
    8. 'c' → logprob: -14.625186920166016
    9. '
' → logprob: -15.125186920166016
    10. '           ' → logprob: -15.250186920166016

Token 186: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.11393249779939651
    2. '.get' → logprob: -2.4889326095581055
    3. '.' → logprob: -3.7389326095581055
    4. ' .' → logprob: -7.2389326095581055
    5. ').' → logprob: -10.363932609558105
    6. 'get' → logprob: -10.488932609558105
    7. '
' → logprob: -10.738932609558105
    8. 'grid' → logprob: -10.863932609558105
    9. '.g' → logprob: -11.488932609558105
    10. '.
' → logprob: -11.863932609558105

Token 187: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.981667537620524e-06
    2. 'r' → logprob: -14.125001907348633
    3. '][' → logprob: -14.375001907348633
    4. ' [' → logprob: -14.750001907348633
    5. '   ' → logprob: -16.250001907348633
    6. ' r' → logprob: -16.750001907348633
    7. '

' → logprob: -17.250001907348633
    8. '
' → logprob: -17.250001907348633
    9. '[
' → logprob: -17.250001907348633
    10. '	r' → logprob: -17.625001907348633

Token 188: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08265448361635208
    2. '[c' → logprob: -2.5826544761657715
    3. '[col' → logprob: -5.8326544761657715
    4. ']' → logprob: -7.8326544761657715
    5. '[i' → logprob: -8.70765495300293
    6. ' ][' → logprob: -9.08265495300293
    7. '[' → logprob: -9.58265495300293
    8. '[j' → logprob: -10.70765495300293
    9. 'c' → logprob: -11.08265495300293
    10. '])' → logprob: -11.33265495300293

Token 189: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0003187810070812702
    2. '0' → logprob: -8.62531852722168
    3. ' c' → logprob: -9.50031852722168
    4. 'i' → logprob: -10.75031852722168
    5. '
' → logprob: -11.12531852722168
    6. 'col' → logprob: -12.00031852722168
    7. '   ' → logprob: -12.12531852722168
    8. ' ' → logprob: -12.50031852722168
    9. '[c' → logprob: -12.62531852722168
    10. ']' → logprob: -13.75031852722168

Token 190: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.657694418914616e-05
    2. ' ]' → logprob: -9.875056266784668
    3. ' for' → logprob: -13.375056266784668
    4. 'for' → logprob: -13.750056266784668
    5. ')' → logprob: -14.250056266784668
    6. '   ' → logprob: -14.625056266784668
    7. ' ' → logprob: -15.000056266784668
    8. ']
' → logprob: -15.750056266784668
    9. 'r' → logprob: -16.000057220458984
    10. '}' → logprob: -16.000057220458984

Token 191: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1037963479757309
    2. 'for' → logprob: -2.3537962436676025
    3. ']' → logprob: -5.728796482086182
    4. ' ' → logprob: -8.478796005249023
    5. ')' → logprob: -10.353796005249023
    6. ' c' → logprob: -10.478796005249023
    7. ' ]' → logprob: -10.728796005249023
    8. 'c' → logprob: -10.978796005249023
    9. '])' → logprob: -11.228796005249023
    10. '	for' → logprob: -12.228796005249023

Token 192: ' c' (ID: 274)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.023253049701452255
    2. 'range' → logprob: -3.7732529640197754
    3. ' c' → logprob: -12.398253440856934
    4. 'c' → logprob: -13.148253440856934
    5. ' ' → logprob: -13.773253440856934
    6. '(range' → logprob: -16.148252487182617
    7. '	range' → logprob: -16.148252487182617
    8. ' in' → logprob: -17.148252487182617
    9. '  ' → logprob: -17.273252487182617
    10. ' r' → logprob: -17.773252487182617

Token 193: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013778526335954666
    2. 'in' → logprob: -6.751378059387207
    3. 'range' → logprob: -8.876378059387207
    4. ' range' → logprob: -9.626378059387207
    5. ' ' → logprob: -13.376378059387207
    6. '<|end|>' → logprob: -16.25137710571289
    7. ')' → logprob: -16.37637710571289
    8. '
' → logprob: -16.75137710571289
    9. ']' → logprob: -17.37637710571289
    10. '(range' → logprob: -17.37637710571289

Token 194: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2519291639328003
    2. 'range' → logprob: -1.5019291639328003
    3. ' ' → logprob: -16.251928329467773
    4. '	range' → logprob: -17.126928329467773
    5. '(range' → logprob: -17.251928329467773
    6. '   ' → logprob: -17.626928329467773
    7. '  ' → logprob: -19.126928329467773
    8. 'Range' → logprob: -19.626928329467773
    9. ')' → logprob: -20.126928329467773
    10. '_range' → logprob: -20.251928329467773

Token 195: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002681304467841983
    2. '(' → logprob: -8.25026798248291
    3. 'self' → logprob: -12.00026798248291
    4. ' self' → logprob: -14.62526798248291
    5. ' (' → logprob: -15.87526798248291
    6. '(
' → logprob: -16.375268936157227
    7. '(s' → logprob: -17.500268936157227
    8. '
' → logprob: -17.625268936157227
    9. '   ' → logprob: -18.125268936157227
    10. '           ' → logprob: -18.625268936157227

Token 196: '.SIZE' (ID: 163232)
  Prédit: '.SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.SIZE' → logprob: -0.03009016439318657
    2. 'SIZE' → logprob: -3.530090093612671
    3. '.' → logprob: -8.65509033203125
    4. '   ' → logprob: -10.03009033203125
    5. ' .' → logprob: -10.40509033203125
    6. '.S' → logprob: -10.53009033203125
    7. '_SIZE' → logprob: -11.03009033203125
    8. '3' → logprob: -11.65509033203125
    9. '       ' → logprob: -11.78009033203125
    10. '
' → logprob: -12.03009033203125

Token 197: ')])
' (ID: 66560)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.0005097838002257049
    2. '])' → logprob: -8.250510215759277
    3. ')])
' → logprob: -8.875510215759277
    4. ')]' → logprob: -9.875510215759277
    5. ')' → logprob: -10.625510215759277
    6. ']])' → logprob: -11.375510215759277
    7. '])]' → logprob: -11.875510215759277
    8. ' )' → logprob: -12.000510215759277
    9. ']))' → logprob: -12.750510215759277
    10. ')])

' → logprob: -13.000510215759277

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0714382529258728
    2. '
' → logprob: -2.6964383125305176
    3. '        
' → logprob: -7.196438312530518
    4. '#' → logprob: -7.321438312530518
    5. '   ' → logprob: -10.57143783569336
    6. '
' → logprob: -11.32143783569336
    7. '    
' → logprob: -11.82143783569336
    8. '  
' → logprob: -11.94643783569336
    9. '```' → logprob: -11.94643783569336
    10. '        ' → logprob: -12.57143783569336

Token 199: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.578864336013794
    2. '#' (adapté à ' #') → logprob: -0.828864336013794
    3. '
' → logprob: -6.453864097595215
    4. '   ' → logprob: -6.828864097595215
    5. ' #' → logprob: -8.453864097595215
    6. '        
' → logprob: -11.078864097595215
    7. ' ' → logprob: -11.328864097595215
    8. '```' → logprob: -11.828864097595215
    9. '    ' → logprob: -12.328864097595215
    10. '     ' → logprob: -12.828864097595215

Token 200: ' Columns' (ID: 118291)
  Prédit: 'Columns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Columns' → logprob: -0.43758830428123474
    2. '#' → logprob: -1.8125883340835571
    3. ' Columns' → logprob: -1.8125883340835571
    4. ' #' → logprob: -3.8125882148742676
    5. 'Cols' → logprob: -5.437588214874268
    6. 'columns' → logprob: -7.312588214874268
    7. ' columns' → logprob: -7.937588214874268
    8. '   ' → logprob: -8.437588691711426
    9. '_columns' → logprob: -10.062588691711426
    10. ' for' → logprob: -10.187588691711426

Token 201: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08499868959188461
    2. 'for' → logprob: -2.959998607635498
    3. ' for' → logprob: -3.834998607635498
    4. '
' → logprob: -5.459998607635498
    5. '   ' → logprob: -5.709998607635498
    6. '        
' → logprob: -8.334999084472656
    7. '    
' → logprob: -9.334999084472656
    8. '           ' → logprob: -10.209999084472656
    9. ':' → logprob: -10.584999084472656
    10. '  
' → logprob: -10.584999084472656

Token 202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04451983422040939
    2. ' for' → logprob: -4.044519901275635
    3. '
' → logprob: -4.169519901275635
    4. 'for' → logprob: -4.669519901275635
    5. '   ' → logprob: -7.169519901275635
    6. '        
' → logprob: -8.544519424438477
    7. '    
' → logprob: -9.044519424438477
    8. '  
' → logprob: -9.919519424438477
    9. '           ' → logprob: -10.669519424438477
    10. '   
' → logprob: -11.794519424438477

Token 203: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3873632848262787
    2. ' for' → logprob: -1.137363314628601
    3. '       ' → logprob: -8.26236343383789
    4. '   ' → logprob: -8.51236343383789
    5. '
' → logprob: -10.38736343383789
    6. ' ' → logprob: -13.51236343383789
    7. '	for' → logprob: -15.26236343383789
    8. ' 
' → logprob: -15.76236343383789
    9. '        
' → logprob: -15.88736343383789
    10. '    
' → logprob: -16.01236343383789

Token 204: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.04860758036375046
    2. 'c' → logprob: -3.048607587814331
    3. ' range' → logprob: -11.17360782623291
    4. 'range' → logprob: -12.42360782623291
    5. ' ' → logprob: -13.29860782623291
    6. '   ' → logprob: -15.54860782623291
    7. '	c' → logprob: -15.92360782623291
    8. '
' → logprob: -17.173606872558594
    9. '_c' → logprob: -17.173606872558594
    10. ' r' → logprob: -17.548606872558594

Token 205: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024808887392282486
    2. 'in' → logprob: -6.002480983734131
    3. ' ' → logprob: -12.627480506896973
    4. 'range' → logprob: -14.127480506896973
    5. '   ' → logprob: -14.877480506896973
    6. 'n' → logprob: -15.627480506896973
    7. '  ' → logprob: -15.752480506896973
    8. '[' → logprob: -16.50248146057129
    9. '    ' → logprob: -16.75248146057129
    10. ' =' → logprob: -17.12748146057129

Token 206: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12692810595035553
    2. 'range' → logprob: -2.1269280910491943
    3. '(range' → logprob: -17.876928329467773
    4. ' ' → logprob: -19.376928329467773
    5. 'Range' → logprob: -20.876928329467773
    6. '	range' → logprob: -21.126928329467773
    7. '   ' → logprob: -21.376928329467773
    8. '_range' → logprob: -21.751928329467773
    9. ' in' → logprob: -21.876928329467773
    10. 'rang' → logprob: -22.126928329467773

Token 207: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.028126060962677002
    2. '(' → logprob: -4.403126239776611
    3. '(range' → logprob: -4.528126239776611
    4. 'range' → logprob: -5.403126239776611
    5. ' range' → logprob: -9.403125762939453
    6. 'self' → logprob: -9.778125762939453
    7. ' (' → logprob: -10.403125762939453
    8. '(s' → logprob: -12.278125762939453
    9. '(S' → logprob: -12.403125762939453
    10. ' in' → logprob: -12.903125762939453

Token 208: '.SIZE' (ID: 163232)
  Prédit: '.SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.SIZE' → logprob: -0.3161182999610901
    2. '(S' → logprob: -1.9411182403564453
    3. 'SIZE' → logprob: -2.5661182403564453
    4. '.S' → logprob: -4.066118240356445
    5. '):' → logprob: -4.941118240356445
    6. 'range' → logprob: -5.441118240356445
    7. '       ' → logprob: -5.691118240356445
    8. '   ' → logprob: -5.816118240356445
    9. 'self' → logprob: -6.066118240356445
    10. '(' → logprob: -6.316118240356445

Token 209: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04879799112677574
    2. '):' → logprob: -3.048798084259033
    3. '   ' → logprob: -9.673797607421875
    4. ':
' → logprob: -10.048797607421875
    5. ':' → logprob: -10.173797607421875
    6. ' ):
' → logprob: -10.923797607421875
    7. ')' → logprob: -11.048797607421875
    8. '       ' → logprob: -11.298797607421875
    9. '):
' → logprob: -12.298797607421875
    10. ']:
' → logprob: -12.548797607421875

Token 210: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.261587530374527
    2. 'lines' → logprob: -2.011587619781494
    3. ' lines' → logprob: -2.886587619781494
    4. '   ' → logprob: -3.886587619781494
    5. '       ' → logprob: -4.261587619781494
    6. '(lines' → logprob: -6.136587619781494
    7. ':
' → logprob: -6.261587619781494
    8. '[' → logprob: -7.261587619781494
    9. 'for' → logprob: -8.386587142944336
    10. '	lines' → logprob: -8.511587142944336

Token 211: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' (adapté à ' lines') → logprob: -0.01112151239067316
    2. ' lines' → logprob: -4.51112174987793
    3. '   ' → logprob: -10.01112174987793
    4. '[' → logprob: -11.76112174987793
    5. '(lines' → logprob: -11.76112174987793
    6. '	lines' → logprob: -12.38612174987793
    7. '       ' → logprob: -12.88612174987793
    8. '           ' → logprob: -13.26112174987793
    9. '.lines' → logprob: -13.38612174987793
    10. ' ' → logprob: -14.26112174987793

Token 212: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0015141464537009597
    2. '.' → logprob: -6.501513957977295
    3. ' .' → logprob: -12.126514434814453
    4. 'append' → logprob: -12.376514434814453
    5. ').' → logprob: -13.876514434814453
    6. '           ' → logprob: -14.876514434814453
    7. '       ' → logprob: -15.376514434814453
    8. '.extend' → logprob: -15.501514434814453
    9. '.app' → logprob: -16.126514434814453
    10. '   ' → logprob: -16.251514434814453

Token 213: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -5.5861724831629544e-05
    2. ' ([' → logprob: -10.750056266784668
    3. '(' → logprob: -11.125056266784668
    4. '(
' → logprob: -12.000056266784668
    5. '       ' → logprob: -12.375056266784668
    6. '   ' → logprob: -12.625056266784668
    7. '([[' → logprob: -12.750056266784668
    8. '([
' → logprob: -13.750056266784668
    9. '           ' → logprob: -14.250056266784668
    10. '[' → logprob: -14.750056266784668

Token 214: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.625866030342877e-05
    2. ' self' → logprob: -9.375085830688477
    3. '
' → logprob: -14.375085830688477
    4. '[self' → logprob: -15.375085830688477
    5. '   ' → logprob: -15.625085830688477
    6. ' ' → logprob: -15.875085830688477
    7. '(self' → logprob: -16.500085830688477
    8. '[' → logprob: -17.500085830688477
    9. 'sel' → logprob: -17.625085830688477
    10. '

' → logprob: -17.875085830688477

Token 215: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.5681259632110596
    2. 'self' → logprob: -1.0681259632110596
    3. '[self' → logprob: -2.5681259632110596
    4. 'grid' → logprob: -5.3181257247924805
    5. ' self' → logprob: -5.6931257247924805
    6. '[' → logprob: -5.9431257247924805
    7. '   ' → logprob: -7.4431257247924805
    8. '       ' → logprob: -8.06812572479248
    9. '.' → logprob: -8.44312572479248
    10. '[r' → logprob: -8.69312572479248

Token 216: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -9.729906196298543e-06
    2. '[' → logprob: -11.875009536743164
    3. 'r' → logprob: -13.750009536743164
    4. '[row' → logprob: -14.125009536743164
    5. '(r' → logprob: -15.000009536743164
    6. '   ' → logprob: -15.125009536743164
    7. '```' → logprob: -15.625009536743164
    8. '[s' → logprob: -16.625009536743164
    9. '[
' → logprob: -16.750009536743164
    10. '[c' → logprob: -17.000009536743164

Token 217: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008180367760360241
    2. '[c' → logprob: -5.008180141448975
    3. ']' → logprob: -7.008180141448975
    4. 'for' → logprob: -8.133180618286133
    5. '[' → logprob: -9.133180618286133
    6. '[r' → logprob: -9.758180618286133
    7. ' for' → logprob: -10.133180618286133
    8. ' ][' → logprob: -11.008180618286133
    9. '   ' → logprob: -11.508180618286133
    10. 'c' → logprob: -12.008180618286133

Token 218: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.15310683415737e-05
    2. ' c' → logprob: -10.750021934509277
    3. '
' → logprob: -17.87502098083496
    4. '   ' → logprob: -18.37502098083496
    5. ' ' → logprob: -18.50002098083496
    6. ')c' → logprob: -19.12502098083496
    7. 'col' → logprob: -19.75002098083496
    8. '       ' → logprob: -20.00002098083496
    9. '[' → logprob: -20.25002098083496
    10. ')' → logprob: -20.50002098083496

Token 219: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03731008246541023
    2. ' for' → logprob: -3.6623101234436035
    3. 'for' → logprob: -4.5373101234436035
    4. ' ]' → logprob: -8.662309646606445
    5. ')' → logprob: -9.912309646606445
    6. '   ' → logprob: -12.037309646606445
    7. '           ' → logprob: -12.162309646606445
    8. '       ' → logprob: -12.162309646606445
    9. ' ' → logprob: -13.162309646606445
    10. ' in' → logprob: -13.287309646606445

Token 220: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01815134845674038
    2. 'for' → logprob: -4.01815128326416
    3. ' ' → logprob: -14.76815128326416
    4. ']' → logprob: -15.14315128326416
    5. '           ' → logprob: -15.39315128326416
    6. ')' → logprob: -15.51815128326416
    7. ' in' → logprob: -16.143152236938477
    8. '       ' → logprob: -16.518152236938477
    9. '         ' → logprob: -17.143152236938477
    10. '   ' → logprob: -17.393152236938477

Token 221: ' r' (ID: 428)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011222298257052898
    2. 'range' → logprob: -4.5112223625183105
    3. ' r' → logprob: -8.886221885681152
    4. 'r' → logprob: -10.636221885681152
    5. ' self' → logprob: -11.636221885681152
    6. 'self' → logprob: -13.011221885681152
    7. ' ' → logprob: -14.261221885681152
    8. 'Range' → logprob: -15.636221885681152
    9. '   ' → logprob: -16.13622283935547
    10. ' in' → logprob: -16.26122283935547

Token 222: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003372700186446309
    2. 'range' → logprob: -6.753372669219971
    3. ' range' → logprob: -6.753372669219971
    4. 'in' → logprob: -6.878372669219971
    5. '(range' → logprob: -12.878373146057129
    6. ')' → logprob: -15.003373146057129
    7. ' ' → logprob: -15.878373146057129
    8. '   ' → logprob: -16.253372192382812
    9. 'Range' → logprob: -16.628372192382812
    10. ']' → logprob: -17.378372192382812

Token 223: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20143254101276398
    2. 'range' → logprob: -1.7014325857162476
    3. 'self' → logprob: -11.076432228088379
    4. ' self' → logprob: -12.701432228088379
    5. '(range' → logprob: -15.201432228088379
    6. '   ' → logprob: -15.576432228088379
    7. ' ' → logprob: -16.201433181762695
    8. 'Range' → logprob: -16.701433181762695
    9. '	range' → logprob: -17.451433181762695
    10. '       ' → logprob: -17.701433181762695

Token 224: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.36527740955352783
    2. 'range' → logprob: -1.6152774095535278
    3. ' range' → logprob: -2.7402772903442383
    4. '(range' → logprob: -3.4902772903442383
    5. '(' → logprob: -4.615277290344238
    6. 'self' → logprob: -6.365277290344238
    7. ' (' → logprob: -7.865277290344238
    8. ' self' → logprob: -9.490277290344238
    9. ')' → logprob: -11.490277290344238
    10. '(Board' → logprob: -12.490277290344238

Token 225: '.SIZE' (ID: 163232)
  Prédit: 'SIZE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SIZE' → logprob: -1.1301621198654175
    2. '.SIZE' → logprob: -1.1301621198654175
    3. 'Board' → logprob: -1.3801621198654175
    4. '.Board' → logprob: -3.130162239074707
    5. 'self' → logprob: -4.255162239074707
    6. '(Board' → logprob: -4.380162239074707
    7. 'range' → logprob: -4.880162239074707
    8. 'BOARD' → logprob: -5.130162239074707
    9. ')' → logprob: -5.380162239074707
    10. '(self' → logprob: -5.755162239074707

Token 226: ')])
' (ID: 66560)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.03135452792048454
    2. '])
' → logprob: -4.4063544273376465
    3. ')])' → logprob: -4.6563544273376465
    4. '       ' → logprob: -4.7813544273376465
    5. ' ])' → logprob: -8.156354904174805
    6. ')' → logprob: -8.656354904174805
    7. '   ' → logprob: -9.281354904174805
    8. ')])
' → logprob: -9.531354904174805
    9. ')]' → logprob: -10.156354904174805
    10. ']])' → logprob: -10.281354904174805

Token 227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03815750032663345
    2. '#' → logprob: -3.2881574630737305
    3. '   ' → logprob: -10.03815746307373
    4. '
' → logprob: -10.03815746307373
    5. ' #' → logprob: -11.03815746307373
    6. '```' → logprob: -11.91315746307373
    7. '           ' → logprob: -13.41315746307373
    8. '        
' → logprob: -13.66315746307373
    9. ' ' → logprob: -14.78815746307373
    10. '	' → logprob: -14.91315746307373

Token 228: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.16060204803943634
    2. '       ' → logprob: -1.91060209274292
    3. '
' → logprob: -8.660601615905762
    4. ' #' → logprob: -9.160601615905762
    5. '   ' → logprob: -9.285601615905762
    6. '```' → logprob: -12.910601615905762
    7. 'return' → logprob: -13.410601615905762
    8. ' ' → logprob: -13.910601615905762
    9. '           ' → logprob: -15.160601615905762
    10. '	' → logprob: -15.160601615905762

Token 229: ' Di' (ID: 9196)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16483712196350098
    2. 'Di' → logprob: -2.164837121963501
    3. 'di' → logprob: -4.539836883544922
    4. ' Di' → logprob: -4.664836883544922
    5. ' #' → logprob: -4.914836883544922
    6. ' diagon' → logprob: -5.164836883544922
    7. 'Diagonal' → logprob: -6.289836883544922
    8. '[' → logprob: -6.414836883544922
    9. '   ' → logprob: -8.789836883544922
    10. '       ' → logprob: -9.289836883544922

Token 230: 'agon' (ID: 9863)
  Prédit: 'agon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agon' → logprob: -0.0004897649050690234
    2. 'gon' → logprob: -8.000490188598633
    3. 'agonal' → logprob: -9.500490188598633
    4. 'ag' → logprob: -9.625490188598633
    5. 'AGON' → logprob: -11.500490188598633
    6. 'g' → logprob: -13.000490188598633
    7. 'ags' → logprob: -15.250490188598633
    8. 'ogon' → logprob: -15.375490188598633
    9. 'go' → logprob: -16.000490188598633
    10. '[' → logprob: -16.625490188598633

Token 231: 'als' (ID: 1288)
  Prédit: 'als'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -3.392824874026701e-05
    2. 'al' → logprob: -10.62503433227539
    3. '[' → logprob: -12.37503433227539
    4. '#' → logprob: -13.37503433227539
    5. '   ' → logprob: -13.75003433227539
    6. '>' → logprob: -14.12503433227539
    7. '```' → logprob: -15.00003433227539
    8. 'g' → logprob: -15.37503433227539
    9. '
' → logprob: -15.75003433227539
    10. ' als' → logprob: -15.75003433227539

Token 232: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4246060252189636
    2. 'lines' → logprob: -2.0496060848236084
    3. '
' → logprob: -2.2996060848236084
    4. ' lines' → logprob: -3.0496060848236084
    5. '(lines' → logprob: -3.0496060848236084
    6. '[' → logprob: -4.674605846405029
    7. '[
' → logprob: -5.299605846405029
    8. ')
' → logprob: -6.549605846405029
    9. ':
' → logprob: -6.924605846405029
    10. '(
' → logprob: -6.924605846405029

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1537601798772812
    2. 'lines' → logprob: -2.2787601947784424
    3. '
' → logprob: -3.9037601947784424
    4. ' lines' → logprob: -4.778759956359863
    5. '.append' → logprob: -5.528759956359863
    6. '[' → logprob: -5.778759956359863
    7. '(lines' → logprob: -6.153759956359863
    8. ' =' → logprob: -7.278759956359863
    9. '[
' → logprob: -7.778759956359863
    10. '        
' → logprob: -8.153759956359863

Token 234: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' (adapté à ' lines') → logprob: -0.00607194472104311
    2. ' lines' → logprob: -5.631072044372559
    3. '       ' → logprob: -6.506072044372559
    4. 'diag' → logprob: -8.006072044372559
    5. 'di' → logprob: -8.131072044372559
    6. '[' → logprob: -8.131072044372559
    7. '[
' → logprob: -11.381072044372559
    8. '(lines' → logprob: -11.756072044372559
    9. '   ' → logprob: -12.006072044372559
    10. 'd' → logprob: -12.131072044372559

Token 235: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.023369982838630676
    2. '.' → logprob: -3.7733700275421143
    3. '.extend' → logprob: -9.273369789123535
    4. ' .' → logprob: -11.023369789123535
    5. 'append' → logprob: -12.398369789123535
    6. '=' → logprob: -13.148369789123535
    7. ' =' → logprob: -13.148369789123535
    8. ').' → logprob: -13.398369789123535
    9. '.app' → logprob: -13.898369789123535
    10. '.=' → logprob: -13.898369789123535

Token 236: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0065474435687065125
    2. '([
' → logprob: -5.131547451019287
    3. '(
' → logprob: -7.881547451019287
    4. '([[' → logprob: -9.131546974182129
    5. '(' → logprob: -9.256546974182129
    6. ' ([' → logprob: -10.881546974182129
    7. '([(' → logprob: -11.256546974182129
    8. '(([' → logprob: -13.131546974182129
    9. '(self' → logprob: -13.256546974182129
    10. '   ' → logprob: -15.131546974182129

Token 237: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.7146746763028204e-05
    2. ' self' → logprob: -10.25003719329834
    3. '[self' → logprob: -13.37503719329834
    4. '
' → logprob: -17.125036239624023
    5. '[' → logprob: -17.625036239624023
    6. '(self' → logprob: -17.875036239624023
    7. '=self' → logprob: -18.625036239624023
    8. '	self' → logprob: -18.875036239624023
    9. '   ' → logprob: -19.625036239624023
    10. '*self' → logprob: -20.125036239624023

Token 238: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.00028266964363865554
    2. 'grid' → logprob: -8.500282287597656
    3. 'self' → logprob: -9.750282287597656
    4. ' .' → logprob: -11.500282287597656
    5. '.' → logprob: -11.625282287597656
    6. ' grid' → logprob: -14.375282287597656
    7. '	grid' → logprob: -14.500282287597656
    8. ':grid' → logprob: -15.000282287597656
    9. '.self' → logprob: -16.750282287597656
    10. '[' → logprob: -17.000282287597656

Token 239: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00872412882745266
    2. '[r' → logprob: -4.758724212646484
    3. '[' → logprob: -9.258724212646484
    4. '[d' → logprob: -11.633724212646484
    5. ' [' → logprob: -12.508724212646484
    6. 'i' → logprob: -14.133724212646484
    7. '[c' → logprob: -14.633724212646484
    8. ' i' → logprob: -14.758724212646484
    9. '   ' → logprob: -17.383724212646484
    10. '(i' → logprob: -17.633724212646484

Token 240: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0031992164440453053
    2. '[i' → logprob: -5.753199100494385
    3. ' ][' → logprob: -10.878199577331543
    4. '[' → logprob: -13.878199577331543
    5. ']' → logprob: -14.378199577331543
    6. ' [' → logprob: -14.878199577331543
    7. '
' → logprob: -15.378199577331543
    8. '   ' → logprob: -16.003198623657227
    9. 'i' → logprob: -16.128198623657227
    10. '[I' → logprob: -16.253198623657227

Token 241: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.981667537620524e-06
    2. ' i' → logprob: -13.250001907348633
    3. '
' → logprob: -16.375001907348633
    4. '   ' → logprob: -18.875001907348633
    5. '	i' → logprob: -19.000001907348633
    6. ' ' → logprob: -19.250001907348633
    7. '{i' → logprob: -19.375001907348633
    8. '[i' → logprob: -19.625001907348633
    9. ',i' → logprob: -19.875001907348633
    10. ']' → logprob: -20.125001907348633

Token 242: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.9424725148128346e-05
    2. ' ]' → logprob: -10.875049591064453
    3. 'for' → logprob: -11.000049591064453
    4. ' for' → logprob: -11.500049591064453
    5. '       ' → logprob: -13.250049591064453
    6. ')' → logprob: -14.250049591064453
    7. '   ' → logprob: -14.750049591064453
    8. ']
' → logprob: -14.875049591064453
    9. '           ' → logprob: -16.250049591064453
    10. '        ' → logprob: -16.625049591064453

Token 243: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.014169970527291298
    2. 'for' → logprob: -4.264170169830322
    3. ' ' → logprob: -12.014169692993164
    4. '   ' → logprob: -16.389169692993164
    5. '	for' → logprob: -16.889169692993164
    6. ']' → logprob: -17.014169692993164
    7. '       ' → logprob: -17.514169692993164
    8. '
' → logprob: -17.514169692993164
    9. '    ' → logprob: -18.014169692993164
    10. '  ' → logprob: -18.389169692993164

Token 244: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47443675994873047
    2. 'range' → logprob: -0.9744367599487305
    3. 'i' → logprob: -7.9744367599487305
    4. ' i' → logprob: -11.09943675994873
    5. '
' → logprob: -15.97443675994873
    6. '(range' → logprob: -16.224437713623047
    7. ' in' → logprob: -16.474437713623047
    8. 'in' → logprob: -16.849437713623047
    9. ' ' → logprob: -17.224437713623047
    10. '   ' → logprob: -17.974437713623047

Token 245: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0040032463148236275
    2. 'in' → logprob: -5.879003047943115
    3. ' range' → logprob: -7.379003047943115
    4. 'range' → logprob: -7.504003047943115
    5. '(range' → logprob: -12.129003524780273
    6. ' ' → logprob: -12.254003524780273
    7. '        ' → logprob: -12.629003524780273
    8. '       ' → logprob: -12.879003524780273
    9. 'import' → logprob: -13.379003524780273
    10. '   ' → logprob: -14.129003524780273

Token 246: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12693051993846893
    2. ' range' → logprob: -2.1269304752349854
    3. 'self' → logprob: -13.126930236816406
    4. '(range' → logprob: -15.251930236816406
    5. '   ' → logprob: -17.001930236816406
    6. '
' → logprob: -17.126930236816406
    7. ' ' → logprob: -17.126930236816406
    8. ' self' → logprob: -17.251930236816406
    9. '	range' → logprob: -17.376930236816406
    10. '.range' → logprob: -19.251930236816406

Token 247: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012535012501757592
    2. '(' → logprob: -9.00012493133545
    3. '(Board' → logprob: -13.25012493133545
    4. '(
' → logprob: -16.875125885009766
    5. ' (' → logprob: -18.125125885009766
    6. '(s' → logprob: -18.125125885009766
    7. '(Self' → logprob: -18.375125885009766
    8. 'self' → logprob: -18.875125885009766
    9. '(board' → logprob: -18.875125885009766
    10. '(this' → logprob: -19.875125885009766

Token 248: '.SIZE' (ID: 163232)
  Prédit: '.SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.SIZE' → logprob: -0.04922613874077797
    2. 'SIZE' → logprob: -3.0492260456085205
    3. '.S' → logprob: -8.174225807189941
    4. '.' → logprob: -8.674225807189941
    5. '3' → logprob: -9.049225807189941
    6. '   ' → logprob: -10.799225807189941
    7. ' .' → logprob: -11.049225807189941
    8. '_SIZE' → logprob: -11.924225807189941
    9. '       ' → logprob: -12.424225807189941
    10. ' SIZE' → logprob: -12.674225807189941

Token 249: ')])
' (ID: 66560)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.10093507915735245
    2. ')])
' → logprob: -2.3509349822998047
    3. '])' → logprob: -7.600934982299805
    4. ')]' → logprob: -8.975934982299805
    5. '])
' → logprob: -10.475934982299805
    6. ']])' → logprob: -10.600934982299805
    7. ']])
' → logprob: -11.100934982299805
    8. ')' → logprob: -11.225934982299805
    9. ')])

' → logprob: -11.600934982299805
    10. '])]' → logprob: -12.850934982299805

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7055439949035645
    2. 'lines' → logprob: -1.2055439949035645
    3. ' lines' → logprob: -1.5805439949035645
    4. '(lines' → logprob: -7.7055439949035645
    5. '	lines' → logprob: -9.080543518066406
    6. '[' → logprob: -9.205543518066406
    7. ')' → logprob: -10.330543518066406
    8. '.lines' → logprob: -10.830543518066406
    9. '   ' → logprob: -11.080543518066406
    10. '[
' → logprob: -11.580543518066406

Token 251: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.6382613778114319
    2. '       ' → logprob: -1.138261318206787
    3. 'lines' (adapté à ' lines') → logprob: -1.888261318206787
    4. '(lines' → logprob: -10.138261795043945
    5. '	lines' → logprob: -10.513261795043945
    6. '.lines' → logprob: -12.138261795043945
    7. '   ' → logprob: -13.013261795043945
    8. '[' → logprob: -13.513261795043945
    9. ' ' → logprob: -14.138261795043945
    10. '
' → logprob: -14.263261795043945

Token 252: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004086116328835487
    2. '.' → logprob: -5.504086017608643
    3. ' .' → logprob: -12.5040864944458
    4. 'append' → logprob: -13.5040864944458
    5. '.app' → logprob: -13.7540864944458
    6. '       ' → logprob: -14.0040864944458
    7. ').' → logprob: -15.6290864944458
    8. '[' → logprob: -16.254085540771484
    9. '.pop' → logprob: -16.379085540771484
    10. '.[' → logprob: -16.379085540771484

Token 253: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -5.319370302458992e-06
    2. '(' → logprob: -12.375005722045898
    3. ' ([' → logprob: -14.250005722045898
    4. '(
' → logprob: -15.125005722045898
    5. '(([' → logprob: -16.5000057220459
    6. '([[' → logprob: -17.7500057220459
    7. '([(' → logprob: -18.0000057220459
    8. '([
' → logprob: -18.0000057220459
    9. '   ' → logprob: -19.1250057220459
    10. ' ' → logprob: -20.0000057220459

Token 254: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00037728800089098513
    2. '[self' → logprob: -8.000377655029297
    3. ' self' → logprob: -10.125377655029297
    4. '   ' → logprob: -13.875377655029297
    5. '[i' → logprob: -15.250377655029297
    6. '(self' → logprob: -15.375377655029297
    7. '       ' → logprob: -15.750377655029297
    8. '	self' → logprob: -16.500377655029297
    9. '
' → logprob: -17.375377655029297
    10. '           ' → logprob: -17.875377655029297

Token 255: '.grid' (ID: 19269)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0018101292662322521
    2. '.grid' → logprob: -7.126810073852539
    3. '[' → logprob: -8.251810073852539
    4. 'i' → logprob: -8.251810073852539
    5. '.i' → logprob: -8.376810073852539
    6. '[self' → logprob: -8.876810073852539
    7. 'grid' → logprob: -10.376810073852539
    8. '
' → logprob: -10.876810073852539
    9. 'self' → logprob: -11.001810073852539
    10. 'range' → logprob: -11.376810073852539

Token 256: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00030161935137584805
    2. '(i' → logprob: -8.125301361083984
    3. '[' → logprob: -12.250301361083984
    4. '][' → logprob: -15.625301361083984
    5. '[self' → logprob: -15.750301361083984
    6. '   ' → logprob: -16.375301361083984
    7. 'i' → logprob: -16.375301361083984
    8. '(' → logprob: -16.375301361083984
    9. '[I' → logprob: -16.750301361083984
    10. '
' → logprob: -16.875301361083984

Token 257: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -1.4378848391061183e-05
    2. ' ][' → logprob: -12.125014305114746
    3. '[self' → logprob: -12.500014305114746
    4. '[' → logprob: -12.750014305114746
    5. ']' → logprob: -14.000014305114746
    6. '[i' → logprob: -14.500014305114746
    7. ']][' → logprob: -15.750014305114746
    8. '][_' → logprob: -15.750014305114746
    9. '][-' → logprob: -15.750014305114746
    10. ')][' → logprob: -16.500015258789062

Token 258: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.9650025428272784e-05
    2. '(self' → logprob: -10.875040054321289
    3. ' self' → logprob: -10.875040054321289
    4. '2' → logprob: -14.625040054321289
    5. '
' → logprob: -14.625040054321289
    6. '3' → logprob: -15.125040054321289
    7. '(' → logprob: -15.125040054321289
    8. '0' → logprob: -16.75004005432129
    9. ' ' → logprob: -16.75004005432129
    10. '   ' → logprob: -16.87504005432129

Token 259: '.SIZE' (ID: 163232)
  Prédit: '.SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.SIZE' → logprob: -0.00024168188974726945
    2. 'SIZE' → logprob: -8.75024127960205
    3. '.S' → logprob: -9.75024127960205
    4. '.' → logprob: -10.87524127960205
    5. '_SIZE' → logprob: -13.50024127960205
    6. '
' → logprob: -13.62524127960205
    7. ' .' → logprob: -14.12524127960205
    8. '   ' → logprob: -14.37524127960205
    9. '```' → logprob: -14.50024127960205
    10. ' SIZE' → logprob: -15.12524127960205

Token 260: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16023844480514526
    2. ' -' → logprob: -1.91023850440979
    3. '1' → logprob: -11.660238265991211
    4. ' ' → logprob: -12.660238265991211
    5. '-i' → logprob: -13.035238265991211
    6. '   ' → logprob: -16.03523826599121
    7. 'i' → logprob: -16.28523826599121
    8. '−' → logprob: -17.66023826599121
    9. ' ' → logprob: -17.91023826599121
    10. ' i' → logprob: -18.22273826599121

Token 261: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013393278641160578
    2. 'i' → logprob: -9.000133514404297
    3. ' ' → logprob: -11.500133514404297
    4. '   ' → logprob: -15.375133514404297
    5. ' i' → logprob: -15.750133514404297
    6. '(i' → logprob: -18.625133514404297
    7. '
' → logprob: -18.875133514404297
    8. '-' → logprob: -19.250133514404297
    9. '{i' → logprob: -19.625133514404297
    10. '[i' → logprob: -20.125133514404297

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006278486107476056
    2. 'i' → logprob: -7.3756279945373535
    3. ' ' → logprob: -13.750627517700195
    4. '   ' → logprob: -16.125627517700195
    5. ' i' → logprob: -16.500627517700195
    6. '{i' → logprob: -17.750627517700195
    7. '(i' → logprob: -18.125627517700195
    8. '[i' → logprob: -18.750627517700195
    9. '
' → logprob: -18.750627517700195
    10. '-' → logprob: -19.125627517700195

Token 263: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03804642707109451
    2. '-' → logprob: -3.288046360015869
    3. ' ' → logprob: -12.788046836853027
    4. '-i' → logprob: -13.163046836853027
    5. '   ' → logprob: -15.288046836853027
    6. '  ' → logprob: -17.41304588317871
    7. 'i' → logprob: -17.41304588317871
    8. ' -
' → logprob: -18.41304588317871
    9. '
' → logprob: -18.66304588317871
    10. ' ' → logprob: -18.91304588317871

Token 264: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004307884373702109
    2. ' i' → logprob: -7.750430583953857
    3. '   ' → logprob: -16.875431060791016
    4. '	i' → logprob: -17.375431060791016
    5. ' ' → logprob: -18.375431060791016
    6. '
' → logprob: -19.625431060791016
    7. '  ' → logprob: -20.250431060791016
    8. ']' → logprob: -20.625431060791016
    9. '    ' → logprob: -21.250431060791016
    10. ')i' → logprob: -21.375431060791016

Token 265: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00018029935017693788
    2. ' ]' → logprob: -8.6251802444458
    3. ']
' → logprob: -15.2501802444458
    4. ')' → logprob: -15.6251802444458
    5. ')]' → logprob: -16.000181198120117
    6. '   ' → logprob: -16.125181198120117
    7. ']]' → logprob: -16.625181198120117
    8. '       ' → logprob: -17.250181198120117
    9. '])' → logprob: -17.625181198120117
    10. ' ' → logprob: -19.125181198120117

Token 266: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018461747094988823
    2. ' ]' → logprob: -7.3768463134765625
    3. ' for' → logprob: -7.3768463134765625
    4. 'for' → logprob: -7.5018463134765625
    5. ')' → logprob: -10.376846313476562
    6. ' ' → logprob: -12.126846313476562
    7. '])' → logprob: -12.501846313476562
    8. '   ' → logprob: -15.251846313476562
    9. ' in' → logprob: -16.376846313476562
    10. '```' → logprob: -16.376846313476562

Token 267: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2695661187171936
    2. ' i' → logprob: -2.019566059112549
    3. ' range' → logprob: -2.519566059112549
    4. 'range' → logprob: -3.769566059112549
    5. ' in' → logprob: -11.019566535949707
    6. '
' → logprob: -13.519566535949707
    7. '   ' → logprob: -14.394566535949707
    8. 'in' → logprob: -15.019566535949707
    9. '[i' → logprob: -15.144566535949707
    10. ' ' → logprob: -15.769566535949707

Token 268: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003185436362400651
    2. 'in' → logprob: -5.753185272216797
    3. 'range' → logprob: -12.003185272216797
    4. ' range' → logprob: -13.503185272216797
    5. ' ' → logprob: -17.003185272216797
    6. ' i' → logprob: -18.128185272216797
    7. 'import' → logprob: -18.628185272216797
    8. ')' → logprob: -18.628185272216797
    9. 'n' → logprob: -19.003185272216797
    10. '   ' → logprob: -19.128185272216797

Token 269: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0485873706638813
    2. ' range' → logprob: -3.0485873222351074
    3. '(range' → logprob: -17.173587799072266
    4. ' ' → logprob: -19.048587799072266
    5. '   ' → logprob: -19.423587799072266
    6. '	range' → logprob: -20.298587799072266
    7. '
' → logprob: -21.048587799072266
    8. 'i' → logprob: -21.548587799072266
    9. '    ' → logprob: -21.673587799072266
    10. '```' → logprob: -22.048587799072266

Token 270: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012725738633889705
    2. 'self' → logprob: -10.000126838684082
    3. '(' → logprob: -10.125126838684082
    4. 'range' → logprob: -10.500126838684082
    5. '(range' → logprob: -11.375126838684082
    6. ' range' → logprob: -14.000126838684082
    7. ' (' → logprob: -14.125126838684082
    8. ' self' → logprob: -14.625126838684082
    9. '(s' → logprob: -15.500126838684082
    10. '   ' → logprob: -15.875126838684082

Token 271: '.SIZE' (ID: 163232)
  Prédit: '.SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.SIZE' → logprob: -0.0007952123996801674
    2. 'SIZE' → logprob: -7.375795364379883
    3. '.S' → logprob: -10.000795364379883
    4. '))' → logprob: -10.125795364379883
    5. ')' → logprob: -10.375795364379883
    6. '_SIZE' → logprob: -10.875795364379883
    7. '       ' → logprob: -11.875795364379883
    8. '   ' → logprob: -12.000795364379883
    9. '
' → logprob: -12.250795364379883
    10. '           ' → logprob: -12.375795364379883

Token 272: ')])
' (ID: 66560)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.0020728250965476036
    2. '])' → logprob: -6.377072811126709
    3. ')]' → logprob: -8.627073287963867
    4. ')' → logprob: -9.627073287963867
    5. '])]' → logprob: -9.627073287963867
    6. ']])' → logprob: -10.252073287963867
    7. ')])
' → logprob: -11.627073287963867
    8. ']))' → logprob: -11.627073287963867
    9. ' ])' → logprob: -12.627073287963867
    10. ' )' → logprob: -13.377073287963867

Token 273: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10483182966709137
    2. 'return' → logprob: -2.3548319339752197
    3. ' return' → logprob: -5.729831695556641
    4. '   ' → logprob: -7.104831695556641
    5. '
' → logprob: -7.604831695556641
    6. '	return' → logprob: -10.35483169555664
    7. '```' → logprob: -12.72983169555664
    8. ' ' → logprob: -12.85483169555664
    9. ')return' → logprob: -13.10483169555664
    10. ':return' → logprob: -13.22983169555664

Token 274: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07300971448421478
    2. ' return' → logprob: -3.323009729385376
    3. '
' → logprob: -3.823009729385376
    4. '       ' → logprob: -4.448009490966797
    5. '   ' → logprob: -7.448009490966797
    6. '	return' → logprob: -9.073009490966797
    7. '        
' → logprob: -10.823009490966797
    8. '
' → logprob: -11.323009490966797
    9. ' 
' → logprob: -11.323009490966797
    10. ':return' → logprob: -11.323009490966797

Token 275: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.00015860427811276168
    2. ' lines' → logprob: -8.750158309936523
    3. '(lines' → logprob: -17.000158309936523
    4. 'line' → logprob: -17.125158309936523
    5. '	lines' → logprob: -17.875158309936523
    6. '[' → logprob: -18.625158309936523
    7. 'lin' → logprob: -19.125158309936523
    8. 'lists' → logprob: -19.625158309936523
    9. 'list' → logprob: -19.875158309936523
    10. '.lines' → logprob: -20.375158309936523

Token 276: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1046651154756546
    2. '<|end|>' → logprob: -2.9796650409698486
    3. 'class' → logprob: -3.2296650409698486
    4. '   ' → logprob: -5.729665279388428
    5. '```' → logprob: -5.854665279388428
    6. '

' → logprob: -6.729665279388428
    7. '    
' → logprob: -6.979665279388428
    8. '<|end|>' → logprob: -8.35466480255127
    9. '
' → logprob: -9.72966480255127
    10. ' class' → logprob: -9.72966480255127

Token 277: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.3902033970225602e-05
    2. '
' → logprob: -11.375014305114746
    3. '

' → logprob: -13.250014305114746
    4. ' class' → logprob: -14.875014305114746
    5. 'from' → logprob: -15.875014305114746
    6. 'abstract' → logprob: -16.75001335144043
    7. '```' → logprob: -16.75001335144043
    8. '<class' → logprob: -17.37501335144043
    9. '"class' → logprob: -18.00001335144043
    10. '


' → logprob: -18.25001335144043

Token 278: ' Win' (ID: 16436)
  Prédit: ' Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Game' → logprob: -0.7857328057289124
    2. ' Player' → logprob: -0.9107328057289124
    3. ' Board' → logprob: -3.2857327461242676
    4. ' Rule' → logprob: -3.6607327461242676
    5. ' Result' → logprob: -4.660732746124268
    6. ' Tic' → logprob: -4.785732746124268
    7. ' Outcome' → logprob: -4.910732746124268
    8. ' State' → logprob: -5.035732746124268
    9. ' Evalu' → logprob: -5.160732746124268
    10. ' Abstract' → logprob: -5.285732746124268

Token 279: 'Condition' (ID: 14232)
  Prédit: 'Checker'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Checker' → logprob: -0.6511895060539246
    2. 'Condition' → logprob: -0.7761895060539246
    3. 'Detector' → logprob: -4.77618932723999
    4. 'Check' → logprob: -5.27618932723999
    5. 'State' → logprob: -6.77618932723999
    6. 'ner' → logprob: -7.02618932723999
    7. 'Evaluator' → logprob: -7.52618932723999
    8. 'Pattern' → logprob: -8.401189804077148
    9. 'Strategy' → logprob: -8.526189804077148
    10. 'Criterion' → logprob: -8.901189804077148

Token 280: 'Checker' (ID: 39016)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -7.896309739408025e-07
    2. '(Abstract' → logprob: -15.125000953674316
    3. ':' → logprob: -15.375000953674316
    4. ' (' → logprob: -15.500000953674316
    5. 'Mixin' → logprob: -20.125
    6. 'Handler' → logprob: -20.25
    7. '(
' → logprob: -20.25
    8. '((' → logprob: -20.375
    9. '(m' → logprob: -20.625
    10. 'State' → logprob: -20.625

Token 281: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. '(Abstract' → logprob: -14.75
    3. ' (' → logprob: -18.25
    4. ':' → logprob: -18.625
    5. '(
' → logprob: -20.75
    6. ':
' → logprob: -21.625
    7. '   ' → logprob: -21.75
    8. '```' → logprob: -22.0
    9. '((' → logprob: -22.375
    10. ' ' → logprob: -22.625

Token 282: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.0024793429765850306
    2. ' ABC' → logprob: -6.002479553222656
    3. 'abc' → logprob: -14.002479553222656
    4. 'AB' → logprob: -14.127479553222656
    5. '):
' → logprob: -14.877479553222656
    6. '(' → logprob: -15.002479553222656
    7. 'ABCDE' → logprob: -15.127479553222656
    8. ')' → logprob: -15.127479553222656
    9. ' ' → logprob: -15.377479553222656
    10. 'Abstract' → logprob: -15.502479553222656

Token 283: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00026848804554902017
    2. '):
' → logprob: -8.500268936157227
    3. ':' → logprob: -10.125268936157227
    4. ')' → logprob: -10.875268936157227
    5. ' ):' → logprob: -12.375268936157227
    6. '):
' → logprob: -14.000268936157227
    7. '):

' → logprob: -14.500268936157227
    8. ',' → logprob: -16.000268936157227
    9. '():' → logprob: -16.000268936157227
    10. ']:' → logprob: -16.250268936157227

Token 284: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3572148382663727
    2. '   ' → logprob: -1.2322148084640503
    3. ':
' → logprob: -5.23221492767334
    4. '
' → logprob: -6.73221492767334
    5. '):
' → logprob: -7.35721492767334
    6. '):' → logprob: -7.35721492767334
    7. '    
' → logprob: -7.73221492767334
    8. ' :' → logprob: -8.73221492767334
    9. ')' → logprob: -9.48221492767334
    10. '():' → logprob: -10.35721492767334

Token 285: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20566490292549133
    2. '@' (adapté à ' @') → logprob: -2.205664873123169
    3. '
' → logprob: -2.705664873123169
    4. '    
' → logprob: -5.080665111541748
    5. ' @' → logprob: -6.080665111541748
    6. ' 
' → logprob: -7.955665111541748
    7. 'def' → logprob: -11.83066463470459
    8. '

' → logprob: -11.95566463470459
    9. '   
' → logprob: -12.33066463470459
    10. '@property' → logprob: -12.45566463470459

Token 286: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -4.60414821645827e-06
    2. 'staticmethod' → logprob: -12.625004768371582
    3. ' abstract' → logprob: -13.875004768371582
    4. 'classmethod' → logprob: -16.125003814697266
    5. 'ab' → logprob: -16.250003814697266
    6. 'abc' → logprob: -16.875003814697266
    7. '.abstract' → logprob: -17.250003814697266
    8. 'property' → logprob: -17.375003814697266
    9. 'abs' → logprob: -17.750003814697266
    10. 'a' → logprob: -21.000003814697266

Token 287: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.004090866539627314
    2. '_method' → logprob: -5.504090785980225
    3. 'classmethod' → logprob: -12.129091262817383
    4. 'meth' → logprob: -12.754091262817383
    5. 'staticmethod' → logprob: -13.629091262817383
    6. '	method' → logprob: -14.629091262817383
    7. 'ethod' → logprob: -14.754091262817383
    8. 'm' → logprob: -15.129091262817383
    9. 'token' → logprob: -15.129091262817383
    10. '.method' → logprob: -15.254091262817383

Token 288: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.605873703956604
    2. '
' → logprob: -1.230873703956604
    3. 'method' → logprob: -1.855873703956604
    4. ' def' → logprob: -5.7308735847473145
    5. '    
' → logprob: -6.7308735847473145
    6. '_method' → logprob: -7.1058735847473145
    7. 'classmethod' → logprob: -8.730874061584473
    8. '  
' → logprob: -8.730874061584473
    9. '(' → logprob: -9.480874061584473
    10. '   ' → logprob: -9.855874061584473

Token 289: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06446877121925354
    2. '
' → logprob: -3.3144688606262207
    3. 'method' → logprob: -3.9394688606262207
    4. ' def' → logprob: -5.439468860626221
    5. '_method' → logprob: -7.439468860626221
    6. '   ' → logprob: -7.564468860626221
    7. '    
' → logprob: -7.814468860626221
    8. 'classmethod' → logprob: -8.439468383789062
    9. 'staticmethod' → logprob: -8.814468383789062
    10. 'ethod' → logprob: -9.564468383789062

Token 290: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.12906190752983093
    2. 'method' → logprob: -2.1290619373321533
    3. ' def' → logprob: -7.254061698913574
    4. 'classmethod' → logprob: -7.504061698913574
    5. 'staticmethod' → logprob: -7.504061698913574
    6. 'property' → logprob: -8.629061698913574
    7. 'abstract' → logprob: -9.754061698913574
    8. '
' → logprob: -9.879061698913574
    9. 'call' → logprob: -11.129061698913574
    10. 'bool' → logprob: -12.129061698913574

Token 291: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.21419990062713623
    2. 'check' → logprob: -1.7141999006271362
    3. ' is' → logprob: -4.589200019836426
    4. 'is' → logprob: -6.089200019836426
    5. 'def' → logprob: -9.089200019836426
    6. ' has' → logprob: -9.964200019836426
    7. ' def' → logprob: -10.214200019836426
    8. ' evaluate' → logprob: -10.589200019836426
    9. 'evaluate' → logprob: -11.714200019836426
    10. ' can' → logprob: -11.839200019836426

Token 292: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.052377623040229e-05
    2. '(' → logprob: -9.625070571899414
    3. 'self' → logprob: -12.875070571899414
    4. '(s' → logprob: -13.875070571899414
    5. ' (' → logprob: -14.750070571899414
    6. '(
' → logprob: -15.375070571899414
    7. '(sel' → logprob: -16.000070571899414
    8. '(se' → logprob: -17.500070571899414
    9. '_condition' → logprob: -17.750070571899414
    10. '   ' → logprob: -17.750070571899414

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.764977686339989e-05
    2. 'self' → logprob: -10.375057220458984
    3. ' ,' → logprob: -10.625057220458984
    4. ')' → logprob: -14.000057220458984
    5. ',
' → logprob: -14.000057220458984
    6. ',self' → logprob: -15.875057220458984
    7. '   ' → logprob: -16.750057220458984
    8. '_,' → logprob: -17.000057220458984
    9. 's' → logprob: -17.125057220458984
    10. ' self' → logprob: -17.375057220458984

Token 294: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.4616829752922058
    2. 'self' → logprob: -1.0866830348968506
    3. ' board' → logprob: -3.7116830348968506
    4. ' self' → logprob: -4.8366827964782715
    5. ')' → logprob: -11.08668327331543
    6. 'Board' → logprob: -11.58668327331543
    7. '(self' → logprob: -11.83668327331543
    8. '_board' → logprob: -12.39918327331543
    9. '.board' → logprob: -12.58668327331543
    10. '   ' → logprob: -12.58668327331543

Token 295: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.253090865968261e-06
    2. ')' → logprob: -11.625009536743164
    3. ' :' → logprob: -15.750009536743164
    4. '):' → logprob: -16.500009536743164
    5. '   ' → logprob: -17.750009536743164
    6. '[' → logprob: -18.375009536743164
    7. ',' → logprob: -18.500009536743164
    8. '_:' → logprob: -19.125009536743164
    9. ' )' → logprob: -19.250009536743164
    10. '```' → logprob: -19.250009536743164

Token 296: ' Board' (ID: 10837)
  Prédit: ' Board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Board' → logprob: -0.2519311308860779
    2. 'Board' → logprob: -1.5019311904907227
    3. ')' → logprob: -14.001931190490723
    4. ' ' → logprob: -14.376931190490723
    5. ' board' → logprob: -15.626931190490723
    6. '(Board' → logprob: -16.126930236816406
    7. '.Board' → logprob: -16.251930236816406
    8. ' ' → logprob: -16.251930236816406
    9. '_board' → logprob: -16.751930236816406
    10. 'board' → logprob: -16.876930236816406

Token 297: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02059164270758629
    2. ',' → logprob: -3.8955917358398438
    3. ' )' → logprob: -10.020591735839844
    4. ',)' → logprob: -12.895591735839844
    5. '   ' → logprob: -13.395591735839844
    6. ' ,' → logprob: -14.395591735839844
    7. ')->' → logprob: -15.145591735839844
    8. '`)' → logprob: -15.895591735839844
    9. ',
' → logprob: -16.395591735839844
    10. '")' → logprob: -17.020591735839844

Token 298: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026354987174272537
    2. ' ->' → logprob: -3.776355028152466
    3. '->' → logprob: -6.026354789733887
    4. ' )' → logprob: -8.151354789733887
    5. ')->' → logprob: -8.276354789733887
    6. ',' → logprob: -8.901354789733887
    7. ' )->' → logprob: -12.026354789733887
    8. '-' → logprob: -13.651354789733887
    9. '   ' → logprob: -13.776354789733887
    10. ':' → logprob: -13.901354789733887

Token 299: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.0013209539465606213
    2. ' Optional' → logprob: -7.501320838928223
    3. 'str' → logprob: -7.626320838928223
    4. 'bool' → logprob: -8.501320838928223
    5. 'List' → logprob: -10.376320838928223
    6. 'Stone' → logprob: -10.751320838928223
    7. 'Opt' → logprob: -11.251320838928223
    8. '(Optional' → logprob: -12.126320838928223
    9. 'optional' → logprob: -13.376320838928223
    10. '	Optional' → logprob: -13.501320838928223

Token 300: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -2.248469718324486e-05
    2. '[' → logprob: -10.750022888183594
    3. '[int' → logprob: -14.500022888183594
    4. '[List' → logprob: -15.250022888183594
    5. '[
' → logprob: -15.500022888183594
    6. ' [' → logprob: -16.750022888183594
    7. 'str' → logprob: -18.250022888183594
    8. '[String' → logprob: -18.375022888183594
    9. '[s' → logprob: -19.125022888183594
    10. '   ' → logprob: -19.125022888183594

Token 301: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6355627775192261
    2. ']:' → logprob: -0.7605627775192261
    3. ':' → logprob: -6.885562896728516
    4. ']' → logprob: -7.260562896728516
    5. ')' → logprob: -7.635562896728516
    6. '):
' → logprob: -7.760562896728516
    7. '   ' → logprob: -9.010562896728516
    8. ']:
' → logprob: -9.635562896728516
    9. '[str' → logprob: -10.260562896728516
    10. ']):' → logprob: -10.385562896728516

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3631473481655121
    2. ' pass' → logprob: -1.4881473779678345
    3. '<|end|>' → logprob: -3.113147258758545
    4. '   ' → logprob: -4.238147258758545
    5. 'pass' → logprob: -4.988147258758545
    6. '
' → logprob: -4.988147258758545
    7. ' ' → logprob: -5.988147258758545
    8. '    ' → logprob: -6.363147258758545
    9. '...' → logprob: -7.488147258758545
    10. '	pass' → logprob: -7.863147258758545

Token 303: ' pass' (ID: 1853)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '...' → logprob: -0.3916487395763397
    2. 'pass' (adapté à ' pass') → logprob: -1.391648769378662
    3. ' pass' → logprob: -2.641648769378662
    4. '       ' → logprob: -6.141648769378662
    5. ' ...' → logprob: -6.516648769378662
    6. 'None' → logprob: -8.141648292541504
    7. '   ' → logprob: -9.016648292541504
    8. ' None' → logprob: -9.641648292541504
    9. '"""' → logprob: -11.391648292541504
    10. '	pass' → logprob: -11.516648292541504

Token 304: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11447858065366745
    2. 'class' → logprob: -2.489478588104248
    3. '

' → logprob: -3.864478588104248
    4. '<|end|>' → logprob: -5.989478588104248
    5. '   ' → logprob: -6.614478588104248
    6. '  
' → logprob: -9.61447811126709
    7. '


' → logprob: -9.61447811126709
    8. '    
' → logprob: -9.86447811126709
    9. '```' → logprob: -10.11447811126709
    10. ' 
' → logprob: -10.11447811126709

Token 305: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.048714544624090195
    2. '
' → logprob: -3.0487146377563477
    3. '

' → logprob: -9.048714637756348
    4. ' class' → logprob: -12.173714637756348
    5. '
' → logprob: -12.798714637756348
    6. '  
' → logprob: -14.423714637756348
    7. '<class' → logprob: -15.173714637756348
    8. ' 
' → logprob: -15.423714637756348
    9. '


' → logprob: -15.548714637756348
    10. '<|end|>' → logprob: -15.798714637756348

Token 306: ' Tic' (ID: 111968)
  Prédit: 'Row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Row' → logprob: -1.1213181018829346
    2. 'Three' → logprob: -1.1213181018829346
    3. 'Line' → logprob: -1.6213181018829346
    4. ' Three' → logprob: -3.1213181018829346
    5. ' Row' → logprob: -3.2463181018829346
    6. 'Win' → logprob: -4.4963178634643555
    7. ' Line' → logprob: -4.4963178634643555
    8. 'Winner' → logprob: -4.7463178634643555
    9. 'Black' → logprob: -4.9963178634643555
    10. 'Stone' → logprob: -5.1213178634643555

Token 307: 'Tac' (ID: 112548)
  Prédit: 'Tac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tac' → logprob: -0.00012368128227535635
    2. 'Tak' → logprob: -9.125123977661133
    3. ' Tac' → logprob: -11.750123977661133
    4. 'T' → logprob: -12.500123977661133
    5. ' tac' → logprob: -14.000123977661133
    6. 't' → logprob: -14.375123977661133
    7. '```' → logprob: -15.250123977661133
    8. '
' → logprob: -15.750123977661133
    9. 'Toe' → logprob: -15.750123977661133
    10. '' → logprob: -15.875123977661133

Token 308: 'Toe' (ID: 121312)
  Prédit: 'Toe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Toe' → logprob: -0.0024027663748711348
    2. 'To' → logprob: -6.3774027824401855
    3. 'T' → logprob: -7.5024027824401855
    4. ' toe' → logprob: -9.627402305603027
    5. 'Toen' → logprob: -10.502402305603027
    6. 'Tow' → logprob: -11.002402305603027
    7. '   ' → logprob: -11.252402305603027
    8. '```' → logprob: -12.252402305603027
    9. ' Toe' → logprob: -13.127402305603027
    10. 'toe' → logprob: -13.252402305603027

Token 309: 'Winner' (ID: 71196)
  Prédit: 'Win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Win' → logprob: -0.0008679908351041377
    2. 'Winner' → logprob: -7.50086784362793
    3. 'Checker' → logprob: -8.62586784362793
    4. 'Game' → logprob: -9.75086784362793
    5. 'Condition' → logprob: -10.87586784362793
    6. 'Result' → logprob: -10.87586784362793
    7. 'Check' → logprob: -11.62586784362793
    8. 'Winning' → logprob: -12.12586784362793
    9. 'Status' → logprob: -12.25086784362793
    10. ' Win' → logprob: -12.37586784362793

Token 310: 'Checker' (ID: 39016)
  Prédit: 'Checker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Checker' → logprob: -0.03951243683695793
    2. 'Detector' → logprob: -3.2895123958587646
    3. '(' → logprob: -7.414512634277344
    4. 'Determ' → logprob: -7.789512634277344
    5. 'Condition' → logprob: -8.289512634277344
    6. 'Analyzer' → logprob: -9.539512634277344
    7. 'Check' → logprob: -9.914512634277344
    8. 'Checking' → logprob: -11.539512634277344
    9. 'Verifier' → logprob: -11.539512634277344
    10. 'Finder' → logprob: -11.539512634277344

Token 311: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004413975402712822
    2. ':' → logprob: -7.750441551208496
    3. '(W' → logprob: -12.125441551208496
    4. '(T' → logprob: -12.875441551208496
    5. ' :' → logprob: -13.750441551208496
    6. ':
' → logprob: -14.125441551208496
    7. '(Check' → logprob: -15.125441551208496
    8. '(Abstract' → logprob: -15.500441551208496
    9. '   ' → logprob: -16.00044059753418
    10. ' (' → logprob: -16.00044059753418

Token 312: 'Win' (ID: 19224)
  Prédit: 'Win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Win' → logprob: -9.341087570646778e-05
    2. ' Win' → logprob: -9.625093460083008
    3. ')' → logprob: -10.750093460083008
    4. '):' → logprob: -12.375093460083008
    5. '):
' → logprob: -13.750093460083008
    6. 'WIN' → logprob: -16.375093460083008
    7. 'ABC' → logprob: -16.375093460083008
    8. 'W' → logprob: -16.875093460083008
    9. '_win' → logprob: -16.875093460083008
    10. 'T' → logprob: -17.125093460083008

Token 313: 'Condition' (ID: 14232)
  Prédit: 'Condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Condition' → logprob: -0.0003230686706956476
    2. 'Tac' → logprob: -8.250323295593262
    3. 'condition' → logprob: -10.625323295593262
    4. 'Con' → logprob: -11.000323295593262
    5. '_condition' → logprob: -12.125323295593262
    6. 'Cond' → logprob: -12.125323295593262
    7. 'Cod' → logprob: -12.875323295593262
    8. ' condition' → logprob: -13.625323295593262
    9. 'Conditions' → logprob: -13.875323295593262
    10. 'T' → logprob: -14.000323295593262

Token 314: 'Checker' (ID: 39016)
  Prédit: 'Checker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Checker' → logprob: -0.002186307217925787
    2. 'checker' → logprob: -6.252186298370361
    3. 'er' → logprob: -8.75218677520752
    4. ' checker' → logprob: -10.12718677520752
    5. ' Checker' → logprob: -10.50218677520752
    6. '   ' → logprob: -11.12718677520752
    7. '_checker' → logprob: -11.62718677520752
    8. 'Check' → logprob: -12.50218677520752
    9. ')' → logprob: -13.37718677520752
    10. 'cker' → logprob: -14.25218677520752

Token 315: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12697619199752808
    2. '):
' → logprob: -2.126976251602173
    3. ')' → logprob: -10.501976013183594
    4. '):
' → logprob: -11.251976013183594
    5. ':' → logprob: -12.626976013183594
    6. '):

' → logprob: -12.626976013183594
    7. ' ):' → logprob: -14.751976013183594
    8. '   ' → logprob: -14.876976013183594
    9. ':
' → logprob: -15.626976013183594
    10. 'def' → logprob: -16.251976013183594

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005135204177349806
    2. '
' → logprob: -5.3801350593566895
    3. ' def' → logprob: -8.130135536193848
    4. 'def' → logprob: -8.630135536193848
    5. '    
' → logprob: -10.255135536193848
    6. '	def' → logprob: -12.255135536193848
    7. '   ' → logprob: -14.130135536193848
    8. '   
' → logprob: -15.755135536193848
    9. 'indent' → logprob: -15.880135536193848
    10. '

' → logprob: -16.13013458251953

Token 317: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.20628495514392853
    2. ' def' → logprob: -1.706284999847412
    3. '   ' → logprob: -5.331284999847412
    4. '
' → logprob: -10.831284523010254
    5. '	def' → logprob: -14.456284523010254
    6. '    
' → logprob: -14.706284523010254
    7. '

' → logprob: -15.081284523010254
    8. '    ' → logprob: -15.206284523010254
    9. '@' → logprob: -15.206284523010254
    10. ' ' → logprob: -15.331284523010254

Token 318: ' __' (ID: 2516)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.003321007825434208
    2. ' def' → logprob: -5.753321170806885
    3. 'check' → logprob: -8.878320693969727
    4. 'def' → logprob: -13.253320693969727
    5. ' ' → logprob: -13.503320693969727
    6. '_check' → logprob: -14.253320693969727
    7. ' ' → logprob: -16.253320693969727
    8. '	check' → logprob: -17.128320693969727
    9. ' checker' → logprob: -18.503320693969727
    10. '_' → logprob: -18.878320693969727

Token 319: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.704273118884885e-07
    2. '_init' → logprob: -16.125
    3. 'next' → logprob: -16.25
    4. ' init' → logprob: -16.5
    5. 'inite' → logprob: -16.625
    6. 'def' → logprob: -16.75
    7. '_' → logprob: -16.875
    8. 'check' → logprob: -17.75
    9. 'ini' → logprob: -18.125
    10. '	init' → logprob: -18.25

Token 320: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.002278245985507965
    2. '(self' → logprob: -6.7522783279418945
    3. '__' → logprob: -6.8772783279418945
    4. '__(
' → logprob: -10.127278327941895
    5. '_(' → logprob: -10.502278327941895
    6. '_' → logprob: -12.377278327941895
    7. 'self' → logprob: -14.127278327941895
    8. '___' → logprob: -14.377278327941895
    9. ' (' → logprob: -14.502278327941895
    10. '__((' → logprob: -14.627278327941895

Token 321: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003055493871215731
    2. ')' → logprob: -8.12530517578125
    3. ' self' → logprob: -12.25030517578125
    4. '
' → logprob: -13.00030517578125
    5. '):
' → logprob: -13.50030517578125
    6. ')
' → logprob: -14.75030517578125
    7. '),' → logprob: -15.75030517578125
    8. '   ' → logprob: -15.87530517578125
    9. '):' → logprob: -16.50030517578125
    10. '(self' → logprob: -16.75030517578125

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9834270477294922
    2. 'self' → logprob: -1.1084270477294922
    3. ')' → logprob: -1.9834270477294922
    4. '):' → logprob: -2.358427047729492
    5. '):
' → logprob: -2.983427047729492
    6. '   ' → logprob: -4.858427047729492
    7. '(self' → logprob: -5.608427047729492
    8. ' (' → logprob: -7.733427047729492
    9. ' self' → logprob: -7.858427047729492
    10. '       ' → logprob: -8.983427047729492

Token 323: ' stone' (ID: 14352)
  Prédit: 'stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stone' → logprob: -0.459465354681015
    2. 'player' → logprob: -1.7094653844833374
    3. 'target' → logprob: -2.959465265274048
    4. ' stone' → logprob: -3.584465265274048
    5. ' player' → logprob: -3.834465265274048
    6. 'symbol' → logprob: -3.959465265274048
    7. ' target' → logprob: -4.334465503692627
    8. 'winning' → logprob: -4.334465503692627
    9. 'stones' → logprob: -4.459465503692627
    10. 'winner' → logprob: -4.584465503692627

Token 324: '_to' (ID: 5089)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2144252508878708
    2. '_to' → logprob: -2.4644253253936768
    3. '_color' → logprob: -2.9644253253936768
    4. '):' → logprob: -3.3394253253936768
    5. '_black' → logprob: -4.714425086975098
    6. '=' → logprob: -5.089425086975098
    7. 'to' → logprob: -6.964425086975098
    8. '_' → logprob: -7.089425086975098
    9. '_:' → logprob: -7.339425086975098
    10. ')' → logprob: -7.589425086975098

Token 325: '_check' (ID: 15847)
  Prédit: '_check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_check' → logprob: -0.01980621926486492
    2. '_win' → logprob: -4.394806385040283
    3. 'check' → logprob: -5.394806385040283
    4. 'stone' → logprob: -7.269806385040283
    5. 'win' → logprob: -7.769806385040283
    6. '_player' → logprob: -8.019805908203125
    7. '_st' → logprob: -8.019805908203125
    8. '_find' → logprob: -8.519805908203125
    9. 'player' → logprob: -9.144805908203125
    10. '_count' → logprob: -9.394805908203125

Token 326: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020898310467600822
    2. '):' → logprob: -6.252089977264404
    3. '=' → logprob: -9.252089500427246
    4. ')' → logprob: -10.252089500427246
    5. ' :' → logprob: -10.877089500427246
    6. ':str' → logprob: -12.002089500427246
    7. ' ):' → logprob: -13.252089500427246
    8. '):
' → logprob: -13.502089500427246
    9. '=None' → logprob: -15.002089500427246
    10. ' ' → logprob: -15.127089500427246

Token 327: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.14365708827972412
    2. ' str' → logprob: -2.0186572074890137
    3. ')' → logprob: -7.143657207489014
    4. 'Stone' → logprob: -9.143656730651855
    5. ':str' → logprob: -10.893656730651855
    6. '   ' → logprob: -11.018656730651855
    7. '[str' → logprob: -11.393656730651855
    8. ' Stone' → logprob: -11.643656730651855
    9. ' ' → logprob: -12.143656730651855
    10. 'stone' → logprob: -12.268656730651855

Token 328: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6942997574806213
    2. '):' → logprob: -0.6942997574806213
    3. ':' → logprob: -7.319299697875977
    4. '):
' → logprob: -8.694299697875977
    5. '=' → logprob: -8.944299697875977
    6. ' )' → logprob: -9.319299697875977
    7. ' ):' → logprob: -9.319299697875977
    8. ' ' → logprob: -12.444299697875977
    9. ' =' → logprob: -12.944299697875977
    10. '   ' → logprob: -13.569299697875977

Token 329: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006057724356651306
    2. ':
' → logprob: -5.2560577392578125
    3. '):' → logprob: -7.5060577392578125
    4. '):
' → logprob: -8.631057739257812
    5. ')' → logprob: -10.256057739257812
    6. '   ' → logprob: -10.381057739257812
    7. ' :' → logprob: -11.256057739257812
    8. '       ' → logprob: -11.881057739257812
    9. ' ->' → logprob: -13.256057739257812
    10. '->' → logprob: -13.506057739257812

Token 330: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.07889000326395035
    2. 'None' → logprob: -2.578890085220337
    3. ' ' → logprob: -16.828889846801758
    4. '   ' → logprob: -17.078889846801758
    5. ' none' → logprob: -17.453889846801758
    6. '=None' → logprob: -18.203889846801758
    7. 'none' → logprob: -18.453889846801758
    8. '_None' → logprob: -18.453889846801758
    9. ' ' → logprob: -18.703889846801758
    10. '(None' → logprob: -19.578889846801758

Token 331: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007798021659255028
    2. ':
' → logprob: -4.882798194885254
    3. '       ' → logprob: -8.882798194885254
    4. '):' → logprob: -10.507798194885254
    5. '):
' → logprob: -11.757798194885254
    6. '   ' → logprob: -12.132798194885254
    7. ':def' → logprob: -12.507798194885254
    8. ' :' → logprob: -12.882798194885254
    9. '():' → logprob: -13.007798194885254
    10. ',' → logprob: -13.757798194885254

Token 332: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.125210297293961e-05
    2. 'self' → logprob: -9.625081062316895
    3. ' self' → logprob: -11.375081062316895
    4. '   ' → logprob: -12.625081062316895
    5. '	' → logprob: -16.87508201599121
    6. '      ' → logprob: -17.00008201599121
    7. '           ' → logprob: -17.00008201599121
    8. '	self' → logprob: -17.12508201599121
    9. '
' → logprob: -17.37508201599121
    10. ' ' → logprob: -17.50008201599121

Token 333: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19276873767375946
    2. 'self' (adapté à ' self') → logprob: -1.9427686929702759
    3. ' self' → logprob: -3.4427688121795654
    4. '   ' → logprob: -10.192769050598145
    5. '	self' → logprob: -12.567769050598145
    6. 'super' → logprob: -13.442769050598145
    7. ' ' → logprob: -13.692769050598145
    8. '	' → logprob: -14.942769050598145
    9. ' super' → logprob: -15.067769050598145
    10. '           ' → logprob: -15.567769050598145

Token 334: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.0015611659036949277
    2. '.' → logprob: -6.501561164855957
    3. '.s' → logprob: -10.751561164855957
    4. ' .' → logprob: -10.876561164855957
    5. '._' → logprob: -11.376561164855957
    6. '.St' → logprob: -13.126561164855957
    7. '.t' → logprob: -14.001561164855957
    8. '.stroke' → logprob: -14.501561164855957
    9. '.street' → logprob: -14.751561164855957
    10. '.ST' → logprob: -15.251561164855957

Token 335: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -3.531315314830863e-06
    2. '_one' → logprob: -12.875003814697266
    3. 'One' → logprob: -15.125003814697266
    4. 'tone' → logprob: -16.375003814697266
    5. '_' → logprob: -16.500003814697266
    6. 'rone' → logprob: -16.625003814697266
    7. 'onet' → logprob: -16.750003814697266
    8. 'ones' → logprob: -16.750003814697266
    9. '   ' → logprob: -17.000003814697266
    10. 'stone' → logprob: -17.125003814697266

Token 336: ' =' (ID: 314)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0014008332509547472
    2. '_' → logprob: -6.626400947570801
    3. ' =' → logprob: -10.2514009475708
    4. '=' → logprob: -10.8764009475708
    5. '=_' → logprob: -11.3764009475708
    6. ' _' → logprob: -13.3764009475708
    7. '_for' → logprob: -13.5014009475708
    8. 'To' → logprob: -13.5014009475708
    9. '_=' → logprob: -14.2514009475708
    10. '="_' → logprob: -14.3764009475708

Token 337: ' stone' (ID: 14352)
  Prédit: ' stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stone' → logprob: -0.03804745525121689
    2. 'stone' → logprob: -3.2880475521087646
    3. 'Stone' → logprob: -12.288047790527344
    4. ' Stone' → logprob: -13.788047790527344
    5. 'ston' → logprob: -14.788047790527344
    6. ' ' → logprob: -17.413047790527344
    7. 'STONE' → logprob: -17.788047790527344
    8. 'st' → logprob: -19.038047790527344
    9. 'estone' → logprob: -19.038047790527344
    10. ' stones' → logprob: -19.413047790527344

Token 338: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.1756367712223437e-05
    2. 'to' → logprob: -11.500011444091797
    3. 'To' → logprob: -13.875011444091797
    4. 't' → logprob: -15.125011444091797
    5. '   ' → logprob: -15.750011444091797
    6. ' to' → logprob: -16.625011444091797
    7. ' ' → logprob: -17.250011444091797
    8. '_' → logprob: -17.500011444091797
    9. '       ' → logprob: -17.750011444091797
    10. '_t' → logprob: -18.250011444091797

Token 339: '_check' (ID: 15847)
  Prédit: '_check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_check' → logprob: -0.023823825642466545
    2. 'check' → logprob: -3.7738237380981445
    3. 'heck' → logprob: -7.5238237380981445
    4. ' check' → logprob: -10.773823738098145
    5. '_' → logprob: -12.273823738098145
    6. 'Check' → logprob: -12.523823738098145
    7. ' _' → logprob: -13.273823738098145
    8. 'ck' → logprob: -13.398823738098145
    9. '_che' → logprob: -13.398823738098145
    10. '_CHECK' → logprob: -13.648823738098145

Token 340: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0037415295373648405
    2. '   ' → logprob: -6.00374174118042
    3. '    
' → logprob: -7.37874174118042
    4. 'def' → logprob: -7.87874174118042
    5. '  
' → logprob: -9.128741264343262
    6. '

' → logprob: -9.753741264343262
    7. ' 
' → logprob: -10.253741264343262
    8. '<|end|>' → logprob: -10.628741264343262
    9. ' def' → logprob: -11.753741264343262
    10. '        
' → logprob: -11.753741264343262

Token 341: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1015438660979271
    2. '
' → logprob: -2.35154390335083
    3. '    
' → logprob: -7.35154390335083
    4. 'def' → logprob: -7.85154390335083
    5. ' def' → logprob: -9.601543426513672
    6. '```' → logprob: -9.601543426513672
    7. ' ' → logprob: -10.226543426513672
    8. '  
' → logprob: -10.226543426513672
    9. '

' → logprob: -10.351543426513672
    10. '  ' → logprob: -11.101543426513672

Token 342: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.2729995988775045e-06
    2. ' def' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.5000057220459
    4. '
' → logprob: -20.7500057220459
    5. '	def' → logprob: -21.7500057220459
    6. 'de' → logprob: -24.0000057220459
    7. '    
' → logprob: -24.5000057220459
    8. '@' → logprob: -24.7500057220459
    9. ' ' → logprob: -25.0000057220459
    10. 'Def' → logprob: -25.1250057220459

Token 343: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.014165511354804039
    2. 'check' → logprob: -4.26416540145874
    3. ' def' → logprob: -13.389165878295898
    4. 'def' → logprob: -14.514165878295898
    5. '_check' → logprob: -17.6391658782959
    6. ' ' → logprob: -18.2641658782959
    7. '	check' → logprob: -19.1391658782959
    8. ' ' → logprob: -19.2641658782959
    9. '   ' → logprob: -21.0141658782959
    10. '_' → logprob: -21.0141658782959

Token 344: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.875
    3. 'self' → logprob: -18.625
    4. ' (' → logprob: -19.25
    5. '(
' → logprob: -20.25
    6. '   ' → logprob: -20.75
    7. '       ' → logprob: -22.25
    8. 'def' → logprob: -22.625
    9. '(sel' → logprob: -22.625
    10. ' self' → logprob: -22.75

Token 345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6286106983898208e-05
    2. ' ,' → logprob: -11.750016212463379
    3. 'self' → logprob: -11.750016212463379
    4. ',self' → logprob: -15.500016212463379
    5. '       ' → logprob: -15.750016212463379
    6. '(self' → logprob: -16.000017166137695
    7. '   ' → logprob: -17.125017166137695
    8. ' self' → logprob: -17.375017166137695
    9. ',
' → logprob: -18.500017166137695
    10. ')' → logprob: -19.875017166137695

Token 346: ' board' (ID: 6796)
  Prédit: ' board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' board' → logprob: -0.014169624075293541
    2. 'board' → logprob: -4.264169692993164
    3. 'self' → logprob: -12.389169692993164
    4. ' self' → logprob: -13.514169692993164
    5. 'b' → logprob: -15.014169692993164
    6. '_board' → logprob: -16.264169692993164
    7. 'Board' → logprob: -16.389169692993164
    8. ' Board' → logprob: -16.764169692993164
    9. '	board' → logprob: -16.889169692993164
    10. '.board' → logprob: -17.139169692993164

Token 347: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.682846287731081e-05
    2. ')' → logprob: -9.625066757202148
    3. '):' → logprob: -15.000066757202148
    4. '   ' → logprob: -15.375066757202148
    5. ' :' → logprob: -15.750066757202148
    6. '       ' → logprob: -16.87506675720215
    7. '```' → logprob: -17.37506675720215
    8. ' )' → logprob: -18.12506675720215
    9. 'self' → logprob: -19.25006675720215
    10. ' ' → logprob: -20.25006675720215

Token 348: ' Board' (ID: 10837)
  Prédit: ' Board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Board' → logprob: -0.003177952254191041
    2. 'Board' → logprob: -5.753178119659424
    3. ' board' → logprob: -16.003177642822266
    4. ')' → logprob: -16.753177642822266
    5. '(Board' → logprob: -17.128177642822266
    6. ' ' → logprob: -17.378177642822266
    7. ' Optional' → logprob: -18.628177642822266
    8. ' Boards' → logprob: -19.003177642822266
    9. '_board' → logprob: -19.253177642822266
    10. ' ' → logprob: -19.253177642822266

Token 349: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ' )' → logprob: -12.87500286102295
    3. ':' → logprob: -15.37500286102295
    4. '):' → logprob: -16.750001907348633
    5. '   ' → logprob: -17.125001907348633
    6. ')->' → logprob: -18.500001907348633
    7. '`)' → logprob: -19.375001907348633
    8. '       ' → logprob: -20.250001907348633
    9. '):
' → logprob: -20.500001907348633
    10. ' ' → logprob: -21.125001907348633

Token 350: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8316099643707275
    2. ' ->' → logprob: -0.8316099643707275
    3. '->' → logprob: -2.0816099643707275
    4. ':' → logprob: -6.206609725952148
    5. ')->' → logprob: -6.206609725952148
    6. '   ' → logprob: -7.831609725952148
    7. '       ' → logprob: -9.081609725952148
    8. '(self' → logprob: -11.581609725952148
    9. ':
' → logprob: -12.081609725952148
    10. ' )' → logprob: -12.581609725952148

Token 351: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.12693022191524506
    2. ' Optional' → logprob: -2.1269302368164062
    3. '(Optional' → logprob: -14.126930236816406
    4. 'str' → logprob: -14.376930236816406
    5. '	Optional' → logprob: -15.001930236816406
    6. '   ' → logprob: -15.376930236816406
    7. ' str' → logprob: -15.626930236816406
    8. ' ' → logprob: -16.126930236816406
    9. 'optional' → logprob: -17.376930236816406
    10. '_optional' → logprob: -18.501930236816406

Token 352: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -2.47495681833243e-05
    2. '[
' → logprob: -10.750024795532227
    3. '[' → logprob: -13.250024795532227
    4. 'str' → logprob: -13.750024795532227
    5. ' [' → logprob: -16.000024795532227
    6. '[s' → logprob: -16.875024795532227
    7. ' str' → logprob: -17.750024795532227
    8. '[int' → logprob: -17.875024795532227
    9. '[[' → logprob: -18.125024795532227
    10. '   ' → logprob: -18.125024795532227

Token 353: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2756727337837219
    2. '):
' → logprob: -1.5256726741790771
    3. ')' → logprob: -3.775672674179077
    4. ':' → logprob: -7.775672912597656
    5. '   ' → logprob: -9.775672912597656
    6. '):
' → logprob: -10.150672912597656
    7. '       ' → logprob: -11.400672912597656
    8. ':
' → logprob: -11.525672912597656
    9. '):

' → logprob: -13.025672912597656
    10. ']:' → logprob: -14.400672912597656

Token 354: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003680955618619919
    2. ' for' → logprob: -5.753681182861328
    3. ' lines' → logprob: -8.003681182861328
    4. 'for' → logprob: -9.003681182861328
    5. '
' → logprob: -10.753681182861328
    6. '```' → logprob: -11.503681182861328
    7. '   ' → logprob: -12.003681182861328
    8. '        
' → logprob: -13.128681182861328
    9. ',' → logprob: -13.878681182861328
    10. '(lines' → logprob: -14.628681182861328

Token 355: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.712577760219574
    2. 'for' → logprob: -0.712577760219574
    3. '       ' → logprob: -3.9625778198242188
    4. ' lines' → logprob: -8.462577819824219
    5. 'lines' → logprob: -11.712577819824219
    6. '
' → logprob: -12.212577819824219
    7. '   ' → logprob: -13.462577819824219
    8. '```' → logprob: -13.462577819824219
    9. '	for' → logprob: -14.337577819824219
    10. 'all' → logprob: -15.462577819824219

Token 356: ' Check' (ID: 6208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20207644999027252
    2. ' for' → logprob: -1.7020764350891113
    3. ' lines' → logprob: -7.577076435089111
    4. 'lines' → logprob: -9.20207691192627
    5. '       ' → logprob: -9.95207691192627
    6. 'For' → logprob: -14.82707691192627
    7. 'stones' → logprob: -14.82707691192627
    8. '```' → logprob: -14.82707691192627
    9. '   ' → logprob: -15.20207691192627
    10. '
' → logprob: -15.32707691192627

Token 357: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12440808862447739
    2. 'for' → logprob: -2.249408006668091
    3. ' lines' → logprob: -4.87440824508667
    4. ' all' → logprob: -5.99940824508667
    5. '   ' → logprob: -7.12440824508667
    6. '       ' → logprob: -7.87440824508667
    7. 'lines' → logprob: -9.124407768249512
    8. 'all' → logprob: -9.624407768249512
    9. ' ' → logprob: -11.749407768249512
    10. ' each' → logprob: -12.124407768249512

Token 358: ' this' (ID: 495)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.2723751664161682
    2. 'any' → logprob: -1.5223751068115234
    3. 'self' → logprob: -4.522375106811523
    4. ' self' → logprob: -5.647375106811523
    5. ' all' → logprob: -6.022375106811523
    6. 'all' → logprob: -6.522375106811523
    7. ' the' → logprob: -7.522375106811523
    8. 'stone' → logprob: -7.897375106811523
    9. ' ' → logprob: -8.147375106811523
    10. ' stone' → logprob: -8.272375106811523

Token 359: ' stone' (ID: 14352)
  Prédit: ' stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stone' → logprob: -0.12752757966518402
    2. ' for' → logprob: -2.7525274753570557
    3. 'stone' → logprob: -3.6275274753570557
    4. ' is' → logprob: -3.8775274753570557
    5. '   ' → logprob: -5.502527713775635
    6. 'for' → logprob: -6.377527713775635
    7. ''s' → logprob: -7.377527713775635
    8. ' line' → logprob: -8.127527236938477
    9. ' has' → logprob: -8.377527236938477
    10. ' player's' → logprob: -8.377527236938477

Token 360: ' has' (ID: 853)
  Prédit: ' has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.11715833097696304
    2. 'has' → logprob: -2.8671584129333496
    3. 'wins' → logprob: -3.8671584129333496
    4. ' wins' → logprob: -3.9921584129333496
    5. ' occupies' → logprob: -5.24215841293335
    6. ' is' → logprob: -5.49215841293335
    7. '   ' → logprob: -6.36715841293335
    8. ' ' → logprob: -7.36715841293335
    9. 'won' → logprob: -7.49215841293335
    10. ''s' → logprob: -7.74215841293335

Token 361: ' a' (ID: 261)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.7643120884895325
    2. ' won' → logprob: -1.7643120288848877
    3. ' a' → logprob: -2.0143120288848877
    4. 'any' → logprob: -2.1393120288848877
    5. 'won' → logprob: -2.8893120288848877
    6. 'a' → logprob: -2.8893120288848877
    7. ' three' → logprob: -8.139311790466309
    8. ' ' → logprob: -9.014311790466309
    9. 'three' → logprob: -10.389311790466309
    10. '   ' → logprob: -10.514311790466309

Token 362: ' winning' (ID: 15212)
  Prédit: 'winning'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winning' → logprob: -0.20666147768497467
    2. 'winner' → logprob: -1.8316614627838135
    3. 'win' → logprob: -4.956661701202393
    4. 'line' → logprob: -5.081661701202393
    5. 'w' → logprob: -5.331661701202393
    6. ' winning' → logprob: -5.456661701202393
    7. 'complete' → logprob: -6.706661701202393
    8. ' winner' → logprob: -6.831661701202393
    9. 'won' → logprob: -7.081661701202393
    10. ' line' → logprob: -8.081661224365234

Token 363: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.006003925576806068
    2. 'line' → logprob: -5.1310038566589355
    3. ' condition' → logprob: -9.881004333496094
    4. 'condition' → logprob: -11.881004333496094
    5. ' lines' → logprob: -12.756004333496094
    6. '_line' → logprob: -12.881004333496094
    7. ' combination' → logprob: -13.131004333496094
    8. ' status' → logprob: -14.006004333496094
    9. ' sequence' → logprob: -14.256004333496094
    10. ' stone' → logprob: -14.381004333496094

Token 364: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05387295037508011
    2. '
' → logprob: -3.553873062133789
    3. ' for' → logprob: -3.928873062133789
    4. 'for' → logprob: -6.178873062133789
    5. ':' → logprob: -6.553873062133789
    6. '        
' → logprob: -8.178873062133789
    7. ':
' → logprob: -9.178873062133789
    8. '   ' → logprob: -9.928873062133789
    9. ',' → logprob: -10.178873062133789
    10. ' lines' → logprob: -10.553873062133789

Token 365: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00034380643046461046
    2. ' for' → logprob: -8.125344276428223
    3. 'for' → logprob: -10.500344276428223
    4. '
' → logprob: -10.875344276428223
    5. '```' → logprob: -14.875344276428223
    6. '        
' → logprob: -15.000344276428223
    7. '   ' → logprob: -15.750344276428223
    8. ',' → logprob: -15.875344276428223
    9. ' lines' → logprob: -16.000343322753906
    10. '           ' → logprob: -16.750343322753906

Token 366: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2573607563972473
    2. ' for' → logprob: -1.5073606967926025
    3. '       ' → logprob: -5.257360935211182
    4. ' lines' → logprob: -8.632360458374023
    5. 'lines' → logprob: -10.507360458374023
    6. '```' → logprob: -13.632360458374023
    7. '   ' → logprob: -15.007360458374023
    8. '	for' → logprob: -15.507360458374023
    9. '
' → logprob: -15.757360458374023
    10. 'stones' → logprob: -16.757360458374023

Token 367: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.10020915418863297
    2. ' line' → logprob: -2.3502092361450195
    3. 'lines' → logprob: -13.47520923614502
    4. '	line' → logprob: -14.97520923614502
    5. '_line' → logprob: -15.60020923614502
    6. ' lines' → logprob: -15.85020923614502
    7. '   ' → logprob: -16.725208282470703
    8. 'Line' → logprob: -16.725208282470703
    9. '[line' → logprob: -16.725208282470703
    10. ' ' → logprob: -16.975208282470703

Token 368: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012530720792710781
    2. 'in' → logprob: -4.38753080368042
    3. ' ' → logprob: -10.887530326843262
    4. '_in' → logprob: -14.512530326843262
    5. 's' → logprob: -14.637530326843262
    6. '	in' → logprob: -15.012530326843262
    7. 'import' → logprob: -15.637530326843262
    8. '   ' → logprob: -15.825030326843262
    9. ')' → logprob: -16.262531280517578
    10. '  ' → logprob: -16.637531280517578

Token 369: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.16023123264312744
    2. ' board' → logprob: -1.9102312326431274
    3. '(board' → logprob: -12.285231590270996
    4. '   ' → logprob: -13.410231590270996
    5. '	board' → logprob: -14.160231590270996
    6. '.board' → logprob: -15.785231590270996
    7. ' ' → logprob: -17.16023063659668
    8. '       ' → logprob: -17.66023063659668
    9. 'b' → logprob: -18.16023063659668
    10. 'boards' → logprob: -18.53523063659668

Token 370: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -6.182190554682165e-05
    2. '.' → logprob: -9.750061988830566
    3. ' .' → logprob: -12.875061988830566
    4. '.line' → logprob: -14.750061988830566
    5. '	lines' → logprob: -16.12506103515625
    6. '.rows' → logprob: -16.25006103515625
    7. '.l' → logprob: -16.50006103515625
    8. ' lines' → logprob: -16.62506103515625
    9. '(lines' → logprob: -17.00006103515625
    10. 'lines' → logprob: -17.37506103515625

Token 371: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.005285576917231083
    2. '():
' → logprob: -5.255285739898682
    3. ':' → logprob: -11.005285263061523
    4. '()' → logprob: -11.005285263061523
    5. ' ():' → logprob: -11.380285263061523
    6. '():
' → logprob: -11.880285263061523
    7. '(' → logprob: -16.755285263061523
    8. '():

' → logprob: -16.880285263061523
    9. '       ' → logprob: -17.005285263061523
    10. '()):
' → logprob: -17.130285263061523

Token 372: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013841889798641205
    2. '       ' → logprob: -5.1388421058654785
    3. ' if' → logprob: -5.6388421058654785
    4. '<|end|>' → logprob: -5.6388421058654785
    5. ':' → logprob: -8.38884162902832
    6. '<|end|>' → logprob: -9.26384162902832
    7. 'if' → logprob: -9.51384162902832
    8. '   ' → logprob: -9.76384162902832
    9. ',' → logprob: -9.88884162902832
    10. '        ' → logprob: -10.13884162902832

Token 373: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4854155480861664
    2. ' if' → logprob: -0.9854155778884888
    3. '           ' → logprob: -4.485415458679199
    4. '               ' → logprob: -13.3604154586792
    5. '   ' → logprob: -15.7354154586792
    6. 'If' → logprob: -15.9854154586792
    7. '       ' → logprob: -16.360416412353516
    8. '```' → logprob: -16.610416412353516
    9. '          ' → logprob: -16.860416412353516
    10. '            
' → logprob: -16.985416412353516

Token 374: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.07926219701766968
    2. ' all' → logprob: -2.5792622566223145
    3. 'len' → logprob: -8.329261779785156
    4. 'line' → logprob: -9.704261779785156
    5. ' len' → logprob: -10.454261779785156
    6. '   ' → logprob: -11.329261779785156
    7. ' ' → logprob: -12.079261779785156
    8. '           ' → logprob: -12.204261779785156
    9. ' line' → logprob: -12.454261779785156
    10. '	all' → logprob: -12.579261779785156

Token 375: '(cell' (ID: 46188)
  Prédit: '(cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cell' → logprob: -0.0002584785979706794
    2. '(s' → logprob: -8.750258445739746
    3. '(st' → logprob: -9.375258445739746
    4. '(c' → logprob: -11.250258445739746
    5. '(token' → logprob: -13.625258445739746
    6. 'cell' → logprob: -15.250258445739746
    7. '[cell' → logprob: -15.375258445739746
    8. '(' → logprob: -15.625258445739746
    9. '(symbol' → logprob: -15.750258445739746
    10. ' cell' → logprob: -16.250259399414062

Token 376: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2519491910934448
    2. ' ==' → logprob: -1.5019491910934448
    3. '==
' → logprob: -11.626949310302734
    4. '=' → logprob: -11.751949310302734
    5. '===' → logprob: -13.376949310302734
    6. ')==' → logprob: -14.501949310302734
    7. ')' → logprob: -15.251949310302734
    8. '[' → logprob: -15.501949310302734
    9. ']==' → logprob: -16.001949310302734
    10. '=='' → logprob: -16.001949310302734

Token 377: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3484658896923065
    2. ' self' → logprob: -1.223465919494629
    3. ' ' → logprob: -12.473465919494629
    4. ''' → logprob: -12.598465919494629
    5. '(self' → logprob: -12.848465919494629
    6. ' f' → logprob: -13.098465919494629
    7. '`' → logprob: -13.473465919494629
    8. 'f' → logprob: -13.598465919494629
    9. '	self' → logprob: -13.973465919494629
    10. ' ' → logprob: -14.098465919494629

Token 378: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -0.00034118397161364555
    2. '.' → logprob: -8.000341415405273
    3. ' .' → logprob: -12.625341415405273
    4. 'stone' → logprob: -13.375341415405273
    5. '.s' → logprob: -15.375341415405273
    6. '.token' → logprob: -16.000341415405273
    7. '.St' → logprob: -16.250341415405273
    8. '.stroke' → logprob: -16.375341415405273
    9. '	st' → logprob: -16.750341415405273
    10. 'st' → logprob: -16.875341415405273

Token 379: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -3.9650025428272784e-05
    2. 'stone' → logprob: -10.500040054321289
    3. ' one' → logprob: -13.250040054321289
    4. '```' → logprob: -13.375040054321289
    5. 'ones' → logprob: -13.625040054321289
    6. 'o' → logprob: -13.625040054321289
    7. '.one' → logprob: -14.125040054321289
    8. 'ne' → logprob: -14.125040054321289
    9. 'on' → logprob: -14.125040054321289
    10. '   ' → logprob: -14.375040054321289

Token 380: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.008464460261166096
    2. 'for' → logprob: -4.883464336395264
    3. ' and' → logprob: -7.633464336395264
    4. ' ' → logprob: -8.258464813232422
    5. ')' → logprob: -9.633464813232422
    6. 'and' → logprob: -10.133464813232422
    7. ' or' → logprob: -12.633464813232422
    8. '    ' → logprob: -13.383464813232422
    9. ' )' → logprob: -13.383464813232422
    10. '   ' → logprob: -13.633464813232422

Token 381: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.4740859866142273
    2. ' cell' → logprob: -0.9740859866142273
    3. 'cel' → logprob: -12.224085807800293
    4. '	cell' → logprob: -13.099085807800293
    5. ' ' → logprob: -14.099085807800293
    6. '(cell' → logprob: -14.724085807800293
    7. '_cell' → logprob: -15.224085807800293
    8. 'token' → logprob: -15.349085807800293
    9. '[cell' → logprob: -16.09908676147461
    10. '.cell' → logprob: -16.97408676147461

Token 382: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004156987648457289
    2. 'in' → logprob: -5.504157066345215
    3. ' ' → logprob: -9.754157066345215
    4. '<|end|>' → logprob: -12.004157066345215
    5. ')' → logprob: -12.129157066345215
    6. ' line' → logprob: -12.504157066345215
    7. 'line' → logprob: -13.254157066345215
    8. ' )' → logprob: -13.629157066345215
    9. ' cell' → logprob: -14.004157066345215
    10. 'cell' → logprob: -14.129157066345215

Token 383: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.31326499581336975
    2. ' line' → logprob: -1.3132649660110474
    3. ' ' → logprob: -13.188264846801758
    4. '	line' → logprob: -15.063264846801758
    5. 'cell' → logprob: -15.313264846801758
    6. '(line' → logprob: -15.438264846801758
    7. ')' → logprob: -15.813264846801758
    8. ' cell' → logprob: -15.938264846801758
    9. '[line' → logprob: -15.938264846801758
    10. '
' → logprob: -16.438264846801758

Token 384: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26223674416542053
    2. '):' → logprob: -1.5122367143630981
    3. '):
' → logprob: -4.637236595153809
    4. '           ' → logprob: -8.262236595153809
    5. ' )' → logprob: -8.762236595153809
    6. ' ):' → logprob: -9.387236595153809
    7. '):
' → logprob: -10.887236595153809
    8. '               ' → logprob: -10.887236595153809
    9. '):

' → logprob: -11.762236595153809
    10. ' and' → logprob: -11.887236595153809

Token 385: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006872945814393461
    2. ' return' → logprob: -8.000687599182129
    3. '           ' → logprob: -8.875687599182129
    4. ':' → logprob: -9.125687599182129
    5. ':
' → logprob: -10.250687599182129
    6. 'return' → logprob: -10.375687599182129
    7. ':return' → logprob: -11.000687599182129
    8. '              ' → logprob: -12.625687599182129
    9. '
' → logprob: -12.625687599182129
    10. ' and' → logprob: -12.750687599182129

Token 386: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.017255060374736786
    2. '               ' → logprob: -4.767254829406738
    3. ' return' → logprob: -4.767254829406738
    4. '           ' → logprob: -9.767254829406738
    5. '                   ' → logprob: -10.142254829406738
    6. ':return' → logprob: -13.642254829406738
    7. '   ' → logprob: -14.142254829406738
    8. '{return' → logprob: -14.392254829406738
    9. '	return' → logprob: -14.892254829406738
    10. '       ' → logprob: -17.017255783081055

Token 387: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01416350994259119
    2. ' self' → logprob: -4.264163494110107
    3. '(self' → logprob: -18.764163970947266
    4. '[self' → logprob: -20.139163970947266
    5. '	self' → logprob: -20.389163970947266
    6. '           ' → logprob: -21.264163970947266
    7. 'Self' → logprob: -21.639163970947266
    8. ' ' → logprob: -21.889163970947266
    9. '   ' → logprob: -22.139163970947266
    10. '$self' → logprob: -22.639163970947266

Token 388: '.st' (ID: 1980)
  Prédit: '.st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.st' → logprob: -1.1994775377388578e-05
    2. 'stone' → logprob: -11.500012397766113
    3. '.' → logprob: -13.625012397766113
    4. ' .' → logprob: -15.000012397766113
    5. 'st' → logprob: -16.625011444091797
    6. '.stroke' → logprob: -17.000011444091797
    7. '	st' → logprob: -17.000011444091797
    8. 'ston' → logprob: -17.750011444091797
    9. '.s' → logprob: -18.000011444091797
    10. 'Stone' → logprob: -18.625011444091797

Token 389: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -1.771655115589965e-05
    2. 'stone' → logprob: -11.000018119812012
    3. 'o' → logprob: -14.625018119812012
    4. 'on' → logprob: -16.250017166137695
    5. '```' → logprob: -16.375017166137695
    6. 'One' → logprob: -16.500017166137695
    7. 'ones' → logprob: -16.875017166137695
    8. 'ore' → logprob: -17.000017166137695
    9. '_one' → logprob: -17.000017166137695
    10. 'ONE' → logprob: -17.375017166137695

Token 390: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28189411759376526
    2. '
' → logprob: -1.6568940877914429
    3. 'return' → logprob: -3.2818942070007324
    4. 'None' → logprob: -4.406894207000732
    5. '<|end|>' → logprob: -5.406894207000732
    6. ' return' → logprob: -8.031893730163574
    7. '        
' → logprob: -8.906893730163574
    8. ' None' → logprob: -10.031893730163574
    9. '   ' → logprob: -10.531893730163574
    10. '
' → logprob: -11.031893730163574

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08599941432476044
    2. 'return' → logprob: -3.0859994888305664
    3. '
' → logprob: -3.8359994888305664
    4. 'None' → logprob: -4.335999488830566
    5. '<|end|>' → logprob: -7.085999488830566
    6. ' return' → logprob: -7.460999488830566
    7. ' None' → logprob: -8.585999488830566
    8. '+' → logprob: -9.210999488830566
    9. '        
' → logprob: -9.585999488830566
    10. '```' → logprob: -9.710999488830566

Token 392: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3141985535621643
    2. 'None' → logprob: -1.3141984939575195
    3. '       ' → logprob: -7.5641984939575195
    4. ' return' → logprob: -8.43919849395752
    5. '
' → logprob: -8.93919849395752
    6. ' None' → logprob: -9.81419849395752
    7. '   ' → logprob: -11.43919849395752
    8. '        
' → logprob: -13.06419849395752
    9. '	return' → logprob: -14.06419849395752
    10. 'null' → logprob: -15.18919849395752

Token 393: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.006715370807796717
    2. ' None' → logprob: -5.006715297698975
    3. '_None' → logprob: -21.381715774536133
    4. '(None' → logprob: -22.006715774536133
    5. 'none' → logprob: -22.756715774536133
    6. ' ' → logprob: -23.131715774536133
    7. ',None' → logprob: -23.256715774536133
    8. '=None' → logprob: -23.381715774536133
    9. '.None' → logprob: -23.881715774536133
    10. '   ' → logprob: -24.006715774536133

Token 394: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 395: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.000453910295618698
    2. '
' → logprob: -7.750453948974609
    3. ' class' → logprob: -11.12545394897461
    4. '<|end|>' → logprob: -13.25045394897461
    5. '  
' → logprob: -13.37545394897461
    6. '

' → logprob: -13.87545394897461
    7. '    
' → logprob: -14.25045394897461
    8. '+
' → logprob: -14.37545394897461
    9. '"class' → logprob: -14.50045394897461
    10. '+' → logprob: -14.87545394897461

Token 396: ' Game' (ID: 7022)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -1.2890386581420898
    2. 'T' → logprob: -1.7890386581420898
    3. ' Game' → logprob: -1.7890386581420898
    4. 'Draw' → logprob: -2.16403865814209
    5. ' Draw' → logprob: -2.78903865814209
    6. ' Tic' → logprob: -2.78903865814209
    7. 'Composite' → logprob: -3.78903865814209
    8. ' Gom' → logprob: -3.91403865814209
    9. 'Board' → logprob: -4.03903865814209
    10. ' Composite' → logprob: -4.28903865814209

Token 397: 'Result' (ID: 2769)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038413356989622116
    2. 'State' → logprob: -3.7884132862091064
    3. ':
' → logprob: -4.4134135246276855
    4. 'Engine' → logprob: -6.7884135246276855
    5. 'Manager' → logprob: -7.5384135246276855
    6. 'Status' → logprob: -7.7884135246276855
    7. '():' → logprob: -8.788413047790527
    8. 'Controller' → logprob: -8.913413047790527
    9. 'States' → logprob: -9.038413047790527
    10. 'Logic' → logprob: -9.038413047790527

Token 398: 'Resolver' (ID: 22540)
  Prédit: 'Checker'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Checker' → logprob: -0.9627056121826172
    2. '(Enum' → logprob: -1.2127056121826172
    3. ':
' → logprob: -1.3377056121826172
    4. '(' → logprob: -3.087705612182617
    5. ':' → logprob: -4.962705612182617
    6. '(enum' → logprob: -5.337705612182617
    7. 'Type' → logprob: -8.462705612182617
    8. 'Status' → logprob: -8.712705612182617
    9. ':

' → logprob: -9.212705612182617
    10. '_checker' → logprob: -9.712705612182617

Token 399: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004587245639413595
    2. '(' → logprob: -5.504587173461914
    3. ':
' → logprob: -7.629587173461914
    4. ' :' → logprob: -11.129587173461914
    5. '(Abstract' → logprob: -12.754587173461914
    6. ':

' → logprob: -13.254587173461914
    7. '():' → logprob: -14.504587173461914
    8. '<|end|>' → logprob: -14.504587173461914
    9. '(Game' → logprob: -15.129587173461914
    10. '(W' → logprob: -15.129587173461914

Token 400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003078142472077161
    2. 'def' → logprob: -8.7503080368042
    3. ' def' → logprob: -8.8753080368042
    4. '    
' → logprob: -12.5003080368042
    5. 'class' → logprob: -13.5003080368042
    6. 'IND' → logprob: -13.7503080368042
    7. '    ' → logprob: -13.8753080368042
    8. '```' → logprob: -14.3753080368042
    9. '   ' → logprob: -14.5003080368042
    10. ':' → logprob: -15.1253080368042

Token 401: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.47528785467147827
    2. ' def' → logprob: -0.9752878546714783
    3. '   ' → logprob: -7.350287914276123
    4. 'WIN' → logprob: -7.725287914276123
    5. ' WIN' → logprob: -9.350287437438965
    6. 'class' → logprob: -10.975287437438965
    7. '	def' → logprob: -11.850287437438965
    8. 'SIZE' → logprob: -12.725287437438965
    9. 'CHECK' → logprob: -13.100287437438965
    10. 'STONE' → logprob: -13.225287437438965

Token 402: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.010205532424151897
    2. ' def' → logprob: -4.7602057456970215
    3. '__' → logprob: -6.5102057456970215
    4. ' ' → logprob: -10.010205268859863
    5. 'def' → logprob: -10.885205268859863
    6. ' ___' → logprob: -11.260205268859863
    7. '_' → logprob: -11.385205268859863
    8. ' _' → logprob: -12.260205268859863
    9. ' ' → logprob: -13.010205268859863
    10. '_init' → logprob: -13.010205268859863

Token 403: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0001307142956648022
    2. 'it' → logprob: -10.125130653381348
    3. 'def' → logprob: -10.250130653381348
    4. '__' → logprob: -10.375130653381348
    5. 'class' → logprob: -12.125130653381348
    6. '_init' → logprob: -12.625130653381348
    7. '   ' → logprob: -12.625130653381348
    8. '```' → logprob: -12.625130653381348
    9. 'nit' → logprob: -13.000130653381348
    10. ' init' → logprob: -13.250130653381348

Token 404: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01644757390022278
    2. '__(' → logprob: -4.2664475440979
    3. ' (' → logprob: -6.1414475440979
    4. '(' → logprob: -9.766448020935059
    5. '__(
' → logprob: -10.766448020935059
    6. '__' → logprob: -11.141448020935059
    7. '(
' → logprob: -11.516448020935059
    8. 'self' → logprob: -11.766448020935059
    9. ' ' → logprob: -12.516448020935059
    10. '
' → logprob: -12.766448020935059

Token 405: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.0484450437361374e-05
    2. ' self' → logprob: -10.875040054321289
    3. '
' → logprob: -11.500040054321289
    4. ')' → logprob: -12.250040054321289
    5. '       ' → logprob: -12.250040054321289
    6. '):
' → logprob: -14.250040054321289
    7. '(self' → logprob: -14.625040054321289
    8. '   ' → logprob: -15.250040054321289
    9. ',' → logprob: -16.00004005432129
    10. '[' → logprob: -16.62504005432129

Token 406: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04943515732884407
    2. 'self' → logprob: -3.1744351387023926
    3. '):' → logprob: -6.049435138702393
    4. '):
' → logprob: -6.299435138702393
    5. ')' → logprob: -6.924435138702393
    6. ' ,' → logprob: -7.799435138702393
    7. '(self' → logprob: -8.29943561553955
    8. ' self' → logprob: -8.67443561553955
    9. '   ' → logprob: -9.42443561553955
    10. ',self' → logprob: -9.42443561553955

Token 407: ' board' (ID: 6796)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.2260969877243042
    2. ' check' → logprob: -1.8510969877243042
    3. 'win' → logprob: -3.8510971069335938
    4. 'winner' → logprob: -3.9760971069335938
    5. 'board' → logprob: -5.851097106933594
    6. ' winner' → logprob: -6.976097106933594
    7. 'checker' → logprob: -7.726097106933594
    8. ' win' → logprob: -7.851097106933594
    9. ' board' → logprob: -9.101097106933594
    10. 'w' → logprob: -9.226097106933594

Token 408: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.869017852295656e-06
    2. ',' → logprob: -12.375006675720215
    3. ')' → logprob: -13.625006675720215
    4. '):' → logprob: -13.875006675720215
    5. '_:' → logprob: -14.875006675720215
    6. ' :' → logprob: -15.625006675720215
    7. '   ' → logprob: -17.75000762939453
    8. '):
' → logprob: -18.37500762939453
    9. '```' → logprob: -18.50000762939453
    10. ':,' → logprob: -19.25000762939453

Token 409: ' Board' (ID: 10837)
  Prédit: 'Board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Board' → logprob: -0.3869015872478485
    2. ' Board' → logprob: -1.136901617050171
    3. ')' → logprob: -11.76190185546875
    4. '   ' → logprob: -11.76190185546875
    5. 'Optional' → logprob: -11.76190185546875
    6. '(Board' → logprob: -13.13690185546875
    7. ' ' → logprob: -13.26190185546875
    8. ' Optional' → logprob: -13.76190185546875
    9. '  ' → logprob: -14.26190185546875
    10. '    ' → logprob: -14.51190185546875

Token 410: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07268797606229782
    2. ')' → logprob: -2.697687864303589
    3. '):' → logprob: -5.947688102722168
    4. '):
' → logprob: -9.322688102722168
    5. '   ' → logprob: -10.572688102722168
    6. ',)' → logprob: -12.072688102722168
    7. ' )' → logprob: -12.322688102722168
    8. ',
' → logprob: -12.447688102722168
    9. ' ,' → logprob: -12.697688102722168
    10. '       ' → logprob: -13.447688102722168

Token 411: ' ->' (ID: 2747)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29519417881965637
    2. ':' → logprob: -1.545194149017334
    3. '       ' → logprob: -4.045194149017334
    4. '   ' → logprob: -4.295194149017334
    5. ':
' → logprob: -4.920194149017334
    6. ')' → logprob: -5.795194149017334
    7. ' ->' → logprob: -7.920194149017334
    8. '):
' → logprob: -8.920194625854492
    9. '):' → logprob: -9.045194625854492
    10. '->' → logprob: -9.795194625854492

Token 412: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.6931474208831787
    2. 'None' → logprob: -0.6931474208831787
    3. '   ' → logprob: -16.318147659301758
    4. '(None' → logprob: -17.443147659301758
    5. '_None' → logprob: -17.568147659301758
    6. ' ' → logprob: -17.568147659301758
    7. ' ' → logprob: -17.693147659301758
    8. '=None' → logprob: -17.818147659301758
    9. 'none' → logprob: -18.693147659301758
    10. ' none' → logprob: -18.943147659301758

Token 413: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4761030673980713
    2. ':
' → logprob: -0.9761030673980713
    3. '       ' → logprob: -6.476102828979492
    4. '):
' → logprob: -8.226102828979492
    5. '   ' → logprob: -9.101102828979492
    6. ',' → logprob: -9.726102828979492
    7. '):' → logprob: -11.726102828979492
    8. '<|end|>' → logprob: -11.976102828979492
    9. '():
' → logprob: -12.101102828979492
    10. ')' → logprob: -12.476102828979492

Token 414: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009730404708534479
    2. 'self' → logprob: -7.500973224639893
    3. '   ' → logprob: -8.125972747802734
    4. ' self' → logprob: -9.875972747802734
    5. '	' → logprob: -10.375972747802734
    6. '	self' → logprob: -10.750972747802734
    7. 'def' → logprob: -11.500972747802734
    8. '	   ' → logprob: -12.125972747802734
    9. '
' → logprob: -14.250972747802734
    10. ',' → logprob: -14.250972747802734

Token 415: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.031211843714118004
    2. '       ' → logprob: -3.5312118530273438
    3. ' self' → logprob: -6.531211853027344
    4. '   ' → logprob: -12.906211853027344
    5. '	self' → logprob: -15.531211853027344
    6. '```' → logprob: -16.406211853027344
    7. 'def' → logprob: -16.531211853027344
    8. '(self' → logprob: -16.656211853027344
    9. '
' → logprob: -16.781211853027344
    10. ' ' → logprob: -17.531211853027344

Token 416: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -0.0001307142956648022
    2. '.' → logprob: -9.000130653381348
    3. '.Board' → logprob: -13.000130653381348
    4. ' .' → logprob: -13.125130653381348
    5. '.b' → logprob: -13.375130653381348
    6. '._' → logprob: -14.125130653381348
    7. '.bo' → logprob: -15.125130653381348
    8. '.current' → logprob: -16.750131607055664
    9. '	board' → logprob: -16.875131607055664
    10. 'board' → logprob: -17.125131607055664

Token 417: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2255408763885498
    2. ' =' → logprob: -1.6005408763885498
    3. ':' → logprob: -9.350541114807129
    4. '   ' → logprob: -10.350541114807129
    5. '.board' → logprob: -12.850541114807129
    6. ' ' → logprob: -13.475541114807129
    7. '=
' → logprob: -13.600541114807129
    8. '.' → logprob: -13.600541114807129
    9. '       ' → logprob: -14.350541114807129
    10. '_board' → logprob: -14.725541114807129

Token 418: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.2519313097000122
    2. ' board' → logprob: -1.5019313097000122
    3. '	board' → logprob: -13.626931190490723
    4. '(board' → logprob: -15.251931190490723
    5. '   ' → logprob: -15.626931190490723
    6. '.board' → logprob: -15.876931190490723
    7. 'b' → logprob: -16.00193214416504
    8. '       ' → logprob: -16.37693214416504
    9. ' ' → logprob: -16.75193214416504
    10. ' ' → logprob: -17.00193214416504

Token 419: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0540454238653183
    2. '   ' → logprob: -3.0540454387664795
    3. '       ' → logprob: -5.5540452003479
    4. 'def' → logprob: -7.0540452003479
    5. '    
' → logprob: -8.054045677185059
    6. '

' → logprob: -8.429045677185059
    7. ' def' → logprob: -9.804045677185059
    8. '<|end|>' → logprob: -10.179045677185059
    9. '        
' → logprob: -10.804045677185059
    10. ',' → logprob: -11.429045677185059

Token 420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.65559321641922
    2. '   ' → logprob: -0.90559321641922
    3. '
' → logprob: -2.780593156814575
    4. 'def' → logprob: -4.655593395233154
    5. '    
' → logprob: -6.155593395233154
    6. ' def' → logprob: -6.655593395233154
    7. '<|end|>' → logprob: -7.405593395233154
    8. '        
' → logprob: -7.530593395233154
    9. ',' → logprob: -9.030592918395996
    10. '	def' → logprob: -9.280592918395996

Token 421: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.000505730917211622
    2. '       ' → logprob: -7.7505059242248535
    3. 'def' → logprob: -9.750505447387695
    4. ' self' → logprob: -11.125505447387695
    5. '   ' → logprob: -14.000505447387695
    6. '        
' → logprob: -14.625505447387695
    7. '
' → logprob: -14.750505447387695
    8. 'check' → logprob: -15.625505447387695
    9. '	self' → logprob: -16.500505447387695
    10. '           ' → logprob: -17.250505447387695

Token 422: '.check' (ID: 12631)
  Prédit: '.w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.w' → logprob: -0.4901643991470337
    2. '.check' → logprob: -0.9901643991470337
    3. '.win' → logprob: -4.740164279937744
    4. '.' → logprob: -5.490164279937744
    5. '._' → logprob: -6.240164279937744
    6. ' .' → logprob: -7.240164279937744
    7. '.st' → logprob: -8.740164756774902
    8. 'check' → logprob: -9.990164756774902
    9. '.result' → logprob: -10.490164756774902
    10. 'w' → logprob: -11.240164756774902

Token 423: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -1.259079363080673e-05
    2. 'er' → logprob: -11.375012397766113
    3. 's' → logprob: -14.750012397766113
    4. '_' → logprob: -14.750012397766113
    5. '```' → logprob: -15.875012397766113
    6. ' ers' → logprob: -16.37501335144043
    7. '[' → logprob: -17.75001335144043
    8. '\' → logprob: -18.25001335144043
    9. '_handlers' → logprob: -18.37501335144043
    10. '

' → logprob: -18.50001335144043

Token 424: ' =' (ID: 314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18115234375
    2. ' =' → logprob: -1.80615234375
    3. '=' → logprob: -7.05615234375
    4. ' :' → logprob: -7.55615234375
    5. '=[]' → logprob: -11.05615234375
    6. '[' → logprob: -13.43115234375
    7. '[:]' → logprob: -13.55615234375
    8. ' ' → logprob: -13.80615234375
    9. 's' → logprob: -14.30615234375
    10. ':list' → logprob: -14.80615234375

Token 425: ' [
' (ID: 4240)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.17430004477500916
    2. '[' → logprob: -2.424299955368042
    3. ' [
' → logprob: -2.924299955368042
    4. ' [' → logprob: -4.424300193786621
    5. '[T' → logprob: -5.174300193786621
    6. '[self' → logprob: -10.174300193786621
    7. '[]' → logprob: -11.299300193786621
    8. '[int' → logprob: -12.424300193786621
    9. '[List' → logprob: -12.549300193786621
    10. '[t' → logprob: -12.799300193786621

Token 426: '           ' (ID: 352)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.027557391673326492
    2. ' Tic' → logprob: -3.902557373046875
    3. '       ' → logprob: -5.402557373046875
    4. '           ' → logprob: -6.027557373046875
    5. '   ' → logprob: -10.527557373046875
    6. ' T' → logprob: -11.152557373046875
    7. '               ' → logprob: -11.777557373046875
    8. '	T' → logprob: -11.902557373046875
    9. '
' → logprob: -12.027557373046875
    10. ' ' → logprob: -13.402557373046875

Token 427: ' Tic' (ID: 111968)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -7.896309739408025e-07
    2. '       ' → logprob: -15.125000953674316
    3. '   ' → logprob: -15.375000953674316
    4. '           ' → logprob: -16.5
    5. '
' → logprob: -16.625
    6. ' Tic' → logprob: -17.125
    7. '

' → logprob: -18.375
    8. '        
' → logprob: -18.75
    9. '(T' → logprob: -19.0
    10. '[T' → logprob: -19.25

Token 428: 'Tac' (ID: 112548)
  Prédit: 'Tac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tac' → logprob: -1.0280383548888494e-06
    2. 'T' → logprob: -14.375000953674316
    3. ' Tac' → logprob: -15.375000953674316
    4. 'Tak' → logprob: -16.125001907348633
    5. 'Pac' → logprob: -17.625001907348633
    6. 'Tat' → logprob: -19.125001907348633
    7. 'ac' → logprob: -20.000001907348633
    8. 'Sac' → logprob: -20.375001907348633
    9. '```' → logprob: -20.625001907348633
    10. '-T' → logprob: -21.125001907348633

Token 429: 'Toe' (ID: 121312)
  Prédit: 'Toe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Toe' → logprob: -6.051066520740278e-05
    2. 'To' → logprob: -9.750060081481934
    3. 'Tac' → logprob: -13.750060081481934
    4. 'T' → logprob: -14.375060081481934
    5. ' Toe' → logprob: -15.500060081481934
    6. 'Tou' → logprob: -16.00006103515625
    7. 'e' → logprob: -16.87506103515625
    8. 'toe' → logprob: -17.37506103515625
    9. 'Tie' → logprob: -17.37506103515625
    10. 'The' → logprob: -17.50006103515625

Token 430: 'Winner' (ID: 71196)
  Prédit: 'Winner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Winner' → logprob: -3.128163257315464e-07
    2. 'winner' → logprob: -15.375
    3. ' Winner' → logprob: -16.875
    4. 'Win' → logprob: -17.625
    5. '
' → logprob: -17.875
    6. 'W' → logprob: -18.125
    7. ' winner' → logprob: -18.75
    8. 'a' → logprob: -19.625
    9. 'Winning' → logprob: -19.625
    10. '```' → logprob: -20.0

Token 431: 'Checker' (ID: 39016)
  Prédit: 'Checker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Checker' → logprob: -3.273621405242011e-05
    2. 'checker' → logprob: -10.375032424926758
    3. 'Check' → logprob: -14.375032424926758
    4. ' checker' → logprob: -15.375032424926758
    5. ' Checker' → logprob: -15.375032424926758
    6. '_checker' → logprob: -16.125032424926758
    7. 'Che' → logprob: -16.250032424926758
    8. 'er' → logprob: -16.750032424926758
    9. 'Checking' → logprob: -17.250032424926758
    10. 'Chooser' → logprob: -17.375032424926758

Token 432: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.0020742492051795e-05
    2. '(St' → logprob: -10.250049591064453
    3. '(st' → logprob: -12.125049591064453
    4. '(S' → logprob: -12.875049591064453
    5. '(Board' → logprob: -13.250049591064453
    6. '('' → logprob: -13.375049591064453
    7. 'Stone' → logprob: -13.750049591064453
    8. '(ST' → logprob: -14.125049591064453
    9. '(T' → logprob: -15.000049591064453
    10. '(
' → logprob: -15.125049591064453

Token 433: 'Stone' (ID: 56062)
  Prédit: 'Stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stone' → logprob: -3.166338137816638e-05
    2. ' Stone' → logprob: -10.875031471252441
    3. 'St' → logprob: -11.375031471252441
    4. '
' → logprob: -14.125031471252441
    5. '   ' → logprob: -15.000031471252441
    6. 'Board' → logprob: -16.750032424926758
    7. 'Stroke' → logprob: -17.000032424926758
    8. ' ' → logprob: -17.500032424926758
    9. 'Stan' → logprob: -17.750032424926758
    10. 'Sto' → logprob: -18.250032424926758

Token 434: '.BLACK' (ID: 87627)
  Prédit: '.BLACK'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.BLACK' → logprob: -0.0016403080662712455
    2. '.' → logprob: -6.501640319824219
    3. '.WHITE' → logprob: -9.126640319824219
    4. '.B' → logprob: -11.126640319824219
    5. 'BLACK' → logprob: -11.626640319824219
    6. '.BL' → logprob: -12.876640319824219
    7. '.Black' → logprob: -13.126640319824219
    8. ' .' → logprob: -15.126640319824219
    9. '.black' → logprob: -15.626640319824219
    10. '.BLUE' → logprob: -15.751640319824219

Token 435: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.04934370145201683
    2. '),' → logprob: -3.0493435859680176
    3. ' ),
' → logprob: -7.674343585968018
    4. ')' → logprob: -8.549344062805176
    5. '),

' → logprob: -9.549344062805176
    6. ' ),' → logprob: -11.299344062805176
    7. '),
' → logprob: -11.299344062805176
    8. '   ' → logprob: -14.424344062805176
    9. ')
' → logprob: -15.049344062805176
    10. ' ' → logprob: -15.424344062805176

Token 436: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09802025556564331
    2. 'T' → logprob: -2.598020315170288
    3. ' Tic' → logprob: -3.973020315170288
    4. '       ' → logprob: -9.098020553588867
    5. ' T' → logprob: -11.473020553588867
    6. '   ' → logprob: -12.723020553588867
    7. '	T' → logprob: -13.348020553588867
    8. '               ' → logprob: -13.473020553588867
    9. '          ' → logprob: -13.473020553588867
    10. 'Tac' → logprob: -14.098020553588867

Token 437: ' Tic' (ID: 111968)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.13945259153842926
    2. ' Tic' → logprob: -2.1394526958465576
    3. '           ' → logprob: -4.3894524574279785
    4. '   ' → logprob: -11.014452934265137
    5. '       ' → logprob: -11.639452934265137
    6. '               ' → logprob: -12.014452934265137
    7. '	T' → logprob: -12.764452934265137
    8. ' T' → logprob: -13.889452934265137
    9. 'Tik' → logprob: -14.014452934265137
    10. 'Tac' → logprob: -14.389452934265137

Token 438: 'Tac' (ID: 112548)
  Prédit: 'Tac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tac' → logprob: -1.0280383548888494e-06
    2. 'Tak' → logprob: -14.875000953674316
    3. 'ac' → logprob: -15.000000953674316
    4. 'T' → logprob: -16.250001907348633
    5. ' Tac' → logprob: -16.375001907348633
    6. 'Tec' → logprob: -16.625001907348633
    7. 'Pac' → logprob: -18.750001907348633
    8. 'Ac' → logprob: -18.875001907348633
    9. 'Tre' → logprob: -19.000001907348633
    10. 'Tat' → logprob: -19.375001907348633

Token 439: 'Toe' (ID: 121312)
  Prédit: 'Toe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Toe' → logprob: -5.514650183613412e-05
    2. 'Tac' → logprob: -10.125055313110352
    3. 'To' → logprob: -11.750055313110352
    4. 'e' → logprob: -12.750055313110352
    5. ' Toe' → logprob: -13.125055313110352
    6. 'toe' → logprob: -13.750055313110352
    7. 'T' → logprob: -14.875055313110352
    8. 'Tone' → logprob: -15.000055313110352
    9. 'o' → logprob: -15.250055313110352
    10. 'oe' → logprob: -16.37505531311035

Token 440: 'Winner' (ID: 71196)
  Prédit: 'Winner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Winner' → logprob: -0.0001246348983841017
    2. 'Checker' → logprob: -9.00012493133545
    3. 'winner' → logprob: -14.62512493133545
    4. 'WIN' → logprob: -14.62512493133545
    5. ' Winner' → logprob: -15.75012493133545
    6. 'Win' → logprob: -16.000123977661133
    7. 'White' → logprob: -17.750123977661133
    8. ' winner' → logprob: -18.000123977661133
    9. 'Opponent' → logprob: -18.875123977661133
    10. 'W' → logprob: -19.000123977661133

Token 441: 'Checker' (ID: 39016)
  Prédit: 'Checker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Checker' → logprob: -1.8624639324116288e-06
    2. 'checker' → logprob: -13.500001907348633
    3. 'Winner' → logprob: -15.250001907348633
    4. 'er' → logprob: -17.125001907348633
    5. ' Checker' → logprob: -17.125001907348633
    6. ' checker' → logprob: -17.625001907348633
    7. 'Check' → logprob: -17.875001907348633
    8. 'o' → logprob: -18.000001907348633
    9. '_checker' → logprob: -18.125001907348633
    10. 'Chooser' → logprob: -18.625001907348633

Token 442: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '(
' → logprob: -17.375
    3. ' (' → logprob: -18.5
    4. '(St' → logprob: -18.625
    5. '(ST' → logprob: -20.625
    6. '(

' → logprob: -20.75
    7. '((' → logprob: -22.25
    8. '(
' → logprob: -22.875
    9. '(T' → logprob: -23.0
    10. '(st' → logprob: -23.25

Token 443: 'Stone' (ID: 56062)
  Prédit: 'Stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stone' → logprob: -3.666993507067673e-05
    2. ' Stone' → logprob: -10.250036239624023
    3. '(' → logprob: -13.750036239624023
    4. 'stone' → logprob: -16.500036239624023
    5. 'STONE' → logprob: -16.500036239624023
    6. ' stone' → logprob: -17.125036239624023
    7. '   ' → logprob: -17.625036239624023
    8. 'St' → logprob: -18.125036239624023
    9. ' ' → logprob: -19.000036239624023
    10. ')' → logprob: -19.375036239624023

Token 444: '.WHITE' (ID: 75459)
  Prédit: '.WHITE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.WHITE' → logprob: -0.00012023169983876869
    2. '.' → logprob: -9.500120162963867
    3. '.BLACK' → logprob: -10.625120162963867
    4. 'WHITE' → logprob: -10.875120162963867
    5. '.White' → logprob: -13.875120162963867
    6. '.W' → logprob: -14.000120162963867
    7. '.white' → logprob: -15.375120162963867
    8. ' .' → logprob: -17.500120162963867
    9. '_WHITE' → logprob: -17.875120162963867
    10. ' WHITE' → logprob: -18.500120162963867

Token 445: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16396814584732056
    2. '),' → logprob: -2.163968086242676
    3. '),
' → logprob: -3.913968086242676
    4. ')]' → logprob: -4.413968086242676
    5. ')
' → logprob: -5.538968086242676
    6. '       ' → logprob: -8.913968086242676
    7. ')],' → logprob: -9.038968086242676
    8. ')])' → logprob: -9.538968086242676
    9. '   ' → logprob: -10.913968086242676
    10. '))' → logprob: -11.913968086242676

Token 446: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11355810612440109
    2. ']' → logprob: -2.238558053970337
    3. '   ' → logprob: -7.988558292388916
    4. 'Stone' → logprob: -8.363557815551758
    5. 'T' → logprob: -9.363557815551758
    6. ' Stone' → logprob: -10.238557815551758
    7. ']
' → logprob: -11.238557815551758
    8. '           ' → logprob: -11.488557815551758
    9. ']

' → logprob: -12.113557815551758
    10. ' ]' → logprob: -12.238557815551758

Token 447: ' ]

' (ID: 32229)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010916478000581264
    2. '   ' → logprob: -4.760916709899902
    3. '       ' → logprob: -6.260916709899902
    4. 'Stone' → logprob: -9.135916709899902
    5. ']
' → logprob: -9.260916709899902
    6. 'T' → logprob: -9.260916709899902
    7. ']

' (adapté à ' ]

') → logprob: -9.885916709899902
    8. ' Stone' → logprob: -10.760916709899902
    9. ' ]' → logprob: -11.260916709899902
    10. '  ' → logprob: -13.635916709899902

Token 448: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002130514243617654
    2. '   ' → logprob: -6.502130508422852
    3. ' def' → logprob: -7.377130508422852
    4. '
' → logprob: -13.127130508422852
    5. '```' → logprob: -15.752130508422852
    6. '    
' → logprob: -15.877130508422852
    7. '	def' → logprob: -16.00213050842285
    8. '<|end|>' → logprob: -16.62713050842285
    9. '@property' → logprob: -16.87713050842285
    10. ' ' → logprob: -17.87713050842285

Token 449: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.5048530030981055e-06
    2. ' def' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.250001907348633
    4. '
' → logprob: -21.500001907348633
    5. '    
' → logprob: -22.750001907348633
    6. 'de' → logprob: -23.625001907348633
    7. ' ' → logprob: -24.125001907348633
    8. 'from' → logprob: -24.250001907348633
    9. '@property' → logprob: -24.375001907348633
    10. '```' → logprob: -24.500001907348633

Token 450: ' resolve' (ID: 14062)
  Prédit: 'resolve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resolve' → logprob: -0.027045253664255142
    2. 'det' → logprob: -4.027045249938965
    3. ' resolve' → logprob: -5.402045249938965
    4. 'get' → logprob: -5.527045249938965
    5. 'result' → logprob: -8.527045249938965
    6. ' get' → logprob: -9.902045249938965
    7. 'check' → logprob: -9.902045249938965
    8. 'detect' → logprob: -10.402045249938965
    9. ' determine' → logprob: -11.152045249938965
    10. 'evaluate' → logprob: -11.152045249938965

Token 451: '_w' (ID: 3567)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.688212614681106e-05
    2. '_result' → logprob: -11.750017166137695
    3. '(' → logprob: -12.000017166137695
    4. '()' → logprob: -13.750017166137695
    5. 'self' → logprob: -14.875017166137695
    6. ' (' → logprob: -15.000017166137695
    7. '(s' → logprob: -15.250017166137695
    8. 'result' → logprob: -16.125017166137695
    9. '_w' → logprob: -16.125017166137695
    10. '_game' → logprob: -16.125017166137695

Token 452: 'inner' (ID: 6484)
  Prédit: 'inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -0.000476190383778885
    2. 'in' → logprob: -8.125475883483887
    3. 'inn' → logprob: -9.500475883483887
    4. 'inning' → logprob: -10.125475883483887
    5. 'iner' → logprob: -10.875475883483887
    6. 'i' → logprob: -11.000475883483887
    7. 'inne' → logprob: -11.875475883483887
    8. ' inner' → logprob: -12.625475883483887
    9. '(inner' → logprob: -13.125475883483887
    10. 'inners' → logprob: -13.125475883483887

Token 453: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.991464786347933e-05
    2. '(' → logprob: -9.750060081481934
    3. ' (' → logprob: -13.750060081481934
    4. 'self' → logprob: -14.875060081481934
    5. '()' → logprob: -16.750059127807617
    6. '(s' → logprob: -17.250059127807617
    7. '   ' → logprob: -17.500059127807617
    8. '(sel' → logprob: -17.500059127807617
    9. '(se' → logprob: -18.125059127807617
    10. '       ' → logprob: -18.375059127807617

Token 454: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02686016634106636
    2. 'self' → logprob: -3.776860237121582
    3. '(self' → logprob: -5.651860237121582
    4. '):
' → logprob: -10.026860237121582
    5. '):' → logprob: -10.276860237121582
    6. ' )' → logprob: -12.401860237121582
    7. ' self' → logprob: -12.526860237121582
    8. '   ' → logprob: -12.526860237121582
    9. '       ' → logprob: -13.026860237121582
    10. ')(' → logprob: -14.151860237121582

Token 455: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.531699538230896
    2. '->' → logprob: -1.281699538230896
    3. ' ->' → logprob: -2.0316996574401855
    4. ')' → logprob: -5.9066996574401855
    5. 'self' → logprob: -7.1566996574401855
    6. '(' → logprob: -8.906699180603027
    7. '       ' → logprob: -10.906699180603027
    8. ')->' → logprob: -11.031699180603027
    9. ' (' → logprob: -11.281699180603027
    10. '   ' → logprob: -11.406699180603027

Token 456: ' str' (ID: 989)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.002476016292348504
    2. ' Optional' → logprob: -6.002476215362549
    3. 'str' → logprob: -16.25247573852539
    4. '(Optional' → logprob: -16.25247573852539
    5. '   ' → logprob: -16.37747573852539
    6. 'optional' → logprob: -17.37747573852539
    7. '	Optional' → logprob: -17.37747573852539
    8. 'None' → logprob: -17.87747573852539
    9. '_optional' → logprob: -20.37747573852539
    10. '       ' → logprob: -20.50247573852539

Token 457: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.21614666283130646
    2. ':' → logprob: -2.46614670753479
    3. '       ' → logprob: -2.59114670753479
    4. ':
' → logprob: -3.84114670753479
    5. '->' → logprob: -5.216146469116211
    6. '   ' → logprob: -5.216146469116211
    7. ' ->' → logprob: -6.716146469116211
    8. '(' → logprob: -7.841146469116211
    9. 'self' → logprob: -8.216146469116211
    10. ')' → logprob: -8.966146469116211

Token 458: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02904670499265194
    2. ' for' → logprob: -3.7790467739105225
    3. 'for' → logprob: -5.154046535491943
    4. '   ' → logprob: -12.654047012329102
    5. '```' → logprob: -13.029047012329102
    6. '
' → logprob: -13.779047012329102
    7. '           ' → logprob: -15.279047012329102
    8. '      ' → logprob: -15.279047012329102
    9. ':' → logprob: -15.654047012329102
    10. 'winner' → logprob: -15.779047012329102

Token 459: ' winner' (ID: 19499)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012362368404865265
    2. ' for' → logprob: -4.512362480163574
    3. '       ' → logprob: -6.637362480163574
    4. '   ' → logprob: -13.637362480163574
    5. '	for' → logprob: -15.012362480163574
    6. '"""' → logprob: -15.012362480163574
    7. '
' → logprob: -15.137362480163574
    8. 'result' → logprob: -15.137362480163574
    9. '```' → logprob: -15.387362480163574
    10. 'winner' (adapté à ' winner') → logprob: -15.637362480163574

Token 460: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055693525820970535
    2. '=' → logprob: -2.9306936264038086
    3. ' ' → logprob: -7.430693626403809
    4. ':' → logprob: -8.805693626403809
    5. '()' → logprob: -10.680693626403809
    6. '_' → logprob: -11.305693626403809
    7. '_result' → logprob: -11.430693626403809
    8. 's' → logprob: -12.555693626403809
    9. '=None' → logprob: -12.930693626403809
    10. '   ' → logprob: -13.055693626403809

Token 461: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0040373182855546474
    2. ' None' → logprob: -6.004037380218506
    3. 'next' → logprob: -6.504037380218506
    4. ' next' → logprob: -10.004036903381348
    5. '       ' → logprob: -11.379036903381348
    6. '   ' → logprob: -12.879036903381348
    7. 'self' → logprob: -13.504036903381348
    8. 'none' → logprob: -13.879036903381348
    9. '
' → logprob: -14.879036903381348
    10. '(None' → logprob: -15.504036903381348

Token 462: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004218128509819508
    2. '       ' → logprob: -6.379218101501465
    3. ' for' → logprob: -6.879218101501465
    4. '<|end|>' → logprob: -7.129218101501465
    5. 'for' → logprob: -8.129218101501465
    6. '        
' → logprob: -9.129218101501465
    7. ' 
' → logprob: -9.504218101501465
    8. '
' → logprob: -9.754218101501465
    9. '  
' → logprob: -10.379218101501465
    10. '    
' → logprob: -10.754218101501465

Token 463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6823059320449829
    2. ' for' → logprob: -0.9323059320449829
    3. 'for' → logprob: -2.3073058128356934
    4. '
' → logprob: -7.182305812835693
    5. '	for' → logprob: -8.557306289672852
    6. '<|end|>' → logprob: -9.182306289672852
    7. '   ' → logprob: -9.682306289672852
    8. '        
' → logprob: -9.932306289672852
    9. '	' → logprob: -10.057306289672852
    10. ' ' → logprob: -10.807306289672852

Token 464: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0837622731924057
    2. ' for' → logprob: -2.5837621688842773
    3. '       ' → logprob: -5.333762168884277
    4. '   ' → logprob: -10.958762168884277
    5. '	for' → logprob: -11.333762168884277
    6. '
' → logprob: -12.333762168884277
    7. ' ' → logprob: -14.583762168884277
    8. '        
' → logprob: -15.958762168884277
    9. '	' → logprob: -16.208763122558594
    10. '    ' → logprob: -16.333763122558594

Token 465: ' checker' (ID: 75924)
  Prédit: 'checker'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'checker' → logprob: -0.0019408921943977475
    2. ' checker' → logprob: -6.251940727233887
    3. 'check' → logprob: -11.376940727233887
    4. '   ' → logprob: -15.376940727233887
    5. 'c' → logprob: -15.626940727233887
    6. '_checker' → logprob: -15.751940727233887
    7. 'Checker' → logprob: -16.751941680908203
    8. 'checking' → logprob: -17.001941680908203
    9. 'chk' → logprob: -17.001941680908203
    10. '
' → logprob: -17.126941680908203

Token 466: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004626530222594738
    2. 'in' → logprob: -5.379626750946045
    3. '	in' → logprob: -12.754626274108887
    4. 'import' → logprob: -13.129626274108887
    5. '   ' → logprob: -14.879626274108887
    6. ' ' → logprob: -16.004627227783203
    7. '.' → logprob: -16.129627227783203
    8. ' i' → logprob: -16.129627227783203
    9. 's' → logprob: -16.504627227783203
    10. ',' → logprob: -16.567127227783203

Token 467: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14268331229686737
    2. ' self' → logprob: -2.017683267593384
    3. '       ' → logprob: -12.017683029174805
    4. '           ' → logprob: -14.267683029174805
    5. '(self' → logprob: -14.392683029174805
    6. '	self' → logprob: -14.767683029174805
    7. '[self' → logprob: -15.267683029174805
    8. '        ' → logprob: -16.767683029174805
    9. '   ' → logprob: -16.767683029174805
    10. 's' → logprob: -17.267683029174805

Token 468: '.check' (ID: 12631)
  Prédit: '.check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.check' → logprob: -1.3782830137643032e-05
    2. '.' → logprob: -11.25001335144043
    3. 'check' → logprob: -15.00001335144043
    4. ' .' → logprob: -16.25001335144043
    5. '.che' → logprob: -16.25001335144043
    6. '   ' → logprob: -17.12501335144043
    7. ' ' → logprob: -17.12501335144043
    8. '.
' → logprob: -17.37501335144043
    9. '       ' → logprob: -18.25001335144043
    10. '	check' → logprob: -18.50001335144043

Token 469: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -4.751746746478602e-05
    2. 'kers' → logprob: -10.75004768371582
    3. '_check' → logprob: -11.75004768371582
    4. 'ck' → logprob: -12.00004768371582
    5. 'check' → logprob: -12.75004768371582
    6. '```' → logprob: -13.00004768371582
    7. 'ek' → logprob: -14.37504768371582
    8. 'er' → logprob: -14.37504768371582
    9. '_' → logprob: -14.50004768371582
    10. '       ' → logprob: -14.87504768371582

Token 470: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05568879097700119
    2. ':
' → logprob: -2.9306888580322266
    3. ' in' → logprob: -8.180688858032227
    4. ',' → logprob: -8.680688858032227
    5. ' :' → logprob: -9.555688858032227
    6. '):
' → logprob: -9.680688858032227
    7. '<|end|>' → logprob: -10.305688858032227
    8. '.' → logprob: -10.555688858032227
    9. ' :
' → logprob: -10.555688858032227
    10. ':
' → logprob: -10.930688858032227

Token 471: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1564411073923111
    2. ':
' → logprob: -2.2814412117004395
    3. ':' → logprob: -3.4064412117004395
    4. '
' → logprob: -5.2814412117004395
    5. '       ' → logprob: -7.0314412117004395
    6. '<|end|>' → logprob: -7.0314412117004395
    7. '            
' → logprob: -7.1564412117004395
    8. '<|end|>' → logprob: -7.9064412117004395
    9. '```' → logprob: -8.031440734863281
    10. ',' → logprob: -8.531440734863281

Token 472: ' res' (ID: 694)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.18667040765285492
    2. 'result' → logprob: -2.3116703033447266
    3. '           ' → logprob: -3.0616703033447266
    4. ' winner' → logprob: -3.9366703033447266
    5. 'w' → logprob: -5.686670303344727
    6. ' result' → logprob: -6.811670303344727
    7. 'res' (adapté à ' res') → logprob: -8.811670303344727
    8. ' w' → logprob: -9.186670303344727
    9. ' res' → logprob: -10.186670303344727
    10. 'win' → logprob: -10.811670303344727

Token 473: ' =' (ID: 314)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.040585584938526154
    2. ' =' → logprob: -3.290585517883301
    3. '=' → logprob: -6.040585517883301
    4. 'ults' → logprob: -9.0405855178833
    5. 'ul' → logprob: -11.4155855178833
    6. 'ultat' → logprob: -11.4155855178833
    7. '=result' → logprob: -11.9155855178833
    8. 'ULT' → logprob: -12.5405855178833
    9. '           ' → logprob: -12.7905855178833
    10. ' ult' → logprob: -12.9155855178833

Token 474: ' checker' (ID: 75924)
  Prédit: 'checker'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'checker' → logprob: -0.03805021569132805
    2. ' checker' → logprob: -3.2880501747131348
    3. 'check' → logprob: -11.788050651550293
    4. '           ' → logprob: -14.538050651550293
    5. ' check' → logprob: -15.288050651550293
    6. 'checkpoint' → logprob: -15.663050651550293
    7. 'checking' → logprob: -16.163049697875977
    8. '               ' → logprob: -16.413049697875977
    9. '_checker' → logprob: -16.663049697875977
    10. 'checkbox' → logprob: -17.413049697875977

Token 475: '.check' (ID: 12631)
  Prédit: '.check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.check' → logprob: -7.493430894101039e-05
    2. '.' → logprob: -9.500075340270996
    3. ' .' → logprob: -18.25007438659668
    4. 'check' → logprob: -18.37507438659668
    5. '.che' → logprob: -18.50007438659668
    6. '.Check' → logprob: -20.12507438659668
    7. '.
' → logprob: -20.75007438659668
    8. '.checked' → logprob: -21.75007438659668
    9. '.checkout' → logprob: -22.25007438659668
    10. '
' → logprob: -22.62507438659668

Token 476: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.125
    3. 'self' → logprob: -18.75
    4. '(
' → logprob: -19.125
    5. '(this' → logprob: -19.875
    6. ' self' → logprob: -22.25
    7. ' (' → logprob: -23.375
    8. '((' → logprob: -23.5
    9. '(s' → logprob: -24.25
    10. '(sel' → logprob: -24.625

Token 477: '.board' (ID: 50264)
  Prédit: '.board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.board' → logprob: -3.023293538717553e-05
    2. '.' → logprob: -10.500030517578125
    3. ').' → logprob: -14.125030517578125
    4. ' .' → logprob: -14.375030517578125
    5. 'board' → logprob: -14.625030517578125
    6. '.b' → logprob: -14.875030517578125
    7. '	board' → logprob: -16.750030517578125
    8. '.Board' → logprob: -16.750030517578125
    9. '.bo' → logprob: -16.875030517578125
    10. '   ' → logprob: -17.125030517578125

Token 478: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.006838271860033274
    2. ')' → logprob: -5.006838321685791
    3. '           ' → logprob: -9.131837844848633
    4. ')
' → logprob: -11.381837844848633
    5. ' )
' → logprob: -12.881837844848633
    6. '               ' → logprob: -14.256837844848633
    7. ')

' → logprob: -15.881837844848633
    8. '       ' → logprob: -16.131837844848633
    9. ')`
' → logprob: -17.256837844848633
    10. ' )' → logprob: -18.256837844848633

Token 479: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2489708662033081
    2. ' if' → logprob: -2.2489709854125977
    3. '
' → logprob: -2.8739709854125977
    4. 'if' → logprob: -3.2489709854125977
    5. '       ' → logprob: -4.373970985412598
    6. '<|end|>' → logprob: -5.998970985412598
    7. '               ' → logprob: -6.873970985412598
    8. '            
' → logprob: -7.123970985412598
    9. '()
' → logprob: -7.748970985412598
    10. ' ' → logprob: -8.123970985412598

Token 480: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02836235612630844
    2. '           ' → logprob: -3.778362274169922
    3. ' if' → logprob: -5.278362274169922
    4. '
' → logprob: -13.653362274169922
    5. ';if' → logprob: -14.278362274169922
    6. '	if' → logprob: -14.778362274169922
    7. '            
' → logprob: -15.903362274169922
    8. 'If' → logprob: -16.028362274169922
    9. '```' → logprob: -16.028362274169922
    10. '		' → logprob: -16.153362274169922

Token 481: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.1269282102584839
    2. 'res' → logprob: -2.1269283294677734
    3. '	res' → logprob: -16.501928329467773
    4. '(res' → logprob: -16.626928329467773
    5. ' ' → logprob: -18.001928329467773
    6. '$res' → logprob: -18.126928329467773
    7. '   ' → logprob: -19.001928329467773
    8. 'r' → logprob: -19.376928329467773
    9. ' ' → logprob: -19.376928329467773
    10. '_res' → logprob: -19.751928329467773

Token 482: ':
' (ID: 734)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.031585898250341415
    2. ':' → logprob: -3.531585931777954
    3. ':
' → logprob: -6.656585693359375
    4. 'is' → logprob: -8.781585693359375
    5. '==' → logprob: -9.031585693359375
    6. ' and' → logprob: -9.406585693359375
    7. ' ==' → logprob: -9.531585693359375
    8. 'and' → logprob: -10.156585693359375
    9. '!=' → logprob: -10.156585693359375
    10. ' !=' → logprob: -10.781585693359375

Token 483: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014485955238342285
    2. 'winner' → logprob: -4.639485836029053
    3. ' winner' → logprob: -5.514485836029053
    4. '           ' → logprob: -7.764485836029053
    5. '                   ' → logprob: -9.889486312866211
    6. '
' → logprob: -10.014486312866211
    7. ':
' → logprob: -10.389486312866211
    8. ',w' → logprob: -10.764486312866211
    9. '>w' → logprob: -10.764486312866211
    10. '<w' → logprob: -11.264486312866211

Token 484: ' if' (ID: 538)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'winner' → logprob: -9.233804303221405e-05
    2. ' winner' → logprob: -9.500092506408691
    3. '               ' → logprob: -11.250092506408691
    4. '           ' → logprob: -12.500092506408691
    5. 'return' → logprob: -15.000092506408691
    6. 'w' → logprob: -15.250092506408691
    7. '   ' → logprob: -17.000091552734375
    8. '                   ' → logprob: -18.500091552734375
    9. '
' → logprob: -19.125091552734375
    10. '       ' → logprob: -19.125091552734375

Token 485: ' winner' (ID: 19499)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.014183126389980316
    2. ' winner' → logprob: -4.264183044433594
    3. 'w' → logprob: -11.139183044433594
    4. '           ' → logprob: -12.764183044433594
    5. '               ' → logprob: -14.139183044433594
    6. '   ' → logprob: -14.264183044433594
    7. 'not' → logprob: -14.514183044433594
    8. '       ' → logprob: -15.264183044433594
    9. ' not' → logprob: -16.514183044433594
    10. ' ' → logprob: -17.264183044433594

Token 486: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.319925993680954
    2. ' and' → logprob: -1.3199260234832764
    3. 'and' → logprob: -5.069925785064697
    4. 'is' → logprob: -7.944925785064697
    5. ' ' → logprob: -13.319926261901855
    6. '            ' → logprob: -13.444926261901855
    7. '                   ' → logprob: -14.694926261901855
    8. '                ' → logprob: -14.819926261901855
    9. '               ' → logprob: -15.444926261901855
    10. '           ' → logprob: -16.06992530822754

Token 487: ' not' (ID: 625)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.33108779788017273
    2. ' None' → logprob: -1.7060878276824951
    3. ' not' → logprob: -2.581087827682495
    4. 'not' → logprob: -3.706087827682495
    5. 'Not' → logprob: -11.831088066101074
    6. '   ' → logprob: -12.456088066101074
    7. 'none' → logprob: -13.456088066101074
    8. '=None' → logprob: -13.581088066101074
    9. '_None' → logprob: -13.831088066101074
    10. '           ' → logprob: -14.331088066101074

Token 488: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -4.024604277219623e-05
    2. ' None' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.750040054321289
    4. '_None' → logprob: -17.75004005432129
    5. 'none' → logprob: -18.25004005432129
    6. 'Stone' → logprob: -18.62504005432129
    7. '=None' → logprob: -19.00004005432129
    8. 'res' → logprob: -19.12504005432129
    9. '
' → logprob: -19.25004005432129
    10. '           ' → logprob: -19.37504005432129

Token 489: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1882353276014328
    2. 'and' → logprob: -1.8132352828979492
    3. '                   ' → logprob: -4.813235282897949
    4. '               ' → logprob: -9.18823528289795
    5. '                ' → logprob: -9.43823528289795
    6. '                    ' → logprob: -9.68823528289795
    7. ':
' → logprob: -10.06323528289795
    8. ':' → logprob: -11.18823528289795
    9. '                  ' → logprob: -11.31323528289795
    10. '                       ' → logprob: -11.68823528289795

Token 490: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11645416915416718
    2. 'raise' → logprob: -2.3664541244506836
    3. '               ' → logprob: -4.616454124450684
    4. ' raise' → logprob: -5.866454124450684
    5. ' and' → logprob: -6.241454124450684
    6. 'and' → logprob: -7.116454124450684
    7. '   ' → logprob: -8.741454124450684
    8. 'if' → logprob: -8.866454124450684
    9. 'return' → logprob: -9.241454124450684
    10. '```' → logprob: -9.491454124450684

Token 491: ' #' (ID: 1069)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.03827248141169548
    2. ' raise' → logprob: -3.6632723808288574
    3. 'return' → logprob: -4.913272380828857
    4. '                   ' → logprob: -5.663272380828857
    5. 'if' → logprob: -7.788272380828857
    6. '#' (adapté à ' #') → logprob: -7.913272380828857
    7. ' return' → logprob: -9.288272857666016
    8. '               ' → logprob: -9.663272857666016
    9. '                       ' → logprob: -9.663272857666016
    10. ' if' → logprob: -9.788272857666016

Token 492: ' According' (ID: 16344)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.14496903121471405
    2. 'return' → logprob: -2.0199689865112305
    3. '#' → logprob: -6.2699689865112305
    4. ' raise' → logprob: -8.76996898651123
    5. '               ' → logprob: -9.39496898651123
    6. '                   ' → logprob: -9.39496898651123
    7. 'if' → logprob: -10.01996898651123
    8. '           ' → logprob: -11.01996898651123
    9. '   ' → logprob: -12.26996898651123
    10. ' return' → logprob: -12.39496898651123

Token 493: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3874989449977875
    2. 'to' → logprob: -1.1374989748001099
    3. 'ing' → logprob: -8.26249885559082
    4. 'To' → logprob: -8.51249885559082
    5. '_to' → logprob: -9.51249885559082
    6. '       ' → logprob: -10.76249885559082
    7. 'ly' → logprob: -11.01249885559082
    8. '               ' → logprob: -11.13749885559082
    9. '        ' → logprob: -11.63749885559082
    10. 'e' → logprob: -11.76249885559082

Token 494: ' the' (ID: 290)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.31947946548461914
    2. 'Value' → logprob: -1.9444794654846191
    3. 'raise' → logprob: -2.319479465484619
    4. '#' → logprob: -5.069479465484619
    5. 'self' → logprob: -5.194479465484619
    6. 'game' → logprob: -5.444479465484619
    7. 'return' → logprob: -5.944479465484619
    8. 'T' → logprob: -6.194479465484619
    9. 'Game' → logprob: -6.194479465484619
    10. '           ' → logprob: -6.319479465484619

Token 495: ' problem' (ID: 4792)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6969354748725891
    2. 'rules' → logprob: -0.8219354748725891
    3. 'Value' → logprob: -3.4469354152679443
    4. 'game' → logprob: -4.946935653686523
    5. ' rules' → logprob: -5.196935653686523
    6. 'raise' → logprob: -5.821935653686523
    7. '#' → logprob: -6.196935653686523
    8. ''' → logprob: -6.196935653686523
    9. 'logic' → logprob: -6.946935653686523
    10. 'rule' → logprob: -7.071935653686523

Token 496: ' statement' (ID: 9710)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9012544751167297
    2. ' raise' → logprob: -1.276254415512085
    3. ':' → logprob: -2.526254415512085
    4. 'raise' → logprob: -3.151254415512085
    5. '           ' → logprob: -3.401254415512085
    6. '                   ' → logprob: -3.401254415512085
    7. '               ' → logprob: -4.151254653930664
    8. '
' → logprob: -4.276254653930664
    9. ' statement' → logprob: -4.401254653930664
    10. '   ' → logprob: -4.401254653930664

Token 497: ',' (ID: 11)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -1.1038084030151367
    2. ',' → logprob: -1.3538084030151367
    3. '                   ' → logprob: -1.3538084030151367
    4. ' raise' → logprob: -2.6038084030151367
    5. '                       ' → logprob: -2.9788084030151367
    6. 'return' → logprob: -4.353808403015137
    7. ' return' → logprob: -5.353808403015137
    8. ':' → logprob: -5.353808403015137
    9. '               ' → logprob: -6.603808403015137
    10. '```' → logprob: -7.603808403015137

Token 498: ' cannot' (ID: 6284)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.25903862714767456
    2. 'return' → logprob: -1.5090386867523193
    3. ' raise' → logprob: -5.63403844833374
    4. '                   ' → logprob: -6.25903844833374
    5. '#' → logprob: -7.00903844833374
    6. ' return' → logprob: -7.75903844833374
    7. '               ' → logprob: -8.509038925170898
    8. '                       ' → logprob: -10.759038925170898
    9. 'break' → logprob: -11.009038925170898
    10. '```' → logprob: -11.759038925170898

Token 499: ' both' (ID: 2973)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.2614681124687195
    2. ' have' → logprob: -2.0114681720733643
    3. 'be' → logprob: -4.011467933654785
    4. ' both' → logprob: -4.261467933654785
    5. 'h' → logprob: -4.261467933654785
    6. 'both' → logprob: -4.261467933654785
    7. ' happen' → logprob: -4.511467933654785
    8. 'return' → logprob: -4.511467933654785
    9. ' be' → logprob: -4.636467933654785
    10. ' return' → logprob: -6.636467933654785

Token 500: ' win' (ID: 4449)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.14096690714359283
    2. 'w' → logprob: -2.8909668922424316
    3. 'be' → logprob: -3.2659668922424316
    4. ' have' → logprob: -4.015966892242432
    5. ' players' → logprob: -5.265966892242432
    6. ' winners' → logprob: -5.390966892242432
    7. ' win' → logprob: -6.515966892242432
    8. 'win' → logprob: -6.640966892242432
    9. 'players' → logprob: -6.640966892242432
    10. 'have' → logprob: -6.890966892242432

Token 501: ' simultaneously' (ID: 38328)
  Prédit: ' simultaneously'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' simultaneously' → logprob: -0.39343002438545227
    2. ' at' → logprob: -1.1434299945831299
    3. '               ' → logprob: -6.393430233001709
    4. ',' → logprob: -7.143430233001709
    5. ' return' → logprob: -7.393430233001709
    6. 'return' → logprob: -8.01842975616455
    7. 'ning' → logprob: -8.14342975616455
    8. '.' → logprob: -8.14342975616455
    9. ' raise' → logprob: -8.39342975616455
    10. ':' → logprob: -8.51842975616455

Token 502: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6528278589248657
    2. '                   ' → logprob: -1.1528278589248657
    3. ',' → logprob: -2.527827739715576
    4. '
' → logprob: -3.027827739715576
    5. ' raise' → logprob: -4.652827739715576
    6. '.' → logprob: -4.777827739715576
    7. '           ' → logprob: -5.527827739715576
    8. 'raise' → logprob: -5.652827739715576
    9. '                       ' → logprob: -5.902827739715576
    10. '.
' → logprob: -6.652827739715576

Token 503: '                   ' (ID: 699)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.21821604669094086
    2. 'raise' → logprob: -1.718216061592102
    3. '                   ' → logprob: -4.4682159423828125
    4. ' return' → logprob: -6.2182159423828125
    5. '               ' → logprob: -6.4682159423828125
    6. '                       ' → logprob: -7.0932159423828125
    7. 'return' → logprob: -7.2182159423828125
    8. '```' → logprob: -10.343215942382812
    9. '	raise' → logprob: -10.718215942382812
    10. '           ' → logprob: -11.468215942382812

Token 504: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.011378013528883457
    2. 'return' → logprob: -4.511377811431885
    3. ' raise' → logprob: -8.261378288269043
    4. '               ' → logprob: -10.261378288269043
    5. '                   ' → logprob: -10.761378288269043
    6. '           ' → logprob: -11.636378288269043
    7. '   ' → logprob: -12.761378288269043
    8. '	raise' → logprob: -13.511378288269043
    9. ' return' → logprob: -14.511378288269043
    10. '                       ' → logprob: -15.261378288269043

Token 505: ' Runtime' (ID: 17606)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0020164288580417633
    2. 'Runtime' → logprob: -6.252016544342041
    3. ' Value' → logprob: -9.752016067504883
    4. 'Exception' → logprob: -10.627016067504883
    5. 'Assertion' → logprob: -12.252016067504883
    6. ' Runtime' → logprob: -15.002016067504883
    7. 'Val' → logprob: -16.002016067504883
    8. '(Value' → logprob: -16.752016067504883
    9. '_Value' → logprob: -17.502016067504883
    10. 'Va' → logprob: -17.877016067504883

Token 506: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -7.743758760625497e-05
    2. 'rror' → logprob: -9.500077247619629
    3. 'SError' → logprob: -13.375077247619629
    4. 'Warning' → logprob: -14.875077247619629
    5. 'LError' → logprob: -15.250077247619629
    6. 'Runtime' → logprob: -15.875077247619629
    7. 'Exception' → logprob: -16.000078201293945
    8. 'error' → logprob: -17.000078201293945
    9. 'ERROR' → logprob: -17.250078201293945
    10. '   ' → logprob: -17.625078201293945

Token 507: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.1398757123970427e-05
    2. '(' → logprob: -11.500011444091797
    3. '('' → logprob: -14.250011444091797
    4. '(
' → logprob: -14.625011444091797
    5. '(f' → logprob: -16.500011444091797
    6. '"' → logprob: -17.000011444091797
    7. '("'' → logprob: -18.375011444091797
    8. '()' → logprob: -18.750011444091797
    9. '(("' → logprob: -20.000011444091797
    10. '("_' → logprob: -20.750011444091797

Token 508: 'Invalid' (ID: 12278)
  Prédit: 'Both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Both' → logprob: -0.2890291213989258
    2. 'Multiple' → logprob: -1.6640291213989258
    3. 'Invalid' → logprob: -3.414029121398926
    4. 'Conf' → logprob: -4.664029121398926
    5. 'Amb' → logprob: -4.664029121398926
    6. 'Conflict' → logprob: -5.414029121398926
    7. ' Both' → logprob: -6.164029121398926
    8. 'Two' → logprob: -7.164029121398926
    9. '"' → logprob: -7.539029121398926
    10. 'Contr' → logprob: -7.914029121398926

Token 509: ' board' (ID: 6796)
  Prédit: ' game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' game' → logprob: -0.4306320548057556
    2. ' board' → logprob: -1.1806321144104004
    3. 'board' → logprob: -4.1806321144104
    4. 'game' → logprob: -4.1806321144104
    5. ' state' → logprob: -4.5556321144104
    6. 'state' → logprob: -6.6806321144104
    7. ' ' → logprob: -8.930631637573242
    8. ' situation' → logprob: -9.555631637573242
    9. 'Board' → logprob: -9.805631637573242
    10. ':' → logprob: -10.555631637573242

Token 510: ':' (ID: 25)
  Prédit: ' state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' state' → logprob: -0.33264046907424927
    2. 'state' → logprob: -1.5826404094696045
    3. ':' → logprob: -2.5826404094696045
    4. ' configuration' → logprob: -6.957640647888184
    5. 'position' → logprob: -8.082640647888184
    6. 'configuration' → logprob: -8.832640647888184
    7. ' position' → logprob: -8.957640647888184
    8. ',' → logprob: -8.957640647888184
    9. ' with' → logprob: -8.957640647888184
    10. 's' → logprob: -10.457640647888184

Token 511: ' multiple' (ID: 7598)
  Prédit: ' multiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiple' → logprob: -0.852082371711731
    2. ' both' → logprob: -1.227082371711731
    3. 'both' → logprob: -1.727082371711731
    4. 'multiple' → logprob: -3.2270822525024414
    5. 'Both' → logprob: -3.4770822525024414
    6. 'Multiple' → logprob: -4.352082252502441
    7. ' two' → logprob: -4.602082252502441
    8. ' more' → logprob: -5.852082252502441
    9. 'two' → logprob: -5.977082252502441
    10. ' Both' → logprob: -6.227082252502441

Token 512: ' winners' (ID: 34698)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.47433802485466003
    2. ' winners' → logprob: -0.9743380546569824
    3. '_w' → logprob: -8.849337577819824
    4. ' w' → logprob: -9.974337577819824
    5. 'winner' → logprob: -10.974337577819824
    6. ' players' → logprob: -10.974337577819824
    7. 'wins' → logprob: -11.974337577819824
    8. ' ' → logprob: -12.474337577819824
    9. ' winner' → logprob: -12.474337577819824
    10. 'winning' → logprob: -12.724337577819824

Token 513: ' detected' (ID: 28357)
  Prédit: ' detected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' detected' → logprob: -0.06136324256658554
    2. ' found' → logprob: -3.3113632202148438
    3. '")' → logprob: -4.561363220214844
    4. 'det' → logprob: -4.686363220214844
    5. '.")' → logprob: -5.936363220214844
    6. 'found' → logprob: -8.061363220214844
    7. '")
' → logprob: -8.561363220214844
    8. '.")
' → logprob: -9.311363220214844
    9. '!")' → logprob: -10.061363220214844
    10. '.' → logprob: -10.686363220214844

Token 514: '.")
' (ID: 27834)
  Prédit: '")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.7552689909934998
    2. '.")
' → logprob: -0.7552689909934998
    3. '")' → logprob: -3.2552690505981445
    4. '.")' → logprob: -3.8802690505981445
    5. ')")
' → logprob: -7.7552690505981445
    6. '")
' → logprob: -8.755269050598145
    7. '.")
' → logprob: -8.755269050598145
    8. ''")
' → logprob: -10.005269050598145
    9. '.' → logprob: -10.130269050598145
    10. ')' → logprob: -10.755269050598145

Token 515: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002693224814720452
    2. 'winner' → logprob: -9.000268936157227
    3. '
' → logprob: -9.375268936157227
    4. ' winner' → logprob: -10.500268936157227
    5. '           ' → logprob: -11.000268936157227
    6. 'w' → logprob: -12.125268936157227
    7. '                
' → logprob: -12.500268936157227
    8. '              ' → logprob: -13.500268936157227
    9. '                   ' → logprob: -13.500268936157227
    10. '       ' → logprob: -14.000268936157227

Token 516: ' winner' (ID: 19499)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' (adapté à ' winner') → logprob: -0.1241869106888771
    2. ' winner' → logprob: -2.4991869926452637
    3. '               ' → logprob: -3.3741869926452637
    4. '           ' → logprob: -8.124186515808105
    5. 'w' → logprob: -9.749186515808105
    6. '                   ' → logprob: -10.999186515808105
    7. '       ' → logprob: -11.999186515808105
    8. 'win' → logprob: -12.374186515808105
    9. '   ' → logprob: -13.124186515808105
    10. 'Winner' → logprob: -14.624186515808105

Token 517: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888978719711304
    2. ' =' → logprob: -2.578889846801758
    3. ' ' → logprob: -17.703889846801758
    4. '＝' → logprob: -17.828889846801758
    5. ' ' → logprob: -19.828889846801758
    6. '=res' → logprob: -19.953889846801758
    7. '.=' → logprob: -20.078889846801758
    8. '_=' → logprob: -20.203889846801758
    9. '=}' → logprob: -20.578889846801758
    10. '=

' → logprob: -21.203889846801758

Token 518: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0485873706638813
    2. ' res' → logprob: -3.0485873222351074
    3. 'r' → logprob: -18.798587799072266
    4. '           ' → logprob: -18.798587799072266
    5. '	res' → logprob: -19.048587799072266
    6. '$res' → logprob: -20.048587799072266
    7. '_res' → logprob: -20.048587799072266
    8. 'resc' → logprob: -20.048587799072266
    9. '               ' → logprob: -20.173587799072266
    10. '(res' → logprob: -20.298587799072266

Token 519: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026448601856827736
    2. '
' → logprob: -6.002645015716553
    3. '        
' → logprob: -9.877644538879395
    4. ' return' → logprob: -10.127644538879395
    5. '<|end|>' → logprob: -10.127644538879395
    6. 'return' → logprob: -10.627644538879395
    7. '    
' → logprob: -12.752644538879395
    8. '           ' → logprob: -13.127644538879395
    9. '   ' → logprob: -13.377644538879395
    10. ',' → logprob: -13.502644538879395

Token 520: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002943590050563216
    2. '
' → logprob: -6.627943515777588
    3. ' if' → logprob: -6.752943515777588
    4. 'if' → logprob: -8.502943992614746
    5. ' return' → logprob: -9.002943992614746
    6. 'return' → logprob: -9.502943992614746
    7. '   ' → logprob: -10.627943992614746
    8. '        
' → logprob: -11.002943992614746
    9. '           ' → logprob: -13.002943992614746
    10. '    
' → logprob: -13.502943992614746

Token 521: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06285939365625381
    2. '       ' → logprob: -3.062859296798706
    3. ' if' → logprob: -4.687859535217285
    4. 'return' → logprob: -5.312859535217285
    5. ' return' → logprob: -11.062859535217285
    6. '
' → logprob: -11.312859535217285
    7. '   ' → logprob: -12.187859535217285
    8. '```' → logprob: -13.312859535217285
    9. '	if' → logprob: -13.937859535217285
    10. '        
' → logprob: -14.812859535217285

Token 522: ' winner' (ID: 19499)
  Prédit: ' winner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' winner' → logprob: -0.6932044625282288
    2. 'winner' → logprob: -0.6932044625282288
    3. '   ' → logprob: -10.693204879760742
    4. 'w' → logprob: -11.068204879760742
    5. '       ' → logprob: -11.193204879760742
    6. 'not' → logprob: -13.568204879760742
    7. ' not' → logprob: -13.693204879760742
    8. 'win' → logprob: -14.193204879760742
    9. '	w' → logprob: -14.443204879760742
    10. '           ' → logprob: -15.318204879760742

Token 523: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0010056582977995276
    2. 'is' → logprob: -7.25100564956665
    3. '==' → logprob: -8.626006126403809
    4. ' ==' → logprob: -9.376006126403809
    5. ':' → logprob: -11.001006126403809
    6. '   ' → logprob: -12.126006126403809
    7. ' ' → logprob: -13.001006126403809
    8. ':
' → logprob: -13.376006126403809
    9. '    ' → logprob: -13.751006126403809
    10. '	is' → logprob: -13.876006126403809

Token 524: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.01952158845961094
    2. ' None' → logprob: -4.019521713256836
    3. 'not' → logprob: -6.769521713256836
    4. ' not' → logprob: -9.019521713256836
    5. '   ' → logprob: -9.394521713256836
    6. 'Not' → logprob: -12.519521713256836
    7. 'none' → logprob: -12.894521713256836
    8. '_None' → logprob: -13.019521713256836
    9. 'Stone' → logprob: -13.144521713256836
    10. '=None' → logprob: -13.144521713256836

Token 525: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09526246786117554
    2. ' and' → logprob: -2.8452625274658203
    3. ':' → logprob: -3.4702625274658203
    4. 'and' → logprob: -7.22026252746582
    5. '           ' → logprob: -7.34526252746582
    6. '       ' → logprob: -8.59526252746582
    7. ':

' → logprob: -11.09526252746582
    8. ':
' → logprob: -11.22026252746582
    9. ' :
' → logprob: -11.34526252746582
    10. ',' → logprob: -11.59526252746582

Token 526: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06156177073717117
    2. ' if' → logprob: -3.5615618228912354
    3. '           ' → logprob: -3.9365618228912354
    4. 'for' → logprob: -5.311561584472656
    5. '#' → logprob: -6.311561584472656
    6. 'empty' → logprob: -6.436561584472656
    7. 'return' → logprob: -6.561561584472656
    8. '       ' → logprob: -7.186561584472656
    9. ' for' → logprob: -7.936561584472656
    10. '+' → logprob: -8.311561584472656

Token 527: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.594579815864563
    2. 'return' (adapté à ' return') → logprob: -1.094579815864563
    3. '#' → logprob: -2.7195796966552734
    4. 'for' → logprob: -3.8445796966552734
    5. 'empty' → logprob: -3.9695796966552734
    6. '       ' → logprob: -5.344579696655273
    7. 'rows' → logprob: -7.844579696655273
    8. 'raise' → logprob: -8.094579696655273
    9. ' if' → logprob: -8.219579696655273
    10. ' return' → logprob: -8.344579696655273

Token 528: ' "' (ID: 392)
  Prédit: 'Stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stone' → logprob: -0.20571602880954742
    2. ' Stone' → logprob: -1.7057160139083862
    3. '"' → logprob: -5.705716133117676
    4. ''' → logprob: -7.080716133117676
    5. ' '' → logprob: -10.205716133117676
    6. ' "' → logprob: -10.455716133117676
    7. ''S' → logprob: -11.080716133117676
    8. ' ' → logprob: -11.080716133117676
    9. '   ' → logprob: -12.330716133117676
    10. '  ' → logprob: -12.830716133117676

Token 529: 'NA' (ID: 9555)
  Prédit: 'draw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'draw' → logprob: -0.8291013836860657
    2. 'Draw' → logprob: -1.454101324081421
    3. 'No' → logprob: -2.704101324081421
    4. 'None' → logprob: -2.829101324081421
    5. 'DRAW' → logprob: -2.829101324081421
    6. 'none' → logprob: -2.954101324081421
    7. '+"' → logprob: -3.954101324081421
    8. 'NONE' → logprob: -3.954101324081421
    9. '+' → logprob: -4.4541015625
    10. '"' → logprob: -4.8291015625

Token 530: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0036994852125644684
    2. 'C' → logprob: -7.00369930267334
    3. '"
' → logprob: -7.12869930267334
    4. 'M' → logprob: -7.25369930267334
    5. '+"' → logprob: -7.62869930267334
    6. 'N' → logprob: -8.75369930267334
    7. 'I' → logprob: -8.87869930267334
    8. 'K' → logprob: -9.37869930267334
    9. 'T' → logprob: -9.50369930267334
    10. 'L' → logprob: -9.62869930267334

Token 531: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04736965894699097
    2. 'return' → logprob: -3.9223697185516357
    3. '+' → logprob: -4.297369480133057
    4. 'if' → logprob: -4.797369480133057
    5. ' if' → logprob: -6.297369480133057
    6. ' return' → logprob: -6.422369480133057
    7. '   ' → logprob: -8.297369956970215
    8. ' +' → logprob: -8.422369956970215
    9. '"' → logprob: -8.672369956970215
    10. '<|end|>' → logprob: -8.922369956970215

Token 532: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0020007232669740915
    2. ' return' → logprob: -6.37700080871582
    3. '       ' → logprob: -8.12700080871582
    4. 'else' → logprob: -13.75200080871582
    5. '{return' → logprob: -14.50200080871582
    6. 'if' → logprob: -14.62700080871582
    7. 'winner' → logprob: -14.75200080871582
    8. '   ' → logprob: -15.50200080871582
    9. 'eturn' → logprob: -16.12700080871582
    10. '
' → logprob: -16.12700080871582

Token 533: ' winner' (ID: 19499)
  Prédit: 'winner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'winner' → logprob: -0.0891212522983551
    2. ' winner' → logprob: -2.4641213417053223
    3. 'w' → logprob: -8.714120864868164
    4. 'win' → logprob: -11.714120864868164
    5. '"' → logprob: -12.839120864868164
    6. ' ' → logprob: -13.339120864868164
    7. ' w' → logprob: -14.339120864868164
    8. '   ' → logprob: -14.464120864868164
    9. '	w' → logprob: -14.714120864868164
    10. 'winning' → logprob: -14.839120864868164

Token 534: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 535: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34584879875183105
    2. '<|end|>' → logprob: -1.345848798751831
    3. '#' → logprob: -4.34584903717041
    4. '```' → logprob: -4.72084903717041
    5. '+' → logprob: -4.97084903717041
    6. '<|end|>' → logprob: -6.84584903717041
    7. 'class' → logprob: -7.59584903717041
    8. '
' → logprob: -7.59584903717041
    9. 'if' → logprob: -8.09584903717041
    10. 'from' → logprob: -9.22084903717041

Token 536: ' Input' (ID: 10090)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.9465018510818481
    2. 'T' → logprob: -1.4465018510818481
    3. 'Draw' → logprob: -2.1965017318725586
    4. 'Board' → logprob: -2.8215017318725586
    5. 'Test' → logprob: -3.1965017318725586
    6. 'Connect' → logprob: -3.4465017318725586
    7. ' Game' → logprob: -3.5715017318725586
    8. ' Tic' → logprob: -3.8215017318725586
    9. ' Gom' → logprob: -4.196501731872559
    10. 'G' → logprob: -4.196501731872559

Token 537: 'Processor' (ID: 22334)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.46025508642196655
    2. 'Reader' → logprob: -1.8352551460266113
    3. 'Parser' → logprob: -1.9602551460266113
    4. 'Processor' → logprob: -3.3352551460266113
    5. 'Provider' → logprob: -4.460255146026611
    6. 'Validator' → logprob: -4.835255146026611
    7. 'Manager' → logprob: -5.210255146026611
    8. 'Data' → logprob: -6.085255146026611
    9. 'Line' → logprob: -6.960255146026611
    10. 'View' → logprob: -7.460255146026611

Token 538: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04301539808511734
    2. ':
' → logprob: -3.168015480041504
    3. ':

' → logprob: -12.168015480041504
    4. ':def' → logprob: -12.293015480041504
    5. ' :' → logprob: -13.168015480041504
    6. '<|end|>' → logprob: -13.793015480041504
    7. ':
' → logprob: -14.418015480041504
    8. '(' → logprob: -14.543015480041504
    9. ' :
' → logprob: -14.668015480041504
    10. '():' → logprob: -15.043015480041504

Token 539: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.686778503237292e-05
    2. ' def' → logprob: -9.500097274780273
    3. 'def' → logprob: -10.750097274780273
    4. '```' → logprob: -15.750097274780273
    5. 'class' → logprob: -16.250097274780273
    6. '   ' → logprob: -16.250097274780273
    7. ':' → logprob: -16.750097274780273
    8. ' class' → logprob: -17.375097274780273
    9. '
' → logprob: -17.875097274780273
    10. 'import' → logprob: -18.125097274780273

Token 540: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.389316588640213
    2. ' def' → logprob: -1.1393165588378906
    3. '   ' → logprob: -6.264316558837891
    4. '@' → logprob: -7.639316558837891
    5. ' @' → logprob: -9.76431655883789
    6. 'class' → logprob: -14.26431655883789
    7. '
' → logprob: -16.01431655883789
    8. '	def' → logprob: -16.13931655883789
    9. '@property' → logprob: -17.88931655883789
    10. ' ' → logprob: -18.01431655883789

Token 541: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.44612714648246765
    2. ' __' → logprob: -1.19612717628479
    3. 'def' → logprob: -2.94612717628479
    4. '__' → logprob: -5.946126937866211
    5. 'staticmethod' → logprob: -7.446126937866211
    6. ' ' → logprob: -7.696126937866211
    7. 'init' → logprob: -8.071126937866211
    8. ' process' → logprob: -8.321126937866211
    9. 'int' → logprob: -8.946126937866211
    10. ' init' → logprob: -9.321126937866211

Token 542: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0003009041247423738
    2. 'def' → logprob: -9.000301361083984
    3. 'nit' → logprob: -9.125301361083984
    4. '__' → logprob: -10.625301361083984
    5. ' init' → logprob: -10.625301361083984
    6. '```' → logprob: -11.875301361083984
    7. '_init' → logprob: -12.375301361083984
    8. 'int' → logprob: -12.875301361083984
    9. '   ' → logprob: -13.500301361083984
    10. 'it' → logprob: -13.875301361083984

Token 543: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0038055418990552425
    2. ' (' → logprob: -6.003805637359619
    3. '__(' → logprob: -7.253805637359619
    4. '(' → logprob: -7.503805637359619
    5. 'self' → logprob: -10.128805160522461
    6. ')(' → logprob: -11.878805160522461
    7. ' ' → logprob: -12.128805160522461
    8. ' self' → logprob: -12.253805160522461
    9. '   ' → logprob: -12.753805160522461
    10. '(
' → logprob: -13.128805160522461

Token 544: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0020070301834493876
    2. ')' → logprob: -6.377007007598877
    3. ' self' → logprob: -9.002007484436035
    4. '
' → logprob: -9.502007484436035
    5. '):
' → logprob: -9.502007484436035
    6. '   ' → logprob: -10.502007484436035
    7. ')
' → logprob: -13.252007484436035
    8. '       ' → logprob: -14.002007484436035
    9. '),' → logprob: -14.377007484436035
    10. '(self' → logprob: -14.877007484436035

Token 545: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20420634746551514
    2. ')' → logprob: -2.5792064666748047
    3. '):' → logprob: -2.5792064666748047
    4. 'self' → logprob: -4.079206466674805
    5. '):
' → logprob: -4.204206466674805
    6. '   ' → logprob: -7.329206466674805
    7. '(self' → logprob: -8.454206466674805
    8. ' self' → logprob: -9.579206466674805
    9. ':' → logprob: -9.829206466674805
    10. '       ' → logprob: -10.454206466674805

Token 546: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.050121236592531204
    2. ',' → logprob: -3.175121307373047
    3. 'self' → logprob: -5.675121307373047
    4. ':' → logprob: -6.550121307373047
    5. '   ' → logprob: -6.925121307373047
    6. ':
' → logprob: -7.175121307373047
    7. ' (' → logprob: -9.050121307373047
    8. '(' → logprob: -9.175121307373047
    9. ')' → logprob: -9.550121307373047
    10. '       ' → logprob: -9.550121307373047

Token 547: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.06196869537234306
    2. ' None' → logprob: -2.8119688034057617
    3. '   ' → logprob: -14.686968803405762
    4. 'object' → logprob: -14.686968803405762
    5. 'No' → logprob: -17.061967849731445
    6. '_None' → logprob: -17.186967849731445
    7. 'none' → logprob: -17.311967849731445
    8. 'void' → logprob: -17.561967849731445
    9. 'list' → logprob: -17.686967849731445
    10. 'self' → logprob: -17.811967849731445

Token 548: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18356728553771973
    2. ':
' → logprob: -1.8085672855377197
    3. '   ' → logprob: -6.058567047119141
    4. '       ' → logprob: -6.558567047119141
    5. ',' → logprob: -11.30856704711914
    6. '<|end|>' → logprob: -11.55856704711914
    7. ':def' → logprob: -12.18356704711914
    8. '):
' → logprob: -12.30856704711914
    9. '():
' → logprob: -12.43356704711914
    10. ':

' → logprob: -12.68356704711914

Token 549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00028767617186531425
    2. '   ' → logprob: -8.500288009643555
    3. '	' → logprob: -10.000288009643555
    4. 'self' → logprob: -10.750288009643555
    5. '	   ' → logprob: -11.500288009643555
    6. '	pass' → logprob: -13.500288009643555
    7. '	self' → logprob: -13.625288009643555
    8. ' self' → logprob: -13.875288009643555
    9. 'pass' → logprob: -14.250288009643555
    10. ' pass' → logprob: -14.375288009643555

Token 550: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.31452831625938416
    2. '       ' → logprob: -1.5645283460617065
    3. 'pass' → logprob: -2.814528226852417
    4. ' self' → logprob: -7.814528465270996
    5. ' pass' → logprob: -8.564528465270996
    6. '   ' → logprob: -9.314528465270996
    7. 'def' → logprob: -11.189528465270996
    8. '
' → logprob: -11.314528465270996
    9. '	pass' → logprob: -12.189528465270996
    10. '(self' → logprob: -12.689528465270996

Token 551: '.datasets' (ID: 136555)
  Prédit: '.rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.rows' → logprob: -0.5320996046066284
    2. '.board' → logprob: -1.5320996046066284
    3. '.lines' → logprob: -2.282099723815918
    4. '.' → logprob: -2.907099723815918
    5. '.st' → logprob: -4.157099723815918
    6. '.data' → logprob: -5.157099723815918
    7. '.input' → logprob: -5.407099723815918
    8. '.buffer' → logprob: -5.657099723815918
    9. '._' → logprob: -5.782099723815918
    10. '.inputs' → logprob: -6.032099723815918

Token 552: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5928964614868164
    2. ' =' → logprob: -0.8428964614868164
    3. ':' → logprob: -4.092896461486816
    4. '=[]' → logprob: -9.092896461486816
    5. '=[]
' → logprob: -12.467896461486816
    6. ' ' → logprob: -12.842896461486816
    7. ' :' → logprob: -13.342896461486816
    8. '   ' → logprob: -13.592896461486816
    9. ':int' → logprob: -14.592896461486816
    10. ':list' → logprob: -15.717896461486816

Token 553: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.003698892891407013
    2. ' List' → logprob: -5.628698825836182
    3. 'int' → logprob: -9.62869930267334
    4. '[List' → logprob: -10.87869930267334
    5. '[]' → logprob: -11.75369930267334
    6. 'list' → logprob: -13.00369930267334
    7. '   ' → logprob: -13.50369930267334
    8. '	List' → logprob: -13.75369930267334
    9. ' []' → logprob: -14.62869930267334
    10. ' ' → logprob: -14.75369930267334

Token 554: '[' (ID: 58)
  Prédit: '[List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.16038142144680023
    2. '[str' → logprob: -1.9103814363479614
    3. '[' → logprob: -8.785381317138672
    4. '[int' → logprob: -12.660381317138672
    5. '[
' → logprob: -14.535381317138672
    6. '[[' → logprob: -15.160381317138672
    7. 'str' → logprob: -15.535381317138672
    8. '[(' → logprob: -16.535381317138672
    9. '<List' → logprob: -16.660381317138672
    10. ' =' → logprob: -17.035381317138672

Token 555: 'Board' (ID: 14558)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.011225718073546886
    2. 'Board' → logprob: -4.761225700378418
    3. 'str' → logprob: -6.011225700378418
    4. '[List' → logprob: -9.261225700378418
    5. ' List' → logprob: -10.636225700378418
    6. 'Tuple' → logprob: -11.136225700378418
    7. '[str' → logprob: -11.511225700378418
    8. 'list' → logprob: -12.886225700378418
    9. 'Optional' → logprob: -13.011225700378418
    10. '(List' → logprob: -13.511225700378418

Token 556: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.200166469876422e-06
    2. ']=' → logprob: -12.250004768371582
    3. '[' → logprob: -15.250004768371582
    4. ' ]' → logprob: -16.8750057220459
    5. ']
' → logprob: -18.1250057220459
    6. '[]' → logprob: -18.6250057220459
    7. ')' → logprob: -18.6250057220459
    8. '>' → logprob: -18.7500057220459
    9. '   ' → logprob: -18.7500057220459
    10. '][]' → logprob: -19.5000057220459

Token 557: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14324811100959778
    2. ' =' → logprob: -2.0182480812072754
    3. '   ' → logprob: -7.768248081207275
    4. '=[]' → logprob: -9.143248558044434
    5. '       ' → logprob: -11.518248558044434
    6. '[]' → logprob: -11.518248558044434
    7. ' ' → logprob: -12.268248558044434
    8. '    ' → logprob: -12.393248558044434
    9. 'def' → logprob: -12.768248558044434
    10. '=[]
' → logprob: -12.893248558044434

Token 558: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -2.6895233531831764e-05
    2. '[]
' → logprob: -10.87502670288086
    3. ' []' → logprob: -11.87502670288086
    4. '[]

' → logprob: -14.25002670288086
    5. '[])' → logprob: -16.62502670288086
    6. '[]"' → logprob: -16.62502670288086
    7. '=[]' → logprob: -16.87502670288086
    8. '[]}' → logprob: -17.00002670288086
    9. '[' → logprob: -17.12502670288086
    10. '([]' → logprob: -18.87502670288086

Token 559: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014398423954844475
    2. '
' → logprob: -4.389398574829102
    3. 'def' → logprob: -6.764398574829102
    4. '    
' → logprob: -7.764398574829102
    5. ' def' → logprob: -8.139398574829102
    6. '<|end|>' → logprob: -12.264398574829102
    7. '	def' → logprob: -12.389398574829102
    8. '        
' → logprob: -12.764398574829102
    9. ' 
' → logprob: -12.764398574829102
    10. '

' → logprob: -14.514398574829102

Token 560: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0024775585625320673
    2. ' def' → logprob: -6.002477645874023
    3. '   ' → logprob: -13.252477645874023
    4. '
' → logprob: -17.627477645874023
    5. 'de' → logprob: -19.752477645874023
    6. '	def' → logprob: -20.252477645874023
    7. '    
' → logprob: -21.252477645874023
    8. ' ' → logprob: -22.252477645874023
    9. 'd' → logprob: -22.502477645874023
    10. ' 
' → logprob: -23.002477645874023

Token 561: ' read' (ID: 1729)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.2074306160211563
    2. 'read' → logprob: -2.207430601119995
    3. 'add' → logprob: -2.832430601119995
    4. 'load' → logprob: -4.457430839538574
    5. 'parse' → logprob: -5.707430839538574
    6. ' process' → logprob: -5.957430839538574
    7. ' read' → logprob: -7.582430839538574
    8. ' add' → logprob: -7.957430839538574
    9. ' load' → logprob: -9.582430839538574
    10. ' parse' → logprob: -10.957430839538574

Token 562: '_bo' (ID: 104368)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4339550733566284
    2. '_input' → logprob: -1.1839550733566284
    3. '_line' → logprob: -3.433955192565918
    4. '_data' → logprob: -5.058955192565918
    5. 'self' → logprob: -5.933955192565918
    6. '_lines' → logprob: -5.933955192565918
    7. '_dataset' → logprob: -6.808955192565918
    8. '_from' → logprob: -8.183955192565918
    9. '_inputs' → logprob: -8.683955192565918
    10. '_self' → logprob: -9.058955192565918

Token 563: 'ards' (ID: 3098)
  Prédit: 'ard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ard' → logprob: -0.22930389642715454
    2. 'ards' → logprob: -1.6043038368225098
    3. 'und' → logprob: -6.22930383682251
    4. 'x' → logprob: -7.85430383682251
    5. 'dy' → logprob: -7.85430383682251
    6. 'ok' → logprob: -8.604304313659668
    7. 'ar' → logprob: -8.979304313659668
    8. 'r' → logprob: -8.979304313659668
    9. 'unds' → logprob: -9.354304313659668
    10. 'at' → logprob: -9.479304313659668

Token 564: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3890291750431061
    2. '(' → logprob: -1.1390291452407837
    3. 'self' → logprob: -6.639029026031494
    4. ' (' → logprob: -7.764029026031494
    5. 'from' → logprob: -7.889029026031494
    6. '(
' → logprob: -11.014029502868652
    7. '
' → logprob: -11.389029502868652
    8. '   ' → logprob: -11.639029502868652
    9. '()' → logprob: -12.389029502868652
    10. '       ' → logprob: -13.139029502868652

Token 565: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6654216647148132
    2. 'self' → logprob: -1.540421724319458
    3. ',' → logprob: -1.790421724319458
    4. '):
' → logprob: -2.790421724319458
    5. '):' → logprob: -3.540421724319458
    6. ')(' → logprob: -4.915421485900879
    7. '(self' → logprob: -5.165421485900879
    8. 'from' → logprob: -7.415421485900879
    9. '   ' → logprob: -8.790421485900879
    10. ',self' → logprob: -9.040421485900879

Token 566: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00037609596620313823
    2. 'self' → logprob: -8.000375747680664
    3. '(' → logprob: -10.625375747680664
    4. 'from' → logprob: -11.125375747680664
    5. '   ' → logprob: -14.500375747680664
    6. ' (' → logprob: -15.125375747680664
    7. '(
' → logprob: -15.500375747680664
    8. '       ' → logprob: -15.500375747680664
    9. 'def' → logprob: -16.125375747680664
    10. ' self' → logprob: -16.125375747680664

Token 567: ' None' (ID: 4662)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47672417759895325
    2. 'None' → logprob: -1.8517241477966309
    3. 'List' → logprob: -1.9767241477966309
    4. ' self' → logprob: -3.476724147796631
    5. ' None' → logprob: -3.601724147796631
    6. 'int' → logprob: -4.226724147796631
    7. ' List' → logprob: -4.726724147796631
    8. '(self' → logprob: -7.101724147796631
    9. '   ' → logprob: -7.601724147796631
    10. 'def' → logprob: -8.226724624633789

Token 568: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6661608815193176
    2. '(self' → logprob: -0.7911608815193176
    3. '   ' → logprob: -3.666160821914673
    4. 'self' → logprob: -5.791161060333252
    5. ':' → logprob: -6.291161060333252
    6. ':
' → logprob: -6.416161060333252
    7. '(' → logprob: -7.291161060333252
    8. '(
' → logprob: -10.041160583496094
    9. ' self' → logprob: -10.541160583496094
    10. ',' → logprob: -10.916160583496094

Token 569: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002957258140668273
    2. ' for' → logprob: -6.002957344055176
    3. 'for' → logprob: -8.127957344055176
    4. '   ' → logprob: -8.877957344055176
    5. 'import' → logprob: -10.627957344055176
    6. '      ' → logprob: -12.252957344055176
    7. ' while' → logprob: -12.502957344055176
    8. '    ' → logprob: -12.877957344055176
    9. ' lines' → logprob: -12.877957344055176
    10. '	   ' → logprob: -13.127957344055176

Token 570: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.5058162212371826
    2. '       ' → logprob: -1.1308162212371826
    3. ' while' → logprob: -2.6308162212371826
    4. 'for' → logprob: -7.005816459655762
    5. 'import' → logprob: -7.505816459655762
    6. '   ' → logprob: -8.255816459655762
    7. 'try' → logprob: -8.755816459655762
    8. 'n' → logprob: -9.255816459655762
    9. '```' → logprob: -9.255816459655762
    10. ' for' → logprob: -9.630816459655762

Token 571: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.20154382288455963
    2. ' True' → logprob: -1.7015438079833984
    3. '(True' → logprob: -8.951543807983398
    4. 'true' → logprob: -14.951543807983398
    5. 'Tr' → logprob: -15.326543807983398
    6. ' Tru' → logprob: -15.576543807983398
    7. '   ' → logprob: -16.5765438079834
    8. '=True' → logprob: -16.8265438079834
    9. '
' → logprob: -17.4515438079834
    10. '1' → logprob: -17.9515438079834

Token 572: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030473431572318077
    2. ':
' → logprob: -3.655473470687866
    3. '           ' → logprob: -5.530473232269287
    4. ',' → logprob: -9.155473709106445
    5. '       ' → logprob: -10.530473709106445
    6. '():' → logprob: -10.530473709106445
    7. '   ' → logprob: -11.780473709106445
    8. '():
' → logprob: -11.905473709106445
    9. ' :' → logprob: -12.655473709106445
    10. ':
' → logprob: -12.655473709106445

Token 573: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018270269501954317
    2. ' line' → logprob: -7.001827239990234
    3. '   ' → logprob: -7.126827239990234
    4. '       ' → logprob: -10.376827239990234
    5. 'try' → logprob: -10.626827239990234
    6. 'line' → logprob: -10.751827239990234
    7. ' try' → logprob: -10.751827239990234
    8. 'input' → logprob: -12.001827239990234
    9. ' input' → logprob: -13.751827239990234
    10. 'n' → logprob: -13.876827239990234

Token 574: ' rows' (ID: 13585)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.7073091268539429
    2. 'lines' → logprob: -1.2073091268539429
    3. 'try' → logprob: -2.7073092460632324
    4. ' line' → logprob: -2.9573092460632324
    5. 'n' → logprob: -3.3323092460632324
    6. 'rows' (adapté à ' rows') → logprob: -3.7073092460632324
    7. '           ' → logprob: -4.457309246063232
    8. ' lines' → logprob: -4.832309246063232
    9. ' try' → logprob: -5.332309246063232
    10. ' n' → logprob: -7.332309246063232

Token 575: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868805766105652
    2. ' =' → logprob: -1.13688063621521
    3. '=[]' → logprob: -12.136880874633789
    4. '=[]
' → logprob: -13.511880874633789
    5. ':' → logprob: -14.386880874633789
    6. ' =
' → logprob: -14.886880874633789
    7. '[' → logprob: -14.886880874633789
    8. '=line' → logprob: -14.886880874633789
    9. '=
' → logprob: -15.011880874633789
    10. '=input' → logprob: -15.386880874633789

Token 576: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3646525740623474
    2. '[' → logprob: -1.6146526336669922
    3. '[input' → logprob: -2.364652633666992
    4. ' [' → logprob: -5.364652633666992
    5. '[]
' → logprob: -5.614652633666992
    6. ' []' → logprob: -6.989652633666992
    7. '[self' → logprob: -7.239652633666992
    8. '[int' → logprob: -7.739652633666992
    9. '[new' → logprob: -7.739652633666992
    10. '[str' → logprob: -7.864652633666992

Token 577: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014278925023972988
    2. ' for' → logprob: -4.889278888702393
    3. 'for' → logprob: -5.264278888702393
    4. '       ' → logprob: -6.889278888702393
    5. '   ' → logprob: -8.38927936553955
    6. '
' → logprob: -10.01427936553955
    7. '               ' → logprob: -10.13927936553955
    8. ',' → logprob: -10.63927936553955
    9. '		' → logprob: -11.01427936553955
    10. '[' → logprob: -11.26427936553955

Token 578: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.021413670852780342
    2. ' for' → logprob: -4.021413803100586
    3. '           ' → logprob: -5.771413803100586
    4. 'line' → logprob: -9.021413803100586
    5. '
' → logprob: -11.396413803100586
    6. 'row' → logprob: -12.771413803100586
    7. ' line' → logprob: -12.771413803100586
    8. 'try' → logprob: -12.896413803100586
    9. 'n' → logprob: -13.896413803100586
    10. '            
' → logprob: -14.521413803100586

Token 579: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.7385154428193346e-05
    2. ' _' → logprob: -10.62503719329834
    3. '_i' → logprob: -11.62503719329834
    4. '_
' → logprob: -12.50003719329834
    5. '_line' → logprob: -16.375038146972656
    6. '_
' → logprob: -16.875038146972656
    7. '_row' → logprob: -17.000038146972656
    8. '_in' → logprob: -17.125038146972656
    9. '_range' → logprob: -17.375038146972656
    10. '_=' → logprob: -17.500038146972656

Token 580: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0002383441897109151
    2. 'in' → logprob: -8.375238418579102
    3. 'line' → logprob: -12.375238418579102
    4. 'i' → logprob: -13.250238418579102
    5. ' ' → logprob: -14.500238418579102
    6. 'row' → logprob: -15.250238418579102
    7. 'n' → logprob: -15.750238418579102
    8. 'range' → logprob: -16.1252384185791
    9. 'input' → logprob: -16.1252384185791
    10. '

' → logprob: -16.3752384185791

Token 581: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.4855663721391466e-05
    2. ' range' → logprob: -11.125015258789062
    3. '[' → logprob: -18.500015258789062
    4. 'rang' → logprob: -19.000015258789062
    5. 'ran' → logprob: -19.500015258789062
    6. '_' → logprob: -19.875015258789062
    7. 'Range' → logprob: -20.250015258789062
    8. '
' → logprob: -20.250015258789062
    9. 'r' → logprob: -20.375015258789062
    10. '(range' → logprob: -20.750015258789062

Token 582: '(Board' (ID: 157859)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03856545686721802
    2. 'Board' → logprob: -3.2885653972625732
    3. ' Board' → logprob: -8.038565635681152
    4. '(Board' → logprob: -8.663565635681152
    5. ' ' → logprob: -11.288565635681152
    6. 'Stone' → logprob: -12.538565635681152
    7. 'self' → logprob: -12.788565635681152
    8. 'board' → logprob: -13.538565635681152
    9. '.Board' → logprob: -13.663565635681152
    10. '(' → logprob: -13.663565635681152

Token 583: '.SIZE' (ID: 163232)
  Prédit: '.SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.SIZE' → logprob: -5.3596853831550106e-05
    2. '.' → logprob: -10.750053405761719
    3. 'SIZE' → logprob: -11.125053405761719
    4. '.S' → logprob: -11.375053405761719
    5. ' .' → logprob: -12.250053405761719
    6. '   ' → logprob: -14.125053405761719
    7. '_SIZE' → logprob: -16.37505340576172
    8. ' ' → logprob: -17.00005340576172
    9. '.size' → logprob: -17.25005340576172
    10. '.Size' → logprob: -17.25005340576172

Token 584: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011061500757932663
    2. '):
' → logprob: -4.511061668395996
    3. ' ):' → logprob: -11.511061668395996
    4. '):
' → logprob: -13.136061668395996
    5. ':' → logprob: -14.011061668395996
    6. ')' → logprob: -14.886061668395996
    7. '():' → logprob: -15.636061668395996
    8. '):

' → logprob: -15.761061668395996
    9. ' ):
' → logprob: -16.63606071472168
    10. ']:' → logprob: -16.63606071472168

Token 585: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003782416461035609
    2. 'input' → logprob: -9.250378608703613
    3. '           ' → logprob: -9.625378608703613
    4. '   ' → logprob: -9.875378608703613
    5. '                
' → logprob: -10.250378608703613
    6. 'row' → logprob: -10.625378608703613
    7. ' readline' → logprob: -11.250378608703613
    8. ' line' → logprob: -11.375378608703613
    9. 'rows' → logprob: -11.500378608703613
    10. '	           ' → logprob: -11.750378608703613

Token 586: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.01608141139149666
    2. ' line' → logprob: -4.2660813331604
    3. 'row' → logprob: -6.2660813331604
    4. ' row' → logprob: -11.141081809997559
    5. 'try' → logprob: -14.141081809997559
    6. 's' → logprob: -14.266081809997559
    7. '           ' → logprob: -15.016081809997559
    8. '	line' → logprob: -16.891080856323242
    9. '   ' → logprob: -17.141080856323242
    10. ' s' → logprob: -17.266080856323242

Token 587: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022644937038422
    2. '=' → logprob: -1.9102264642715454
    3. '=input' → logprob: -13.660226821899414
    4. '=line' → logprob: -14.035226821899414
    5. ' =
' → logprob: -16.660226821899414
    6. ' ' → logprob: -16.785226821899414
    7. '_input' → logprob: -16.785226821899414
    8. ':' → logprob: -17.035226821899414
    9. 'input' → logprob: -17.160226821899414
    10. 's' → logprob: -17.285226821899414

Token 588: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005233882926404476
    2. ' input' → logprob: -5.2552337646484375
    3. '(input' → logprob: -17.005233764648438
    4. '=input' → logprob: -19.380233764648438
    5. '<input' → logprob: -20.505233764648438
    6. '	input' → logprob: -21.005233764648438
    7. 'inp' → logprob: -21.630233764648438
    8. '
' → logprob: -22.130233764648438
    9. 'in' → logprob: -22.130233764648438
    10. ' ' → logprob: -22.255233764648438

Token 589: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4740929901599884
    2. '()' → logprob: -0.974092960357666
    3. '()
' → logprob: -11.474093437194824
    4. '(' → logprob: -12.474093437194824
    5. ' ()' → logprob: -14.474093437194824
    6. ' ().' → logprob: -15.224093437194824
    7. '();' → logprob: -15.474093437194824
    8. '()

' → logprob: -15.474093437194824
    9. '())' → logprob: -15.724093437194824
    10. '.strip' → logprob: -15.974093437194824

Token 590: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01596774160861969
    2. '           ' → logprob: -4.765967845916748
    3. '.strip' → logprob: -5.015967845916748
    4. '.rstrip' → logprob: -8.01596736907959
    5. ' if' → logprob: -8.64096736907959
    6. '                
' → logprob: -9.26596736907959
    7. '.' → logprob: -10.76596736907959
    8. '            
' → logprob: -11.26596736907959
    9. '                   ' → logprob: -11.76596736907959
    10. '
' → logprob: -12.01596736907959

Token 591: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4743911325931549
    2. ' if' → logprob: -0.9743911027908325
    3. '               ' → logprob: -8.099390983581543
    4. '           ' → logprob: -11.974390983581543
    5. ' line' → logprob: -13.349390983581543
    6. 'line' → logprob: -13.974390983581543
    7. '                   ' → logprob: -15.099390983581543
    8. 'rows' → logprob: -15.099390983581543
    9. '
' → logprob: -15.474390983581543
    10. '                
' → logprob: -15.599390983581543

Token 592: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.7623119354248047
    2. ' not' → logprob: -1.3873119354248047
    3. ' line' → logprob: -1.5123119354248047
    4. 'not' → logprob: -2.7623119354248047
    5. 'len' → logprob: -10.387311935424805
    6. '	line' → logprob: -10.762311935424805
    7. ' ' → logprob: -11.137311935424805
    8. '#line' → logprob: -11.137311935424805
    9. '(line' → logprob: -11.574811935424805
    10. ' len' → logprob: -11.637311935424805

Token 593: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3225160837173462
    2. ' ==' → logprob: -1.3225160837173462
    3. '.strip' → logprob: -4.697515964508057
    4. 'strip' → logprob: -10.697516441345215
    5. '=' → logprob: -10.822516441345215
    6. '===' → logprob: -11.322516441345215
    7. ' is' → logprob: -11.447516441345215
    8. '==
' → logprob: -11.447516441345215
    9. ')==' → logprob: -12.447516441345215
    10. ' =' → logprob: -12.947516441345215

Token 594: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.4315931797027588
    2. '""' → logprob: -1.4315931797027588
    3. '"' → logprob: -2.681593179702759
    4. '"":' → logprob: -3.806593179702759
    5. ''' → logprob: -3.931593179702759
    6. ''*' → logprob: -8.18159294128418
    7. ''-' → logprob: -9.05659294128418
    8. ''t' → logprob: -9.30659294128418
    9. ''end' → logprob: -9.43159294128418
    10. '"-' → logprob: -9.68159294128418

Token 595: '0' (ID: 15)
  Prédit: 'END'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'END' → logprob: -0.7040483951568604
    2. ''' → logprob: -1.0790483951568604
    3. 'end' → logprob: -3.4540483951568604
    4. '"' → logprob: -3.5790483951568604
    5. '""' → logprob: -3.5790483951568604
    6. '''' → logprob: -4.204048156738281
    7. 'EOF' → logprob: -4.454048156738281
    8. '.' → logprob: -4.579048156738281
    9. '0' → logprob: -4.704048156738281
    10. '#' → logprob: -4.954048156738281

Token 596: ''' (ID: 6)
  Prédit: '':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.6946541666984558
    2. '':' → logprob: -0.9446541666984558
    3. '0' → logprob: -2.3196542263031006
    4. ''' → logprob: -4.9446539878845215
    5. '':
' → logprob: -5.1946539878845215
    6. ''*' → logprob: -8.06965446472168
    7. '000' → logprob: -8.44465446472168
    8. ''):
' → logprob: -8.56965446472168
    9. '00' → logprob: -9.31965446472168
    10. '\n' → logprob: -10.19465446472168

Token 597: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07724156975746155
    2. ':' → logprob: -2.7022416591644287
    3. ':return' → logprob: -5.45224142074585
    4. ' or' → logprob: -5.95224142074585
    5. ' and' → logprob: -9.202241897583008
    6. '   ' → logprob: -9.702241897583008
    7. '               ' → logprob: -9.827241897583008
    8. ':
' → logprob: -10.327241897583008
    9. '
' → logprob: -10.577241897583008
    10. '                   ' → logprob: -10.702241897583008

Token 598: ' len' (ID: 4631)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1773308366537094
    2. 'len' → logprob: -2.677330732345581
    3. ' not' → logprob: -3.177330732345581
    4. ' _' → logprob: -4.42733097076416
    5. ' len' → logprob: -4.42733097076416
    6. 'line' → logprob: -4.80233097076416
    7. 'False' → logprob: -5.42733097076416
    8. 'not' → logprob: -5.55233097076416
    9. ' line' → logprob: -5.67733097076416
    10. '_:' → logprob: -5.80233097076416

Token 599: '(rows' (ID: 69648)
  Prédit: '(rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rows' → logprob: -0.20698757469654083
    2. '(line' → logprob: -1.7069876194000244
    3. 'rows' → logprob: -6.081987380981445
    4. '(' → logprob: -6.081987380981445
    5. '(row' → logprob: -7.831987380981445
    6. '(lines' → logprob: -8.206987380981445
    7. 'line' → logprob: -9.081987380981445
    8. ' rows' → logprob: -9.581987380981445
    9. '(
' → logprob: -9.956987380981445
    10. ' line' → logprob: -10.581987380981445

Token 600: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.08414918929338455
    2. ')' → logprob: -2.709149122238159
    3. ' ==' → logprob: -4.834149360656738
    4. ')==' → logprob: -5.209149360656738
    5. '()==' → logprob: -7.709149360656738
    6. '()' → logprob: -8.584149360656738
    7. '=' → logprob: -10.459149360656738
    8. ']==' → logprob: -11.209149360656738
    9. '===' → logprob: -11.959149360656738
    10. '0' → logprob: -12.584149360656738

Token 601: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.029944054782390594
    2. ' ==' → logprob: -3.5299439430236816
    3. '()==' → logprob: -9.65494441986084
    4. ')==' → logprob: -9.77994441986084
    5. ')' → logprob: -10.52994441986084
    6. '=' → logprob: -10.77994441986084
    7. '0' → logprob: -11.65494441986084
    8. '===' → logprob: -12.02994441986084
    9. '<|end|>' → logprob: -12.27994441986084
    10. '()' → logprob: -13.27994441986084

Token 602: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '   ' → logprob: -16.75000762939453
    4. '
' → logprob: -18.25000762939453
    5. '۰' → logprob: -18.25000762939453
    6. '  ' → logprob: -18.37500762939453
    7. '00' → logprob: -18.50000762939453
    8. '    ' → logprob: -18.87500762939453
    9. '1' → logprob: -19.37500762939453
    10. '=' → logprob: -19.37500762939453

Token 603: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.166338137816638e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.000032424926758
    4. '1' → logprob: -16.500032424926758
    5. '  ' → logprob: -17.000032424926758
    6. '    ' → logprob: -17.125032424926758
    7. ')' → logprob: -17.625032424926758
    8. '00' → logprob: -18.187532424926758
    9. '           ' → logprob: -18.312532424926758
    10. '۰' → logprob: -18.500032424926758

Token 604: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6173994541168213
    2. '                   ' → logprob: -1.3673994541168213
    3. ':' → logprob: -1.6173994541168213
    4. '               ' → logprob: -5.367399215698242
    5. '                       ' → logprob: -6.867399215698242
    6. ':return' → logprob: -6.867399215698242
    7. '                           ' → logprob: -7.992399215698242
    8. ' and' → logprob: -9.492399215698242
    9. '   ' → logprob: -9.742399215698242
    10. ':
' → logprob: -9.867399215698242

Token 605: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0010675819357857108
    2. '                       ' → logprob: -7.251067638397217
    3. 'return' → logprob: -8.501067161560059
    4. ' return' → logprob: -9.376067161560059
    5. '                           ' → logprob: -10.501067161560059
    6. '               ' → logprob: -10.876067161560059
    7. '                  ' → logprob: -12.126067161560059
    8. ':return' → logprob: -12.376067161560059
    9. '   ' → logprob: -12.751067161560059
    10. '           ' → logprob: -13.001067161560059

Token 606: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005792465526610613
    2. ' return' → logprob: -7.500579357147217
    3. '                   ' → logprob: -11.000578880310059
    4. '                       ' → logprob: -12.500578880310059
    5. '
' → logprob: -12.625578880310059
    6. '               ' → logprob: -13.625578880310059
    7. 'break' → logprob: -14.250578880310059
    8. '	return' → logprob: -14.750578880310059
    9. ':return' → logprob: -16.375579833984375
    10. '                           ' → logprob: -17.250579833984375

Token 607: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002779014757834375
    2. '
' → logprob: -9.000277519226074
    3. '                
' → logprob: -9.375277519226074
    4. '           ' → logprob: -10.250277519226074
    5. '			' → logprob: -11.125277519226074
    6. '	           ' → logprob: -12.125277519226074
    7. '              ' → logprob: -12.750277519226074
    8. '		       ' → logprob: -13.000277519226074
    9. '                ' → logprob: -13.375277519226074
    10. '<|end|>' → logprob: -13.750277519226074

Token 608: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00028982185176573694
    2. '                
' → logprob: -8.750289916992188
    3. '
' → logprob: -9.250289916992188
    4. '           ' → logprob: -10.875289916992188
    5. '                   ' → logprob: -12.500289916992188
    6. '              ' → logprob: -12.750289916992188
    7. '                ' → logprob: -13.375289916992188
    8. '                    
' → logprob: -13.500289916992188
    9. '            
' → logprob: -13.750289916992188
    10. '<|end|>' → logprob: -13.750289916992188

Token 609: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' (adapté à ' rows') → logprob: -0.5908684730529785
    2. ' if' → logprob: -1.9658684730529785
    3. 'if' → logprob: -2.0908684730529785
    4. ' rows' → logprob: -2.3408684730529785
    5. '               ' → logprob: -2.4658684730529785
    6. '           ' → logprob: -6.8408684730529785
    7. '	rows' → logprob: -9.46586799621582
    8. '                
' → logprob: -10.21586799621582
    9. 'lines' → logprob: -10.21586799621582
    10. ' lines' → logprob: -10.34086799621582

Token 610: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00020532844064291567
    2. '.' → logprob: -8.500205039978027
    3. 'append' → logprob: -13.375205039978027
    4. '.app' → logprob: -15.375205039978027
    5. '.ap' → logprob: -17.000205993652344
    6. ' .' → logprob: -18.000205993652344
    7. ' append' → logprob: -18.875205993652344
    8. '.
' → logprob: -19.750205993652344
    9. '.extend' → logprob: -19.750205993652344
    10. '=' → logprob: -20.125205993652344

Token 611: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.048587825149297714
    2. 'line' → logprob: -3.0485877990722656
    3. ' line' → logprob: -15.548587799072266
    4. '[line' → logprob: -16.048587799072266
    5. '(' → logprob: -16.173587799072266
    6. '=line' → logprob: -16.923587799072266
    7. '	line' → logprob: -18.173587799072266
    8. '#line' → logprob: -18.423587799072266
    9. ',line' → logprob: -19.548587799072266
    10. '(
' → logprob: -19.548587799072266

Token 612: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00319684692658484
    2. ')
' → logprob: -5.878196716308594
    3. '           ' → logprob: -8.128196716308594
    4. '               ' → logprob: -10.503196716308594
    5. '       ' → logprob: -10.628196716308594
    6. ' )' → logprob: -11.128196716308594
    7. '<|end|>' → logprob: -11.128196716308594
    8. '<|end|>' → logprob: -12.378196716308594
    9. '
' → logprob: -13.503196716308594
    10. '            ' → logprob: -13.628196716308594

Token 613: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00024858469259925187
    2. '		' → logprob: -9.250248908996582
    3. '       ' → logprob: -10.250248908996582
    4. '               ' → logprob: -10.750248908996582
    5. '<|end|>' → logprob: -10.875248908996582
    6. '            
' → logprob: -11.000248908996582
    7. '	       ' → logprob: -11.000248908996582
    8. '          ' → logprob: -11.625248908996582
    9. '[' → logprob: -11.875248908996582
    10. '	   ' → logprob: -12.250248908996582

Token 614: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8250141739845276
    2. '           ' → logprob: -1.5750141143798828
    3. 'if' → logprob: -1.7000141143798828
    4. 'try' → logprob: -2.450014114379883
    5. ' if' → logprob: -3.700014114379883
    6. ' self' → logprob: -3.825014114379883
    7. '       ' → logprob: -3.825014114379883
    8. 'board' → logprob: -4.575014114379883
    9. ' try' → logprob: -5.575014114379883
    10. ' board' → logprob: -6.575014114379883

Token 615: ' Validate' (ID: 41366)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4394958019256592
    2. 'try' → logprob: -1.1894958019256592
    3. 'if' → logprob: -3.439495801925659
    4. 'board' → logprob: -4.689496040344238
    5. '#' → logprob: -5.564496040344238
    6. ' self' → logprob: -5.814496040344238
    7. 'for' → logprob: -6.689496040344238
    8. ' try' → logprob: -6.689496040344238
    9. '       ' → logprob: -8.314496040344238
    10. ' if' → logprob: -8.439496040344238

Token 616: ' and' (ID: 326)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.7107592821121216
    2. 'if' → logprob: -1.3357592821121216
    3. ' if' → logprob: -1.9607592821121216
    4. ' try' → logprob: -2.710759162902832
    5. '           ' → logprob: -4.210759162902832
    6. 'self' → logprob: -4.710759162902832
    7. 'for' → logprob: -5.210759162902832
    8. ' for' → logprob: -5.585759162902832
    9. ' self' → logprob: -6.085759162902832
    10. '
' → logprob: -6.335759162902832

Token 617: ' add' (ID: 1147)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.185550719499588
    2. 'try' → logprob: -2.3105506896972656
    3. ' self' → logprob: -3.0605506896972656
    4. ' try' → logprob: -3.8105506896972656
    5. '
' → logprob: -7.310550689697266
    6. '           ' → logprob: -7.935550689697266
    7. 'continue' → logprob: -10.185550689697266
    8. 'append' → logprob: -10.435550689697266
    9. ' continue' → logprob: -11.435550689697266
    10. '            
' → logprob: -11.685550689697266

Token 618: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20364800095558167
    2. 'try' → logprob: -1.8286479711532593
    3. ' self' → logprob: -4.328648090362549
    4. '           ' → logprob: -4.828648090362549
    5. ' try' → logprob: -6.828648090362549
    6. 'board' → logprob: -7.828648090362549
    7. '       ' → logprob: -7.828648090362549
    8. '
' → logprob: -8.07864761352539
    9. ' board' → logprob: -9.20364761352539
    10. '(self' → logprob: -9.32864761352539

Token 619: ' board' (ID: 6796)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3185971677303314
    2. 'Board' → logprob: -1.5685971975326538
    3. 'board' → logprob: -3.0685970783233643
    4. ' self' → logprob: -4.943597316741943
    5. ' Board' → logprob: -5.068597316741943
    6. ' board' → logprob: -5.443597316741943
    7. '           ' → logprob: -8.943596839904785
    8. '_board' → logprob: -9.943596839904785
    9. 'boards' → logprob: -10.693596839904785
    10. 'try' → logprob: -11.193596839904785

Token 620: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002583594177849591
    2. '
' → logprob: -9.000258445739746
    3. 'self' → logprob: -10.000258445739746
    4. '       ' → logprob: -10.375258445739746
    5. '            
' → logprob: -10.875258445739746
    6. 'try' → logprob: -11.125258445739746
    7. ',' → logprob: -11.250258445739746
    8. ' self' → logprob: -12.500258445739746
    9. '               ' → logprob: -13.500258445739746
    10. '          ' → logprob: -13.750258445739746

Token 621: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010111719369888306
    2. '       ' → logprob: -4.6351118087768555
    3. '
' → logprob: -8.635111808776855
    4. 'try' → logprob: -9.760111808776855
    5. '            
' → logprob: -10.260111808776855
    6. '        
' → logprob: -10.385111808776855
    7. 'self' → logprob: -10.385111808776855
    8. ',' → logprob: -12.010111808776855
    9. '               ' → logprob: -12.260111808776855
    10. '    
' → logprob: -13.135111808776855

Token 622: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.42137521505355835
    2. 'try' → logprob: -1.1713752746582031
    3. 'board' → logprob: -4.046375274658203
    4. '           ' → logprob: -4.671375274658203
    5. ' self' → logprob: -5.171375274658203
    6. ' try' → logprob: -6.921375274658203
    7. ' board' → logprob: -8.171375274658203
    8. 'if' → logprob: -9.671375274658203
    9. '       ' → logprob: -9.921375274658203
    10. '
' → logprob: -12.171375274658203

Token 623: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -0.00015347852604463696
    2. 'datasets' → logprob: -8.875153541564941
    3. '.rows' → logprob: -12.000153541564941
    4. '.datas' → logprob: -12.375153541564941
    5. '.' → logprob: -13.500153541564941
    6. '.dataset' → logprob: -13.750153541564941
    7. '.data' → logprob: -15.000153541564941
    8. '.dat' → logprob: -15.375153541564941
    9. ' datasets' → logprob: -16.000152587890625
    10. ' .' → logprob: -16.000152587890625

Token 624: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.180258191714529e-06
    2. '.' → logprob: -11.750008583068848
    3. ' .' → logprob: -15.500008583068848
    4. '.extend' → logprob: -18.00000762939453
    5. '.app' → logprob: -18.12500762939453
    6. 'append' → logprob: -19.87500762939453
    7. '.ap' → logprob: -20.12500762939453
    8. '.add' → logprob: -20.50000762939453
    9. '.insert' → logprob: -20.87500762939453
    10. '
' → logprob: -21.25000762939453

Token 625: '(Board' (ID: 157859)
  Prédit: '(Board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Board' → logprob: -0.00013357517309486866
    2. 'Board' → logprob: -9.000133514404297
    3. ' Board' → logprob: -11.500133514404297
    4. '(' → logprob: -17.875133514404297
    5. '(board' → logprob: -18.250133514404297
    6. '.Board' → logprob: -18.500133514404297
    7. '(
' → logprob: -21.375133514404297
    8. '_board' → logprob: -21.625133514404297
    9. '(Block' → logprob: -21.875133514404297
    10. 'board' → logprob: -22.000133514404297

Token 626: '(rows' (ID: 69648)
  Prédit: '(rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rows' → logprob: -9.372294698550832e-06
    2. '(lines' → logprob: -12.125009536743164
    3. '(' → logprob: -13.250009536743164
    4. 'rows' → logprob: -13.375009536743164
    5. ')' → logprob: -15.250009536743164
    6. ' (' → logprob: -15.750009536743164
    7. '(
' → logprob: -16.250009536743164
    8. ')(' → logprob: -16.750009536743164
    9. '(row' → logprob: -17.125009536743164
    10. ' rows' → logprob: -17.250009536743164

Token 627: '))


' (ID: 49252)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00018280261429026723
    2. ')' → logprob: -8.62518310546875
    3. '))
' → logprob: -13.00018310546875
    4. ' ))' → logprob: -14.75018310546875
    5. '()))' → logprob: -15.62518310546875
    6. ')))' → logprob: -15.87518310546875
    7. '       ' → logprob: -16.50018310546875
    8. '));' → logprob: -16.87518310546875
    9. '   ' → logprob: -17.00018310546875
    10. '])' → logprob: -17.37518310546875

Token 628: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1888904571533203
    2. '   ' → logprob: -2.0638904571533203
    3. '<|end|>' → logprob: -3.4388904571533203
    4. 'class' → logprob: -4.68889045715332
    5. 'def' → logprob: -5.93889045715332
    6. '<|end|>' → logprob: -7.31389045715332
    7. '    
' → logprob: -8.43889045715332
    8. '

' → logprob: -8.93889045715332
    9. ' ' → logprob: -9.81389045715332
    10. 'from' → logprob: -10.93889045715332

Token 629: ' Output' (ID: 18315)
  Prédit: 'Result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Result' → logprob: -0.724875807762146
    2. 'Output' → logprob: -0.974875807762146
    3. 'Game' → logprob: -2.8498759269714355
    4. 'Main' → logprob: -3.0998759269714355
    5. ' Result' → logprob: -4.7248759269714355
    6. 'Solution' → logprob: -4.8498759269714355
    7. 'Runner' → logprob: -5.4748759269714355
    8. ' Game' → logprob: -5.7248759269714355
    9. ' Output' → logprob: -5.8498759269714355
    10. 'Evaluator' → logprob: -6.4748759269714355

Token 630: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -0.26556041836738586
    2. 'Writer' → logprob: -1.6405603885650635
    3. 'ter' → logprob: -4.015560626983643
    4. 'Handler' → logprob: -4.265560626983643
    5. 'Printer' → logprob: -5.265560626983643
    6. 'Generator' → logprob: -7.140560626983643
    7. 'Manager' → logprob: -7.390560626983643
    8. 'Formatter' → logprob: -7.890560626983643
    9. 'Publisher' → logprob: -9.515560150146484
    10. 'Producer' → logprob: -9.765560150146484

Token 631: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0040887282229959965
    2. ':
' → logprob: -5.504088878631592
    3. ':def' → logprob: -11.879088401794434
    4. '):' → logprob: -14.254088401794434
    5. ' :' → logprob: -14.379088401794434
    6. ':

' → logprob: -14.379088401794434
    7. '   ' → logprob: -14.504088401794434
    8. ':void' → logprob: -15.754088401794434
    9. ':
' → logprob: -15.754088401794434
    10. 'def' → logprob: -16.25408935546875

Token 632: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004154260735958815
    2. 'class' → logprob: -6.004154205322266
    3. 'def' → logprob: -6.504154205322266
    4. ' def' → logprob: -8.879154205322266
    5. ' class' → logprob: -10.379154205322266
    6. ':' → logprob: -12.129154205322266
    7. '```' → logprob: -13.629154205322266
    8. '
' → logprob: -14.379154205322266
    9. '	def' → logprob: -15.004154205322266
    10. '   ' → logprob: -15.254154205322266

Token 633: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.493430894101039e-05
    2. ' def' → logprob: -10.000075340270996
    3. '   ' → logprob: -10.750075340270996
    4. 'class' → logprob: -11.875075340270996
    5. '@' (adapté à ' @') → logprob: -13.875075340270996
    6. '
' → logprob: -16.37507438659668
    7. '	def' → logprob: -17.25007438659668
    8. 'de' → logprob: -18.50007438659668
    9. '```' → logprob: -19.37507438659668
    10. ' ' → logprob: -19.75007438659668

Token 634: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.00036049127811565995
    2. 'dat' → logprob: -8.250360488891602
    3. 'classmethod' → logprob: -9.250360488891602
    4. 'abstract' → logprob: -13.375360488891602
    5. 'property' → logprob: -13.875360488891602
    6. 'static' → logprob: -14.750360488891602
    7. 'final' → logprob: -16.5003604888916
    8. 'abc' → logprob: -18.5003604888916
    9. '@' → logprob: -19.0003604888916
    10. '__' → logprob: -19.0003604888916

Token 635: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.48553216457366943
    2. '   ' → logprob: -0.9855321645736694
    3. '
' → logprob: -5.110532283782959
    4. ' def' → logprob: -5.235532283782959
    5. '	def' → logprob: -11.4855318069458
    6. '    
' → logprob: -11.8605318069458
    7. ' ' → logprob: -12.1105318069458
    8. '  ' → logprob: -12.8605318069458
    9. '(' → logprob: -13.2355318069458
    10. ':' → logprob: -13.6105318069458

Token 636: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006352362222969532
    2. ' def' → logprob: -5.756352424621582
    3. '   ' → logprob: -5.756352424621582
    4. '
' → logprob: -12.631352424621582
    5. '	def' → logprob: -13.006352424621582
    6. 'class' → logprob: -13.631352424621582
    7. ':def' → logprob: -16.381351470947266
    8. '_def' → logprob: -17.006351470947266
    9. '(def' → logprob: -17.256351470947266
    10. '    
' → logprob: -17.506351470947266

Token 637: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.896309739408025e-07
    2. ' def' → logprob: -14.250000953674316
    3. '
' → logprob: -17.625
    4. '   ' → logprob: -17.875
    5. 'class' → logprob: -21.625
    6. '	def' → logprob: -22.375
    7. '    
' → logprob: -22.5
    8. ' ' → logprob: -22.625
    9. '```' → logprob: -23.125
    10. '  ' → logprob: -23.75

Token 638: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0020534314680844545
    2. 'write' → logprob: -7.377053260803223
    3. 'process' → logprob: -7.502053260803223
    4. 'format' → logprob: -7.877053260803223
    5. 'display' → logprob: -8.002053260803223
    6. ' print' → logprob: -9.377053260803223
    7. 'println' → logprob: -10.877053260803223
    8. 'result' → logprob: -11.002053260803223
    9. 'output' → logprob: -11.377053260803223
    10. 'render' → logprob: -12.002053260803223

Token 639: '_results' (ID: 31049)
  Prédit: '_result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.09171625226736069
    2. '_results' → logprob: -3.0917162895202637
    3. '(' → logprob: -4.091716289520264
    4. '(result' → logprob: -4.216716289520264
    5. '("' → logprob: -5.341716289520264
    6. '_w' → logprob: -5.716716289520264
    7. 'result' → logprob: -6.716716289520264
    8. '(w' → logprob: -8.091715812683105
    9. '(results' → logprob: -8.091715812683105
    10. '(_' → logprob: -8.716715812683105

Token 640: '(results' (ID: 42655)
  Prédit: '(results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -0.0022273333743214607
    2. '(d' → logprob: -6.752227306365967
    3. '(' → logprob: -7.377227306365967
    4. '(result' → logprob: -7.877227306365967
    5. '(data' → logprob: -11.252227783203125
    6. '(datas' → logprob: -11.627227783203125
    7. ' (' → logprob: -11.877227783203125
    8. '(outputs' → logprob: -12.377227783203125
    9. '(res' → logprob: -12.627227783203125
    10. '(board' → logprob: -13.002227783203125

Token 641: ':' (ID: 25)
  Prédit: '(results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -0.023341447114944458
    2. ':' → logprob: -4.523341655731201
    3. '):' → logprob: -5.523341655731201
    4. 'results' → logprob: -5.648341655731201
    5. ')(' → logprob: -6.398341655731201
    6. ')' → logprob: -6.398341655731201
    7. ',' → logprob: -7.023341655731201
    8. '(' → logprob: -7.898341655731201
    9. ' (' → logprob: -9.898341178894043
    10. ' ' → logprob: -11.148341178894043

Token 642: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0015112892724573612
    2. ' List' → logprob: -6.501511096954346
    3. 'list' → logprob: -11.751511573791504
    4. ')' → logprob: -14.626511573791504
    5. '[List' → logprob: -15.501511573791504
    6. '   ' → logprob: -16.001510620117188
    7. ' list' → logprob: -16.376510620117188
    8. '(List' → logprob: -16.376510620117188
    9. ' ' → logprob: -17.126510620117188
    10. '_list' → logprob: -18.251510620117188

Token 643: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: 0.0
    2. '[' → logprob: -17.75
    3. 'str' → logprob: -18.125
    4. '[int' → logprob: -19.125
    5. ')' → logprob: -19.5
    6. '[
' → logprob: -20.625
    7. '(str' → logprob: -20.75
    8. '
' → logprob: -20.75
    9. '	str' → logprob: -21.625
    10. '[List' → logprob: -21.75

Token 644: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.048634372651576996
    2. ')' → logprob: -3.0486342906951904
    3. ']):' → logprob: -11.04863452911377
    4. ']):
' → logprob: -11.42363452911377
    5. '):' → logprob: -11.79863452911377
    6. ']' → logprob: -11.92363452911377
    7. '):
' → logprob: -13.54863452911377
    8. ' ])' → logprob: -13.79863452911377
    9. ''])' → logprob: -14.54863452911377
    10. '))' → logprob: -14.79863452911377

Token 645: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019793107639998198
    2. ':
' → logprob: -6.626979351043701
    3. '():' → logprob: -7.626979351043701
    4. '(' → logprob: -9.626978874206543
    5. '(lines' → logprob: -10.376978874206543
    6. '->' → logprob: -11.251978874206543
    7. '   ' → logprob: -11.251978874206543
    8. ':def' → logprob: -11.501978874206543
    9. '):' → logprob: -11.876978874206543
    10. '():
' → logprob: -12.876978874206543

Token 646: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.1269298940896988
    2. ' None' → logprob: -2.126929998397827
    3. '   ' → logprob: -13.251930236816406
    4. ' ' → logprob: -16.876930236816406
    5. '(None' → logprob: -17.501930236816406
    6. '  ' → logprob: -19.126930236816406
    7. 'staticmethod' → logprob: -19.626930236816406
    8. 'none' → logprob: -20.251930236816406
    9. '_None' → logprob: -20.251930236816406
    10. ')' → logprob: -20.251930236816406

Token 647: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019675543531775475
    2. ':
' → logprob: -4.8946757316589355
    3. '():' → logprob: -5.0196757316589355
    4. '   ' → logprob: -5.6446757316589355
    5. '       ' → logprob: -6.8946757316589355
    6. '():
' → logprob: -7.7696757316589355
    7. '(' → logprob: -8.269675254821777
    8. '(lines' → logprob: -10.394675254821777
    9. '):' → logprob: -11.019675254821777
    10. '{' → logprob: -11.144675254821777

Token 648: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.750436007976532e-05
    2. '   ' → logprob: -10.87503719329834
    3. ' for' → logprob: -11.12503719329834
    4. 'for' → logprob: -12.62503719329834
    5. '	' → logprob: -14.87503719329834
    6. '	   ' → logprob: -15.62503719329834
    7. '	for' → logprob: -16.250038146972656
    8. '	       ' → logprob: -18.625038146972656
    9. '```' → logprob: -19.375038146972656
    10. '    ' → logprob: -19.500038146972656

Token 649: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0018800891702994704
    2. ' for' → logprob: -6.751880168914795
    3. '       ' → logprob: -7.251880168914795
    4. '   ' → logprob: -14.126879692077637
    5. '```' → logprob: -17.876880645751953
    6. '	for' → logprob: -18.751880645751953
    7. ' ' → logprob: -19.626880645751953
    8. 'print' → logprob: -20.376880645751953
    9. 'if' → logprob: -20.751880645751953
    10. '
' → logprob: -21.126880645751953

Token 650: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.018718011677265167
    2. ' result' → logprob: -4.018718242645264
    3. 'res' → logprob: -7.518718242645264
    4. ' res' → logprob: -10.643717765808105
    5. 'r' → logprob: -14.018717765808105
    6. '   ' → logprob: -15.018717765808105
    7. ' r' → logprob: -16.893718719482422
    8. '	result' → logprob: -17.393718719482422
    9. 'line' → logprob: -19.018718719482422
    10. '```' → logprob: -19.268718719482422

Token 651: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004084216430783272
    2. 'in' → logprob: -5.50408411026001
    3. ' ' → logprob: -13.004084587097168
    4. 'result' → logprob: -13.129084587097168
    5. '  ' → logprob: -14.504084587097168
    6. ',' → logprob: -14.754084587097168
    7. '   ' → logprob: -14.754084587097168
    8. '	in' → logprob: -15.754084587097168
    9. 'print' → logprob: -16.75408363342285
    10. 's' → logprob: -16.87908363342285

Token 652: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.002485765377059579
    2. ' results' → logprob: -6.002485752105713
    3. 'result' → logprob: -11.502486228942871
    4. '	results' → logprob: -18.127485275268555
    5. '(results' → logprob: -18.502485275268555
    6. '   ' → logprob: -18.502485275268555
    7. ' result' → logprob: -18.752485275268555
    8. '
' → logprob: -20.377485275268555
    9. '.results' → logprob: -20.752485275268555
    10. '_results' → logprob: -22.502485275268555

Token 653: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06762625277042389
    2. ':' → logprob: -2.9426262378692627
    3. ':
' → logprob: -4.442626476287842
    4. 'print' → logprob: -7.192626476287842
    5. '       ' → logprob: -9.817625999450684
    6. '   ' → logprob: -10.442625999450684
    7. ',' → logprob: -11.067625999450684
    8. '.' → logprob: -11.442625999450684
    9. '.print' → logprob: -11.942625999450684
    10. '```' → logprob: -12.317625999450684

Token 654: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019589388743042946
    2. 'print' → logprob: -4.144589424133301
    3. ' print' → logprob: -5.644589424133301
    4. '```' → logprob: -11.8945894241333
    5. '   ' → logprob: -12.8945894241333
    6. '       ' → logprob: -13.5195894241333
    7. '		' → logprob: -14.8945894241333
    8. '
' → logprob: -15.0195894241333
    9. '	print' → logprob: -15.7695894241333
    10. '`' → logprob: -15.7695894241333

Token 655: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.5
    3. '           ' → logprob: -19.0
    4. '```' → logprob: -23.0
    5. '       ' → logprob: -23.25
    6. 'println' → logprob: -24.875
    7. '               ' → logprob: -25.125
    8. '
' → logprob: -25.625
    9. '   ' → logprob: -26.0
    10. '	print' → logprob: -26.375

Token 656: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.00015860427811276168
    2. 'result' → logprob: -8.750158309936523
    3. '(f' → logprob: -17.375158309936523
    4. '(' → logprob: -18.750158309936523
    5. '=result' → logprob: -20.125158309936523
    6. '(results' → logprob: -20.875158309936523
    7. ' result' → logprob: -21.000158309936523
    8. '[result' → logprob: -21.250158309936523
    9. '(
' → logprob: -21.875158309936523
    10. '	result' → logprob: -22.000158309936523

Token 657: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ')
' → logprob: -13.750001907348633
    3. '       ' → logprob: -14.875001907348633
    4. '())' → logprob: -15.000001907348633
    5. '<|end|>' → logprob: -16.125001907348633
    6. '()' → logprob: -16.375001907348633
    7. '")' → logprob: -16.750001907348633
    8. '')' → logprob: -16.875001907348633
    9. '   ' → logprob: -17.125001907348633
    10. ' )' → logprob: -17.375001907348633

Token 658: 'def' (ID: 1314)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0793924629688263
    2. 'def' → logprob: -2.579392433166504
    3. '
' → logprob: -8.204392433166504
    4. 'if' → logprob: -8.454392433166504
    5. '```' → logprob: -11.579392433166504
    6. ' class' → logprob: -12.204392433166504
    7. '  
' → logprob: -14.329392433166504
    8. '    
' → logprob: -14.954392433166504
    9. 'from' → logprob: -15.079392433166504
    10. ' def' → logprob: -15.329392433166504

Token 659: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0003396343090571463
    2. 'main' → logprob: -8.00033950805664
    3. ' run' → logprob: -12.50033950805664
    4. ' solve' → logprob: -15.87533950805664
    5. ' def' → logprob: -16.00033950805664
    6. ' process' → logprob: -16.37533950805664
    7. 'def' → logprob: -16.87533950805664
    8. '	main' → logprob: -18.87533950805664
    9. 'run' → logprob: -19.37533950805664
    10. '_main' → logprob: -20.00033950805664

Token 660: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.0325924449716695e-05
    2. ' ():' → logprob: -12.00001049041748
    3. '():
' → logprob: -12.62501049041748
    4. '()' → logprob: -14.00001049041748
    5. '():
' → logprob: -18.375009536743164
    6. '_' → logprob: -19.000009536743164
    7. '()>' → logprob: -20.000009536743164
    8. '().' → logprob: -20.250009536743164
    9. '():

' → logprob: -20.625009536743164
    10. '(' → logprob: -20.625009536743164

Token 661: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -2.3915141355246305e-05
    2. '():
' → logprob: -11.37502384185791
    3. '()' → logprob: -11.75002384185791
    4. ' ():' → logprob: -12.75002384185791
    5. ':' → logprob: -13.37502384185791
    6. '()->' → logprob: -16.875024795532227
    7. '(' → logprob: -17.250024795532227
    8. '():
' → logprob: -18.000024795532227
    9. '()>' → logprob: -19.125024795532227
    10. '):' → logprob: -19.750024795532227

Token 662: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.001170225441455841
    2. ' None' → logprob: -6.7511701583862305
    3. 'int' → logprob: -16.751171112060547
    4. 'none' → logprob: -19.876171112060547
    5. '_None' → logprob: -19.876171112060547
    6. '(None' → logprob: -20.251171112060547
    7. 'void' → logprob: -20.501171112060547
    8. '   ' → logprob: -20.626171112060547
    9. ' ' → logprob: -20.751171112060547
    10. 'No' → logprob: -21.126171112060547

Token 663: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2262253612279892
    2. '():' → logprob: -2.1012253761291504
    3. ':
' → logprob: -2.7262253761291504
    4. '():
' → logprob: -4.22622537612915
    5. '):' → logprob: -10.601224899291992
    6. '):
' → logprob: -10.851224899291992
    7. '()' → logprob: -10.976224899291992
    8. '   ' → logprob: -11.601224899291992
    9. ':def' → logprob: -12.851224899291992
    10. '():
' → logprob: -13.601224899291992

Token 664: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16196221113204956
    2. ' input' → logprob: -2.2869622707366943
    3. ' ip' → logprob: -3.5369622707366943
    4. ' processor' → logprob: -4.036962032318115
    5. 'input' → logprob: -7.161962032318115
    6. 'ip' → logprob: -8.786962509155273
    7. ' inp' → logprob: -9.161962509155273
    8. 'processor' → logprob: -9.286962509155273
    9. ' inputs' → logprob: -10.286962509155273
    10. '   ' → logprob: -10.786962509155273

Token 665: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.11495815217494965
    2. '   ' → logprob: -2.6149580478668213
    3. 'processor' → logprob: -3.6149580478668213
    4. ' input' → logprob: -5.2399582862854
    5. 'ip' → logprob: -6.1149582862854
    6. ' processor' → logprob: -7.4899582862854
    7. 'inp' → logprob: -7.9899582862854
    8. 'reader' → logprob: -9.739957809448242
    9. ' ip' → logprob: -10.864957809448242
    10. 'inputs' → logprob: -12.239957809448242

Token 666: '_processor' (ID: 129611)
  Prédit: '_processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_processor' → logprob: -0.000275040598353371
    2. '_proc' → logprob: -8.250274658203125
    3. 'Processor' → logprob: -11.875274658203125
    4. '_' → logprob: -13.000274658203125
    5. 'processor' → logprob: -13.250274658203125
    6. '_process' → logprob: -13.875274658203125
    7. '_reader' → logprob: -14.000274658203125
    8. 'proc' → logprob: -15.250274658203125
    9. '_processors' → logprob: -15.875274658203125
    10. '_handler' → logprob: -16.000274658203125

Token 667: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014211451634764671
    2. '=' → logprob: -4.264211654663086
    3. '.read' → logprob: -10.639211654663086
    4. ' ' → logprob: -11.639211654663086
    5. '   ' → logprob: -12.014211654663086
    6. '.' → logprob: -12.139211654663086
    7. '  ' → logprob: -13.264211654663086
    8. '_' → logprob: -13.764211654663086
    9. 'read' → logprob: -15.389211654663086
    10. ' =
' → logprob: -15.889211654663086

Token 668: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.005233763717114925
    2. ' Input' → logprob: -5.2552337646484375
    3. '	Input' → logprob: -19.755233764648438
    4. 'input' → logprob: -21.630233764648438
    5. '_input' → logprob: -22.130233764648438
    6. '_Input' → logprob: -22.255233764648438
    7. ' input' → logprob: -22.880233764648438
    8. '\Input' → logprob: -24.255233764648438
    9. '<Input' → logprob: -24.255233764648438
    10. 'INPUT' → logprob: -24.505233764648438

Token 669: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: 0.0
    2. ' Processor' → logprob: -19.5
    3. 'Process' → logprob: -20.25
    4. 'Processors' → logprob: -21.125
    5. '_processor' → logprob: -22.375
    6. 'processor' → logprob: -22.375
    7. 'Processing' → logprob: -24.5
    8. 'Processed' → logprob: -25.125
    9. ' processor' → logprob: -25.25
    10. 'Proces' → logprob: -25.5

Token 670: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.532340943813324
    2. '
' → logprob: -0.907340943813324
    3. '    
' → logprob: -4.782341003417969
    4. 'input' → logprob: -8.157341003417969
    5. '  
' → logprob: -8.657341003417969
    6. 'output' → logprob: -9.282341003417969
    7. '   
' → logprob: -9.657341003417969
    8. ' 
' → logprob: -10.157341003417969
    9. '<|end|>' → logprob: -10.157341003417969
    10. '```' → logprob: -11.282341003417969

Token 671: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6112558245658875
    2. 'input' → logprob: -0.8612558245658875
    3. ' input' → logprob: -3.3612558841705322
    4. '
' → logprob: -12.611255645751953
    5. '	input' → logprob: -12.611255645751953
    6. '(input' → logprob: -14.861255645751953
    7. '_input' → logprob: -15.361255645751953
    8. ',input' → logprob: -15.361255645751953
    9. '    
' → logprob: -15.736255645751953
    10. ' ' → logprob: -15.861255645751953

Token 672: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.000810936326161027
    2. ' input' → logprob: -7.7508111000061035
    3. '   ' → logprob: -7.8758111000061035
    4. 'output' → logprob: -15.875810623168945
    5. '
' → logprob: -16.375810623168945
    6. 'while' → logprob: -17.500810623168945
    7. '  ' → logprob: -17.625810623168945
    8. '	input' → logprob: -17.750810623168945
    9. '    
' → logprob: -18.125810623168945
    10. '<input' → logprob: -18.375810623168945

Token 673: '_processor' (ID: 129611)
  Prédit: '_processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_processor' → logprob: -9.014684110297821e-06
    2. 'processor' → logprob: -12.250008583068848
    3. '_processors' → logprob: -13.375008583068848
    4. 'Processor' → logprob: -13.500008583068848
    5. '   ' → logprob: -14.625008583068848
    6. '_processing' → logprob: -14.875008583068848
    7. '_' → logprob: -15.625008583068848
    8. '_process' → logprob: -17.125009536743164
    9. '_parser' → logprob: -17.125009536743164
    10. ' processor' → logprob: -17.250009536743164

Token 674: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -4.320199877838604e-07
    2. '.' → logprob: -15.5
    3. 'read' → logprob: -15.75
    4. '.readline' → logprob: -21.375
    5. ' .' → logprob: -22.0
    6. '.write' → logprob: -22.0
    7. '.Read' → logprob: -22.25
    8. '.readlines' → logprob: -22.625
    9. '.print' → logprob: -23.375
    10. '.load' → logprob: -23.625

Token 675: '_bo' (ID: 104368)
  Prédit: '_bo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bo' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.375
    3. '_board' → logprob: -16.875
    4. '```' → logprob: -18.375
    5. '_b' → logprob: -18.5
    6. '_br' → logprob: -18.75
    7. '\' → logprob: -19.125
    8. '_BO' → logprob: -19.125
    9. 'boards' → logprob: -19.375
    10. '_buffers' → logprob: -19.875

Token 676: 'ards' (ID: 3098)
  Prédit: 'ards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ards' → logprob: -0.023975146934390068
    2. 'o' → logprob: -4.523975372314453
    3. 'ords' → logprob: -5.023975372314453
    4. 'boards' → logprob: -5.523975372314453
    5. 'oard' → logprob: -6.148975372314453
    6. '   ' → logprob: -10.023975372314453
    7. 'oad' → logprob: -11.023975372314453
    8. 'oa' → logprob: -11.523975372314453
    9. '_' → logprob: -11.648975372314453
    10. 'a' → logprob: -11.648975372314453

Token 677: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08817368000745773
    2. '
' → logprob: -2.5881736278533936
    3. '    
' → logprob: -5.463173866271973
    4. 'results' → logprob: -5.588173866271973
    5. ' results' → logprob: -6.713173866271973
    6. '(results' → logprob: -11.338173866271973
    7. '	results' → logprob: -11.713173866271973
    8. ' 
' → logprob: -12.088173866271973
    9. '   
' → logprob: -12.463173866271973
    10. 'result' → logprob: -12.838173866271973

Token 678: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23413152992725372
    2. 'results' → logprob: -2.7341315746307373
    3. ' results' → logprob: -2.9841315746307373
    4. 'output' → logprob: -3.2341315746307373
    5. 'result' → logprob: -3.4841315746307373
    6. ' result' → logprob: -4.359131336212158
    7. ' output' → logprob: -4.609131336212158
    8. 'outputs' → logprob: -8.609131813049316
    9. 'resolver' → logprob: -8.984131813049316
    10. '
' → logprob: -10.609131813049316

Token 679: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.38926729559898376
    2. 'resolver' → logprob: -1.3892673254013062
    3. 'output' → logprob: -2.6392672061920166
    4. 'result' → logprob: -6.389267444610596
    5. 'outputs' → logprob: -9.764266967773438
    6. 'res' → logprob: -11.139266967773438
    7. 'board' → logprob: -11.639266967773438
    8. ' results' → logprob: -12.139266967773438
    9. ' resolver' → logprob: -12.139266967773438
    10. 'solver' → logprob: -13.389266967773438

Token 680: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06200220435857773
    2. '=' → logprob: -2.812002182006836
    3. ':' → logprob: -10.312002182006836
    4. '=[]' → logprob: -13.687002182006836
    5. '_' → logprob: -15.687002182006836
    6. '   ' → logprob: -17.187002182006836
    7. '[]' → logprob: -17.437002182006836
    8. ' ' → logprob: -18.312002182006836
    9. '=[]
' → logprob: -18.562002182006836
    10. '[:]' → logprob: -18.812002182006836

Token 681: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.06197262182831764
    2. 'List' → logprob: -2.8119726181030273
    3. '[List' → logprob: -12.311972618103027
    4. '[]' → logprob: -14.936972618103027
    5. ' =' → logprob: -16.561973571777344
    6. ' list' → logprob: -16.936973571777344
    7. ' []' → logprob: -17.061973571777344
    8. '   ' → logprob: -18.686973571777344
    9. '	List' → logprob: -19.186973571777344
    10. '=' → logprob: -19.186973571777344

Token 682: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.9361264946837764e-07
    2. 'str' → logprob: -15.75
    3. '[' → logprob: -19.0
    4. '=str' → logprob: -21.0
    5. '	str' → logprob: -22.125
    6. '(str' → logprob: -22.875
    7. '```' → logprob: -22.875
    8. '.str' → logprob: -23.125
    9. '[
' → logprob: -23.125
    10. '[int' → logprob: -23.375

Token 683: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.9153885558771435e-06
    2. ']=' → logprob: -12.250005722045898
    3. '[' → logprob: -14.625005722045898
    4. '[str' → logprob: -15.500005722045898
    5. ')' → logprob: -16.0000057220459
    6. ' ]' → logprob: -16.0000057220459
    7. '=' → logprob: -16.3750057220459
    8. '>' → logprob: -17.3750057220459
    9. ']
' → logprob: -17.6250057220459
    10. '   ' → logprob: -18.6250057220459

Token 684: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269282102584839
    2. ' =' → logprob: -2.1269283294677734
    3. '   ' → logprob: -16.626928329467773
    4. '=[]' → logprob: -17.001928329467773
    5. ' ' → logprob: -17.126928329467773
    6. '[' → logprob: -18.126928329467773
    7. '[]' → logprob: -18.376928329467773
    8. ')' → logprob: -20.001928329467773
    9. '.append' → logprob: -20.001928329467773
    10. '	' → logprob: -20.251928329467773

Token 685: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03872775286436081
    2. '[]
' → logprob: -3.2887277603149414
    3. ' []' → logprob: -7.788727760314941
    4. '[' → logprob: -8.788727760314941
    5. '[]

' → logprob: -9.538727760314941
    6. ' []
' → logprob: -10.288727760314941
    7. '   ' → logprob: -11.788727760314941
    8. '[
' → logprob: -12.663727760314941
    9. '[])' → logprob: -14.913727760314941
    10. '["' → logprob: -15.163727760314941

Token 686: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00022082125360611826
    2. ' for' → logprob: -9.000221252441406
    3. 'for' → logprob: -9.250221252441406
    4. '
' → logprob: -13.625221252441406
    5. '    
' → logprob: -17.000221252441406
    6. '       ' → logprob: -18.875221252441406
    7. '   ' → logprob: -19.000221252441406
    8. '```' → logprob: -19.375221252441406
    9. '  ' → logprob: -20.375221252441406
    10. '    ' → logprob: -20.375221252441406

Token 687: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06622064113616943
    2. ' for' → logprob: -3.066220760345459
    3. '   ' → logprob: -4.066220760345459
    4. 'resolver' → logprob: -8.0662202835083
    5. ' resolver' → logprob: -11.1912202835083
    6. 'game' → logprob: -12.0662202835083
    7. ' game' → logprob: -14.0662202835083
    8. 'result' → logprob: -14.0662202835083
    9. '
' → logprob: -14.4412202835083
    10. 'output' → logprob: -14.5662202835083

Token 688: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.005237548612058163
    2. ' board' → logprob: -5.255237579345703
    3. '   ' → logprob: -12.630237579345703
    4. 'b' → logprob: -16.005237579345703
    5. '	board' → logprob: -16.255237579345703
    6. ' ' → logprob: -16.380237579345703
    7. 'dataset' → logprob: -17.130237579345703
    8. 'Board' → logprob: -17.755237579345703
    9. '```' → logprob: -18.005237579345703
    10. '_board' → logprob: -18.130237579345703

Token 689: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009760694578289986
    2. 'in' → logprob: -4.634760856628418
    3. '   ' → logprob: -12.384760856628418
    4. '    ' → logprob: -15.259760856628418
    5. ' ' → logprob: -16.1347599029541
    6. ' ' → logprob: -16.6347599029541
    7. '	in' → logprob: -16.6347599029541
    8. '
' → logprob: -17.0097599029541
    9. '  ' → logprob: -18.0097599029541
    10. 's' → logprob: -18.1347599029541

Token 690: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20141851902008057
    2. ' input' → logprob: -1.7014185190200806
    3. '   ' → logprob: -12.20141887664795
    4. '(input' → logprob: -16.451417922973633
    5. '	input' → logprob: -17.201417922973633
    6. '<input' → logprob: -17.451417922973633
    7. '=input' → logprob: -18.076417922973633
    8. 'Input' → logprob: -18.701417922973633
    9. ' ' → logprob: -18.951417922973633
    10. 'import' → logprob: -19.326417922973633

Token 691: '_processor' (ID: 129611)
  Prédit: '_processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_processor' → logprob: -0.00033272415748797357
    2. 'processor' → logprob: -8.250332832336426
    3. 'Processor' → logprob: -10.750332832336426
    4. '.processor' → logprob: -10.875332832336426
    5. 's' → logprob: -11.625332832336426
    6. '   ' → logprob: -12.500332832336426
    7. 'input' → logprob: -12.625332832336426
    8. '.process' → logprob: -12.625332832336426
    9. '._' → logprob: -13.000332832336426
    10. '_processors' → logprob: -13.250332832336426

Token 692: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -0.0004473540757317096
    2. '.datas' → logprob: -8.125447273254395
    3. ' .' → logprob: -9.375447273254395
    4. '.' → logprob: -9.875447273254395
    5. '.dataset' → logprob: -11.750447273254395
    6. '.dat' → logprob: -12.625447273254395
    7. '.results' → logprob: -13.250447273254395
    8. '._' → logprob: -14.625447273254395
    9. '.data' → logprob: -15.250447273254395
    10. '.samples' → logprob: -15.500447273254395

Token 693: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6990000605583191
    2. ':
' → logprob: -0.6990000605583191
    3. '       ' → logprob: -5.448999881744385
    4. '   ' → logprob: -6.573999881744385
    5. '):
' → logprob: -9.574000358581543
    6. ',' → logprob: -10.074000358581543
    7. '):' → logprob: -12.324000358581543
    8. '.' → logprob: -12.574000358581543
    9. ' :
' → logprob: -12.574000358581543
    10. '():
' → logprob: -13.074000358581543

Token 694: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1274227350950241
    2. '   ' → logprob: -2.12742280960083
    3. ' result' → logprob: -7.87742280960083
    4. 'result' → logprob: -9.502422332763672
    5. ' res' → logprob: -11.127422332763672
    6. ' results' → logprob: -12.127422332763672
    7. '```' → logprob: -12.377422332763672
    8. 'res' → logprob: -12.877422332763672
    9. '
' → logprob: -13.002422332763672
    10. '    ' → logprob: -13.252422332763672

Token 695: ' resolver' (ID: 39925)
  Prédit: 'resolver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resolver' (adapté à ' resolver') → logprob: -0.21317075192928314
    2. '   ' → logprob: -2.2131707668304443
    3. ' resolver' → logprob: -2.7131707668304443
    4. '       ' → logprob: -4.213170528411865
    5. 'result' → logprob: -6.713170528411865
    6. ' result' → logprob: -8.213171005249023
    7. 'solver' → logprob: -11.713171005249023
    8. 'res' → logprob: -12.213171005249023
    9. ' solver' → logprob: -13.963171005249023
    10. 'game' → logprob: -14.338171005249023

Token 696: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006715728435665369
    2. '=' → logprob: -5.006715774536133
    3. ' ' → logprob: -16.131715774536133
    4. '   ' → logprob: -16.631715774536133
    5. '.' → logprob: -16.881715774536133
    6. '	' → logprob: -18.381715774536133
    7. '  ' → logprob: -19.006715774536133
    8. '    ' → logprob: -19.006715774536133
    9. ' ' → logprob: -19.006715774536133
    10. 'er' → logprob: -19.006715774536133

Token 697: ' Game' (ID: 7022)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.00033546582562848926
    2. ' Game' → logprob: -8.000335693359375
    3. '   ' → logprob: -20.000335693359375
    4. '	Game' → logprob: -21.000335693359375
    5. '.Game' → logprob: -23.375335693359375
    6. '(Game' → logprob: -23.375335693359375
    7. '_Game' → logprob: -23.375335693359375
    8. '<Game' → logprob: -24.250335693359375
    9. ' ' → logprob: -24.625335693359375
    10. '       ' → logprob: -25.250335693359375

Token 698: 'Result' (ID: 2769)
  Prédit: 'Result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Result' → logprob: -1.9361264946837764e-07
    2. 'result' → logprob: -16.5
    3. '   ' → logprob: -19.75
    4. 'Results' → logprob: -20.375
    5. '	Result' → logprob: -20.875
    6. '```' → logprob: -21.625
    7. ' Result' → logprob: -21.875
    8. '_result' → logprob: -22.25
    9. '       ' → logprob: -22.625
    10. 'Res' → logprob: -22.625

Token 699: 'Resolver' (ID: 22540)
  Prédit: 'Resolver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Resolver' → logprob: -6.2729995988775045e-06
    2. 'Solver' → logprob: -12.250006675720215
    3. 'resolver' → logprob: -13.500006675720215
    4. ' Resolver' → logprob: -16.7500057220459
    5. 'olver' → logprob: -17.3750057220459
    6. 'Resol' → logprob: -19.1250057220459
    7. 'Responder' → logprob: -19.3750057220459
    8. '   ' → logprob: -19.5000057220459
    9. 'Resolvers' → logprob: -19.8750057220459
    10. ' resolver' → logprob: -20.2500057220459

Token 700: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.500000953674316
    3. '(Board' → logprob: -15.750000953674316
    4. '(b' → logprob: -17.0
    5. '(
' → logprob: -17.875
    6. 'board' → logprob: -18.375
    7. '   ' → logprob: -19.0
    8. '	board' → logprob: -19.5
    9. '.board' → logprob: -20.0
    10. '(block' → logprob: -20.25

Token 701: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7872036695480347
    2. '       ' → logprob: -1.0372036695480347
    3. ')' → logprob: -1.6622036695480347
    4. '   ' → logprob: -7.537203788757324
    5. ')
' → logprob: -9.412203788757324
    6. ').' → logprob: -9.662203788757324
    7. 'result' → logprob: -10.912203788757324
    8. ' ' → logprob: -11.912203788757324
    9. 'res' → logprob: -12.912203788757324
    10. '()
' → logprob: -13.287203788757324

Token 702: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012137912213802338
    2. 'results' → logprob: -5.0121378898620605
    3. ' results' → logprob: -5.2621378898620605
    4. 'result' → logprob: -8.887138366699219
    5. '   ' → logprob: -9.887138366699219
    6. ' result' → logprob: -10.512138366699219
    7. '	results' → logprob: -11.887138366699219
    8. '
' → logprob: -15.137138366699219
    9. '```' → logprob: -16.13713836669922
    10. '	result' → logprob: -16.63713836669922

Token 703: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.10390911996364594
    2. 'result' → logprob: -2.3539090156555176
    3. '       ' → logprob: -5.603909015655518
    4. ' results' → logprob: -11.603909492492676
    5. 'winner' → logprob: -12.978909492492676
    6. ' result' → logprob: -14.728909492492676
    7. '   ' → logprob: -15.603909492492676
    8. '	results' → logprob: -16.35390853881836
    9. '           ' → logprob: -16.72890853881836
    10. 'res' → logprob: -17.10390853881836

Token 704: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001238004770129919
    2. '.' → logprob: -9.000123977661133
    3. 'append' → logprob: -15.500123977661133
    4. '.app' → logprob: -16.125123977661133
    5. '.extend' → logprob: -16.500123977661133
    6. '.ap' → logprob: -16.875123977661133
    7. '.Append' → logprob: -18.375123977661133
    8. '_append' → logprob: -18.500123977661133
    9. '.push' → logprob: -19.750123977661133
    10. ' .' → logprob: -19.750123977661133

Token 705: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0007196996593847871
    2. 'resolver' → logprob: -7.2507195472717285
    3. 'res' → logprob: -12.500720024108887
    4. '(' → logprob: -12.500720024108887
    5. '(resolve' → logprob: -13.625720024108887
    6. '(
' → logprob: -13.875720024108887
    7. ' resolver' → logprob: -15.500720024108887
    8. ' (' → logprob: -18.50071907043457
    9. '   ' → logprob: -18.87571907043457
    10. '```' → logprob: -19.00071907043457

Token 706: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -0.09346969425678253
    2. 'ove' → logprob: -2.7184696197509766
    3. 'over' → logprob: -3.9684696197509766
    4. 'olve' → logprob: -6.093469619750977
    5. 'uter' → logprob: -7.218469619750977
    6. 'ute' → logprob: -8.593469619750977
    7. 'inder' → logprob: -8.593469619750977
    8. 'er' → logprob: -8.843469619750977
    9. 'ander' → logprob: -9.093469619750977
    10. 'oder' → logprob: -9.218469619750977

Token 707: '.resolve' (ID: 26667)
  Prédit: '.resolve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.resolve' → logprob: -3.190178904333152e-05
    2. 'resolve' → logprob: -10.500031471252441
    3. '.' → logprob: -12.625031471252441
    4. '.solve' → logprob: -14.125031471252441
    5. ' .' → logprob: -16.250032424926758
    6. '_.' → logprob: -17.625032424926758
    7. '	resolve' → logprob: -18.125032424926758
    8. ').' → logprob: -18.250032424926758
    9. '.Resolve' → logprob: -18.375032424926758
    10. '(resolve' → logprob: -19.250032424926758

Token 708: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -1.9361264946837764e-07
    2. 'winner' → logprob: -16.625
    3. '_' → logprob: -17.875
    4. '_b' → logprob: -19.375
    5. '_writer' → logprob: -20.0
    6. '   ' → logprob: -20.125
    7. ' winner' → logprob: -20.25
    8. '(_' → logprob: -20.25
    9. '()' → logprob: -20.5
    10. '_s' → logprob: -20.75

Token 709: 'inner' (ID: 6484)
  Prédit: 'inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -1.3306015716807451e-05
    2. 'winner' → logprob: -11.87501335144043
    3. 'nner' → logprob: -13.00001335144043
    4. '_inner' → logprob: -13.00001335144043
    5. 'unner' → logprob: -14.62501335144043
    6. 'inn' → logprob: -15.25001335144043
    7. 'Inner' → logprob: -15.50001335144043
    8. 'inne' → logprob: -15.87501335144043
    9. '(inner' → logprob: -15.87501335144043
    10. 'Winner' → logprob: -16.25001335144043

Token 710: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0004444931691978127
    2. '()' → logprob: -7.750444412231445
    3. '())
' → logprob: -11.250444412231445
    4. ' ())' → logprob: -14.875444412231445
    5. ')' → logprob: -15.250444412231445
    6. '())

' → logprob: -16.125444412231445
    7. '()))' → logprob: -17.250444412231445
    8. '(board' → logprob: -17.250444412231445
    9. '()
' → logprob: -17.375444412231445
    10. '())
' → logprob: -17.750444412231445

Token 711: '   ' (ID: 271)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.10272597521543503
    2. '   ' → logprob: -2.3527259826660156
    3. '
' → logprob: -6.102725982666016
    4. ' Output' → logprob: -8.727725982666016
    5. '	Output' → logprob: -9.227725982666016
    6. '```' → logprob: -11.477725982666016
    7. '    
' → logprob: -12.102725982666016
    8. '_output' → logprob: -13.852725982666016
    9. '
' → logprob: -14.352725982666016
    10. '(Output' → logprob: -14.352725982666016

Token 712: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' (adapté à ' Output') → logprob: -1.9361264946837764e-07
    2. 'output' → logprob: -17.0
    3. ' Output' → logprob: -17.5
    4. '	Output' → logprob: -21.25
    5. '   ' → logprob: -22.125
    6. '
' → logprob: -22.875
    7. '_output' → logprob: -23.75
    8. '    
' → logprob: -24.0
    9. '(Output' → logprob: -24.5
    10. '_Output' → logprob: -24.5

Token 713: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: 0.0
    2. 'Process' → logprob: -21.125
    3. 'Processors' → logprob: -22.125
    4. 'Output' → logprob: -22.625
    5. ' Processor' → logprob: -24.125
    6. 'Processed' → logprob: -24.125
    7. 'Producer' → logprob: -24.5
    8. '_processor' → logprob: -24.625
    9. 'Processing' → logprob: -25.125
    10. 'Proces' → logprob: -25.125

Token 714: '.print' (ID: 2853)
  Prédit: '.print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.print' → logprob: -5.919942486798391e-05
    2. '.' → logprob: -9.750059127807617
    3. '.println' → logprob: -14.250059127807617
    4. ' .' → logprob: -16.625059127807617
    5. 'print' → logprob: -17.375059127807617
    6. '​.' → logprob: -17.625059127807617
    7. '.printf' → logprob: -18.125059127807617
    8. '.Print' → logprob: -18.625059127807617
    9. '.output' → logprob: -19.250059127807617
    10. '.write' → logprob: -19.250059127807617

Token 715: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -7.896309739408025e-07
    2. 'Results' → logprob: -14.750000953674316
    3. '_' → logprob: -15.125000953674316
    4. 'results' → logprob: -18.25
    5. '__' → logprob: -19.125
    6. '_result' → logprob: -19.625
    7. '(results' → logprob: -19.625
    8. '_RESULTS' → logprob: -19.75
    9. '
' → logprob: -20.75
    10. 's' → logprob: -20.875

Token 716: '(results' (ID: 42655)
  Prédit: '(results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.875
    3. ' (' → logprob: -17.25
    4. 'results' → logprob: -17.875
    5. '(
' → logprob: -20.75
    6. '(result' → logprob: -21.25
    7. '(list' → logprob: -21.75
    8. ' results' → logprob: -22.25
    9. '	results' → logprob: -22.75
    10. '(outputs' → logprob: -23.0

Token 717: ')


' (ID: 7861)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0014136888785287738
    2. '())' → logprob: -6.626413822174072
    3. '()
' → logprob: -9.501413345336914
    4. ')' → logprob: -12.251413345336914
    5. '(' → logprob: -12.751413345336914
    6. ' ()' → logprob: -13.376413345336914
    7. '()]' → logprob: -14.126413345336914
    8. '(results' → logprob: -14.626413345336914
    9. '()

' → logprob: -14.876413345336914
    10. '()`' → logprob: -14.876413345336914

Token 718: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.128163257315464e-07
    2. ' if' → logprob: -15.25
    3. '```' → logprob: -17.625
    4. '#' → logprob: -19.25
    5. 'If' → logprob: -22.5
    6. '#if' → logprob: -22.625
    7. 'main' → logprob: -23.0
    8. '	if' → logprob: -23.125
    9. '
' → logprob: -23.5
    10. '    
' → logprob: -24.25

Token 719: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07008593529462814
    2. '__' → logprob: -2.6950860023498535
    3. '_' → logprob: -9.570085525512695
    4. ' ' → logprob: -10.070085525512695
    5. '_name' → logprob: -10.570085525512695
    6. 'name' → logprob: -12.570085525512695
    7. ' ' → logprob: -12.820085525512695
    8. '___' → logprob: -13.070085525512695
    9. ' ' → logprob: -13.695085525512695
    10. ' _' → logprob: -14.070085525512695

Token 720: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.30900639295578003
    2. ' ==' → logprob: -1.5590064525604248
    3. '==' → logprob: -3.434006452560425
    4. 'name' → logprob: -4.309006214141846
    5. ' __' → logprob: -5.184006214141846
    6. 'if' → logprob: -6.309006214141846
    7. '.__' → logprob: -6.559006214141846
    8. '=="' → logprob: -7.809006214141846
    9. '=='' → logprob: -8.559006690979004
    10. '_name' → logprob: -9.434006690979004

Token 721: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.704273118884885e-07
    2. '==' → logprob: -15.250000953674316
    3. '__.__' → logprob: -15.375000953674316
    4. '__.' → logprob: -17.125
    5. '___' → logprob: -17.5
    6. '__
' → logprob: -17.625
    7. '____' → logprob: -18.0
    8. ' ==' → logprob: -18.625
    9. 'name' → logprob: -19.375
    10. '__('' → logprob: -20.25

Token 722: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.023595884442329407
    2. '==' → logprob: -4.148595809936523
    3. ' ==' → logprob: -4.898595809936523
    4. '=='' → logprob: -10.273595809936523
    5. '=="' → logprob: -10.898595809936523
    6. '__.__' → logprob: -11.398595809936523
    7. '__.' → logprob: -12.398595809936523
    8. '.__' → logprob: -13.273595809936523
    9. '_' → logprob: -13.273595809936523
    10. '___' → logprob: -13.523595809936523

Token 723: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10023763030767441
    2. ''' → logprob: -2.3502376079559326
    3. ' "__' → logprob: -10.975237846374512
    4. '__' → logprob: -11.350237846374512
    5. ' '__' → logprob: -13.350237846374512
    6. ''"' → logprob: -16.100236892700195
    7. '"user' → logprob: -16.475236892700195
    8. ' "' → logprob: -16.725236892700195
    9. '"name' → logprob: -16.725236892700195
    10. '`' → logprob: -16.975236892700195

Token 724: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0004167297447565943
    2. '__' → logprob: -7.8754167556762695
    3. 'name' → logprob: -10.37541675567627
    4. '"' → logprob: -12.25041675567627
    5. '_main' → logprob: -15.62541675567627
    6. ' main' → logprob: -15.62541675567627
    7. ''' → logprob: -15.75041675567627
    8. 'ma' → logprob: -17.250415802001953
    9. '-main' → logprob: -17.375415802001953
    10. 'built' → logprob: -17.625415802001953

Token 725: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.03809806704521179
    2. '__' → logprob: -3.288098096847534
    3. '__':
' → logprob: -9.788098335266113
    4. '__.' → logprob: -15.663098335266113
    5. '__:' → logprob: -15.788098335266113
    6. '__["' → logprob: -16.788097381591797
    7. '__
' → logprob: -17.163097381591797
    8. '__.__' → logprob: -17.413097381591797
    9. '__",' → logprob: -17.538097381591797
    10. '_' → logprob: -17.538097381591797

Token 726: '   ' (ID: 271)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.039592768996953964
    2. 'main' → logprob: -3.289592742919922
    3. ' main' → logprob: -6.914592742919922
    4. ' __' → logprob: -8.289592742919922
    5. '   ' → logprob: -8.789592742919922
    6. '_main' → logprob: -9.789592742919922
    7. '__":
' → logprob: -10.039592742919922
    8. '____' → logprob: -11.289592742919922
    9. '__
' → logprob: -11.664592742919922
    10. '___' → logprob: -11.914592742919922

Token 727: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -15.75
    3. '   ' → logprob: -20.625
    4. '	main' → logprob: -21.625
    5. 'import' → logprob: -23.375
    6. '.main' → logprob: -24.375
    7. '_main' → logprob: -24.375
    8. '(main' → logprob: -26.625
    9. 'Main' → logprob: -27.625
    10. 'ma' → logprob: -27.75

Token 728: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 726
Tokens correctement prédits (1ère position, stricte): 361
Tokens correctement prédits (1ère position, avec adaptation): 408
Tokens correctement prédits (top 10): 663
Précision stricte (1ère position): 49.72%
Précision adaptée (1ère position): 56.20%
Précision (top 10): 91.32%
================================================================================
